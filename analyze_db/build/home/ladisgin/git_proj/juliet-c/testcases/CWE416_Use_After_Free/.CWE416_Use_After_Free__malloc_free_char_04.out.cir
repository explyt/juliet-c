!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc72 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":175:10)
#loc73 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":175:14)
#loc74 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":175:20)
#loc75 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":175:32)
#loc290 = loc(fused[#loc72, #loc73])
#loc291 = loc(fused[#loc74, #loc75])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_char_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc262)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc263)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc264)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc265)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_char_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc267)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc268)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc17)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc17)
      cir.if %3 {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc19)
        %5 = cir.const #cir.int<100> : !s32i loc(#loc20)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc20)
        %7 = cir.const #cir.int<1> : !u64i loc(#loc271)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc272)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc19)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc273)
        cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc274)
        cir.scope {
          %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
          %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc28)
          %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc28)
          %31 = cir.cmp(eq, %28, %30) : !cir.ptr<!s8i>, !cir.bool loc(#loc276)
          cir.if %31 {
            %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc30)
            %33 = cir.const #cir.int<1> : !s32i loc(#loc31)
            %34 = cir.unary(minus, %33) : !s32i, !s32i loc(#loc32)
            cir.call @exit(%34) : (!s32i) -> () extra(#fn_attr) loc(#loc30)
          } loc(#loc277)
        } loc(#loc275)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc33)
        %13 = cir.const #cir.int<65> : !s32i loc(#loc34)
        %14 = cir.const #cir.int<100> : !s32i loc(#loc35)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc36)
        %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc35)
        %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc35)
        cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc278)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc39)
        %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc39)
        %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
        %21 = cir.const #cir.int<100> : !s32i loc(#loc41)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc42)
        %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc41)
        %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc43)
        cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc279)
        %25 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc44)
        %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
        %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc45)
        cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc44)
      } loc(#loc270)
    } loc(#loc269)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc48)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc48)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc51)
      } loc(#loc281)
    } loc(#loc280)
    cir.return loc(#loc10)
  } loc(#loc266)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_char_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc283)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc284)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc56)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc285)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc286)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    cir.return loc(#loc53)
  } loc(#loc282)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc287)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc288)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc69)
  cir.func @main(%arg0: !s32i loc(fused[#loc72, #loc73]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc74, #loc75])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc290)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc291)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc71)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc76)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc76)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc77)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc78)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc78)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc79)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc66)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %8 = cir.get_global @CWE416_Use_After_Free__malloc_free_char_04_good : !cir.ptr<!cir.func<!void ()>> loc(#loc292)
    cir.call @CWE416_Use_After_Free__malloc_free_char_04_good() : () -> () loc(#loc81)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc67)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc68)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %13 = cir.get_global @CWE416_Use_After_Free__malloc_free_char_04_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc293)
    cir.call @CWE416_Use_After_Free__malloc_free_char_04_bad() : () -> () loc(#loc85)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc69)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc88)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc294)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc294)
    cir.return %17 : !s32i loc(#loc294)
  } loc(#loc289)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc90)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc296)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc95)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc297)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc99)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc99)
      cir.if %3 {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc101)
        %5 = cir.const #cir.int<100> : !s32i loc(#loc102)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc102)
        %7 = cir.const #cir.int<1> : !u64i loc(#loc300)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc301)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc101)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc302)
        cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc303)
        cir.scope {
          %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
          %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc110)
          %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc110)
          %31 = cir.cmp(eq, %28, %30) : !cir.ptr<!s8i>, !cir.bool loc(#loc305)
          cir.if %31 {
            %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc112)
            %33 = cir.const #cir.int<1> : !s32i loc(#loc113)
            %34 = cir.unary(minus, %33) : !s32i, !s32i loc(#loc114)
            cir.call @exit(%34) : (!s32i) -> () extra(#fn_attr) loc(#loc112)
          } loc(#loc306)
        } loc(#loc304)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc115)
        %13 = cir.const #cir.int<65> : !s32i loc(#loc116)
        %14 = cir.const #cir.int<100> : !s32i loc(#loc117)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc118)
        %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc117)
        %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc117)
        cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc307)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc121)
        %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc121)
        %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
        %21 = cir.const #cir.int<100> : !s32i loc(#loc123)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc124)
        %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc123)
        %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc125)
        cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc308)
        %25 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc126)
        %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
        %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc127)
        cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc126)
      } loc(#loc299)
    } loc(#loc298)
    cir.scope {
      %2 = cir.const #cir.int<0> : !s32i loc(#loc130)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc130)
      cir.if %3 {
        %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc90)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc90)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc134)
      } else {
      } loc(#loc310)
    } loc(#loc309)
    cir.return loc(#loc92)
  } loc(#loc295)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc312)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc139)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc313)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc143)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc143)
      cir.if %3 {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc145)
        %5 = cir.const #cir.int<100> : !s32i loc(#loc146)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc146)
        %7 = cir.const #cir.int<1> : !u64i loc(#loc316)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc317)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc145)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc318)
        cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc319)
        cir.scope {
          %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
          %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc154)
          %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc154)
          %31 = cir.cmp(eq, %28, %30) : !cir.ptr<!s8i>, !cir.bool loc(#loc321)
          cir.if %31 {
            %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc156)
            %33 = cir.const #cir.int<1> : !s32i loc(#loc157)
            %34 = cir.unary(minus, %33) : !s32i, !s32i loc(#loc158)
            cir.call @exit(%34) : (!s32i) -> () extra(#fn_attr) loc(#loc156)
          } loc(#loc322)
        } loc(#loc320)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc159)
        %13 = cir.const #cir.int<65> : !s32i loc(#loc160)
        %14 = cir.const #cir.int<100> : !s32i loc(#loc161)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc162)
        %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc161)
        %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc161)
        cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc323)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc165)
        %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc165)
        %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
        %21 = cir.const #cir.int<100> : !s32i loc(#loc167)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc168)
        %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc167)
        %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc169)
        cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc324)
        %25 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc170)
        %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc171)
        %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc171)
        cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc170)
      } loc(#loc315)
    } loc(#loc314)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc174)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc174)
      cir.if %3 {
      } loc(#loc326)
    } loc(#loc325)
    cir.return loc(#loc136)
  } loc(#loc311)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc328)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc180)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc329)
    cir.scope {
      %2 = cir.const #cir.int<0> : !s32i loc(#loc184)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc184)
      cir.if %3 {
        %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc188)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc188)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc189)
      } else {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc190)
        %5 = cir.const #cir.int<100> : !s32i loc(#loc191)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc191)
        %7 = cir.const #cir.int<1> : !u64i loc(#loc332)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc333)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc190)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc334)
        cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc335)
        cir.scope {
          %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc198)
          %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc199)
          %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc199)
          %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc337)
          cir.if %28 {
            %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc201)
            %30 = cir.const #cir.int<1> : !s32i loc(#loc202)
            %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc203)
            cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc201)
          } loc(#loc338)
        } loc(#loc336)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc204)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc204)
        %13 = cir.const #cir.int<65> : !s32i loc(#loc205)
        %14 = cir.const #cir.int<100> : !s32i loc(#loc206)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc207)
        %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc206)
        %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc206)
        cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc339)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc210)
        %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc210)
        %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc211)
        %21 = cir.const #cir.int<100> : !s32i loc(#loc212)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc213)
        %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc212)
        %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc214)
        cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc340)
      } loc(#loc331)
    } loc(#loc330)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc217)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc217)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc219)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc220)
      } loc(#loc342)
    } loc(#loc341)
    cir.return loc(#loc177)
  } loc(#loc327)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc344)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc225)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc345)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc229)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc229)
      cir.if %3 {
        %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc231)
        %5 = cir.const #cir.int<100> : !s32i loc(#loc232)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc232)
        %7 = cir.const #cir.int<1> : !u64i loc(#loc348)
        %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc349)
        %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc231)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc350)
        cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc351)
        cir.scope {
          %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc239)
          %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc240)
          %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc240)
          %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc353)
          cir.if %28 {
            %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc242)
            %30 = cir.const #cir.int<1> : !s32i loc(#loc243)
            %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc244)
            cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc242)
          } loc(#loc354)
        } loc(#loc352)
        %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc245)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc245)
        %13 = cir.const #cir.int<65> : !s32i loc(#loc246)
        %14 = cir.const #cir.int<100> : !s32i loc(#loc247)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc248)
        %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc247)
        %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc247)
        cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc355)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc251)
        %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc251)
        %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc252)
        %21 = cir.const #cir.int<100> : !s32i loc(#loc253)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc254)
        %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc253)
        %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc255)
        cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc356)
      } loc(#loc347)
    } loc(#loc346)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc258)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc258)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc260)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc261)
      } loc(#loc358)
    } loc(#loc357)
    cir.return loc(#loc222)
  } loc(#loc343)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_char_04.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":30:1)
#loc10 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":50:1)
#loc11 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":32:5)
#loc12 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":32:12)
#loc13 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":34:12)
#loc14 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":34:5)
#loc15 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":35:5)
#loc16 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":43:5)
#loc17 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":35:8)
#loc18 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":36:5)
#loc19 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":37:24)
#loc20 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":37:31)
#loc21 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":37:35)
#loc22 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":37:46)
#loc23 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":37:47)
#loc24 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":37:9)
#loc25 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":38:9)
#loc26 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":38:37)
#loc27 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":38:13)
#loc28 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":38:21)
#loc29 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":38:27)
#loc30 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":38:28)
#loc31 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":38:34)
#loc32 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":38:33)
#loc33 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":39:16)
#loc34 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":39:22)
#loc35 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":39:27)
#loc36 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":39:31)
#loc37 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":39:9)
#loc38 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":39:32)
#loc39 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":40:23)
#loc40 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":40:9)
#loc41 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":40:14)
#loc42 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":40:18)
#loc43 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":40:19)
#loc44 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":42:9)
#loc45 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":42:14)
#loc46 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":44:5)
#loc47 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":49:5)
#loc48 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":44:8)
#loc49 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":45:5)
#loc50 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":47:19)
#loc51 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":47:9)
#loc52 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":158:1)
#loc53 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":164:1)
#loc54 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":160:5)
#loc55 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":160:14)
#loc56 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":161:5)
#loc57 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":161:14)
#loc58 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":162:5)
#loc59 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":162:14)
#loc60 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":163:5)
#loc61 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":163:14)
#loc62 = loc("/usr/include/stdlib.h":575:1)
#loc63 = loc("/usr/include/stdlib.h":575:41)
#loc64 = loc("/usr/include/time.h":76:1)
#loc65 = loc("/usr/include/time.h":76:38)
#loc66 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":180:15)
#loc67 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":182:15)
#loc68 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":185:15)
#loc69 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":187:15)
#loc70 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":175:1)
#loc71 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":190:1)
#loc76 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":176:1)
#loc77 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":178:27)
#loc78 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":178:22)
#loc79 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":178:5)
#loc80 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":180:5)
#loc81 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":181:5)
#loc82 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":181:53)
#loc83 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":182:5)
#loc84 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":185:5)
#loc85 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":186:5)
#loc86 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":186:52)
#loc87 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":187:5)
#loc88 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":189:12)
#loc89 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":189:5)
#loc90 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":74:19)
#loc91 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":57:1)
#loc92 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":83:1)
#loc93 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":59:5)
#loc94 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":59:12)
#loc95 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":61:12)
#loc96 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":61:5)
#loc97 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":62:5)
#loc98 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":70:5)
#loc99 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":62:8)
#loc100 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":63:5)
#loc101 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":64:24)
#loc102 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":64:31)
#loc103 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":64:35)
#loc104 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":64:46)
#loc105 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":64:47)
#loc106 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":64:9)
#loc107 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":65:9)
#loc108 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":65:37)
#loc109 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":65:13)
#loc110 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":65:21)
#loc111 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":65:27)
#loc112 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":65:28)
#loc113 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":65:34)
#loc114 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":65:33)
#loc115 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":66:16)
#loc116 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":66:22)
#loc117 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":66:27)
#loc118 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":66:31)
#loc119 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":66:9)
#loc120 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":66:32)
#loc121 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":67:23)
#loc122 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":67:9)
#loc123 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":67:14)
#loc124 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":67:18)
#loc125 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":67:19)
#loc126 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":69:9)
#loc127 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":69:14)
#loc128 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":71:5)
#loc129 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":82:5)
#loc130 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":71:8)
#loc131 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":72:5)
#loc132 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":75:5)
#loc133 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":77:5)
#loc134 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":74:9)
#loc135 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":86:1)
#loc136 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":107:1)
#loc137 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":88:5)
#loc138 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":88:12)
#loc139 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":90:12)
#loc140 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":90:5)
#loc141 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":91:5)
#loc142 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":99:5)
#loc143 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":91:8)
#loc144 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":92:5)
#loc145 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":93:24)
#loc146 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":93:31)
#loc147 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":93:35)
#loc148 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":93:46)
#loc149 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":93:47)
#loc150 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":93:9)
#loc151 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":94:9)
#loc152 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":94:37)
#loc153 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":94:13)
#loc154 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":94:21)
#loc155 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":94:27)
#loc156 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":94:28)
#loc157 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":94:34)
#loc158 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":94:33)
#loc159 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":95:16)
#loc160 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":95:22)
#loc161 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":95:27)
#loc162 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":95:31)
#loc163 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":95:9)
#loc164 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":95:32)
#loc165 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":96:23)
#loc166 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":96:9)
#loc167 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":96:14)
#loc168 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":96:18)
#loc169 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":96:19)
#loc170 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":98:9)
#loc171 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":98:14)
#loc172 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":100:5)
#loc173 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":106:5)
#loc174 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":100:8)
#loc175 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":101:5)
#loc176 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":110:1)
#loc177 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":134:1)
#loc178 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":112:5)
#loc179 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":112:12)
#loc180 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":114:12)
#loc181 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":114:5)
#loc182 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":115:5)
#loc183 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":127:5)
#loc184 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":115:8)
#loc185 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":116:5)
#loc186 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":119:5)
#loc187 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":121:5)
#loc188 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":118:19)
#loc189 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":118:9)
#loc190 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":122:24)
#loc191 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":122:31)
#loc192 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":122:35)
#loc193 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":122:46)
#loc194 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":122:47)
#loc195 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":122:9)
#loc196 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":123:9)
#loc197 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":123:37)
#loc198 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":123:13)
#loc199 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":123:21)
#loc200 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":123:27)
#loc201 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":123:28)
#loc202 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":123:34)
#loc203 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":123:33)
#loc204 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":124:16)
#loc205 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":124:22)
#loc206 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":124:27)
#loc207 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":124:31)
#loc208 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":124:9)
#loc209 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":124:32)
#loc210 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":125:23)
#loc211 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":125:9)
#loc212 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":125:14)
#loc213 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":125:18)
#loc214 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":125:19)
#loc215 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":128:5)
#loc216 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":133:5)
#loc217 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":128:8)
#loc218 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":129:5)
#loc219 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":131:19)
#loc220 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":131:9)
#loc221 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":137:1)
#loc222 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":156:1)
#loc223 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":139:5)
#loc224 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":139:12)
#loc225 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":141:12)
#loc226 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":141:5)
#loc227 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":142:5)
#loc228 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":149:5)
#loc229 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":142:8)
#loc230 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":143:5)
#loc231 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":144:24)
#loc232 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":144:31)
#loc233 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":144:35)
#loc234 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":144:46)
#loc235 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":144:47)
#loc236 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":144:9)
#loc237 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":145:9)
#loc238 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":145:37)
#loc239 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":145:13)
#loc240 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":145:21)
#loc241 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":145:27)
#loc242 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":145:28)
#loc243 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":145:34)
#loc244 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":145:33)
#loc245 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":146:16)
#loc246 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":146:22)
#loc247 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":146:27)
#loc248 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":146:31)
#loc249 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":146:9)
#loc250 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":146:32)
#loc251 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":147:23)
#loc252 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":147:9)
#loc253 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":147:14)
#loc254 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":147:18)
#loc255 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":147:19)
#loc256 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":150:5)
#loc257 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":155:5)
#loc258 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":150:8)
#loc259 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":151:5)
#loc260 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":153:19)
#loc261 = loc("CWE416_Use_After_Free__malloc_free_char_04.c":153:9)
#loc262 = loc(fused[#loc1, #loc2])
#loc263 = loc(fused[#loc3, #loc4])
#loc264 = loc(fused[#loc5, #loc6])
#loc265 = loc(fused[#loc7, #loc8])
#loc266 = loc(fused[#loc9, #loc10])
#loc267 = loc(fused[#loc11, #loc12])
#loc268 = loc(fused[#loc14, #loc13])
#loc269 = loc(fused[#loc15, #loc16])
#loc270 = loc(fused[#loc18, #loc16])
#loc271 = loc(fused[#loc21, #loc22])
#loc272 = loc(fused[#loc20, #loc22])
#loc273 = loc(fused[#loc19, #loc23])
#loc274 = loc(fused[#loc24, #loc23])
#loc275 = loc(fused[#loc25, #loc26])
#loc276 = loc(fused[#loc27, #loc28])
#loc277 = loc(fused[#loc29, #loc26])
#loc278 = loc(fused[#loc37, #loc38])
#loc279 = loc(fused[#loc40, #loc39])
#loc280 = loc(fused[#loc46, #loc47])
#loc281 = loc(fused[#loc49, #loc47])
#loc282 = loc(fused[#loc52, #loc53])
#loc283 = loc(fused[#loc54, #loc55])
#loc284 = loc(fused[#loc56, #loc57])
#loc285 = loc(fused[#loc58, #loc59])
#loc286 = loc(fused[#loc60, #loc61])
#loc287 = loc(fused[#loc62, #loc63])
#loc288 = loc(fused[#loc64, #loc65])
#loc289 = loc(fused[#loc70, #loc71])
#loc292 = loc(fused[#loc81, #loc82])
#loc293 = loc(fused[#loc85, #loc86])
#loc294 = loc(fused[#loc89, #loc88])
#loc295 = loc(fused[#loc91, #loc92])
#loc296 = loc(fused[#loc93, #loc94])
#loc297 = loc(fused[#loc96, #loc95])
#loc298 = loc(fused[#loc97, #loc98])
#loc299 = loc(fused[#loc100, #loc98])
#loc300 = loc(fused[#loc103, #loc104])
#loc301 = loc(fused[#loc102, #loc104])
#loc302 = loc(fused[#loc101, #loc105])
#loc303 = loc(fused[#loc106, #loc105])
#loc304 = loc(fused[#loc107, #loc108])
#loc305 = loc(fused[#loc109, #loc110])
#loc306 = loc(fused[#loc111, #loc108])
#loc307 = loc(fused[#loc119, #loc120])
#loc308 = loc(fused[#loc122, #loc121])
#loc309 = loc(fused[#loc128, #loc129])
#loc310 = loc(fused[#loc131, #loc132, #loc133, #loc129])
#loc311 = loc(fused[#loc135, #loc136])
#loc312 = loc(fused[#loc137, #loc138])
#loc313 = loc(fused[#loc140, #loc139])
#loc314 = loc(fused[#loc141, #loc142])
#loc315 = loc(fused[#loc144, #loc142])
#loc316 = loc(fused[#loc147, #loc148])
#loc317 = loc(fused[#loc146, #loc148])
#loc318 = loc(fused[#loc145, #loc149])
#loc319 = loc(fused[#loc150, #loc149])
#loc320 = loc(fused[#loc151, #loc152])
#loc321 = loc(fused[#loc153, #loc154])
#loc322 = loc(fused[#loc155, #loc152])
#loc323 = loc(fused[#loc163, #loc164])
#loc324 = loc(fused[#loc166, #loc165])
#loc325 = loc(fused[#loc172, #loc173])
#loc326 = loc(fused[#loc175, #loc173])
#loc327 = loc(fused[#loc176, #loc177])
#loc328 = loc(fused[#loc178, #loc179])
#loc329 = loc(fused[#loc181, #loc180])
#loc330 = loc(fused[#loc182, #loc183])
#loc331 = loc(fused[#loc185, #loc186, #loc187, #loc183])
#loc332 = loc(fused[#loc192, #loc193])
#loc333 = loc(fused[#loc191, #loc193])
#loc334 = loc(fused[#loc190, #loc194])
#loc335 = loc(fused[#loc195, #loc194])
#loc336 = loc(fused[#loc196, #loc197])
#loc337 = loc(fused[#loc198, #loc199])
#loc338 = loc(fused[#loc200, #loc197])
#loc339 = loc(fused[#loc208, #loc209])
#loc340 = loc(fused[#loc211, #loc210])
#loc341 = loc(fused[#loc215, #loc216])
#loc342 = loc(fused[#loc218, #loc216])
#loc343 = loc(fused[#loc221, #loc222])
#loc344 = loc(fused[#loc223, #loc224])
#loc345 = loc(fused[#loc226, #loc225])
#loc346 = loc(fused[#loc227, #loc228])
#loc347 = loc(fused[#loc230, #loc228])
#loc348 = loc(fused[#loc233, #loc234])
#loc349 = loc(fused[#loc232, #loc234])
#loc350 = loc(fused[#loc231, #loc235])
#loc351 = loc(fused[#loc236, #loc235])
#loc352 = loc(fused[#loc237, #loc238])
#loc353 = loc(fused[#loc239, #loc240])
#loc354 = loc(fused[#loc241, #loc238])
#loc355 = loc(fused[#loc249, #loc250])
#loc356 = loc(fused[#loc252, #loc251])
#loc357 = loc(fused[#loc256, #loc257])
#loc358 = loc(fused[#loc259, #loc257])
