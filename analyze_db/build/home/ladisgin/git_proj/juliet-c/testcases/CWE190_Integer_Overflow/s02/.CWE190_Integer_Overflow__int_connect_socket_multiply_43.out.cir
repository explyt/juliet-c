!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc18 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":47:23)
#loc19 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":47:28)
#loc129 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":126:27)
#loc130 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":126:32)
#loc153 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":147:27)
#loc154 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":147:32)
#loc284 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":247:10)
#loc285 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":247:14)
#loc286 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":247:20)
#loc287 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":247:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc308 = loc(fused[#loc18, #loc19])
#loc350 = loc(fused[#loc129, #loc130])
#loc360 = loc(fused[#loc153, #loc154])
#loc409 = loc(fused[#loc284, #loc285])
#loc410 = loc(fused[#loc286, #loc287])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc300)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc301)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc302)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc303)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc304)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc305)
  cir.func private @close(!s32i) -> !s32i loc(#loc306)
  cir.func internal private @_ZN55CWE190_Integer_Overflow__int_connect_socket_multiply_43L9badSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc18, #loc19])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc308)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc20)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc310)
      %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc311)
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc312)
      %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc313)
      %5 = cir.const #cir.int<1> : !s32i loc(#loc28)
      %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc28)
      cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc312)
      cir.scope {
        cir.do {
          %7 = cir.const #cir.int<2> : !s32i loc(#loc33)
          %8 = cir.const #cir.int<1> : !u32i loc(#loc34)
          %9 = cir.cast(integral, %8 : !u32i), !s32i loc(#loc34)
          %10 = cir.const #cir.int<6> : !u32i loc(#loc35)
          %11 = cir.cast(integral, %10 : !u32i), !s32i loc(#loc35)
          %12 = cir.call @socket(%7, %9, %11) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc36)
          cir.store %12, %3 : !s32i, !cir.ptr<!s32i> loc(#loc315)
          cir.scope {
            %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc41)
            %52 = cir.const #cir.int<1> : !s32i loc(#loc42)
            %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc42)
            %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc317)
            cir.if %54 {
              cir.break loc(#loc44)
            } loc(#loc318)
          } loc(#loc316)
          %13 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc319)
          %14 = cir.const #cir.int<0> : !s32i loc(#loc47)
          %15 = cir.const #cir.int<16> : !u64i loc(#loc320)
          cir.libc.memset %15 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc321)
          %16 = cir.const #cir.int<2> : !s32i loc(#loc52)
          %17 = cir.cast(integral, %16 : !s32i), !u16i loc(#loc52)
          %18 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc53)
          cir.store %17, %18 : !u16i, !cir.ptr<!u16i> loc(#loc322)
          %19 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
          %21 = cir.call @inet_addr(%20) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc55)
          %22 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc56)
          %23 = cir.get_member %22[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc57)
          cir.store %21, %23 : !u32i, !cir.ptr<!u32i> loc(#loc323)
          %24 = cir.const #cir.int<27015> : !s32i loc(#loc60)
          %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc60)
          %26 = cir.call @htons(%25) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc61)
          %27 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
          cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc324)
          cir.scope {
            %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc67)
            %52 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc326)
            %53 = cir.const #cir.int<16> : !u64i loc(#loc327)
            %54 = cir.cast(integral, %53 : !u64i), !u32i loc(#loc327)
            %55 = cir.call @connect(%51, %52, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc72)
            %56 = cir.const #cir.int<1> : !s32i loc(#loc73)
            %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc73)
            %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc328)
            cir.if %58 {
              cir.break loc(#loc75)
            } loc(#loc329)
          } loc(#loc325)
          %28 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc76)
          %29 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc77)
          %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc77)
          %31 = cir.const #cir.int<3> : !s32i loc(#loc78)
          %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc78)
          %33 = cir.const #cir.int<4> : !u64i loc(#loc78)
          %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc78)
          %35 = cir.const #cir.int<2> : !s32i loc(#loc78)
          %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc78)
          %37 = cir.binop(add, %34, %36) : !u64i loc(#loc78)
          %38 = cir.const #cir.int<1> : !s32i loc(#loc79)
          %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc79)
          %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc330)
          %41 = cir.const #cir.int<0> : !s32i loc(#loc80)
          %42 = cir.call @recv(%28, %30, %40, %41) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc81)
          %43 = cir.cast(integral, %42 : !s64i), !s32i loc(#loc81)
          cir.store %43, %1 : !s32i, !cir.ptr<!s32i> loc(#loc331)
          cir.scope {
            %51 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc86)
            %52 = cir.const #cir.int<1> : !s32i loc(#loc87)
            %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc87)
            %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc333)
            %55 = cir.ternary(%54, true {
              %56 = cir.const #true loc(#loc88)
              cir.yield %56 : !cir.bool loc(#loc88)
            }, false {
              %56 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc89)
              %57 = cir.const #cir.int<0> : !s32i loc(#loc90)
              %58 = cir.cmp(eq, %56, %57) : !s32i, !cir.bool loc(#loc334)
              %59 = cir.ternary(%58, true {
                %60 = cir.const #true loc(#loc88)
                cir.yield %60 : !cir.bool loc(#loc88)
              }, false {
                %60 = cir.const #false loc(#loc88)
                cir.yield %60 : !cir.bool loc(#loc88)
              }) : (!cir.bool) -> !cir.bool loc(#loc88)
              cir.yield %59 : !cir.bool loc(#loc88)
            }) : (!cir.bool) -> !cir.bool loc(#loc88)
            cir.if %55 {
              cir.break loc(#loc92)
            } loc(#loc335)
          } loc(#loc332)
          %44 = cir.const #cir.int<0> : !s8i loc(#loc93)
          %45 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc94)
          %46 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc95)
          %47 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %45 : !s32i), !cir.ptr<!s8i> loc(#loc95)
          cir.store %44, %47 : !s8i, !cir.ptr<!s8i> loc(#loc336)
          %48 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc96)
          %49 = cir.call @atoi(%48) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc97)
          %50 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc98)
          cir.store %49, %50 : !s32i, !cir.ptr<!s32i> loc(#loc337)
          cir.yield loc(#loc32)
        } while {
          %7 = cir.const #cir.int<0> : !s32i loc(#loc100)
          %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc100)
          cir.condition(%8) loc(#loc100)
        } loc(#loc314)
      } loc(#loc314)
      cir.scope {
        %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc103)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc104)
        %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc104)
        %10 = cir.cmp(ne, %7, %9) : !s32i, !cir.bool loc(#loc339)
        cir.if %10 {
          %11 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc106)
          %12 = cir.call @close(%11) : (!s32i) -> !s32i loc(#loc107)
        } loc(#loc340)
      } loc(#loc338)
    } loc(#loc309)
    cir.return loc(#loc17)
  } loc(#loc307)
  cir.func private @printIntLine(!s32i) loc(#loc341)
  cir.func @_ZN55CWE190_Integer_Overflow__int_connect_socket_multiply_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc343)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc114)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc344)
    cir.call @_ZN55CWE190_Integer_Overflow__int_connect_socket_multiply_43L9badSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc116)
    cir.scope {
      %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc119)
      %3 = cir.const #cir.int<0> : !s32i loc(#loc120)
      %4 = cir.cmp(gt, %2, %3) : !s32i, !cir.bool loc(#loc346)
      cir.if %4 {
        %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc348)
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc124)
        %7 = cir.const #cir.int<2> : !s32i loc(#loc123)
        %8 = cir.binop(mul, %6, %7) nsw : !s32i loc(#loc124)
        cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc348)
        %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc125)
        cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc126)
      } loc(#loc347)
    } loc(#loc345)
    cir.return loc(#loc111)
  } loc(#loc342)
  cir.func internal private @_ZN55CWE190_Integer_Overflow__int_connect_socket_multiply_43L13goodG2BSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc129, #loc130])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc350)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc131)
    %1 = cir.const #cir.int<2> : !s32i loc(#loc132)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc133)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc351)
    cir.return loc(#loc128)
  } loc(#loc349)
  cir.func internal private @_ZN55CWE190_Integer_Overflow__int_connect_socket_multiply_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc353)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc138)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc354)
    cir.call @_ZN55CWE190_Integer_Overflow__int_connect_socket_multiply_43L13goodG2BSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc140)
    cir.scope {
      %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc143)
      %3 = cir.const #cir.int<0> : !s32i loc(#loc144)
      %4 = cir.cmp(gt, %2, %3) : !s32i, !cir.bool loc(#loc356)
      cir.if %4 {
        %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc358)
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc148)
        %7 = cir.const #cir.int<2> : !s32i loc(#loc147)
        %8 = cir.binop(mul, %6, %7) nsw : !s32i loc(#loc148)
        cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc358)
        %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc149)
        cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc150)
      } loc(#loc357)
    } loc(#loc355)
    cir.return loc(#loc135)
  } loc(#loc352)
  cir.func internal private @_ZN55CWE190_Integer_Overflow__int_connect_socket_multiply_43L13goodB2GSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc153, #loc154])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc360)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc155)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc362)
      %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc363)
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc364)
      %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc365)
      %5 = cir.const #cir.int<1> : !s32i loc(#loc163)
      %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc163)
      cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc364)
      cir.scope {
        cir.do {
          %7 = cir.const #cir.int<2> : !s32i loc(#loc168)
          %8 = cir.const #cir.int<1> : !u32i loc(#loc169)
          %9 = cir.cast(integral, %8 : !u32i), !s32i loc(#loc169)
          %10 = cir.const #cir.int<6> : !u32i loc(#loc170)
          %11 = cir.cast(integral, %10 : !u32i), !s32i loc(#loc170)
          %12 = cir.call @socket(%7, %9, %11) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc171)
          cir.store %12, %3 : !s32i, !cir.ptr<!s32i> loc(#loc367)
          cir.scope {
            %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc176)
            %52 = cir.const #cir.int<1> : !s32i loc(#loc177)
            %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc177)
            %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc369)
            cir.if %54 {
              cir.break loc(#loc179)
            } loc(#loc370)
          } loc(#loc368)
          %13 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc371)
          %14 = cir.const #cir.int<0> : !s32i loc(#loc182)
          %15 = cir.const #cir.int<16> : !u64i loc(#loc372)
          cir.libc.memset %15 bytes from %13 set to %14 : !cir.ptr<!void>, !s32i, !u64i loc(#loc373)
          %16 = cir.const #cir.int<2> : !s32i loc(#loc187)
          %17 = cir.cast(integral, %16 : !s32i), !u16i loc(#loc187)
          %18 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc53)
          cir.store %17, %18 : !u16i, !cir.ptr<!u16i> loc(#loc374)
          %19 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc189)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc189)
          %21 = cir.call @inet_addr(%20) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc190)
          %22 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc56)
          %23 = cir.get_member %22[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc57)
          cir.store %21, %23 : !u32i, !cir.ptr<!u32i> loc(#loc375)
          %24 = cir.const #cir.int<27015> : !s32i loc(#loc193)
          %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc193)
          %26 = cir.call @htons(%25) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc194)
          %27 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
          cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc376)
          cir.scope {
            %51 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc199)
            %52 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc378)
            %53 = cir.const #cir.int<16> : !u64i loc(#loc379)
            %54 = cir.cast(integral, %53 : !u64i), !u32i loc(#loc379)
            %55 = cir.call @connect(%51, %52, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc204)
            %56 = cir.const #cir.int<1> : !s32i loc(#loc205)
            %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc205)
            %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc380)
            cir.if %58 {
              cir.break loc(#loc207)
            } loc(#loc381)
          } loc(#loc377)
          %28 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc208)
          %29 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc209)
          %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc209)
          %31 = cir.const #cir.int<3> : !s32i loc(#loc210)
          %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc210)
          %33 = cir.const #cir.int<4> : !u64i loc(#loc210)
          %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc210)
          %35 = cir.const #cir.int<2> : !s32i loc(#loc210)
          %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc210)
          %37 = cir.binop(add, %34, %36) : !u64i loc(#loc210)
          %38 = cir.const #cir.int<1> : !s32i loc(#loc211)
          %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc211)
          %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc382)
          %41 = cir.const #cir.int<0> : !s32i loc(#loc212)
          %42 = cir.call @recv(%28, %30, %40, %41) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc213)
          %43 = cir.cast(integral, %42 : !s64i), !s32i loc(#loc213)
          cir.store %43, %1 : !s32i, !cir.ptr<!s32i> loc(#loc383)
          cir.scope {
            %51 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc218)
            %52 = cir.const #cir.int<1> : !s32i loc(#loc219)
            %53 = cir.unary(minus, %52) : !s32i, !s32i loc(#loc219)
            %54 = cir.cmp(eq, %51, %53) : !s32i, !cir.bool loc(#loc385)
            %55 = cir.ternary(%54, true {
              %56 = cir.const #true loc(#loc220)
              cir.yield %56 : !cir.bool loc(#loc220)
            }, false {
              %56 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc221)
              %57 = cir.const #cir.int<0> : !s32i loc(#loc222)
              %58 = cir.cmp(eq, %56, %57) : !s32i, !cir.bool loc(#loc386)
              %59 = cir.ternary(%58, true {
                %60 = cir.const #true loc(#loc220)
                cir.yield %60 : !cir.bool loc(#loc220)
              }, false {
                %60 = cir.const #false loc(#loc220)
                cir.yield %60 : !cir.bool loc(#loc220)
              }) : (!cir.bool) -> !cir.bool loc(#loc220)
              cir.yield %59 : !cir.bool loc(#loc220)
            }) : (!cir.bool) -> !cir.bool loc(#loc220)
            cir.if %55 {
              cir.break loc(#loc224)
            } loc(#loc387)
          } loc(#loc384)
          %44 = cir.const #cir.int<0> : !s8i loc(#loc225)
          %45 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc226)
          %46 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc227)
          %47 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %45 : !s32i), !cir.ptr<!s8i> loc(#loc227)
          cir.store %44, %47 : !s8i, !cir.ptr<!s8i> loc(#loc388)
          %48 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc228)
          %49 = cir.call @atoi(%48) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc229)
          %50 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc230)
          cir.store %49, %50 : !s32i, !cir.ptr<!s32i> loc(#loc389)
          cir.yield loc(#loc167)
        } while {
          %7 = cir.const #cir.int<0> : !s32i loc(#loc232)
          %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc232)
          cir.condition(%8) loc(#loc232)
        } loc(#loc366)
      } loc(#loc366)
      cir.scope {
        %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc235)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc236)
        %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc236)
        %10 = cir.cmp(ne, %7, %9) : !s32i, !cir.bool loc(#loc391)
        cir.if %10 {
          %11 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc238)
          %12 = cir.call @close(%11) : (!s32i) -> !s32i loc(#loc239)
        } loc(#loc392)
      } loc(#loc390)
    } loc(#loc361)
    cir.return loc(#loc152)
  } loc(#loc359)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc240)
  cir.func internal private @_ZN55CWE190_Integer_Overflow__int_connect_socket_multiply_43L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc394)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc245)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc395)
    cir.call @_ZN55CWE190_Integer_Overflow__int_connect_socket_multiply_43L13goodB2GSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc247)
    cir.scope {
      %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc250)
      %3 = cir.const #cir.int<0> : !s32i loc(#loc251)
      %4 = cir.cmp(gt, %2, %3) : !s32i, !cir.bool loc(#loc397)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc255)
          %6 = cir.const #cir.int<2147483647> : !s32i loc(#loc256)
          %7 = cir.const #cir.int<2> : !s32i loc(#loc257)
          %8 = cir.binop(div, %6, %7) : !s32i loc(#loc400)
          %9 = cir.cmp(lt, %5, %8) : !s32i, !cir.bool loc(#loc401)
          cir.if %9 {
            %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc403)
            %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc264)
            %12 = cir.const #cir.int<2> : !s32i loc(#loc263)
            %13 = cir.binop(mul, %11, %12) nsw : !s32i loc(#loc264)
            cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc403)
            %14 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc265)
            cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc266)
          } else {
            %10 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc240)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc240)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc267)
          } loc(#loc402)
        } loc(#loc399)
      } loc(#loc398)
    } loc(#loc396)
    cir.return loc(#loc242)
  } loc(#loc393)
  cir.func @_ZN55CWE190_Integer_Overflow__int_connect_socket_multiply_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN55CWE190_Integer_Overflow__int_connect_socket_multiply_43L7goodG2BEv() : () -> () loc(#loc270)
    cir.call @_ZN55CWE190_Integer_Overflow__int_connect_socket_multiply_43L7goodB2GEv() : () -> () loc(#loc271)
    cir.return loc(#loc269)
  } loc(#loc404)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc405)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc406)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc407)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc278)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc279)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc280)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc281)
  cir.func @main(%arg0: !s32i loc(fused[#loc284, #loc285]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc286, #loc287])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc409)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc410)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc283)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc288)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc288)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc289)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc290)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc290)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc291)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc278)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc278)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc292)
    cir.call @_ZN55CWE190_Integer_Overflow__int_connect_socket_multiply_434goodEv() : () -> () loc(#loc293)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc279)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc279)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc294)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc280)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc280)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc295)
    cir.call @_ZN55CWE190_Integer_Overflow__int_connect_socket_multiply_433badEv() : () -> () loc(#loc296)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc281)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc281)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc297)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc298)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc411)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc411)
    cir.return %15 : !s32i loc(#loc411)
  } loc(#loc408)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":75:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":47:1)
#loc17 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":105:1)
#loc20 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":48:1)
#loc21 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":49:5)
#loc22 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":104:5)
#loc23 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":54:9)
#loc24 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":54:13)
#loc25 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":55:9)
#loc26 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":55:28)
#loc27 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":56:9)
#loc28 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":56:32)
#loc29 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":57:9)
#loc30 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":57:41)
#loc31 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":58:9)
#loc32 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":93:17)
#loc33 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":68:36)
#loc34 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":68:45)
#loc35 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":68:58)
#loc36 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":68:29)
#loc37 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":68:13)
#loc38 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":68:69)
#loc39 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":69:13)
#loc40 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":72:13)
#loc41 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":69:17)
#loc42 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":69:34)
#loc43 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":70:13)
#loc44 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":71:17)
#loc45 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":73:20)
#loc46 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":73:21)
#loc47 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":73:30)
#loc48 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":73:33)
#loc49 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":73:47)
#loc50 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":73:13)
#loc51 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":73:48)
#loc52 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":74:34)
#loc53 = loc("/usr/include/netinet/in.h":249:5)
#loc54 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":74:13)
#loc55 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":75:39)
#loc56 = loc("/usr/include/netinet/in.h":251:20)
#loc57 = loc("/usr/include/netinet/in.h":33:15)
#loc58 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":75:13)
#loc59 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":75:59)
#loc60 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":76:38)
#loc61 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":76:32)
#loc62 = loc("/usr/include/netinet/in.h":250:15)
#loc63 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":76:13)
#loc64 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":76:46)
#loc65 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":77:13)
#loc66 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":80:13)
#loc67 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":77:25)
#loc68 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":77:58)
#loc69 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":77:59)
#loc70 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":77:68)
#loc71 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":77:82)
#loc72 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":77:17)
#loc73 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":77:88)
#loc74 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":78:13)
#loc75 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":79:17)
#loc76 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":83:31)
#loc77 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":83:46)
#loc78 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":83:59)
#loc79 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":83:77)
#loc80 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":83:80)
#loc81 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":83:26)
#loc82 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":83:13)
#loc83 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":83:81)
#loc84 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":84:13)
#loc85 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":87:13)
#loc86 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":84:17)
#loc87 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":84:31)
#loc88 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":84:44)
#loc89 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":84:47)
#loc90 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":84:61)
#loc91 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":85:13)
#loc92 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":86:17)
#loc93 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":89:39)
#loc94 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":89:25)
#loc95 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":89:13)
#loc96 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":91:25)
#loc97 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":91:20)
#loc98 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":91:13)
#loc99 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":91:36)
#loc100 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":93:16)
#loc101 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":94:9)
#loc102 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":97:9)
#loc103 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":94:13)
#loc104 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":94:30)
#loc105 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":95:9)
#loc106 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":96:26)
#loc107 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":96:13)
#loc108 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc109 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc110 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":107:1)
#loc111 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":119:1)
#loc112 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":109:5)
#loc113 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":109:9)
#loc114 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":111:12)
#loc115 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":111:5)
#loc116 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":112:5)
#loc117 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":113:5)
#loc118 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":118:5)
#loc119 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":113:8)
#loc120 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":113:15)
#loc121 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":114:5)
#loc122 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":116:9)
#loc123 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":116:29)
#loc124 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":116:22)
#loc125 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":117:22)
#loc126 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":117:9)
#loc127 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":126:1)
#loc128 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":130:1)
#loc131 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":127:1)
#loc132 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":129:12)
#loc133 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":129:5)
#loc134 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":132:1)
#loc135 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":144:1)
#loc136 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":134:5)
#loc137 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":134:9)
#loc138 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":136:12)
#loc139 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":136:5)
#loc140 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":137:5)
#loc141 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":138:5)
#loc142 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":143:5)
#loc143 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":138:8)
#loc144 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":138:15)
#loc145 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":139:5)
#loc146 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":141:9)
#loc147 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":141:29)
#loc148 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":141:22)
#loc149 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":142:22)
#loc150 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":142:9)
#loc151 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":147:1)
#loc152 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":205:1)
#loc155 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":148:1)
#loc156 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":149:5)
#loc157 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":204:5)
#loc158 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":154:9)
#loc159 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":154:13)
#loc160 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":155:9)
#loc161 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":155:28)
#loc162 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":156:9)
#loc163 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":156:32)
#loc164 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":157:9)
#loc165 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":157:41)
#loc166 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":158:9)
#loc167 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":193:17)
#loc168 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":168:36)
#loc169 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":168:45)
#loc170 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":168:58)
#loc171 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":168:29)
#loc172 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":168:13)
#loc173 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":168:69)
#loc174 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":169:13)
#loc175 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":172:13)
#loc176 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":169:17)
#loc177 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":169:34)
#loc178 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":170:13)
#loc179 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":171:17)
#loc180 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":173:20)
#loc181 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":173:21)
#loc182 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":173:30)
#loc183 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":173:33)
#loc184 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":173:47)
#loc185 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":173:13)
#loc186 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":173:48)
#loc187 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":174:34)
#loc188 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":174:13)
#loc189 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":175:49)
#loc190 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":175:39)
#loc191 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":175:13)
#loc192 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":175:59)
#loc193 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":176:38)
#loc194 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":176:32)
#loc195 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":176:13)
#loc196 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":176:46)
#loc197 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":177:13)
#loc198 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":180:13)
#loc199 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":177:25)
#loc200 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":177:58)
#loc201 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":177:59)
#loc202 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":177:68)
#loc203 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":177:82)
#loc204 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":177:17)
#loc205 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":177:88)
#loc206 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":178:13)
#loc207 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":179:17)
#loc208 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":183:31)
#loc209 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":183:46)
#loc210 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":183:59)
#loc211 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":183:77)
#loc212 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":183:80)
#loc213 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":183:26)
#loc214 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":183:13)
#loc215 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":183:81)
#loc216 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":184:13)
#loc217 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":187:13)
#loc218 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":184:17)
#loc219 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":184:31)
#loc220 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":184:44)
#loc221 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":184:47)
#loc222 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":184:61)
#loc223 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":185:13)
#loc224 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":186:17)
#loc225 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":189:39)
#loc226 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":189:25)
#loc227 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":189:13)
#loc228 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":191:25)
#loc229 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":191:20)
#loc230 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":191:13)
#loc231 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":191:36)
#loc232 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":193:16)
#loc233 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":194:9)
#loc234 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":197:9)
#loc235 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":194:13)
#loc236 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":194:30)
#loc237 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":195:9)
#loc238 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":196:26)
#loc239 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":196:13)
#loc240 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":223:23)
#loc241 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":207:1)
#loc242 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":226:1)
#loc243 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":209:5)
#loc244 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":209:9)
#loc245 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":211:12)
#loc246 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":211:5)
#loc247 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":212:5)
#loc248 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":213:5)
#loc249 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":225:5)
#loc250 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":213:8)
#loc251 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":213:15)
#loc252 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":214:5)
#loc253 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":216:9)
#loc254 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":224:9)
#loc255 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":216:13)
#loc256 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":216:21)
#loc257 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":216:29)
#loc258 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":216:30)
#loc259 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":217:9)
#loc260 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":220:9)
#loc261 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":222:9)
#loc262 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":218:13)
#loc263 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":218:33)
#loc264 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":218:26)
#loc265 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":219:26)
#loc266 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":219:13)
#loc267 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":223:13)
#loc268 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":228:1)
#loc269 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":232:1)
#loc270 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":230:5)
#loc271 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":231:5)
#loc272 = loc("/usr/include/stdlib.h":575:1)
#loc273 = loc("/usr/include/stdlib.h":575:41)
#loc274 = loc("/usr/include/time.h":76:1)
#loc275 = loc("/usr/include/time.h":76:38)
#loc276 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc277 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc278 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":252:15)
#loc279 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":254:15)
#loc280 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":257:15)
#loc281 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":259:15)
#loc282 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":247:1)
#loc283 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":262:1)
#loc288 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":248:1)
#loc289 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":250:27)
#loc290 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":250:22)
#loc291 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":250:5)
#loc292 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":252:5)
#loc293 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":253:5)
#loc294 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":254:5)
#loc295 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":257:5)
#loc296 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":258:5)
#loc297 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":259:5)
#loc298 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":261:12)
#loc299 = loc("CWE190_Integer_Overflow__int_connect_socket_multiply_43.cpp":261:5)
#loc300 = loc(fused[#loc1, #loc2])
#loc301 = loc(fused[#loc3, #loc4])
#loc302 = loc(fused[#loc6, #loc7])
#loc303 = loc(fused[#loc8, #loc9])
#loc304 = loc(fused[#loc10, #loc11])
#loc305 = loc(fused[#loc12, #loc13])
#loc306 = loc(fused[#loc14, #loc15])
#loc307 = loc(fused[#loc16, #loc17])
#loc309 = loc(fused[#loc21, #loc22])
#loc310 = loc(fused[#loc23, #loc24])
#loc311 = loc(fused[#loc25, #loc26])
#loc312 = loc(fused[#loc27, #loc28])
#loc313 = loc(fused[#loc29, #loc30])
#loc314 = loc(fused[#loc31, #loc32])
#loc315 = loc(fused[#loc37, #loc38])
#loc316 = loc(fused[#loc39, #loc40])
#loc317 = loc(fused[#loc41, #loc42])
#loc318 = loc(fused[#loc43, #loc40])
#loc319 = loc(fused[#loc45, #loc46])
#loc320 = loc(fused[#loc48, #loc49])
#loc321 = loc(fused[#loc50, #loc51])
#loc322 = loc(fused[#loc54, #loc52])
#loc323 = loc(fused[#loc58, #loc59])
#loc324 = loc(fused[#loc63, #loc64])
#loc325 = loc(fused[#loc65, #loc66])
#loc326 = loc(fused[#loc68, #loc69])
#loc327 = loc(fused[#loc70, #loc71])
#loc328 = loc(fused[#loc72, #loc73])
#loc329 = loc(fused[#loc74, #loc66])
#loc330 = loc(fused[#loc78, #loc79])
#loc331 = loc(fused[#loc82, #loc83])
#loc332 = loc(fused[#loc84, #loc85])
#loc333 = loc(fused[#loc86, #loc87])
#loc334 = loc(fused[#loc89, #loc90])
#loc335 = loc(fused[#loc91, #loc85])
#loc336 = loc(fused[#loc95, #loc93])
#loc337 = loc(fused[#loc98, #loc99])
#loc338 = loc(fused[#loc101, #loc102])
#loc339 = loc(fused[#loc103, #loc104])
#loc340 = loc(fused[#loc105, #loc102])
#loc341 = loc(fused[#loc108, #loc109])
#loc342 = loc(fused[#loc110, #loc111])
#loc343 = loc(fused[#loc112, #loc113])
#loc344 = loc(fused[#loc115, #loc114])
#loc345 = loc(fused[#loc117, #loc118])
#loc346 = loc(fused[#loc119, #loc120])
#loc347 = loc(fused[#loc121, #loc118])
#loc348 = loc(fused[#loc122, #loc123])
#loc349 = loc(fused[#loc127, #loc128])
#loc351 = loc(fused[#loc133, #loc132])
#loc352 = loc(fused[#loc134, #loc135])
#loc353 = loc(fused[#loc136, #loc137])
#loc354 = loc(fused[#loc139, #loc138])
#loc355 = loc(fused[#loc141, #loc142])
#loc356 = loc(fused[#loc143, #loc144])
#loc357 = loc(fused[#loc145, #loc142])
#loc358 = loc(fused[#loc146, #loc147])
#loc359 = loc(fused[#loc151, #loc152])
#loc361 = loc(fused[#loc156, #loc157])
#loc362 = loc(fused[#loc158, #loc159])
#loc363 = loc(fused[#loc160, #loc161])
#loc364 = loc(fused[#loc162, #loc163])
#loc365 = loc(fused[#loc164, #loc165])
#loc366 = loc(fused[#loc166, #loc167])
#loc367 = loc(fused[#loc172, #loc173])
#loc368 = loc(fused[#loc174, #loc175])
#loc369 = loc(fused[#loc176, #loc177])
#loc370 = loc(fused[#loc178, #loc175])
#loc371 = loc(fused[#loc180, #loc181])
#loc372 = loc(fused[#loc183, #loc184])
#loc373 = loc(fused[#loc185, #loc186])
#loc374 = loc(fused[#loc188, #loc187])
#loc375 = loc(fused[#loc191, #loc192])
#loc376 = loc(fused[#loc195, #loc196])
#loc377 = loc(fused[#loc197, #loc198])
#loc378 = loc(fused[#loc200, #loc201])
#loc379 = loc(fused[#loc202, #loc203])
#loc380 = loc(fused[#loc204, #loc205])
#loc381 = loc(fused[#loc206, #loc198])
#loc382 = loc(fused[#loc210, #loc211])
#loc383 = loc(fused[#loc214, #loc215])
#loc384 = loc(fused[#loc216, #loc217])
#loc385 = loc(fused[#loc218, #loc219])
#loc386 = loc(fused[#loc221, #loc222])
#loc387 = loc(fused[#loc223, #loc217])
#loc388 = loc(fused[#loc227, #loc225])
#loc389 = loc(fused[#loc230, #loc231])
#loc390 = loc(fused[#loc233, #loc234])
#loc391 = loc(fused[#loc235, #loc236])
#loc392 = loc(fused[#loc237, #loc234])
#loc393 = loc(fused[#loc241, #loc242])
#loc394 = loc(fused[#loc243, #loc244])
#loc395 = loc(fused[#loc246, #loc245])
#loc396 = loc(fused[#loc248, #loc249])
#loc397 = loc(fused[#loc250, #loc251])
#loc398 = loc(fused[#loc252, #loc249])
#loc399 = loc(fused[#loc253, #loc254])
#loc400 = loc(fused[#loc256, #loc257])
#loc401 = loc(fused[#loc255, #loc258])
#loc402 = loc(fused[#loc259, #loc260, #loc261, #loc254])
#loc403 = loc(fused[#loc262, #loc263])
#loc404 = loc(fused[#loc268, #loc269])
#loc405 = loc(fused[#loc272, #loc273])
#loc406 = loc(fused[#loc274, #loc275])
#loc407 = loc(fused[#loc276, #loc277])
#loc408 = loc(fused[#loc282, #loc283])
#loc411 = loc(fused[#loc299, #loc298])
