!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":110:10)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":110:14)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":110:20)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":110:32)
#loc157 = loc(fused[#loc102, #loc103])
#loc158 = loc(fused[#loc104, #loc105])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s03/CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @_ZZN53CWE590_Free_Memory_Not_on_Heap__delete_long_static_033badEvE10dataBuffer = #cir.int<0> : !s64i {alignment = 8 : i64} loc(#loc1)
  cir.func private @printLongLine(!s64i) loc(#loc118)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc119)
  cir.func @_ZN53CWE590_Free_Memory_Not_on_Heap__delete_long_static_033badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc121)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc10)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc122)
    cir.scope {
      %6 = cir.const #cir.int<5> : !s32i loc(#loc14)
      %7 = cir.const #cir.int<5> : !s32i loc(#loc15)
      %8 = cir.cmp(eq, %6, %7) : !s32i, !cir.bool loc(#loc124)
      cir.if %8 {
        cir.scope {
          %9 = cir.get_global @_ZZN53CWE590_Free_Memory_Not_on_Heap__delete_long_static_033badEvE10dataBuffer : !cir.ptr<!s64i> loc(#loc1)
          %10 = cir.const #cir.int<5> : !s64i loc(#loc19)
          cir.store %10, %9 : !s64i, !cir.ptr<!s64i> loc(#loc127)
          cir.store %9, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc128)
        } loc(#loc126)
      } loc(#loc125)
    } loc(#loc123)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc23)
    %3 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc24)
    cir.call @printLongLine(%3) : (!s64i) -> () loc(#loc25)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc26)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc26)
    cir.call @_ZdlPv(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc27)
    cir.return loc(#loc7)
  } loc(#loc120)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc28)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc129)
  cir.func internal private @_ZN53CWE590_Free_Memory_Not_on_Heap__delete_long_static_03L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc131)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc35)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc132)
    cir.scope {
      %6 = cir.const #cir.int<5> : !s32i loc(#loc39)
      %7 = cir.const #cir.int<5> : !s32i loc(#loc40)
      %8 = cir.cmp(ne, %6, %7) : !s32i, !cir.bool loc(#loc134)
      cir.if %8 {
        %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc28)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc28)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc44)
      } else {
        cir.scope {
          %9 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc137)
          %10 = cir.const #cir.int<8> : !u64i loc(#loc138)
          %11 = cir.call @_Znwm(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc137)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc138)
          cir.store %12, %9 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc137)
          %13 = cir.const #cir.int<5> : !s64i loc(#loc50)
          %14 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc51)
          cir.store %13, %14 : !s64i, !cir.ptr<!s64i> loc(#loc139)
          %15 = cir.load %9 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc53)
          cir.store %15, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc140)
        } loc(#loc136)
      } loc(#loc135)
    } loc(#loc133)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc55)
    %3 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc56)
    cir.call @printLongLine(%3) : (!s64i) -> () loc(#loc57)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc58)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc58)
    cir.call @_ZdlPv(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc59)
    cir.return loc(#loc32)
  } loc(#loc130)
  cir.func internal private @_ZN53CWE590_Free_Memory_Not_on_Heap__delete_long_static_03L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc142)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc64)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc143)
    cir.scope {
      %6 = cir.const #cir.int<5> : !s32i loc(#loc68)
      %7 = cir.const #cir.int<5> : !s32i loc(#loc69)
      %8 = cir.cmp(eq, %6, %7) : !s32i, !cir.bool loc(#loc145)
      cir.if %8 {
        cir.scope {
          %9 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc148)
          %10 = cir.const #cir.int<8> : !u64i loc(#loc149)
          %11 = cir.call @_Znwm(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc148)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc149)
          cir.store %12, %9 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc148)
          %13 = cir.const #cir.int<5> : !s64i loc(#loc76)
          %14 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc77)
          cir.store %13, %14 : !s64i, !cir.ptr<!s64i> loc(#loc150)
          %15 = cir.load %9 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc79)
          cir.store %15, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc151)
        } loc(#loc147)
      } loc(#loc146)
    } loc(#loc144)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc81)
    %3 = cir.load %2 : !cir.ptr<!s64i>, !s64i loc(#loc82)
    cir.call @printLongLine(%3) : (!s64i) -> () loc(#loc83)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc84)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc84)
    cir.call @_ZdlPv(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc85)
    cir.return loc(#loc61)
  } loc(#loc141)
  cir.func @_ZN53CWE590_Free_Memory_Not_on_Heap__delete_long_static_034goodEv() extra(#fn_attr1) {
    cir.call @_ZN53CWE590_Free_Memory_Not_on_Heap__delete_long_static_03L8goodG2B1Ev() : () -> () loc(#loc88)
    cir.call @_ZN53CWE590_Free_Memory_Not_on_Heap__delete_long_static_03L8goodG2B2Ev() : () -> () loc(#loc89)
    cir.return loc(#loc87)
  } loc(#loc152)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc153)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc154)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc155)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc96)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc97)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc98)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc99)
  cir.func @main(%arg0: !s32i loc(fused[#loc102, #loc103]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc104, #loc105])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc157)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc158)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc101)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc106)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc106)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc107)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc108)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc108)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc109)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc96)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc96)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    cir.call @_ZN53CWE590_Free_Memory_Not_on_Heap__delete_long_static_034goodEv() : () -> () loc(#loc111)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc97)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc98)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc113)
    cir.call @_ZN53CWE590_Free_Memory_Not_on_Heap__delete_long_static_033badEv() : () -> () loc(#loc114)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc99)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc116)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc159)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    cir.return %15 : !s32i loc(#loc159)
  } loc(#loc156)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s03/CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":34:25)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":24:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":24:35)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc5 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":26:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":42:1)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":28:5)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":28:12)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":29:12)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":29:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":30:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":38:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":30:8)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":30:11)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":31:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":32:9)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":37:9)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":35:26)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":35:13)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":36:13)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":36:21)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":39:20)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":39:19)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":39:5)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":41:12)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":26:6)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":56:19)
#loc29 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc30 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":49:1)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":70:1)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":51:5)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":51:12)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":52:12)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":52:5)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":53:5)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":66:5)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":53:8)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":53:11)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":54:5)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":57:5)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":59:5)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":56:9)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":60:9)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":65:9)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":62:13)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":62:37)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":62:33)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":63:27)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":63:14)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":63:13)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":64:20)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":64:13)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":67:20)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":67:19)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":67:5)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":69:12)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":49:13)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":73:1)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":89:1)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":75:5)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":75:12)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":76:12)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":76:5)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":77:5)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":85:5)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":77:8)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":77:11)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":78:5)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":79:9)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":84:9)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":81:13)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":81:37)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":81:33)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":82:27)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":82:14)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":82:13)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":83:20)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":83:13)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":86:20)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":86:19)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":86:5)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":88:12)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":73:13)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":91:1)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":95:1)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":93:5)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":94:5)
#loc90 = loc("/usr/include/stdlib.h":575:1)
#loc91 = loc("/usr/include/stdlib.h":575:41)
#loc92 = loc("/usr/include/time.h":76:1)
#loc93 = loc("/usr/include/time.h":76:38)
#loc94 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc95 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":115:15)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":117:15)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":120:15)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":122:15)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":110:1)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":125:1)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":111:1)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":113:27)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":113:22)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":113:5)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":115:5)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":116:5)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":117:5)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":120:5)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":121:5)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":122:5)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":124:12)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__delete_long_static_03.cpp":124:5)
#loc118 = loc(fused[#loc2, #loc3])
#loc119 = loc(fused[#loc4, #loc5])
#loc120 = loc(fused[#loc6, #loc7])
#loc121 = loc(fused[#loc8, #loc9])
#loc122 = loc(fused[#loc11, #loc10])
#loc123 = loc(fused[#loc12, #loc13])
#loc124 = loc(fused[#loc14, #loc15])
#loc125 = loc(fused[#loc16, #loc13])
#loc126 = loc(fused[#loc17, #loc18])
#loc127 = loc(fused[#loc20, #loc19])
#loc128 = loc(fused[#loc21, #loc22])
#loc129 = loc(fused[#loc29, #loc30])
#loc130 = loc(fused[#loc31, #loc32])
#loc131 = loc(fused[#loc33, #loc34])
#loc132 = loc(fused[#loc36, #loc35])
#loc133 = loc(fused[#loc37, #loc38])
#loc134 = loc(fused[#loc39, #loc40])
#loc135 = loc(fused[#loc41, #loc42, #loc43, #loc38])
#loc136 = loc(fused[#loc45, #loc46])
#loc137 = loc(fused[#loc47, #loc48])
#loc138 = loc(fused[#loc49, #loc48])
#loc139 = loc(fused[#loc52, #loc50])
#loc140 = loc(fused[#loc54, #loc53])
#loc141 = loc(fused[#loc60, #loc61])
#loc142 = loc(fused[#loc62, #loc63])
#loc143 = loc(fused[#loc65, #loc64])
#loc144 = loc(fused[#loc66, #loc67])
#loc145 = loc(fused[#loc68, #loc69])
#loc146 = loc(fused[#loc70, #loc67])
#loc147 = loc(fused[#loc71, #loc72])
#loc148 = loc(fused[#loc73, #loc74])
#loc149 = loc(fused[#loc75, #loc74])
#loc150 = loc(fused[#loc78, #loc76])
#loc151 = loc(fused[#loc80, #loc79])
#loc152 = loc(fused[#loc86, #loc87])
#loc153 = loc(fused[#loc90, #loc91])
#loc154 = loc(fused[#loc92, #loc93])
#loc155 = loc(fused[#loc94, #loc95])
#loc156 = loc(fused[#loc100, #loc101])
#loc159 = loc(fused[#loc117, #loc116])
