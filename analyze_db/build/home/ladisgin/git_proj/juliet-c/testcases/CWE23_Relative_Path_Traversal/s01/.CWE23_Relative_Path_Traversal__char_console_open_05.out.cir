!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc67 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":65:37)
#loc190 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":162:10)
#loc191 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":162:14)
#loc192 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":162:20)
#loc193 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":162:32)
#true = #cir.bool<true> : !cir.bool
#loc280 = loc(fused[#loc190, #loc191])
#loc281 = loc(fused[#loc192, #loc193])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_open_05.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_05L8goodG2B2Ev.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc206)
  cir.global "private" constant cir_private @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_05L8goodG2B1Ev.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc207)
  cir.global "private" constant cir_private @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_053badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc208)
  cir.global "private" internal dsolocal @_ZL10staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc209)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc210)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc211)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc212)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc213)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc17)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc214)
  cir.func private @close(!s32i) -> !s32i loc(#loc215)
  cir.func @_ZN51CWE23_Relative_Path_Traversal__char_console_open_053badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc217)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc218)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc219)
    %3 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc208)
    %4 = cir.get_global @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_053badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc208)
    cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc208)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc30)
    cir.store %5, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc220)
    cir.br ^bb1 loc(#loc221)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @_ZL10staticTrue : !cir.ptr<!s32i> loc(#loc209)
    %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc34)
    cir.brcond %8 ^bb2, ^bb26 loc(#loc222)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc223)
  ^bb3:  // pred: ^bb2
    %9 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc38)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
    %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc38)
    cir.store %11, %0 : !u64i, !cir.ptr<!u64i> loc(#loc217)
    cir.br ^bb4 loc(#loc224)
  ^bb4:  // pred: ^bb3
    %12 = cir.const #cir.int<4096> : !s32i loc(#loc42)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc42)
    %14 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc43)
    %15 = cir.binop(sub, %13, %14) : !u64i loc(#loc225)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc44)
    %18 = cir.cmp(gt, %15, %17) : !u64i, !cir.bool loc(#loc226)
    cir.brcond %18 ^bb5, ^bb23 loc(#loc227)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc228)
  ^bb6:  // pred: ^bb5
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    %20 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc49)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %20 : !u64i), !cir.ptr<!s8i> loc(#loc50)
    %22 = cir.const #cir.int<4096> : !s32i loc(#loc51)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc51)
    %24 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc52)
    %25 = cir.binop(sub, %23, %24) : !u64i loc(#loc229)
    %26 = cir.cast(integral, %25 : !u64i), !s32i loc(#loc229)
    %27 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc212)
    %28 = cir.load %27 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc53)
    %29 = cir.call @fgets(%21, %26, %28) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc54)
    %30 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc55)
    %31 = cir.cmp(ne, %29, %30) : !cir.ptr<!s8i>, !cir.bool loc(#loc230)
    cir.brcond %31 ^bb7, ^bb20 loc(#loc231)
  ^bb7:  // pred: ^bb6
    %32 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc59)
    %33 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
    %34 = cir.call @strlen(%33) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc59)
    cir.store %34, %0 : !u64i, !cir.ptr<!u64i> loc(#loc232)
    cir.br ^bb8 loc(#loc233)
  ^bb8:  // pred: ^bb7
    %35 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc65)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc66)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc66)
    %38 = cir.cmp(gt, %35, %37) : !u64i, !cir.bool loc(#loc234)
    cir.brcond %38 ^bb9, ^bb14 loc(#loc67)
  ^bb9:  // pred: ^bb8
    %39 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
    %40 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc69)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc70)
    %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc70)
    %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc235)
    %44 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc71)
    %45 = cir.load %44 : !cir.ptr<!s8i>, !s8i loc(#loc68)
    %46 = cir.cast(integral, %45 : !s8i), !s32i loc(#loc68)
    %47 = cir.const #cir.int<10> : !s8i loc(#loc72)
    %48 = cir.cast(integral, %47 : !s8i), !s32i loc(#loc72)
    %49 = cir.cmp(eq, %46, %48) : !s32i, !cir.bool loc(#loc236)
    cir.brcond %49 ^bb10, ^bb11 loc(#loc67)
  ^bb10:  // pred: ^bb9
    %50 = cir.const #true loc(#loc67)
    cir.br ^bb12(%50 : !cir.bool) loc(#loc67)
  ^bb11:  // pred: ^bb9
    %51 = cir.const #false loc(#loc67)
    cir.br ^bb12(%51 : !cir.bool) loc(#loc67)
  ^bb12(%52: !cir.bool loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":65:37)):  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc67)
  ^bb13:  // pred: ^bb12
    cir.br ^bb15(%52 : !cir.bool) loc(#loc67)
  ^bb14:  // pred: ^bb8
    %53 = cir.const #false loc(#loc67)
    cir.br ^bb15(%53 : !cir.bool) loc(#loc67)
  ^bb15(%54: !cir.bool loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":65:37)):  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc67)
  ^bb16:  // pred: ^bb15
    cir.brcond %54 ^bb17, ^bb18 loc(#loc237)
  ^bb17:  // pred: ^bb16
    %55 = cir.const #cir.int<0> : !s8i loc(#loc74)
    %56 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
    %57 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc76)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc77)
    %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc77)
    %60 = cir.binop(sub, %57, %59) : !u64i loc(#loc238)
    %61 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %60 : !u64i), !cir.ptr<!s8i> loc(#loc78)
    cir.store %55, %61 : !s8i, !cir.ptr<!s8i> loc(#loc239)
    cir.br ^bb18 loc(#loc64)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc64)
  ^bb19:  // pred: ^bb18
    cir.br ^bb21 loc(#loc57)
  ^bb20:  // pred: ^bb6
    %62 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc17)
    %63 = cir.cast(array_to_ptrdecay, %62 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc17)
    cir.call @printLine(%63) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %64 = cir.const #cir.int<0> : !s8i loc(#loc80)
    %65 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
    %66 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc82)
    %67 = cir.ptr_stride(%65 : !cir.ptr<!s8i>, %66 : !u64i), !cir.ptr<!s8i> loc(#loc83)
    cir.store %64, %67 : !s8i, !cir.ptr<!s8i> loc(#loc240)
    cir.br ^bb21 loc(#loc47)
  ^bb21:  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc47)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc41)
  ^bb23:  // 2 preds: ^bb4, ^bb22
    cir.br ^bb24 loc(#loc41)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc37)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc33)
  ^bb26:  // 2 preds: ^bb1, ^bb25
    cir.br ^bb27 loc(#loc33)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28 loc(#loc241)
  ^bb28:  // pred: ^bb27
    %68 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
    %69 = cir.const #cir.int<2> : !s32i loc(#loc87)
    %70 = cir.const #cir.int<64> : !s32i loc(#loc88)
    %71 = cir.binop(or, %69, %70) : !s32i loc(#loc242)
    %72 = cir.const #cir.int<256> : !s32i loc(#loc89)
    %73 = cir.const #cir.int<128> : !s32i loc(#loc90)
    %74 = cir.binop(or, %72, %73) : !s32i loc(#loc243)
    %75 = cir.call @open(%68, %71, %74) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc91)
    cir.store %75, %1 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    cir.br ^bb29 loc(#loc245)
  ^bb29:  // pred: ^bb28
    %76 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    %77 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc98)
    %79 = cir.cmp(ne, %76, %78) : !s32i, !cir.bool loc(#loc246)
    cir.brcond %79 ^bb30, ^bb31 loc(#loc247)
  ^bb30:  // pred: ^bb29
    %80 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    %81 = cir.call @close(%80) : (!s32i) -> !s32i loc(#loc101)
    cir.br ^bb31 loc(#loc95)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc95)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc85)
  ^bb33:  // pred: ^bb32
    cir.return loc(#loc23)
  } loc(#loc216)
  cir.global "private" internal dsolocal @_ZL11staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc248)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc104)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc249)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc107)
  cir.func internal private @_ZN51CWE23_Relative_Path_Traversal__char_console_open_05L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc251)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc252)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc207)
    %3 = cir.get_global @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_05L8goodG2B1Ev.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc207)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc207)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc114)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc253)
    cir.br ^bb1 loc(#loc254)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @_ZL11staticFalse : !cir.ptr<!s32i> loc(#loc248)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc118)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc255)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc104)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc104)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc122)
    cir.br ^bb4 loc(#loc120)
  ^bb3:  // pred: ^bb1
    %10 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc123)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
    %12 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc107)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc107)
    %14 = cir.call @strcat(%11, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc123)
    cir.br ^bb4 loc(#loc117)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc117)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc256)
  ^bb6:  // pred: ^bb5
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
    %16 = cir.const #cir.int<2> : !s32i loc(#loc128)
    %17 = cir.const #cir.int<64> : !s32i loc(#loc129)
    %18 = cir.binop(or, %16, %17) : !s32i loc(#loc257)
    %19 = cir.const #cir.int<256> : !s32i loc(#loc130)
    %20 = cir.const #cir.int<128> : !s32i loc(#loc131)
    %21 = cir.binop(or, %19, %20) : !s32i loc(#loc258)
    %22 = cir.call @open(%15, %18, %21) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc132)
    cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc259)
    cir.br ^bb7 loc(#loc260)
  ^bb7:  // pred: ^bb6
    %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc138)
    %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc139)
    %26 = cir.cmp(ne, %23, %25) : !s32i, !cir.bool loc(#loc261)
    cir.brcond %26 ^bb8, ^bb9 loc(#loc262)
  ^bb8:  // pred: ^bb7
    %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc141)
    %28 = cir.call @close(%27) : (!s32i) -> !s32i loc(#loc142)
    cir.br ^bb9 loc(#loc136)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc136)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc126)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc109)
  } loc(#loc250)
  cir.func internal private @_ZN51CWE23_Relative_Path_Traversal__char_console_open_05L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc264)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc265)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc206)
    %3 = cir.get_global @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_05L8goodG2B2Ev.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc206)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc206)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc149)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc266)
    cir.br ^bb1 loc(#loc267)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @_ZL10staticTrue : !cir.ptr<!s32i> loc(#loc209)
    %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc153)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc268)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc155)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
    %10 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc157)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc157)
    %12 = cir.call @strcat(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc155)
    cir.br ^bb3 loc(#loc152)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc152)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc269)
  ^bb5:  // pred: ^bb4
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
    %14 = cir.const #cir.int<2> : !s32i loc(#loc161)
    %15 = cir.const #cir.int<64> : !s32i loc(#loc162)
    %16 = cir.binop(or, %14, %15) : !s32i loc(#loc270)
    %17 = cir.const #cir.int<256> : !s32i loc(#loc163)
    %18 = cir.const #cir.int<128> : !s32i loc(#loc164)
    %19 = cir.binop(or, %17, %18) : !s32i loc(#loc271)
    %20 = cir.call @open(%13, %16, %19) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc165)
    cir.store %20, %0 : !s32i, !cir.ptr<!s32i> loc(#loc272)
    cir.br ^bb6 loc(#loc273)
  ^bb6:  // pred: ^bb5
    %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc170)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc171)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc172)
    %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc274)
    cir.brcond %24 ^bb7, ^bb8 loc(#loc275)
  ^bb7:  // pred: ^bb6
    %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc174)
    %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc175)
    cir.br ^bb8 loc(#loc169)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc169)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc159)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc144)
  } loc(#loc263)
  cir.func @_ZN51CWE23_Relative_Path_Traversal__char_console_open_054goodEv() extra(#fn_attr1) {
    cir.call @_ZN51CWE23_Relative_Path_Traversal__char_console_open_05L8goodG2B1Ev() : () -> () loc(#loc178)
    cir.call @_ZN51CWE23_Relative_Path_Traversal__char_console_open_05L8goodG2B2Ev() : () -> () loc(#loc179)
    cir.return loc(#loc177)
  } loc(#loc276)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc277)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc278)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc184)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc185)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc186)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc187)
  cir.func @main(%arg0: !s32i loc(fused[#loc190, #loc191]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc192, #loc193])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc280)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc281)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc189)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc194)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc194)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc195)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc196)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc196)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc197)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc184)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc184)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc198)
    cir.call @_ZN51CWE23_Relative_Path_Traversal__char_console_open_054goodEv() : () -> () loc(#loc199)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc185)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc185)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc200)
    %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc186)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc186)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc201)
    cir.call @_ZN51CWE23_Relative_Path_Traversal__char_console_open_053badEv() : () -> () loc(#loc202)
    %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc187)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc187)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc203)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc204)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc282)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc282)
    cir.return %15 : !s32i loc(#loc282)
  } loc(#loc279)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_open_05.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":125:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":125:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":98:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":98:37)
#loc5 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":49:5)
#loc6 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":49:37)
#loc7 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":38:1)
#loc8 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":38:25)
#loc9 = loc("/usr/include/string.h":407:1)
#loc10 = loc("/usr/include/string.h":408:33)
#loc11 = loc("/usr/include/stdio.h":654:1)
#loc12 = loc("/usr/include/stdio.h":655:59)
#loc13 = loc("/usr/include/stdio.h":149:1)
#loc14 = loc("/usr/include/stdio.h":149:14)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc17 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":72:31)
#loc18 = loc("/usr/include/fcntl.h":209:1)
#loc19 = loc("/usr/include/fcntl.h":209:56)
#loc20 = loc("/usr/include/unistd.h":358:1)
#loc21 = loc("/usr/include/unistd.h":358:27)
#loc22 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":46:1)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":88:1)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":55:13)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":55:41)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":80:9)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":80:13)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":48:5)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":48:12)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":50:12)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":50:5)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":51:5)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":78:5)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":51:8)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":52:5)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":53:9)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":77:9)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":55:30)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":55:37)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":57:13)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":76:13)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":57:17)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":57:30)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":57:40)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":58:13)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":60:17)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":75:17)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":60:27)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":60:32)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":60:31)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":60:47)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":60:60)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":60:70)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":60:21)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":60:80)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":61:17)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":69:17)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":71:17)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":64:31)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":64:38)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":64:21)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":64:42)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":65:21)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":68:21)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":65:25)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":65:35)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":65:40)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":65:45)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":65:53)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":65:54)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":65:59)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":66:21)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":67:43)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":67:25)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":67:30)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":67:38)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":67:39)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":72:21)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":74:37)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":74:21)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":74:26)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":74:33)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":79:5)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":87:5)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":82:25)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":82:31)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":82:38)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":82:47)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":82:55)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":82:20)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":82:9)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":82:63)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":83:9)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":86:9)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":83:13)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":83:26)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":83:25)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":84:9)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":85:19)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":85:13)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":39:1)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":39:26)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":103:19)
#loc105 = loc("/usr/include/string.h":149:1)
#loc106 = loc("/usr/include/string.h":150:14)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":108:22)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":95:1)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":119:1)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":111:9)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":111:13)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":97:5)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":97:12)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":99:12)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":99:5)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":100:5)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":109:5)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":100:8)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":101:5)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":104:5)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":106:5)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":103:9)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":108:9)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":108:16)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":110:5)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":118:5)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":113:25)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":113:31)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":113:38)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":113:47)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":113:55)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":113:20)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":113:9)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":113:63)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":114:9)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":117:9)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":114:13)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":114:26)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":114:25)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":115:9)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":116:19)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":116:13)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":122:1)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":141:1)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":133:9)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":133:13)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":124:5)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":124:12)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":126:12)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":126:5)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":127:5)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":131:5)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":127:8)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":128:5)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":130:9)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":130:16)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":130:22)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":132:5)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":140:5)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":135:25)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":135:31)
#loc162 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":135:38)
#loc163 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":135:47)
#loc164 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":135:55)
#loc165 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":135:20)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":135:9)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":135:63)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":136:9)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":139:9)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":136:13)
#loc171 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":136:26)
#loc172 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":136:25)
#loc173 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":137:9)
#loc174 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":138:19)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":138:13)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":143:1)
#loc177 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":147:1)
#loc178 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":145:5)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":146:5)
#loc180 = loc("/usr/include/stdlib.h":575:1)
#loc181 = loc("/usr/include/stdlib.h":575:41)
#loc182 = loc("/usr/include/time.h":76:1)
#loc183 = loc("/usr/include/time.h":76:38)
#loc184 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":167:15)
#loc185 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":169:15)
#loc186 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":172:15)
#loc187 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":174:15)
#loc188 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":162:1)
#loc189 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":177:1)
#loc194 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":163:1)
#loc195 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":165:27)
#loc196 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":165:22)
#loc197 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":165:5)
#loc198 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":167:5)
#loc199 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":168:5)
#loc200 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":169:5)
#loc201 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":172:5)
#loc202 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":173:5)
#loc203 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":174:5)
#loc204 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":176:12)
#loc205 = loc("CWE23_Relative_Path_Traversal__char_console_open_05.cpp":176:5)
#loc206 = loc(fused[#loc1, #loc2])
#loc207 = loc(fused[#loc3, #loc4])
#loc208 = loc(fused[#loc5, #loc6])
#loc209 = loc(fused[#loc7, #loc8])
#loc210 = loc(fused[#loc9, #loc10])
#loc211 = loc(fused[#loc11, #loc12])
#loc212 = loc(fused[#loc13, #loc14])
#loc213 = loc(fused[#loc15, #loc16])
#loc214 = loc(fused[#loc18, #loc19])
#loc215 = loc(fused[#loc20, #loc21])
#loc216 = loc(fused[#loc22, #loc23])
#loc217 = loc(fused[#loc24, #loc25])
#loc218 = loc(fused[#loc26, #loc27])
#loc219 = loc(fused[#loc28, #loc29])
#loc220 = loc(fused[#loc31, #loc30])
#loc221 = loc(fused[#loc32, #loc33])
#loc222 = loc(fused[#loc35, #loc33])
#loc223 = loc(fused[#loc36, #loc37])
#loc224 = loc(fused[#loc40, #loc41])
#loc225 = loc(fused[#loc42, #loc43])
#loc226 = loc(fused[#loc42, #loc44])
#loc227 = loc(fused[#loc45, #loc41])
#loc228 = loc(fused[#loc46, #loc47])
#loc229 = loc(fused[#loc51, #loc52])
#loc230 = loc(fused[#loc54, #loc55])
#loc231 = loc(fused[#loc56, #loc57, #loc58, #loc47])
#loc232 = loc(fused[#loc61, #loc62])
#loc233 = loc(fused[#loc63, #loc64])
#loc234 = loc(fused[#loc65, #loc66])
#loc235 = loc(fused[#loc69, #loc70])
#loc236 = loc(fused[#loc68, #loc72])
#loc237 = loc(fused[#loc73, #loc64])
#loc238 = loc(fused[#loc76, #loc77])
#loc239 = loc(fused[#loc75, #loc74])
#loc240 = loc(fused[#loc81, #loc80])
#loc241 = loc(fused[#loc84, #loc85])
#loc242 = loc(fused[#loc87, #loc88])
#loc243 = loc(fused[#loc89, #loc90])
#loc244 = loc(fused[#loc92, #loc93])
#loc245 = loc(fused[#loc94, #loc95])
#loc246 = loc(fused[#loc96, #loc97])
#loc247 = loc(fused[#loc99, #loc95])
#loc248 = loc(fused[#loc102, #loc103])
#loc249 = loc(fused[#loc105, #loc106])
#loc250 = loc(fused[#loc108, #loc109])
#loc251 = loc(fused[#loc110, #loc111])
#loc252 = loc(fused[#loc112, #loc113])
#loc253 = loc(fused[#loc115, #loc114])
#loc254 = loc(fused[#loc116, #loc117])
#loc255 = loc(fused[#loc119, #loc120, #loc121, #loc117])
#loc256 = loc(fused[#loc125, #loc126])
#loc257 = loc(fused[#loc128, #loc129])
#loc258 = loc(fused[#loc130, #loc131])
#loc259 = loc(fused[#loc133, #loc134])
#loc260 = loc(fused[#loc135, #loc136])
#loc261 = loc(fused[#loc137, #loc138])
#loc262 = loc(fused[#loc140, #loc136])
#loc263 = loc(fused[#loc143, #loc144])
#loc264 = loc(fused[#loc145, #loc146])
#loc265 = loc(fused[#loc147, #loc148])
#loc266 = loc(fused[#loc150, #loc149])
#loc267 = loc(fused[#loc151, #loc152])
#loc268 = loc(fused[#loc154, #loc152])
#loc269 = loc(fused[#loc158, #loc159])
#loc270 = loc(fused[#loc161, #loc162])
#loc271 = loc(fused[#loc163, #loc164])
#loc272 = loc(fused[#loc166, #loc167])
#loc273 = loc(fused[#loc168, #loc169])
#loc274 = loc(fused[#loc170, #loc171])
#loc275 = loc(fused[#loc173, #loc169])
#loc276 = loc(fused[#loc176, #loc177])
#loc277 = loc(fused[#loc180, #loc181])
#loc278 = loc(fused[#loc182, #loc183])
#loc279 = loc(fused[#loc188, #loc189])
#loc282 = loc(fused[#loc205, #loc204])
