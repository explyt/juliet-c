!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE685_Function_Call_With_Incorrect_Number_of_Arguments/CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @sprintf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s %s\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"AAA\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc4)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc77)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc12)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc81)
            %2 = cir.get_global @sprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc18)
            %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc19)
            %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc3)
            %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc3)
            %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc4)
            %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc4)
            %8 = cir.call @sprintf(%3, %5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc18)
            %9 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc20)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc21)
          } loc(#loc80)
          cir.break loc(#loc22)
        } loc(#loc13)
        cir.case(default, []) {
          %1 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc7)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc7)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc24)
          cir.break loc(#loc25)
        } loc(#loc23)
        cir.yield loc(#loc10)
      } loc(#loc10)
    } loc(#loc79)
    cir.return loc(#loc9)
  } loc(#loc78)
  cir.func no_proto @CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc83)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc28)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc84)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc30)
    cir.return loc(#loc27)
  } loc(#loc82)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc36)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %1 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc38)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc38)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc39)
          cir.break loc(#loc40)
        } loc(#loc37)
        cir.case(default, []) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc88)
            %2 = cir.get_global @sprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc46)
            %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
            %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc48)
            %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc48)
            %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc49)
            %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc49)
            %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc50)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc50)
            %10 = cir.call @sprintf(%3, %5, %7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc46)
            %11 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc51)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc52)
          } loc(#loc87)
          cir.break loc(#loc53)
        } loc(#loc41)
        cir.yield loc(#loc34)
      } loc(#loc34)
    } loc(#loc86)
    cir.return loc(#loc33)
  } loc(#loc85)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc58)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc92)
            %2 = cir.get_global @sprintf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc64)
            %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc65)
            %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc66)
            %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc66)
            %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc67)
            %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc67)
            %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc68)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc68)
            %10 = cir.call @sprintf(%3, %5, %7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc64)
            %11 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc69)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc70)
          } loc(#loc91)
          cir.break loc(#loc71)
        } loc(#loc59)
        cir.case(default, []) {
          %1 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc73)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc73)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc74)
          cir.break loc(#loc75)
        } loc(#loc72)
        cir.yield loc(#loc56)
      } loc(#loc56)
    } loc(#loc90)
    cir.return loc(#loc55)
  } loc(#loc89)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE685_Function_Call_With_Incorrect_Number_of_Arguments/CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":365:1)
#loc2 = loc("/usr/include/stdio.h":366:45)
#loc3 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":31:23)
#loc4 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":31:32)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":37:19)
#loc8 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":23:1)
#loc9 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":40:1)
#loc10 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":25:5)
#loc11 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":39:5)
#loc12 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":25:12)
#loc13 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":27:5)
#loc14 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":28:5)
#loc15 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":33:5)
#loc16 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":29:9)
#loc17 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":29:28)
#loc18 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":31:9)
#loc19 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":31:17)
#loc20 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":32:19)
#loc21 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":32:9)
#loc22 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":34:5)
#loc23 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":35:5)
#loc24 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":37:9)
#loc25 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":38:9)
#loc26 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":86:1)
#loc27 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":90:1)
#loc28 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":88:5)
#loc29 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":88:11)
#loc30 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":89:5)
#loc31 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":89:11)
#loc32 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":47:1)
#loc33 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":64:1)
#loc34 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":49:5)
#loc35 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":63:5)
#loc36 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":49:12)
#loc37 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":51:5)
#loc38 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":53:19)
#loc39 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":53:9)
#loc40 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":54:9)
#loc41 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":55:5)
#loc42 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":56:5)
#loc43 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":61:5)
#loc44 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":57:9)
#loc45 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":57:28)
#loc46 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":59:9)
#loc47 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":59:17)
#loc48 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":59:23)
#loc49 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":59:32)
#loc50 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":59:47)
#loc51 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":60:19)
#loc52 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":60:9)
#loc53 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":62:5)
#loc54 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":67:1)
#loc55 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":84:1)
#loc56 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":69:5)
#loc57 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":83:5)
#loc58 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":69:12)
#loc59 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":71:5)
#loc60 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":72:5)
#loc61 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":77:5)
#loc62 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":73:9)
#loc63 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":73:28)
#loc64 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":75:9)
#loc65 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":75:17)
#loc66 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":75:23)
#loc67 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":75:32)
#loc68 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":75:47)
#loc69 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":76:19)
#loc70 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":76:9)
#loc71 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":78:5)
#loc72 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":79:5)
#loc73 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":81:19)
#loc74 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":81:9)
#loc75 = loc("CWE685_Function_Call_With_Incorrect_Number_of_Arguments__basic_15.c":82:9)
#loc76 = loc(fused[#loc1, #loc2])
#loc77 = loc(fused[#loc5, #loc6])
#loc78 = loc(fused[#loc8, #loc9])
#loc79 = loc(fused[#loc10, #loc11])
#loc80 = loc(fused[#loc14, #loc15])
#loc81 = loc(fused[#loc16, #loc17])
#loc82 = loc(fused[#loc26, #loc27])
#loc83 = loc(fused[#loc28, #loc29])
#loc84 = loc(fused[#loc30, #loc31])
#loc85 = loc(fused[#loc32, #loc33])
#loc86 = loc(fused[#loc34, #loc35])
#loc87 = loc(fused[#loc42, #loc43])
#loc88 = loc(fused[#loc44, #loc45])
#loc89 = loc(fused[#loc54, #loc55])
#loc90 = loc(fused[#loc56, #loc57])
#loc91 = loc(fused[#loc60, #loc61])
#loc92 = loc(fused[#loc62, #loc63])
