!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":30:75)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":30:82)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":47:79)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":47:86)
#loc59 = loc(fused[#loc13, #loc14])
#loc66 = loc(fused[#loc34, #loc35])
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e_goodG2BSink.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc53)
  cir.global "private" constant cir_private @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e_badSink.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc54)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc55)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc56)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc57)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc13, #loc14])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc59)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc15)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc54)
      %2 = cir.get_global @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e_badSink.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc54)
      cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc54)
      %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
      %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc19)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc19)
      %7 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc20)
      %8 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc21)
      %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc20)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc22)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc22)
      %12 = cir.binop(add, %9, %11) : !u64i loc(#loc61)
      %13 = cir.const #cir.int<1> : !u64i loc(#loc62)
      %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc63)
      cir.libc.memmove %14 bytes from %6 to %4 : !cir.ptr<!void>, !u64i loc(#loc64)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
      cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc29)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc30)
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc31)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc30)
    } loc(#loc60)
    cir.return loc(#loc12)
  } loc(#loc58)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc34, #loc35])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc66)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc36)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc53)
      %2 = cir.get_global @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e_goodG2BSink.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc53)
      cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc53)
      %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc39)
      %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc40)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc40)
      %7 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc41)
      %8 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc42)
      %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc41)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc43)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc43)
      %12 = cir.binop(add, %9, %11) : !u64i loc(#loc68)
      %13 = cir.const #cir.int<1> : !u64i loc(#loc69)
      %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc70)
      cir.libc.memmove %14 bytes from %6 to %4 : !cir.ptr<!void>, !u64i loc(#loc71)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
      cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc50)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc51)
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc52)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc51)
    } loc(#loc67)
    cir.return loc(#loc33)
  } loc(#loc65)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":50:9)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":50:29)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":33:9)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":33:29)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":30:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":40:1)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":31:1)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":32:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":39:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":36:17)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":36:23)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":36:32)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":36:39)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":36:49)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":36:54)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":36:65)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":36:31)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":36:9)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":36:66)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":37:19)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":37:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":38:9)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":38:14)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":47:1)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":57:1)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":48:1)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":49:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":56:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":53:17)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":53:23)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":53:32)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":53:39)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":53:49)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":53:54)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":53:65)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":53:31)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":53:9)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":53:66)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":54:19)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":54:9)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":55:9)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_memmove_54e.c":55:14)
#loc53 = loc(fused[#loc1, #loc2])
#loc54 = loc(fused[#loc3, #loc4])
#loc55 = loc(fused[#loc5, #loc6])
#loc56 = loc(fused[#loc7, #loc8])
#loc57 = loc(fused[#loc9, #loc10])
#loc58 = loc(fused[#loc11, #loc12])
#loc60 = loc(fused[#loc16, #loc17])
#loc61 = loc(fused[#loc20, #loc22])
#loc62 = loc(fused[#loc23, #loc24])
#loc63 = loc(fused[#loc25, #loc24])
#loc64 = loc(fused[#loc26, #loc27])
#loc65 = loc(fused[#loc32, #loc33])
#loc67 = loc(fused[#loc37, #loc38])
#loc68 = loc(fused[#loc41, #loc43])
#loc69 = loc(fused[#loc44, #loc45])
#loc70 = loc(fused[#loc46, #loc45])
#loc71 = loc(fused[#loc47, #loc48])
