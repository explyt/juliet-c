!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc101 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":89:44)
#loc156 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":403:10)
#loc157 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":403:14)
#loc158 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":403:20)
#loc159 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":403:32)
#loc253 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":180:44)
#loc287 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":215:28)
#loc378 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":272:44)
#loc409 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":303:28)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc545 = loc(fused[#loc156, #loc157])
#loc546 = loc(fused[#loc158, #loc159])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_square_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc489)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc490)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc491)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc492)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc493)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc494)
  cir.func private @close(!s32i) -> !s32i loc(#loc495)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc496)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc18)
  cir.func private @printIntLine(!s32i) loc(#loc497)
  cir.func no_proto @CWE190_Integer_Overflow__int_connect_socket_square_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc499)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc500)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc501)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc502)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc503)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc504)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc35)
    cir.store %6, %5 : !s32i, !cir.ptr<!s32i> loc(#loc505)
    cir.br ^bb1 loc(#loc506)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<6> : !s32i loc(#loc39)
    cir.br ^bb2 loc(#loc37)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %7 : !s32i, ^bb36 [
      6: ^bb4
    ] loc(#loc37)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc40)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc507)
  ^bb5:  // pred: ^bb4
    %8 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc28)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc501)
    cir.br ^bb6 loc(#loc508)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc508)
  ^bb7:  // pred: ^bb28
    %10 = cir.const #cir.int<0> : !s32i loc(#loc45)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc45)
    cir.brcond %11 ^bb8, ^bb29 loc(#loc45)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    %12 = cir.const #cir.int<2> : !s32i loc(#loc46)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc47)
    %14 = cir.const #cir.int<6> : !s32i loc(#loc48)
    %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc49)
    cir.store %15, %2 : !s32i, !cir.ptr<!s32i> loc(#loc509)
    cir.br ^bb9 loc(#loc510)
  ^bb9:  // pred: ^bb8
    %16 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc54)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc55)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc55)
    %19 = cir.cmp(eq, %16, %18) : !s32i, !cir.bool loc(#loc511)
    cir.brcond %19 ^bb10, ^bb11 loc(#loc512)
  ^bb10:  // pred: ^bb9
    cir.br ^bb29 loc(#loc57)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc53)
  ^bb12:  // pred: ^bb11
    %20 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc513)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc60)
    %22 = cir.const #cir.int<16> : !u64i loc(#loc514)
    cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc515)
    %23 = cir.const #cir.int<2> : !s32i loc(#loc65)
    %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc65)
    %25 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
    cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc516)
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %28 = cir.call @inet_addr(%27) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc68)
    %29 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc69)
    %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc70)
    cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc517)
    %31 = cir.const #cir.int<27015> : !s32i loc(#loc73)
    %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc73)
    %33 = cir.call @htons(%32) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc74)
    %34 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
    cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc518)
    cir.br ^bb13 loc(#loc519)
  ^bb13:  // pred: ^bb12
    %35 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc80)
    %36 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc520)
    %37 = cir.const #cir.int<16> : !u64i loc(#loc521)
    %38 = cir.cast(integral, %37 : !u64i), !u32i loc(#loc521)
    %39 = cir.call @connect(%35, %36, %38) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc85)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %41 = cir.unary(minus, %40) : !s32i, !s32i loc(#loc86)
    %42 = cir.cmp(eq, %39, %41) : !s32i, !cir.bool loc(#loc522)
    cir.brcond %42 ^bb14, ^bb15 loc(#loc523)
  ^bb14:  // pred: ^bb13
    cir.br ^bb29 loc(#loc88)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc79)
  ^bb16:  // pred: ^bb15
    %43 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    %44 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc90)
    %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc90)
    %46 = cir.const #cir.int<3> : !s32i loc(#loc91)
    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc91)
    %48 = cir.const #cir.int<4> : !u64i loc(#loc91)
    %49 = cir.binop(mul, %47, %48) : !u64i loc(#loc91)
    %50 = cir.const #cir.int<2> : !s32i loc(#loc91)
    %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc91)
    %52 = cir.binop(add, %49, %51) : !u64i loc(#loc91)
    %53 = cir.const #cir.int<1> : !s32i loc(#loc92)
    %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc92)
    %55 = cir.binop(sub, %52, %54) : !u64i loc(#loc524)
    %56 = cir.const #cir.int<0> : !s32i loc(#loc93)
    %57 = cir.call @recv(%43, %45, %55, %56) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc94)
    %58 = cir.cast(integral, %57 : !s64i), !s32i loc(#loc94)
    cir.store %58, %0 : !s32i, !cir.ptr<!s32i> loc(#loc525)
    cir.br ^bb17 loc(#loc526)
  ^bb17:  // pred: ^bb16
    %59 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %60 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc100)
    %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc527)
    cir.brcond %62 ^bb18, ^bb19 loc(#loc101)
  ^bb18:  // pred: ^bb17
    %63 = cir.const #true loc(#loc101)
    cir.br ^bb24(%63 : !cir.bool) loc(#loc101)
  ^bb19:  // pred: ^bb17
    %64 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc102)
    %65 = cir.const #cir.int<0> : !s32i loc(#loc103)
    %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc528)
    cir.brcond %66 ^bb20, ^bb21 loc(#loc101)
  ^bb20:  // pred: ^bb19
    %67 = cir.const #true loc(#loc101)
    cir.br ^bb22(%67 : !cir.bool) loc(#loc101)
  ^bb21:  // pred: ^bb19
    %68 = cir.const #false loc(#loc101)
    cir.br ^bb22(%68 : !cir.bool) loc(#loc101)
  ^bb22(%69: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":89:44)):  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc101)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24(%69 : !cir.bool) loc(#loc101)
  ^bb24(%70: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":89:44)):  // 2 preds: ^bb18, ^bb23
    cir.br ^bb25 loc(#loc101)
  ^bb25:  // pred: ^bb24
    cir.brcond %70 ^bb26, ^bb27 loc(#loc529)
  ^bb26:  // pred: ^bb25
    cir.br ^bb29 loc(#loc105)
  ^bb27:  // pred: ^bb25
    cir.br ^bb28 loc(#loc98)
  ^bb28:  // pred: ^bb27
    %71 = cir.const #cir.int<0> : !s32i loc(#loc106)
    %72 = cir.cast(integral, %71 : !s32i), !s8i loc(#loc106)
    %73 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %74 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc108)
    %75 = cir.ptr_stride(%74 : !cir.ptr<!s8i>, %73 : !s32i), !cir.ptr<!s8i> loc(#loc108)
    cir.store %72, %75 : !s8i, !cir.ptr<!s8i> loc(#loc530)
    %76 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc109)
    %77 = cir.call @atoi(%76) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc110)
    cir.store %77, %5 : !s32i, !cir.ptr<!s32i> loc(#loc531)
    cir.br ^bb7 loc(#loc44)
  ^bb29:  // 4 preds: ^bb7, ^bb10, ^bb14, ^bb26
    cir.br ^bb30 loc(#loc44)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc532)
  ^bb31:  // pred: ^bb30
    %78 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc115)
    %79 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc116)
    %81 = cir.cmp(ne, %78, %80) : !s32i, !cir.bool loc(#loc533)
    cir.brcond %81 ^bb32, ^bb33 loc(#loc534)
  ^bb32:  // pred: ^bb31
    %82 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    %83 = cir.call @close(%82) : (!s32i) -> !s32i loc(#loc119)
    cir.br ^bb33 loc(#loc114)
  ^bb33:  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc114)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc42)
  ^bb35:  // pred: ^bb34
    cir.br ^bb37 loc(#loc120)
  ^bb36:  // pred: ^bb2
    %84 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc18)
    %85 = cir.cast(array_to_ptrdecay, %84 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc18)
    cir.call @printLine(%85) : (!cir.ptr<!s8i>) -> () loc(#loc121)
    cir.br ^bb37 loc(#loc122)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc38)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc535)
  ^bb39:  // pred: ^bb38
    %86 = cir.const #cir.int<7> : !s32i loc(#loc125)
    cir.br ^bb40 loc(#loc123)
  ^bb40:  // pred: ^bb39
    cir.switch.flat %86 : !s32i, ^bb45 [
      7: ^bb42
    ] loc(#loc123)
  ^bb41:  // no predecessors
    cir.br ^bb42 loc(#loc126)
  ^bb42:  // 2 preds: ^bb40, ^bb41
    cir.br ^bb43 loc(#loc536)
  ^bb43:  // pred: ^bb42
    %87 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    %88 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    %89 = cir.binop(mul, %87, %88) nsw : !s32i loc(#loc129)
    cir.store %89, %4 : !s32i, !cir.ptr<!s32i> loc(#loc503)
    %90 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    cir.call @printIntLine(%90) : (!s32i) -> () loc(#loc131)
    cir.br ^bb44 loc(#loc128)
  ^bb44:  // pred: ^bb43
    cir.br ^bb46 loc(#loc132)
  ^bb45:  // pred: ^bb40
    %91 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc133)
    %92 = cir.cast(array_to_ptrdecay, %91 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc133)
    cir.call @printLine(%92) : (!cir.ptr<!s8i>) -> () loc(#loc134)
    cir.br ^bb46 loc(#loc135)
  ^bb46:  // 2 preds: ^bb44, ^bb45
    cir.br ^bb47 loc(#loc124)
  ^bb47:  // pred: ^bb46
    cir.return loc(#loc22)
  } loc(#loc498)
  cir.func no_proto @CWE190_Integer_Overflow__int_connect_socket_square_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc538)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc138)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc539)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc140)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc540)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc142)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc541)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc144)
    cir.return loc(#loc137)
  } loc(#loc537)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc542)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc543)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc151)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc152)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc153)
  cir.func @main(%arg0: !s32i loc(fused[#loc156, #loc157]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc158, #loc159])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc545)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc546)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc155)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc160)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc160)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc161)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc162)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc162)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc163)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc150)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc150)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc164)
    %8 = cir.get_global @CWE190_Integer_Overflow__int_connect_socket_square_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc547)
    cir.call @CWE190_Integer_Overflow__int_connect_socket_square_15_good() : () -> () loc(#loc165)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc151)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc151)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc167)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc152)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc152)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc168)
    %13 = cir.get_global @CWE190_Integer_Overflow__int_connect_socket_square_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc548)
    cir.call @CWE190_Integer_Overflow__int_connect_socket_square_15_bad() : () -> () loc(#loc169)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc153)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc153)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc171)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc172)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc549)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc549)
    cir.return %17 : !s32i loc(#loc549)
  } loc(#loc544)
  cir.func private @sqrt(!cir.double) -> !cir.double extra(#fn_attr) loc(#loc174)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc175)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc551)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc552)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc553)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc554)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc555)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc556)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc190)
    cir.store %6, %5 : !s32i, !cir.ptr<!s32i> loc(#loc557)
    cir.br ^bb1 loc(#loc558)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<6> : !s32i loc(#loc194)
    cir.br ^bb2 loc(#loc192)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %7 : !s32i, ^bb36 [
      6: ^bb4
    ] loc(#loc192)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc195)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc559)
  ^bb5:  // pred: ^bb4
    %8 = cir.const #cir.int<1> : !s32i loc(#loc183)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc183)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc553)
    cir.br ^bb6 loc(#loc560)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc560)
  ^bb7:  // pred: ^bb28
    %10 = cir.const #cir.int<0> : !s32i loc(#loc200)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc200)
    cir.brcond %11 ^bb8, ^bb29 loc(#loc200)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    %12 = cir.const #cir.int<2> : !s32i loc(#loc201)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc202)
    %14 = cir.const #cir.int<6> : !s32i loc(#loc203)
    %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc204)
    cir.store %15, %2 : !s32i, !cir.ptr<!s32i> loc(#loc561)
    cir.br ^bb9 loc(#loc562)
  ^bb9:  // pred: ^bb8
    %16 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc209)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc210)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc210)
    %19 = cir.cmp(eq, %16, %18) : !s32i, !cir.bool loc(#loc563)
    cir.brcond %19 ^bb10, ^bb11 loc(#loc564)
  ^bb10:  // pred: ^bb9
    cir.br ^bb29 loc(#loc212)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc208)
  ^bb12:  // pred: ^bb11
    %20 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc565)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc215)
    %22 = cir.const #cir.int<16> : !u64i loc(#loc566)
    cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc567)
    %23 = cir.const #cir.int<2> : !s32i loc(#loc220)
    %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc220)
    %25 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
    cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc568)
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc222)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc222)
    %28 = cir.call @inet_addr(%27) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc223)
    %29 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc69)
    %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc70)
    cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc569)
    %31 = cir.const #cir.int<27015> : !s32i loc(#loc226)
    %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc226)
    %33 = cir.call @htons(%32) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc227)
    %34 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
    cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc570)
    cir.br ^bb13 loc(#loc571)
  ^bb13:  // pred: ^bb12
    %35 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc232)
    %36 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc572)
    %37 = cir.const #cir.int<16> : !u64i loc(#loc573)
    %38 = cir.cast(integral, %37 : !u64i), !u32i loc(#loc573)
    %39 = cir.call @connect(%35, %36, %38) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc237)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc238)
    %41 = cir.unary(minus, %40) : !s32i, !s32i loc(#loc238)
    %42 = cir.cmp(eq, %39, %41) : !s32i, !cir.bool loc(#loc574)
    cir.brcond %42 ^bb14, ^bb15 loc(#loc575)
  ^bb14:  // pred: ^bb13
    cir.br ^bb29 loc(#loc240)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc231)
  ^bb16:  // pred: ^bb15
    %43 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc241)
    %44 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc242)
    %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc242)
    %46 = cir.const #cir.int<3> : !s32i loc(#loc243)
    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc243)
    %48 = cir.const #cir.int<4> : !u64i loc(#loc243)
    %49 = cir.binop(mul, %47, %48) : !u64i loc(#loc243)
    %50 = cir.const #cir.int<2> : !s32i loc(#loc243)
    %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc243)
    %52 = cir.binop(add, %49, %51) : !u64i loc(#loc243)
    %53 = cir.const #cir.int<1> : !s32i loc(#loc244)
    %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc244)
    %55 = cir.binop(sub, %52, %54) : !u64i loc(#loc576)
    %56 = cir.const #cir.int<0> : !s32i loc(#loc245)
    %57 = cir.call @recv(%43, %45, %55, %56) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc246)
    %58 = cir.cast(integral, %57 : !s64i), !s32i loc(#loc246)
    cir.store %58, %0 : !s32i, !cir.ptr<!s32i> loc(#loc577)
    cir.br ^bb17 loc(#loc578)
  ^bb17:  // pred: ^bb16
    %59 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc251)
    %60 = cir.const #cir.int<1> : !s32i loc(#loc252)
    %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc252)
    %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc579)
    cir.brcond %62 ^bb18, ^bb19 loc(#loc253)
  ^bb18:  // pred: ^bb17
    %63 = cir.const #true loc(#loc253)
    cir.br ^bb24(%63 : !cir.bool) loc(#loc253)
  ^bb19:  // pred: ^bb17
    %64 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc254)
    %65 = cir.const #cir.int<0> : !s32i loc(#loc255)
    %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc580)
    cir.brcond %66 ^bb20, ^bb21 loc(#loc253)
  ^bb20:  // pred: ^bb19
    %67 = cir.const #true loc(#loc253)
    cir.br ^bb22(%67 : !cir.bool) loc(#loc253)
  ^bb21:  // pred: ^bb19
    %68 = cir.const #false loc(#loc253)
    cir.br ^bb22(%68 : !cir.bool) loc(#loc253)
  ^bb22(%69: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":180:44)):  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc253)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24(%69 : !cir.bool) loc(#loc253)
  ^bb24(%70: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":180:44)):  // 2 preds: ^bb18, ^bb23
    cir.br ^bb25 loc(#loc253)
  ^bb25:  // pred: ^bb24
    cir.brcond %70 ^bb26, ^bb27 loc(#loc581)
  ^bb26:  // pred: ^bb25
    cir.br ^bb29 loc(#loc257)
  ^bb27:  // pred: ^bb25
    cir.br ^bb28 loc(#loc250)
  ^bb28:  // pred: ^bb27
    %71 = cir.const #cir.int<0> : !s32i loc(#loc258)
    %72 = cir.cast(integral, %71 : !s32i), !s8i loc(#loc258)
    %73 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc259)
    %74 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc260)
    %75 = cir.ptr_stride(%74 : !cir.ptr<!s8i>, %73 : !s32i), !cir.ptr<!s8i> loc(#loc260)
    cir.store %72, %75 : !s8i, !cir.ptr<!s8i> loc(#loc582)
    %76 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc261)
    %77 = cir.call @atoi(%76) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc262)
    cir.store %77, %5 : !s32i, !cir.ptr<!s32i> loc(#loc583)
    cir.br ^bb7 loc(#loc199)
  ^bb29:  // 4 preds: ^bb7, ^bb10, ^bb14, ^bb26
    cir.br ^bb30 loc(#loc199)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc584)
  ^bb31:  // pred: ^bb30
    %78 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc267)
    %79 = cir.const #cir.int<1> : !s32i loc(#loc268)
    %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc268)
    %81 = cir.cmp(ne, %78, %80) : !s32i, !cir.bool loc(#loc585)
    cir.brcond %81 ^bb32, ^bb33 loc(#loc586)
  ^bb32:  // pred: ^bb31
    %82 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc270)
    %83 = cir.call @close(%82) : (!s32i) -> !s32i loc(#loc271)
    cir.br ^bb33 loc(#loc266)
  ^bb33:  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc266)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc197)
  ^bb35:  // pred: ^bb34
    cir.br ^bb37 loc(#loc272)
  ^bb36:  // pred: ^bb2
    %84 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc273)
    %85 = cir.cast(array_to_ptrdecay, %84 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc273)
    cir.call @printLine(%85) : (!cir.ptr<!s8i>) -> () loc(#loc274)
    cir.br ^bb37 loc(#loc275)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc193)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc587)
  ^bb39:  // pred: ^bb38
    %86 = cir.const #cir.int<8> : !s32i loc(#loc278)
    cir.br ^bb40 loc(#loc276)
  ^bb40:  // pred: ^bb39
    cir.switch.flat %86 : !s32i, ^bb43 [
      7: ^bb42
    ] loc(#loc276)
  ^bb41:  // no predecessors
    cir.br ^bb42 loc(#loc279)
  ^bb42:  // 2 preds: ^bb40, ^bb41
    %87 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc280)
    %88 = cir.cast(array_to_ptrdecay, %87 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc280)
    cir.call @printLine(%88) : (!cir.ptr<!s8i>) -> () loc(#loc281)
    cir.br ^bb57 loc(#loc282)
  ^bb43:  // pred: ^bb40
    cir.br ^bb44 loc(#loc588)
  ^bb44:  // pred: ^bb43
    %89 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc285)
    %90 = cir.const #cir.int<2147483647> : !s32i loc(#loc286)
    %91 = cir.unary(minus, %90) : !s32i, !s32i loc(#loc286)
    %92 = cir.const #cir.int<1> : !s32i loc(#loc286)
    %93 = cir.binop(sub, %91, %92) nsw : !s32i loc(#loc286)
    %94 = cir.cmp(gt, %89, %93) : !s32i, !cir.bool loc(#loc589)
    cir.brcond %94 ^bb45, ^bb50 loc(#loc287)
  ^bb45:  // pred: ^bb44
    %95 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc288)
    %96 = cir.abs %95 poison : !s32i loc(#loc289)
    %97 = cir.cast(integral, %96 : !s32i), !s64i loc(#loc289)
    %98 = cir.get_global @sqrt : !cir.ptr<!cir.func<!cir.double (!cir.double)>> loc(#loc290)
    %99 = cir.const #cir.int<2147483647> : !s32i loc(#loc291)
    %100 = cir.cast(int_to_float, %99 : !s32i), !cir.double loc(#loc291)
    %101 = cir.call @sqrt(%100) : (!cir.double) -> !cir.double extra(#fn_attr) loc(#loc290)
    %102 = cir.cast(float_to_int, %101 : !cir.double), !s64i loc(#loc290)
    %103 = cir.cmp(lt, %97, %102) : !s64i, !cir.bool loc(#loc590)
    cir.brcond %103 ^bb46, ^bb47 loc(#loc287)
  ^bb46:  // pred: ^bb45
    %104 = cir.const #true loc(#loc287)
    cir.br ^bb48(%104 : !cir.bool) loc(#loc287)
  ^bb47:  // pred: ^bb45
    %105 = cir.const #false loc(#loc287)
    cir.br ^bb48(%105 : !cir.bool) loc(#loc287)
  ^bb48(%106: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":215:28)):  // 2 preds: ^bb46, ^bb47
    cir.br ^bb49 loc(#loc287)
  ^bb49:  // pred: ^bb48
    cir.br ^bb51(%106 : !cir.bool) loc(#loc287)
  ^bb50:  // pred: ^bb44
    %107 = cir.const #false loc(#loc287)
    cir.br ^bb51(%107 : !cir.bool) loc(#loc287)
  ^bb51(%108: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":215:28)):  // 2 preds: ^bb49, ^bb50
    cir.br ^bb52 loc(#loc287)
  ^bb52:  // pred: ^bb51
    cir.brcond %108 ^bb53, ^bb54 loc(#loc591)
  ^bb53:  // pred: ^bb52
    %109 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc296)
    %110 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc187)
    %111 = cir.binop(mul, %109, %110) nsw : !s32i loc(#loc296)
    cir.store %111, %4 : !s32i, !cir.ptr<!s32i> loc(#loc555)
    %112 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc297)
    cir.call @printIntLine(%112) : (!s32i) -> () loc(#loc298)
    cir.br ^bb55 loc(#loc294)
  ^bb54:  // pred: ^bb52
    %113 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc175)
    %114 = cir.cast(array_to_ptrdecay, %113 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc175)
    cir.call @printLine(%114) : (!cir.ptr<!s8i>) -> () loc(#loc299)
    cir.br ^bb55 loc(#loc284)
  ^bb55:  // 2 preds: ^bb53, ^bb54
    cir.br ^bb56 loc(#loc284)
  ^bb56:  // pred: ^bb55
    cir.br ^bb57 loc(#loc300)
  ^bb57:  // 2 preds: ^bb42, ^bb56
    cir.br ^bb58 loc(#loc277)
  ^bb58:  // pred: ^bb57
    cir.return loc(#loc177)
  } loc(#loc550)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc593)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc594)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc595)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc596)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc597)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc598)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc315)
    cir.store %6, %5 : !s32i, !cir.ptr<!s32i> loc(#loc599)
    cir.br ^bb1 loc(#loc600)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<6> : !s32i loc(#loc319)
    cir.br ^bb2 loc(#loc317)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %7 : !s32i, ^bb36 [
      6: ^bb4
    ] loc(#loc317)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc320)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc601)
  ^bb5:  // pred: ^bb4
    %8 = cir.const #cir.int<1> : !s32i loc(#loc308)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc308)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc595)
    cir.br ^bb6 loc(#loc602)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc602)
  ^bb7:  // pred: ^bb28
    %10 = cir.const #cir.int<0> : !s32i loc(#loc325)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc325)
    cir.brcond %11 ^bb8, ^bb29 loc(#loc325)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    %12 = cir.const #cir.int<2> : !s32i loc(#loc326)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc327)
    %14 = cir.const #cir.int<6> : !s32i loc(#loc328)
    %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc329)
    cir.store %15, %2 : !s32i, !cir.ptr<!s32i> loc(#loc603)
    cir.br ^bb9 loc(#loc604)
  ^bb9:  // pred: ^bb8
    %16 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc334)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc335)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc335)
    %19 = cir.cmp(eq, %16, %18) : !s32i, !cir.bool loc(#loc605)
    cir.brcond %19 ^bb10, ^bb11 loc(#loc606)
  ^bb10:  // pred: ^bb9
    cir.br ^bb29 loc(#loc337)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc333)
  ^bb12:  // pred: ^bb11
    %20 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc607)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc340)
    %22 = cir.const #cir.int<16> : !u64i loc(#loc608)
    cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc609)
    %23 = cir.const #cir.int<2> : !s32i loc(#loc345)
    %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc345)
    %25 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
    cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc610)
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc347)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc347)
    %28 = cir.call @inet_addr(%27) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc348)
    %29 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc69)
    %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc70)
    cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc611)
    %31 = cir.const #cir.int<27015> : !s32i loc(#loc351)
    %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc351)
    %33 = cir.call @htons(%32) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc352)
    %34 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
    cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc612)
    cir.br ^bb13 loc(#loc613)
  ^bb13:  // pred: ^bb12
    %35 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc357)
    %36 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc614)
    %37 = cir.const #cir.int<16> : !u64i loc(#loc615)
    %38 = cir.cast(integral, %37 : !u64i), !u32i loc(#loc615)
    %39 = cir.call @connect(%35, %36, %38) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc362)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc363)
    %41 = cir.unary(minus, %40) : !s32i, !s32i loc(#loc363)
    %42 = cir.cmp(eq, %39, %41) : !s32i, !cir.bool loc(#loc616)
    cir.brcond %42 ^bb14, ^bb15 loc(#loc617)
  ^bb14:  // pred: ^bb13
    cir.br ^bb29 loc(#loc365)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc356)
  ^bb16:  // pred: ^bb15
    %43 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc366)
    %44 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc367)
    %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc367)
    %46 = cir.const #cir.int<3> : !s32i loc(#loc368)
    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc368)
    %48 = cir.const #cir.int<4> : !u64i loc(#loc368)
    %49 = cir.binop(mul, %47, %48) : !u64i loc(#loc368)
    %50 = cir.const #cir.int<2> : !s32i loc(#loc368)
    %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc368)
    %52 = cir.binop(add, %49, %51) : !u64i loc(#loc368)
    %53 = cir.const #cir.int<1> : !s32i loc(#loc369)
    %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc369)
    %55 = cir.binop(sub, %52, %54) : !u64i loc(#loc618)
    %56 = cir.const #cir.int<0> : !s32i loc(#loc370)
    %57 = cir.call @recv(%43, %45, %55, %56) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc371)
    %58 = cir.cast(integral, %57 : !s64i), !s32i loc(#loc371)
    cir.store %58, %0 : !s32i, !cir.ptr<!s32i> loc(#loc619)
    cir.br ^bb17 loc(#loc620)
  ^bb17:  // pred: ^bb16
    %59 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc376)
    %60 = cir.const #cir.int<1> : !s32i loc(#loc377)
    %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc377)
    %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc621)
    cir.brcond %62 ^bb18, ^bb19 loc(#loc378)
  ^bb18:  // pred: ^bb17
    %63 = cir.const #true loc(#loc378)
    cir.br ^bb24(%63 : !cir.bool) loc(#loc378)
  ^bb19:  // pred: ^bb17
    %64 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc379)
    %65 = cir.const #cir.int<0> : !s32i loc(#loc380)
    %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc622)
    cir.brcond %66 ^bb20, ^bb21 loc(#loc378)
  ^bb20:  // pred: ^bb19
    %67 = cir.const #true loc(#loc378)
    cir.br ^bb22(%67 : !cir.bool) loc(#loc378)
  ^bb21:  // pred: ^bb19
    %68 = cir.const #false loc(#loc378)
    cir.br ^bb22(%68 : !cir.bool) loc(#loc378)
  ^bb22(%69: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":272:44)):  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc378)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24(%69 : !cir.bool) loc(#loc378)
  ^bb24(%70: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":272:44)):  // 2 preds: ^bb18, ^bb23
    cir.br ^bb25 loc(#loc378)
  ^bb25:  // pred: ^bb24
    cir.brcond %70 ^bb26, ^bb27 loc(#loc623)
  ^bb26:  // pred: ^bb25
    cir.br ^bb29 loc(#loc382)
  ^bb27:  // pred: ^bb25
    cir.br ^bb28 loc(#loc375)
  ^bb28:  // pred: ^bb27
    %71 = cir.const #cir.int<0> : !s32i loc(#loc383)
    %72 = cir.cast(integral, %71 : !s32i), !s8i loc(#loc383)
    %73 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc384)
    %74 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc385)
    %75 = cir.ptr_stride(%74 : !cir.ptr<!s8i>, %73 : !s32i), !cir.ptr<!s8i> loc(#loc385)
    cir.store %72, %75 : !s8i, !cir.ptr<!s8i> loc(#loc624)
    %76 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc386)
    %77 = cir.call @atoi(%76) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc387)
    cir.store %77, %5 : !s32i, !cir.ptr<!s32i> loc(#loc625)
    cir.br ^bb7 loc(#loc324)
  ^bb29:  // 4 preds: ^bb7, ^bb10, ^bb14, ^bb26
    cir.br ^bb30 loc(#loc324)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc626)
  ^bb31:  // pred: ^bb30
    %78 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc392)
    %79 = cir.const #cir.int<1> : !s32i loc(#loc393)
    %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc393)
    %81 = cir.cmp(ne, %78, %80) : !s32i, !cir.bool loc(#loc627)
    cir.brcond %81 ^bb32, ^bb33 loc(#loc628)
  ^bb32:  // pred: ^bb31
    %82 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc395)
    %83 = cir.call @close(%82) : (!s32i) -> !s32i loc(#loc396)
    cir.br ^bb33 loc(#loc391)
  ^bb33:  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc391)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc322)
  ^bb35:  // pred: ^bb34
    cir.br ^bb37 loc(#loc397)
  ^bb36:  // pred: ^bb2
    %84 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc398)
    %85 = cir.cast(array_to_ptrdecay, %84 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc398)
    cir.call @printLine(%85) : (!cir.ptr<!s8i>) -> () loc(#loc399)
    cir.br ^bb37 loc(#loc400)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc318)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc629)
  ^bb39:  // pred: ^bb38
    %86 = cir.const #cir.int<7> : !s32i loc(#loc403)
    cir.br ^bb40 loc(#loc401)
  ^bb40:  // pred: ^bb39
    cir.switch.flat %86 : !s32i, ^bb56 [
      7: ^bb42
    ] loc(#loc401)
  ^bb41:  // no predecessors
    cir.br ^bb42 loc(#loc404)
  ^bb42:  // 2 preds: ^bb40, ^bb41
    cir.br ^bb43 loc(#loc630)
  ^bb43:  // pred: ^bb42
    %87 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc407)
    %88 = cir.const #cir.int<2147483647> : !s32i loc(#loc408)
    %89 = cir.unary(minus, %88) : !s32i, !s32i loc(#loc408)
    %90 = cir.const #cir.int<1> : !s32i loc(#loc408)
    %91 = cir.binop(sub, %89, %90) nsw : !s32i loc(#loc408)
    %92 = cir.cmp(gt, %87, %91) : !s32i, !cir.bool loc(#loc631)
    cir.brcond %92 ^bb44, ^bb49 loc(#loc409)
  ^bb44:  // pred: ^bb43
    %93 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc410)
    %94 = cir.abs %93 poison : !s32i loc(#loc411)
    %95 = cir.cast(integral, %94 : !s32i), !s64i loc(#loc411)
    %96 = cir.get_global @sqrt : !cir.ptr<!cir.func<!cir.double (!cir.double)>> loc(#loc412)
    %97 = cir.const #cir.int<2147483647> : !s32i loc(#loc413)
    %98 = cir.cast(int_to_float, %97 : !s32i), !cir.double loc(#loc413)
    %99 = cir.call @sqrt(%98) : (!cir.double) -> !cir.double extra(#fn_attr) loc(#loc412)
    %100 = cir.cast(float_to_int, %99 : !cir.double), !s64i loc(#loc412)
    %101 = cir.cmp(lt, %95, %100) : !s64i, !cir.bool loc(#loc632)
    cir.brcond %101 ^bb45, ^bb46 loc(#loc409)
  ^bb45:  // pred: ^bb44
    %102 = cir.const #true loc(#loc409)
    cir.br ^bb47(%102 : !cir.bool) loc(#loc409)
  ^bb46:  // pred: ^bb44
    %103 = cir.const #false loc(#loc409)
    cir.br ^bb47(%103 : !cir.bool) loc(#loc409)
  ^bb47(%104: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":303:28)):  // 2 preds: ^bb45, ^bb46
    cir.br ^bb48 loc(#loc409)
  ^bb48:  // pred: ^bb47
    cir.br ^bb50(%104 : !cir.bool) loc(#loc409)
  ^bb49:  // pred: ^bb43
    %105 = cir.const #false loc(#loc409)
    cir.br ^bb50(%105 : !cir.bool) loc(#loc409)
  ^bb50(%106: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":303:28)):  // 2 preds: ^bb48, ^bb49
    cir.br ^bb51 loc(#loc409)
  ^bb51:  // pred: ^bb50
    cir.brcond %106 ^bb52, ^bb53 loc(#loc633)
  ^bb52:  // pred: ^bb51
    %107 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc418)
    %108 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc312)
    %109 = cir.binop(mul, %107, %108) nsw : !s32i loc(#loc418)
    cir.store %109, %4 : !s32i, !cir.ptr<!s32i> loc(#loc597)
    %110 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc419)
    cir.call @printIntLine(%110) : (!s32i) -> () loc(#loc420)
    cir.br ^bb54 loc(#loc416)
  ^bb53:  // pred: ^bb51
    %111 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc421)
    %112 = cir.cast(array_to_ptrdecay, %111 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc421)
    cir.call @printLine(%112) : (!cir.ptr<!s8i>) -> () loc(#loc422)
    cir.br ^bb54 loc(#loc406)
  ^bb54:  // 2 preds: ^bb52, ^bb53
    cir.br ^bb55 loc(#loc406)
  ^bb55:  // pred: ^bb54
    cir.br ^bb57 loc(#loc423)
  ^bb56:  // pred: ^bb40
    %113 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc424)
    %114 = cir.cast(array_to_ptrdecay, %113 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc424)
    cir.call @printLine(%114) : (!cir.ptr<!s8i>) -> () loc(#loc425)
    cir.br ^bb57 loc(#loc426)
  ^bb57:  // 2 preds: ^bb55, ^bb56
    cir.br ^bb58 loc(#loc402)
  ^bb58:  // pred: ^bb57
    cir.return loc(#loc302)
  } loc(#loc592)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc635)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc636)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc433)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc637)
    cir.br ^bb1 loc(#loc638)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc437)
    cir.br ^bb2 loc(#loc435)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc435)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc438)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc439)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc439)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc440)
    cir.br ^bb6 loc(#loc441)
  ^bb5:  // pred: ^bb2
    %6 = cir.const #cir.int<2> : !s32i loc(#loc442)
    cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc639)
    cir.br ^bb6 loc(#loc444)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc436)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc640)
  ^bb8:  // pred: ^bb7
    %7 = cir.const #cir.int<7> : !s32i loc(#loc447)
    cir.br ^bb9 loc(#loc445)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %7 : !s32i, ^bb14 [
      7: ^bb11
    ] loc(#loc445)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc448)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc641)
  ^bb12:  // pred: ^bb11
    %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc451)
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc430)
    %10 = cir.binop(mul, %8, %9) nsw : !s32i loc(#loc451)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc635)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc452)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc453)
    cir.br ^bb13 loc(#loc450)
  ^bb13:  // pred: ^bb12
    cir.br ^bb15 loc(#loc454)
  ^bb14:  // pred: ^bb9
    %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc455)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc455)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc456)
    cir.br ^bb15 loc(#loc457)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc446)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc428)
  } loc(#loc634)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc643)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc644)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc464)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc645)
    cir.br ^bb1 loc(#loc646)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc468)
    cir.br ^bb2 loc(#loc466)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc466)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc469)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.const #cir.int<2> : !s32i loc(#loc470)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc647)
    cir.br ^bb6 loc(#loc472)
  ^bb5:  // pred: ^bb2
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc473)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc473)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc474)
    cir.br ^bb6 loc(#loc475)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc467)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc648)
  ^bb8:  // pred: ^bb7
    %7 = cir.const #cir.int<7> : !s32i loc(#loc478)
    cir.br ^bb9 loc(#loc476)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %7 : !s32i, ^bb14 [
      7: ^bb11
    ] loc(#loc476)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc479)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc649)
  ^bb12:  // pred: ^bb11
    %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc482)
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc461)
    %10 = cir.binop(mul, %8, %9) nsw : !s32i loc(#loc482)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc643)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc483)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc484)
    cir.br ^bb13 loc(#loc481)
  ^bb13:  // pred: ^bb12
    cir.br ^bb15 loc(#loc485)
  ^bb14:  // pred: ^bb9
    %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc486)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc486)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc487)
    cir.br ^bb15 loc(#loc488)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc477)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc459)
  } loc(#loc642)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_square_15.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":80:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc18 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":113:19)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc21 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":46:1)
#loc22 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":130:1)
#loc23 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":59:9)
#loc24 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":59:13)
#loc25 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":60:9)
#loc26 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":60:28)
#loc27 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":61:9)
#loc28 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":61:32)
#loc29 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":62:9)
#loc30 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":62:41)
#loc31 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":121:9)
#loc32 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":121:29)
#loc33 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":48:5)
#loc34 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":48:9)
#loc35 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":50:12)
#loc36 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":50:5)
#loc37 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":51:5)
#loc38 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":115:5)
#loc39 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":51:12)
#loc40 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":53:5)
#loc41 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":54:5)
#loc42 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":109:5)
#loc43 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":63:9)
#loc44 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":98:17)
#loc45 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":98:16)
#loc46 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":73:36)
#loc47 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":73:45)
#loc48 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":73:58)
#loc49 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":73:29)
#loc50 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":73:13)
#loc51 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":73:69)
#loc52 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":74:13)
#loc53 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":77:13)
#loc54 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":74:17)
#loc55 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":74:34)
#loc56 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":75:13)
#loc57 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":76:17)
#loc58 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":78:20)
#loc59 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":78:21)
#loc60 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":78:30)
#loc61 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":78:33)
#loc62 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":78:47)
#loc63 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":78:13)
#loc64 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":78:48)
#loc65 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":79:34)
#loc66 = loc("/usr/include/netinet/in.h":249:5)
#loc67 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":79:13)
#loc68 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":80:39)
#loc69 = loc("/usr/include/netinet/in.h":251:20)
#loc70 = loc("/usr/include/netinet/in.h":33:15)
#loc71 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":80:13)
#loc72 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":80:59)
#loc73 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":81:38)
#loc74 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":81:32)
#loc75 = loc("/usr/include/netinet/in.h":250:15)
#loc76 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":81:13)
#loc77 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":81:46)
#loc78 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":82:13)
#loc79 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":85:13)
#loc80 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":82:25)
#loc81 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":82:58)
#loc82 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":82:59)
#loc83 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":82:68)
#loc84 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":82:82)
#loc85 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":82:17)
#loc86 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":82:88)
#loc87 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":83:13)
#loc88 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":84:17)
#loc89 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":88:31)
#loc90 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":88:46)
#loc91 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":88:59)
#loc92 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":88:77)
#loc93 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":88:80)
#loc94 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":88:26)
#loc95 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":88:13)
#loc96 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":88:81)
#loc97 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":89:13)
#loc98 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":92:13)
#loc99 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":89:17)
#loc100 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":89:31)
#loc102 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":89:47)
#loc103 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":89:61)
#loc104 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":90:13)
#loc105 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":91:17)
#loc106 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":94:39)
#loc107 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":94:25)
#loc108 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":94:13)
#loc109 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":96:25)
#loc110 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":96:20)
#loc111 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":96:13)
#loc112 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":96:36)
#loc113 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":99:9)
#loc114 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":102:9)
#loc115 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":99:13)
#loc116 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":99:30)
#loc117 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":100:9)
#loc118 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":101:26)
#loc119 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":101:13)
#loc120 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":110:5)
#loc121 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":113:9)
#loc122 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":114:9)
#loc123 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":116:5)
#loc124 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":129:5)
#loc125 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":116:12)
#loc126 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":118:5)
#loc127 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":119:5)
#loc128 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":123:5)
#loc129 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":121:22)
#loc130 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":122:22)
#loc131 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":122:9)
#loc132 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":124:5)
#loc133 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":127:19)
#loc134 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":127:9)
#loc135 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":128:9)
#loc136 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":386:1)
#loc137 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":392:1)
#loc138 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":388:5)
#loc139 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":388:14)
#loc140 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":389:5)
#loc141 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":389:14)
#loc142 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":390:5)
#loc143 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":390:14)
#loc144 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":391:5)
#loc145 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":391:14)
#loc146 = loc("/usr/include/stdlib.h":575:1)
#loc147 = loc("/usr/include/stdlib.h":575:41)
#loc148 = loc("/usr/include/time.h":76:1)
#loc149 = loc("/usr/include/time.h":76:38)
#loc150 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":408:15)
#loc151 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":410:15)
#loc152 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":413:15)
#loc153 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":415:15)
#loc154 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":403:1)
#loc155 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":418:1)
#loc160 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":404:1)
#loc161 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":406:27)
#loc162 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":406:22)
#loc163 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":406:5)
#loc164 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":408:5)
#loc165 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":409:5)
#loc166 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":409:64)
#loc167 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":410:5)
#loc168 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":413:5)
#loc169 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":414:5)
#loc170 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":414:63)
#loc171 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":415:5)
#loc172 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":417:12)
#loc173 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":417:5)
#loc174 = loc("/usr/include/bits/mathcalls.h":158:1)
#loc175 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":222:23)
#loc176 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":137:1)
#loc177 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":226:1)
#loc178 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":150:9)
#loc179 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":150:13)
#loc180 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":151:9)
#loc181 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":151:28)
#loc182 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":152:9)
#loc183 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":152:32)
#loc184 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":153:9)
#loc185 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":153:41)
#loc186 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":217:13)
#loc187 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":217:33)
#loc188 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":139:5)
#loc189 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":139:9)
#loc190 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":141:12)
#loc191 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":141:5)
#loc192 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":142:5)
#loc193 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":206:5)
#loc194 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":142:12)
#loc195 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":144:5)
#loc196 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":145:5)
#loc197 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":200:5)
#loc198 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":154:9)
#loc199 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":189:17)
#loc200 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":189:16)
#loc201 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":164:36)
#loc202 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":164:45)
#loc203 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":164:58)
#loc204 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":164:29)
#loc205 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":164:13)
#loc206 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":164:69)
#loc207 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":165:13)
#loc208 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":168:13)
#loc209 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":165:17)
#loc210 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":165:34)
#loc211 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":166:13)
#loc212 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":167:17)
#loc213 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":169:20)
#loc214 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":169:21)
#loc215 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":169:30)
#loc216 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":169:33)
#loc217 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":169:47)
#loc218 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":169:13)
#loc219 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":169:48)
#loc220 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":170:34)
#loc221 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":170:13)
#loc222 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":171:49)
#loc223 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":171:39)
#loc224 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":171:13)
#loc225 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":171:59)
#loc226 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":172:38)
#loc227 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":172:32)
#loc228 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":172:13)
#loc229 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":172:46)
#loc230 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":173:13)
#loc231 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":176:13)
#loc232 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":173:25)
#loc233 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":173:58)
#loc234 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":173:59)
#loc235 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":173:68)
#loc236 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":173:82)
#loc237 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":173:17)
#loc238 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":173:88)
#loc239 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":174:13)
#loc240 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":175:17)
#loc241 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":179:31)
#loc242 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":179:46)
#loc243 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":179:59)
#loc244 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":179:77)
#loc245 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":179:80)
#loc246 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":179:26)
#loc247 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":179:13)
#loc248 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":179:81)
#loc249 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":180:13)
#loc250 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":183:13)
#loc251 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":180:17)
#loc252 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":180:31)
#loc254 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":180:47)
#loc255 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":180:61)
#loc256 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":181:13)
#loc257 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":182:17)
#loc258 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":185:39)
#loc259 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":185:25)
#loc260 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":185:13)
#loc261 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":187:25)
#loc262 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":187:20)
#loc263 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":187:13)
#loc264 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":187:36)
#loc265 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":190:9)
#loc266 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":193:9)
#loc267 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":190:13)
#loc268 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":190:30)
#loc269 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":191:9)
#loc270 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":192:26)
#loc271 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":192:13)
#loc272 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":201:5)
#loc273 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":204:19)
#loc274 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":204:9)
#loc275 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":205:9)
#loc276 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":207:5)
#loc277 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":225:5)
#loc278 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":207:12)
#loc279 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":209:5)
#loc280 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":211:19)
#loc281 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":211:9)
#loc282 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":212:9)
#loc283 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":215:9)
#loc284 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":223:9)
#loc285 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":215:13)
#loc286 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":215:20)
#loc288 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":215:35)
#loc289 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":215:31)
#loc290 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":215:49)
#loc291 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":215:62)
#loc292 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":215:69)
#loc293 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":216:9)
#loc294 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":219:9)
#loc295 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":221:9)
#loc296 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":217:26)
#loc297 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":218:26)
#loc298 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":218:13)
#loc299 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":222:13)
#loc300 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":224:9)
#loc301 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":229:1)
#loc302 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":318:1)
#loc303 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":242:9)
#loc304 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":242:13)
#loc305 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":243:9)
#loc306 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":243:28)
#loc307 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":244:9)
#loc308 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":244:32)
#loc309 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":245:9)
#loc310 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":245:41)
#loc311 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":305:13)
#loc312 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":305:33)
#loc313 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":231:5)
#loc314 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":231:9)
#loc315 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":233:12)
#loc316 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":233:5)
#loc317 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":234:5)
#loc318 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":298:5)
#loc319 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":234:12)
#loc320 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":236:5)
#loc321 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":237:5)
#loc322 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":292:5)
#loc323 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":246:9)
#loc324 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":281:17)
#loc325 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":281:16)
#loc326 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":256:36)
#loc327 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":256:45)
#loc328 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":256:58)
#loc329 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":256:29)
#loc330 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":256:13)
#loc331 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":256:69)
#loc332 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":257:13)
#loc333 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":260:13)
#loc334 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":257:17)
#loc335 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":257:34)
#loc336 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":258:13)
#loc337 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":259:17)
#loc338 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":261:20)
#loc339 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":261:21)
#loc340 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":261:30)
#loc341 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":261:33)
#loc342 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":261:47)
#loc343 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":261:13)
#loc344 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":261:48)
#loc345 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":262:34)
#loc346 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":262:13)
#loc347 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":263:49)
#loc348 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":263:39)
#loc349 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":263:13)
#loc350 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":263:59)
#loc351 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":264:38)
#loc352 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":264:32)
#loc353 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":264:13)
#loc354 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":264:46)
#loc355 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":265:13)
#loc356 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":268:13)
#loc357 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":265:25)
#loc358 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":265:58)
#loc359 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":265:59)
#loc360 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":265:68)
#loc361 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":265:82)
#loc362 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":265:17)
#loc363 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":265:88)
#loc364 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":266:13)
#loc365 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":267:17)
#loc366 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":271:31)
#loc367 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":271:46)
#loc368 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":271:59)
#loc369 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":271:77)
#loc370 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":271:80)
#loc371 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":271:26)
#loc372 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":271:13)
#loc373 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":271:81)
#loc374 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":272:13)
#loc375 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":275:13)
#loc376 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":272:17)
#loc377 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":272:31)
#loc379 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":272:47)
#loc380 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":272:61)
#loc381 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":273:13)
#loc382 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":274:17)
#loc383 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":277:39)
#loc384 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":277:25)
#loc385 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":277:13)
#loc386 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":279:25)
#loc387 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":279:20)
#loc388 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":279:13)
#loc389 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":279:36)
#loc390 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":282:9)
#loc391 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":285:9)
#loc392 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":282:13)
#loc393 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":282:30)
#loc394 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":283:9)
#loc395 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":284:26)
#loc396 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":284:13)
#loc397 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":293:5)
#loc398 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":296:19)
#loc399 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":296:9)
#loc400 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":297:9)
#loc401 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":299:5)
#loc402 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":317:5)
#loc403 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":299:12)
#loc404 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":301:5)
#loc405 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":303:9)
#loc406 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":311:9)
#loc407 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":303:13)
#loc408 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":303:20)
#loc410 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":303:35)
#loc411 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":303:31)
#loc412 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":303:49)
#loc413 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":303:62)
#loc414 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":303:69)
#loc415 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":304:9)
#loc416 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":307:9)
#loc417 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":309:9)
#loc418 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":305:26)
#loc419 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":306:26)
#loc420 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":306:13)
#loc421 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":310:23)
#loc422 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":310:13)
#loc423 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":312:9)
#loc424 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":315:19)
#loc425 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":315:9)
#loc426 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":316:9)
#loc427 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":321:1)
#loc428 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":351:1)
#loc429 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":342:9)
#loc430 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":342:29)
#loc431 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":323:5)
#loc432 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":323:9)
#loc433 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":325:12)
#loc434 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":325:5)
#loc435 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":326:5)
#loc436 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":336:5)
#loc437 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":326:12)
#loc438 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":328:5)
#loc439 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":330:19)
#loc440 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":330:9)
#loc441 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":331:9)
#loc442 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":334:16)
#loc443 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":334:9)
#loc444 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":335:9)
#loc445 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":337:5)
#loc446 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":350:5)
#loc447 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":337:12)
#loc448 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":339:5)
#loc449 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":340:5)
#loc450 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":344:5)
#loc451 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":342:22)
#loc452 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":343:22)
#loc453 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":343:9)
#loc454 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":345:5)
#loc455 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":348:19)
#loc456 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":348:9)
#loc457 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":349:9)
#loc458 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":354:1)
#loc459 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":384:1)
#loc460 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":375:9)
#loc461 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":375:29)
#loc462 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":356:5)
#loc463 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":356:9)
#loc464 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":358:12)
#loc465 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":358:5)
#loc466 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":359:5)
#loc467 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":369:5)
#loc468 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":359:12)
#loc469 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":361:5)
#loc470 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":363:16)
#loc471 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":363:9)
#loc472 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":364:9)
#loc473 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":367:19)
#loc474 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":367:9)
#loc475 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":368:9)
#loc476 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":370:5)
#loc477 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":383:5)
#loc478 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":370:12)
#loc479 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":372:5)
#loc480 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":373:5)
#loc481 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":377:5)
#loc482 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":375:22)
#loc483 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":376:22)
#loc484 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":376:9)
#loc485 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":378:5)
#loc486 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":381:19)
#loc487 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":381:9)
#loc488 = loc("CWE190_Integer_Overflow__int_connect_socket_square_15.c":382:9)
#loc489 = loc(fused[#loc1, #loc2])
#loc490 = loc(fused[#loc3, #loc4])
#loc491 = loc(fused[#loc6, #loc7])
#loc492 = loc(fused[#loc8, #loc9])
#loc493 = loc(fused[#loc10, #loc11])
#loc494 = loc(fused[#loc12, #loc13])
#loc495 = loc(fused[#loc14, #loc15])
#loc496 = loc(fused[#loc16, #loc17])
#loc497 = loc(fused[#loc19, #loc20])
#loc498 = loc(fused[#loc21, #loc22])
#loc499 = loc(fused[#loc23, #loc24])
#loc500 = loc(fused[#loc25, #loc26])
#loc501 = loc(fused[#loc27, #loc28])
#loc502 = loc(fused[#loc29, #loc30])
#loc503 = loc(fused[#loc31, #loc32])
#loc504 = loc(fused[#loc33, #loc34])
#loc505 = loc(fused[#loc36, #loc35])
#loc506 = loc(fused[#loc37, #loc38])
#loc507 = loc(fused[#loc41, #loc42])
#loc508 = loc(fused[#loc43, #loc44])
#loc509 = loc(fused[#loc50, #loc51])
#loc510 = loc(fused[#loc52, #loc53])
#loc511 = loc(fused[#loc54, #loc55])
#loc512 = loc(fused[#loc56, #loc53])
#loc513 = loc(fused[#loc58, #loc59])
#loc514 = loc(fused[#loc61, #loc62])
#loc515 = loc(fused[#loc63, #loc64])
#loc516 = loc(fused[#loc67, #loc65])
#loc517 = loc(fused[#loc71, #loc72])
#loc518 = loc(fused[#loc76, #loc77])
#loc519 = loc(fused[#loc78, #loc79])
#loc520 = loc(fused[#loc81, #loc82])
#loc521 = loc(fused[#loc83, #loc84])
#loc522 = loc(fused[#loc85, #loc86])
#loc523 = loc(fused[#loc87, #loc79])
#loc524 = loc(fused[#loc91, #loc92])
#loc525 = loc(fused[#loc95, #loc96])
#loc526 = loc(fused[#loc97, #loc98])
#loc527 = loc(fused[#loc99, #loc100])
#loc528 = loc(fused[#loc102, #loc103])
#loc529 = loc(fused[#loc104, #loc98])
#loc530 = loc(fused[#loc108, #loc106])
#loc531 = loc(fused[#loc111, #loc112])
#loc532 = loc(fused[#loc113, #loc114])
#loc533 = loc(fused[#loc115, #loc116])
#loc534 = loc(fused[#loc117, #loc114])
#loc535 = loc(fused[#loc123, #loc124])
#loc536 = loc(fused[#loc127, #loc128])
#loc537 = loc(fused[#loc136, #loc137])
#loc538 = loc(fused[#loc138, #loc139])
#loc539 = loc(fused[#loc140, #loc141])
#loc540 = loc(fused[#loc142, #loc143])
#loc541 = loc(fused[#loc144, #loc145])
#loc542 = loc(fused[#loc146, #loc147])
#loc543 = loc(fused[#loc148, #loc149])
#loc544 = loc(fused[#loc154, #loc155])
#loc547 = loc(fused[#loc165, #loc166])
#loc548 = loc(fused[#loc169, #loc170])
#loc549 = loc(fused[#loc173, #loc172])
#loc550 = loc(fused[#loc176, #loc177])
#loc551 = loc(fused[#loc178, #loc179])
#loc552 = loc(fused[#loc180, #loc181])
#loc553 = loc(fused[#loc182, #loc183])
#loc554 = loc(fused[#loc184, #loc185])
#loc555 = loc(fused[#loc186, #loc187])
#loc556 = loc(fused[#loc188, #loc189])
#loc557 = loc(fused[#loc191, #loc190])
#loc558 = loc(fused[#loc192, #loc193])
#loc559 = loc(fused[#loc196, #loc197])
#loc560 = loc(fused[#loc198, #loc199])
#loc561 = loc(fused[#loc205, #loc206])
#loc562 = loc(fused[#loc207, #loc208])
#loc563 = loc(fused[#loc209, #loc210])
#loc564 = loc(fused[#loc211, #loc208])
#loc565 = loc(fused[#loc213, #loc214])
#loc566 = loc(fused[#loc216, #loc217])
#loc567 = loc(fused[#loc218, #loc219])
#loc568 = loc(fused[#loc221, #loc220])
#loc569 = loc(fused[#loc224, #loc225])
#loc570 = loc(fused[#loc228, #loc229])
#loc571 = loc(fused[#loc230, #loc231])
#loc572 = loc(fused[#loc233, #loc234])
#loc573 = loc(fused[#loc235, #loc236])
#loc574 = loc(fused[#loc237, #loc238])
#loc575 = loc(fused[#loc239, #loc231])
#loc576 = loc(fused[#loc243, #loc244])
#loc577 = loc(fused[#loc247, #loc248])
#loc578 = loc(fused[#loc249, #loc250])
#loc579 = loc(fused[#loc251, #loc252])
#loc580 = loc(fused[#loc254, #loc255])
#loc581 = loc(fused[#loc256, #loc250])
#loc582 = loc(fused[#loc260, #loc258])
#loc583 = loc(fused[#loc263, #loc264])
#loc584 = loc(fused[#loc265, #loc266])
#loc585 = loc(fused[#loc267, #loc268])
#loc586 = loc(fused[#loc269, #loc266])
#loc587 = loc(fused[#loc276, #loc277])
#loc588 = loc(fused[#loc283, #loc284])
#loc589 = loc(fused[#loc285, #loc286])
#loc590 = loc(fused[#loc289, #loc292])
#loc591 = loc(fused[#loc293, #loc294, #loc295, #loc284])
#loc592 = loc(fused[#loc301, #loc302])
#loc593 = loc(fused[#loc303, #loc304])
#loc594 = loc(fused[#loc305, #loc306])
#loc595 = loc(fused[#loc307, #loc308])
#loc596 = loc(fused[#loc309, #loc310])
#loc597 = loc(fused[#loc311, #loc312])
#loc598 = loc(fused[#loc313, #loc314])
#loc599 = loc(fused[#loc316, #loc315])
#loc600 = loc(fused[#loc317, #loc318])
#loc601 = loc(fused[#loc321, #loc322])
#loc602 = loc(fused[#loc323, #loc324])
#loc603 = loc(fused[#loc330, #loc331])
#loc604 = loc(fused[#loc332, #loc333])
#loc605 = loc(fused[#loc334, #loc335])
#loc606 = loc(fused[#loc336, #loc333])
#loc607 = loc(fused[#loc338, #loc339])
#loc608 = loc(fused[#loc341, #loc342])
#loc609 = loc(fused[#loc343, #loc344])
#loc610 = loc(fused[#loc346, #loc345])
#loc611 = loc(fused[#loc349, #loc350])
#loc612 = loc(fused[#loc353, #loc354])
#loc613 = loc(fused[#loc355, #loc356])
#loc614 = loc(fused[#loc358, #loc359])
#loc615 = loc(fused[#loc360, #loc361])
#loc616 = loc(fused[#loc362, #loc363])
#loc617 = loc(fused[#loc364, #loc356])
#loc618 = loc(fused[#loc368, #loc369])
#loc619 = loc(fused[#loc372, #loc373])
#loc620 = loc(fused[#loc374, #loc375])
#loc621 = loc(fused[#loc376, #loc377])
#loc622 = loc(fused[#loc379, #loc380])
#loc623 = loc(fused[#loc381, #loc375])
#loc624 = loc(fused[#loc385, #loc383])
#loc625 = loc(fused[#loc388, #loc389])
#loc626 = loc(fused[#loc390, #loc391])
#loc627 = loc(fused[#loc392, #loc393])
#loc628 = loc(fused[#loc394, #loc391])
#loc629 = loc(fused[#loc401, #loc402])
#loc630 = loc(fused[#loc405, #loc406])
#loc631 = loc(fused[#loc407, #loc408])
#loc632 = loc(fused[#loc411, #loc414])
#loc633 = loc(fused[#loc415, #loc416, #loc417, #loc406])
#loc634 = loc(fused[#loc427, #loc428])
#loc635 = loc(fused[#loc429, #loc430])
#loc636 = loc(fused[#loc431, #loc432])
#loc637 = loc(fused[#loc434, #loc433])
#loc638 = loc(fused[#loc435, #loc436])
#loc639 = loc(fused[#loc443, #loc442])
#loc640 = loc(fused[#loc445, #loc446])
#loc641 = loc(fused[#loc449, #loc450])
#loc642 = loc(fused[#loc458, #loc459])
#loc643 = loc(fused[#loc460, #loc461])
#loc644 = loc(fused[#loc462, #loc463])
#loc645 = loc(fused[#loc465, #loc464])
#loc646 = loc(fused[#loc466, #loc467])
#loc647 = loc(fused[#loc471, #loc470])
#loc648 = loc(fused[#loc476, #loc477])
#loc649 = loc(fused[#loc480, #loc481])
