!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @_ZN63CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_629badSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc62)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc63)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc64)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc65)
  cir.func @_ZN63CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_623badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc67)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc68)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc15)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc69)
    cir.call @_ZN63CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_629badSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc17)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc71)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc71)
      cir.store %4, %3 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc71)
      %5 = cir.get_global @strncat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc22)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc23)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
      %8 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc25)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
      %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc25)
      %11 = cir.call @strncat(%6, %7, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc22)
      %12 = cir.const #cir.int<0> : !s8i loc(#loc27)
      %13 = cir.const #cir.int<50> : !s32i loc(#loc28)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc29)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc28)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc30)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc30)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc72)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
      cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc32)
    } loc(#loc70)
    cir.return loc(#loc10)
  } loc(#loc66)
  cir.func private @_ZN63CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_6213goodG2BSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc73)
  cir.func internal private @_ZN63CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc75)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc76)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc41)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc77)
    cir.call @_ZN63CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_6213goodG2BSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc43)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc79)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc79)
      cir.store %4, %3 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc79)
      %5 = cir.get_global @strncat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc48)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc49)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
      %8 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc51)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
      %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc51)
      %11 = cir.call @strncat(%6, %7, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc48)
      %12 = cir.const #cir.int<0> : !s8i loc(#loc53)
      %13 = cir.const #cir.int<50> : !s32i loc(#loc54)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc55)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc54)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc56)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc56)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc80)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
      cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    } loc(#loc78)
    cir.return loc(#loc36)
  } loc(#loc74)
  cir.func @_ZN63CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_624goodEv() extra(#fn_attr1) {
    cir.call @_ZN63CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62L7goodG2BEv() : () -> () loc(#loc61)
    cir.return loc(#loc60)
  } loc(#loc81)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":27:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":27:28)
#loc3 = loc("/usr/include/string.h":152:1)
#loc4 = loc("/usr/include/string.h":153:29)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":29:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":42:1)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":31:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":31:12)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":32:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":32:24)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":33:12)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":33:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":34:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":35:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":41:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":36:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":36:25)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":38:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":38:17)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":38:23)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":38:29)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":38:36)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":39:22)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":39:14)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":39:17)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":39:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":40:19)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":40:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":49:1)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":49:32)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":51:1)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":64:1)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":53:5)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":53:12)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":54:5)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":54:24)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":55:12)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":55:5)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":56:5)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":57:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":63:5)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":58:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":58:25)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":60:9)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":60:17)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":60:23)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":60:29)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":60:36)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":61:22)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":61:14)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":61:17)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":61:9)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":62:19)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":62:9)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":66:1)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":69:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncat_62a.cpp":68:5)
#loc62 = loc(fused[#loc1, #loc2])
#loc63 = loc(fused[#loc3, #loc4])
#loc64 = loc(fused[#loc5, #loc6])
#loc65 = loc(fused[#loc7, #loc8])
#loc66 = loc(fused[#loc9, #loc10])
#loc67 = loc(fused[#loc11, #loc12])
#loc68 = loc(fused[#loc13, #loc14])
#loc69 = loc(fused[#loc16, #loc15])
#loc70 = loc(fused[#loc18, #loc19])
#loc71 = loc(fused[#loc20, #loc21])
#loc72 = loc(fused[#loc30, #loc27])
#loc73 = loc(fused[#loc33, #loc34])
#loc74 = loc(fused[#loc35, #loc36])
#loc75 = loc(fused[#loc37, #loc38])
#loc76 = loc(fused[#loc39, #loc40])
#loc77 = loc(fused[#loc42, #loc41])
#loc78 = loc(fused[#loc44, #loc45])
#loc79 = loc(fused[#loc46, #loc47])
#loc80 = loc(fused[#loc56, #loc53])
#loc81 = loc(fused[#loc59, #loc60])
