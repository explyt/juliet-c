!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":83:44)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc213)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc214)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc215)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc216)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc217)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc218)
  cir.func private @close(!s32i) -> !s32i loc(#loc219)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc220)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc221)
  cir.func private @printIntLine(!s32i) loc(#loc222)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc223)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc225)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc226)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc227)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc228)
    %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc229)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc230)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc231)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc41)
    cir.store %8, %6 : !s32i, !cir.ptr<!s32i> loc(#loc232)
    cir.br ^bb1 loc(#loc233)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc31)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc227)
    cir.br ^bb2 loc(#loc234)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc234)
  ^bb3:  // pred: ^bb26
    %11 = cir.const #cir.int<0> : !s32i loc(#loc47)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc47)
    cir.brcond %12 ^bb4, ^bb27 loc(#loc47)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc235)
  ^bb5:  // pred: ^bb4
    %13 = cir.const #cir.int<2> : !s32i loc(#loc50)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %15 = cir.const #cir.int<6> : !s32i loc(#loc52)
    %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc53)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc236)
    cir.br ^bb6 loc(#loc237)
  ^bb6:  // pred: ^bb5
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc58)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc59)
    %20 = cir.cmp(eq, %17, %19) : !s32i, !cir.bool loc(#loc238)
    cir.brcond %20 ^bb7, ^bb8 loc(#loc239)
  ^bb7:  // pred: ^bb6
    cir.br ^bb27 loc(#loc61)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc57)
  ^bb9:  // pred: ^bb8
    %21 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc240)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc64)
    %23 = cir.const #cir.int<16> : !u64i loc(#loc241)
    cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc242)
    %24 = cir.const #cir.int<2> : !s32i loc(#loc69)
    %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc69)
    %26 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
    cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc243)
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc72)
    %30 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc73)
    %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc74)
    cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc244)
    %32 = cir.const #cir.int<27015> : !s32i loc(#loc77)
    %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc77)
    %34 = cir.call @htons(%33) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc78)
    %35 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc79)
    cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc245)
    cir.br ^bb10 loc(#loc246)
  ^bb10:  // pred: ^bb9
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    %37 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc247)
    %38 = cir.const #cir.int<16> : !u64i loc(#loc248)
    %39 = cir.cast(integral, %38 : !u64i), !u32i loc(#loc248)
    %40 = cir.call @connect(%36, %37, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc89)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc90)
    %42 = cir.unary(minus, %41) nsw : !s32i, !s32i loc(#loc90)
    %43 = cir.cmp(eq, %40, %42) : !s32i, !cir.bool loc(#loc249)
    cir.brcond %43 ^bb11, ^bb12 loc(#loc250)
  ^bb11:  // pred: ^bb10
    cir.br ^bb27 loc(#loc92)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc83)
  ^bb13:  // pred: ^bb12
    %44 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc93)
    %45 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc94)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc94)
    %47 = cir.const #cir.int<3> : !s32i loc(#loc95)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc95)
    %49 = cir.const #cir.int<4> : !u64i loc(#loc95)
    %50 = cir.binop(mul, %48, %49) : !u64i loc(#loc95)
    %51 = cir.const #cir.int<2> : !s32i loc(#loc95)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc95)
    %53 = cir.binop(add, %50, %52) : !u64i loc(#loc95)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc96)
    %56 = cir.binop(sub, %53, %55) : !u64i loc(#loc251)
    %57 = cir.const #cir.int<0> : !s32i loc(#loc97)
    %58 = cir.call @recv(%44, %46, %56, %57) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc98)
    %59 = cir.cast(integral, %58 : !s64i), !s32i loc(#loc98)
    cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc252)
    cir.br ^bb14 loc(#loc253)
  ^bb14:  // pred: ^bb13
    %60 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc104)
    %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc254)
    cir.brcond %63 ^bb15, ^bb16 loc(#loc105)
  ^bb15:  // pred: ^bb14
    %64 = cir.const #true loc(#loc105)
    cir.br ^bb21(%64 : !cir.bool) loc(#loc105)
  ^bb16:  // pred: ^bb14
    %65 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %66 = cir.const #cir.int<0> : !s32i loc(#loc107)
    %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc255)
    cir.brcond %67 ^bb17, ^bb18 loc(#loc105)
  ^bb17:  // pred: ^bb16
    %68 = cir.const #true loc(#loc105)
    cir.br ^bb19(%68 : !cir.bool) loc(#loc105)
  ^bb18:  // pred: ^bb16
    %69 = cir.const #false loc(#loc105)
    cir.br ^bb19(%69 : !cir.bool) loc(#loc105)
  ^bb19(%70: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":83:44)):  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc105)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21(%70 : !cir.bool) loc(#loc105)
  ^bb21(%71: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":83:44)):  // 2 preds: ^bb15, ^bb20
    cir.br ^bb22 loc(#loc105)
  ^bb22:  // pred: ^bb21
    cir.brcond %71 ^bb23, ^bb24 loc(#loc256)
  ^bb23:  // pred: ^bb22
    cir.br ^bb27 loc(#loc109)
  ^bb24:  // pred: ^bb22
    cir.br ^bb25 loc(#loc102)
  ^bb25:  // pred: ^bb24
    %72 = cir.const #cir.int<0> : !s32i loc(#loc110)
    %73 = cir.cast(integral, %72 : !s32i), !s8i loc(#loc110)
    %74 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    %75 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc112)
    %76 = cir.ptr_stride(%75 : !cir.ptr<!s8i>, %74 : !s32i), !cir.ptr<!s8i> loc(#loc112)
    cir.store %73, %76 : !s8i, !cir.ptr<!s8i> loc(#loc257)
    %77 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc113)
    %78 = cir.call @atoi(%77) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc114)
    cir.store %78, %6 : !s32i, !cir.ptr<!s32i> loc(#loc258)
    cir.br ^bb26 loc(#loc49)
  ^bb26:  // pred: ^bb25
    cir.br ^bb3 loc(#loc46)
  ^bb27:  // 4 preds: ^bb3, ^bb7, ^bb11, ^bb23
    cir.br ^bb28 loc(#loc46)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc259)
  ^bb29:  // pred: ^bb28
    %79 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    %80 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %81 = cir.unary(minus, %80) nsw : !s32i, !s32i loc(#loc120)
    %82 = cir.cmp(ne, %79, %81) : !s32i, !cir.bool loc(#loc260)
    cir.brcond %82 ^bb30, ^bb31 loc(#loc261)
  ^bb30:  // pred: ^bb29
    %83 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    %84 = cir.call @close(%83) : (!s32i) -> !s32i loc(#loc123)
    cir.br ^bb31 loc(#loc118)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc118)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc44)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc262)
  ^bb34:  // pred: ^bb33
    %85 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc126)
    %86 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %87 = cir.cast(integral, %86 : !s32i), !u64i loc(#loc127)
    %88 = cir.const #cir.int<4> : !u64i loc(#loc263)
    %89 = cir.binop(mul, %87, %88) : !u64i loc(#loc264)
    %90 = cir.call @malloc(%89) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc126)
    %91 = cir.cast(bitcast, %90 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc265)
    cir.store %91, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc266)
    cir.br ^bb35 loc(#loc267)
  ^bb35:  // pred: ^bb34
    %92 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc134)
    %93 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc135)
    %94 = cir.cast(bitcast, %93 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc135)
    %95 = cir.cmp(eq, %92, %94) : !cir.ptr<!s32i>, !cir.bool loc(#loc268)
    cir.brcond %95 ^bb36, ^bb37 loc(#loc269)
  ^bb36:  // pred: ^bb35
    %96 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc137)
    %97 = cir.const #cir.int<1> : !s32i loc(#loc138)
    %98 = cir.unary(minus, %97) nsw : !s32i, !s32i loc(#loc139)
    cir.call @exit(%98) : (!s32i) -> () extra(#fn_attr) loc(#loc137)
    cir.br ^bb37 loc(#loc133)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc133)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc270)
  ^bb39:  // pred: ^bb38
    %99 = cir.const #cir.int<0> : !s32i loc(#loc142)
    %100 = cir.cast(integral, %99 : !s32i), !u64i loc(#loc142)
    cir.store %100, %4 : !u64i, !cir.ptr<!u64i> loc(#loc271)
    cir.br ^bb40 loc(#loc270)
  ^bb40:  // 2 preds: ^bb39, ^bb44
    %101 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc144)
    %102 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    %103 = cir.cast(integral, %102 : !s32i), !u64i loc(#loc145)
    %104 = cir.cmp(lt, %101, %103) : !u64i, !cir.bool loc(#loc272)
    cir.brcond %104 ^bb41, ^bb45 loc(#loc146)
  ^bb41:  // pred: ^bb40
    cir.br ^bb42 loc(#loc273)
  ^bb42:  // pred: ^bb41
    %105 = cir.const #cir.int<0> : !s32i loc(#loc148)
    %106 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc149)
    %107 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc150)
    %108 = cir.ptr_stride(%106 : !cir.ptr<!s32i>, %107 : !u64i), !cir.ptr<!s32i> loc(#loc151)
    cir.store %105, %108 : !s32i, !cir.ptr<!s32i> loc(#loc274)
    cir.br ^bb43 loc(#loc141)
  ^bb43:  // pred: ^bb42
    cir.br ^bb44 loc(#loc141)
  ^bb44:  // pred: ^bb43
    %109 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc152)
    %110 = cir.unary(inc, %109) : !u64i, !u64i loc(#loc153)
    cir.store %110, %4 : !u64i, !cir.ptr<!u64i> loc(#loc275)
    cir.br ^bb40 loc(#loc270)
  ^bb45:  // pred: ^bb40
    cir.br ^bb46 loc(#loc141)
  ^bb46:  // pred: ^bb45
    %111 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc154)
    %112 = cir.const #cir.int<0> : !s32i loc(#loc155)
    %113 = cir.ptr_stride(%111 : !cir.ptr<!s32i>, %112 : !s32i), !cir.ptr<!s32i> loc(#loc156)
    %114 = cir.load %113 : !cir.ptr<!s32i>, !s32i loc(#loc154)
    cir.call @printIntLine(%114) : (!s32i) -> () loc(#loc157)
    %115 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc158)
    %116 = cir.cast(bitcast, %115 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc158)
    cir.call @free(%116) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc159)
    cir.br ^bb47 loc(#loc125)
  ^bb47:  // pred: ^bb46
    cir.return loc(#loc25)
  } loc(#loc224)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc277)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc162)
    cir.return loc(#loc161)
  } loc(#loc276)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc279)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc280)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc281)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc172)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc173)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc282)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc175)
    cir.store %5, %2 : !s32i, !cir.ptr<!s32i> loc(#loc283)
    cir.br ^bb1 loc(#loc284)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc179)
    %7 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc180)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc180)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc285)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc286)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc179)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc287)
    cir.store %12, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc288)
    cir.br ^bb2 loc(#loc289)
  ^bb2:  // pred: ^bb1
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc187)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc188)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc188)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc290)
    cir.brcond %16 ^bb3, ^bb4 loc(#loc291)
  ^bb3:  // pred: ^bb2
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc190)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc191)
    %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc192)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc190)
    cir.br ^bb4 loc(#loc186)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc186)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc292)
  ^bb6:  // pred: ^bb5
    %20 = cir.const #cir.int<0> : !s32i loc(#loc195)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc195)
    cir.store %21, %0 : !u64i, !cir.ptr<!u64i> loc(#loc293)
    cir.br ^bb7 loc(#loc292)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %22 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc197)
    %23 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc198)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc198)
    %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc294)
    cir.brcond %25 ^bb8, ^bb12 loc(#loc199)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc295)
  ^bb9:  // pred: ^bb8
    %26 = cir.const #cir.int<0> : !s32i loc(#loc201)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc202)
    %28 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc203)
    %29 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %28 : !u64i), !cir.ptr<!s32i> loc(#loc204)
    cir.store %26, %29 : !s32i, !cir.ptr<!s32i> loc(#loc296)
    cir.br ^bb10 loc(#loc194)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc194)
  ^bb11:  // pred: ^bb10
    %30 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc205)
    %31 = cir.unary(inc, %30) : !u64i, !u64i loc(#loc206)
    cir.store %31, %0 : !u64i, !cir.ptr<!u64i> loc(#loc297)
    cir.br ^bb7 loc(#loc292)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc194)
  ^bb13:  // pred: ^bb12
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc207)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc208)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!s32i>, %33 : !s32i), !cir.ptr<!s32i> loc(#loc209)
    %35 = cir.load %34 : !cir.ptr<!s32i>, !s32i loc(#loc207)
    cir.call @printIntLine(%35) : (!s32i) -> () loc(#loc210)
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc211)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc211)
    cir.call @free(%37) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc212)
    cir.br ^bb14 loc(#loc178)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc165)
  } loc(#loc278)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":74:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("/usr/include/stdlib.h":672:1)
#loc17 = loc("/usr/include/stdlib.h":672:45)
#loc18 = loc("/usr/include/stdlib.h":756:1)
#loc19 = loc("/usr/include/stdlib.h":756:70)
#loc20 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc21 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc22 = loc("/usr/include/stdlib.h":687:1)
#loc23 = loc("/usr/include/stdlib.h":687:32)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":43:1)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":118:1)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":53:9)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":53:13)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":54:9)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":54:28)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":55:9)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":55:32)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":56:9)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":56:41)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":105:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":105:16)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":106:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":106:14)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":45:5)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":45:9)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":47:13)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":47:12)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":47:5)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":48:5)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":103:5)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":57:9)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":92:17)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":92:16)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":58:9)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":91:9)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":67:36)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":67:45)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":67:58)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":67:29)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":67:13)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":67:69)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":68:13)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":71:13)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":68:17)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":68:34)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":69:13)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":70:17)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":72:20)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":72:21)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":72:30)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":72:33)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":72:47)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":72:13)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":72:48)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":73:34)
#loc70 = loc("/usr/include/netinet/in.h":249:5)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":73:13)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":74:39)
#loc73 = loc("/usr/include/netinet/in.h":251:20)
#loc74 = loc("/usr/include/netinet/in.h":33:15)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":74:13)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":74:59)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":75:38)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":75:32)
#loc79 = loc("/usr/include/netinet/in.h":250:15)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":75:13)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":75:46)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":76:13)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":79:13)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":76:25)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":76:58)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":76:59)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":76:68)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":76:82)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":76:17)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":76:88)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":77:13)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":78:17)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":82:31)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":82:46)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":82:59)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":82:77)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":82:80)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":82:26)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":82:13)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":82:81)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":83:13)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":86:13)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":83:17)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":83:31)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":83:47)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":83:61)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":84:13)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":85:17)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":88:39)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":88:25)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":88:13)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":90:25)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":90:20)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":90:13)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":90:36)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":93:9)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":96:9)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":93:13)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":93:30)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":94:9)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":95:26)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":95:13)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":104:5)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":117:5)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":109:28)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":109:35)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":109:42)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":109:52)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":109:53)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":109:9)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":110:9)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":110:43)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":110:13)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":110:27)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":110:33)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":110:34)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":110:40)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":110:39)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":111:9)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":114:9)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":111:18)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":111:14)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":111:21)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":111:33)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":111:23)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":112:9)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":113:29)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":113:13)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":113:24)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":113:25)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":111:40)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":111:39)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":115:22)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":115:33)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":115:34)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":115:9)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":116:14)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":116:9)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":148:1)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":151:1)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":150:5)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":150:13)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":125:1)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":146:1)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":133:9)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":133:16)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":134:9)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":134:14)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":127:5)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":127:9)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":129:13)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":129:12)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":129:5)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":131:12)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":131:5)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":132:5)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":145:5)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":137:28)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":137:35)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":137:42)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":137:52)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":137:53)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":137:9)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":138:9)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":138:43)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":138:13)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":138:27)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":138:33)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":138:34)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":138:40)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":138:39)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":139:9)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":142:9)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":139:18)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":139:14)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":139:21)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":139:33)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":139:23)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":140:9)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":141:29)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":141:13)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":141:24)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":141:25)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":139:40)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":139:39)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":143:22)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":143:33)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":143:34)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":143:9)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":144:14)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_01.c":144:9)
#loc213 = loc(fused[#loc1, #loc2])
#loc214 = loc(fused[#loc3, #loc4])
#loc215 = loc(fused[#loc6, #loc7])
#loc216 = loc(fused[#loc8, #loc9])
#loc217 = loc(fused[#loc10, #loc11])
#loc218 = loc(fused[#loc12, #loc13])
#loc219 = loc(fused[#loc14, #loc15])
#loc220 = loc(fused[#loc16, #loc17])
#loc221 = loc(fused[#loc18, #loc19])
#loc222 = loc(fused[#loc20, #loc21])
#loc223 = loc(fused[#loc22, #loc23])
#loc224 = loc(fused[#loc24, #loc25])
#loc225 = loc(fused[#loc26, #loc27])
#loc226 = loc(fused[#loc28, #loc29])
#loc227 = loc(fused[#loc30, #loc31])
#loc228 = loc(fused[#loc32, #loc33])
#loc229 = loc(fused[#loc34, #loc35])
#loc230 = loc(fused[#loc36, #loc37])
#loc231 = loc(fused[#loc38, #loc39])
#loc232 = loc(fused[#loc42, #loc40])
#loc233 = loc(fused[#loc43, #loc44])
#loc234 = loc(fused[#loc45, #loc46])
#loc235 = loc(fused[#loc48, #loc49])
#loc236 = loc(fused[#loc54, #loc55])
#loc237 = loc(fused[#loc56, #loc57])
#loc238 = loc(fused[#loc58, #loc59])
#loc239 = loc(fused[#loc60, #loc57])
#loc240 = loc(fused[#loc62, #loc63])
#loc241 = loc(fused[#loc65, #loc66])
#loc242 = loc(fused[#loc67, #loc68])
#loc243 = loc(fused[#loc71, #loc69])
#loc244 = loc(fused[#loc75, #loc76])
#loc245 = loc(fused[#loc80, #loc81])
#loc246 = loc(fused[#loc82, #loc83])
#loc247 = loc(fused[#loc85, #loc86])
#loc248 = loc(fused[#loc87, #loc88])
#loc249 = loc(fused[#loc89, #loc90])
#loc250 = loc(fused[#loc91, #loc83])
#loc251 = loc(fused[#loc95, #loc96])
#loc252 = loc(fused[#loc99, #loc100])
#loc253 = loc(fused[#loc101, #loc102])
#loc254 = loc(fused[#loc103, #loc104])
#loc255 = loc(fused[#loc106, #loc107])
#loc256 = loc(fused[#loc108, #loc102])
#loc257 = loc(fused[#loc112, #loc110])
#loc258 = loc(fused[#loc115, #loc116])
#loc259 = loc(fused[#loc117, #loc118])
#loc260 = loc(fused[#loc119, #loc120])
#loc261 = loc(fused[#loc121, #loc118])
#loc262 = loc(fused[#loc124, #loc125])
#loc263 = loc(fused[#loc128, #loc129])
#loc264 = loc(fused[#loc127, #loc129])
#loc265 = loc(fused[#loc126, #loc130])
#loc266 = loc(fused[#loc131, #loc130])
#loc267 = loc(fused[#loc132, #loc133])
#loc268 = loc(fused[#loc134, #loc135])
#loc269 = loc(fused[#loc136, #loc133])
#loc270 = loc(fused[#loc140, #loc141])
#loc271 = loc(fused[#loc143, #loc142])
#loc272 = loc(fused[#loc144, #loc145])
#loc273 = loc(fused[#loc147, #loc141])
#loc274 = loc(fused[#loc149, #loc148])
#loc275 = loc(fused[#loc153, #loc152])
#loc276 = loc(fused[#loc160, #loc161])
#loc277 = loc(fused[#loc162, #loc163])
#loc278 = loc(fused[#loc164, #loc165])
#loc279 = loc(fused[#loc166, #loc167])
#loc280 = loc(fused[#loc168, #loc169])
#loc281 = loc(fused[#loc170, #loc171])
#loc282 = loc(fused[#loc174, #loc172])
#loc283 = loc(fused[#loc176, #loc175])
#loc284 = loc(fused[#loc177, #loc178])
#loc285 = loc(fused[#loc181, #loc182])
#loc286 = loc(fused[#loc180, #loc182])
#loc287 = loc(fused[#loc179, #loc183])
#loc288 = loc(fused[#loc184, #loc183])
#loc289 = loc(fused[#loc185, #loc186])
#loc290 = loc(fused[#loc187, #loc188])
#loc291 = loc(fused[#loc189, #loc186])
#loc292 = loc(fused[#loc193, #loc194])
#loc293 = loc(fused[#loc196, #loc195])
#loc294 = loc(fused[#loc197, #loc198])
#loc295 = loc(fused[#loc200, #loc194])
#loc296 = loc(fused[#loc202, #loc201])
#loc297 = loc(fused[#loc206, #loc205])
