!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_scanf(!cir.ptr<!s8i>, ...) -> !s32i loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"scanf failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc6)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc56)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc57)
    cir.br ^bb1 loc(#loc58)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc58)
  ^bb2:  // 2 preds: ^bb1, ^bb11
    %2 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc15)
    cir.brcond %3 ^bb3, ^bb12 loc(#loc15)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc59)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc60)
  ^bb5:  // pred: ^bb4
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc56)
    cir.store %4, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc56)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc57)
    cir.br ^bb6 loc(#loc61)
  ^bb6:  // pred: ^bb5
    %6 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc21)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc3)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc3)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %10 = cir.call @__isoc99_scanf(%8, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc21)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc23)
    %12 = cir.cmp(eq, %10, %11) : !s32i, !cir.bool loc(#loc62)
    cir.brcond %12 ^bb7, ^bb8 loc(#loc63)
  ^bb7:  // pred: ^bb6
    %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc6)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc6)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc25)
    cir.br ^bb8 loc(#loc20)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc20)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc18)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12 loc(#loc26)
  ^bb11:  // no predecessors
    cir.br ^bb2 loc(#loc14)
  ^bb12:  // 2 preds: ^bb2, ^bb10
    cir.br ^bb13 loc(#loc14)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc8)
  } loc(#loc55)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc65)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc29)
    cir.return loc(#loc28)
  } loc(#loc64)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc67)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc68)
    cir.br ^bb1 loc(#loc69)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc69)
  ^bb2:  // 2 preds: ^bb1, ^bb11
    %2 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc39)
    cir.brcond %3 ^bb3, ^bb12 loc(#loc39)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc70)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc71)
  ^bb5:  // pred: ^bb4
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc67)
    cir.store %4, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc67)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
    cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc68)
    cir.br ^bb6 loc(#loc72)
  ^bb6:  // pred: ^bb5
    %6 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc45)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc46)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc46)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
    %10 = cir.call @__isoc99_scanf(%8, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc45)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc48)
    %13 = cir.cmp(eq, %10, %12) : !s32i, !cir.bool loc(#loc73)
    cir.brcond %13 ^bb7, ^bb8 loc(#loc74)
  ^bb7:  // pred: ^bb6
    %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc50)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    cir.br ^bb8 loc(#loc44)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc44)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc42)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12 loc(#loc52)
  ^bb11:  // no predecessors
    cir.br ^bb2 loc(#loc38)
  ^bb12:  // 2 preds: ^bb2, ^bb10
    cir.br ^bb13 loc(#loc38)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc32)
  } loc(#loc66)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":466:1)
#loc2 = loc("/usr/include/stdio.h":466:12)
#loc3 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":35:23)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":37:27)
#loc7 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":24:1)
#loc8 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":42:1)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":31:13)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":31:36)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":32:13)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":32:27)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":26:5)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":41:5)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":26:11)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":27:5)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":28:9)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":39:9)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":35:13)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":38:13)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":35:17)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":35:33)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":35:42)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":36:13)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":37:17)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":40:9)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":68:1)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":71:1)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":70:5)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":70:11)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":49:1)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":66:1)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":56:13)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":56:36)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":57:13)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":57:27)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":51:5)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":65:5)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":51:11)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":52:5)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":53:9)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":63:9)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":59:13)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":62:13)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":59:17)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":59:23)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":59:33)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":59:42)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":60:13)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":61:27)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":61:17)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_scanf_16.c":64:9)
#loc53 = loc(fused[#loc1, #loc2])
#loc54 = loc(fused[#loc4, #loc5])
#loc55 = loc(fused[#loc7, #loc8])
#loc56 = loc(fused[#loc9, #loc10])
#loc57 = loc(fused[#loc11, #loc12])
#loc58 = loc(fused[#loc13, #loc14])
#loc59 = loc(fused[#loc16, #loc14])
#loc60 = loc(fused[#loc17, #loc18])
#loc61 = loc(fused[#loc19, #loc20])
#loc62 = loc(fused[#loc21, #loc23])
#loc63 = loc(fused[#loc24, #loc20])
#loc64 = loc(fused[#loc27, #loc28])
#loc65 = loc(fused[#loc29, #loc30])
#loc66 = loc(fused[#loc31, #loc32])
#loc67 = loc(fused[#loc33, #loc34])
#loc68 = loc(fused[#loc35, #loc36])
#loc69 = loc(fused[#loc37, #loc38])
#loc70 = loc(fused[#loc40, #loc38])
#loc71 = loc(fused[#loc41, #loc42])
#loc72 = loc(fused[#loc43, #loc44])
#loc73 = loc(fused[#loc45, #loc48])
#loc74 = loc(fused[#loc49, #loc44])
