!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc9 = loc("CWE415_Double_Free__malloc_free_char_84_goodB2G.cpp":24:50)
#loc10 = loc("CWE415_Double_Free__malloc_free_char_84_goodB2G.cpp":24:98)
#loc11 = loc("CWE415_Double_Free__malloc_free_char_84_goodB2G.cpp":24:105)
#loc34 = loc("CWE415_Double_Free__malloc_free_char_84_goodB2G.cpp":33:50)
#loc40 = loc(fused[#loc10, #loc11])
!ty_CWE415_Double_Free__malloc_free_char_843A3ACWE415_Double_Free__malloc_free_char_84_goodB2G = !cir.struct<class "CWE415_Double_Free__malloc_free_char_84::CWE415_Double_Free__malloc_free_char_84_goodB2G" {!cir.ptr<!s8i>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_char_84_goodB2G.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc36)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc37)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc38)
  cir.func  @_ZN39CWE415_Double_Free__malloc_free_char_8447CWE415_Double_Free__malloc_free_char_84_goodB2GC2EPc(%arg0: !cir.ptr<!ty_CWE415_Double_Free__malloc_free_char_843A3ACWE415_Double_Free__malloc_free_char_84_goodB2G> loc("CWE415_Double_Free__malloc_free_char_84_goodB2G.cpp":24:50), %arg1: !cir.ptr<!s8i> loc(fused[#loc10, #loc11])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE415_Double_Free__malloc_free_char_843A3ACWE415_Double_Free__malloc_free_char_84_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE415_Double_Free__malloc_free_char_843A3ACWE415_Double_Free__malloc_free_char_84_goodB2G>>, ["this", init] {alignment = 8 : i64} loc(#loc9)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc40)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE415_Double_Free__malloc_free_char_843A3ACWE415_Double_Free__malloc_free_char_84_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE415_Double_Free__malloc_free_char_843A3ACWE415_Double_Free__malloc_free_char_84_goodB2G>> loc(#loc12)
    cir.store %arg1, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc12)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE415_Double_Free__malloc_free_char_843A3ACWE415_Double_Free__malloc_free_char_84_goodB2G>>, !cir.ptr<!ty_CWE415_Double_Free__malloc_free_char_843A3ACWE415_Double_Free__malloc_free_char_84_goodB2G> loc(#loc9)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    %4 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE415_Double_Free__malloc_free_char_843A3ACWE415_Double_Free__malloc_free_char_84_goodB2G> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc14)
    cir.store %3, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc41)
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc16)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc17)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc17)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc42)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc43)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc16)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc44)
    %12 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE415_Double_Free__malloc_free_char_843A3ACWE415_Double_Free__malloc_free_char_84_goodB2G> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc14)
    cir.store %11, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc45)
    cir.scope {
      %17 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE415_Double_Free__malloc_free_char_843A3ACWE415_Double_Free__malloc_free_char_84_goodB2G> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc14)
      %18 = cir.load %17 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
      %19 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc25)
      %20 = cir.cmp(eq, %18, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc47)
      cir.if %20 {
        %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc27)
        %22 = cir.const #cir.int<1> : !s32i loc(#loc28)
        %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc29)
        cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc27)
      } loc(#loc48)
    } loc(#loc46)
    %13 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc30)
    %14 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE415_Double_Free__malloc_free_char_843A3ACWE415_Double_Free__malloc_free_char_84_goodB2G> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc14)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc31)
    cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc30)
    cir.return loc(#loc8)
  } loc(#loc39)
  cir.func  @_ZN39CWE415_Double_Free__malloc_free_char_8447CWE415_Double_Free__malloc_free_char_84_goodB2GC1EPc(!cir.ptr<!ty_CWE415_Double_Free__malloc_free_char_843A3ACWE415_Double_Free__malloc_free_char_84_goodB2G>, !cir.ptr<!s8i>) alias(@_ZN39CWE415_Double_Free__malloc_free_char_8447CWE415_Double_Free__malloc_free_char_84_goodB2GC2EPc) loc(#loc39)
  cir.func  @_ZN39CWE415_Double_Free__malloc_free_char_8447CWE415_Double_Free__malloc_free_char_84_goodB2GD2Ev(%arg0: !cir.ptr<!ty_CWE415_Double_Free__malloc_free_char_843A3ACWE415_Double_Free__malloc_free_char_84_goodB2G> loc("CWE415_Double_Free__malloc_free_char_84_goodB2G.cpp":33:50)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_CWE415_Double_Free__malloc_free_char_843A3ACWE415_Double_Free__malloc_free_char_84_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE415_Double_Free__malloc_free_char_843A3ACWE415_Double_Free__malloc_free_char_84_goodB2G>>, ["this", init] {alignment = 8 : i64} loc(#loc34)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE415_Double_Free__malloc_free_char_843A3ACWE415_Double_Free__malloc_free_char_84_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE415_Double_Free__malloc_free_char_843A3ACWE415_Double_Free__malloc_free_char_84_goodB2G>> loc(#loc35)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE415_Double_Free__malloc_free_char_843A3ACWE415_Double_Free__malloc_free_char_84_goodB2G>>, !cir.ptr<!ty_CWE415_Double_Free__malloc_free_char_843A3ACWE415_Double_Free__malloc_free_char_84_goodB2G> loc(#loc34)
    cir.return loc(#loc33)
  } loc(#loc49)
  cir.func  @_ZN39CWE415_Double_Free__malloc_free_char_8447CWE415_Double_Free__malloc_free_char_84_goodB2GD1Ev(!cir.ptr<!ty_CWE415_Double_Free__malloc_free_char_843A3ACWE415_Double_Free__malloc_free_char_84_goodB2G>) alias(@_ZN39CWE415_Double_Free__malloc_free_char_8447CWE415_Double_Free__malloc_free_char_84_goodB2GD2Ev) loc(#loc49)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE415_Double_Free/s01/CWE415_Double_Free__malloc_free_char_84_goodB2G.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE415_Double_Free__malloc_free_char_84_goodB2G.cpp":24:1)
#loc8 = loc("CWE415_Double_Free__malloc_free_char_84_goodB2G.cpp":31:1)
#loc12 = loc("CWE415_Double_Free__malloc_free_char_84_goodB2G.cpp":25:1)
#loc13 = loc("CWE415_Double_Free__malloc_free_char_84_goodB2G.cpp":26:12)
#loc14 = loc("./CWE415_Double_Free__malloc_free_char_84.h":58:12)
#loc15 = loc("CWE415_Double_Free__malloc_free_char_84_goodB2G.cpp":26:5)
#loc16 = loc("CWE415_Double_Free__malloc_free_char_84_goodB2G.cpp":27:20)
#loc17 = loc("CWE415_Double_Free__malloc_free_char_84_goodB2G.cpp":27:27)
#loc18 = loc("CWE415_Double_Free__malloc_free_char_84_goodB2G.cpp":27:31)
#loc19 = loc("CWE415_Double_Free__malloc_free_char_84_goodB2G.cpp":27:42)
#loc20 = loc("CWE415_Double_Free__malloc_free_char_84_goodB2G.cpp":27:43)
#loc21 = loc("CWE415_Double_Free__malloc_free_char_84_goodB2G.cpp":27:5)
#loc22 = loc("CWE415_Double_Free__malloc_free_char_84_goodB2G.cpp":28:5)
#loc23 = loc("CWE415_Double_Free__malloc_free_char_84_goodB2G.cpp":28:33)
#loc24 = loc("CWE415_Double_Free__malloc_free_char_84_goodB2G.cpp":28:9)
#loc25 = loc("CWE415_Double_Free__malloc_free_char_84_goodB2G.cpp":28:17)
#loc26 = loc("CWE415_Double_Free__malloc_free_char_84_goodB2G.cpp":28:23)
#loc27 = loc("CWE415_Double_Free__malloc_free_char_84_goodB2G.cpp":28:24)
#loc28 = loc("CWE415_Double_Free__malloc_free_char_84_goodB2G.cpp":28:30)
#loc29 = loc("CWE415_Double_Free__malloc_free_char_84_goodB2G.cpp":28:29)
#loc30 = loc("CWE415_Double_Free__malloc_free_char_84_goodB2G.cpp":30:5)
#loc31 = loc("CWE415_Double_Free__malloc_free_char_84_goodB2G.cpp":30:10)
#loc32 = loc("CWE415_Double_Free__malloc_free_char_84_goodB2G.cpp":33:1)
#loc33 = loc("CWE415_Double_Free__malloc_free_char_84_goodB2G.cpp":38:1)
#loc35 = loc("CWE415_Double_Free__malloc_free_char_84_goodB2G.cpp":34:1)
#loc36 = loc(fused[#loc1, #loc2])
#loc37 = loc(fused[#loc3, #loc4])
#loc38 = loc(fused[#loc5, #loc6])
#loc39 = loc(fused[#loc7, #loc8])
#loc41 = loc(fused[#loc15, #loc13])
#loc42 = loc(fused[#loc18, #loc19])
#loc43 = loc(fused[#loc17, #loc19])
#loc44 = loc(fused[#loc16, #loc20])
#loc45 = loc(fused[#loc21, #loc20])
#loc46 = loc(fused[#loc22, #loc23])
#loc47 = loc(fused[#loc24, #loc25])
#loc48 = loc(fused[#loc26, #loc23])
#loc49 = loc(fused[#loc32, #loc33])
