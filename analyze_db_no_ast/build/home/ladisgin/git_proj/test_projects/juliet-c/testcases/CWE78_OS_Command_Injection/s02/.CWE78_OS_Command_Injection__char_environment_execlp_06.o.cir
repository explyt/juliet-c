!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_execlp_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc113)
  cir.func private  @getenv(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc114)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"ADD\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc5)
  cir.func private  @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc115)
  cir.func private  @execlp(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc116)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"sh\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc10)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc11)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_environment_execlp_06_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc118)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc119)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc119)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc119)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc18)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
    cir.scope {
      %13 = cir.const #cir.int<5> : !s32i loc(#loc22)
      %14 = cir.const #cir.int<5> : !s32i loc(#loc23)
      %15 = cir.cmp(eq, %13, %14) : !s32i, !s32i loc(#loc122)
      %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc24)
      cir.if %16 {
        cir.scope {
          %17 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc125)
          %18 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["environment", init] {alignment = 8 : i64} loc(#loc126)
          %19 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc32)
          %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
          %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc32)
          cir.store %21, %17 : !u64i, !cir.ptr<!u64i> loc(#loc125)
          %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc5)
          %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc5)
          %24 = cir.call @getenv(%23) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc34)
          cir.store %24, %18 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc126)
          cir.scope {
            %25 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
            %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc38)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc38)
            %28 = cir.cmp(ne, %25, %27) : !cir.ptr<!s8i>, !s32i loc(#loc128)
            %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc39)
            cir.if %29 {
              %30 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc41)
              %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
              %32 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc43)
              %33 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %32 : !u64i), !cir.ptr<!s8i> loc(#loc44)
              %34 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
              %35 = cir.const #cir.int<100> : !s32i loc(#loc46)
              %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc46)
              %37 = cir.load %17 : !cir.ptr<!u64i>, !u64i loc(#loc47)
              %38 = cir.binop(sub, %36, %37) : !u64i loc(#loc130)
              %39 = cir.const #cir.int<1> : !s32i loc(#loc48)
              %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc48)
              %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc131)
              %42 = cir.call @strncat(%33, %34, %41) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc41)
            } loc(#loc129)
          } loc(#loc127)
        } loc(#loc124)
      } loc(#loc123)
    } loc(#loc121)
    %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc10)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc10)
    %6 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc49)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc49)
    %8 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc11)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc11)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc51)
    %12 = cir.call @execlp(%5, %7, %9, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc52)
    cir.return loc(#loc13)
  } loc(#loc117)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_environment_execlp_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc133)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc55)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc134)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc57)
    cir.return loc(#loc54)
  } loc(#loc132)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc135)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc61)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc136)
  cir.global "private"  constant internal dsolocal @".str4" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc64)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc138)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc139)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc139)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc139)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc71)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc140)
    cir.scope {
      %13 = cir.const #cir.int<5> : !s32i loc(#loc75)
      %14 = cir.const #cir.int<5> : !s32i loc(#loc76)
      %15 = cir.cmp(ne, %13, %14) : !s32i, !s32i loc(#loc142)
      %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc77)
      cir.if %16 {
        %17 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc61)
        %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc61)
        cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc81)
      } else {
        %17 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc82)
        %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
        %19 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc64)
        %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc64)
        %21 = cir.call @strcat(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc82)
      } loc(#loc143)
    } loc(#loc141)
    %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc84)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc84)
    %6 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc85)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc85)
    %8 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc86)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc86)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc88)
    %12 = cir.call @execlp(%5, %7, %9, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc89)
    cir.return loc(#loc66)
  } loc(#loc137)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc145)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc146)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc146)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc146)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc96)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
    cir.scope {
      %13 = cir.const #cir.int<5> : !s32i loc(#loc100)
      %14 = cir.const #cir.int<5> : !s32i loc(#loc101)
      %15 = cir.cmp(eq, %13, %14) : !s32i, !s32i loc(#loc149)
      %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc102)
      cir.if %16 {
        %17 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc104)
        %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
        %19 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc106)
        %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc106)
        %21 = cir.call @strcat(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc104)
      } loc(#loc150)
    } loc(#loc148)
    %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc107)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc107)
    %6 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc108)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc108)
    %8 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc109)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc109)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc111)
    %12 = cir.call @execlp(%5, %7, %9, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc112)
    cir.return loc(#loc91)
  } loc(#loc144)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_execlp_06.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdlib.h":773:1)
#loc4 = loc("/usr/include/stdlib.h":773:50)
#loc5 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":67:41)
#loc6 = loc("/usr/include/string.h":152:1)
#loc7 = loc("/usr/include/string.h":153:29)
#loc8 = loc("/usr/include/unistd.h":605:1)
#loc9 = loc("/usr/include/unistd.h":606:14)
#loc10 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":79:12)
#loc11 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":79:38)
#loc12 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":57:1)
#loc13 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":80:1)
#loc14 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":59:5)
#loc15 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":59:12)
#loc16 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":60:5)
#loc17 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":60:28)
#loc18 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":61:12)
#loc19 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":61:5)
#loc20 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":62:5)
#loc21 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":75:5)
#loc22 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":62:8)
#loc23 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":62:27)
#loc24 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":62:25)
#loc25 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":63:5)
#loc26 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":64:9)
#loc27 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":74:9)
#loc28 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":66:13)
#loc29 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":66:41)
#loc30 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":67:13)
#loc31 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":67:53)
#loc32 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":66:30)
#loc33 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":66:37)
#loc34 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":67:34)
#loc35 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":69:13)
#loc36 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":73:13)
#loc37 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":69:17)
#loc38 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":69:32)
#loc39 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":69:29)
#loc40 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":70:13)
#loc41 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":72:17)
#loc42 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":72:25)
#loc43 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":72:30)
#loc44 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":72:29)
#loc45 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":72:39)
#loc46 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":72:52)
#loc47 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":72:56)
#loc48 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":72:64)
#loc49 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":79:25)
#loc50 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":79:52)
#loc51 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":79:66)
#loc52 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":79:5)
#loc53 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":125:1)
#loc54 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":129:1)
#loc55 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":127:5)
#loc56 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":127:14)
#loc57 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":128:5)
#loc58 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":128:14)
#loc59 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc60 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc61 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":95:19)
#loc62 = loc("/usr/include/string.h":149:1)
#loc63 = loc("/usr/include/string.h":150:14)
#loc64 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":100:22)
#loc65 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":87:1)
#loc66 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":106:1)
#loc67 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":89:5)
#loc68 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":89:12)
#loc69 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":90:5)
#loc70 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":90:28)
#loc71 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":91:12)
#loc72 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":91:5)
#loc73 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":92:5)
#loc74 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":101:5)
#loc75 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":92:8)
#loc76 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":92:27)
#loc77 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":92:25)
#loc78 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":93:5)
#loc79 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":96:5)
#loc80 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":98:5)
#loc81 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":95:9)
#loc82 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":100:9)
#loc83 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":100:16)
#loc84 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":105:12)
#loc85 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":105:25)
#loc86 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":105:38)
#loc87 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":105:52)
#loc88 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":105:66)
#loc89 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":105:5)
#loc90 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":109:1)
#loc91 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":123:1)
#loc92 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":111:5)
#loc93 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":111:12)
#loc94 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":112:5)
#loc95 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":112:28)
#loc96 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":113:12)
#loc97 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":113:5)
#loc98 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":114:5)
#loc99 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":118:5)
#loc100 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":114:8)
#loc101 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":114:27)
#loc102 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":114:25)
#loc103 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":115:5)
#loc104 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":117:9)
#loc105 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":117:16)
#loc106 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":117:22)
#loc107 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":122:12)
#loc108 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":122:25)
#loc109 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":122:38)
#loc110 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":122:52)
#loc111 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":122:66)
#loc112 = loc("CWE78_OS_Command_Injection__char_environment_execlp_06.c":122:5)
#loc113 = loc(fused[#loc1, #loc2])
#loc114 = loc(fused[#loc3, #loc4])
#loc115 = loc(fused[#loc6, #loc7])
#loc116 = loc(fused[#loc8, #loc9])
#loc117 = loc(fused[#loc12, #loc13])
#loc118 = loc(fused[#loc14, #loc15])
#loc119 = loc(fused[#loc16, #loc17])
#loc120 = loc(fused[#loc19, #loc18])
#loc121 = loc(fused[#loc20, #loc21])
#loc122 = loc(fused[#loc22, #loc23])
#loc123 = loc(fused[#loc25, #loc21])
#loc124 = loc(fused[#loc26, #loc27])
#loc125 = loc(fused[#loc28, #loc29])
#loc126 = loc(fused[#loc30, #loc31])
#loc127 = loc(fused[#loc35, #loc36])
#loc128 = loc(fused[#loc37, #loc38])
#loc129 = loc(fused[#loc40, #loc36])
#loc130 = loc(fused[#loc46, #loc47])
#loc131 = loc(fused[#loc46, #loc48])
#loc132 = loc(fused[#loc53, #loc54])
#loc133 = loc(fused[#loc55, #loc56])
#loc134 = loc(fused[#loc57, #loc58])
#loc135 = loc(fused[#loc59, #loc60])
#loc136 = loc(fused[#loc62, #loc63])
#loc137 = loc(fused[#loc65, #loc66])
#loc138 = loc(fused[#loc67, #loc68])
#loc139 = loc(fused[#loc69, #loc70])
#loc140 = loc(fused[#loc72, #loc71])
#loc141 = loc(fused[#loc73, #loc74])
#loc142 = loc(fused[#loc75, #loc76])
#loc143 = loc(fused[#loc78, #loc79, #loc80, #loc74])
#loc144 = loc(fused[#loc90, #loc91])
#loc145 = loc(fused[#loc92, #loc93])
#loc146 = loc(fused[#loc94, #loc95])
#loc147 = loc(fused[#loc97, #loc96])
#loc148 = loc(fused[#loc98, #loc99])
#loc149 = loc(fused[#loc100, #loc101])
#loc150 = loc(fused[#loc103, #loc99])
