!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":81:10)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":81:14)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":81:20)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":81:32)
#loc121 = loc(fused[#loc43, #loc44])
#loc122 = loc(fused[#loc45, #loc46])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @CWE590_Free_Memory_Not_on_Heap__free_char_static_64_bad.dataBuffer = #cir.zero : !cir.array<!s8i x 100> {alignment = 16 : i64} loc(#loc1)
  cir.func private @CWE590_Free_Memory_Not_on_Heap__free_char_static_64b_badSink(!cir.ptr<!void>) loc(#loc106)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_static_64_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc108)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc8)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc109)
    cir.br ^bb1 loc(#loc110)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_static_64_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc1)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc12)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc12)
    %5 = cir.const #cir.int<65> : !s32i loc(#loc13)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc14)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc14)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc14)
    cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc111)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc18)
    %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc18)
    %12 = cir.const #cir.int<100> : !s32i loc(#loc19)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc19)
    %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc21)
    %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc21)
    cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc112)
    %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc22)
    cir.store %17, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc113)
    cir.br ^bb2 loc(#loc11)
  ^bb2:  // pred: ^bb1
    %18 = cir.cast(bitcast, %0 : !cir.ptr<!cir.ptr<!s8i>>), !cir.ptr<!void> loc(#loc114)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_static_64b_badSink(%18) : (!cir.ptr<!void>) -> () loc(#loc26)
    cir.return loc(#loc5)
  } loc(#loc107)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_static_64_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc116)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc29)
    cir.return loc(#loc28)
  } loc(#loc115)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc117)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc118)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc119)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc37)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc38)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc39)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc40)
  cir.func @main(%arg0: !s32i loc(fused[#loc43, #loc44]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc45, #loc46])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc121)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc122)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc42)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc47)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc47)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc48)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc49)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc49)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc50)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc37)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    %8 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_static_64_good : !cir.ptr<!cir.func<!void ()>> loc(#loc123)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_static_64_good() : () -> () loc(#loc52)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc38)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc39)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    %13 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_static_64_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc124)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_static_64_bad() : () -> () loc(#loc56)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc40)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc59)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc125)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    cir.return %17 : !s32i loc(#loc125)
  } loc(#loc120)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc126)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc63)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc127)
  cir.func private @CWE590_Free_Memory_Not_on_Heap__free_char_static_64b_goodG2BSink(!cir.ptr<!void>) loc(#loc128)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc130)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc131)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc74)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
    cir.br ^bb1 loc(#loc133)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc78)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc79)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc79)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc134)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc135)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc78)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc136)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc130)
    cir.br ^bb2 loc(#loc137)
  ^bb2:  // pred: ^bb1
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc85)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc85)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc138)
    cir.brcond %13 ^bb3, ^bb4 loc(#loc139)
  ^bb3:  // pred: ^bb2
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc63)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc88)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc89)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr1) loc(#loc88)
    cir.br ^bb4 loc(#loc83)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc83)
  ^bb5:  // pred: ^bb4
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc90)
    %20 = cir.const #cir.int<65> : !s32i loc(#loc91)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc92)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc92)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc92)
    cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc140)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc96)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc96)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    %28 = cir.const #cir.int<100> : !s32i loc(#loc98)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc98)
    %31 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc100)
    cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc141)
    %32 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
    cir.store %32, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc142)
    cir.br ^bb6 loc(#loc77)
  ^bb6:  // pred: ^bb5
    %33 = cir.cast(bitcast, %1 : !cir.ptr<!cir.ptr<!s8i>>), !cir.ptr<!void> loc(#loc143)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_static_64b_goodG2BSink(%33) : (!cir.ptr<!void>) -> () loc(#loc105)
    cir.return loc(#loc69)
  } loc(#loc129)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":32:21)
#loc2 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":24:1)
#loc3 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":24:85)
#loc4 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":26:1)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":38:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":28:5)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":28:12)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":29:12)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":29:5)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":30:5)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":36:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":33:16)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":33:28)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":33:33)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":33:37)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":33:9)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":33:38)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":34:29)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":34:20)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":34:24)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":34:9)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":35:16)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":35:9)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":37:66)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":37:67)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":37:5)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":66:1)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":69:1)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":68:5)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":68:13)
#loc31 = loc("/usr/include/stdlib.h":575:1)
#loc32 = loc("/usr/include/stdlib.h":575:41)
#loc33 = loc("/usr/include/time.h":76:1)
#loc34 = loc("/usr/include/time.h":76:38)
#loc35 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc36 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":86:15)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":88:15)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":91:15)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":93:15)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":81:1)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":96:1)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":82:1)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":84:27)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":84:22)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":84:5)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":86:5)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":87:5)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":87:62)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":88:5)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":91:5)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":92:5)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":92:61)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":93:5)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":95:12)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":95:5)
#loc61 = loc("/usr/include/stdlib.h":672:1)
#loc62 = loc("/usr/include/stdlib.h":672:45)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":56:23)
#loc64 = loc("/usr/include/stdlib.h":756:1)
#loc65 = loc("/usr/include/stdlib.h":756:70)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":45:1)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":45:89)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":47:1)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":64:1)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":53:9)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":53:60)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":49:5)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":49:12)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":50:12)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":50:5)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":51:5)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":62:5)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":53:37)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":53:44)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":53:48)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":53:59)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":54:9)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":58:9)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":54:13)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":54:27)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":55:9)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":56:13)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":57:13)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":57:18)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":59:16)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":59:28)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":59:33)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":59:37)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":59:9)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":59:38)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":60:29)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":60:9)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":60:20)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":60:24)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":60:25)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":61:16)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":61:9)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":63:70)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":63:71)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_64a.c":63:5)
#loc106 = loc(fused[#loc2, #loc3])
#loc107 = loc(fused[#loc4, #loc5])
#loc108 = loc(fused[#loc6, #loc7])
#loc109 = loc(fused[#loc9, #loc8])
#loc110 = loc(fused[#loc10, #loc11])
#loc111 = loc(fused[#loc16, #loc17])
#loc112 = loc(fused[#loc21, #loc18])
#loc113 = loc(fused[#loc23, #loc22])
#loc114 = loc(fused[#loc24, #loc25])
#loc115 = loc(fused[#loc27, #loc28])
#loc116 = loc(fused[#loc29, #loc30])
#loc117 = loc(fused[#loc31, #loc32])
#loc118 = loc(fused[#loc33, #loc34])
#loc119 = loc(fused[#loc35, #loc36])
#loc120 = loc(fused[#loc41, #loc42])
#loc123 = loc(fused[#loc52, #loc53])
#loc124 = loc(fused[#loc56, #loc57])
#loc125 = loc(fused[#loc60, #loc59])
#loc126 = loc(fused[#loc61, #loc62])
#loc127 = loc(fused[#loc64, #loc65])
#loc128 = loc(fused[#loc66, #loc67])
#loc129 = loc(fused[#loc68, #loc69])
#loc130 = loc(fused[#loc70, #loc71])
#loc131 = loc(fused[#loc72, #loc73])
#loc132 = loc(fused[#loc75, #loc74])
#loc133 = loc(fused[#loc76, #loc77])
#loc134 = loc(fused[#loc80, #loc81])
#loc135 = loc(fused[#loc79, #loc81])
#loc136 = loc(fused[#loc78, #loc71])
#loc137 = loc(fused[#loc82, #loc83])
#loc138 = loc(fused[#loc84, #loc85])
#loc139 = loc(fused[#loc86, #loc83])
#loc140 = loc(fused[#loc94, #loc95])
#loc141 = loc(fused[#loc97, #loc96])
#loc142 = loc(fused[#loc102, #loc101])
#loc143 = loc(fused[#loc103, #loc104])
