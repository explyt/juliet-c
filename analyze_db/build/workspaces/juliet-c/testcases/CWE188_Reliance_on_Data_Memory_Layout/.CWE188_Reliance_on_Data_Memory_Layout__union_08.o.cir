!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty_anon2E1 = !cir.record<struct "anon.1" {!s8i, !s8i, !s8i, !s8i} #cir.record.decl.ast>
!ty_anon2E0 = !cir.record<union "anon.0" {!ty_anon2E1, !s64i}>
module @"/workspaces/juliet-c/testcases/CWE188_Reliance_on_Data_Memory_Layout/CWE188_Reliance_on_Data_Memory_Layout__union_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc80)
  cir.func no_proto @CWE188_Reliance_on_Data_Memory_Layout__union_08_bad() extra(#fn_attr) {
    %0 = cir.alloca !ty_anon2E0, !cir.ptr<!ty_anon2E0>, ["unionStructLong"] {alignment = 8 : i64} loc(#loc82)
    cir.br ^bb1 loc(#loc83)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc84)
    %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc9)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc9)
    cir.brcond %3 ^bb2, ^bb5 loc(#loc85)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc86)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.int<270544960> : !s32i loc(#loc14)
    %5 = cir.cast(integral, %4 : !s32i), !s64i loc(#loc14)
    %6 = cir.get_member %0[1] {name = "longNumber"} : !cir.ptr<!ty_anon2E0> -> !cir.ptr<!s64i> loc(#loc15)
    cir.store %5, %6 : !s64i, !cir.ptr<!s64i> loc(#loc87)
    %7 = cir.const #cir.int<128> : !s32i loc(#loc17)
    %8 = cir.get_member %0[0] {name = "structChars"} : !cir.ptr<!ty_anon2E0> -> !cir.ptr<!ty_anon2E1> loc(#loc18)
    %9 = cir.get_member %8[3] {name = "charFourth"} : !cir.ptr<!ty_anon2E1> -> !cir.ptr<!s8i> loc(#loc19)
    %10 = cir.load %9 : !cir.ptr<!s8i>, !s8i loc(#loc20)
    %11 = cir.cast(integral, %10 : !s8i), !s32i loc(#loc20)
    %12 = cir.binop(or, %11, %7) : !s32i loc(#loc88)
    %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc88)
    cir.store %13, %9 : !s8i, !cir.ptr<!s8i> loc(#loc88)
    %14 = cir.get_member %0[1] {name = "longNumber"} : !cir.ptr<!ty_anon2E0> -> !cir.ptr<!s64i> loc(#loc15)
    %15 = cir.load %14 : !cir.ptr<!s64i>, !s64i loc(#loc22)
    %16 = cir.cast(integral, %15 : !s64i), !s32i loc(#loc22)
    cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc23)
    cir.br ^bb4 loc(#loc13)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc8)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc8)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc4)
  } loc(#loc81)
  cir.func no_proto @CWE188_Reliance_on_Data_Memory_Layout__union_08_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc90)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc26)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc91)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc28)
    cir.return loc(#loc25)
  } loc(#loc89)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc31)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc32)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc93)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc93)
    cir.return %2 : !s32i loc(#loc93)
  } loc(#loc92)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc94)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc36)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["longNumber"] {alignment = 8 : i64} loc(#loc96)
    cir.br ^bb1 loc(#loc97)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc98)
    %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc43)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc43)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc99)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc36)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    cir.br ^bb6 loc(#loc46)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc100)
  ^bb4:  // pred: ^bb3
    %6 = cir.const #cir.int<270544960> : !s32i loc(#loc51)
    %7 = cir.cast(integral, %6 : !s32i), !s64i loc(#loc51)
    cir.store %7, %0 : !s64i, !cir.ptr<!s64i> loc(#loc101)
    %8 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc53)
    %9 = cir.unary(minus, %8) nsw : !s64i, !s64i loc(#loc53)
    %10 = cir.const #cir.int<1> : !s64i loc(#loc53)
    %11 = cir.binop(sub, %9, %10) nsw : !s64i loc(#loc53)
    %12 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc54)
    %13 = cir.binop(or, %12, %11) : !s64i loc(#loc102)
    cir.store %13, %0 : !s64i, !cir.ptr<!s64i> loc(#loc102)
    %14 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc56)
    %15 = cir.cast(integral, %14 : !s64i), !s32i loc(#loc56)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc57)
    cir.br ^bb5 loc(#loc50)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc42)
  ^bb6:  // 2 preds: ^bb2, ^bb5
    cir.br ^bb7 loc(#loc42)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc38)
  } loc(#loc95)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc59)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc60)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc104)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    cir.return %2 : !s32i loc(#loc104)
  } loc(#loc103)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["longNumber"] {alignment = 8 : i64} loc(#loc106)
    cir.br ^bb1 loc(#loc107)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc108)
    %2 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc68)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc68)
    cir.brcond %3 ^bb2, ^bb5 loc(#loc109)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc110)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.int<270544960> : !s32i loc(#loc73)
    %5 = cir.cast(integral, %4 : !s32i), !s64i loc(#loc73)
    cir.store %5, %0 : !s64i, !cir.ptr<!s64i> loc(#loc111)
    %6 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc75)
    %7 = cir.unary(minus, %6) nsw : !s64i, !s64i loc(#loc75)
    %8 = cir.const #cir.int<1> : !s64i loc(#loc75)
    %9 = cir.binop(sub, %7, %8) nsw : !s64i loc(#loc75)
    %10 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc76)
    %11 = cir.binop(or, %10, %9) : !s64i loc(#loc112)
    cir.store %11, %0 : !s64i, !cir.ptr<!s64i> loc(#loc112)
    %12 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc78)
    %13 = cir.cast(integral, %12 : !s64i), !s32i loc(#loc78)
    cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc79)
    cir.br ^bb4 loc(#loc72)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc67)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc67)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc63)
  } loc(#loc105)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE188_Reliance_on_Data_Memory_Layout/CWE188_Reliance_on_Data_Memory_Layout__union_08.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":33:1)
#loc4 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":53:1)
#loc5 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":38:13)
#loc6 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":45:15)
#loc7 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":35:5)
#loc8 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":52:5)
#loc9 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":35:8)
#loc10 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":35:26)
#loc11 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":36:5)
#loc12 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":37:9)
#loc13 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":51:9)
#loc14 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":46:42)
#loc15 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":44:22)
#loc16 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":46:13)
#loc17 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":49:55)
#loc18 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":43:19)
#loc19 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":42:60)
#loc20 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":49:52)
#loc21 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":49:13)
#loc22 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":50:42)
#loc23 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":50:13)
#loc24 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":104:1)
#loc25 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":108:1)
#loc26 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":106:5)
#loc27 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":106:11)
#loc28 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":107:5)
#loc29 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":107:11)
#loc30 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":21:1)
#loc31 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":24:1)
#loc32 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":23:12)
#loc33 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":23:5)
#loc34 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc35 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc36 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":65:19)
#loc37 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":60:1)
#loc38 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":82:1)
#loc39 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":70:13)
#loc40 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":70:18)
#loc41 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":62:5)
#loc42 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":81:5)
#loc43 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":62:8)
#loc44 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":62:27)
#loc45 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":63:5)
#loc46 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":66:5)
#loc47 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":68:5)
#loc48 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":65:9)
#loc49 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":69:9)
#loc50 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":80:9)
#loc51 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":71:26)
#loc52 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":71:13)
#loc53 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":78:27)
#loc54 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":78:24)
#loc55 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":78:13)
#loc56 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":79:26)
#loc57 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":79:13)
#loc58 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":26:1)
#loc59 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":29:1)
#loc60 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":28:12)
#loc61 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":28:5)
#loc62 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":85:1)
#loc63 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":102:1)
#loc64 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":90:13)
#loc65 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":90:18)
#loc66 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":87:5)
#loc67 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":101:5)
#loc68 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":87:8)
#loc69 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":87:26)
#loc70 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":88:5)
#loc71 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":89:9)
#loc72 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":100:9)
#loc73 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":91:26)
#loc74 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":91:13)
#loc75 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":98:27)
#loc76 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":98:24)
#loc77 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":98:13)
#loc78 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":99:26)
#loc79 = loc("CWE188_Reliance_on_Data_Memory_Layout__union_08.c":99:13)
#loc80 = loc(fused[#loc1, #loc2])
#loc81 = loc(fused[#loc3, #loc4])
#loc82 = loc(fused[#loc5, #loc6])
#loc83 = loc(fused[#loc7, #loc8])
#loc84 = loc(fused[#loc9, #loc10])
#loc85 = loc(fused[#loc11, #loc8])
#loc86 = loc(fused[#loc12, #loc13])
#loc87 = loc(fused[#loc16, #loc14])
#loc88 = loc(fused[#loc21, #loc17])
#loc89 = loc(fused[#loc24, #loc25])
#loc90 = loc(fused[#loc26, #loc27])
#loc91 = loc(fused[#loc28, #loc29])
#loc92 = loc(fused[#loc30, #loc31])
#loc93 = loc(fused[#loc33, #loc32])
#loc94 = loc(fused[#loc34, #loc35])
#loc95 = loc(fused[#loc37, #loc38])
#loc96 = loc(fused[#loc39, #loc40])
#loc97 = loc(fused[#loc41, #loc42])
#loc98 = loc(fused[#loc43, #loc44])
#loc99 = loc(fused[#loc45, #loc46, #loc47, #loc42])
#loc100 = loc(fused[#loc49, #loc50])
#loc101 = loc(fused[#loc52, #loc51])
#loc102 = loc(fused[#loc55, #loc53])
#loc103 = loc(fused[#loc58, #loc59])
#loc104 = loc(fused[#loc61, #loc60])
#loc105 = loc(fused[#loc62, #loc63])
#loc106 = loc(fused[#loc64, #loc65])
#loc107 = loc(fused[#loc66, #loc67])
#loc108 = loc(fused[#loc68, #loc69])
#loc109 = loc(fused[#loc70, #loc67])
#loc110 = loc(fused[#loc71, #loc72])
#loc111 = loc(fused[#loc74, #loc73])
#loc112 = loc(fused[#loc77, #loc75])
