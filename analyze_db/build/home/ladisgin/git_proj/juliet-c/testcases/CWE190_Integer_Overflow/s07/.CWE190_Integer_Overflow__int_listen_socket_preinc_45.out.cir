!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc162 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":273:10)
#loc163 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":273:14)
#loc164 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":273:20)
#loc165 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":273:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc426 = loc(fused[#loc162, #loc163])
#loc427 = loc(fused[#loc164, #loc165])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int_listen_socket_preinc_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc362)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc363)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc364)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc365)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc366)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc367)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc368)
  cir.func private @close(!s32i) -> !s32i loc(#loc369)
  cir.global "private" internal dsolocal @CWE190_Integer_Overflow__int_listen_socket_preinc_45_badData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc370)
  cir.func no_proto @CWE190_Integer_Overflow__int_listen_socket_preinc_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc372)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc23)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc373)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc375)
      %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc376)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc377)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc378)
      %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc379)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc32)
      %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc32)
      cir.store %11, %7 : !s32i, !cir.ptr<!s32i> loc(#loc377)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc34)
      %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc34)
      cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc378)
      cir.scope {
        cir.do {
          %14 = cir.const #cir.int<2> : !s32i loc(#loc39)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc40)
          %16 = cir.const #cir.int<6> : !s32i loc(#loc41)
          %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc42)
          cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc381)
          cir.scope {
            %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc47)
            %60 = cir.const #cir.int<1> : !s32i loc(#loc48)
            %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc48)
            %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc383)
            cir.if %62 {
              cir.break loc(#loc50)
            } loc(#loc384)
          } loc(#loc382)
          %18 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc385)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc53)
          %20 = cir.const #cir.int<16> : !u64i loc(#loc386)
          cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc387)
          %21 = cir.const #cir.int<2> : !s32i loc(#loc58)
          %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc58)
          %23 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc59)
          cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc388)
          %24 = cir.const #cir.int<0> : !s32i loc(#loc61)
          %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc61)
          %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc62)
          %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc63)
          cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc389)
          %28 = cir.const #cir.int<27015> : !s32i loc(#loc65)
          %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc65)
          %30 = cir.call @htons(%29) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc66)
          %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
          cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc390)
          cir.scope {
            %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc72)
            %60 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc392)
            %61 = cir.const #cir.int<16> : !u64i loc(#loc393)
            %62 = cir.cast(integral, %61 : !u64i), !u32i loc(#loc393)
            %63 = cir.call @bind(%59, %60, %62) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc77)
            %64 = cir.const #cir.int<1> : !s32i loc(#loc78)
            %65 = cir.unary(minus, %64) : !s32i, !s32i loc(#loc78)
            %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc394)
            cir.if %66 {
              cir.break loc(#loc80)
            } loc(#loc395)
          } loc(#loc391)
          cir.scope {
            %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc83)
            %60 = cir.const #cir.int<5> : !s32i loc(#loc84)
            %61 = cir.call @listen(%59, %60) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc85)
            %62 = cir.const #cir.int<1> : !s32i loc(#loc86)
            %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc86)
            %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc397)
            cir.if %64 {
              cir.break loc(#loc88)
            } loc(#loc398)
          } loc(#loc396)
          %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc89)
          %33 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc90)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc91)
          %35 = cir.call @accept(%32, %33, %34) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc92)
          cir.store %35, %8 : !s32i, !cir.ptr<!s32i> loc(#loc399)
          cir.scope {
            %59 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc97)
            %60 = cir.const #cir.int<1> : !s32i loc(#loc98)
            %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc98)
            %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc401)
            cir.if %62 {
              cir.break loc(#loc100)
            } loc(#loc402)
          } loc(#loc400)
          %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc101)
          %37 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc102)
          %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc102)
          %39 = cir.const #cir.int<3> : !s32i loc(#loc103)
          %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc103)
          %41 = cir.const #cir.int<4> : !u64i loc(#loc103)
          %42 = cir.binop(mul, %40, %41) : !u64i loc(#loc103)
          %43 = cir.const #cir.int<2> : !s32i loc(#loc103)
          %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc103)
          %45 = cir.binop(add, %42, %44) : !u64i loc(#loc103)
          %46 = cir.const #cir.int<1> : !s32i loc(#loc104)
          %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc104)
          %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc403)
          %49 = cir.const #cir.int<0> : !s32i loc(#loc105)
          %50 = cir.call @recv(%36, %38, %48, %49) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc106)
          %51 = cir.cast(integral, %50 : !s64i), !s32i loc(#loc106)
          cir.store %51, %5 : !s32i, !cir.ptr<!s32i> loc(#loc404)
          cir.scope {
            %59 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc111)
            %60 = cir.const #cir.int<1> : !s32i loc(#loc112)
            %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc112)
            %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc406)
            %63 = cir.ternary(%62, true {
              %64 = cir.const #true loc(#loc113)
              cir.yield %64 : !cir.bool loc(#loc113)
            }, false {
              %64 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc114)
              %65 = cir.const #cir.int<0> : !s32i loc(#loc115)
              %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc407)
              %67 = cir.ternary(%66, true {
                %68 = cir.const #true loc(#loc113)
                cir.yield %68 : !cir.bool loc(#loc113)
              }, false {
                %68 = cir.const #false loc(#loc113)
                cir.yield %68 : !cir.bool loc(#loc113)
              }) : (!cir.bool) -> !cir.bool loc(#loc113)
              cir.yield %67 : !cir.bool loc(#loc113)
            }) : (!cir.bool) -> !cir.bool loc(#loc113)
            cir.if %63 {
              cir.break loc(#loc117)
            } loc(#loc408)
          } loc(#loc405)
          %52 = cir.const #cir.int<0> : !s32i loc(#loc118)
          %53 = cir.cast(integral, %52 : !s32i), !s8i loc(#loc118)
          %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc119)
          %55 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc120)
          %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !s32i), !cir.ptr<!s8i> loc(#loc120)
          cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc409)
          %57 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc121)
          %58 = cir.call @atoi(%57) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc122)
          cir.store %58, %0 : !s32i, !cir.ptr<!s32i> loc(#loc410)
          cir.yield loc(#loc38)
        } while {
          %14 = cir.const #cir.int<0> : !s32i loc(#loc125)
          %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc125)
          cir.condition(%15) loc(#loc125)
        } loc(#loc380)
      } loc(#loc380)
      cir.scope {
        %14 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc128)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc129)
        %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc129)
        %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc412)
        cir.if %17 {
          %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc131)
          %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc132)
        } loc(#loc413)
      } loc(#loc411)
      cir.scope {
        %14 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc135)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc136)
        %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc136)
        %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc415)
        cir.if %17 {
          %18 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc138)
          %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc139)
        } loc(#loc416)
      } loc(#loc414)
    } loc(#loc374)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc140)
    %3 = cir.get_global @CWE190_Integer_Overflow__int_listen_socket_preinc_45_badData : !cir.ptr<!s32i> loc(#loc370)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc417)
    %4 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc418)
    cir.call %4() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc142)
    cir.return loc(#loc20)
  } loc(#loc371)
  cir.func no_proto @CWE190_Integer_Overflow__int_listen_socket_preinc_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc420)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc146)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc421)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc148)
    cir.return loc(#loc145)
  } loc(#loc419)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc422)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc423)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc424)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc156)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc157)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc158)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc159)
  cir.func @main(%arg0: !s32i loc(fused[#loc162, #loc163]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc164, #loc165])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc426)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc427)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc161)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc166)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc167)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc168)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc168)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc169)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc156)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc156)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc170)
    %8 = cir.get_global @CWE190_Integer_Overflow__int_listen_socket_preinc_45_good : !cir.ptr<!cir.func<!void ()>> loc(#loc428)
    cir.call @CWE190_Integer_Overflow__int_listen_socket_preinc_45_good() : () -> () loc(#loc171)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc157)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc157)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc173)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc158)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc158)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc174)
    %13 = cir.get_global @CWE190_Integer_Overflow__int_listen_socket_preinc_45_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc429)
    cir.call @CWE190_Integer_Overflow__int_listen_socket_preinc_45_bad() : () -> () loc(#loc175)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc159)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc159)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc177)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc178)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc430)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc430)
    cir.return %17 : !s32i loc(#loc430)
  } loc(#loc425)
  cir.func private @printIntLine(!s32i) loc(#loc431)
  cir.func no_proto internal private @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc433)
    %1 = cir.get_global @CWE190_Integer_Overflow__int_listen_socket_preinc_45_badData : !cir.ptr<!s32i> loc(#loc370)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc185)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc433)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc435)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc190)
      %5 = cir.unary(inc, %4) : !s32i, !s32i loc(#loc190)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc436)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc189)
      cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc435)
      %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc192)
      cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc193)
    } loc(#loc434)
    cir.return loc(#loc183)
  } loc(#loc432)
  cir.global "private" internal dsolocal @CWE190_Integer_Overflow__int_listen_socket_preinc_45_goodG2BData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc437)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc439)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc200)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc440)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc202)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc441)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc204)
    %4 = cir.get_global @CWE190_Integer_Overflow__int_listen_socket_preinc_45_goodG2BData : !cir.ptr<!s32i> loc(#loc437)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc442)
    %5 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc443)
    cir.call %5() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc206)
    cir.return loc(#loc197)
  } loc(#loc438)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc445)
    %1 = cir.get_global @CWE190_Integer_Overflow__int_listen_socket_preinc_45_goodG2BData : !cir.ptr<!s32i> loc(#loc437)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc211)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc445)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc447)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc216)
      %5 = cir.unary(inc, %4) : !s32i, !s32i loc(#loc216)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc448)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc215)
      cir.store %6, %3 : !s32i, !cir.ptr<!s32i> loc(#loc447)
      %7 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc218)
      cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc219)
    } loc(#loc446)
    cir.return loc(#loc209)
  } loc(#loc444)
  cir.global "private" internal dsolocal @CWE190_Integer_Overflow__int_listen_socket_preinc_45_goodB2GData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc449)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc451)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc226)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc452)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc454)
      %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc455)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc456)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc457)
      %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc458)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc235)
      %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc235)
      cir.store %11, %7 : !s32i, !cir.ptr<!s32i> loc(#loc456)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc237)
      %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc237)
      cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc457)
      cir.scope {
        cir.do {
          %14 = cir.const #cir.int<2> : !s32i loc(#loc242)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc243)
          %16 = cir.const #cir.int<6> : !s32i loc(#loc244)
          %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc245)
          cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc460)
          cir.scope {
            %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc250)
            %60 = cir.const #cir.int<1> : !s32i loc(#loc251)
            %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc251)
            %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc462)
            cir.if %62 {
              cir.break loc(#loc253)
            } loc(#loc463)
          } loc(#loc461)
          %18 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc464)
          %19 = cir.const #cir.int<0> : !s32i loc(#loc256)
          %20 = cir.const #cir.int<16> : !u64i loc(#loc465)
          cir.libc.memset %20 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc466)
          %21 = cir.const #cir.int<2> : !s32i loc(#loc261)
          %22 = cir.cast(integral, %21 : !s32i), !u16i loc(#loc261)
          %23 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc59)
          cir.store %22, %23 : !u16i, !cir.ptr<!u16i> loc(#loc467)
          %24 = cir.const #cir.int<0> : !s32i loc(#loc263)
          %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc263)
          %26 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc62)
          %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc63)
          cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc468)
          %28 = cir.const #cir.int<27015> : !s32i loc(#loc265)
          %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc265)
          %30 = cir.call @htons(%29) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc266)
          %31 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
          cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc469)
          cir.scope {
            %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc271)
            %60 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc471)
            %61 = cir.const #cir.int<16> : !u64i loc(#loc472)
            %62 = cir.cast(integral, %61 : !u64i), !u32i loc(#loc472)
            %63 = cir.call @bind(%59, %60, %62) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc276)
            %64 = cir.const #cir.int<1> : !s32i loc(#loc277)
            %65 = cir.unary(minus, %64) : !s32i, !s32i loc(#loc277)
            %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc473)
            cir.if %66 {
              cir.break loc(#loc279)
            } loc(#loc474)
          } loc(#loc470)
          cir.scope {
            %59 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc282)
            %60 = cir.const #cir.int<5> : !s32i loc(#loc283)
            %61 = cir.call @listen(%59, %60) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc284)
            %62 = cir.const #cir.int<1> : !s32i loc(#loc285)
            %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc285)
            %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc476)
            cir.if %64 {
              cir.break loc(#loc287)
            } loc(#loc477)
          } loc(#loc475)
          %32 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc288)
          %33 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc289)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc290)
          %35 = cir.call @accept(%32, %33, %34) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc291)
          cir.store %35, %8 : !s32i, !cir.ptr<!s32i> loc(#loc478)
          cir.scope {
            %59 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc296)
            %60 = cir.const #cir.int<1> : !s32i loc(#loc297)
            %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc297)
            %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc480)
            cir.if %62 {
              cir.break loc(#loc299)
            } loc(#loc481)
          } loc(#loc479)
          %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc300)
          %37 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc301)
          %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc301)
          %39 = cir.const #cir.int<3> : !s32i loc(#loc302)
          %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc302)
          %41 = cir.const #cir.int<4> : !u64i loc(#loc302)
          %42 = cir.binop(mul, %40, %41) : !u64i loc(#loc302)
          %43 = cir.const #cir.int<2> : !s32i loc(#loc302)
          %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc302)
          %45 = cir.binop(add, %42, %44) : !u64i loc(#loc302)
          %46 = cir.const #cir.int<1> : !s32i loc(#loc303)
          %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc303)
          %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc482)
          %49 = cir.const #cir.int<0> : !s32i loc(#loc304)
          %50 = cir.call @recv(%36, %38, %48, %49) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc305)
          %51 = cir.cast(integral, %50 : !s64i), !s32i loc(#loc305)
          cir.store %51, %5 : !s32i, !cir.ptr<!s32i> loc(#loc483)
          cir.scope {
            %59 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc310)
            %60 = cir.const #cir.int<1> : !s32i loc(#loc311)
            %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc311)
            %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc485)
            %63 = cir.ternary(%62, true {
              %64 = cir.const #true loc(#loc312)
              cir.yield %64 : !cir.bool loc(#loc312)
            }, false {
              %64 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc313)
              %65 = cir.const #cir.int<0> : !s32i loc(#loc314)
              %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc486)
              %67 = cir.ternary(%66, true {
                %68 = cir.const #true loc(#loc312)
                cir.yield %68 : !cir.bool loc(#loc312)
              }, false {
                %68 = cir.const #false loc(#loc312)
                cir.yield %68 : !cir.bool loc(#loc312)
              }) : (!cir.bool) -> !cir.bool loc(#loc312)
              cir.yield %67 : !cir.bool loc(#loc312)
            }) : (!cir.bool) -> !cir.bool loc(#loc312)
            cir.if %63 {
              cir.break loc(#loc316)
            } loc(#loc487)
          } loc(#loc484)
          %52 = cir.const #cir.int<0> : !s32i loc(#loc317)
          %53 = cir.cast(integral, %52 : !s32i), !s8i loc(#loc317)
          %54 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc318)
          %55 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc319)
          %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !s32i), !cir.ptr<!s8i> loc(#loc319)
          cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc488)
          %57 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc320)
          %58 = cir.call @atoi(%57) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc321)
          cir.store %58, %0 : !s32i, !cir.ptr<!s32i> loc(#loc489)
          cir.yield loc(#loc241)
        } while {
          %14 = cir.const #cir.int<0> : !s32i loc(#loc324)
          %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc324)
          cir.condition(%15) loc(#loc324)
        } loc(#loc459)
      } loc(#loc459)
      cir.scope {
        %14 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc327)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc328)
        %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc328)
        %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc491)
        cir.if %17 {
          %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc330)
          %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc331)
        } loc(#loc492)
      } loc(#loc490)
      cir.scope {
        %14 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc334)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc335)
        %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc335)
        %17 = cir.cmp(ne, %14, %16) : !s32i, !cir.bool loc(#loc494)
        cir.if %17 {
          %18 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc337)
          %19 = cir.call @close(%18) : (!s32i) -> !s32i loc(#loc338)
        } loc(#loc495)
      } loc(#loc493)
    } loc(#loc453)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc339)
    %3 = cir.get_global @CWE190_Integer_Overflow__int_listen_socket_preinc_45_goodB2GData : !cir.ptr<!s32i> loc(#loc449)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc496)
    %4 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void ()>> loc(#loc497)
    cir.call %4() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc341)
    cir.return loc(#loc223)
  } loc(#loc450)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc343)
  cir.func no_proto internal private @goodB2GSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc499)
    %1 = cir.get_global @CWE190_Integer_Overflow__int_listen_socket_preinc_45_goodB2GData : !cir.ptr<!s32i> loc(#loc449)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc347)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc499)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc350)
      %4 = cir.const #cir.int<2147483647> : !s32i loc(#loc351)
      %5 = cir.cmp(lt, %3, %4) : !s32i, !cir.bool loc(#loc501)
      cir.if %5 {
        %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc503)
        %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc357)
        %8 = cir.unary(inc, %7) : !s32i, !s32i loc(#loc357)
        cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc504)
        %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc356)
        cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc503)
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc359)
        cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc360)
      } else {
        %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc343)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc343)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc361)
      } loc(#loc502)
    } loc(#loc500)
    cir.return loc(#loc345)
  } loc(#loc498)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":42:1)
#loc18 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":42:12)
#loc19 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":59:1)
#loc20 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":135:1)
#loc21 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":61:5)
#loc22 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":61:9)
#loc23 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":63:12)
#loc24 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":63:5)
#loc25 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":64:5)
#loc26 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":132:5)
#loc27 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":69:9)
#loc28 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":69:13)
#loc29 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":70:9)
#loc30 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":70:28)
#loc31 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":71:9)
#loc32 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":71:31)
#loc33 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":72:9)
#loc34 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":72:31)
#loc35 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":73:9)
#loc36 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":73:41)
#loc37 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":74:9)
#loc38 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":117:17)
#loc39 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":84:35)
#loc40 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":84:44)
#loc41 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":84:57)
#loc42 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":84:28)
#loc43 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":84:13)
#loc44 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":84:68)
#loc45 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":85:13)
#loc46 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":88:13)
#loc47 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":85:17)
#loc48 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":85:33)
#loc49 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":86:13)
#loc50 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":87:17)
#loc51 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":89:20)
#loc52 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":89:21)
#loc53 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":89:30)
#loc54 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":89:33)
#loc55 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":89:47)
#loc56 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":89:13)
#loc57 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":89:48)
#loc58 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":90:34)
#loc59 = loc("/usr/include/netinet/in.h":249:5)
#loc60 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":90:13)
#loc61 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":91:39)
#loc62 = loc("/usr/include/netinet/in.h":251:20)
#loc63 = loc("/usr/include/netinet/in.h":33:15)
#loc64 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":91:13)
#loc65 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":92:38)
#loc66 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":92:32)
#loc67 = loc("/usr/include/netinet/in.h":250:15)
#loc68 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":92:13)
#loc69 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":92:46)
#loc70 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":93:13)
#loc71 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":96:13)
#loc72 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":93:22)
#loc73 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":93:54)
#loc74 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":93:55)
#loc75 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":93:64)
#loc76 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":93:78)
#loc77 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":93:17)
#loc78 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":93:84)
#loc79 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":94:13)
#loc80 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":95:17)
#loc81 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":97:13)
#loc82 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":100:13)
#loc83 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":97:24)
#loc84 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":97:38)
#loc85 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":97:17)
#loc86 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":97:57)
#loc87 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":98:13)
#loc88 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":99:17)
#loc89 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":101:35)
#loc90 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":101:49)
#loc91 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":101:55)
#loc92 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":101:28)
#loc93 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":101:13)
#loc94 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":101:59)
#loc95 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":102:13)
#loc96 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":105:13)
#loc97 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":102:17)
#loc98 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":102:33)
#loc99 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":103:13)
#loc100 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":104:17)
#loc101 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":107:31)
#loc102 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":107:45)
#loc103 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":107:58)
#loc104 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":107:76)
#loc105 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":107:79)
#loc106 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":107:26)
#loc107 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":107:13)
#loc108 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":107:80)
#loc109 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":108:13)
#loc110 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":111:13)
#loc111 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":108:17)
#loc112 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":108:31)
#loc113 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":108:44)
#loc114 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":108:47)
#loc115 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":108:61)
#loc116 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":109:13)
#loc117 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":110:17)
#loc118 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":113:39)
#loc119 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":113:25)
#loc120 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":113:13)
#loc121 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":115:25)
#loc122 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":115:20)
#loc123 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":115:13)
#loc124 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":115:36)
#loc125 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":117:16)
#loc126 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":118:9)
#loc127 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":121:9)
#loc128 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":118:13)
#loc129 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":118:29)
#loc130 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":119:9)
#loc131 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":120:26)
#loc132 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":120:13)
#loc133 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":122:9)
#loc134 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":125:9)
#loc135 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":122:13)
#loc136 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":122:29)
#loc137 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":123:9)
#loc138 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":124:26)
#loc139 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":124:13)
#loc140 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":133:68)
#loc141 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":133:5)
#loc142 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":134:5)
#loc143 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":134:13)
#loc144 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":259:1)
#loc145 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":263:1)
#loc146 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":261:5)
#loc147 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":261:13)
#loc148 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":262:5)
#loc149 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":262:13)
#loc150 = loc("/usr/include/stdlib.h":575:1)
#loc151 = loc("/usr/include/stdlib.h":575:41)
#loc152 = loc("/usr/include/time.h":76:1)
#loc153 = loc("/usr/include/time.h":76:38)
#loc154 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc155 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc156 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":278:15)
#loc157 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":280:15)
#loc158 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":283:15)
#loc159 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":285:15)
#loc160 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":273:1)
#loc161 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":288:1)
#loc166 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":274:1)
#loc167 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":276:27)
#loc168 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":276:22)
#loc169 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":276:5)
#loc170 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":278:5)
#loc171 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":279:5)
#loc172 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":279:63)
#loc173 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":280:5)
#loc174 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":283:5)
#loc175 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":284:5)
#loc176 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":284:62)
#loc177 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":285:5)
#loc178 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":287:12)
#loc179 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":287:5)
#loc180 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc181 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc182 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":48:1)
#loc183 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":57:1)
#loc184 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":50:5)
#loc185 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":50:16)
#loc186 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":51:5)
#loc187 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":56:5)
#loc188 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":54:9)
#loc189 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":54:22)
#loc190 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":53:9)
#loc191 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":53:11)
#loc192 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":55:22)
#loc193 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":55:9)
#loc194 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":43:1)
#loc195 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":43:12)
#loc196 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":153:1)
#loc197 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":162:1)
#loc198 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":155:5)
#loc199 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":155:9)
#loc200 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":157:12)
#loc201 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":157:5)
#loc202 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":159:12)
#loc203 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":159:5)
#loc204 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":160:72)
#loc205 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":160:5)
#loc206 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":161:5)
#loc207 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":161:17)
#loc208 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":142:1)
#loc209 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":151:1)
#loc210 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":144:5)
#loc211 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":144:16)
#loc212 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":145:5)
#loc213 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":150:5)
#loc214 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":148:9)
#loc215 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":148:22)
#loc216 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":147:9)
#loc217 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":147:11)
#loc218 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":149:22)
#loc219 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":149:9)
#loc220 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":44:1)
#loc221 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":44:12)
#loc222 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":181:1)
#loc223 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":257:1)
#loc224 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":183:5)
#loc225 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":183:9)
#loc226 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":185:12)
#loc227 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":185:5)
#loc228 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":186:5)
#loc229 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":254:5)
#loc230 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":191:9)
#loc231 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":191:13)
#loc232 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":192:9)
#loc233 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":192:28)
#loc234 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":193:9)
#loc235 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":193:31)
#loc236 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":194:9)
#loc237 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":194:31)
#loc238 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":195:9)
#loc239 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":195:41)
#loc240 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":196:9)
#loc241 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":239:17)
#loc242 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":206:35)
#loc243 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":206:44)
#loc244 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":206:57)
#loc245 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":206:28)
#loc246 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":206:13)
#loc247 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":206:68)
#loc248 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":207:13)
#loc249 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":210:13)
#loc250 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":207:17)
#loc251 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":207:33)
#loc252 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":208:13)
#loc253 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":209:17)
#loc254 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":211:20)
#loc255 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":211:21)
#loc256 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":211:30)
#loc257 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":211:33)
#loc258 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":211:47)
#loc259 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":211:13)
#loc260 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":211:48)
#loc261 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":212:34)
#loc262 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":212:13)
#loc263 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":213:39)
#loc264 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":213:13)
#loc265 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":214:38)
#loc266 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":214:32)
#loc267 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":214:13)
#loc268 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":214:46)
#loc269 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":215:13)
#loc270 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":218:13)
#loc271 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":215:22)
#loc272 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":215:54)
#loc273 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":215:55)
#loc274 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":215:64)
#loc275 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":215:78)
#loc276 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":215:17)
#loc277 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":215:84)
#loc278 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":216:13)
#loc279 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":217:17)
#loc280 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":219:13)
#loc281 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":222:13)
#loc282 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":219:24)
#loc283 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":219:38)
#loc284 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":219:17)
#loc285 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":219:57)
#loc286 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":220:13)
#loc287 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":221:17)
#loc288 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":223:35)
#loc289 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":223:49)
#loc290 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":223:55)
#loc291 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":223:28)
#loc292 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":223:13)
#loc293 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":223:59)
#loc294 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":224:13)
#loc295 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":227:13)
#loc296 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":224:17)
#loc297 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":224:33)
#loc298 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":225:13)
#loc299 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":226:17)
#loc300 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":229:31)
#loc301 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":229:45)
#loc302 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":229:58)
#loc303 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":229:76)
#loc304 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":229:79)
#loc305 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":229:26)
#loc306 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":229:13)
#loc307 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":229:80)
#loc308 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":230:13)
#loc309 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":233:13)
#loc310 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":230:17)
#loc311 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":230:31)
#loc312 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":230:44)
#loc313 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":230:47)
#loc314 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":230:61)
#loc315 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":231:13)
#loc316 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":232:17)
#loc317 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":235:39)
#loc318 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":235:25)
#loc319 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":235:13)
#loc320 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":237:25)
#loc321 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":237:20)
#loc322 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":237:13)
#loc323 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":237:36)
#loc324 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":239:16)
#loc325 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":240:9)
#loc326 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":243:9)
#loc327 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":240:13)
#loc328 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":240:29)
#loc329 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":241:9)
#loc330 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":242:26)
#loc331 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":242:13)
#loc332 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":244:9)
#loc333 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":247:9)
#loc334 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":244:13)
#loc335 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":244:29)
#loc336 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":245:9)
#loc337 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":246:26)
#loc338 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":246:13)
#loc339 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":255:72)
#loc340 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":255:5)
#loc341 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":256:5)
#loc342 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":256:17)
#loc343 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":177:19)
#loc344 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":165:1)
#loc345 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":179:1)
#loc346 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":167:5)
#loc347 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":167:16)
#loc348 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":169:5)
#loc349 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":178:5)
#loc350 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":169:9)
#loc351 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":169:16)
#loc352 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":170:5)
#loc353 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":174:5)
#loc354 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":176:5)
#loc355 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":172:9)
#loc356 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":172:22)
#loc357 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":171:9)
#loc358 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":171:11)
#loc359 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":173:22)
#loc360 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":173:9)
#loc361 = loc("CWE190_Integer_Overflow__int_listen_socket_preinc_45.c":177:9)
#loc362 = loc(fused[#loc1, #loc2])
#loc363 = loc(fused[#loc3, #loc4])
#loc364 = loc(fused[#loc5, #loc6])
#loc365 = loc(fused[#loc7, #loc8])
#loc366 = loc(fused[#loc9, #loc10])
#loc367 = loc(fused[#loc11, #loc12])
#loc368 = loc(fused[#loc13, #loc14])
#loc369 = loc(fused[#loc15, #loc16])
#loc370 = loc(fused[#loc17, #loc18])
#loc371 = loc(fused[#loc19, #loc20])
#loc372 = loc(fused[#loc21, #loc22])
#loc373 = loc(fused[#loc24, #loc23])
#loc374 = loc(fused[#loc25, #loc26])
#loc375 = loc(fused[#loc27, #loc28])
#loc376 = loc(fused[#loc29, #loc30])
#loc377 = loc(fused[#loc31, #loc32])
#loc378 = loc(fused[#loc33, #loc34])
#loc379 = loc(fused[#loc35, #loc36])
#loc380 = loc(fused[#loc37, #loc38])
#loc381 = loc(fused[#loc43, #loc44])
#loc382 = loc(fused[#loc45, #loc46])
#loc383 = loc(fused[#loc47, #loc48])
#loc384 = loc(fused[#loc49, #loc46])
#loc385 = loc(fused[#loc51, #loc52])
#loc386 = loc(fused[#loc54, #loc55])
#loc387 = loc(fused[#loc56, #loc57])
#loc388 = loc(fused[#loc60, #loc58])
#loc389 = loc(fused[#loc64, #loc61])
#loc390 = loc(fused[#loc68, #loc69])
#loc391 = loc(fused[#loc70, #loc71])
#loc392 = loc(fused[#loc73, #loc74])
#loc393 = loc(fused[#loc75, #loc76])
#loc394 = loc(fused[#loc77, #loc78])
#loc395 = loc(fused[#loc79, #loc71])
#loc396 = loc(fused[#loc81, #loc82])
#loc397 = loc(fused[#loc85, #loc86])
#loc398 = loc(fused[#loc87, #loc82])
#loc399 = loc(fused[#loc93, #loc94])
#loc400 = loc(fused[#loc95, #loc96])
#loc401 = loc(fused[#loc97, #loc98])
#loc402 = loc(fused[#loc99, #loc96])
#loc403 = loc(fused[#loc103, #loc104])
#loc404 = loc(fused[#loc107, #loc108])
#loc405 = loc(fused[#loc109, #loc110])
#loc406 = loc(fused[#loc111, #loc112])
#loc407 = loc(fused[#loc114, #loc115])
#loc408 = loc(fused[#loc116, #loc110])
#loc409 = loc(fused[#loc120, #loc118])
#loc410 = loc(fused[#loc123, #loc124])
#loc411 = loc(fused[#loc126, #loc127])
#loc412 = loc(fused[#loc128, #loc129])
#loc413 = loc(fused[#loc130, #loc127])
#loc414 = loc(fused[#loc133, #loc134])
#loc415 = loc(fused[#loc135, #loc136])
#loc416 = loc(fused[#loc137, #loc134])
#loc417 = loc(fused[#loc141, #loc140])
#loc418 = loc(fused[#loc142, #loc143])
#loc419 = loc(fused[#loc144, #loc145])
#loc420 = loc(fused[#loc146, #loc147])
#loc421 = loc(fused[#loc148, #loc149])
#loc422 = loc(fused[#loc150, #loc151])
#loc423 = loc(fused[#loc152, #loc153])
#loc424 = loc(fused[#loc154, #loc155])
#loc425 = loc(fused[#loc160, #loc161])
#loc428 = loc(fused[#loc171, #loc172])
#loc429 = loc(fused[#loc175, #loc176])
#loc430 = loc(fused[#loc179, #loc178])
#loc431 = loc(fused[#loc180, #loc181])
#loc432 = loc(fused[#loc182, #loc183])
#loc433 = loc(fused[#loc184, #loc185])
#loc434 = loc(fused[#loc186, #loc187])
#loc435 = loc(fused[#loc188, #loc189])
#loc436 = loc(fused[#loc190, #loc191])
#loc437 = loc(fused[#loc194, #loc195])
#loc438 = loc(fused[#loc196, #loc197])
#loc439 = loc(fused[#loc198, #loc199])
#loc440 = loc(fused[#loc201, #loc200])
#loc441 = loc(fused[#loc203, #loc202])
#loc442 = loc(fused[#loc205, #loc204])
#loc443 = loc(fused[#loc206, #loc207])
#loc444 = loc(fused[#loc208, #loc209])
#loc445 = loc(fused[#loc210, #loc211])
#loc446 = loc(fused[#loc212, #loc213])
#loc447 = loc(fused[#loc214, #loc215])
#loc448 = loc(fused[#loc216, #loc217])
#loc449 = loc(fused[#loc220, #loc221])
#loc450 = loc(fused[#loc222, #loc223])
#loc451 = loc(fused[#loc224, #loc225])
#loc452 = loc(fused[#loc227, #loc226])
#loc453 = loc(fused[#loc228, #loc229])
#loc454 = loc(fused[#loc230, #loc231])
#loc455 = loc(fused[#loc232, #loc233])
#loc456 = loc(fused[#loc234, #loc235])
#loc457 = loc(fused[#loc236, #loc237])
#loc458 = loc(fused[#loc238, #loc239])
#loc459 = loc(fused[#loc240, #loc241])
#loc460 = loc(fused[#loc246, #loc247])
#loc461 = loc(fused[#loc248, #loc249])
#loc462 = loc(fused[#loc250, #loc251])
#loc463 = loc(fused[#loc252, #loc249])
#loc464 = loc(fused[#loc254, #loc255])
#loc465 = loc(fused[#loc257, #loc258])
#loc466 = loc(fused[#loc259, #loc260])
#loc467 = loc(fused[#loc262, #loc261])
#loc468 = loc(fused[#loc264, #loc263])
#loc469 = loc(fused[#loc267, #loc268])
#loc470 = loc(fused[#loc269, #loc270])
#loc471 = loc(fused[#loc272, #loc273])
#loc472 = loc(fused[#loc274, #loc275])
#loc473 = loc(fused[#loc276, #loc277])
#loc474 = loc(fused[#loc278, #loc270])
#loc475 = loc(fused[#loc280, #loc281])
#loc476 = loc(fused[#loc284, #loc285])
#loc477 = loc(fused[#loc286, #loc281])
#loc478 = loc(fused[#loc292, #loc293])
#loc479 = loc(fused[#loc294, #loc295])
#loc480 = loc(fused[#loc296, #loc297])
#loc481 = loc(fused[#loc298, #loc295])
#loc482 = loc(fused[#loc302, #loc303])
#loc483 = loc(fused[#loc306, #loc307])
#loc484 = loc(fused[#loc308, #loc309])
#loc485 = loc(fused[#loc310, #loc311])
#loc486 = loc(fused[#loc313, #loc314])
#loc487 = loc(fused[#loc315, #loc309])
#loc488 = loc(fused[#loc319, #loc317])
#loc489 = loc(fused[#loc322, #loc323])
#loc490 = loc(fused[#loc325, #loc326])
#loc491 = loc(fused[#loc327, #loc328])
#loc492 = loc(fused[#loc329, #loc326])
#loc493 = loc(fused[#loc332, #loc333])
#loc494 = loc(fused[#loc334, #loc335])
#loc495 = loc(fused[#loc336, #loc333])
#loc496 = loc(fused[#loc340, #loc339])
#loc497 = loc(fused[#loc341, #loc342])
#loc498 = loc(fused[#loc344, #loc345])
#loc499 = loc(fused[#loc346, #loc347])
#loc500 = loc(fused[#loc348, #loc349])
#loc501 = loc(fused[#loc350, #loc351])
#loc502 = loc(fused[#loc352, #loc353, #loc354, #loc349])
#loc503 = loc(fused[#loc355, #loc356])
#loc504 = loc(fused[#loc357, #loc358])
