!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":94:48)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc258)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc259)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc260)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc261)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc262)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc263)
  cir.func private @close(!s32i) -> !s32i loc(#loc264)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc265)
  cir.func private @printIntLine(!s32i) loc(#loc266)
  cir.func @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_043badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc268)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc269)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc270)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc271)
    %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc272)
    %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc273)
    %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc274)
    %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc275)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc38)
    cir.store %9, %7 : !s32i, !cir.ptr<!s32i> loc(#loc276)
    cir.br ^bb1 loc(#loc277)
  ^bb1:  // pred: ^bb0
    %10 = cir.const #cir.int<1> : !s32i loc(#loc42)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc42)
    cir.brcond %11 ^bb2, ^bb36 loc(#loc278)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc279)
  ^bb3:  // pred: ^bb2
    %12 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc27)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc270)
    cir.br ^bb4 loc(#loc280)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc280)
  ^bb5:  // pred: ^bb28
    %14 = cir.const #cir.int<0> : !s32i loc(#loc48)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc48)
    cir.brcond %15 ^bb6, ^bb29 loc(#loc48)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc281)
  ^bb7:  // pred: ^bb6
    %16 = cir.const #cir.int<2> : !s32i loc(#loc51)
    %17 = cir.const #cir.int<1> : !u32i loc(#loc52)
    %18 = cir.cast(integral, %17 : !u32i), !s32i loc(#loc52)
    %19 = cir.const #cir.int<6> : !u32i loc(#loc53)
    %20 = cir.cast(integral, %19 : !u32i), !s32i loc(#loc53)
    %21 = cir.call @socket(%16, %18, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc54)
    cir.store %21, %2 : !s32i, !cir.ptr<!s32i> loc(#loc282)
    cir.br ^bb8 loc(#loc283)
  ^bb8:  // pred: ^bb7
    %22 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc59)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc60)
    %24 = cir.unary(minus, %23) nsw : !s32i, !s32i loc(#loc60)
    %25 = cir.cmp(eq, %22, %24) : !s32i, !cir.bool loc(#loc284)
    cir.brcond %25 ^bb9, ^bb10 loc(#loc285)
  ^bb9:  // pred: ^bb8
    cir.br ^bb29 loc(#loc62)
  ^bb10:  // pred: ^bb8
    cir.br ^bb11 loc(#loc58)
  ^bb11:  // pred: ^bb10
    %26 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc286)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc65)
    %28 = cir.const #cir.int<16> : !u64i loc(#loc287)
    cir.libc.memset %28 bytes from %26 set to %27 : !cir.ptr<!void>, !s32i, !u64i loc(#loc288)
    %29 = cir.const #cir.int<2> : !s32i loc(#loc70)
    %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc70)
    %31 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
    cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc289)
    %32 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %34 = cir.call @inet_addr(%33) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc73)
    %35 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc74)
    %36 = cir.get_member %35[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc75)
    cir.store %34, %36 : !u32i, !cir.ptr<!u32i> loc(#loc290)
    %37 = cir.const #cir.int<27015> : !s32i loc(#loc78)
    %38 = cir.cast(integral, %37 : !s32i), !u16i loc(#loc78)
    %39 = cir.call @htons(%38) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc79)
    %40 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
    cir.store %39, %40 : !u16i, !cir.ptr<!u16i> loc(#loc291)
    cir.br ^bb12 loc(#loc292)
  ^bb12:  // pred: ^bb11
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    %42 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc293)
    %43 = cir.const #cir.int<16> : !u64i loc(#loc294)
    %44 = cir.cast(integral, %43 : !u64i), !u32i loc(#loc294)
    %45 = cir.call @connect(%41, %42, %44) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc90)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %47 = cir.unary(minus, %46) nsw : !s32i, !s32i loc(#loc91)
    %48 = cir.cmp(eq, %45, %47) : !s32i, !cir.bool loc(#loc295)
    cir.brcond %48 ^bb13, ^bb14 loc(#loc296)
  ^bb13:  // pred: ^bb12
    cir.br ^bb29 loc(#loc93)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc84)
  ^bb15:  // pred: ^bb14
    %49 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    %50 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc95)
    %51 = cir.cast(bitcast, %50 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc95)
    %52 = cir.const #cir.int<3> : !s32i loc(#loc96)
    %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc96)
    %54 = cir.const #cir.int<4> : !u64i loc(#loc96)
    %55 = cir.binop(mul, %53, %54) : !u64i loc(#loc96)
    %56 = cir.const #cir.int<2> : !s32i loc(#loc96)
    %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc96)
    %58 = cir.binop(add, %55, %57) : !u64i loc(#loc96)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc97)
    %60 = cir.cast(integral, %59 : !s32i), !u64i loc(#loc97)
    %61 = cir.binop(sub, %58, %60) : !u64i loc(#loc297)
    %62 = cir.const #cir.int<0> : !s32i loc(#loc98)
    %63 = cir.call @recv(%49, %51, %61, %62) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc99)
    %64 = cir.cast(integral, %63 : !s64i), !s32i loc(#loc99)
    cir.store %64, %0 : !s32i, !cir.ptr<!s32i> loc(#loc298)
    cir.br ^bb16 loc(#loc299)
  ^bb16:  // pred: ^bb15
    %65 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    %66 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %67 = cir.unary(minus, %66) nsw : !s32i, !s32i loc(#loc105)
    %68 = cir.cmp(eq, %65, %67) : !s32i, !cir.bool loc(#loc300)
    cir.brcond %68 ^bb17, ^bb18 loc(#loc106)
  ^bb17:  // pred: ^bb16
    %69 = cir.const #true loc(#loc106)
    cir.br ^bb23(%69 : !cir.bool) loc(#loc106)
  ^bb18:  // pred: ^bb16
    %70 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %71 = cir.const #cir.int<0> : !s32i loc(#loc108)
    %72 = cir.cmp(eq, %70, %71) : !s32i, !cir.bool loc(#loc301)
    cir.brcond %72 ^bb19, ^bb20 loc(#loc106)
  ^bb19:  // pred: ^bb18
    %73 = cir.const #true loc(#loc106)
    cir.br ^bb21(%73 : !cir.bool) loc(#loc106)
  ^bb20:  // pred: ^bb18
    %74 = cir.const #false loc(#loc106)
    cir.br ^bb21(%74 : !cir.bool) loc(#loc106)
  ^bb21(%75: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":94:48)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc106)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23(%75 : !cir.bool) loc(#loc106)
  ^bb23(%76: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":94:48)):  // 2 preds: ^bb17, ^bb22
    cir.br ^bb24 loc(#loc106)
  ^bb24:  // pred: ^bb23
    cir.brcond %76 ^bb25, ^bb26 loc(#loc302)
  ^bb25:  // pred: ^bb24
    cir.br ^bb29 loc(#loc110)
  ^bb26:  // pred: ^bb24
    cir.br ^bb27 loc(#loc103)
  ^bb27:  // pred: ^bb26
    %77 = cir.const #cir.int<0> : !s8i loc(#loc111)
    %78 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %79 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc113)
    %80 = cir.ptr_stride(%79 : !cir.ptr<!s8i>, %78 : !s32i), !cir.ptr<!s8i> loc(#loc113)
    cir.store %77, %80 : !s8i, !cir.ptr<!s8i> loc(#loc303)
    %81 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc114)
    %82 = cir.call @atoi(%81) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc115)
    cir.store %82, %7 : !s32i, !cir.ptr<!s32i> loc(#loc304)
    cir.br ^bb28 loc(#loc50)
  ^bb28:  // pred: ^bb27
    cir.br ^bb5 loc(#loc47)
  ^bb29:  // 4 preds: ^bb5, ^bb9, ^bb13, ^bb25
    cir.br ^bb30 loc(#loc47)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc305)
  ^bb31:  // pred: ^bb30
    %83 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc120)
    %84 = cir.const #cir.int<1> : !s32i loc(#loc121)
    %85 = cir.unary(minus, %84) nsw : !s32i, !s32i loc(#loc121)
    %86 = cir.cmp(ne, %83, %85) : !s32i, !cir.bool loc(#loc306)
    cir.brcond %86 ^bb32, ^bb33 loc(#loc307)
  ^bb32:  // pred: ^bb31
    %87 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    %88 = cir.call @close(%87) : (!s32i) -> !s32i loc(#loc124)
    cir.br ^bb33 loc(#loc119)
  ^bb33:  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc119)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc45)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc41)
  ^bb36:  // 2 preds: ^bb1, ^bb35
    cir.br ^bb37 loc(#loc41)
  ^bb37:  // pred: ^bb36
    cir.br ^bb38 loc(#loc308)
  ^bb38:  // pred: ^bb37
    %89 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %90 = cir.cast(integral, %89 : !s32i), !u64i loc(#loc127)
    %91 = cir.const #cir.int<4> : !u64i loc(#loc309)
    %92 = cir.binop(mul, %90, %91) : !u64i loc(#loc310)
    cir.store %92, %4 : !u64i, !cir.ptr<!u64i> loc(#loc311)
    %93 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc131)
    %94 = cir.call @_Znam(%93) : (!u64i) -> !cir.ptr<!void> loc(#loc132)
    %95 = cir.cast(bitcast, %94 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc312)
    %96 = cir.cast(bitcast, %95 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc312)
    cir.store %96, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc313)
    cir.br ^bb39 loc(#loc314)
  ^bb39:  // pred: ^bb38
    %97 = cir.const #cir.int<0> : !s32i loc(#loc138)
    %98 = cir.cast(integral, %97 : !s32i), !u64i loc(#loc138)
    cir.store %98, %5 : !u64i, !cir.ptr<!u64i> loc(#loc315)
    cir.br ^bb40 loc(#loc314)
  ^bb40:  // 2 preds: ^bb39, ^bb44
    %99 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc140)
    %100 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc141)
    %101 = cir.cast(integral, %100 : !s32i), !u64i loc(#loc141)
    %102 = cir.cmp(lt, %99, %101) : !u64i, !cir.bool loc(#loc316)
    cir.brcond %102 ^bb41, ^bb45 loc(#loc316)
  ^bb41:  // pred: ^bb40
    cir.br ^bb42 loc(#loc317)
  ^bb42:  // pred: ^bb41
    %103 = cir.const #cir.int<0> : !s32i loc(#loc143)
    %104 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc144)
    %105 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc145)
    %106 = cir.ptr_stride(%104 : !cir.ptr<!s32i>, %105 : !u64i), !cir.ptr<!s32i> loc(#loc146)
    cir.store %103, %106 : !s32i, !cir.ptr<!s32i> loc(#loc318)
    cir.br ^bb43 loc(#loc137)
  ^bb43:  // pred: ^bb42
    cir.br ^bb44 loc(#loc137)
  ^bb44:  // pred: ^bb43
    %107 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc147)
    %108 = cir.unary(inc, %107) : !u64i, !u64i loc(#loc148)
    cir.store %108, %5 : !u64i, !cir.ptr<!u64i> loc(#loc319)
    cir.br ^bb40 loc(#loc314)
  ^bb45:  // pred: ^bb40
    cir.br ^bb46 loc(#loc137)
  ^bb46:  // pred: ^bb45
    %109 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc149)
    %110 = cir.const #cir.int<0> : !s32i loc(#loc150)
    %111 = cir.ptr_stride(%109 : !cir.ptr<!s32i>, %110 : !s32i), !cir.ptr<!s32i> loc(#loc151)
    %112 = cir.load %111 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    cir.call @printIntLine(%112) : (!s32i) -> () loc(#loc152)
    %113 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc153)
    cir.delete.array %113 : <!s32i> loc(#loc153)
    cir.br ^bb47 loc(#loc126)
  ^bb47:  // pred: ^bb46
    cir.return loc(#loc21)
  } loc(#loc267)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc320)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc156)
  cir.func internal private @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc322)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc323)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc324)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc325)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc166)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc167)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc326)
    cir.br ^bb1 loc(#loc327)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<0> : !s32i loc(#loc171)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc171)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc328)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc156)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc156)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc175)
    cir.br ^bb4 loc(#loc173)
  ^bb3:  // pred: ^bb1
    %10 = cir.const #cir.int<20> : !s32i loc(#loc176)
    cir.store %10, %3 : !s32i, !cir.ptr<!s32i> loc(#loc329)
    cir.br ^bb4 loc(#loc170)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc170)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc330)
  ^bb6:  // pred: ^bb5
    %11 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc180)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc180)
    %13 = cir.const #cir.int<4> : !u64i loc(#loc331)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc332)
    cir.store %14, %0 : !u64i, !cir.ptr<!u64i> loc(#loc333)
    %15 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc184)
    %16 = cir.call @_Znam(%15) : (!u64i) -> !cir.ptr<!void> loc(#loc185)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc334)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc334)
    cir.store %18, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc335)
    cir.br ^bb7 loc(#loc336)
  ^bb7:  // pred: ^bb6
    %19 = cir.const #cir.int<0> : !s32i loc(#loc191)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc191)
    cir.store %20, %1 : !u64i, !cir.ptr<!u64i> loc(#loc337)
    cir.br ^bb8 loc(#loc336)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc193)
    %22 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc194)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc194)
    %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc338)
    cir.brcond %24 ^bb9, ^bb13 loc(#loc338)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc339)
  ^bb10:  // pred: ^bb9
    %25 = cir.const #cir.int<0> : !s32i loc(#loc196)
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc197)
    %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc198)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !u64i), !cir.ptr<!s32i> loc(#loc199)
    cir.store %25, %28 : !s32i, !cir.ptr<!s32i> loc(#loc340)
    cir.br ^bb11 loc(#loc190)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc190)
  ^bb12:  // pred: ^bb11
    %29 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc200)
    %30 = cir.unary(inc, %29) : !u64i, !u64i loc(#loc201)
    cir.store %30, %1 : !u64i, !cir.ptr<!u64i> loc(#loc341)
    cir.br ^bb8 loc(#loc336)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc190)
  ^bb14:  // pred: ^bb13
    %31 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc202)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc203)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s32i>, %32 : !s32i), !cir.ptr<!s32i> loc(#loc204)
    %34 = cir.load %33 : !cir.ptr<!s32i>, !s32i loc(#loc202)
    cir.call @printIntLine(%34) : (!s32i) -> () loc(#loc205)
    %35 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc206)
    cir.delete.array %35 : <!s32i> loc(#loc206)
    cir.br ^bb15 loc(#loc179)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc158)
  } loc(#loc321)
  cir.func internal private @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc343)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc344)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc345)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc346)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc216)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc217)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc347)
    cir.br ^bb1 loc(#loc348)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<1> : !s32i loc(#loc221)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc221)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc349)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<20> : !s32i loc(#loc223)
    cir.store %8, %3 : !s32i, !cir.ptr<!s32i> loc(#loc350)
    cir.br ^bb3 loc(#loc220)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc220)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc351)
  ^bb5:  // pred: ^bb4
    %9 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc227)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc227)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc352)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc353)
    cir.store %12, %0 : !u64i, !cir.ptr<!u64i> loc(#loc354)
    %13 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc231)
    %14 = cir.call @_Znam(%13) : (!u64i) -> !cir.ptr<!void> loc(#loc232)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc355)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc355)
    cir.store %16, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc356)
    cir.br ^bb6 loc(#loc357)
  ^bb6:  // pred: ^bb5
    %17 = cir.const #cir.int<0> : !s32i loc(#loc238)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc238)
    cir.store %18, %1 : !u64i, !cir.ptr<!u64i> loc(#loc358)
    cir.br ^bb7 loc(#loc357)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc240)
    %20 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc241)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc241)
    %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc359)
    cir.brcond %22 ^bb8, ^bb12 loc(#loc359)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc360)
  ^bb9:  // pred: ^bb8
    %23 = cir.const #cir.int<0> : !s32i loc(#loc243)
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc244)
    %25 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc245)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !u64i), !cir.ptr<!s32i> loc(#loc246)
    cir.store %23, %26 : !s32i, !cir.ptr<!s32i> loc(#loc361)
    cir.br ^bb10 loc(#loc237)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc237)
  ^bb11:  // pred: ^bb10
    %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc247)
    %28 = cir.unary(inc, %27) : !u64i, !u64i loc(#loc248)
    cir.store %28, %1 : !u64i, !cir.ptr<!u64i> loc(#loc362)
    cir.br ^bb7 loc(#loc357)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc237)
  ^bb13:  // pred: ^bb12
    %29 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc249)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc250)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %30 : !s32i), !cir.ptr<!s32i> loc(#loc251)
    %32 = cir.load %31 : !cir.ptr<!s32i>, !s32i loc(#loc249)
    cir.call @printIntLine(%32) : (!s32i) -> () loc(#loc252)
    %33 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc253)
    cir.delete.array %33 : <!s32i> loc(#loc253)
    cir.br ^bb14 loc(#loc226)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc208)
  } loc(#loc342)
  cir.func @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_044goodEv() extra(#fn_attr1) {
    cir.call @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04L8goodG2B1Ev() : () -> () loc(#loc256)
    cir.call @_ZN65CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04L8goodG2B2Ev() : () -> () loc(#loc257)
    cir.return loc(#loc255)
  } loc(#loc363)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":85:53)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc17 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc18 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc19 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":52:1)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":129:1)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":64:13)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":64:17)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":65:13)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":65:32)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":66:13)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":66:36)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":67:13)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":67:45)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":117:9)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":117:16)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":117:26)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":118:9)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":118:14)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":54:5)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":54:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":56:13)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":56:12)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":56:5)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":57:5)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":115:5)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":57:8)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":58:5)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":59:9)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":114:9)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":68:13)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":103:21)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":103:20)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":69:13)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":102:13)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":78:40)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":78:49)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":78:62)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":78:33)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":78:17)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":78:73)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":79:17)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":82:17)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":79:21)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":79:38)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":80:17)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":81:21)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":83:24)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":83:25)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":83:34)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":83:37)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":83:51)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":83:17)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":83:52)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":84:38)
#loc71 = loc("/usr/include/netinet/in.h":249:5)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":84:17)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":85:43)
#loc74 = loc("/usr/include/netinet/in.h":251:20)
#loc75 = loc("/usr/include/netinet/in.h":33:15)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":85:17)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":85:63)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":86:42)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":86:36)
#loc80 = loc("/usr/include/netinet/in.h":250:15)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":86:17)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":86:50)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":87:17)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":90:17)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":87:29)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":87:62)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":87:63)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":87:72)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":87:86)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":87:21)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":87:92)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":88:17)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":89:21)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":93:35)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":93:50)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":93:63)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":93:81)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":93:84)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":93:30)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":93:17)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":93:85)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":94:17)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":97:17)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":94:21)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":94:35)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":94:51)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":94:65)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":95:17)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":96:21)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":99:43)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":99:29)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":99:17)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":101:29)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":101:24)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":101:17)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":101:40)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":104:13)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":107:13)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":104:17)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":104:34)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":105:13)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":106:30)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":106:17)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":116:5)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":128:5)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":120:21)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":120:28)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":120:38)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":120:9)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":121:37)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":52:6)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":121:28)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":121:46)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":121:9)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":122:9)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":125:9)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":122:18)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":122:14)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":122:21)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":122:33)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":123:9)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":124:29)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":124:13)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":124:24)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":124:25)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":122:40)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":122:39)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":126:22)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":126:33)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":126:34)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":126:9)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":127:19)
#loc154 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc155 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":144:19)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":136:1)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":164:1)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":152:9)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":152:16)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":152:26)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":153:9)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":153:14)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":138:5)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":138:9)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":140:13)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":140:12)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":140:5)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":141:5)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":150:5)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":141:8)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":142:5)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":145:5)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":147:5)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":144:9)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":149:16)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":149:9)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":151:5)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":163:5)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":155:21)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":155:28)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":155:38)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":155:9)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":156:37)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":136:13)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":156:28)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":156:46)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":156:9)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":157:9)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":160:9)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":157:18)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":157:14)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":157:21)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":157:33)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":158:9)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":159:29)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":159:13)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":159:24)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":159:25)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":157:40)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":157:39)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":161:22)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":161:33)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":161:34)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":161:9)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":162:19)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":167:1)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":190:1)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":178:9)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":178:16)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":178:26)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":179:9)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":179:14)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":169:5)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":169:9)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":171:13)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":171:12)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":171:5)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":172:5)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":176:5)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":172:8)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":173:5)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":175:16)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":175:9)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":177:5)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":189:5)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":181:21)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":181:28)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":181:38)
#loc230 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":181:9)
#loc231 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":182:37)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":167:13)
#loc233 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":182:28)
#loc234 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":182:46)
#loc235 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":182:9)
#loc236 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":183:9)
#loc237 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":186:9)
#loc238 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":183:18)
#loc239 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":183:14)
#loc240 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":183:21)
#loc241 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":183:33)
#loc242 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":184:9)
#loc243 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":185:29)
#loc244 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":185:13)
#loc245 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":185:24)
#loc246 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":185:25)
#loc247 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":183:40)
#loc248 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":183:39)
#loc249 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":187:22)
#loc250 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":187:33)
#loc251 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":187:34)
#loc252 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":187:9)
#loc253 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":188:19)
#loc254 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":192:1)
#loc255 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":196:1)
#loc256 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":194:5)
#loc257 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_connect_socket_04.cpp":195:5)
#loc258 = loc(fused[#loc1, #loc2])
#loc259 = loc(fused[#loc3, #loc4])
#loc260 = loc(fused[#loc6, #loc7])
#loc261 = loc(fused[#loc8, #loc9])
#loc262 = loc(fused[#loc10, #loc11])
#loc263 = loc(fused[#loc12, #loc13])
#loc264 = loc(fused[#loc14, #loc15])
#loc265 = loc(fused[#loc16, #loc17])
#loc266 = loc(fused[#loc18, #loc19])
#loc267 = loc(fused[#loc20, #loc21])
#loc268 = loc(fused[#loc22, #loc23])
#loc269 = loc(fused[#loc24, #loc25])
#loc270 = loc(fused[#loc26, #loc27])
#loc271 = loc(fused[#loc28, #loc29])
#loc272 = loc(fused[#loc30, #loc31])
#loc273 = loc(fused[#loc30, #loc32])
#loc274 = loc(fused[#loc33, #loc34])
#loc275 = loc(fused[#loc35, #loc36])
#loc276 = loc(fused[#loc39, #loc37])
#loc277 = loc(fused[#loc40, #loc41])
#loc278 = loc(fused[#loc43, #loc41])
#loc279 = loc(fused[#loc44, #loc45])
#loc280 = loc(fused[#loc46, #loc47])
#loc281 = loc(fused[#loc49, #loc50])
#loc282 = loc(fused[#loc55, #loc56])
#loc283 = loc(fused[#loc57, #loc58])
#loc284 = loc(fused[#loc59, #loc60])
#loc285 = loc(fused[#loc61, #loc58])
#loc286 = loc(fused[#loc63, #loc64])
#loc287 = loc(fused[#loc66, #loc67])
#loc288 = loc(fused[#loc68, #loc69])
#loc289 = loc(fused[#loc72, #loc70])
#loc290 = loc(fused[#loc76, #loc77])
#loc291 = loc(fused[#loc81, #loc82])
#loc292 = loc(fused[#loc83, #loc84])
#loc293 = loc(fused[#loc86, #loc87])
#loc294 = loc(fused[#loc88, #loc89])
#loc295 = loc(fused[#loc90, #loc91])
#loc296 = loc(fused[#loc92, #loc84])
#loc297 = loc(fused[#loc96, #loc97])
#loc298 = loc(fused[#loc100, #loc101])
#loc299 = loc(fused[#loc102, #loc103])
#loc300 = loc(fused[#loc104, #loc105])
#loc301 = loc(fused[#loc107, #loc108])
#loc302 = loc(fused[#loc109, #loc103])
#loc303 = loc(fused[#loc113, #loc111])
#loc304 = loc(fused[#loc116, #loc117])
#loc305 = loc(fused[#loc118, #loc119])
#loc306 = loc(fused[#loc120, #loc121])
#loc307 = loc(fused[#loc122, #loc119])
#loc308 = loc(fused[#loc125, #loc126])
#loc309 = loc(fused[#loc128, #loc129])
#loc310 = loc(fused[#loc127, #loc129])
#loc311 = loc(fused[#loc130, #loc129])
#loc312 = loc(fused[#loc133, #loc134])
#loc313 = loc(fused[#loc135, #loc134])
#loc314 = loc(fused[#loc136, #loc137])
#loc315 = loc(fused[#loc139, #loc138])
#loc316 = loc(fused[#loc140, #loc141])
#loc317 = loc(fused[#loc142, #loc137])
#loc318 = loc(fused[#loc144, #loc143])
#loc319 = loc(fused[#loc148, #loc147])
#loc320 = loc(fused[#loc154, #loc155])
#loc321 = loc(fused[#loc157, #loc158])
#loc322 = loc(fused[#loc159, #loc160])
#loc323 = loc(fused[#loc159, #loc161])
#loc324 = loc(fused[#loc162, #loc163])
#loc325 = loc(fused[#loc164, #loc165])
#loc326 = loc(fused[#loc168, #loc166])
#loc327 = loc(fused[#loc169, #loc170])
#loc328 = loc(fused[#loc172, #loc173, #loc174, #loc170])
#loc329 = loc(fused[#loc177, #loc176])
#loc330 = loc(fused[#loc178, #loc179])
#loc331 = loc(fused[#loc181, #loc182])
#loc332 = loc(fused[#loc180, #loc182])
#loc333 = loc(fused[#loc183, #loc182])
#loc334 = loc(fused[#loc186, #loc187])
#loc335 = loc(fused[#loc188, #loc187])
#loc336 = loc(fused[#loc189, #loc190])
#loc337 = loc(fused[#loc192, #loc191])
#loc338 = loc(fused[#loc193, #loc194])
#loc339 = loc(fused[#loc195, #loc190])
#loc340 = loc(fused[#loc197, #loc196])
#loc341 = loc(fused[#loc201, #loc200])
#loc342 = loc(fused[#loc207, #loc208])
#loc343 = loc(fused[#loc209, #loc210])
#loc344 = loc(fused[#loc209, #loc211])
#loc345 = loc(fused[#loc212, #loc213])
#loc346 = loc(fused[#loc214, #loc215])
#loc347 = loc(fused[#loc218, #loc216])
#loc348 = loc(fused[#loc219, #loc220])
#loc349 = loc(fused[#loc222, #loc220])
#loc350 = loc(fused[#loc224, #loc223])
#loc351 = loc(fused[#loc225, #loc226])
#loc352 = loc(fused[#loc228, #loc229])
#loc353 = loc(fused[#loc227, #loc229])
#loc354 = loc(fused[#loc230, #loc229])
#loc355 = loc(fused[#loc233, #loc234])
#loc356 = loc(fused[#loc235, #loc234])
#loc357 = loc(fused[#loc236, #loc237])
#loc358 = loc(fused[#loc239, #loc238])
#loc359 = loc(fused[#loc240, #loc241])
#loc360 = loc(fused[#loc242, #loc237])
#loc361 = loc(fused[#loc244, #loc243])
#loc362 = loc(fused[#loc248, #loc247])
#loc363 = loc(fused[#loc254, #loc255])
