!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc113 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":108:23)
#loc168 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":145:23)
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fgets_sleep_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc230)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc231)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc232)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc233)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @usleep(!u32i) -> !s32i loc(#loc234)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc12)
  cir.func no_proto @CWE400_Resource_Exhaustion__fgets_sleep_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc236)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc237)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc20)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc238)
    cir.br ^bb1 loc(#loc239)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc240)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc24)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc24)
    cir.brcond %6 ^bb2, ^bb10 loc(#loc241)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc242)
  ^bb3:  // pred: ^bb2
    %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc236)
    cir.store %7, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc236)
    cir.br ^bb4 loc(#loc243)
  ^bb4:  // pred: ^bb3
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc31)
    %9 = cir.const #cir.int<3> : !s32i loc(#loc32)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc32)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc32)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc32)
    %13 = cir.const #cir.int<2> : !s32i loc(#loc32)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc32)
    %15 = cir.binop(add, %12, %14) : !u64i loc(#loc32)
    %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc32)
    %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc231)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc33)
    %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc34)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc35)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc35)
    %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc244)
    cir.brcond %22 ^bb5, ^bb6 loc(#loc245)
  ^bb5:  // pred: ^bb4
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc39)
    %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc40)
    cir.store %24, %1 : !s32i, !cir.ptr<!s32i> loc(#loc246)
    cir.br ^bb7 loc(#loc37)
  ^bb6:  // pred: ^bb4
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    cir.br ^bb7 loc(#loc30)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc30)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc28)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc23)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc23)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc247)
  ^bb12:  // pred: ^bb11
    %27 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc248)
    %28 = cir.call %27() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc46)
    %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc46)
    cir.brcond %29 ^bb13, ^bb14 loc(#loc249)
  ^bb13:  // pred: ^bb12
    %30 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc49)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc49)
    %32 = cir.call @usleep(%31) : (!u32i) -> !s32i loc(#loc50)
    %33 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc12)
    %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc12)
    cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    cir.br ^bb14 loc(#loc45)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc45)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc14)
  } loc(#loc235)
  cir.func no_proto @CWE400_Resource_Exhaustion__fgets_sleep_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc251)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc252)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc56)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc253)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc254)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    cir.return loc(#loc53)
  } loc(#loc250)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc63)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc64)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc256)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc256)
    cir.return %2 : !s32i loc(#loc256)
  } loc(#loc255)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc68)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc258)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc259)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc75)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc76)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc260)
    cir.br ^bb1 loc(#loc261)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc262)
    %5 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc80)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc80)
    cir.brcond %6 ^bb2, ^bb10 loc(#loc263)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc264)
  ^bb3:  // pred: ^bb2
    %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc258)
    cir.store %7, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc258)
    cir.br ^bb4 loc(#loc265)
  ^bb4:  // pred: ^bb3
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc87)
    %9 = cir.const #cir.int<3> : !s32i loc(#loc88)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc88)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc88)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc88)
    %13 = cir.const #cir.int<2> : !s32i loc(#loc88)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc88)
    %15 = cir.binop(add, %12, %14) : !u64i loc(#loc88)
    %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc88)
    %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc231)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc89)
    %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc90)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc91)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc91)
    %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc266)
    cir.brcond %22 ^bb5, ^bb6 loc(#loc267)
  ^bb5:  // pred: ^bb4
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc95)
    %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc96)
    cir.store %24, %1 : !s32i, !cir.ptr<!s32i> loc(#loc268)
    cir.br ^bb7 loc(#loc93)
  ^bb6:  // pred: ^bb4
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc99)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    cir.br ^bb7 loc(#loc86)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc86)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc84)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc79)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc79)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc269)
  ^bb12:  // pred: ^bb11
    %27 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc270)
    %28 = cir.call %27() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc103)
    %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc103)
    cir.brcond %29 ^bb13, ^bb14 loc(#loc271)
  ^bb13:  // pred: ^bb12
    %30 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc66)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    cir.br ^bb28 loc(#loc106)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc272)
  ^bb15:  // pred: ^bb14
    %32 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %34 = cir.cmp(gt, %32, %33) : !s32i, !cir.bool loc(#loc273)
    cir.brcond %34 ^bb16, ^bb21 loc(#loc113)
  ^bb16:  // pred: ^bb15
    %35 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    %36 = cir.const #cir.int<2000> : !s32i loc(#loc115)
    %37 = cir.cmp(le, %35, %36) : !s32i, !cir.bool loc(#loc274)
    cir.brcond %37 ^bb17, ^bb18 loc(#loc113)
  ^bb17:  // pred: ^bb16
    %38 = cir.const #true loc(#loc113)
    cir.br ^bb19(%38 : !cir.bool) loc(#loc113)
  ^bb18:  // pred: ^bb16
    %39 = cir.const #false loc(#loc113)
    cir.br ^bb19(%39 : !cir.bool) loc(#loc113)
  ^bb19(%40: !cir.bool loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":108:23)):  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc113)
  ^bb20:  // pred: ^bb19
    cir.br ^bb22(%40 : !cir.bool) loc(#loc113)
  ^bb21:  // pred: ^bb15
    %41 = cir.const #false loc(#loc113)
    cir.br ^bb22(%41 : !cir.bool) loc(#loc113)
  ^bb22(%42: !cir.bool loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":108:23)):  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc113)
  ^bb23:  // pred: ^bb22
    cir.brcond %42 ^bb24, ^bb25 loc(#loc275)
  ^bb24:  // pred: ^bb23
    %43 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    %44 = cir.cast(integral, %43 : !s32i), !u32i loc(#loc119)
    %45 = cir.call @usleep(%44) : (!u32i) -> !s32i loc(#loc120)
    %46 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc67)
    %47 = cir.cast(array_to_ptrdecay, %46 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc121)
    cir.br ^bb26 loc(#loc117)
  ^bb25:  // pred: ^bb23
    %48 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc68)
    %49 = cir.cast(array_to_ptrdecay, %48 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc122)
    cir.br ^bb26 loc(#loc110)
  ^bb26:  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc110)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28 loc(#loc102)
  ^bb28:  // 2 preds: ^bb13, ^bb27
    cir.br ^bb29 loc(#loc102)
  ^bb29:  // pred: ^bb28
    cir.return loc(#loc70)
  } loc(#loc257)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc124)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc125)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc277)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc277)
    cir.return %2 : !s32i loc(#loc277)
  } loc(#loc276)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc279)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc280)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc133)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc134)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc281)
    cir.br ^bb1 loc(#loc282)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc283)
    %5 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc138)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc138)
    cir.brcond %6 ^bb2, ^bb10 loc(#loc284)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc285)
  ^bb3:  // pred: ^bb2
    %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc279)
    cir.store %7, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc279)
    cir.br ^bb4 loc(#loc286)
  ^bb4:  // pred: ^bb3
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc145)
    %9 = cir.const #cir.int<3> : !s32i loc(#loc146)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc146)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc146)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc146)
    %13 = cir.const #cir.int<2> : !s32i loc(#loc146)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc146)
    %15 = cir.binop(add, %12, %14) : !u64i loc(#loc146)
    %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc146)
    %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc231)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc147)
    %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc148)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc149)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc149)
    %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc287)
    cir.brcond %22 ^bb5, ^bb6 loc(#loc288)
  ^bb5:  // pred: ^bb4
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc153)
    %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc154)
    cir.store %24, %1 : !s32i, !cir.ptr<!s32i> loc(#loc289)
    cir.br ^bb7 loc(#loc151)
  ^bb6:  // pred: ^bb4
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc157)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc157)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc158)
    cir.br ^bb7 loc(#loc144)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc144)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc142)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc137)
  ^bb10:  // 2 preds: ^bb1, ^bb9
    cir.br ^bb11 loc(#loc137)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc290)
  ^bb12:  // pred: ^bb11
    %27 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc291)
    %28 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc161)
    %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc161)
    cir.brcond %29 ^bb13, ^bb27 loc(#loc292)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc293)
  ^bb14:  // pred: ^bb13
    %30 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc167)
    %32 = cir.cmp(gt, %30, %31) : !s32i, !cir.bool loc(#loc294)
    cir.brcond %32 ^bb15, ^bb20 loc(#loc168)
  ^bb15:  // pred: ^bb14
    %33 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    %34 = cir.const #cir.int<2000> : !s32i loc(#loc170)
    %35 = cir.cmp(le, %33, %34) : !s32i, !cir.bool loc(#loc295)
    cir.brcond %35 ^bb16, ^bb17 loc(#loc168)
  ^bb16:  // pred: ^bb15
    %36 = cir.const #true loc(#loc168)
    cir.br ^bb18(%36 : !cir.bool) loc(#loc168)
  ^bb17:  // pred: ^bb15
    %37 = cir.const #false loc(#loc168)
    cir.br ^bb18(%37 : !cir.bool) loc(#loc168)
  ^bb18(%38: !cir.bool loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":145:23)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc168)
  ^bb19:  // pred: ^bb18
    cir.br ^bb21(%38 : !cir.bool) loc(#loc168)
  ^bb20:  // pred: ^bb14
    %39 = cir.const #false loc(#loc168)
    cir.br ^bb21(%39 : !cir.bool) loc(#loc168)
  ^bb21(%40: !cir.bool loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":145:23)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc168)
  ^bb22:  // pred: ^bb21
    cir.brcond %40 ^bb23, ^bb24 loc(#loc296)
  ^bb23:  // pred: ^bb22
    %41 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc174)
    %42 = cir.cast(integral, %41 : !s32i), !u32i loc(#loc174)
    %43 = cir.call @usleep(%42) : (!u32i) -> !s32i loc(#loc175)
    %44 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc176)
    %45 = cir.cast(array_to_ptrdecay, %44 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc176)
    cir.call @printLine(%45) : (!cir.ptr<!s8i>) -> () loc(#loc177)
    cir.br ^bb25 loc(#loc172)
  ^bb24:  // pred: ^bb22
    %46 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc178)
    %47 = cir.cast(array_to_ptrdecay, %46 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc178)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc179)
    cir.br ^bb25 loc(#loc165)
  ^bb25:  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc165)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc160)
  ^bb27:  // 2 preds: ^bb12, ^bb26
    cir.br ^bb28 loc(#loc160)
  ^bb28:  // pred: ^bb27
    cir.return loc(#loc128)
  } loc(#loc278)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc298)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc184)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc185)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc299)
    cir.br ^bb1 loc(#loc300)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc301)
    %4 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc189)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc189)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc302)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc194)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc194)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc195)
    cir.br ^bb4 loc(#loc192)
  ^bb3:  // pred: ^bb1
    %8 = cir.const #cir.int<20> : !s32i loc(#loc196)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc303)
    cir.br ^bb4 loc(#loc188)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc188)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc304)
  ^bb6:  // pred: ^bb5
    %9 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc305)
    %10 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc200)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc200)
    cir.brcond %11 ^bb7, ^bb8 loc(#loc306)
  ^bb7:  // pred: ^bb6
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc203)
    %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc203)
    %14 = cir.call @usleep(%13) : (!u32i) -> !s32i loc(#loc204)
    %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc205)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc205)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc206)
    cir.br ^bb8 loc(#loc199)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc199)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc181)
  } loc(#loc297)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc308)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc211)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc212)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc309)
    cir.br ^bb1 loc(#loc310)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc311)
    %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc216)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc216)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc312)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<20> : !s32i loc(#loc219)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc313)
    cir.br ^bb3 loc(#loc215)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc215)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc314)
  ^bb5:  // pred: ^bb4
    %7 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc315)
    %8 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc223)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc223)
    cir.brcond %9 ^bb6, ^bb7 loc(#loc316)
  ^bb6:  // pred: ^bb5
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc226)
    %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc226)
    %12 = cir.call @usleep(%11) : (!u32i) -> !s32i loc(#loc227)
    %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc228)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc228)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc229)
    cir.br ^bb7 loc(#loc222)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc222)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc208)
  } loc(#loc307)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__fgets_sleep_08.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":62:27)
#loc10 = loc("/usr/include/unistd.h":480:1)
#loc11 = loc("/usr/include/unistd.h":480:43)
#loc12 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":70:19)
#loc13 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":45:1)
#loc14 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":72:1)
#loc15 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":53:13)
#loc16 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":53:49)
#loc17 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":47:5)
#loc18 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":47:9)
#loc19 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":49:14)
#loc20 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":49:13)
#loc21 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":49:5)
#loc22 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":50:5)
#loc23 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":65:5)
#loc24 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":50:8)
#loc25 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":50:26)
#loc26 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":51:5)
#loc27 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":52:9)
#loc28 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":64:9)
#loc29 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":55:13)
#loc30 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":63:13)
#loc31 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":55:23)
#loc32 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":55:36)
#loc33 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":55:53)
#loc34 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":55:17)
#loc35 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":55:63)
#loc36 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":56:13)
#loc37 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":59:13)
#loc38 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":61:13)
#loc39 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":58:30)
#loc40 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":58:25)
#loc41 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":58:17)
#loc42 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":58:41)
#loc43 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":62:17)
#loc44 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":66:5)
#loc45 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":71:5)
#loc46 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":66:8)
#loc47 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":66:26)
#loc48 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":67:5)
#loc49 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":69:15)
#loc50 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":69:9)
#loc51 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":70:9)
#loc52 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":200:1)
#loc53 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":206:1)
#loc54 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":202:5)
#loc55 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":202:14)
#loc56 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":203:5)
#loc57 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":203:14)
#loc58 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":204:5)
#loc59 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":204:14)
#loc60 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":205:5)
#loc61 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":205:14)
#loc62 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":33:1)
#loc63 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":36:1)
#loc64 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":35:12)
#loc65 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":35:5)
#loc66 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":103:19)
#loc67 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":111:23)
#loc68 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":115:23)
#loc69 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":79:1)
#loc70 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":118:1)
#loc71 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":87:13)
#loc72 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":87:49)
#loc73 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":81:5)
#loc74 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":81:9)
#loc75 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":83:14)
#loc76 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":83:13)
#loc77 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":83:5)
#loc78 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":84:5)
#loc79 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":99:5)
#loc80 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":84:8)
#loc81 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":84:26)
#loc82 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":85:5)
#loc83 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":86:9)
#loc84 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":98:9)
#loc85 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":89:13)
#loc86 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":97:13)
#loc87 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":89:23)
#loc88 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":89:36)
#loc89 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":89:53)
#loc90 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":89:17)
#loc91 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":89:63)
#loc92 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":90:13)
#loc93 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":93:13)
#loc94 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":95:13)
#loc95 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":92:30)
#loc96 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":92:25)
#loc97 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":92:17)
#loc98 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":92:41)
#loc99 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":96:27)
#loc100 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":96:17)
#loc101 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":100:5)
#loc102 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":117:5)
#loc103 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":100:8)
#loc104 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":100:27)
#loc105 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":101:5)
#loc106 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":104:5)
#loc107 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":106:5)
#loc108 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":103:9)
#loc109 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":108:9)
#loc110 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":116:9)
#loc111 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":108:13)
#loc112 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":108:21)
#loc114 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":108:26)
#loc115 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":108:35)
#loc116 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":109:9)
#loc117 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":112:9)
#loc118 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":114:9)
#loc119 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":110:19)
#loc120 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":110:13)
#loc121 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":111:13)
#loc122 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":115:13)
#loc123 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":38:1)
#loc124 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":41:1)
#loc125 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":40:12)
#loc126 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":40:5)
#loc127 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":121:1)
#loc128 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":155:1)
#loc129 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":129:13)
#loc130 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":129:49)
#loc131 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":123:5)
#loc132 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":123:9)
#loc133 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":125:14)
#loc134 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":125:13)
#loc135 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":125:5)
#loc136 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":126:5)
#loc137 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":141:5)
#loc138 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":126:8)
#loc139 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":126:26)
#loc140 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":127:5)
#loc141 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":128:9)
#loc142 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":140:9)
#loc143 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":131:13)
#loc144 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":139:13)
#loc145 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":131:23)
#loc146 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":131:36)
#loc147 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":131:53)
#loc148 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":131:17)
#loc149 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":131:63)
#loc150 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":132:13)
#loc151 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":135:13)
#loc152 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":137:13)
#loc153 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":134:30)
#loc154 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":134:25)
#loc155 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":134:17)
#loc156 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":134:41)
#loc157 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":138:27)
#loc158 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":138:17)
#loc159 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":142:5)
#loc160 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":154:5)
#loc161 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":142:8)
#loc162 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":142:26)
#loc163 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":143:5)
#loc164 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":145:9)
#loc165 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":153:9)
#loc166 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":145:13)
#loc167 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":145:21)
#loc169 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":145:26)
#loc170 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":145:35)
#loc171 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":146:9)
#loc172 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":149:9)
#loc173 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":151:9)
#loc174 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":147:19)
#loc175 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":147:13)
#loc176 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":148:23)
#loc177 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":148:13)
#loc178 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":152:23)
#loc179 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":152:13)
#loc180 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":158:1)
#loc181 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":179:1)
#loc182 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":160:5)
#loc183 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":160:9)
#loc184 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":162:14)
#loc185 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":162:13)
#loc186 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":162:5)
#loc187 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":163:5)
#loc188 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":172:5)
#loc189 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":163:8)
#loc190 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":163:27)
#loc191 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":164:5)
#loc192 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":167:5)
#loc193 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":169:5)
#loc194 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":166:19)
#loc195 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":166:9)
#loc196 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":171:17)
#loc197 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":171:9)
#loc198 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":173:5)
#loc199 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":178:5)
#loc200 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":173:8)
#loc201 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":173:26)
#loc202 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":174:5)
#loc203 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":176:15)
#loc204 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":176:9)
#loc205 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":177:19)
#loc206 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":177:9)
#loc207 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":182:1)
#loc208 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":198:1)
#loc209 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":184:5)
#loc210 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":184:9)
#loc211 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":186:14)
#loc212 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":186:13)
#loc213 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":186:5)
#loc214 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":187:5)
#loc215 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":191:5)
#loc216 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":187:8)
#loc217 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":187:26)
#loc218 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":188:5)
#loc219 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":190:17)
#loc220 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":190:9)
#loc221 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":192:5)
#loc222 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":197:5)
#loc223 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":192:8)
#loc224 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":192:26)
#loc225 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":193:5)
#loc226 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":195:15)
#loc227 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":195:9)
#loc228 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":196:19)
#loc229 = loc("CWE400_Resource_Exhaustion__fgets_sleep_08.c":196:9)
#loc230 = loc(fused[#loc1, #loc2])
#loc231 = loc(fused[#loc3, #loc4])
#loc232 = loc(fused[#loc5, #loc6])
#loc233 = loc(fused[#loc7, #loc8])
#loc234 = loc(fused[#loc10, #loc11])
#loc235 = loc(fused[#loc13, #loc14])
#loc236 = loc(fused[#loc15, #loc16])
#loc237 = loc(fused[#loc17, #loc18])
#loc238 = loc(fused[#loc21, #loc19])
#loc239 = loc(fused[#loc22, #loc23])
#loc240 = loc(fused[#loc24, #loc25])
#loc241 = loc(fused[#loc26, #loc23])
#loc242 = loc(fused[#loc27, #loc28])
#loc243 = loc(fused[#loc29, #loc30])
#loc244 = loc(fused[#loc34, #loc35])
#loc245 = loc(fused[#loc36, #loc37, #loc38, #loc30])
#loc246 = loc(fused[#loc41, #loc42])
#loc247 = loc(fused[#loc44, #loc45])
#loc248 = loc(fused[#loc46, #loc47])
#loc249 = loc(fused[#loc48, #loc45])
#loc250 = loc(fused[#loc52, #loc53])
#loc251 = loc(fused[#loc54, #loc55])
#loc252 = loc(fused[#loc56, #loc57])
#loc253 = loc(fused[#loc58, #loc59])
#loc254 = loc(fused[#loc60, #loc61])
#loc255 = loc(fused[#loc62, #loc63])
#loc256 = loc(fused[#loc65, #loc64])
#loc257 = loc(fused[#loc69, #loc70])
#loc258 = loc(fused[#loc71, #loc72])
#loc259 = loc(fused[#loc73, #loc74])
#loc260 = loc(fused[#loc77, #loc75])
#loc261 = loc(fused[#loc78, #loc79])
#loc262 = loc(fused[#loc80, #loc81])
#loc263 = loc(fused[#loc82, #loc79])
#loc264 = loc(fused[#loc83, #loc84])
#loc265 = loc(fused[#loc85, #loc86])
#loc266 = loc(fused[#loc90, #loc91])
#loc267 = loc(fused[#loc92, #loc93, #loc94, #loc86])
#loc268 = loc(fused[#loc97, #loc98])
#loc269 = loc(fused[#loc101, #loc102])
#loc270 = loc(fused[#loc103, #loc104])
#loc271 = loc(fused[#loc105, #loc106, #loc107, #loc102])
#loc272 = loc(fused[#loc109, #loc110])
#loc273 = loc(fused[#loc111, #loc112])
#loc274 = loc(fused[#loc114, #loc115])
#loc275 = loc(fused[#loc116, #loc117, #loc118, #loc110])
#loc276 = loc(fused[#loc123, #loc124])
#loc277 = loc(fused[#loc126, #loc125])
#loc278 = loc(fused[#loc127, #loc128])
#loc279 = loc(fused[#loc129, #loc130])
#loc280 = loc(fused[#loc131, #loc132])
#loc281 = loc(fused[#loc135, #loc133])
#loc282 = loc(fused[#loc136, #loc137])
#loc283 = loc(fused[#loc138, #loc139])
#loc284 = loc(fused[#loc140, #loc137])
#loc285 = loc(fused[#loc141, #loc142])
#loc286 = loc(fused[#loc143, #loc144])
#loc287 = loc(fused[#loc148, #loc149])
#loc288 = loc(fused[#loc150, #loc151, #loc152, #loc144])
#loc289 = loc(fused[#loc155, #loc156])
#loc290 = loc(fused[#loc159, #loc160])
#loc291 = loc(fused[#loc161, #loc162])
#loc292 = loc(fused[#loc163, #loc160])
#loc293 = loc(fused[#loc164, #loc165])
#loc294 = loc(fused[#loc166, #loc167])
#loc295 = loc(fused[#loc169, #loc170])
#loc296 = loc(fused[#loc171, #loc172, #loc173, #loc165])
#loc297 = loc(fused[#loc180, #loc181])
#loc298 = loc(fused[#loc182, #loc183])
#loc299 = loc(fused[#loc186, #loc184])
#loc300 = loc(fused[#loc187, #loc188])
#loc301 = loc(fused[#loc189, #loc190])
#loc302 = loc(fused[#loc191, #loc192, #loc193, #loc188])
#loc303 = loc(fused[#loc197, #loc196])
#loc304 = loc(fused[#loc198, #loc199])
#loc305 = loc(fused[#loc200, #loc201])
#loc306 = loc(fused[#loc202, #loc199])
#loc307 = loc(fused[#loc207, #loc208])
#loc308 = loc(fused[#loc209, #loc210])
#loc309 = loc(fused[#loc213, #loc211])
#loc310 = loc(fused[#loc214, #loc215])
#loc311 = loc(fused[#loc216, #loc217])
#loc312 = loc(fused[#loc218, #loc215])
#loc313 = loc(fused[#loc220, #loc219])
#loc314 = loc(fused[#loc221, #loc222])
#loc315 = loc(fused[#loc223, #loc224])
#loc316 = loc(fused[#loc225, #loc222])
