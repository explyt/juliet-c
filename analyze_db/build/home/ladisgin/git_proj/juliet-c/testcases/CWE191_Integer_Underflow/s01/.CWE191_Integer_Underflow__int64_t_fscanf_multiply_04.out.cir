!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc57 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":178:10)
#loc58 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":178:14)
#loc59 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":178:20)
#loc60 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":178:32)
#loc239 = loc(fused[#loc57, #loc58])
#loc240 = loc(fused[#loc59, #loc60])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc215)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc216)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc217)
  cir.func private @printLongLongLine(!s64i) loc(#loc218)
  cir.func no_proto @CWE191_Integer_Underflow__int64_t_fscanf_multiply_04_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc220)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc13)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc221)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc17)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc17)
      cir.if %3 {
        %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc19)
        %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc216)
        %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc20)
        %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc217)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc217)
        %9 = cir.call @__isoc99_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc19)
      } loc(#loc223)
    } loc(#loc222)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc23)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc23)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc27)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc28)
          %6 = cir.cast(integral, %5 : !s32i), !s64i loc(#loc28)
          %7 = cir.cmp(lt, %4, %6) : !s64i, !cir.bool loc(#loc227)
          cir.if %7 {
            %8 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc229)
            %9 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc32)
            %10 = cir.const #cir.int<2> : !s32i loc(#loc31)
            %11 = cir.cast(integral, %10 : !s32i), !s64i loc(#loc31)
            %12 = cir.binop(mul, %9, %11) nsw : !s64i loc(#loc32)
            cir.store %12, %8 : !s64i, !cir.ptr<!s64i> loc(#loc229)
            %13 = cir.load %8 : !cir.ptr<!s64i>, !s64i loc(#loc33)
            cir.call @printLongLongLine(%13) : (!s64i) -> () loc(#loc34)
          } loc(#loc228)
        } loc(#loc226)
      } loc(#loc225)
    } loc(#loc224)
    cir.return loc(#loc10)
  } loc(#loc219)
  cir.func no_proto @CWE191_Integer_Underflow__int64_t_fscanf_multiply_04_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc231)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc37)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc232)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc233)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc234)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    cir.return loc(#loc36)
  } loc(#loc230)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc235)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc236)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc237)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc54)
  cir.func @main(%arg0: !s32i loc(fused[#loc57, #loc58]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc59, #loc60])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc239)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc240)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc56)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc61)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc61)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc62)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc63)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc63)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc64)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc51)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %8 = cir.get_global @CWE191_Integer_Underflow__int64_t_fscanf_multiply_04_good : !cir.ptr<!cir.func<!void ()>> loc(#loc241)
    cir.call @CWE191_Integer_Underflow__int64_t_fscanf_multiply_04_good() : () -> () loc(#loc66)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc52)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc53)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %13 = cir.get_global @CWE191_Integer_Underflow__int64_t_fscanf_multiply_04_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc242)
    cir.call @CWE191_Integer_Underflow__int64_t_fscanf_multiply_04_bad() : () -> () loc(#loc70)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc54)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc73)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc243)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc243)
    cir.return %17 : !s32i loc(#loc243)
  } loc(#loc238)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc75)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc76)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc245)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc81)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc246)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc85)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc85)
      cir.if %3 {
        %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc87)
        %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc216)
        %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc88)
        %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc249)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc249)
        %9 = cir.call @__isoc99_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc87)
      } loc(#loc248)
    } loc(#loc247)
    cir.scope {
      %2 = cir.const #cir.int<0> : !s32i loc(#loc93)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc93)
      cir.if %3 {
        %4 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc75)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc75)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc97)
      } else {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc100)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc101)
          %6 = cir.cast(integral, %5 : !s32i), !s64i loc(#loc101)
          %7 = cir.cmp(lt, %4, %6) : !s64i, !cir.bool loc(#loc253)
          cir.if %7 {
            cir.scope {
              %8 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc105)
              %9 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc106)
              %10 = cir.unary(minus, %9) : !s64i, !s64i loc(#loc106)
              %11 = cir.const #cir.int<1> : !s64i loc(#loc106)
              %12 = cir.binop(sub, %10, %11) nsw : !s64i loc(#loc106)
              %13 = cir.const #cir.int<2> : !s32i loc(#loc107)
              %14 = cir.cast(integral, %13 : !s32i), !s64i loc(#loc107)
              %15 = cir.binop(div, %12, %14) : !s64i loc(#loc256)
              %16 = cir.cmp(gt, %8, %15) : !s64i, !cir.bool loc(#loc257)
              cir.if %16 {
                %17 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc259)
                %18 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc114)
                %19 = cir.const #cir.int<2> : !s32i loc(#loc113)
                %20 = cir.cast(integral, %19 : !s32i), !s64i loc(#loc113)
                %21 = cir.binop(mul, %18, %20) nsw : !s64i loc(#loc114)
                cir.store %21, %17 : !s64i, !cir.ptr<!s64i> loc(#loc259)
                %22 = cir.load %17 : !cir.ptr<!s64i>, !s64i loc(#loc115)
                cir.call @printLongLongLine(%22) : (!s64i) -> () loc(#loc116)
              } else {
                %17 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc76)
                %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc76)
                cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc117)
              } loc(#loc258)
            } loc(#loc255)
          } loc(#loc254)
        } loc(#loc252)
      } loc(#loc251)
    } loc(#loc250)
    cir.return loc(#loc78)
  } loc(#loc244)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc261)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc122)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc262)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc126)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc126)
      cir.if %3 {
        %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc128)
        %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc216)
        %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc129)
        %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc265)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc265)
        %9 = cir.call @__isoc99_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc128)
      } loc(#loc264)
    } loc(#loc263)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc134)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc134)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc138)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc139)
          %6 = cir.cast(integral, %5 : !s32i), !s64i loc(#loc139)
          %7 = cir.cmp(lt, %4, %6) : !s64i, !cir.bool loc(#loc269)
          cir.if %7 {
            cir.scope {
              %8 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc143)
              %9 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc144)
              %10 = cir.unary(minus, %9) : !s64i, !s64i loc(#loc144)
              %11 = cir.const #cir.int<1> : !s64i loc(#loc144)
              %12 = cir.binop(sub, %10, %11) nsw : !s64i loc(#loc144)
              %13 = cir.const #cir.int<2> : !s32i loc(#loc145)
              %14 = cir.cast(integral, %13 : !s32i), !s64i loc(#loc145)
              %15 = cir.binop(div, %12, %14) : !s64i loc(#loc272)
              %16 = cir.cmp(gt, %8, %15) : !s64i, !cir.bool loc(#loc273)
              cir.if %16 {
                %17 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc275)
                %18 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc152)
                %19 = cir.const #cir.int<2> : !s32i loc(#loc151)
                %20 = cir.cast(integral, %19 : !s32i), !s64i loc(#loc151)
                %21 = cir.binop(mul, %18, %20) nsw : !s64i loc(#loc152)
                cir.store %21, %17 : !s64i, !cir.ptr<!s64i> loc(#loc275)
                %22 = cir.load %17 : !cir.ptr<!s64i>, !s64i loc(#loc153)
                cir.call @printLongLongLine(%22) : (!s64i) -> () loc(#loc154)
              } else {
                %17 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc155)
                %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc155)
                cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc156)
              } loc(#loc274)
            } loc(#loc271)
          } loc(#loc270)
        } loc(#loc268)
      } loc(#loc267)
    } loc(#loc266)
    cir.return loc(#loc119)
  } loc(#loc260)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc277)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc161)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc278)
    cir.scope {
      %2 = cir.const #cir.int<0> : !s32i loc(#loc165)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc165)
      cir.if %3 {
        %4 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc169)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc169)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc170)
      } else {
        %4 = cir.const #cir.int<2> : !s32i loc(#loc171)
        %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc172)
        %6 = cir.cast(integral, %5 : !s32i), !s64i loc(#loc172)
        cir.store %6, %0 : !s64i, !cir.ptr<!s64i> loc(#loc281)
      } loc(#loc280)
    } loc(#loc279)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc176)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc176)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc180)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc181)
          %6 = cir.cast(integral, %5 : !s32i), !s64i loc(#loc181)
          %7 = cir.cmp(lt, %4, %6) : !s64i, !cir.bool loc(#loc285)
          cir.if %7 {
            %8 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc287)
            %9 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc185)
            %10 = cir.const #cir.int<2> : !s32i loc(#loc184)
            %11 = cir.cast(integral, %10 : !s32i), !s64i loc(#loc184)
            %12 = cir.binop(mul, %9, %11) nsw : !s64i loc(#loc185)
            cir.store %12, %8 : !s64i, !cir.ptr<!s64i> loc(#loc287)
            %13 = cir.load %8 : !cir.ptr<!s64i>, !s64i loc(#loc186)
            cir.call @printLongLongLine(%13) : (!s64i) -> () loc(#loc187)
          } loc(#loc286)
        } loc(#loc284)
      } loc(#loc283)
    } loc(#loc282)
    cir.return loc(#loc158)
  } loc(#loc276)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc289)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc192)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc290)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc196)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc196)
      cir.if %3 {
        %4 = cir.const #cir.int<2> : !s32i loc(#loc198)
        %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc199)
        %6 = cir.cast(integral, %5 : !s32i), !s64i loc(#loc199)
        cir.store %6, %0 : !s64i, !cir.ptr<!s64i> loc(#loc293)
      } loc(#loc292)
    } loc(#loc291)
    cir.scope {
      %2 = cir.const #cir.int<1> : !s32i loc(#loc203)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc203)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc207)
          %5 = cir.const #cir.int<0> : !s32i loc(#loc208)
          %6 = cir.cast(integral, %5 : !s32i), !s64i loc(#loc208)
          %7 = cir.cmp(lt, %4, %6) : !s64i, !cir.bool loc(#loc297)
          cir.if %7 {
            %8 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc299)
            %9 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc212)
            %10 = cir.const #cir.int<2> : !s32i loc(#loc211)
            %11 = cir.cast(integral, %10 : !s32i), !s64i loc(#loc211)
            %12 = cir.binop(mul, %9, %11) nsw : !s64i loc(#loc212)
            cir.store %12, %8 : !s64i, !cir.ptr<!s64i> loc(#loc299)
            %13 = cir.load %8 : !cir.ptr<!s64i>, !s64i loc(#loc213)
            cir.call @printLongLongLine(%13) : (!s64i) -> () loc(#loc214)
          } loc(#loc298)
        } loc(#loc296)
      } loc(#loc295)
    } loc(#loc294)
    cir.return loc(#loc189)
  } loc(#loc288)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":36:24)
#loc6 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":36:28)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc9 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":29:1)
#loc10 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":47:1)
#loc11 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":31:5)
#loc12 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":31:13)
#loc13 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":32:12)
#loc14 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":32:5)
#loc15 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":33:5)
#loc16 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":37:5)
#loc17 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":33:8)
#loc18 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":34:5)
#loc19 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":36:9)
#loc20 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":36:17)
#loc21 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":38:5)
#loc22 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":46:5)
#loc23 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":38:8)
#loc24 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":39:5)
#loc25 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":40:9)
#loc26 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":45:9)
#loc27 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":40:12)
#loc28 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":40:19)
#loc29 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":41:9)
#loc30 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":43:13)
#loc31 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":43:37)
#loc32 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":43:30)
#loc33 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":44:31)
#loc34 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":44:13)
#loc35 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":161:1)
#loc36 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":167:1)
#loc37 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":163:5)
#loc38 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":163:14)
#loc39 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":164:5)
#loc40 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":164:14)
#loc41 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":165:5)
#loc42 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":165:14)
#loc43 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":166:5)
#loc44 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":166:14)
#loc45 = loc("/usr/include/stdlib.h":575:1)
#loc46 = loc("/usr/include/stdlib.h":575:41)
#loc47 = loc("/usr/include/time.h":76:1)
#loc48 = loc("/usr/include/time.h":76:38)
#loc49 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc50 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc51 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":183:15)
#loc52 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":185:15)
#loc53 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":188:15)
#loc54 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":190:15)
#loc55 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":178:1)
#loc56 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":193:1)
#loc61 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":179:1)
#loc62 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":181:27)
#loc63 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":181:22)
#loc64 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":181:5)
#loc65 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":183:5)
#loc66 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":184:5)
#loc67 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":184:63)
#loc68 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":185:5)
#loc69 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":188:5)
#loc70 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":189:5)
#loc71 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":189:62)
#loc72 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":190:5)
#loc73 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":192:12)
#loc74 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":192:5)
#loc75 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":66:19)
#loc76 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":80:27)
#loc77 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":54:1)
#loc78 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":84:1)
#loc79 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":56:5)
#loc80 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":56:13)
#loc81 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":57:12)
#loc82 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":57:5)
#loc83 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":58:5)
#loc84 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":62:5)
#loc85 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":58:8)
#loc86 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":59:5)
#loc87 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":61:9)
#loc88 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":61:17)
#loc89 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":61:24)
#loc90 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":61:28)
#loc91 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":63:5)
#loc92 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":83:5)
#loc93 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":63:8)
#loc94 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":64:5)
#loc95 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":67:5)
#loc96 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":69:5)
#loc97 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":66:9)
#loc98 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":70:9)
#loc99 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":82:9)
#loc100 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":70:12)
#loc101 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":70:19)
#loc102 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":71:9)
#loc103 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":73:13)
#loc104 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":81:13)
#loc105 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":73:17)
#loc106 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":73:25)
#loc107 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":73:35)
#loc108 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":73:36)
#loc109 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":74:13)
#loc110 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":77:13)
#loc111 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":79:13)
#loc112 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":75:17)
#loc113 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":75:41)
#loc114 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":75:34)
#loc115 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":76:35)
#loc116 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":76:17)
#loc117 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":80:17)
#loc118 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":87:1)
#loc119 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":112:1)
#loc120 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":89:5)
#loc121 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":89:13)
#loc122 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":90:12)
#loc123 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":90:5)
#loc124 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":91:5)
#loc125 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":95:5)
#loc126 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":91:8)
#loc127 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":92:5)
#loc128 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":94:9)
#loc129 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":94:17)
#loc130 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":94:24)
#loc131 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":94:28)
#loc132 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":96:5)
#loc133 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":111:5)
#loc134 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":96:8)
#loc135 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":97:5)
#loc136 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":98:9)
#loc137 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":110:9)
#loc138 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":98:12)
#loc139 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":98:19)
#loc140 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":99:9)
#loc141 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":101:13)
#loc142 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":109:13)
#loc143 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":101:17)
#loc144 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":101:25)
#loc145 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":101:35)
#loc146 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":101:36)
#loc147 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":102:13)
#loc148 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":105:13)
#loc149 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":107:13)
#loc150 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":103:17)
#loc151 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":103:41)
#loc152 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":103:34)
#loc153 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":104:35)
#loc154 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":104:17)
#loc155 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":108:27)
#loc156 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":108:17)
#loc157 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":115:1)
#loc158 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":138:1)
#loc159 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":117:5)
#loc160 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":117:13)
#loc161 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":118:12)
#loc162 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":118:5)
#loc163 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":119:5)
#loc164 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":128:5)
#loc165 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":119:8)
#loc166 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":120:5)
#loc167 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":123:5)
#loc168 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":125:5)
#loc169 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":122:19)
#loc170 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":122:9)
#loc171 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":127:17)
#loc172 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":127:16)
#loc173 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":127:9)
#loc174 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":129:5)
#loc175 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":137:5)
#loc176 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":129:8)
#loc177 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":130:5)
#loc178 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":131:9)
#loc179 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":136:9)
#loc180 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":131:12)
#loc181 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":131:19)
#loc182 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":132:9)
#loc183 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":134:13)
#loc184 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":134:37)
#loc185 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":134:30)
#loc186 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":135:31)
#loc187 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":135:13)
#loc188 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":141:1)
#loc189 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":159:1)
#loc190 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":143:5)
#loc191 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":143:13)
#loc192 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":144:12)
#loc193 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":144:5)
#loc194 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":145:5)
#loc195 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":149:5)
#loc196 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":145:8)
#loc197 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":146:5)
#loc198 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":148:17)
#loc199 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":148:16)
#loc200 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":148:9)
#loc201 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":150:5)
#loc202 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":158:5)
#loc203 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":150:8)
#loc204 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":151:5)
#loc205 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":152:9)
#loc206 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":157:9)
#loc207 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":152:12)
#loc208 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":152:19)
#loc209 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":153:9)
#loc210 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":155:13)
#loc211 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":155:37)
#loc212 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":155:30)
#loc213 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":156:31)
#loc214 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_04.c":156:13)
#loc215 = loc(fused[#loc1, #loc2])
#loc216 = loc(fused[#loc3, #loc4])
#loc217 = loc(fused[#loc5, #loc6])
#loc218 = loc(fused[#loc7, #loc8])
#loc219 = loc(fused[#loc9, #loc10])
#loc220 = loc(fused[#loc11, #loc12])
#loc221 = loc(fused[#loc14, #loc13])
#loc222 = loc(fused[#loc15, #loc16])
#loc223 = loc(fused[#loc18, #loc16])
#loc224 = loc(fused[#loc21, #loc22])
#loc225 = loc(fused[#loc24, #loc22])
#loc226 = loc(fused[#loc25, #loc26])
#loc227 = loc(fused[#loc27, #loc28])
#loc228 = loc(fused[#loc29, #loc26])
#loc229 = loc(fused[#loc30, #loc31])
#loc230 = loc(fused[#loc35, #loc36])
#loc231 = loc(fused[#loc37, #loc38])
#loc232 = loc(fused[#loc39, #loc40])
#loc233 = loc(fused[#loc41, #loc42])
#loc234 = loc(fused[#loc43, #loc44])
#loc235 = loc(fused[#loc45, #loc46])
#loc236 = loc(fused[#loc47, #loc48])
#loc237 = loc(fused[#loc49, #loc50])
#loc238 = loc(fused[#loc55, #loc56])
#loc241 = loc(fused[#loc66, #loc67])
#loc242 = loc(fused[#loc70, #loc71])
#loc243 = loc(fused[#loc74, #loc73])
#loc244 = loc(fused[#loc77, #loc78])
#loc245 = loc(fused[#loc79, #loc80])
#loc246 = loc(fused[#loc82, #loc81])
#loc247 = loc(fused[#loc83, #loc84])
#loc248 = loc(fused[#loc86, #loc84])
#loc249 = loc(fused[#loc89, #loc90])
#loc250 = loc(fused[#loc91, #loc92])
#loc251 = loc(fused[#loc94, #loc95, #loc96, #loc92])
#loc252 = loc(fused[#loc98, #loc99])
#loc253 = loc(fused[#loc100, #loc101])
#loc254 = loc(fused[#loc102, #loc99])
#loc255 = loc(fused[#loc103, #loc104])
#loc256 = loc(fused[#loc106, #loc107])
#loc257 = loc(fused[#loc105, #loc108])
#loc258 = loc(fused[#loc109, #loc110, #loc111, #loc104])
#loc259 = loc(fused[#loc112, #loc113])
#loc260 = loc(fused[#loc118, #loc119])
#loc261 = loc(fused[#loc120, #loc121])
#loc262 = loc(fused[#loc123, #loc122])
#loc263 = loc(fused[#loc124, #loc125])
#loc264 = loc(fused[#loc127, #loc125])
#loc265 = loc(fused[#loc130, #loc131])
#loc266 = loc(fused[#loc132, #loc133])
#loc267 = loc(fused[#loc135, #loc133])
#loc268 = loc(fused[#loc136, #loc137])
#loc269 = loc(fused[#loc138, #loc139])
#loc270 = loc(fused[#loc140, #loc137])
#loc271 = loc(fused[#loc141, #loc142])
#loc272 = loc(fused[#loc144, #loc145])
#loc273 = loc(fused[#loc143, #loc146])
#loc274 = loc(fused[#loc147, #loc148, #loc149, #loc142])
#loc275 = loc(fused[#loc150, #loc151])
#loc276 = loc(fused[#loc157, #loc158])
#loc277 = loc(fused[#loc159, #loc160])
#loc278 = loc(fused[#loc162, #loc161])
#loc279 = loc(fused[#loc163, #loc164])
#loc280 = loc(fused[#loc166, #loc167, #loc168, #loc164])
#loc281 = loc(fused[#loc173, #loc171])
#loc282 = loc(fused[#loc174, #loc175])
#loc283 = loc(fused[#loc177, #loc175])
#loc284 = loc(fused[#loc178, #loc179])
#loc285 = loc(fused[#loc180, #loc181])
#loc286 = loc(fused[#loc182, #loc179])
#loc287 = loc(fused[#loc183, #loc184])
#loc288 = loc(fused[#loc188, #loc189])
#loc289 = loc(fused[#loc190, #loc191])
#loc290 = loc(fused[#loc193, #loc192])
#loc291 = loc(fused[#loc194, #loc195])
#loc292 = loc(fused[#loc197, #loc195])
#loc293 = loc(fused[#loc200, #loc198])
#loc294 = loc(fused[#loc201, #loc202])
#loc295 = loc(fused[#loc204, #loc202])
#loc296 = loc(fused[#loc205, #loc206])
#loc297 = loc(fused[#loc207, #loc208])
#loc298 = loc(fused[#loc209, #loc206])
#loc299 = loc(fused[#loc210, #loc211])
