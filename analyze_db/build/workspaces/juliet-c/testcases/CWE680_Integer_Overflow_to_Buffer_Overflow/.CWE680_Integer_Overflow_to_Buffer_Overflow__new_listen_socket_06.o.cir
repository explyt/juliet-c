!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":102:48)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc290)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc291)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc292)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc293)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc294)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc295)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc296)
  cir.func private @close(!s32i) -> !s32i loc(#loc297)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc298)
  cir.func private @printIntLine(!s32i) loc(#loc299)
  cir.func @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_063badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc301)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc302)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc303)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc304)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc305)
    %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc306)
    %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc307)
    %7 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc308)
    %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc309)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc41)
    cir.store %10, %8 : !s32i, !cir.ptr<!s32i> loc(#loc310)
    cir.br ^bb1 loc(#loc311)
  ^bb1:  // pred: ^bb0
    %11 = cir.const #cir.int<5> : !s32i loc(#loc45)
    %12 = cir.const #cir.int<5> : !s32i loc(#loc46)
    %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc312)
    cir.brcond %13 ^bb2, ^bb48 loc(#loc313)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc314)
  ^bb3:  // pred: ^bb2
    %14 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc28)
    cir.store %15, %2 : !s32i, !cir.ptr<!s32i> loc(#loc303)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc30)
    cir.store %17, %3 : !s32i, !cir.ptr<!s32i> loc(#loc304)
    cir.br ^bb4 loc(#loc315)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc315)
  ^bb5:  // pred: ^bb36
    %18 = cir.const #cir.int<0> : !s32i loc(#loc52)
    %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc52)
    cir.brcond %19 ^bb6, ^bb37 loc(#loc52)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc316)
  ^bb7:  // pred: ^bb6
    %20 = cir.const #cir.int<2> : !s32i loc(#loc55)
    %21 = cir.const #cir.int<1> : !u32i loc(#loc56)
    %22 = cir.cast(integral, %21 : !u32i), !s32i loc(#loc56)
    %23 = cir.const #cir.int<6> : !u32i loc(#loc57)
    %24 = cir.cast(integral, %23 : !u32i), !s32i loc(#loc57)
    %25 = cir.call @socket(%20, %22, %24) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc58)
    cir.store %25, %2 : !s32i, !cir.ptr<!s32i> loc(#loc317)
    cir.br ^bb8 loc(#loc318)
  ^bb8:  // pred: ^bb7
    %26 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc63)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %28 = cir.unary(minus, %27) nsw : !s32i, !s32i loc(#loc64)
    %29 = cir.cmp(eq, %26, %28) : !s32i, !cir.bool loc(#loc319)
    cir.brcond %29 ^bb9, ^bb10 loc(#loc320)
  ^bb9:  // pred: ^bb8
    cir.br ^bb37 loc(#loc66)
  ^bb10:  // pred: ^bb8
    cir.br ^bb11 loc(#loc62)
  ^bb11:  // pred: ^bb10
    %30 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc321)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc69)
    %32 = cir.const #cir.int<16> : !u64i loc(#loc322)
    cir.libc.memset %32 bytes from %30 set to %31 : !cir.ptr<!void>, !s32i, !u64i loc(#loc323)
    %33 = cir.const #cir.int<2> : !s32i loc(#loc74)
    %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc74)
    %35 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
    cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc324)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc77)
    %37 = cir.cast(integral, %36 : !s32i), !u32i loc(#loc77)
    %38 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc78)
    %39 = cir.get_member %38[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc79)
    cir.store %37, %39 : !u32i, !cir.ptr<!u32i> loc(#loc325)
    %40 = cir.const #cir.int<27015> : !s32i loc(#loc81)
    %41 = cir.cast(integral, %40 : !s32i), !u16i loc(#loc81)
    %42 = cir.call @htons(%41) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc82)
    %43 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
    cir.store %42, %43 : !u16i, !cir.ptr<!u16i> loc(#loc326)
    cir.br ^bb12 loc(#loc327)
  ^bb12:  // pred: ^bb11
    %44 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    %45 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc328)
    %46 = cir.const #cir.int<16> : !u64i loc(#loc329)
    %47 = cir.cast(integral, %46 : !u64i), !u32i loc(#loc329)
    %48 = cir.call @bind(%44, %45, %47) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc93)
    %49 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %50 = cir.unary(minus, %49) nsw : !s32i, !s32i loc(#loc94)
    %51 = cir.cmp(eq, %48, %50) : !s32i, !cir.bool loc(#loc330)
    cir.brcond %51 ^bb13, ^bb14 loc(#loc331)
  ^bb13:  // pred: ^bb12
    cir.br ^bb37 loc(#loc96)
  ^bb14:  // pred: ^bb12
    cir.br ^bb15 loc(#loc87)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc332)
  ^bb16:  // pred: ^bb15
    %52 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %53 = cir.const #cir.int<5> : !s32i loc(#loc100)
    %54 = cir.call @listen(%52, %53) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc101)
    %55 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc102)
    %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc333)
    cir.brcond %57 ^bb17, ^bb18 loc(#loc334)
  ^bb17:  // pred: ^bb16
    cir.br ^bb37 loc(#loc104)
  ^bb18:  // pred: ^bb16
    cir.br ^bb19 loc(#loc98)
  ^bb19:  // pred: ^bb18
    %58 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    %59 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc106)
    %60 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc107)
    %61 = cir.call @accept(%58, %59, %60) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc108)
    cir.store %61, %3 : !s32i, !cir.ptr<!s32i> loc(#loc335)
    cir.br ^bb20 loc(#loc336)
  ^bb20:  // pred: ^bb19
    %62 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    %63 = cir.const #cir.int<1> : !s32i loc(#loc114)
    %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc114)
    %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc337)
    cir.brcond %65 ^bb21, ^bb22 loc(#loc338)
  ^bb21:  // pred: ^bb20
    cir.br ^bb37 loc(#loc116)
  ^bb22:  // pred: ^bb20
    cir.br ^bb23 loc(#loc112)
  ^bb23:  // pred: ^bb22
    %66 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %67 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc118)
    %68 = cir.cast(bitcast, %67 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc118)
    %69 = cir.const #cir.int<3> : !s32i loc(#loc119)
    %70 = cir.cast(integral, %69 : !s32i), !u64i loc(#loc119)
    %71 = cir.const #cir.int<4> : !u64i loc(#loc119)
    %72 = cir.binop(mul, %70, %71) : !u64i loc(#loc119)
    %73 = cir.const #cir.int<2> : !s32i loc(#loc119)
    %74 = cir.cast(integral, %73 : !s32i), !u64i loc(#loc119)
    %75 = cir.binop(add, %72, %74) : !u64i loc(#loc119)
    %76 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %77 = cir.cast(integral, %76 : !s32i), !u64i loc(#loc120)
    %78 = cir.binop(sub, %75, %77) : !u64i loc(#loc339)
    %79 = cir.const #cir.int<0> : !s32i loc(#loc121)
    %80 = cir.call @recv(%66, %68, %78, %79) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc122)
    %81 = cir.cast(integral, %80 : !s64i), !s32i loc(#loc122)
    cir.store %81, %0 : !s32i, !cir.ptr<!s32i> loc(#loc340)
    cir.br ^bb24 loc(#loc341)
  ^bb24:  // pred: ^bb23
    %82 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %83 = cir.const #cir.int<1> : !s32i loc(#loc128)
    %84 = cir.unary(minus, %83) nsw : !s32i, !s32i loc(#loc128)
    %85 = cir.cmp(eq, %82, %84) : !s32i, !cir.bool loc(#loc342)
    cir.brcond %85 ^bb25, ^bb26 loc(#loc129)
  ^bb25:  // pred: ^bb24
    %86 = cir.const #true loc(#loc129)
    cir.br ^bb31(%86 : !cir.bool) loc(#loc129)
  ^bb26:  // pred: ^bb24
    %87 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    %88 = cir.const #cir.int<0> : !s32i loc(#loc131)
    %89 = cir.cmp(eq, %87, %88) : !s32i, !cir.bool loc(#loc343)
    cir.brcond %89 ^bb27, ^bb28 loc(#loc129)
  ^bb27:  // pred: ^bb26
    %90 = cir.const #true loc(#loc129)
    cir.br ^bb29(%90 : !cir.bool) loc(#loc129)
  ^bb28:  // pred: ^bb26
    %91 = cir.const #false loc(#loc129)
    cir.br ^bb29(%91 : !cir.bool) loc(#loc129)
  ^bb29(%92: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":102:48)):  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc129)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31(%92 : !cir.bool) loc(#loc129)
  ^bb31(%93: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":102:48)):  // 2 preds: ^bb25, ^bb30
    cir.br ^bb32 loc(#loc129)
  ^bb32:  // pred: ^bb31
    cir.brcond %93 ^bb33, ^bb34 loc(#loc344)
  ^bb33:  // pred: ^bb32
    cir.br ^bb37 loc(#loc133)
  ^bb34:  // pred: ^bb32
    cir.br ^bb35 loc(#loc126)
  ^bb35:  // pred: ^bb34
    %94 = cir.const #cir.int<0> : !s8i loc(#loc134)
    %95 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    %96 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc136)
    %97 = cir.ptr_stride(%96 : !cir.ptr<!s8i>, %95 : !s32i), !cir.ptr<!s8i> loc(#loc136)
    cir.store %94, %97 : !s8i, !cir.ptr<!s8i> loc(#loc345)
    %98 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc137)
    %99 = cir.call @atoi(%98) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc138)
    cir.store %99, %8 : !s32i, !cir.ptr<!s32i> loc(#loc346)
    cir.br ^bb36 loc(#loc54)
  ^bb36:  // pred: ^bb35
    cir.br ^bb5 loc(#loc51)
  ^bb37:  // 6 preds: ^bb5, ^bb9, ^bb13, ^bb17, ^bb21, ^bb33
    cir.br ^bb38 loc(#loc51)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc347)
  ^bb39:  // pred: ^bb38
    %100 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    %101 = cir.const #cir.int<1> : !s32i loc(#loc144)
    %102 = cir.unary(minus, %101) nsw : !s32i, !s32i loc(#loc144)
    %103 = cir.cmp(ne, %100, %102) : !s32i, !cir.bool loc(#loc348)
    cir.brcond %103 ^bb40, ^bb41 loc(#loc349)
  ^bb40:  // pred: ^bb39
    %104 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    %105 = cir.call @close(%104) : (!s32i) -> !s32i loc(#loc147)
    cir.br ^bb41 loc(#loc142)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc142)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc350)
  ^bb43:  // pred: ^bb42
    %106 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    %107 = cir.const #cir.int<1> : !s32i loc(#loc151)
    %108 = cir.unary(minus, %107) nsw : !s32i, !s32i loc(#loc151)
    %109 = cir.cmp(ne, %106, %108) : !s32i, !cir.bool loc(#loc351)
    cir.brcond %109 ^bb44, ^bb45 loc(#loc352)
  ^bb44:  // pred: ^bb43
    %110 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    %111 = cir.call @close(%110) : (!s32i) -> !s32i loc(#loc154)
    cir.br ^bb45 loc(#loc149)
  ^bb45:  // 2 preds: ^bb43, ^bb44
    cir.br ^bb46 loc(#loc149)
  ^bb46:  // pred: ^bb45
    cir.br ^bb47 loc(#loc49)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc44)
  ^bb48:  // 2 preds: ^bb1, ^bb47
    cir.br ^bb49 loc(#loc44)
  ^bb49:  // pred: ^bb48
    cir.br ^bb50 loc(#loc353)
  ^bb50:  // pred: ^bb49
    %112 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc157)
    %113 = cir.cast(integral, %112 : !s32i), !u64i loc(#loc157)
    %114 = cir.const #cir.int<4> : !u64i loc(#loc354)
    %115 = cir.binop(mul, %113, %114) : !u64i loc(#loc355)
    cir.store %115, %5 : !u64i, !cir.ptr<!u64i> loc(#loc356)
    %116 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc161)
    %117 = cir.call @_Znam(%116) : (!u64i) -> !cir.ptr<!void> loc(#loc162)
    %118 = cir.cast(bitcast, %117 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc357)
    %119 = cir.cast(bitcast, %118 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc357)
    cir.store %119, %7 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc358)
    cir.br ^bb51 loc(#loc359)
  ^bb51:  // pred: ^bb50
    %120 = cir.const #cir.int<0> : !s32i loc(#loc168)
    %121 = cir.cast(integral, %120 : !s32i), !u64i loc(#loc168)
    cir.store %121, %6 : !u64i, !cir.ptr<!u64i> loc(#loc360)
    cir.br ^bb52 loc(#loc359)
  ^bb52:  // 2 preds: ^bb51, ^bb56
    %122 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc170)
    %123 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc171)
    %124 = cir.cast(integral, %123 : !s32i), !u64i loc(#loc171)
    %125 = cir.cmp(lt, %122, %124) : !u64i, !cir.bool loc(#loc361)
    cir.brcond %125 ^bb53, ^bb57 loc(#loc361)
  ^bb53:  // pred: ^bb52
    cir.br ^bb54 loc(#loc362)
  ^bb54:  // pred: ^bb53
    %126 = cir.const #cir.int<0> : !s32i loc(#loc173)
    %127 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc174)
    %128 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc175)
    %129 = cir.ptr_stride(%127 : !cir.ptr<!s32i>, %128 : !u64i), !cir.ptr<!s32i> loc(#loc176)
    cir.store %126, %129 : !s32i, !cir.ptr<!s32i> loc(#loc363)
    cir.br ^bb55 loc(#loc167)
  ^bb55:  // pred: ^bb54
    cir.br ^bb56 loc(#loc167)
  ^bb56:  // pred: ^bb55
    %130 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc177)
    %131 = cir.unary(inc, %130) : !u64i, !u64i loc(#loc178)
    cir.store %131, %6 : !u64i, !cir.ptr<!u64i> loc(#loc364)
    cir.br ^bb52 loc(#loc359)
  ^bb57:  // pred: ^bb52
    cir.br ^bb58 loc(#loc167)
  ^bb58:  // pred: ^bb57
    %132 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc179)
    %133 = cir.const #cir.int<0> : !s32i loc(#loc180)
    %134 = cir.ptr_stride(%132 : !cir.ptr<!s32i>, %133 : !s32i), !cir.ptr<!s32i> loc(#loc181)
    %135 = cir.load %134 : !cir.ptr<!s32i>, !s32i loc(#loc179)
    cir.call @printIntLine(%135) : (!s32i) -> () loc(#loc182)
    %136 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc183)
    cir.delete.array %136 : <!s32i> loc(#loc183)
    cir.br ^bb59 loc(#loc156)
  ^bb59:  // pred: ^bb58
    cir.return loc(#loc22)
  } loc(#loc300)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc365)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc186)
  cir.func internal private @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc367)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc368)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc369)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc370)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc196)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc197)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc371)
    cir.br ^bb1 loc(#loc372)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<5> : !s32i loc(#loc201)
    %7 = cir.const #cir.int<5> : !s32i loc(#loc202)
    %8 = cir.cmp(ne, %6, %7) : !s32i, !cir.bool loc(#loc373)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc374)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc186)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc186)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc206)
    cir.br ^bb4 loc(#loc204)
  ^bb3:  // pred: ^bb1
    %11 = cir.const #cir.int<20> : !s32i loc(#loc207)
    cir.store %11, %3 : !s32i, !cir.ptr<!s32i> loc(#loc375)
    cir.br ^bb4 loc(#loc200)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc200)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc376)
  ^bb6:  // pred: ^bb5
    %12 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc211)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc211)
    %14 = cir.const #cir.int<4> : !u64i loc(#loc377)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc378)
    cir.store %15, %0 : !u64i, !cir.ptr<!u64i> loc(#loc379)
    %16 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc215)
    %17 = cir.call @_Znam(%16) : (!u64i) -> !cir.ptr<!void> loc(#loc216)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc380)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc380)
    cir.store %19, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc381)
    cir.br ^bb7 loc(#loc382)
  ^bb7:  // pred: ^bb6
    %20 = cir.const #cir.int<0> : !s32i loc(#loc222)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc222)
    cir.store %21, %1 : !u64i, !cir.ptr<!u64i> loc(#loc383)
    cir.br ^bb8 loc(#loc382)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %22 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc224)
    %23 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc225)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc225)
    %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc384)
    cir.brcond %25 ^bb9, ^bb13 loc(#loc384)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc385)
  ^bb10:  // pred: ^bb9
    %26 = cir.const #cir.int<0> : !s32i loc(#loc227)
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc228)
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc229)
    %29 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %28 : !u64i), !cir.ptr<!s32i> loc(#loc230)
    cir.store %26, %29 : !s32i, !cir.ptr<!s32i> loc(#loc386)
    cir.br ^bb11 loc(#loc221)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc221)
  ^bb12:  // pred: ^bb11
    %30 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc231)
    %31 = cir.unary(inc, %30) : !u64i, !u64i loc(#loc232)
    cir.store %31, %1 : !u64i, !cir.ptr<!u64i> loc(#loc387)
    cir.br ^bb8 loc(#loc382)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc221)
  ^bb14:  // pred: ^bb13
    %32 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc233)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc234)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!s32i>, %33 : !s32i), !cir.ptr<!s32i> loc(#loc235)
    %35 = cir.load %34 : !cir.ptr<!s32i>, !s32i loc(#loc233)
    cir.call @printIntLine(%35) : (!s32i) -> () loc(#loc236)
    %36 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc237)
    cir.delete.array %36 : <!s32i> loc(#loc237)
    cir.br ^bb15 loc(#loc210)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc188)
  } loc(#loc366)
  cir.func internal private @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc389)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc390)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc391)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc392)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc247)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc248)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc393)
    cir.br ^bb1 loc(#loc394)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<5> : !s32i loc(#loc252)
    %7 = cir.const #cir.int<5> : !s32i loc(#loc253)
    %8 = cir.cmp(eq, %6, %7) : !s32i, !cir.bool loc(#loc395)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc396)
  ^bb2:  // pred: ^bb1
    %9 = cir.const #cir.int<20> : !s32i loc(#loc255)
    cir.store %9, %3 : !s32i, !cir.ptr<!s32i> loc(#loc397)
    cir.br ^bb3 loc(#loc251)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc251)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc398)
  ^bb5:  // pred: ^bb4
    %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc259)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc259)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc399)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc400)
    cir.store %13, %0 : !u64i, !cir.ptr<!u64i> loc(#loc401)
    %14 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc263)
    %15 = cir.call @_Znam(%14) : (!u64i) -> !cir.ptr<!void> loc(#loc264)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc402)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc402)
    cir.store %17, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc403)
    cir.br ^bb6 loc(#loc404)
  ^bb6:  // pred: ^bb5
    %18 = cir.const #cir.int<0> : !s32i loc(#loc270)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc270)
    cir.store %19, %1 : !u64i, !cir.ptr<!u64i> loc(#loc405)
    cir.br ^bb7 loc(#loc404)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc272)
    %21 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc273)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc273)
    %23 = cir.cmp(lt, %20, %22) : !u64i, !cir.bool loc(#loc406)
    cir.brcond %23 ^bb8, ^bb12 loc(#loc406)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc407)
  ^bb9:  // pred: ^bb8
    %24 = cir.const #cir.int<0> : !s32i loc(#loc275)
    %25 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc276)
    %26 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc277)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !u64i), !cir.ptr<!s32i> loc(#loc278)
    cir.store %24, %27 : !s32i, !cir.ptr<!s32i> loc(#loc408)
    cir.br ^bb10 loc(#loc269)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc269)
  ^bb11:  // pred: ^bb10
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc279)
    %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc280)
    cir.store %29, %1 : !u64i, !cir.ptr<!u64i> loc(#loc409)
    cir.br ^bb7 loc(#loc404)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc269)
  ^bb13:  // pred: ^bb12
    %30 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc281)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc282)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %31 : !s32i), !cir.ptr<!s32i> loc(#loc283)
    %33 = cir.load %32 : !cir.ptr<!s32i>, !s32i loc(#loc281)
    cir.call @printIntLine(%33) : (!s32i) -> () loc(#loc284)
    %34 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc285)
    cir.delete.array %34 : <!s32i> loc(#loc285)
    cir.br ^bb14 loc(#loc258)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc239)
  } loc(#loc388)
  cir.func @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_064goodEv() extra(#fn_attr1) {
    cir.call @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06L8goodG2B1Ev() : () -> () loc(#loc288)
    cir.call @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06L8goodG2B2Ev() : () -> () loc(#loc289)
    cir.return loc(#loc287)
  } loc(#loc410)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc18 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc19 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc20 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":51:1)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":141:1)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":63:13)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":63:17)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":64:13)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":64:32)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":65:13)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":65:35)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":66:13)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":66:35)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":67:13)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":67:45)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":129:9)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":129:16)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":129:26)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":130:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":130:14)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":53:5)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":53:9)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":55:13)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":55:12)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":55:5)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":56:5)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":127:5)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":56:8)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":56:27)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":57:5)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":58:9)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":126:9)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":68:13)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":111:21)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":111:20)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":69:13)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":110:13)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":78:39)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":78:48)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":78:61)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":78:32)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":78:17)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":78:72)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":79:17)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":82:17)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":79:21)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":79:37)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":80:17)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":81:21)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":83:24)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":83:25)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":83:34)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":83:37)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":83:51)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":83:17)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":83:52)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":84:38)
#loc75 = loc("/usr/include/netinet/in.h":249:5)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":84:17)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":85:43)
#loc78 = loc("/usr/include/netinet/in.h":251:20)
#loc79 = loc("/usr/include/netinet/in.h":33:15)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":85:17)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":86:42)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":86:36)
#loc83 = loc("/usr/include/netinet/in.h":250:15)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":86:17)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":86:50)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":87:17)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":90:17)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":87:26)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":87:58)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":87:59)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":87:68)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":87:82)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":87:21)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":87:88)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":88:17)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":89:21)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":91:17)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":94:17)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":91:28)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":91:42)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":91:21)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":91:61)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":92:17)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":93:21)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":95:39)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":95:53)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":95:59)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":95:32)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":95:17)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":95:63)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":96:17)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":99:17)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":96:21)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":96:37)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":97:17)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":98:21)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":101:35)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":101:49)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":101:62)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":101:80)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":101:83)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":101:30)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":101:17)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":101:84)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":102:17)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":105:17)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":102:21)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":102:35)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":102:51)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":102:65)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":103:17)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":104:21)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":107:43)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":107:29)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":107:17)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":109:29)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":109:24)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":109:17)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":109:40)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":112:13)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":115:13)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":112:17)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":112:33)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":113:13)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":114:30)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":114:17)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":116:13)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":119:13)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":116:17)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":116:33)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":117:13)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":118:30)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":118:17)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":128:5)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":140:5)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":132:21)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":132:28)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":132:38)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":132:9)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":133:37)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":51:6)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":133:28)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":133:46)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":133:9)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":134:9)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":137:9)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":134:18)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":134:14)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":134:21)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":134:33)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":135:9)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":136:29)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":136:13)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":136:24)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":136:25)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":134:40)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":134:39)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":138:22)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":138:33)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":138:34)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":138:9)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":139:19)
#loc184 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc185 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":156:19)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":148:1)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":176:1)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":164:9)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":164:16)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":164:26)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":165:9)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":165:14)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":150:5)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":150:9)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":152:13)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":152:12)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":152:5)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":153:5)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":162:5)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":153:8)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":153:27)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":154:5)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":157:5)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":159:5)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":156:9)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":161:16)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":161:9)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":163:5)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":175:5)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":167:21)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":167:28)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":167:38)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":167:9)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":168:37)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":148:13)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":168:28)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":168:46)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":168:9)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":169:9)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":172:9)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":169:18)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":169:14)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":169:21)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":169:33)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":170:9)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":171:29)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":171:13)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":171:24)
#loc230 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":171:25)
#loc231 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":169:40)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":169:39)
#loc233 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":173:22)
#loc234 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":173:33)
#loc235 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":173:34)
#loc236 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":173:9)
#loc237 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":174:19)
#loc238 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":179:1)
#loc239 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":202:1)
#loc240 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":190:9)
#loc241 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":190:16)
#loc242 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":190:26)
#loc243 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":191:9)
#loc244 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":191:14)
#loc245 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":181:5)
#loc246 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":181:9)
#loc247 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":183:13)
#loc248 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":183:12)
#loc249 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":183:5)
#loc250 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":184:5)
#loc251 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":188:5)
#loc252 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":184:8)
#loc253 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":184:27)
#loc254 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":185:5)
#loc255 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":187:16)
#loc256 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":187:9)
#loc257 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":189:5)
#loc258 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":201:5)
#loc259 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":193:21)
#loc260 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":193:28)
#loc261 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":193:38)
#loc262 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":193:9)
#loc263 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":194:37)
#loc264 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":179:13)
#loc265 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":194:28)
#loc266 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":194:46)
#loc267 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":194:9)
#loc268 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":195:9)
#loc269 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":198:9)
#loc270 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":195:18)
#loc271 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":195:14)
#loc272 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":195:21)
#loc273 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":195:33)
#loc274 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":196:9)
#loc275 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":197:29)
#loc276 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":197:13)
#loc277 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":197:24)
#loc278 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":197:25)
#loc279 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":195:40)
#loc280 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":195:39)
#loc281 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":199:22)
#loc282 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":199:33)
#loc283 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":199:34)
#loc284 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":199:9)
#loc285 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":200:19)
#loc286 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":204:1)
#loc287 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":208:1)
#loc288 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":206:5)
#loc289 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":207:5)
#loc290 = loc(fused[#loc1, #loc2])
#loc291 = loc(fused[#loc3, #loc4])
#loc292 = loc(fused[#loc5, #loc6])
#loc293 = loc(fused[#loc7, #loc8])
#loc294 = loc(fused[#loc9, #loc10])
#loc295 = loc(fused[#loc11, #loc12])
#loc296 = loc(fused[#loc13, #loc14])
#loc297 = loc(fused[#loc15, #loc16])
#loc298 = loc(fused[#loc17, #loc18])
#loc299 = loc(fused[#loc19, #loc20])
#loc300 = loc(fused[#loc21, #loc22])
#loc301 = loc(fused[#loc23, #loc24])
#loc302 = loc(fused[#loc25, #loc26])
#loc303 = loc(fused[#loc27, #loc28])
#loc304 = loc(fused[#loc29, #loc30])
#loc305 = loc(fused[#loc31, #loc32])
#loc306 = loc(fused[#loc33, #loc34])
#loc307 = loc(fused[#loc33, #loc35])
#loc308 = loc(fused[#loc36, #loc37])
#loc309 = loc(fused[#loc38, #loc39])
#loc310 = loc(fused[#loc42, #loc40])
#loc311 = loc(fused[#loc43, #loc44])
#loc312 = loc(fused[#loc45, #loc46])
#loc313 = loc(fused[#loc47, #loc44])
#loc314 = loc(fused[#loc48, #loc49])
#loc315 = loc(fused[#loc50, #loc51])
#loc316 = loc(fused[#loc53, #loc54])
#loc317 = loc(fused[#loc59, #loc60])
#loc318 = loc(fused[#loc61, #loc62])
#loc319 = loc(fused[#loc63, #loc64])
#loc320 = loc(fused[#loc65, #loc62])
#loc321 = loc(fused[#loc67, #loc68])
#loc322 = loc(fused[#loc70, #loc71])
#loc323 = loc(fused[#loc72, #loc73])
#loc324 = loc(fused[#loc76, #loc74])
#loc325 = loc(fused[#loc80, #loc77])
#loc326 = loc(fused[#loc84, #loc85])
#loc327 = loc(fused[#loc86, #loc87])
#loc328 = loc(fused[#loc89, #loc90])
#loc329 = loc(fused[#loc91, #loc92])
#loc330 = loc(fused[#loc93, #loc94])
#loc331 = loc(fused[#loc95, #loc87])
#loc332 = loc(fused[#loc97, #loc98])
#loc333 = loc(fused[#loc101, #loc102])
#loc334 = loc(fused[#loc103, #loc98])
#loc335 = loc(fused[#loc109, #loc110])
#loc336 = loc(fused[#loc111, #loc112])
#loc337 = loc(fused[#loc113, #loc114])
#loc338 = loc(fused[#loc115, #loc112])
#loc339 = loc(fused[#loc119, #loc120])
#loc340 = loc(fused[#loc123, #loc124])
#loc341 = loc(fused[#loc125, #loc126])
#loc342 = loc(fused[#loc127, #loc128])
#loc343 = loc(fused[#loc130, #loc131])
#loc344 = loc(fused[#loc132, #loc126])
#loc345 = loc(fused[#loc136, #loc134])
#loc346 = loc(fused[#loc139, #loc140])
#loc347 = loc(fused[#loc141, #loc142])
#loc348 = loc(fused[#loc143, #loc144])
#loc349 = loc(fused[#loc145, #loc142])
#loc350 = loc(fused[#loc148, #loc149])
#loc351 = loc(fused[#loc150, #loc151])
#loc352 = loc(fused[#loc152, #loc149])
#loc353 = loc(fused[#loc155, #loc156])
#loc354 = loc(fused[#loc158, #loc159])
#loc355 = loc(fused[#loc157, #loc159])
#loc356 = loc(fused[#loc160, #loc159])
#loc357 = loc(fused[#loc163, #loc164])
#loc358 = loc(fused[#loc165, #loc164])
#loc359 = loc(fused[#loc166, #loc167])
#loc360 = loc(fused[#loc169, #loc168])
#loc361 = loc(fused[#loc170, #loc171])
#loc362 = loc(fused[#loc172, #loc167])
#loc363 = loc(fused[#loc174, #loc173])
#loc364 = loc(fused[#loc178, #loc177])
#loc365 = loc(fused[#loc184, #loc185])
#loc366 = loc(fused[#loc187, #loc188])
#loc367 = loc(fused[#loc189, #loc190])
#loc368 = loc(fused[#loc189, #loc191])
#loc369 = loc(fused[#loc192, #loc193])
#loc370 = loc(fused[#loc194, #loc195])
#loc371 = loc(fused[#loc198, #loc196])
#loc372 = loc(fused[#loc199, #loc200])
#loc373 = loc(fused[#loc201, #loc202])
#loc374 = loc(fused[#loc203, #loc204, #loc205, #loc200])
#loc375 = loc(fused[#loc208, #loc207])
#loc376 = loc(fused[#loc209, #loc210])
#loc377 = loc(fused[#loc212, #loc213])
#loc378 = loc(fused[#loc211, #loc213])
#loc379 = loc(fused[#loc214, #loc213])
#loc380 = loc(fused[#loc217, #loc218])
#loc381 = loc(fused[#loc219, #loc218])
#loc382 = loc(fused[#loc220, #loc221])
#loc383 = loc(fused[#loc223, #loc222])
#loc384 = loc(fused[#loc224, #loc225])
#loc385 = loc(fused[#loc226, #loc221])
#loc386 = loc(fused[#loc228, #loc227])
#loc387 = loc(fused[#loc232, #loc231])
#loc388 = loc(fused[#loc238, #loc239])
#loc389 = loc(fused[#loc240, #loc241])
#loc390 = loc(fused[#loc240, #loc242])
#loc391 = loc(fused[#loc243, #loc244])
#loc392 = loc(fused[#loc245, #loc246])
#loc393 = loc(fused[#loc249, #loc247])
#loc394 = loc(fused[#loc250, #loc251])
#loc395 = loc(fused[#loc252, #loc253])
#loc396 = loc(fused[#loc254, #loc251])
#loc397 = loc(fused[#loc256, #loc255])
#loc398 = loc(fused[#loc257, #loc258])
#loc399 = loc(fused[#loc260, #loc261])
#loc400 = loc(fused[#loc259, #loc261])
#loc401 = loc(fused[#loc262, #loc261])
#loc402 = loc(fused[#loc265, #loc266])
#loc403 = loc(fused[#loc267, #loc266])
#loc404 = loc(fused[#loc268, #loc269])
#loc405 = loc(fused[#loc271, #loc270])
#loc406 = loc(fused[#loc272, #loc273])
#loc407 = loc(fused[#loc274, #loc269])
#loc408 = loc(fused[#loc276, #loc275])
#loc409 = loc(fused[#loc280, #loc279])
#loc410 = loc(fused[#loc286, #loc287])
