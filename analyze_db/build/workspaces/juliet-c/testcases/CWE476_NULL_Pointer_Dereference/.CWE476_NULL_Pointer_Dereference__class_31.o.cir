!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc25 = loc("../../testcasesupport/std_testcase.h":61:7)
!ty_TwoIntsClass = !cir.record<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__class_31.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @printIntLine(!s32i) loc(#loc85)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc86)
  cir.func @_ZN41CWE476_NULL_Pointer_Dereference__class_313badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc88)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc9)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc89)
    cir.scope {
      %2 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc91)
      %3 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data", init] {alignment = 8 : i64} loc(#loc92)
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc14)
      cir.store %4, %2 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc91)
      %5 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc16)
      cir.store %5, %3 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc92)
      %6 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc17)
      %7 = cir.get_member %6[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc18)
      %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc19)
      cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc20)
      %9 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc21)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc21)
      cir.call @_ZdlPv(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc22)
    } loc(#loc90)
    cir.return loc(#loc6)
  } loc(#loc87)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc93)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc25)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc25)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc25)
    cir.return loc(#loc25)
  } loc(#loc25)
  cir.func internal private @_ZN41CWE476_NULL_Pointer_Dereference__class_31L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc95)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["tmpData", init] {alignment = 8 : i64} loc(#loc97)
      %2 = cir.const #cir.int<8> : !u64i loc(#loc98)
      %3 = cir.call @_Znwm(%2) : (!u64i) -> !cir.ptr<!void> loc(#loc97)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc98)
      cir.call @_ZN12TwoIntsClassC2Ev(%4) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc33)
      cir.store %4, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc97)
      %5 = cir.const #cir.int<0> : !s32i loc(#loc35)
      %6 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc36)
      %7 = cir.get_member %6[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc18)
      cir.store %5, %7 : !s32i, !cir.ptr<!s32i> loc(#loc99)
      %8 = cir.const #cir.int<0> : !s32i loc(#loc37)
      %9 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc38)
      %10 = cir.get_member %9[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc39)
      cir.store %8, %10 : !s32i, !cir.ptr<!s32i> loc(#loc100)
      %11 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc40)
      cir.store %11, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc101)
    } loc(#loc96)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc103)
      %2 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data", init] {alignment = 8 : i64} loc(#loc104)
      %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc45)
      cir.store %3, %1 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc103)
      %4 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc47)
      cir.store %4, %2 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc104)
      %5 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc48)
      %6 = cir.get_member %5[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc18)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc49)
      cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc50)
      %8 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc51)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc51)
      cir.call @_ZdlPv(%9) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc52)
    } loc(#loc102)
    cir.return loc(#loc27)
  } loc(#loc94)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc105)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data is NULL\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc55)
  cir.func internal private @_ZN41CWE476_NULL_Pointer_Dereference__class_31L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc107)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc60)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc108)
    cir.scope {
      %2 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc110)
      %3 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data", init] {alignment = 8 : i64} loc(#loc111)
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc65)
      cir.store %4, %2 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc110)
      %5 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc67)
      cir.store %5, %3 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc111)
      cir.scope {
        %6 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc70)
        %7 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc71)
        %8 = cir.cmp(ne, %6, %7) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc113)
        cir.if %8 {
          %9 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc75)
          %10 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc18)
          %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc76)
          cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc77)
          %12 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc78)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc78)
          cir.call @_ZdlPv(%13) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc79)
        } else {
          %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc55)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc55)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc80)
        } loc(#loc114)
      } loc(#loc112)
    } loc(#loc109)
    cir.return loc(#loc57)
  } loc(#loc106)
  cir.func @_ZN41CWE476_NULL_Pointer_Dereference__class_314goodEv() extra(#fn_attr1) {
    cir.call @_ZN41CWE476_NULL_Pointer_Dereference__class_31L7goodG2BEv() : () -> () loc(#loc83)
    cir.call @_ZN41CWE476_NULL_Pointer_Dereference__class_31L7goodB2GEv() : () -> () loc(#loc84)
    cir.return loc(#loc82)
  } loc(#loc115)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__class_31.cpp":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc5 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":25:1)
#loc6 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":38:1)
#loc7 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":27:5)
#loc8 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":27:20)
#loc9 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":29:12)
#loc10 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":29:5)
#loc11 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":30:5)
#loc12 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":37:5)
#loc13 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":31:9)
#loc14 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":31:35)
#loc15 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":32:9)
#loc16 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":32:31)
#loc17 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":34:22)
#loc18 = loc("../../testcasesupport/std_testcase.h":64:13)
#loc19 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":34:28)
#loc20 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":34:9)
#loc21 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":36:16)
#loc22 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":25:6)
#loc23 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc24 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc26 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":45:1)
#loc27 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":63:1)
#loc28 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":47:5)
#loc29 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":47:20)
#loc30 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":48:5)
#loc31 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":54:5)
#loc32 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":49:9)
#loc33 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":49:38)
#loc34 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":49:34)
#loc35 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":50:27)
#loc36 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":50:9)
#loc37 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":51:27)
#loc38 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":51:9)
#loc39 = loc("../../testcasesupport/std_testcase.h":65:13)
#loc40 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":53:16)
#loc41 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":53:9)
#loc42 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":55:5)
#loc43 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":62:5)
#loc44 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":56:9)
#loc45 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":56:35)
#loc46 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":57:9)
#loc47 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":57:31)
#loc48 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":59:22)
#loc49 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":59:28)
#loc50 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":59:9)
#loc51 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":61:16)
#loc52 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":45:13)
#loc53 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc54 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc55 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":82:23)
#loc56 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":66:1)
#loc57 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":85:1)
#loc58 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":68:5)
#loc59 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":68:20)
#loc60 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":70:12)
#loc61 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":70:5)
#loc62 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":71:5)
#loc63 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":84:5)
#loc64 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":72:9)
#loc65 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":72:35)
#loc66 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":73:9)
#loc67 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":73:31)
#loc68 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":75:9)
#loc69 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":83:9)
#loc70 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":75:13)
#loc71 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":75:21)
#loc72 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":76:9)
#loc73 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":79:9)
#loc74 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":81:9)
#loc75 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":77:26)
#loc76 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":77:32)
#loc77 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":77:13)
#loc78 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":78:20)
#loc79 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":66:13)
#loc80 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":82:13)
#loc81 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":87:1)
#loc82 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":91:1)
#loc83 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":89:5)
#loc84 = loc("CWE476_NULL_Pointer_Dereference__class_31.cpp":90:5)
#loc85 = loc(fused[#loc1, #loc2])
#loc86 = loc(fused[#loc3, #loc4])
#loc87 = loc(fused[#loc5, #loc6])
#loc88 = loc(fused[#loc7, #loc8])
#loc89 = loc(fused[#loc10, #loc9])
#loc90 = loc(fused[#loc11, #loc12])
#loc91 = loc(fused[#loc13, #loc14])
#loc92 = loc(fused[#loc15, #loc16])
#loc93 = loc(fused[#loc23, #loc24])
#loc94 = loc(fused[#loc26, #loc27])
#loc95 = loc(fused[#loc28, #loc29])
#loc96 = loc(fused[#loc30, #loc31])
#loc97 = loc(fused[#loc32, #loc33])
#loc98 = loc(fused[#loc34, #loc33])
#loc99 = loc(fused[#loc36, #loc35])
#loc100 = loc(fused[#loc38, #loc37])
#loc101 = loc(fused[#loc41, #loc40])
#loc102 = loc(fused[#loc42, #loc43])
#loc103 = loc(fused[#loc44, #loc45])
#loc104 = loc(fused[#loc46, #loc47])
#loc105 = loc(fused[#loc53, #loc54])
#loc106 = loc(fused[#loc56, #loc57])
#loc107 = loc(fused[#loc58, #loc59])
#loc108 = loc(fused[#loc61, #loc60])
#loc109 = loc(fused[#loc62, #loc63])
#loc110 = loc(fused[#loc64, #loc65])
#loc111 = loc(fused[#loc66, #loc67])
#loc112 = loc(fused[#loc68, #loc69])
#loc113 = loc(fused[#loc70, #loc71])
#loc114 = loc(fused[#loc72, #loc73, #loc74, #loc69])
#loc115 = loc(fused[#loc81, #loc82])
