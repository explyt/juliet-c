!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc140)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc141)
  cir.func private @printIntLine(!s32i) loc(#loc142)
  cir.func no_proto @CWE401_Memory_Leak__int_calloc_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc144)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc145)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc146)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc147)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc148)
    cir.store %2, %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc147)
    cir.store %2, %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc148)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc19)
    cir.store %5, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc149)
    cir.br ^bb1 loc(#loc150)
  ^bb1:  // pred: ^bb0
    %6 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc10)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc23)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc144)
    %8 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc24)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc25)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc25)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc151)
    %12 = cir.call @calloc(%10, %11) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc24)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc152)
    cir.store %13, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc153)
    cir.br ^bb2 loc(#loc154)
  ^bb2:  // pred: ^bb1
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc32)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc33)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc33)
    %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s32i>, !cir.bool loc(#loc155)
    cir.brcond %17 ^bb3, ^bb4 loc(#loc156)
  ^bb3:  // pred: ^bb2
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc35)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc37)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc35)
    cir.br ^bb4 loc(#loc31)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc31)
  ^bb5:  // pred: ^bb4
    %21 = cir.const #cir.int<5> : !s32i loc(#loc38)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc39)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !s32i), !cir.ptr<!s32i> loc(#loc41)
    cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc157)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc42)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc43)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc44)
    %28 = cir.load %27 : !cir.ptr<!s32i>, !s32i loc(#loc42)
    cir.call @printIntLine(%28) : (!s32i) -> () loc(#loc45)
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc46)
    %30 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc47)
    cir.store %29, %30 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc158)
    cir.br ^bb6 loc(#loc22)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc159)
  ^bb7:  // pred: ^bb6
    %31 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc12)
    %32 = cir.load %31 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc51)
    cir.store %32, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc145)
    cir.br ^bb8 loc(#loc50)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc8)
  } loc(#loc143)
  cir.func no_proto @CWE401_Memory_Leak__int_calloc_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc161)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc162)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc56)
    cir.return loc(#loc53)
  } loc(#loc160)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc164)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc165)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc166)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc167)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc168)
    cir.store %2, %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc167)
    cir.store %2, %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc168)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc70)
    cir.store %5, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc169)
    cir.br ^bb1 loc(#loc170)
  ^bb1:  // pred: ^bb0
    %6 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc61)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc74)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc164)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc75)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc75)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc75)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc75)
    %12 = cir.alloca !u8i, !cir.ptr<!u8i>, %11 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc75)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc75)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc75)
    cir.store %14, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc171)
    %15 = cir.const #cir.int<5> : !s32i loc(#loc77)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc78)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc79)
    %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc80)
    cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc172)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc81)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc82)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc83)
    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc84)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc85)
    %24 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc86)
    cir.store %23, %24 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc173)
    cir.br ^bb2 loc(#loc73)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc174)
  ^bb3:  // pred: ^bb2
    %25 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc63)
    %26 = cir.load %25 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc90)
    cir.store %26, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc165)
    cir.br ^bb4 loc(#loc89)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc59)
  } loc(#loc163)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc175)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc177)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc178)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc179)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc180)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc181)
    cir.store %2, %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc180)
    cir.store %2, %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc181)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc105)
    cir.store %5, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc182)
    cir.br ^bb1 loc(#loc183)
  ^bb1:  // pred: ^bb0
    %6 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc96)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc109)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc177)
    %8 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc110)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc111)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc111)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc184)
    %12 = cir.call @calloc(%10, %11) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc110)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc185)
    cir.store %13, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc186)
    cir.br ^bb2 loc(#loc187)
  ^bb2:  // pred: ^bb1
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc118)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc119)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc119)
    %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s32i>, !cir.bool loc(#loc188)
    cir.brcond %17 ^bb3, ^bb4 loc(#loc189)
  ^bb3:  // pred: ^bb2
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc121)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc122)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc123)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc121)
    cir.br ^bb4 loc(#loc117)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc117)
  ^bb5:  // pred: ^bb4
    %21 = cir.const #cir.int<5> : !s32i loc(#loc124)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc125)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc126)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !s32i), !cir.ptr<!s32i> loc(#loc127)
    cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc190)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc128)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc129)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc130)
    %28 = cir.load %27 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    cir.call @printIntLine(%28) : (!s32i) -> () loc(#loc131)
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc132)
    %30 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc133)
    cir.store %29, %30 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc191)
    cir.br ^bb6 loc(#loc108)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc192)
  ^bb7:  // pred: ^bb6
    %31 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc98)
    %32 = cir.load %31 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc137)
    cir.store %32, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc178)
    %33 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc138)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc139)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc139)
    cir.call @free(%35) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc138)
    cir.br ^bb8 loc(#loc136)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc94)
  } loc(#loc176)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_32.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":675:1)
#loc2 = loc("/usr/include/stdlib.h":676:14)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("CWE401_Memory_Leak__int_calloc_32.c":24:1)
#loc8 = loc("CWE401_Memory_Leak__int_calloc_32.c":45:1)
#loc9 = loc("CWE401_Memory_Leak__int_calloc_32.c":31:9)
#loc10 = loc("CWE401_Memory_Leak__int_calloc_32.c":31:23)
#loc11 = loc("CWE401_Memory_Leak__int_calloc_32.c":41:9)
#loc12 = loc("CWE401_Memory_Leak__int_calloc_32.c":41:23)
#loc13 = loc("CWE401_Memory_Leak__int_calloc_32.c":26:5)
#loc14 = loc("CWE401_Memory_Leak__int_calloc_32.c":26:11)
#loc15 = loc("CWE401_Memory_Leak__int_calloc_32.c":27:5)
#loc16 = loc("CWE401_Memory_Leak__int_calloc_32.c":27:24)
#loc17 = loc("CWE401_Memory_Leak__int_calloc_32.c":28:5)
#loc18 = loc("CWE401_Memory_Leak__int_calloc_32.c":28:24)
#loc19 = loc("CWE401_Memory_Leak__int_calloc_32.c":29:12)
#loc20 = loc("CWE401_Memory_Leak__int_calloc_32.c":29:5)
#loc21 = loc("CWE401_Memory_Leak__int_calloc_32.c":30:5)
#loc22 = loc("CWE401_Memory_Leak__int_calloc_32.c":39:5)
#loc23 = loc("CWE401_Memory_Leak__int_calloc_32.c":31:22)
#loc24 = loc("CWE401_Memory_Leak__int_calloc_32.c":33:23)
#loc25 = loc("CWE401_Memory_Leak__int_calloc_32.c":33:30)
#loc26 = loc("CWE401_Memory_Leak__int_calloc_32.c":33:35)
#loc27 = loc("CWE401_Memory_Leak__int_calloc_32.c":33:45)
#loc28 = loc("CWE401_Memory_Leak__int_calloc_32.c":33:46)
#loc29 = loc("CWE401_Memory_Leak__int_calloc_32.c":33:9)
#loc30 = loc("CWE401_Memory_Leak__int_calloc_32.c":34:9)
#loc31 = loc("CWE401_Memory_Leak__int_calloc_32.c":34:37)
#loc32 = loc("CWE401_Memory_Leak__int_calloc_32.c":34:13)
#loc33 = loc("CWE401_Memory_Leak__int_calloc_32.c":34:21)
#loc34 = loc("CWE401_Memory_Leak__int_calloc_32.c":34:27)
#loc35 = loc("CWE401_Memory_Leak__int_calloc_32.c":34:28)
#loc36 = loc("CWE401_Memory_Leak__int_calloc_32.c":34:34)
#loc37 = loc("CWE401_Memory_Leak__int_calloc_32.c":34:33)
#loc38 = loc("CWE401_Memory_Leak__int_calloc_32.c":36:19)
#loc39 = loc("CWE401_Memory_Leak__int_calloc_32.c":36:9)
#loc40 = loc("CWE401_Memory_Leak__int_calloc_32.c":36:14)
#loc41 = loc("CWE401_Memory_Leak__int_calloc_32.c":36:15)
#loc42 = loc("CWE401_Memory_Leak__int_calloc_32.c":37:22)
#loc43 = loc("CWE401_Memory_Leak__int_calloc_32.c":37:27)
#loc44 = loc("CWE401_Memory_Leak__int_calloc_32.c":37:28)
#loc45 = loc("CWE401_Memory_Leak__int_calloc_32.c":37:9)
#loc46 = loc("CWE401_Memory_Leak__int_calloc_32.c":38:21)
#loc47 = loc("CWE401_Memory_Leak__int_calloc_32.c":38:10)
#loc48 = loc("CWE401_Memory_Leak__int_calloc_32.c":38:9)
#loc49 = loc("CWE401_Memory_Leak__int_calloc_32.c":40:5)
#loc50 = loc("CWE401_Memory_Leak__int_calloc_32.c":44:5)
#loc51 = loc("CWE401_Memory_Leak__int_calloc_32.c":41:22)
#loc52 = loc("CWE401_Memory_Leak__int_calloc_32.c":98:1)
#loc53 = loc("CWE401_Memory_Leak__int_calloc_32.c":102:1)
#loc54 = loc("CWE401_Memory_Leak__int_calloc_32.c":100:5)
#loc55 = loc("CWE401_Memory_Leak__int_calloc_32.c":100:13)
#loc56 = loc("CWE401_Memory_Leak__int_calloc_32.c":101:5)
#loc57 = loc("CWE401_Memory_Leak__int_calloc_32.c":101:13)
#loc58 = loc("CWE401_Memory_Leak__int_calloc_32.c":52:1)
#loc59 = loc("CWE401_Memory_Leak__int_calloc_32.c":72:1)
#loc60 = loc("CWE401_Memory_Leak__int_calloc_32.c":59:9)
#loc61 = loc("CWE401_Memory_Leak__int_calloc_32.c":59:23)
#loc62 = loc("CWE401_Memory_Leak__int_calloc_32.c":68:9)
#loc63 = loc("CWE401_Memory_Leak__int_calloc_32.c":68:23)
#loc64 = loc("CWE401_Memory_Leak__int_calloc_32.c":54:5)
#loc65 = loc("CWE401_Memory_Leak__int_calloc_32.c":54:11)
#loc66 = loc("CWE401_Memory_Leak__int_calloc_32.c":55:5)
#loc67 = loc("CWE401_Memory_Leak__int_calloc_32.c":55:24)
#loc68 = loc("CWE401_Memory_Leak__int_calloc_32.c":56:5)
#loc69 = loc("CWE401_Memory_Leak__int_calloc_32.c":56:24)
#loc70 = loc("CWE401_Memory_Leak__int_calloc_32.c":57:12)
#loc71 = loc("CWE401_Memory_Leak__int_calloc_32.c":57:5)
#loc72 = loc("CWE401_Memory_Leak__int_calloc_32.c":58:5)
#loc73 = loc("CWE401_Memory_Leak__int_calloc_32.c":66:5)
#loc74 = loc("CWE401_Memory_Leak__int_calloc_32.c":59:22)
#loc75 = loc("CWE401_Memory_Leak__int_calloc_32.c":61:23)
#loc76 = loc("CWE401_Memory_Leak__int_calloc_32.c":61:9)
#loc77 = loc("CWE401_Memory_Leak__int_calloc_32.c":63:19)
#loc78 = loc("CWE401_Memory_Leak__int_calloc_32.c":63:9)
#loc79 = loc("CWE401_Memory_Leak__int_calloc_32.c":63:14)
#loc80 = loc("CWE401_Memory_Leak__int_calloc_32.c":63:15)
#loc81 = loc("CWE401_Memory_Leak__int_calloc_32.c":64:22)
#loc82 = loc("CWE401_Memory_Leak__int_calloc_32.c":64:27)
#loc83 = loc("CWE401_Memory_Leak__int_calloc_32.c":64:28)
#loc84 = loc("CWE401_Memory_Leak__int_calloc_32.c":64:9)
#loc85 = loc("CWE401_Memory_Leak__int_calloc_32.c":65:21)
#loc86 = loc("CWE401_Memory_Leak__int_calloc_32.c":65:10)
#loc87 = loc("CWE401_Memory_Leak__int_calloc_32.c":65:9)
#loc88 = loc("CWE401_Memory_Leak__int_calloc_32.c":67:5)
#loc89 = loc("CWE401_Memory_Leak__int_calloc_32.c":71:5)
#loc90 = loc("CWE401_Memory_Leak__int_calloc_32.c":68:22)
#loc91 = loc("/usr/include/stdlib.h":687:1)
#loc92 = loc("/usr/include/stdlib.h":687:32)
#loc93 = loc("CWE401_Memory_Leak__int_calloc_32.c":75:1)
#loc94 = loc("CWE401_Memory_Leak__int_calloc_32.c":96:1)
#loc95 = loc("CWE401_Memory_Leak__int_calloc_32.c":82:9)
#loc96 = loc("CWE401_Memory_Leak__int_calloc_32.c":82:23)
#loc97 = loc("CWE401_Memory_Leak__int_calloc_32.c":92:9)
#loc98 = loc("CWE401_Memory_Leak__int_calloc_32.c":92:23)
#loc99 = loc("CWE401_Memory_Leak__int_calloc_32.c":77:5)
#loc100 = loc("CWE401_Memory_Leak__int_calloc_32.c":77:11)
#loc101 = loc("CWE401_Memory_Leak__int_calloc_32.c":78:5)
#loc102 = loc("CWE401_Memory_Leak__int_calloc_32.c":78:24)
#loc103 = loc("CWE401_Memory_Leak__int_calloc_32.c":79:5)
#loc104 = loc("CWE401_Memory_Leak__int_calloc_32.c":79:24)
#loc105 = loc("CWE401_Memory_Leak__int_calloc_32.c":80:12)
#loc106 = loc("CWE401_Memory_Leak__int_calloc_32.c":80:5)
#loc107 = loc("CWE401_Memory_Leak__int_calloc_32.c":81:5)
#loc108 = loc("CWE401_Memory_Leak__int_calloc_32.c":90:5)
#loc109 = loc("CWE401_Memory_Leak__int_calloc_32.c":82:22)
#loc110 = loc("CWE401_Memory_Leak__int_calloc_32.c":84:23)
#loc111 = loc("CWE401_Memory_Leak__int_calloc_32.c":84:30)
#loc112 = loc("CWE401_Memory_Leak__int_calloc_32.c":84:35)
#loc113 = loc("CWE401_Memory_Leak__int_calloc_32.c":84:45)
#loc114 = loc("CWE401_Memory_Leak__int_calloc_32.c":84:46)
#loc115 = loc("CWE401_Memory_Leak__int_calloc_32.c":84:9)
#loc116 = loc("CWE401_Memory_Leak__int_calloc_32.c":85:9)
#loc117 = loc("CWE401_Memory_Leak__int_calloc_32.c":85:37)
#loc118 = loc("CWE401_Memory_Leak__int_calloc_32.c":85:13)
#loc119 = loc("CWE401_Memory_Leak__int_calloc_32.c":85:21)
#loc120 = loc("CWE401_Memory_Leak__int_calloc_32.c":85:27)
#loc121 = loc("CWE401_Memory_Leak__int_calloc_32.c":85:28)
#loc122 = loc("CWE401_Memory_Leak__int_calloc_32.c":85:34)
#loc123 = loc("CWE401_Memory_Leak__int_calloc_32.c":85:33)
#loc124 = loc("CWE401_Memory_Leak__int_calloc_32.c":87:19)
#loc125 = loc("CWE401_Memory_Leak__int_calloc_32.c":87:9)
#loc126 = loc("CWE401_Memory_Leak__int_calloc_32.c":87:14)
#loc127 = loc("CWE401_Memory_Leak__int_calloc_32.c":87:15)
#loc128 = loc("CWE401_Memory_Leak__int_calloc_32.c":88:22)
#loc129 = loc("CWE401_Memory_Leak__int_calloc_32.c":88:27)
#loc130 = loc("CWE401_Memory_Leak__int_calloc_32.c":88:28)
#loc131 = loc("CWE401_Memory_Leak__int_calloc_32.c":88:9)
#loc132 = loc("CWE401_Memory_Leak__int_calloc_32.c":89:21)
#loc133 = loc("CWE401_Memory_Leak__int_calloc_32.c":89:10)
#loc134 = loc("CWE401_Memory_Leak__int_calloc_32.c":89:9)
#loc135 = loc("CWE401_Memory_Leak__int_calloc_32.c":91:5)
#loc136 = loc("CWE401_Memory_Leak__int_calloc_32.c":95:5)
#loc137 = loc("CWE401_Memory_Leak__int_calloc_32.c":92:22)
#loc138 = loc("CWE401_Memory_Leak__int_calloc_32.c":94:9)
#loc139 = loc("CWE401_Memory_Leak__int_calloc_32.c":94:14)
#loc140 = loc(fused[#loc1, #loc2])
#loc141 = loc(fused[#loc3, #loc4])
#loc142 = loc(fused[#loc5, #loc6])
#loc143 = loc(fused[#loc7, #loc8])
#loc144 = loc(fused[#loc9, #loc10])
#loc145 = loc(fused[#loc11, #loc12])
#loc146 = loc(fused[#loc13, #loc14])
#loc147 = loc(fused[#loc15, #loc16])
#loc148 = loc(fused[#loc17, #loc18])
#loc149 = loc(fused[#loc20, #loc19])
#loc150 = loc(fused[#loc21, #loc22])
#loc151 = loc(fused[#loc26, #loc27])
#loc152 = loc(fused[#loc24, #loc28])
#loc153 = loc(fused[#loc29, #loc28])
#loc154 = loc(fused[#loc30, #loc31])
#loc155 = loc(fused[#loc32, #loc33])
#loc156 = loc(fused[#loc34, #loc31])
#loc157 = loc(fused[#loc39, #loc38])
#loc158 = loc(fused[#loc48, #loc46])
#loc159 = loc(fused[#loc49, #loc50])
#loc160 = loc(fused[#loc52, #loc53])
#loc161 = loc(fused[#loc54, #loc55])
#loc162 = loc(fused[#loc56, #loc57])
#loc163 = loc(fused[#loc58, #loc59])
#loc164 = loc(fused[#loc60, #loc61])
#loc165 = loc(fused[#loc62, #loc63])
#loc166 = loc(fused[#loc64, #loc65])
#loc167 = loc(fused[#loc66, #loc67])
#loc168 = loc(fused[#loc68, #loc69])
#loc169 = loc(fused[#loc71, #loc70])
#loc170 = loc(fused[#loc72, #loc73])
#loc171 = loc(fused[#loc76, #loc75])
#loc172 = loc(fused[#loc78, #loc77])
#loc173 = loc(fused[#loc87, #loc85])
#loc174 = loc(fused[#loc88, #loc89])
#loc175 = loc(fused[#loc91, #loc92])
#loc176 = loc(fused[#loc93, #loc94])
#loc177 = loc(fused[#loc95, #loc96])
#loc178 = loc(fused[#loc97, #loc98])
#loc179 = loc(fused[#loc99, #loc100])
#loc180 = loc(fused[#loc101, #loc102])
#loc181 = loc(fused[#loc103, #loc104])
#loc182 = loc(fused[#loc106, #loc105])
#loc183 = loc(fused[#loc107, #loc108])
#loc184 = loc(fused[#loc112, #loc113])
#loc185 = loc(fused[#loc110, #loc114])
#loc186 = loc(fused[#loc115, #loc114])
#loc187 = loc(fused[#loc116, #loc117])
#loc188 = loc(fused[#loc118, #loc119])
#loc189 = loc(fused[#loc120, #loc117])
#loc190 = loc(fused[#loc125, #loc124])
#loc191 = loc(fused[#loc134, #loc132])
#loc192 = loc(fused[#loc135, #loc136])
