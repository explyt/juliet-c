!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__fopen_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc87)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc3)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc4)
  cir.func no_proto private  @globalReturnsTrue(...) -> !s32i loc(#loc88)
  cir.func private  @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc89)
  cir.func no_proto  @CWE690_NULL_Deref_From_Return__fopen_11_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc91)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc92)
    %2 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc15)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc3)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc3)
    %5 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc4)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc4)
    %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc15)
    cir.store %7, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc93)
    cir.scope {
      %8 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc95)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc95)
      %10 = cir.call %9() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc20)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc20)
      cir.if %11 {
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc23)
        %13 = cir.call @fclose(%12) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc24)
      } loc(#loc96)
    } loc(#loc94)
    cir.return loc(#loc10)
  } loc(#loc90)
  cir.func no_proto  @CWE690_NULL_Deref_From_Return__fopen_11_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc98)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc27)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc99)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc29)
    cir.return loc(#loc26)
  } loc(#loc97)
  cir.func no_proto private  @globalReturnsFalse(...) -> !s32i loc(#loc100)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc101)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc35)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc103)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc40)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc104)
    %2 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc42)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc43)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc43)
    %5 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc44)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc44)
    %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc42)
    cir.store %7, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc105)
    cir.scope {
      %8 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc107)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc107)
      %10 = cir.call %9() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc49)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc49)
      cir.if %11 {
        %12 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc35)
        %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc35)
        cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc54)
      } else {
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc57)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc58)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc58)
          %15 = cir.cmp(ne, %12, %14) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc110)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc59)
          cir.if %16 {
            %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc61)
            %18 = cir.call @fclose(%17) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc62)
          } loc(#loc111)
        } loc(#loc109)
      } loc(#loc108)
    } loc(#loc106)
    cir.return loc(#loc37)
  } loc(#loc102)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc113)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc67)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc114)
    %2 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc69)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc70)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc70)
    %5 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc71)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc71)
    %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc69)
    cir.store %7, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc115)
    cir.scope {
      %8 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc117)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc117)
      %10 = cir.call %9() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc76)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc76)
      cir.if %11 {
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc81)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc82)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc82)
          %15 = cir.cmp(ne, %12, %14) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc120)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc83)
          cir.if %16 {
            %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc85)
            %18 = cir.call @fclose(%17) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc86)
          } loc(#loc121)
        } loc(#loc119)
      } loc(#loc118)
    } loc(#loc116)
    cir.return loc(#loc64)
  } loc(#loc112)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__fopen_11.c":0:0)
#loc1 = loc("/usr/include/stdio.h":264:1)
#loc2 = loc("/usr/include/stdio.h":266:3)
#loc3 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":27:18)
#loc4 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":27:30)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc7 = loc("/usr/include/stdio.h":184:1)
#loc8 = loc("/usr/include/stdio.h":184:36)
#loc9 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":21:1)
#loc10 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":33:1)
#loc11 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":23:5)
#loc12 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":23:12)
#loc13 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":25:12)
#loc14 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":25:5)
#loc15 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":27:12)
#loc16 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":27:5)
#loc17 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":27:34)
#loc18 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":28:5)
#loc19 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":32:5)
#loc20 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":28:8)
#loc21 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":28:26)
#loc22 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":29:5)
#loc23 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":31:16)
#loc24 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":31:9)
#loc25 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":80:1)
#loc26 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":84:1)
#loc27 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":82:5)
#loc28 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":82:14)
#loc29 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":83:5)
#loc30 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":83:14)
#loc31 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc32 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc33 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc35 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":50:19)
#loc36 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":40:1)
#loc37 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":60:1)
#loc38 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":42:5)
#loc39 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":42:12)
#loc40 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":44:12)
#loc41 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":44:5)
#loc42 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":46:12)
#loc43 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":46:18)
#loc44 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":46:30)
#loc45 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":46:5)
#loc46 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":46:34)
#loc47 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":47:5)
#loc48 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":59:5)
#loc49 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":47:8)
#loc50 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":47:27)
#loc51 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":48:5)
#loc52 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":51:5)
#loc53 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":53:5)
#loc54 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":50:9)
#loc55 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":55:9)
#loc56 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":58:9)
#loc57 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":55:13)
#loc58 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":55:21)
#loc59 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":55:18)
#loc60 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":56:9)
#loc61 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":57:20)
#loc62 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":57:13)
#loc63 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":63:1)
#loc64 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":78:1)
#loc65 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":65:5)
#loc66 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":65:12)
#loc67 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":67:12)
#loc68 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":67:5)
#loc69 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":69:12)
#loc70 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":69:18)
#loc71 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":69:30)
#loc72 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":69:5)
#loc73 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":69:34)
#loc74 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":70:5)
#loc75 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":77:5)
#loc76 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":70:8)
#loc77 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":70:26)
#loc78 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":71:5)
#loc79 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":73:9)
#loc80 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":76:9)
#loc81 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":73:13)
#loc82 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":73:21)
#loc83 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":73:18)
#loc84 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":74:9)
#loc85 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":75:20)
#loc86 = loc("CWE690_NULL_Deref_From_Return__fopen_11.c":75:13)
#loc87 = loc(fused[#loc1, #loc2])
#loc88 = loc(fused[#loc5, #loc6])
#loc89 = loc(fused[#loc7, #loc8])
#loc90 = loc(fused[#loc9, #loc10])
#loc91 = loc(fused[#loc11, #loc12])
#loc92 = loc(fused[#loc14, #loc13])
#loc93 = loc(fused[#loc16, #loc17])
#loc94 = loc(fused[#loc18, #loc19])
#loc95 = loc(fused[#loc20, #loc21])
#loc96 = loc(fused[#loc22, #loc19])
#loc97 = loc(fused[#loc25, #loc26])
#loc98 = loc(fused[#loc27, #loc28])
#loc99 = loc(fused[#loc29, #loc30])
#loc100 = loc(fused[#loc31, #loc32])
#loc101 = loc(fused[#loc33, #loc34])
#loc102 = loc(fused[#loc36, #loc37])
#loc103 = loc(fused[#loc38, #loc39])
#loc104 = loc(fused[#loc41, #loc40])
#loc105 = loc(fused[#loc45, #loc46])
#loc106 = loc(fused[#loc47, #loc48])
#loc107 = loc(fused[#loc49, #loc50])
#loc108 = loc(fused[#loc51, #loc52, #loc53, #loc48])
#loc109 = loc(fused[#loc55, #loc56])
#loc110 = loc(fused[#loc57, #loc58])
#loc111 = loc(fused[#loc60, #loc56])
#loc112 = loc(fused[#loc63, #loc64])
#loc113 = loc(fused[#loc65, #loc66])
#loc114 = loc(fused[#loc68, #loc67])
#loc115 = loc(fused[#loc72, #loc73])
#loc116 = loc(fused[#loc74, #loc75])
#loc117 = loc(fused[#loc76, #loc77])
#loc118 = loc(fused[#loc78, #loc75])
#loc119 = loc(fused[#loc79, #loc80])
#loc120 = loc(fused[#loc81, #loc82])
#loc121 = loc(fused[#loc84, #loc80])
