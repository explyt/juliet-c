!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc65 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":106:10)
#loc66 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":106:14)
#loc67 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":106:20)
#loc68 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":106:32)
#loc189 = loc(fused[#loc65, #loc66])
#loc190 = loc(fused[#loc67, #loc68])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__open_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc162)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"BadSource_open.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc3)
  cir.func private @close(!s32i) -> !s32i loc(#loc163)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__open_17_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc165)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc166)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc167)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc13)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc14)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc168)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc18)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc170)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc20)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc21)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc171)
        cir.condition(%8) loc(#loc22)
      } body {
        cir.scope {
          %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc3)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc3)
          %8 = cir.const #cir.int<2> : !s32i loc(#loc24)
          %9 = cir.const #cir.int<64> : !s32i loc(#loc25)
          %10 = cir.binop(or, %8, %9) : !s32i loc(#loc173)
          %11 = cir.const #cir.int<256> : !s32i loc(#loc26)
          %12 = cir.const #cir.int<128> : !s32i loc(#loc27)
          %13 = cir.binop(or, %11, %12) : !s32i loc(#loc174)
          %14 = cir.call @open(%7, %10, %13) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc28)
          cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc175)
          %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc31)
          %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc32)
        } loc(#loc172)
        cir.yield loc(#loc17)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc33)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc34)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc176)
        cir.yield loc(#loc169)
      } loc(#loc169)
    } loc(#loc169)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc37)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc178)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc39)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc40)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc179)
        cir.condition(%8) loc(#loc41)
      } body {
        cir.scope {
          %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc43)
          %7 = cir.call @close(%6) : (!s32i) -> !s32i loc(#loc44)
        } loc(#loc180)
        cir.yield loc(#loc36)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc45)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc46)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc181)
        cir.yield loc(#loc177)
      } loc(#loc177)
    } loc(#loc177)
    cir.return loc(#loc7)
  } loc(#loc164)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__open_17_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc183)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc184)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc51)
    cir.return loc(#loc48)
  } loc(#loc182)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc185)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc186)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc187)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc60)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc61)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc62)
  cir.func @main(%arg0: !s32i loc(fused[#loc65, #loc66]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc67, #loc68])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc189)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc190)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc64)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc69)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc69)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc70)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc71)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc71)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc72)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc59)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %8 = cir.get_global @CWE675_Duplicate_Operations_on_Resource__open_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc191)
    cir.call @CWE675_Duplicate_Operations_on_Resource__open_17_good() : () -> () loc(#loc74)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc60)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc61)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %13 = cir.get_global @CWE675_Duplicate_Operations_on_Resource__open_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc192)
    cir.call @CWE675_Duplicate_Operations_on_Resource__open_17_bad() : () -> () loc(#loc78)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc62)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc81)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc193)
    cir.return %17 : !s32i loc(#loc193)
  } loc(#loc188)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc195)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc196)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc197)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc90)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc91)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc198)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc95)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc200)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc97)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc98)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc201)
        cir.condition(%8) loc(#loc99)
      } body {
        cir.scope {
          %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc101)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc101)
          %8 = cir.const #cir.int<2> : !s32i loc(#loc102)
          %9 = cir.const #cir.int<64> : !s32i loc(#loc103)
          %10 = cir.binop(or, %8, %9) : !s32i loc(#loc203)
          %11 = cir.const #cir.int<256> : !s32i loc(#loc104)
          %12 = cir.const #cir.int<128> : !s32i loc(#loc105)
          %13 = cir.binop(or, %11, %12) : !s32i loc(#loc204)
          %14 = cir.call @open(%7, %10, %13) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc106)
          cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc205)
          %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc109)
          %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc110)
        } loc(#loc202)
        cir.yield loc(#loc94)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc111)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc112)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc206)
        cir.yield loc(#loc199)
      } loc(#loc199)
    } loc(#loc199)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc115)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc208)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc117)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc118)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc209)
        cir.condition(%8) loc(#loc119)
      } body {
        cir.yield loc(#loc114)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc120)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc121)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc210)
        cir.yield loc(#loc207)
      } loc(#loc207)
    } loc(#loc207)
    cir.return loc(#loc84)
  } loc(#loc194)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"GoodSource_open.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc122)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc212)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc213)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc214)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc130)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc131)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc135)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc217)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc137)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc138)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc218)
        cir.condition(%8) loc(#loc139)
      } body {
        cir.scope {
          %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc122)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc122)
          %8 = cir.const #cir.int<2> : !s32i loc(#loc141)
          %9 = cir.const #cir.int<64> : !s32i loc(#loc142)
          %10 = cir.binop(or, %8, %9) : !s32i loc(#loc220)
          %11 = cir.const #cir.int<256> : !s32i loc(#loc143)
          %12 = cir.const #cir.int<128> : !s32i loc(#loc144)
          %13 = cir.binop(or, %11, %12) : !s32i loc(#loc221)
          %14 = cir.call @open(%7, %10, %13) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc145)
          cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc222)
        } loc(#loc219)
        cir.yield loc(#loc134)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc148)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc149)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc223)
        cir.yield loc(#loc216)
      } loc(#loc216)
    } loc(#loc216)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc152)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc225)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc154)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc155)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc226)
        cir.condition(%8) loc(#loc156)
      } body {
        cir.scope {
          %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc158)
          %7 = cir.call @close(%6) : (!s32i) -> !s32i loc(#loc159)
        } loc(#loc227)
        cir.yield loc(#loc151)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc160)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc161)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc228)
        cir.yield loc(#loc224)
      } loc(#loc224)
    } loc(#loc224)
    cir.return loc(#loc124)
  } loc(#loc211)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__open_17.c":0:0)
#loc1 = loc("/usr/include/fcntl.h":209:1)
#loc2 = loc("/usr/include/fcntl.h":209:56)
#loc3 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":38:21)
#loc4 = loc("/usr/include/unistd.h":358:1)
#loc5 = loc("/usr/include/unistd.h":358:27)
#loc6 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":31:1)
#loc7 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":47:1)
#loc8 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":33:5)
#loc9 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":33:9)
#loc10 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":33:11)
#loc11 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":34:5)
#loc12 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":34:9)
#loc13 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":35:13)
#loc14 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":35:12)
#loc15 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":35:5)
#loc16 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":36:5)
#loc17 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":41:5)
#loc18 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":36:13)
#loc19 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":36:9)
#loc20 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":36:16)
#loc21 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":36:20)
#loc22 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":36:18)
#loc23 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":37:5)
#loc24 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":38:43)
#loc25 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":38:50)
#loc26 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":38:59)
#loc27 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":38:67)
#loc28 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":38:16)
#loc29 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":38:9)
#loc30 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":38:75)
#loc31 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":40:15)
#loc32 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":40:9)
#loc33 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":36:24)
#loc34 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":36:23)
#loc35 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":42:5)
#loc36 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":46:5)
#loc37 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":42:13)
#loc38 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":42:9)
#loc39 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":42:16)
#loc40 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":42:20)
#loc41 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":42:18)
#loc42 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":43:5)
#loc43 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":45:15)
#loc44 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":45:9)
#loc45 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":42:24)
#loc46 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":42:23)
#loc47 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":91:1)
#loc48 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":95:1)
#loc49 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":93:5)
#loc50 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":93:13)
#loc51 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":94:5)
#loc52 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":94:13)
#loc53 = loc("/usr/include/stdlib.h":575:1)
#loc54 = loc("/usr/include/stdlib.h":575:41)
#loc55 = loc("/usr/include/time.h":76:1)
#loc56 = loc("/usr/include/time.h":76:38)
#loc57 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc58 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc59 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":111:15)
#loc60 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":113:15)
#loc61 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":116:15)
#loc62 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":118:15)
#loc63 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":106:1)
#loc64 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":121:1)
#loc69 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":107:1)
#loc70 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":109:27)
#loc71 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":109:22)
#loc72 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":109:5)
#loc73 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":111:5)
#loc74 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":112:5)
#loc75 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":112:59)
#loc76 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":113:5)
#loc77 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":116:5)
#loc78 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":117:5)
#loc79 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":117:58)
#loc80 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":118:5)
#loc81 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":120:12)
#loc82 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":120:5)
#loc83 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":54:1)
#loc84 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":71:1)
#loc85 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":56:5)
#loc86 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":56:9)
#loc87 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":56:11)
#loc88 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":57:5)
#loc89 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":57:9)
#loc90 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":58:13)
#loc91 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":58:12)
#loc92 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":58:5)
#loc93 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":59:5)
#loc94 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":64:5)
#loc95 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":59:13)
#loc96 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":59:9)
#loc97 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":59:16)
#loc98 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":59:20)
#loc99 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":59:18)
#loc100 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":60:5)
#loc101 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":61:21)
#loc102 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":61:43)
#loc103 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":61:50)
#loc104 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":61:59)
#loc105 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":61:67)
#loc106 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":61:16)
#loc107 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":61:9)
#loc108 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":61:75)
#loc109 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":63:15)
#loc110 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":63:9)
#loc111 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":59:24)
#loc112 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":59:23)
#loc113 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":65:5)
#loc114 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":70:5)
#loc115 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":65:13)
#loc116 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":65:9)
#loc117 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":65:16)
#loc118 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":65:20)
#loc119 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":65:18)
#loc120 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":65:24)
#loc121 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":65:23)
#loc122 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":82:21)
#loc123 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":74:1)
#loc124 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":89:1)
#loc125 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":76:5)
#loc126 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":76:9)
#loc127 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":76:11)
#loc128 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":77:5)
#loc129 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":77:9)
#loc130 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":78:13)
#loc131 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":78:12)
#loc132 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":78:5)
#loc133 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":79:5)
#loc134 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":83:5)
#loc135 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":79:13)
#loc136 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":79:9)
#loc137 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":79:16)
#loc138 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":79:20)
#loc139 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":79:18)
#loc140 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":80:5)
#loc141 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":82:44)
#loc142 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":82:51)
#loc143 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":82:60)
#loc144 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":82:68)
#loc145 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":82:16)
#loc146 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":82:9)
#loc147 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":82:76)
#loc148 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":79:24)
#loc149 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":79:23)
#loc150 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":84:5)
#loc151 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":88:5)
#loc152 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":84:13)
#loc153 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":84:9)
#loc154 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":84:16)
#loc155 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":84:20)
#loc156 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":84:18)
#loc157 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":85:5)
#loc158 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":87:15)
#loc159 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":87:9)
#loc160 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":84:24)
#loc161 = loc("CWE675_Duplicate_Operations_on_Resource__open_17.c":84:23)
#loc162 = loc(fused[#loc1, #loc2])
#loc163 = loc(fused[#loc4, #loc5])
#loc164 = loc(fused[#loc6, #loc7])
#loc165 = loc(fused[#loc8, #loc9])
#loc166 = loc(fused[#loc8, #loc10])
#loc167 = loc(fused[#loc11, #loc12])
#loc168 = loc(fused[#loc15, #loc13])
#loc169 = loc(fused[#loc16, #loc17])
#loc170 = loc(fused[#loc19, #loc18])
#loc171 = loc(fused[#loc20, #loc21])
#loc172 = loc(fused[#loc23, #loc17])
#loc173 = loc(fused[#loc24, #loc25])
#loc174 = loc(fused[#loc26, #loc27])
#loc175 = loc(fused[#loc29, #loc30])
#loc176 = loc(fused[#loc34, #loc33])
#loc177 = loc(fused[#loc35, #loc36])
#loc178 = loc(fused[#loc38, #loc37])
#loc179 = loc(fused[#loc39, #loc40])
#loc180 = loc(fused[#loc42, #loc36])
#loc181 = loc(fused[#loc46, #loc45])
#loc182 = loc(fused[#loc47, #loc48])
#loc183 = loc(fused[#loc49, #loc50])
#loc184 = loc(fused[#loc51, #loc52])
#loc185 = loc(fused[#loc53, #loc54])
#loc186 = loc(fused[#loc55, #loc56])
#loc187 = loc(fused[#loc57, #loc58])
#loc188 = loc(fused[#loc63, #loc64])
#loc191 = loc(fused[#loc74, #loc75])
#loc192 = loc(fused[#loc78, #loc79])
#loc193 = loc(fused[#loc82, #loc81])
#loc194 = loc(fused[#loc83, #loc84])
#loc195 = loc(fused[#loc85, #loc86])
#loc196 = loc(fused[#loc85, #loc87])
#loc197 = loc(fused[#loc88, #loc89])
#loc198 = loc(fused[#loc92, #loc90])
#loc199 = loc(fused[#loc93, #loc94])
#loc200 = loc(fused[#loc96, #loc95])
#loc201 = loc(fused[#loc97, #loc98])
#loc202 = loc(fused[#loc100, #loc94])
#loc203 = loc(fused[#loc102, #loc103])
#loc204 = loc(fused[#loc104, #loc105])
#loc205 = loc(fused[#loc107, #loc108])
#loc206 = loc(fused[#loc112, #loc111])
#loc207 = loc(fused[#loc113, #loc114])
#loc208 = loc(fused[#loc116, #loc115])
#loc209 = loc(fused[#loc117, #loc118])
#loc210 = loc(fused[#loc121, #loc120])
#loc211 = loc(fused[#loc123, #loc124])
#loc212 = loc(fused[#loc125, #loc126])
#loc213 = loc(fused[#loc125, #loc127])
#loc214 = loc(fused[#loc128, #loc129])
#loc215 = loc(fused[#loc132, #loc130])
#loc216 = loc(fused[#loc133, #loc134])
#loc217 = loc(fused[#loc136, #loc135])
#loc218 = loc(fused[#loc137, #loc138])
#loc219 = loc(fused[#loc140, #loc134])
#loc220 = loc(fused[#loc141, #loc142])
#loc221 = loc(fused[#loc143, #loc144])
#loc222 = loc(fused[#loc146, #loc147])
#loc223 = loc(fused[#loc149, #loc148])
#loc224 = loc(fused[#loc150, #loc151])
#loc225 = loc(fused[#loc153, #loc152])
#loc226 = loc(fused[#loc154, #loc155])
#loc227 = loc(fused[#loc157, #loc151])
#loc228 = loc(fused[#loc161, #loc160])
