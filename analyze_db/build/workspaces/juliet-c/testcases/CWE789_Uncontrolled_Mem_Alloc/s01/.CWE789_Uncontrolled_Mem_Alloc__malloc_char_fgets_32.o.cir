!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc246)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc247)
  cir.func private @strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc248)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc249)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc250)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc251)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc252)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc16)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc253)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc19)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc255)
    %1 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc256)
    %2 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc257)
    cir.store %0, %1 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc256)
    cir.store %0, %2 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc257)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc28)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc258)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc260)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc33)
      %7 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc34)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc260)
      cir.scope {
        %10 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc262)
        %11 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc262)
        cir.store %11, %10 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc262)
        cir.scope {
          %12 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc41)
          %13 = cir.const #cir.int<3> : !s32i loc(#loc42)
          %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc42)
          %15 = cir.const #cir.int<8> : !u64i loc(#loc42)
          %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc42)
          %17 = cir.const #cir.int<2> : !s32i loc(#loc42)
          %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc42)
          %19 = cir.binop(add, %16, %18) : !u64i loc(#loc42)
          %20 = cir.cast(integral, %19 : !u64i), !s32i loc(#loc42)
          %21 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc247)
          %22 = cir.load %21 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc43)
          %23 = cir.call @fgets(%12, %20, %22) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc44)
          %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc45)
          %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc45)
          %26 = cir.cmp(ne, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc264)
          cir.if %26 {
            %27 = cir.get_global @strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc49)
            %28 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc50)
            %29 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc51)
            %30 = cir.const #cir.int<0> : !s32i loc(#loc52)
            %31 = cir.call @strtoul(%28, %29, %30) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc49)
            cir.store %31, %5 : !u64i, !cir.ptr<!u64i> loc(#loc266)
          } else {
            %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
            %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
            cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc55)
          } loc(#loc265)
        } loc(#loc263)
      } loc(#loc261)
      %8 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc56)
      %9 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc57)
      cir.store %8, %9 : !u64i, !cir.ptr<!u64i> loc(#loc267)
    } loc(#loc259)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc269)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc62)
      %7 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc63)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc269)
      cir.scope {
        %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc271)
        cir.scope {
          %9 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc70)
          %10 = cir.const #cir.int<5> : !u64i loc(#loc273)
          %11 = cir.cmp(gt, %9, %10) : !u64i, !cir.bool loc(#loc274)
          cir.if %11 {
            %12 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc76)
            %13 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc77)
            %14 = cir.const #cir.int<1> : !u64i loc(#loc276)
            %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc277)
            %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc76)
            %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc278)
            cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc279)
            cir.scope {
              %27 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
              %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc85)
              %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc85)
              %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc281)
              cir.if %30 {
                %31 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc87)
                %32 = cir.const #cir.int<1> : !s32i loc(#loc88)
                %33 = cir.unary(minus, %32) nsw : !s32i, !s32i loc(#loc89)
                cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc87)
              } loc(#loc282)
            } loc(#loc280)
            %18 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc90)
            %19 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
            %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc16)
            %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc16)
            %22 = cir.call @strcpy(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc90)
            %23 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
            cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc93)
            %24 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc94)
            %25 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc95)
            cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc94)
          } else {
            %12 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc19)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc19)
            cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc96)
          } loc(#loc275)
        } loc(#loc272)
      } loc(#loc270)
    } loc(#loc268)
    cir.return loc(#loc21)
  } loc(#loc254)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc284)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc99)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc285)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc101)
    cir.return loc(#loc98)
  } loc(#loc283)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc287)
    %1 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc288)
    %2 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc289)
    cir.store %0, %1 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc288)
    cir.store %0, %2 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc289)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc111)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc111)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc290)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc292)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc116)
      %7 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc117)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc292)
      %8 = cir.const #cir.int<20> : !s32i loc(#loc118)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc118)
      cir.store %9, %5 : !u64i, !cir.ptr<!u64i> loc(#loc293)
      %10 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc120)
      %11 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc121)
      cir.store %10, %11 : !u64i, !cir.ptr<!u64i> loc(#loc294)
    } loc(#loc291)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc296)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc126)
      %7 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc127)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc296)
      cir.scope {
        %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc298)
        cir.scope {
          %9 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc134)
          %10 = cir.const #cir.int<5> : !u64i loc(#loc300)
          %11 = cir.cmp(gt, %9, %10) : !u64i, !cir.bool loc(#loc301)
          cir.if %11 {
            %12 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc140)
            %13 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc141)
            %14 = cir.const #cir.int<1> : !u64i loc(#loc303)
            %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc304)
            %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc140)
            %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc305)
            cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc306)
            cir.scope {
              %27 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
              %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc149)
              %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc149)
              %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc308)
              cir.if %30 {
                %31 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc151)
                %32 = cir.const #cir.int<1> : !s32i loc(#loc152)
                %33 = cir.unary(minus, %32) nsw : !s32i, !s32i loc(#loc153)
                cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc151)
              } loc(#loc309)
            } loc(#loc307)
            %18 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc154)
            %19 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
            %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc156)
            %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc156)
            %22 = cir.call @strcpy(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc154)
            %23 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
            cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc158)
            %24 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc159)
            %25 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc160)
            cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc159)
          } else {
            %12 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc161)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc161)
            cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc162)
          } loc(#loc302)
        } loc(#loc299)
      } loc(#loc297)
    } loc(#loc295)
    cir.return loc(#loc104)
  } loc(#loc286)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc163)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc311)
    %1 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc312)
    %2 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc313)
    cir.store %0, %1 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc312)
    cir.store %0, %2 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc313)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc172)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc172)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc314)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc316)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc177)
      %7 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc178)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc316)
      cir.scope {
        %10 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc318)
        %11 = cir.const #cir.zero : !cir.array<!s8i x 26> loc(#loc318)
        cir.store %11, %10 : !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>> loc(#loc318)
        cir.scope {
          %12 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc185)
          %13 = cir.const #cir.int<3> : !s32i loc(#loc186)
          %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc186)
          %15 = cir.const #cir.int<8> : !u64i loc(#loc186)
          %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc186)
          %17 = cir.const #cir.int<2> : !s32i loc(#loc186)
          %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc186)
          %19 = cir.binop(add, %16, %18) : !u64i loc(#loc186)
          %20 = cir.cast(integral, %19 : !u64i), !s32i loc(#loc186)
          %21 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc247)
          %22 = cir.load %21 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc187)
          %23 = cir.call @fgets(%12, %20, %22) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc188)
          %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc189)
          %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc189)
          %26 = cir.cmp(ne, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc320)
          cir.if %26 {
            %27 = cir.get_global @strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc193)
            %28 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc194)
            %29 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc195)
            %30 = cir.const #cir.int<0> : !s32i loc(#loc196)
            %31 = cir.call @strtoul(%28, %29, %30) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc193)
            cir.store %31, %5 : !u64i, !cir.ptr<!u64i> loc(#loc322)
          } else {
            %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc199)
            %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc199)
            cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc200)
          } loc(#loc321)
        } loc(#loc319)
      } loc(#loc317)
      %8 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc201)
      %9 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc202)
      cir.store %8, %9 : !u64i, !cir.ptr<!u64i> loc(#loc323)
    } loc(#loc315)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc325)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc207)
      %7 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc208)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc325)
      cir.scope {
        %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc327)
        cir.scope {
          %9 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc215)
          %10 = cir.const #cir.int<5> : !u64i loc(#loc329)
          %11 = cir.cmp(gt, %9, %10) : !u64i, !cir.bool loc(#loc330)
          %12 = cir.ternary(%11, true {
            %13 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc219)
            %14 = cir.const #cir.int<100> : !s32i loc(#loc220)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc220)
            %16 = cir.cmp(lt, %13, %15) : !u64i, !cir.bool loc(#loc331)
            %17 = cir.ternary(%16, true {
              %18 = cir.const #true loc(#loc218)
              cir.yield %18 : !cir.bool loc(#loc218)
            }, false {
              %18 = cir.const #false loc(#loc218)
              cir.yield %18 : !cir.bool loc(#loc218)
            }) : (!cir.bool) -> !cir.bool loc(#loc218)
            cir.yield %17 : !cir.bool loc(#loc218)
          }, false {
            %13 = cir.const #false loc(#loc218)
            cir.yield %13 : !cir.bool loc(#loc218)
          }) : (!cir.bool) -> !cir.bool loc(#loc218)
          cir.if %12 {
            %13 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc224)
            %14 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc225)
            %15 = cir.const #cir.int<1> : !u64i loc(#loc333)
            %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc334)
            %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc224)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc335)
            cir.store %18, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc336)
            cir.scope {
              %28 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc232)
              %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc233)
              %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc233)
              %31 = cir.cmp(eq, %28, %30) : !cir.ptr<!s8i>, !cir.bool loc(#loc338)
              cir.if %31 {
                %32 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc235)
                %33 = cir.const #cir.int<1> : !s32i loc(#loc236)
                %34 = cir.unary(minus, %33) nsw : !s32i, !s32i loc(#loc237)
                cir.call @exit(%34) : (!s32i) -> () extra(#fn_attr) loc(#loc235)
              } loc(#loc339)
            } loc(#loc337)
            %19 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc238)
            %20 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc239)
            %21 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc240)
            %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc240)
            %23 = cir.call @strcpy(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc238)
            %24 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc241)
            cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc242)
            %25 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc243)
            %26 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc244)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc244)
            cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc243)
          } else {
            %13 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc163)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc163)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc245)
          } loc(#loc332)
        } loc(#loc328)
      } loc(#loc326)
    } loc(#loc324)
    cir.return loc(#loc165)
  } loc(#loc310)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":181:1)
#loc6 = loc("/usr/include/stdlib.h":183:14)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":49:27)
#loc10 = loc("/usr/include/stdlib.h":672:1)
#loc11 = loc("/usr/include/stdlib.h":672:45)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("/usr/include/string.h":141:1)
#loc15 = loc("/usr/include/string.h":142:14)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":66:34)
#loc17 = loc("/usr/include/stdlib.h":687:1)
#loc18 = loc("/usr/include/stdlib.h":687:32)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":72:27)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":30:1)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":76:1)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":32:5)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":32:12)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":33:5)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":33:25)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":34:5)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":34:25)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":36:12)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":36:5)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":37:5)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":53:5)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":38:9)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":38:24)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":38:23)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":39:9)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":51:9)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":40:13)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":40:49)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":42:13)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":50:13)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":42:23)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":42:36)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":42:53)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":42:17)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":42:63)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":43:13)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":46:13)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":48:13)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":45:24)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":45:32)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":45:45)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":45:51)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":45:17)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":45:52)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":49:17)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":52:21)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":52:10)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":52:9)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":54:5)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":75:5)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":55:9)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":55:24)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":55:23)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":56:9)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":74:9)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":57:13)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":57:20)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":61:13)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":73:13)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":61:17)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":61:24)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":61:43)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":62:13)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":69:13)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":71:13)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":63:36)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":63:43)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":63:48)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":63:59)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":63:60)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":63:17)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":64:17)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":64:49)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":64:21)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":64:33)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":64:39)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":64:40)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":64:46)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":64:45)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":66:17)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":66:24)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":67:27)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":67:17)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":68:17)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":68:22)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":72:17)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":169:1)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":173:1)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":171:5)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":171:13)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":172:5)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":172:13)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":83:1)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":118:1)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":85:5)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":85:12)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":86:5)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":86:25)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":87:5)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":87:25)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":89:12)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":89:5)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":90:5)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":95:5)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":91:9)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":91:24)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":91:23)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":93:16)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":93:9)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":94:21)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":94:10)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":94:9)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":96:5)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":117:5)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":97:9)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":97:24)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":97:23)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":98:9)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":116:9)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":99:13)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":99:20)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":103:13)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":115:13)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":103:17)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":103:24)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":103:43)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":104:13)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":111:13)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":113:13)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":105:36)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":105:43)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":105:48)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":105:59)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":105:60)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":105:17)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":106:17)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":106:49)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":106:21)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":106:33)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":106:39)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":106:40)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":106:46)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":106:45)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":108:17)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":108:24)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":108:34)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":109:27)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":109:17)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":110:17)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":110:22)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":114:27)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":114:17)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":163:27)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":121:1)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":167:1)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":123:5)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":123:12)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":124:5)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":124:25)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":125:5)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":125:25)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":127:12)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":127:5)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":128:5)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":144:5)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":129:9)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":129:24)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":129:23)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":130:9)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":142:9)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":131:13)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":131:49)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":133:13)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":141:13)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":133:23)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":133:36)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":133:53)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":133:17)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":133:63)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":134:13)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":137:13)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":139:13)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":136:24)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":136:32)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":136:45)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":136:51)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":136:17)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":136:52)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":140:27)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":140:17)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":143:21)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":143:10)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":143:9)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":145:5)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":166:5)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":146:9)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":146:24)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":146:23)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":147:9)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":165:9)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":148:13)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":148:20)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":152:13)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":164:13)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":152:17)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":152:24)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":152:43)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":152:45)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":152:48)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":152:55)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":153:13)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":160:13)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":162:13)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":154:36)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":154:43)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":154:48)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":154:59)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":154:60)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":154:17)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":155:17)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":155:49)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":155:21)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":155:33)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":155:39)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":155:40)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":155:46)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":155:45)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":157:17)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":157:24)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":157:34)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":158:27)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":158:17)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":159:17)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":159:22)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_32.c":163:17)
#loc246 = loc(fused[#loc1, #loc2])
#loc247 = loc(fused[#loc3, #loc4])
#loc248 = loc(fused[#loc5, #loc6])
#loc249 = loc(fused[#loc7, #loc8])
#loc250 = loc(fused[#loc10, #loc11])
#loc251 = loc(fused[#loc12, #loc13])
#loc252 = loc(fused[#loc14, #loc15])
#loc253 = loc(fused[#loc17, #loc18])
#loc254 = loc(fused[#loc20, #loc21])
#loc255 = loc(fused[#loc22, #loc23])
#loc256 = loc(fused[#loc24, #loc25])
#loc257 = loc(fused[#loc26, #loc27])
#loc258 = loc(fused[#loc29, #loc28])
#loc259 = loc(fused[#loc30, #loc31])
#loc260 = loc(fused[#loc32, #loc33])
#loc261 = loc(fused[#loc35, #loc36])
#loc262 = loc(fused[#loc37, #loc38])
#loc263 = loc(fused[#loc39, #loc40])
#loc264 = loc(fused[#loc44, #loc45])
#loc265 = loc(fused[#loc46, #loc47, #loc48, #loc40])
#loc266 = loc(fused[#loc53, #loc54])
#loc267 = loc(fused[#loc58, #loc56])
#loc268 = loc(fused[#loc59, #loc60])
#loc269 = loc(fused[#loc61, #loc62])
#loc270 = loc(fused[#loc64, #loc65])
#loc271 = loc(fused[#loc66, #loc67])
#loc272 = loc(fused[#loc68, #loc69])
#loc273 = loc(fused[#loc71, #loc72])
#loc274 = loc(fused[#loc70, #loc72])
#loc275 = loc(fused[#loc73, #loc74, #loc75, #loc69])
#loc276 = loc(fused[#loc78, #loc79])
#loc277 = loc(fused[#loc77, #loc79])
#loc278 = loc(fused[#loc76, #loc80])
#loc279 = loc(fused[#loc81, #loc80])
#loc280 = loc(fused[#loc82, #loc83])
#loc281 = loc(fused[#loc84, #loc85])
#loc282 = loc(fused[#loc86, #loc83])
#loc283 = loc(fused[#loc97, #loc98])
#loc284 = loc(fused[#loc99, #loc100])
#loc285 = loc(fused[#loc101, #loc102])
#loc286 = loc(fused[#loc103, #loc104])
#loc287 = loc(fused[#loc105, #loc106])
#loc288 = loc(fused[#loc107, #loc108])
#loc289 = loc(fused[#loc109, #loc110])
#loc290 = loc(fused[#loc112, #loc111])
#loc291 = loc(fused[#loc113, #loc114])
#loc292 = loc(fused[#loc115, #loc116])
#loc293 = loc(fused[#loc119, #loc118])
#loc294 = loc(fused[#loc122, #loc120])
#loc295 = loc(fused[#loc123, #loc124])
#loc296 = loc(fused[#loc125, #loc126])
#loc297 = loc(fused[#loc128, #loc129])
#loc298 = loc(fused[#loc130, #loc131])
#loc299 = loc(fused[#loc132, #loc133])
#loc300 = loc(fused[#loc135, #loc136])
#loc301 = loc(fused[#loc134, #loc136])
#loc302 = loc(fused[#loc137, #loc138, #loc139, #loc133])
#loc303 = loc(fused[#loc142, #loc143])
#loc304 = loc(fused[#loc141, #loc143])
#loc305 = loc(fused[#loc140, #loc144])
#loc306 = loc(fused[#loc145, #loc144])
#loc307 = loc(fused[#loc146, #loc147])
#loc308 = loc(fused[#loc148, #loc149])
#loc309 = loc(fused[#loc150, #loc147])
#loc310 = loc(fused[#loc164, #loc165])
#loc311 = loc(fused[#loc166, #loc167])
#loc312 = loc(fused[#loc168, #loc169])
#loc313 = loc(fused[#loc170, #loc171])
#loc314 = loc(fused[#loc173, #loc172])
#loc315 = loc(fused[#loc174, #loc175])
#loc316 = loc(fused[#loc176, #loc177])
#loc317 = loc(fused[#loc179, #loc180])
#loc318 = loc(fused[#loc181, #loc182])
#loc319 = loc(fused[#loc183, #loc184])
#loc320 = loc(fused[#loc188, #loc189])
#loc321 = loc(fused[#loc190, #loc191, #loc192, #loc184])
#loc322 = loc(fused[#loc197, #loc198])
#loc323 = loc(fused[#loc203, #loc201])
#loc324 = loc(fused[#loc204, #loc205])
#loc325 = loc(fused[#loc206, #loc207])
#loc326 = loc(fused[#loc209, #loc210])
#loc327 = loc(fused[#loc211, #loc212])
#loc328 = loc(fused[#loc213, #loc214])
#loc329 = loc(fused[#loc216, #loc217])
#loc330 = loc(fused[#loc215, #loc217])
#loc331 = loc(fused[#loc219, #loc220])
#loc332 = loc(fused[#loc221, #loc222, #loc223, #loc214])
#loc333 = loc(fused[#loc226, #loc227])
#loc334 = loc(fused[#loc225, #loc227])
#loc335 = loc(fused[#loc224, #loc228])
#loc336 = loc(fused[#loc229, #loc228])
#loc337 = loc(fused[#loc230, #loc231])
#loc338 = loc(fused[#loc232, #loc233])
#loc339 = loc(fused[#loc234, #loc231])
