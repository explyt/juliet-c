!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc41 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":108:10)
#loc42 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":108:14)
#loc43 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":108:20)
#loc44 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":108:32)
#loc133 = loc(fused[#loc41, #loc42])
#loc134 = loc(fused[#loc43, #loc44])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__fopen_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc117)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc4)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc118)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__fopen_08_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc120)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc121)
    %2 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc13)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc3)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc3)
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc4)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc4)
    %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc13)
    cir.store %7, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc122)
    cir.br ^bb1 loc(#loc123)
  ^bb1:  // pred: ^bb0
    %8 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc124)
    %9 = cir.call %8() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc18)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc18)
    cir.brcond %10 ^bb2, ^bb3 loc(#loc125)
  ^bb2:  // pred: ^bb1
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc21)
    %12 = cir.call @fclose(%11) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc22)
    cir.br ^bb3 loc(#loc17)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc17)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc8)
  } loc(#loc119)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__fopen_08_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc127)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc25)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc128)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc27)
    cir.return loc(#loc24)
  } loc(#loc126)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc129)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc130)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc131)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc35)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc36)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc37)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc38)
  cir.func @main(%arg0: !s32i loc(fused[#loc41, #loc42]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc43, #loc44])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc133)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc134)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc40)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc45)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc45)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc46)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc47)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc47)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc48)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc35)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc35)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    %8 = cir.get_global @CWE690_NULL_Deref_From_Return__fopen_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc135)
    cir.call @CWE690_NULL_Deref_From_Return__fopen_08_good() : () -> () loc(#loc50)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc36)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc37)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    %13 = cir.get_global @CWE690_NULL_Deref_From_Return__fopen_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc136)
    cir.call @CWE690_NULL_Deref_From_Return__fopen_08_bad() : () -> () loc(#loc54)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc38)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc57)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc137)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    cir.return %17 : !s32i loc(#loc137)
  } loc(#loc132)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc60)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc61)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc139)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    cir.return %2 : !s32i loc(#loc139)
  } loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc63)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc141)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc68)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc142)
    %2 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc70)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc71)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc71)
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc72)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc72)
    %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc70)
    cir.store %7, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc143)
    cir.br ^bb1 loc(#loc144)
  ^bb1:  // pred: ^bb0
    %8 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc145)
    %9 = cir.call %8() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc77)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc77)
    cir.brcond %10 ^bb2, ^bb3 loc(#loc146)
  ^bb2:  // pred: ^bb1
    %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc63)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    cir.br ^bb8 loc(#loc80)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc147)
  ^bb4:  // pred: ^bb3
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc85)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc86)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc86)
    %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc148)
    cir.brcond %16 ^bb5, ^bb6 loc(#loc149)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc88)
    %18 = cir.call @fclose(%17) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc89)
    cir.br ^bb6 loc(#loc84)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc84)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc76)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc76)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc65)
  } loc(#loc140)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc91)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc92)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc151)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc151)
    cir.return %2 : !s32i loc(#loc151)
  } loc(#loc150)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc153)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc98)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc154)
    %2 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc100)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc101)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc101)
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc102)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc102)
    %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc100)
    cir.store %7, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc155)
    cir.br ^bb1 loc(#loc156)
  ^bb1:  // pred: ^bb0
    %8 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc157)
    %9 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc107)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc107)
    cir.brcond %10 ^bb2, ^bb7 loc(#loc158)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc159)
  ^bb3:  // pred: ^bb2
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc112)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc113)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc113)
    %14 = cir.cmp(ne, %11, %13) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc160)
    cir.brcond %14 ^bb4, ^bb5 loc(#loc161)
  ^bb4:  // pred: ^bb3
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc115)
    %16 = cir.call @fclose(%15) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc116)
    cir.br ^bb5 loc(#loc111)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc111)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc106)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc106)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc95)
  } loc(#loc152)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__fopen_08.c":0:0)
#loc1 = loc("/usr/include/stdio.h":264:1)
#loc2 = loc("/usr/include/stdio.h":266:3)
#loc3 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":40:18)
#loc4 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":40:30)
#loc5 = loc("/usr/include/stdio.h":184:1)
#loc6 = loc("/usr/include/stdio.h":184:36)
#loc7 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":34:1)
#loc8 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":46:1)
#loc9 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":36:5)
#loc10 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":36:12)
#loc11 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":38:12)
#loc12 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":38:5)
#loc13 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":40:12)
#loc14 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":40:5)
#loc15 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":40:34)
#loc16 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":41:5)
#loc17 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":45:5)
#loc18 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":41:8)
#loc19 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":41:26)
#loc20 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":42:5)
#loc21 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":44:16)
#loc22 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":44:9)
#loc23 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":93:1)
#loc24 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":97:1)
#loc25 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":95:5)
#loc26 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":95:14)
#loc27 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":96:5)
#loc28 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":96:14)
#loc29 = loc("/usr/include/stdlib.h":575:1)
#loc30 = loc("/usr/include/stdlib.h":575:41)
#loc31 = loc("/usr/include/time.h":76:1)
#loc32 = loc("/usr/include/time.h":76:38)
#loc33 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc35 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":113:15)
#loc36 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":115:15)
#loc37 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":118:15)
#loc38 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":120:15)
#loc39 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":108:1)
#loc40 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":123:1)
#loc45 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":109:1)
#loc46 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":111:27)
#loc47 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":111:22)
#loc48 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":111:5)
#loc49 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":113:5)
#loc50 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":114:5)
#loc51 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":114:50)
#loc52 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":115:5)
#loc53 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":118:5)
#loc54 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":119:5)
#loc55 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":119:49)
#loc56 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":120:5)
#loc57 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":122:12)
#loc58 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":122:5)
#loc59 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":22:1)
#loc60 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":25:1)
#loc61 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":24:12)
#loc62 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":24:5)
#loc63 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":63:19)
#loc64 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":53:1)
#loc65 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":73:1)
#loc66 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":55:5)
#loc67 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":55:12)
#loc68 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":57:12)
#loc69 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":57:5)
#loc70 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":59:12)
#loc71 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":59:18)
#loc72 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":59:30)
#loc73 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":59:5)
#loc74 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":59:34)
#loc75 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":60:5)
#loc76 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":72:5)
#loc77 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":60:8)
#loc78 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":60:27)
#loc79 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":61:5)
#loc80 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":64:5)
#loc81 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":66:5)
#loc82 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":63:9)
#loc83 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":68:9)
#loc84 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":71:9)
#loc85 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":68:13)
#loc86 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":68:21)
#loc87 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":69:9)
#loc88 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":70:20)
#loc89 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":70:13)
#loc90 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":27:1)
#loc91 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":30:1)
#loc92 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":29:12)
#loc93 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":29:5)
#loc94 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":76:1)
#loc95 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":91:1)
#loc96 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":78:5)
#loc97 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":78:12)
#loc98 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":80:12)
#loc99 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":80:5)
#loc100 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":82:12)
#loc101 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":82:18)
#loc102 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":82:30)
#loc103 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":82:5)
#loc104 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":82:34)
#loc105 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":83:5)
#loc106 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":90:5)
#loc107 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":83:8)
#loc108 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":83:26)
#loc109 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":84:5)
#loc110 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":86:9)
#loc111 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":89:9)
#loc112 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":86:13)
#loc113 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":86:21)
#loc114 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":87:9)
#loc115 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":88:20)
#loc116 = loc("CWE690_NULL_Deref_From_Return__fopen_08.c":88:13)
#loc117 = loc(fused[#loc1, #loc2])
#loc118 = loc(fused[#loc5, #loc6])
#loc119 = loc(fused[#loc7, #loc8])
#loc120 = loc(fused[#loc9, #loc10])
#loc121 = loc(fused[#loc12, #loc11])
#loc122 = loc(fused[#loc14, #loc15])
#loc123 = loc(fused[#loc16, #loc17])
#loc124 = loc(fused[#loc18, #loc19])
#loc125 = loc(fused[#loc20, #loc17])
#loc126 = loc(fused[#loc23, #loc24])
#loc127 = loc(fused[#loc25, #loc26])
#loc128 = loc(fused[#loc27, #loc28])
#loc129 = loc(fused[#loc29, #loc30])
#loc130 = loc(fused[#loc31, #loc32])
#loc131 = loc(fused[#loc33, #loc34])
#loc132 = loc(fused[#loc39, #loc40])
#loc135 = loc(fused[#loc50, #loc51])
#loc136 = loc(fused[#loc54, #loc55])
#loc137 = loc(fused[#loc58, #loc57])
#loc138 = loc(fused[#loc59, #loc60])
#loc139 = loc(fused[#loc62, #loc61])
#loc140 = loc(fused[#loc64, #loc65])
#loc141 = loc(fused[#loc66, #loc67])
#loc142 = loc(fused[#loc69, #loc68])
#loc143 = loc(fused[#loc73, #loc74])
#loc144 = loc(fused[#loc75, #loc76])
#loc145 = loc(fused[#loc77, #loc78])
#loc146 = loc(fused[#loc79, #loc80, #loc81, #loc76])
#loc147 = loc(fused[#loc83, #loc84])
#loc148 = loc(fused[#loc85, #loc86])
#loc149 = loc(fused[#loc87, #loc84])
#loc150 = loc(fused[#loc90, #loc91])
#loc151 = loc(fused[#loc93, #loc92])
#loc152 = loc(fused[#loc94, #loc95])
#loc153 = loc(fused[#loc96, #loc97])
#loc154 = loc(fused[#loc99, #loc98])
#loc155 = loc(fused[#loc103, #loc104])
#loc156 = loc(fused[#loc105, #loc106])
#loc157 = loc(fused[#loc107, #loc108])
#loc158 = loc(fused[#loc109, #loc106])
#loc159 = loc(fused[#loc110, #loc111])
#loc160 = loc(fused[#loc112, #loc113])
#loc161 = loc(fused[#loc114, #loc111])
