!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc5 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":51:69)
#loc6 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":51:134)
#loc20 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":66:73)
#loc21 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":66:138)
#loc38 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":77:73)
#loc39 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":77:138)
#loc49 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":81:24)
#true = #cir.bool<true> : !cir.bool
!ty__CWE190_Integer_Overflow__int_connect_socket_square_67_structType = !cir.struct<struct "_CWE190_Integer_Overflow__int_connect_socket_square_67_structType" {!s32i}>
#loc64 = loc(fused[#loc5, #loc6])
#loc69 = loc(fused[#loc20, #loc21])
#loc75 = loc(fused[#loc38, #loc39])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_square_67b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printIntLine(!s32i) loc(#loc62)
  cir.func @CWE190_Integer_Overflow__int_connect_socket_square_67b_badSink(%arg0: !ty__CWE190_Integer_Overflow__int_connect_socket_square_67_structType loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc65)
    %1 = cir.alloca !ty__CWE190_Integer_Overflow__int_connect_socket_square_67_structType, !cir.ptr<!ty__CWE190_Integer_Overflow__int_connect_socket_square_67_structType>, ["myStruct", init] {alignment = 4 : i64} loc(#loc64)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc66)
    cir.store %arg0, %1 : !ty__CWE190_Integer_Overflow__int_connect_socket_square_67_structType, !cir.ptr<!ty__CWE190_Integer_Overflow__int_connect_socket_square_67_structType> loc(#loc11)
    %3 = cir.get_member %1[0] {name = "structFirst"} : !cir.ptr<!ty__CWE190_Integer_Overflow__int_connect_socket_square_67_structType> -> !cir.ptr<!s32i> loc(#loc12)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc10)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc66)
    cir.br ^bb1 loc(#loc67)
  ^bb1:  // pred: ^bb0
    %5 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc15)
    %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc8)
    %7 = cir.binop(mul, %5, %6) nsw : !s32i loc(#loc15)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc65)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc16)
    cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc17)
    cir.br ^bb2 loc(#loc14)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc4)
  } loc(#loc63)
  cir.func @CWE190_Integer_Overflow__int_connect_socket_square_67b_goodG2BSink(%arg0: !ty__CWE190_Integer_Overflow__int_connect_socket_square_67_structType loc(fused[#loc20, #loc21])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc70)
    %1 = cir.alloca !ty__CWE190_Integer_Overflow__int_connect_socket_square_67_structType, !cir.ptr<!ty__CWE190_Integer_Overflow__int_connect_socket_square_67_structType>, ["myStruct", init] {alignment = 4 : i64} loc(#loc69)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc71)
    cir.store %arg0, %1 : !ty__CWE190_Integer_Overflow__int_connect_socket_square_67_structType, !cir.ptr<!ty__CWE190_Integer_Overflow__int_connect_socket_square_67_structType> loc(#loc26)
    %3 = cir.get_member %1[0] {name = "structFirst"} : !cir.ptr<!ty__CWE190_Integer_Overflow__int_connect_socket_square_67_structType> -> !cir.ptr<!s32i> loc(#loc12)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc25)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc71)
    cir.br ^bb1 loc(#loc72)
  ^bb1:  // pred: ^bb0
    %5 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc23)
    %7 = cir.binop(mul, %5, %6) nsw : !s32i loc(#loc29)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc70)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc31)
    cir.br ^bb2 loc(#loc28)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc19)
  } loc(#loc68)
  cir.func private @sqrt(!cir.double) -> !cir.double extra(#fn_attr1) loc(#loc32)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc73)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc35)
  cir.func @CWE190_Integer_Overflow__int_connect_socket_square_67b_goodB2GSink(%arg0: !ty__CWE190_Integer_Overflow__int_connect_socket_square_67_structType loc(fused[#loc38, #loc39])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc76)
    %1 = cir.alloca !ty__CWE190_Integer_Overflow__int_connect_socket_square_67_structType, !cir.ptr<!ty__CWE190_Integer_Overflow__int_connect_socket_square_67_structType>, ["myStruct", init] {alignment = 4 : i64} loc(#loc75)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc77)
    cir.store %arg0, %1 : !ty__CWE190_Integer_Overflow__int_connect_socket_square_67_structType, !cir.ptr<!ty__CWE190_Integer_Overflow__int_connect_socket_square_67_structType> loc(#loc44)
    %3 = cir.get_member %1[0] {name = "structFirst"} : !cir.ptr<!ty__CWE190_Integer_Overflow__int_connect_socket_square_67_structType> -> !cir.ptr<!s32i> loc(#loc12)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc43)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc77)
    cir.br ^bb1 loc(#loc78)
  ^bb1:  // pred: ^bb0
    %5 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    %6 = cir.const #cir.int<2147483647> : !s32i loc(#loc48)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc48)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc48)
    %10 = cir.cmp(gt, %5, %9) : !s32i, !cir.bool loc(#loc79)
    cir.brcond %10 ^bb2, ^bb7 loc(#loc49)
  ^bb2:  // pred: ^bb1
    %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc50)
    %12 = cir.abs %11 poison : !s32i loc(#loc51)
    %13 = cir.cast(integral, %12 : !s32i), !s64i loc(#loc51)
    %14 = cir.get_global @sqrt : !cir.ptr<!cir.func<!cir.double (!cir.double)>> loc(#loc52)
    %15 = cir.const #cir.int<2147483647> : !s32i loc(#loc53)
    %16 = cir.cast(int_to_float, %15 : !s32i), !cir.double loc(#loc53)
    %17 = cir.call @sqrt(%16) : (!cir.double) -> !cir.double extra(#fn_attr1) loc(#loc52)
    %18 = cir.cast(float_to_int, %17 : !cir.double), !s64i loc(#loc52)
    %19 = cir.cmp(lt, %13, %18) : !s64i, !cir.bool loc(#loc80)
    cir.brcond %19 ^bb3, ^bb4 loc(#loc49)
  ^bb3:  // pred: ^bb2
    %20 = cir.const #true loc(#loc49)
    cir.br ^bb5(%20 : !cir.bool) loc(#loc49)
  ^bb4:  // pred: ^bb2
    %21 = cir.const #false loc(#loc49)
    cir.br ^bb5(%21 : !cir.bool) loc(#loc49)
  ^bb5(%22: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":81:24)):  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc49)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8(%22 : !cir.bool) loc(#loc49)
  ^bb7:  // pred: ^bb1
    %23 = cir.const #false loc(#loc49)
    cir.br ^bb8(%23 : !cir.bool) loc(#loc49)
  ^bb8(%24: !cir.bool loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":81:24)):  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc49)
  ^bb9:  // pred: ^bb8
    cir.brcond %24 ^bb10, ^bb11 loc(#loc81)
  ^bb10:  // pred: ^bb9
    %25 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc58)
    %26 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc41)
    %27 = cir.binop(mul, %25, %26) nsw : !s32i loc(#loc58)
    cir.store %27, %0 : !s32i, !cir.ptr<!s32i> loc(#loc76)
    %28 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc59)
    cir.call @printIntLine(%28) : (!s32i) -> () loc(#loc60)
    cir.br ^bb12 loc(#loc56)
  ^bb11:  // pred: ^bb9
    %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc35)
    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc35)
    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    cir.br ^bb12 loc(#loc46)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc46)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc37)
  } loc(#loc74)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s02/CWE190_Integer_Overflow__int_connect_socket_square_67b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":51:1)
#loc4 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":59:1)
#loc7 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":56:9)
#loc8 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":56:29)
#loc9 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":53:5)
#loc10 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":53:25)
#loc11 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":52:1)
#loc12 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":46:9)
#loc13 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":54:5)
#loc14 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":58:5)
#loc15 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":56:22)
#loc16 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":57:22)
#loc17 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":57:9)
#loc18 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":66:1)
#loc19 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":74:1)
#loc22 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":71:9)
#loc23 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":71:29)
#loc24 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":68:5)
#loc25 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":68:25)
#loc26 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":67:1)
#loc27 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":69:5)
#loc28 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":73:5)
#loc29 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":71:22)
#loc30 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":72:22)
#loc31 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":72:9)
#loc32 = loc("/usr/include/bits/mathcalls.h":158:1)
#loc33 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc35 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":88:19)
#loc36 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":77:1)
#loc37 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":90:1)
#loc40 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":83:9)
#loc41 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":83:29)
#loc42 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":79:5)
#loc43 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":79:25)
#loc44 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":78:1)
#loc45 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":81:5)
#loc46 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":89:5)
#loc47 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":81:9)
#loc48 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":81:16)
#loc50 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":81:31)
#loc51 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":81:27)
#loc52 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":81:45)
#loc53 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":81:58)
#loc54 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":81:65)
#loc55 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":82:5)
#loc56 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":85:5)
#loc57 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":87:5)
#loc58 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":83:22)
#loc59 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":84:22)
#loc60 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":84:9)
#loc61 = loc("CWE190_Integer_Overflow__int_connect_socket_square_67b.c":88:9)
#loc62 = loc(fused[#loc1, #loc2])
#loc63 = loc(fused[#loc3, #loc4])
#loc65 = loc(fused[#loc7, #loc8])
#loc66 = loc(fused[#loc9, #loc10])
#loc67 = loc(fused[#loc13, #loc14])
#loc68 = loc(fused[#loc18, #loc19])
#loc70 = loc(fused[#loc22, #loc23])
#loc71 = loc(fused[#loc24, #loc25])
#loc72 = loc(fused[#loc27, #loc28])
#loc73 = loc(fused[#loc33, #loc34])
#loc74 = loc(fused[#loc36, #loc37])
#loc76 = loc(fused[#loc40, #loc41])
#loc77 = loc(fused[#loc42, #loc43])
#loc78 = loc(fused[#loc45, #loc46])
#loc79 = loc(fused[#loc47, #loc48])
#loc80 = loc(fused[#loc51, #loc54])
#loc81 = loc(fused[#loc55, #loc56, #loc57, #loc46])
