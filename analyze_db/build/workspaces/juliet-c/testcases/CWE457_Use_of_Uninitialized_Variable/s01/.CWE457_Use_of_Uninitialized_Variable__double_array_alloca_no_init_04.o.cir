!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printDoubleLine(!cir.double) loc(#loc255)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc257)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc7)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc7)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc7)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc7)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc7)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc7)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc7)
    cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc258)
    cir.scope {
      %8 = cir.const #cir.int<1> : !s32i loc(#loc11)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc11)
      cir.if %9 {
      } loc(#loc260)
    } loc(#loc259)
    cir.scope {
      %8 = cir.const #cir.int<1> : !s32i loc(#loc15)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc15)
      cir.if %9 {
        cir.scope {
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc264)
          cir.scope {
            %11 = cir.const #cir.int<0> : !s32i loc(#loc23)
            cir.store %11, %10 : !s32i, !cir.ptr<!s32i> loc(#loc266)
            cir.for : cond {
              %12 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc25)
              %13 = cir.const #cir.int<10> : !s32i loc(#loc26)
              %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc267)
              cir.condition(%14) loc(#loc27)
            } body {
              cir.scope {
                %12 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc29)
                %13 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc30)
                %14 = cir.ptr_stride(%12 : !cir.ptr<!cir.double>, %13 : !s32i), !cir.ptr<!cir.double> loc(#loc31)
                %15 = cir.load %14 : !cir.ptr<!cir.double>, !cir.double loc(#loc29)
                cir.call @printDoubleLine(%15) : (!cir.double) -> () loc(#loc32)
              } loc(#loc268)
              cir.yield loc(#loc22)
            } step {
              %12 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc33)
              %13 = cir.unary(inc, %12) nsw : !s32i, !s32i loc(#loc34)
              cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc269)
              cir.yield loc(#loc265)
            } loc(#loc265)
          } loc(#loc265)
        } loc(#loc263)
      } loc(#loc262)
    } loc(#loc261)
    cir.return loc(#loc4)
  } loc(#loc256)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc271)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc37)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc272)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc39)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc273)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc41)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc274)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc43)
    cir.return loc(#loc36)
  } loc(#loc270)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc275)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc47)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc277)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc52)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc52)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc52)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc52)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc52)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc52)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc52)
    cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc278)
    cir.scope {
      %8 = cir.const #cir.int<1> : !s32i loc(#loc56)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc56)
      cir.if %9 {
      } loc(#loc280)
    } loc(#loc279)
    cir.scope {
      %8 = cir.const #cir.int<0> : !s32i loc(#loc60)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc60)
      cir.if %9 {
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc47)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc47)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc64)
      } else {
        cir.scope {
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc284)
          cir.scope {
            %11 = cir.const #cir.int<0> : !s32i loc(#loc71)
            cir.store %11, %10 : !s32i, !cir.ptr<!s32i> loc(#loc286)
            cir.for : cond {
              %12 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc73)
              %13 = cir.const #cir.int<10> : !s32i loc(#loc74)
              %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc287)
              cir.condition(%14) loc(#loc75)
            } body {
              cir.scope {
                %12 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc77)
                %13 = cir.cast(int_to_float, %12 : !s32i), !cir.double loc(#loc77)
                %14 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc78)
                %15 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc79)
                %16 = cir.ptr_stride(%14 : !cir.ptr<!cir.double>, %15 : !s32i), !cir.ptr<!cir.double> loc(#loc80)
                cir.store %13, %16 : !cir.double, !cir.ptr<!cir.double> loc(#loc289)
              } loc(#loc288)
              cir.yield loc(#loc70)
            } step {
              %12 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc81)
              %13 = cir.unary(inc, %12) nsw : !s32i, !s32i loc(#loc82)
              cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc290)
              cir.yield loc(#loc285)
            } loc(#loc285)
          } loc(#loc285)
        } loc(#loc283)
        cir.scope {
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc292)
          cir.scope {
            %11 = cir.const #cir.int<0> : !s32i loc(#loc89)
            cir.store %11, %10 : !s32i, !cir.ptr<!s32i> loc(#loc294)
            cir.for : cond {
              %12 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc91)
              %13 = cir.const #cir.int<10> : !s32i loc(#loc92)
              %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc295)
              cir.condition(%14) loc(#loc93)
            } body {
              cir.scope {
                %12 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc95)
                %13 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc96)
                %14 = cir.ptr_stride(%12 : !cir.ptr<!cir.double>, %13 : !s32i), !cir.ptr<!cir.double> loc(#loc97)
                %15 = cir.load %14 : !cir.ptr<!cir.double>, !cir.double loc(#loc95)
                cir.call @printDoubleLine(%15) : (!cir.double) -> () loc(#loc98)
              } loc(#loc296)
              cir.yield loc(#loc88)
            } step {
              %12 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc99)
              %13 = cir.unary(inc, %12) nsw : !s32i, !s32i loc(#loc100)
              cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc297)
              cir.yield loc(#loc293)
            } loc(#loc293)
          } loc(#loc293)
        } loc(#loc291)
      } loc(#loc282)
    } loc(#loc281)
    cir.return loc(#loc49)
  } loc(#loc276)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc299)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc105)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc105)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc105)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc105)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc105)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc105)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc105)
    cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc300)
    cir.scope {
      %8 = cir.const #cir.int<1> : !s32i loc(#loc109)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc109)
      cir.if %9 {
      } loc(#loc302)
    } loc(#loc301)
    cir.scope {
      %8 = cir.const #cir.int<1> : !s32i loc(#loc113)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc113)
      cir.if %9 {
        cir.scope {
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc306)
          cir.scope {
            %11 = cir.const #cir.int<0> : !s32i loc(#loc121)
            cir.store %11, %10 : !s32i, !cir.ptr<!s32i> loc(#loc308)
            cir.for : cond {
              %12 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc123)
              %13 = cir.const #cir.int<10> : !s32i loc(#loc124)
              %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc309)
              cir.condition(%14) loc(#loc125)
            } body {
              cir.scope {
                %12 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc127)
                %13 = cir.cast(int_to_float, %12 : !s32i), !cir.double loc(#loc127)
                %14 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc128)
                %15 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc129)
                %16 = cir.ptr_stride(%14 : !cir.ptr<!cir.double>, %15 : !s32i), !cir.ptr<!cir.double> loc(#loc130)
                cir.store %13, %16 : !cir.double, !cir.ptr<!cir.double> loc(#loc311)
              } loc(#loc310)
              cir.yield loc(#loc120)
            } step {
              %12 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc131)
              %13 = cir.unary(inc, %12) nsw : !s32i, !s32i loc(#loc132)
              cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc312)
              cir.yield loc(#loc307)
            } loc(#loc307)
          } loc(#loc307)
        } loc(#loc305)
        cir.scope {
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc314)
          cir.scope {
            %11 = cir.const #cir.int<0> : !s32i loc(#loc139)
            cir.store %11, %10 : !s32i, !cir.ptr<!s32i> loc(#loc316)
            cir.for : cond {
              %12 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc141)
              %13 = cir.const #cir.int<10> : !s32i loc(#loc142)
              %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc317)
              cir.condition(%14) loc(#loc143)
            } body {
              cir.scope {
                %12 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc145)
                %13 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc146)
                %14 = cir.ptr_stride(%12 : !cir.ptr<!cir.double>, %13 : !s32i), !cir.ptr<!cir.double> loc(#loc147)
                %15 = cir.load %14 : !cir.ptr<!cir.double>, !cir.double loc(#loc145)
                cir.call @printDoubleLine(%15) : (!cir.double) -> () loc(#loc148)
              } loc(#loc318)
              cir.yield loc(#loc138)
            } step {
              %12 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc149)
              %13 = cir.unary(inc, %12) nsw : !s32i, !s32i loc(#loc150)
              cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc319)
              cir.yield loc(#loc315)
            } loc(#loc315)
          } loc(#loc315)
        } loc(#loc313)
      } loc(#loc304)
    } loc(#loc303)
    cir.return loc(#loc102)
  } loc(#loc298)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc321)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc155)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc155)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc155)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc155)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc155)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc155)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc155)
    cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc322)
    cir.scope {
      %8 = cir.const #cir.int<0> : !s32i loc(#loc159)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc159)
      cir.if %9 {
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc163)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc163)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc164)
      } else {
        cir.scope {
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc326)
          cir.scope {
            %11 = cir.const #cir.int<0> : !s32i loc(#loc171)
            cir.store %11, %10 : !s32i, !cir.ptr<!s32i> loc(#loc328)
            cir.for : cond {
              %12 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc173)
              %13 = cir.const #cir.int<10> : !s32i loc(#loc174)
              %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc329)
              cir.condition(%14) loc(#loc175)
            } body {
              cir.scope {
                %12 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc177)
                %13 = cir.cast(int_to_float, %12 : !s32i), !cir.double loc(#loc177)
                %14 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc178)
                %15 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc179)
                %16 = cir.ptr_stride(%14 : !cir.ptr<!cir.double>, %15 : !s32i), !cir.ptr<!cir.double> loc(#loc180)
                cir.store %13, %16 : !cir.double, !cir.ptr<!cir.double> loc(#loc331)
              } loc(#loc330)
              cir.yield loc(#loc170)
            } step {
              %12 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc181)
              %13 = cir.unary(inc, %12) nsw : !s32i, !s32i loc(#loc182)
              cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc332)
              cir.yield loc(#loc327)
            } loc(#loc327)
          } loc(#loc327)
        } loc(#loc325)
      } loc(#loc324)
    } loc(#loc323)
    cir.scope {
      %8 = cir.const #cir.int<1> : !s32i loc(#loc185)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc185)
      cir.if %9 {
        cir.scope {
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc336)
          cir.scope {
            %11 = cir.const #cir.int<0> : !s32i loc(#loc193)
            cir.store %11, %10 : !s32i, !cir.ptr<!s32i> loc(#loc338)
            cir.for : cond {
              %12 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc195)
              %13 = cir.const #cir.int<10> : !s32i loc(#loc196)
              %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc339)
              cir.condition(%14) loc(#loc197)
            } body {
              cir.scope {
                %12 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc199)
                %13 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc200)
                %14 = cir.ptr_stride(%12 : !cir.ptr<!cir.double>, %13 : !s32i), !cir.ptr<!cir.double> loc(#loc201)
                %15 = cir.load %14 : !cir.ptr<!cir.double>, !cir.double loc(#loc199)
                cir.call @printDoubleLine(%15) : (!cir.double) -> () loc(#loc202)
              } loc(#loc340)
              cir.yield loc(#loc192)
            } step {
              %12 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc203)
              %13 = cir.unary(inc, %12) nsw : !s32i, !s32i loc(#loc204)
              cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc341)
              cir.yield loc(#loc337)
            } loc(#loc337)
          } loc(#loc337)
        } loc(#loc335)
      } loc(#loc334)
    } loc(#loc333)
    cir.return loc(#loc152)
  } loc(#loc320)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc343)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc209)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc209)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc209)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc209)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc209)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc209)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc209)
    cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc344)
    cir.scope {
      %8 = cir.const #cir.int<1> : !s32i loc(#loc213)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc213)
      cir.if %9 {
        cir.scope {
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc348)
          cir.scope {
            %11 = cir.const #cir.int<0> : !s32i loc(#loc221)
            cir.store %11, %10 : !s32i, !cir.ptr<!s32i> loc(#loc350)
            cir.for : cond {
              %12 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc223)
              %13 = cir.const #cir.int<10> : !s32i loc(#loc224)
              %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc351)
              cir.condition(%14) loc(#loc225)
            } body {
              cir.scope {
                %12 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc227)
                %13 = cir.cast(int_to_float, %12 : !s32i), !cir.double loc(#loc227)
                %14 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc228)
                %15 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc229)
                %16 = cir.ptr_stride(%14 : !cir.ptr<!cir.double>, %15 : !s32i), !cir.ptr<!cir.double> loc(#loc230)
                cir.store %13, %16 : !cir.double, !cir.ptr<!cir.double> loc(#loc353)
              } loc(#loc352)
              cir.yield loc(#loc220)
            } step {
              %12 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc231)
              %13 = cir.unary(inc, %12) nsw : !s32i, !s32i loc(#loc232)
              cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc354)
              cir.yield loc(#loc349)
            } loc(#loc349)
          } loc(#loc349)
        } loc(#loc347)
      } loc(#loc346)
    } loc(#loc345)
    cir.scope {
      %8 = cir.const #cir.int<1> : !s32i loc(#loc235)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc235)
      cir.if %9 {
        cir.scope {
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc358)
          cir.scope {
            %11 = cir.const #cir.int<0> : !s32i loc(#loc243)
            cir.store %11, %10 : !s32i, !cir.ptr<!s32i> loc(#loc360)
            cir.for : cond {
              %12 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc245)
              %13 = cir.const #cir.int<10> : !s32i loc(#loc246)
              %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc361)
              cir.condition(%14) loc(#loc247)
            } body {
              cir.scope {
                %12 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc249)
                %13 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc250)
                %14 = cir.ptr_stride(%12 : !cir.ptr<!cir.double>, %13 : !s32i), !cir.ptr<!cir.double> loc(#loc251)
                %15 = cir.load %14 : !cir.ptr<!cir.double>, !cir.double loc(#loc249)
                cir.call @printDoubleLine(%15) : (!cir.double) -> () loc(#loc252)
              } loc(#loc362)
              cir.yield loc(#loc242)
            } step {
              %12 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc253)
              %13 = cir.unary(inc, %12) nsw : !s32i, !s32i loc(#loc254)
              cir.store %13, %10 : !s32i, !cir.ptr<!s32i> loc(#loc363)
              cir.yield loc(#loc359)
            } loc(#loc359)
          } loc(#loc359)
        } loc(#loc357)
      } loc(#loc356)
    } loc(#loc355)
    cir.return loc(#loc206)
  } loc(#loc342)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":38:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":38:41)
#loc3 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":28:1)
#loc4 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":48:1)
#loc5 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":30:5)
#loc6 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":30:14)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":31:22)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":31:5)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":32:5)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":36:5)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":32:8)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":33:5)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":37:5)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":47:5)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":37:8)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":38:5)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":40:9)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":46:9)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":41:13)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":41:17)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":42:13)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":45:13)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":42:19)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":42:17)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":42:22)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":42:24)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":42:23)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":43:13)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":44:33)
#loc30 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":44:38)
#loc31 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":44:39)
#loc32 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":44:17)
#loc33 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":42:29)
#loc34 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":42:28)
#loc35 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":182:1)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":188:1)
#loc37 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":184:5)
#loc38 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":184:14)
#loc39 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":185:5)
#loc40 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":185:14)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":186:5)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":186:14)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":187:5)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":187:14)
#loc45 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc46 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":67:19)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":55:1)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":87:1)
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":57:5)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":57:14)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":58:22)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":58:5)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":59:5)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":63:5)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":59:8)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":60:5)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":64:5)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":86:5)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":64:8)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":65:5)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":68:5)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":70:5)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":67:9)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":72:9)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":78:9)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":73:13)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":73:17)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":74:13)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":77:13)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":74:19)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":74:17)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":74:22)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":74:24)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":74:23)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":75:13)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":76:35)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":76:17)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":76:22)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":76:23)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":74:29)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":74:28)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":79:9)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":85:9)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":80:13)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":80:17)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":81:13)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":84:13)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":81:19)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":81:17)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":81:22)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":81:24)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":81:23)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":82:13)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":83:33)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":83:38)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":83:39)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":83:17)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":81:29)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":81:28)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":90:1)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":117:1)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":92:5)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":92:14)
#loc105 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":93:22)
#loc106 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":93:5)
#loc107 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":94:5)
#loc108 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":98:5)
#loc109 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":94:8)
#loc110 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":95:5)
#loc111 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":99:5)
#loc112 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":116:5)
#loc113 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":99:8)
#loc114 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":100:5)
#loc115 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":102:9)
#loc116 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":108:9)
#loc117 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":103:13)
#loc118 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":103:17)
#loc119 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":104:13)
#loc120 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":107:13)
#loc121 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":104:19)
#loc122 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":104:17)
#loc123 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":104:22)
#loc124 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":104:24)
#loc125 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":104:23)
#loc126 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":105:13)
#loc127 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":106:35)
#loc128 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":106:17)
#loc129 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":106:22)
#loc130 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":106:23)
#loc131 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":104:29)
#loc132 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":104:28)
#loc133 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":109:9)
#loc134 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":115:9)
#loc135 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":110:13)
#loc136 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":110:17)
#loc137 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":111:13)
#loc138 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":114:13)
#loc139 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":111:19)
#loc140 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":111:17)
#loc141 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":111:22)
#loc142 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":111:24)
#loc143 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":111:23)
#loc144 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":112:13)
#loc145 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":113:33)
#loc146 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":113:38)
#loc147 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":113:39)
#loc148 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":113:17)
#loc149 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":111:29)
#loc150 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":111:28)
#loc151 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":120:1)
#loc152 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":151:1)
#loc153 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":122:5)
#loc154 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":122:14)
#loc155 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":123:22)
#loc156 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":123:5)
#loc157 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":124:5)
#loc158 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":139:5)
#loc159 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":124:8)
#loc160 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":125:5)
#loc161 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":128:5)
#loc162 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":130:5)
#loc163 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":127:19)
#loc164 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":127:9)
#loc165 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":132:9)
#loc166 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":138:9)
#loc167 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":133:13)
#loc168 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":133:17)
#loc169 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":134:13)
#loc170 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":137:13)
#loc171 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":134:19)
#loc172 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":134:17)
#loc173 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":134:22)
#loc174 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":134:24)
#loc175 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":134:23)
#loc176 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":135:13)
#loc177 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":136:35)
#loc178 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":136:17)
#loc179 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":136:22)
#loc180 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":136:23)
#loc181 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":134:29)
#loc182 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":134:28)
#loc183 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":140:5)
#loc184 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":150:5)
#loc185 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":140:8)
#loc186 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":141:5)
#loc187 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":143:9)
#loc188 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":149:9)
#loc189 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":144:13)
#loc190 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":144:17)
#loc191 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":145:13)
#loc192 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":148:13)
#loc193 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":145:19)
#loc194 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":145:17)
#loc195 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":145:22)
#loc196 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":145:24)
#loc197 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":145:23)
#loc198 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":146:13)
#loc199 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":147:33)
#loc200 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":147:38)
#loc201 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":147:39)
#loc202 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":147:17)
#loc203 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":145:29)
#loc204 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":145:28)
#loc205 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":154:1)
#loc206 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":180:1)
#loc207 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":156:5)
#loc208 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":156:14)
#loc209 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":157:22)
#loc210 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":157:5)
#loc211 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":158:5)
#loc212 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":168:5)
#loc213 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":158:8)
#loc214 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":159:5)
#loc215 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":161:9)
#loc216 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":167:9)
#loc217 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":162:13)
#loc218 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":162:17)
#loc219 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":163:13)
#loc220 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":166:13)
#loc221 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":163:19)
#loc222 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":163:17)
#loc223 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":163:22)
#loc224 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":163:24)
#loc225 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":163:23)
#loc226 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":164:13)
#loc227 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":165:35)
#loc228 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":165:17)
#loc229 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":165:22)
#loc230 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":165:23)
#loc231 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":163:29)
#loc232 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":163:28)
#loc233 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":169:5)
#loc234 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":179:5)
#loc235 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":169:8)
#loc236 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":170:5)
#loc237 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":172:9)
#loc238 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":178:9)
#loc239 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":173:13)
#loc240 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":173:17)
#loc241 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":174:13)
#loc242 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":177:13)
#loc243 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":174:19)
#loc244 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":174:17)
#loc245 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":174:22)
#loc246 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":174:24)
#loc247 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":174:23)
#loc248 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":175:13)
#loc249 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":176:33)
#loc250 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":176:38)
#loc251 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":176:39)
#loc252 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":176:17)
#loc253 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":174:29)
#loc254 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_04.c":174:28)
#loc255 = loc(fused[#loc1, #loc2])
#loc256 = loc(fused[#loc3, #loc4])
#loc257 = loc(fused[#loc5, #loc6])
#loc258 = loc(fused[#loc8, #loc7])
#loc259 = loc(fused[#loc9, #loc10])
#loc260 = loc(fused[#loc12, #loc10])
#loc261 = loc(fused[#loc13, #loc14])
#loc262 = loc(fused[#loc16, #loc14])
#loc263 = loc(fused[#loc17, #loc18])
#loc264 = loc(fused[#loc19, #loc20])
#loc265 = loc(fused[#loc21, #loc22])
#loc266 = loc(fused[#loc24, #loc23])
#loc267 = loc(fused[#loc25, #loc26])
#loc268 = loc(fused[#loc28, #loc22])
#loc269 = loc(fused[#loc34, #loc33])
#loc270 = loc(fused[#loc35, #loc36])
#loc271 = loc(fused[#loc37, #loc38])
#loc272 = loc(fused[#loc39, #loc40])
#loc273 = loc(fused[#loc41, #loc42])
#loc274 = loc(fused[#loc43, #loc44])
#loc275 = loc(fused[#loc45, #loc46])
#loc276 = loc(fused[#loc48, #loc49])
#loc277 = loc(fused[#loc50, #loc51])
#loc278 = loc(fused[#loc53, #loc52])
#loc279 = loc(fused[#loc54, #loc55])
#loc280 = loc(fused[#loc57, #loc55])
#loc281 = loc(fused[#loc58, #loc59])
#loc282 = loc(fused[#loc61, #loc62, #loc63, #loc59])
#loc283 = loc(fused[#loc65, #loc66])
#loc284 = loc(fused[#loc67, #loc68])
#loc285 = loc(fused[#loc69, #loc70])
#loc286 = loc(fused[#loc72, #loc71])
#loc287 = loc(fused[#loc73, #loc74])
#loc288 = loc(fused[#loc76, #loc70])
#loc289 = loc(fused[#loc78, #loc77])
#loc290 = loc(fused[#loc82, #loc81])
#loc291 = loc(fused[#loc83, #loc84])
#loc292 = loc(fused[#loc85, #loc86])
#loc293 = loc(fused[#loc87, #loc88])
#loc294 = loc(fused[#loc90, #loc89])
#loc295 = loc(fused[#loc91, #loc92])
#loc296 = loc(fused[#loc94, #loc88])
#loc297 = loc(fused[#loc100, #loc99])
#loc298 = loc(fused[#loc101, #loc102])
#loc299 = loc(fused[#loc103, #loc104])
#loc300 = loc(fused[#loc106, #loc105])
#loc301 = loc(fused[#loc107, #loc108])
#loc302 = loc(fused[#loc110, #loc108])
#loc303 = loc(fused[#loc111, #loc112])
#loc304 = loc(fused[#loc114, #loc112])
#loc305 = loc(fused[#loc115, #loc116])
#loc306 = loc(fused[#loc117, #loc118])
#loc307 = loc(fused[#loc119, #loc120])
#loc308 = loc(fused[#loc122, #loc121])
#loc309 = loc(fused[#loc123, #loc124])
#loc310 = loc(fused[#loc126, #loc120])
#loc311 = loc(fused[#loc128, #loc127])
#loc312 = loc(fused[#loc132, #loc131])
#loc313 = loc(fused[#loc133, #loc134])
#loc314 = loc(fused[#loc135, #loc136])
#loc315 = loc(fused[#loc137, #loc138])
#loc316 = loc(fused[#loc140, #loc139])
#loc317 = loc(fused[#loc141, #loc142])
#loc318 = loc(fused[#loc144, #loc138])
#loc319 = loc(fused[#loc150, #loc149])
#loc320 = loc(fused[#loc151, #loc152])
#loc321 = loc(fused[#loc153, #loc154])
#loc322 = loc(fused[#loc156, #loc155])
#loc323 = loc(fused[#loc157, #loc158])
#loc324 = loc(fused[#loc160, #loc161, #loc162, #loc158])
#loc325 = loc(fused[#loc165, #loc166])
#loc326 = loc(fused[#loc167, #loc168])
#loc327 = loc(fused[#loc169, #loc170])
#loc328 = loc(fused[#loc172, #loc171])
#loc329 = loc(fused[#loc173, #loc174])
#loc330 = loc(fused[#loc176, #loc170])
#loc331 = loc(fused[#loc178, #loc177])
#loc332 = loc(fused[#loc182, #loc181])
#loc333 = loc(fused[#loc183, #loc184])
#loc334 = loc(fused[#loc186, #loc184])
#loc335 = loc(fused[#loc187, #loc188])
#loc336 = loc(fused[#loc189, #loc190])
#loc337 = loc(fused[#loc191, #loc192])
#loc338 = loc(fused[#loc194, #loc193])
#loc339 = loc(fused[#loc195, #loc196])
#loc340 = loc(fused[#loc198, #loc192])
#loc341 = loc(fused[#loc204, #loc203])
#loc342 = loc(fused[#loc205, #loc206])
#loc343 = loc(fused[#loc207, #loc208])
#loc344 = loc(fused[#loc210, #loc209])
#loc345 = loc(fused[#loc211, #loc212])
#loc346 = loc(fused[#loc214, #loc212])
#loc347 = loc(fused[#loc215, #loc216])
#loc348 = loc(fused[#loc217, #loc218])
#loc349 = loc(fused[#loc219, #loc220])
#loc350 = loc(fused[#loc222, #loc221])
#loc351 = loc(fused[#loc223, #loc224])
#loc352 = loc(fused[#loc226, #loc220])
#loc353 = loc(fused[#loc228, #loc227])
#loc354 = loc(fused[#loc232, #loc231])
#loc355 = loc(fused[#loc233, #loc234])
#loc356 = loc(fused[#loc236, #loc234])
#loc357 = loc(fused[#loc237, #loc238])
#loc358 = loc(fused[#loc239, #loc240])
#loc359 = loc(fused[#loc241, #loc242])
#loc360 = loc(fused[#loc244, #loc243])
#loc361 = loc(fused[#loc245, #loc246])
#loc362 = loc(fused[#loc248, #loc242])
#loc363 = loc(fused[#loc254, #loc253])
