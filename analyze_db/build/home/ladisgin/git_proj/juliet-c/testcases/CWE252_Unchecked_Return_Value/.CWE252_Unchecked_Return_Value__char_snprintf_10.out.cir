!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc43 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":109:10)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":109:14)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":109:20)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":109:32)
#loc137 = loc(fused[#loc43, #loc44])
#loc138 = loc(fused[#loc45, #loc46])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_snprintf_10.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" external @globalTrue : !s32i {alignment = 4 : i64} loc(#loc119)
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc120)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\0A\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc5)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc6)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_snprintf_10_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc119)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc11)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc11)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc125)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc126)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc125)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc125)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc18)
          cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc126)
          %7 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc19)
          %8 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
          %9 = cir.const #cir.int<100> : !s32i loc(#loc21)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc21)
          %11 = cir.const #cir.int<6> : !u64i loc(#loc127)
          %12 = cir.binop(sub, %10, %11) : !u64i loc(#loc128)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc24)
          %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc24)
          %15 = cir.binop(sub, %12, %14) : !u64i loc(#loc129)
          %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc5)
          %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc5)
          %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc6)
          %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc6)
          %20 = cir.call @snprintf(%8, %15, %17, %19) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc19)
        } loc(#loc124)
      } loc(#loc123)
    } loc(#loc122)
    cir.return loc(#loc8)
  } loc(#loc121)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_snprintf_10_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc131)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc27)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc132)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc29)
    cir.return loc(#loc26)
  } loc(#loc130)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc133)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc134)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc135)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc37)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc38)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc39)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc40)
  cir.func @main(%arg0: !s32i loc(fused[#loc43, #loc44]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc45, #loc46])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc137)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc138)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc42)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc47)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc47)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc48)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc49)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc49)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc50)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc37)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    %8 = cir.get_global @CWE252_Unchecked_Return_Value__char_snprintf_10_good : !cir.ptr<!cir.func<!void ()>> loc(#loc139)
    cir.call @CWE252_Unchecked_Return_Value__char_snprintf_10_good() : () -> () loc(#loc52)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc38)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc39)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    %13 = cir.get_global @CWE252_Unchecked_Return_Value__char_snprintf_10_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc140)
    cir.call @CWE252_Unchecked_Return_Value__char_snprintf_10_bad() : () -> () loc(#loc56)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc40)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc59)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc141)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc141)
    cir.return %17 : !s32i loc(#loc141)
  } loc(#loc136)
  cir.global "private" external @globalFalse : !s32i {alignment = 4 : i64} loc(#loc142)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc63)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"snprintf failed!\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc64)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc142)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc69)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc69)
      cir.if %2 {
        %3 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc63)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc63)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc73)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc147)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc148)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc147)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc147)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc79)
          cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc148)
          cir.scope {
            %7 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc82)
            %8 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
            %9 = cir.const #cir.int<100> : !s32i loc(#loc84)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc84)
            %11 = cir.const #cir.int<6> : !u64i loc(#loc150)
            %12 = cir.binop(sub, %10, %11) : !u64i loc(#loc151)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc87)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc87)
            %15 = cir.binop(sub, %12, %14) : !u64i loc(#loc152)
            %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc88)
            %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc88)
            %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc89)
            %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc89)
            %20 = cir.call @snprintf(%8, %15, %17, %19) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc82)
            %21 = cir.const #cir.int<0> : !s32i loc(#loc90)
            %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc153)
            cir.if %22 {
              %23 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc64)
              %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc64)
              cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc92)
            } loc(#loc154)
          } loc(#loc149)
        } loc(#loc146)
      } loc(#loc145)
    } loc(#loc144)
    cir.return loc(#loc66)
  } loc(#loc143)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc119)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc97)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc97)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc159)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc160)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc159)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc159)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc104)
          cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc160)
          cir.scope {
            %7 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc107)
            %8 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
            %9 = cir.const #cir.int<100> : !s32i loc(#loc109)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc109)
            %11 = cir.const #cir.int<6> : !u64i loc(#loc162)
            %12 = cir.binop(sub, %10, %11) : !u64i loc(#loc163)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc112)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc112)
            %15 = cir.binop(sub, %12, %14) : !u64i loc(#loc164)
            %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc113)
            %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc113)
            %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc114)
            %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc114)
            %20 = cir.call @snprintf(%8, %15, %17, %19) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc107)
            %21 = cir.const #cir.int<0> : !s32i loc(#loc115)
            %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc165)
            cir.if %22 {
              %23 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc117)
              %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc117)
              cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc118)
            } loc(#loc166)
          } loc(#loc161)
        } loc(#loc158)
      } loc(#loc157)
    } loc(#loc156)
    cir.return loc(#loc94)
  } loc(#loc155)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_snprintf_10.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase.h":116:1)
#loc2 = loc("../../testcasesupport/std_testcase.h":116:12)
#loc3 = loc("/usr/include/stdio.h":385:1)
#loc4 = loc("/usr/include/stdio.h":387:62)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":42:46)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":42:54)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":32:1)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":45:1)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":34:5)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":44:5)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":34:8)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":35:5)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":36:9)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":43:9)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":39:13)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":39:36)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":40:13)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":40:27)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":42:13)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":42:22)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":42:27)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":42:31)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":42:41)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":42:43)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":94:1)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":98:1)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":96:5)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":96:11)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":97:5)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":97:11)
#loc31 = loc("/usr/include/stdlib.h":575:1)
#loc32 = loc("/usr/include/stdlib.h":575:41)
#loc33 = loc("/usr/include/time.h":76:1)
#loc34 = loc("/usr/include/time.h":76:38)
#loc35 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc36 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":114:15)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":116:15)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":119:15)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":121:15)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":109:1)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":124:1)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":110:1)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":112:27)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":112:22)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":112:5)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":114:5)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":115:5)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":115:58)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":116:5)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":119:5)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":120:5)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":120:57)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":121:5)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":123:12)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":123:5)
#loc61 = loc("../../testcasesupport/std_testcase.h":117:1)
#loc62 = loc("../../testcasesupport/std_testcase.h":117:12)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":57:19)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":69:27)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":52:1)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":73:1)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":54:5)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":72:5)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":54:8)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":55:5)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":58:5)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":60:5)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":57:9)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":61:9)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":71:9)
#loc76 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":64:13)
#loc77 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":64:36)
#loc78 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":65:13)
#loc79 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":65:27)
#loc80 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":67:13)
#loc81 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":70:13)
#loc82 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":67:17)
#loc83 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":67:26)
#loc84 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":67:31)
#loc85 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":67:35)
#loc86 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":67:45)
#loc87 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":67:47)
#loc88 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":67:50)
#loc89 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":67:58)
#loc90 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":67:65)
#loc91 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":68:13)
#loc92 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":69:17)
#loc93 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":76:1)
#loc94 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":92:1)
#loc95 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":78:5)
#loc96 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":91:5)
#loc97 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":78:8)
#loc98 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":79:5)
#loc99 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":80:9)
#loc100 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":90:9)
#loc101 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":83:13)
#loc102 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":83:36)
#loc103 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":84:13)
#loc104 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":84:27)
#loc105 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":86:13)
#loc106 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":89:13)
#loc107 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":86:17)
#loc108 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":86:26)
#loc109 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":86:31)
#loc110 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":86:35)
#loc111 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":86:45)
#loc112 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":86:47)
#loc113 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":86:50)
#loc114 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":86:58)
#loc115 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":86:65)
#loc116 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":87:13)
#loc117 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":88:27)
#loc118 = loc("CWE252_Unchecked_Return_Value__char_snprintf_10.c":88:17)
#loc119 = loc(fused[#loc1, #loc2])
#loc120 = loc(fused[#loc3, #loc4])
#loc121 = loc(fused[#loc7, #loc8])
#loc122 = loc(fused[#loc9, #loc10])
#loc123 = loc(fused[#loc12, #loc10])
#loc124 = loc(fused[#loc13, #loc14])
#loc125 = loc(fused[#loc15, #loc16])
#loc126 = loc(fused[#loc17, #loc18])
#loc127 = loc(fused[#loc22, #loc23])
#loc128 = loc(fused[#loc21, #loc23])
#loc129 = loc(fused[#loc21, #loc24])
#loc130 = loc(fused[#loc25, #loc26])
#loc131 = loc(fused[#loc27, #loc28])
#loc132 = loc(fused[#loc29, #loc30])
#loc133 = loc(fused[#loc31, #loc32])
#loc134 = loc(fused[#loc33, #loc34])
#loc135 = loc(fused[#loc35, #loc36])
#loc136 = loc(fused[#loc41, #loc42])
#loc139 = loc(fused[#loc52, #loc53])
#loc140 = loc(fused[#loc56, #loc57])
#loc141 = loc(fused[#loc60, #loc59])
#loc142 = loc(fused[#loc61, #loc62])
#loc143 = loc(fused[#loc65, #loc66])
#loc144 = loc(fused[#loc67, #loc68])
#loc145 = loc(fused[#loc70, #loc71, #loc72, #loc68])
#loc146 = loc(fused[#loc74, #loc75])
#loc147 = loc(fused[#loc76, #loc77])
#loc148 = loc(fused[#loc78, #loc79])
#loc149 = loc(fused[#loc80, #loc81])
#loc150 = loc(fused[#loc85, #loc86])
#loc151 = loc(fused[#loc84, #loc86])
#loc152 = loc(fused[#loc84, #loc87])
#loc153 = loc(fused[#loc82, #loc90])
#loc154 = loc(fused[#loc91, #loc81])
#loc155 = loc(fused[#loc93, #loc94])
#loc156 = loc(fused[#loc95, #loc96])
#loc157 = loc(fused[#loc98, #loc96])
#loc158 = loc(fused[#loc99, #loc100])
#loc159 = loc(fused[#loc101, #loc102])
#loc160 = loc(fused[#loc103, #loc104])
#loc161 = loc(fused[#loc105, #loc106])
#loc162 = loc(fused[#loc110, #loc111])
#loc163 = loc(fused[#loc109, #loc111])
#loc164 = loc(fused[#loc109, #loc112])
#loc165 = loc(fused[#loc107, #loc115])
#loc166 = loc(fused[#loc116, #loc106])
