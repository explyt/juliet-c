!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!ty__stdThreadLock = !cir.record<struct "_stdThreadLock" incomplete>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE832_Unlock_of_Resource_That_is_Not_Locked/CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.global "private" internal dsolocal @good1.goodLock = #cir.ptr<null> : !cir.ptr<!ty__stdThreadLock> {alignment = 8 : i64} loc(#loc1)
  cir.global "private" internal dsolocal @CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17_bad.badLock = #cir.ptr<null> : !cir.ptr<!ty__stdThreadLock> {alignment = 8 : i64} loc(#loc2)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc91)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Creating lock...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc5)
  cir.func private @stdThreadLockCreate(!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc92)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Could not create lock\00" : !cir.array<!s8i x 22>> : !cir.array<!s8i x 22> {alignment = 1 : i64} loc(#loc8)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc93)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Releasing lock...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc11)
  cir.func private @stdThreadLockRelease(!cir.ptr<!ty__stdThreadLock>) loc(#loc94)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Destroying lock...\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc14)
  cir.func private @stdThreadLockDestroy(!cir.ptr<!ty__stdThreadLock>) loc(#loc95)
  cir.func no_proto @CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc97)
    cir.br ^bb1 loc(#loc98)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<0> : !s32i loc(#loc23)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc99)
    cir.br ^bb2 loc(#loc98)
  ^bb2:  // 2 preds: ^bb1, ^bb12
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc25)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc100)
    cir.brcond %4 ^bb3, ^bb13 loc(#loc27)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc101)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc102)
  ^bb5:  // pred: ^bb4
    %5 = cir.get_global @CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17_bad.badLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc2)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc5)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc5)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc31)
    cir.br ^bb6 loc(#loc103)
  ^bb6:  // pred: ^bb5
    %8 = cir.call @stdThreadLockCreate(%5) : (!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc34)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc34)
    %10 = cir.unary(not, %9) : !cir.bool, !cir.bool loc(#loc34)
    cir.brcond %10 ^bb7, ^bb8 loc(#loc104)
  ^bb7:  // pred: ^bb6
    %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 22>> loc(#loc8)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 22>>), !cir.ptr<!s8i> loc(#loc8)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc36)
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc37)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc38)
    cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc37)
    cir.br ^bb8 loc(#loc33)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc33)
  ^bb9:  // pred: ^bb8
    %15 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc11)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc11)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc39)
    %17 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc40)
    cir.call @stdThreadLockRelease(%17) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc41)
    %18 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc14)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc14)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc42)
    %20 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc43)
    cir.call @stdThreadLockDestroy(%20) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc44)
    cir.br ^bb10 loc(#loc30)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc22)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc22)
  ^bb12:  // pred: ^bb11
    %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc45)
    %22 = cir.unary(inc, %21) nsw : !s32i, !s32i loc(#loc46)
    cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc105)
    cir.br ^bb2 loc(#loc98)
  ^bb13:  // pred: ^bb2
    cir.br ^bb14 loc(#loc22)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc18)
  } loc(#loc96)
  cir.func no_proto @CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc107)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc49)
    cir.return loc(#loc48)
  } loc(#loc106)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Acquiring lock...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc51)
  cir.func private @stdThreadLockAcquire(!cir.ptr<!ty__stdThreadLock>) loc(#loc108)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc110)
    cir.br ^bb1 loc(#loc111)
  ^bb1:  // pred: ^bb0
    %1 = cir.const #cir.int<0> : !s32i loc(#loc60)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc112)
    cir.br ^bb2 loc(#loc111)
  ^bb2:  // 2 preds: ^bb1, ^bb12
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc63)
    %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc113)
    cir.brcond %4 ^bb3, ^bb13 loc(#loc64)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc114)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc115)
  ^bb5:  // pred: ^bb4
    %5 = cir.get_global @good1.goodLock : !cir.ptr<!cir.ptr<!ty__stdThreadLock>> loc(#loc1)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc68)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    cir.br ^bb6 loc(#loc116)
  ^bb6:  // pred: ^bb5
    %8 = cir.call @stdThreadLockCreate(%5) : (!cir.ptr<!cir.ptr<!ty__stdThreadLock>>) -> !s32i loc(#loc72)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc72)
    %10 = cir.unary(not, %9) : !cir.bool, !cir.bool loc(#loc72)
    cir.brcond %10 ^bb7, ^bb8 loc(#loc117)
  ^bb7:  // pred: ^bb6
    %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 22>> loc(#loc74)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 22>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc76)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc77)
    cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc76)
    cir.br ^bb8 loc(#loc71)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc71)
  ^bb9:  // pred: ^bb8
    %15 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc51)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %17 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc79)
    cir.call @stdThreadLockAcquire(%17) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc80)
    %18 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc81)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %20 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc83)
    cir.call @stdThreadLockRelease(%20) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc84)
    %21 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc85)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %23 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__stdThreadLock>>, !cir.ptr<!ty__stdThreadLock> loc(#loc87)
    cir.call @stdThreadLockDestroy(%23) : (!cir.ptr<!ty__stdThreadLock>) -> () loc(#loc88)
    cir.br ^bb10 loc(#loc67)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc59)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc59)
  ^bb12:  // pred: ^bb11
    %24 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    %25 = cir.unary(inc, %24) nsw : !s32i, !s32i loc(#loc90)
    cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc118)
    cir.br ^bb2 loc(#loc111)
  ^bb13:  // pred: ^bb2
    cir.br ^bb14 loc(#loc59)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc55)
  } loc(#loc109)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE832_Unlock_of_Resource_That_is_Not_Locked/CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":0:0)
#loc1 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":55:34)
#loc2 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":28:34)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":29:23)
#loc6 = loc("../../testcasesupport/std_thread.h":18:1)
#loc7 = loc("../../testcasesupport/std_thread.h":18:44)
#loc8 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":32:27)
#loc9 = loc("/usr/include/stdlib.h":756:1)
#loc10 = loc("/usr/include/stdlib.h":756:70)
#loc11 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":36:23)
#loc12 = loc("../../testcasesupport/std_thread.h":20:1)
#loc13 = loc("../../testcasesupport/std_thread.h":20:45)
#loc14 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":38:23)
#loc15 = loc("../../testcasesupport/std_thread.h":21:1)
#loc16 = loc("../../testcasesupport/std_thread.h":21:45)
#loc17 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":22:1)
#loc18 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":42:1)
#loc19 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":24:5)
#loc20 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":24:9)
#loc21 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":25:5)
#loc22 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":41:5)
#loc23 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":25:13)
#loc24 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":25:9)
#loc25 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":25:16)
#loc26 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":25:20)
#loc27 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":25:18)
#loc28 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":26:5)
#loc29 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":27:9)
#loc30 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":40:9)
#loc31 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":29:13)
#loc32 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":30:13)
#loc33 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":34:13)
#loc34 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":30:18)
#loc35 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":31:13)
#loc36 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":32:17)
#loc37 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":33:17)
#loc38 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":33:22)
#loc39 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":36:13)
#loc40 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":37:34)
#loc41 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":37:13)
#loc42 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":38:13)
#loc43 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":39:34)
#loc44 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":39:13)
#loc45 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":25:24)
#loc46 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":25:23)
#loc47 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":73:1)
#loc48 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":76:1)
#loc49 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":75:5)
#loc50 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":75:11)
#loc51 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":63:23)
#loc52 = loc("../../testcasesupport/std_thread.h":19:1)
#loc53 = loc("../../testcasesupport/std_thread.h":19:45)
#loc54 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":49:1)
#loc55 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":71:1)
#loc56 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":51:5)
#loc57 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":51:9)
#loc58 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":52:5)
#loc59 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":70:5)
#loc60 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":52:13)
#loc61 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":52:9)
#loc62 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":52:16)
#loc63 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":52:20)
#loc64 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":52:18)
#loc65 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":53:5)
#loc66 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":54:9)
#loc67 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":69:9)
#loc68 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":56:23)
#loc69 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":56:13)
#loc70 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":57:13)
#loc71 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":61:13)
#loc72 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":57:18)
#loc73 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":58:13)
#loc74 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":59:27)
#loc75 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":59:17)
#loc76 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":60:17)
#loc77 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":60:22)
#loc78 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":63:13)
#loc79 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":64:34)
#loc80 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":64:13)
#loc81 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":65:23)
#loc82 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":65:13)
#loc83 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":66:34)
#loc84 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":66:13)
#loc85 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":67:23)
#loc86 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":67:13)
#loc87 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":68:34)
#loc88 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":68:13)
#loc89 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":52:24)
#loc90 = loc("CWE832_Unlock_of_Resource_That_is_Not_Locked__basic_17.c":52:23)
#loc91 = loc(fused[#loc3, #loc4])
#loc92 = loc(fused[#loc6, #loc7])
#loc93 = loc(fused[#loc9, #loc10])
#loc94 = loc(fused[#loc12, #loc13])
#loc95 = loc(fused[#loc15, #loc16])
#loc96 = loc(fused[#loc17, #loc18])
#loc97 = loc(fused[#loc19, #loc20])
#loc98 = loc(fused[#loc21, #loc22])
#loc99 = loc(fused[#loc24, #loc23])
#loc100 = loc(fused[#loc25, #loc26])
#loc101 = loc(fused[#loc28, #loc22])
#loc102 = loc(fused[#loc29, #loc30])
#loc103 = loc(fused[#loc32, #loc33])
#loc104 = loc(fused[#loc35, #loc33])
#loc105 = loc(fused[#loc46, #loc45])
#loc106 = loc(fused[#loc47, #loc48])
#loc107 = loc(fused[#loc49, #loc50])
#loc108 = loc(fused[#loc52, #loc53])
#loc109 = loc(fused[#loc54, #loc55])
#loc110 = loc(fused[#loc56, #loc57])
#loc111 = loc(fused[#loc58, #loc59])
#loc112 = loc(fused[#loc61, #loc60])
#loc113 = loc(fused[#loc62, #loc63])
#loc114 = loc(fused[#loc65, #loc59])
#loc115 = loc(fused[#loc66, #loc67])
#loc116 = loc(fused[#loc70, #loc71])
#loc117 = loc(fused[#loc73, #loc71])
#loc118 = loc(fused[#loc90, #loc89])
