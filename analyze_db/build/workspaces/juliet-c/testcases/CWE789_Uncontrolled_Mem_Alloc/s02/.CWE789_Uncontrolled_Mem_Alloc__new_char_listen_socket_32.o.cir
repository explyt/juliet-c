!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc410)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc411)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc412)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc413)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc414)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc415)
  cir.func private @__isoc23_strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc416)
  cir.func private @close(!s32i) -> !s32i loc(#loc417)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc418)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc419)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc21)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc420)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc24)
  cir.func @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_323badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc422)
    %1 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc423)
    %2 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc424)
    cir.store %0, %1 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc423)
    cir.store %0, %2 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc424)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc33)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc425)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc427)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc38)
      %7 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc39)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc427)
      cir.scope {
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc429)
        %11 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc430)
        %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc431)
        %13 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc432)
        %14 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc433)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc47)
        %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc47)
        cir.store %16, %12 : !s32i, !cir.ptr<!s32i> loc(#loc431)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc49)
        %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc49)
        cir.store %18, %13 : !s32i, !cir.ptr<!s32i> loc(#loc432)
        cir.scope {
          cir.do {
            cir.scope {
              %19 = cir.const #cir.int<2> : !s32i loc(#loc56)
              %20 = cir.const #cir.int<1> : !u32i loc(#loc57)
              %21 = cir.cast(integral, %20 : !u32i), !s32i loc(#loc57)
              %22 = cir.const #cir.int<6> : !u32i loc(#loc58)
              %23 = cir.cast(integral, %22 : !u32i), !s32i loc(#loc58)
              %24 = cir.call @socket(%19, %21, %23) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc59)
              cir.store %24, %12 : !s32i, !cir.ptr<!s32i> loc(#loc436)
              cir.scope {
                %68 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc64)
                %69 = cir.const #cir.int<1> : !s32i loc(#loc65)
                %70 = cir.unary(minus, %69) nsw : !s32i, !s32i loc(#loc65)
                %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc438)
                cir.if %71 {
                  cir.break loc(#loc67)
                } loc(#loc439)
              } loc(#loc437)
              %25 = cir.cast(bitcast, %11 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc440)
              %26 = cir.const #cir.int<0> : !s32i loc(#loc70)
              %27 = cir.const #cir.int<16> : !u64i loc(#loc441)
              cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc442)
              %28 = cir.const #cir.int<2> : !s32i loc(#loc75)
              %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc75)
              %30 = cir.get_member %11[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
              cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc443)
              %31 = cir.const #cir.int<0> : !s32i loc(#loc78)
              %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc78)
              %33 = cir.get_member %11[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc79)
              %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc80)
              cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc444)
              %35 = cir.const #cir.int<27015> : !s32i loc(#loc82)
              %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc82)
              %37 = cir.call @htons(%36) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc83)
              %38 = cir.get_member %11[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc84)
              cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc445)
              cir.scope {
                %68 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc89)
                %69 = cir.cast(bitcast, %11 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc447)
                %70 = cir.const #cir.int<16> : !u64i loc(#loc448)
                %71 = cir.cast(integral, %70 : !u64i), !u32i loc(#loc448)
                %72 = cir.call @bind(%68, %69, %71) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc94)
                %73 = cir.const #cir.int<1> : !s32i loc(#loc95)
                %74 = cir.unary(minus, %73) nsw : !s32i, !s32i loc(#loc95)
                %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc449)
                cir.if %75 {
                  cir.break loc(#loc97)
                } loc(#loc450)
              } loc(#loc446)
              cir.scope {
                %68 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc100)
                %69 = cir.const #cir.int<5> : !s32i loc(#loc101)
                %70 = cir.call @listen(%68, %69) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc102)
                %71 = cir.const #cir.int<1> : !s32i loc(#loc103)
                %72 = cir.unary(minus, %71) nsw : !s32i, !s32i loc(#loc103)
                %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc452)
                cir.if %73 {
                  cir.break loc(#loc105)
                } loc(#loc453)
              } loc(#loc451)
              %39 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc106)
              %40 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc107)
              %41 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc108)
              %42 = cir.call @accept(%39, %40, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc109)
              cir.store %42, %13 : !s32i, !cir.ptr<!s32i> loc(#loc454)
              cir.scope {
                %68 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc114)
                %69 = cir.const #cir.int<1> : !s32i loc(#loc115)
                %70 = cir.unary(minus, %69) nsw : !s32i, !s32i loc(#loc115)
                %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc456)
                cir.if %71 {
                  cir.break loc(#loc117)
                } loc(#loc457)
              } loc(#loc455)
              %43 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc118)
              %44 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc119)
              %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc119)
              %46 = cir.const #cir.int<3> : !s32i loc(#loc120)
              %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc120)
              %48 = cir.const #cir.int<8> : !u64i loc(#loc120)
              %49 = cir.binop(mul, %47, %48) : !u64i loc(#loc120)
              %50 = cir.const #cir.int<2> : !s32i loc(#loc120)
              %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc120)
              %52 = cir.binop(add, %49, %51) : !u64i loc(#loc120)
              %53 = cir.const #cir.int<1> : !s32i loc(#loc121)
              %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc121)
              %55 = cir.binop(sub, %52, %54) : !u64i loc(#loc458)
              %56 = cir.const #cir.int<0> : !s32i loc(#loc122)
              %57 = cir.call @recv(%43, %45, %55, %56) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc123)
              %58 = cir.cast(integral, %57 : !s64i), !s32i loc(#loc123)
              cir.store %58, %10 : !s32i, !cir.ptr<!s32i> loc(#loc459)
              cir.scope {
                %68 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc128)
                %69 = cir.const #cir.int<1> : !s32i loc(#loc129)
                %70 = cir.unary(minus, %69) nsw : !s32i, !s32i loc(#loc129)
                %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc461)
                %72 = cir.ternary(%71, true {
                  %73 = cir.const #true loc(#loc130)
                  cir.yield %73 : !cir.bool loc(#loc130)
                }, false {
                  %73 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc131)
                  %74 = cir.const #cir.int<0> : !s32i loc(#loc132)
                  %75 = cir.cmp(eq, %73, %74) : !s32i, !cir.bool loc(#loc462)
                  %76 = cir.ternary(%75, true {
                    %77 = cir.const #true loc(#loc130)
                    cir.yield %77 : !cir.bool loc(#loc130)
                  }, false {
                    %77 = cir.const #false loc(#loc130)
                    cir.yield %77 : !cir.bool loc(#loc130)
                  }) : (!cir.bool) -> !cir.bool loc(#loc130)
                  cir.yield %76 : !cir.bool loc(#loc130)
                }) : (!cir.bool) -> !cir.bool loc(#loc130)
                cir.if %72 {
                  cir.break loc(#loc134)
                } loc(#loc463)
              } loc(#loc460)
              %59 = cir.const #cir.int<0> : !s8i loc(#loc135)
              %60 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc136)
              %61 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc137)
              %62 = cir.ptr_stride(%61 : !cir.ptr<!s8i>, %60 : !s32i), !cir.ptr<!s8i> loc(#loc137)
              cir.store %59, %62 : !s8i, !cir.ptr<!s8i> loc(#loc464)
              %63 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc138)
              %64 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc139)
              %65 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc140)
              %66 = cir.const #cir.int<0> : !s32i loc(#loc141)
              %67 = cir.call @__isoc23_strtoul(%64, %65, %66) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc138)
              cir.store %67, %5 : !u64i, !cir.ptr<!u64i> loc(#loc465)
            } loc(#loc435)
            cir.yield loc(#loc53)
          } while {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc144)
            %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc144)
            cir.condition(%20) loc(#loc144)
          } loc(#loc434)
        } loc(#loc434)
        cir.scope {
          %19 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc147)
          %20 = cir.const #cir.int<1> : !s32i loc(#loc148)
          %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc148)
          %22 = cir.cmp(ne, %19, %21) : !s32i, !cir.bool loc(#loc467)
          cir.if %22 {
            %23 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc150)
            %24 = cir.call @close(%23) : (!s32i) -> !s32i loc(#loc151)
          } loc(#loc468)
        } loc(#loc466)
        cir.scope {
          %19 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc154)
          %20 = cir.const #cir.int<1> : !s32i loc(#loc155)
          %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc155)
          %22 = cir.cmp(ne, %19, %21) : !s32i, !cir.bool loc(#loc470)
          cir.if %22 {
            %23 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc157)
            %24 = cir.call @close(%23) : (!s32i) -> !s32i loc(#loc158)
          } loc(#loc471)
        } loc(#loc469)
      } loc(#loc428)
      %8 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc159)
      %9 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc160)
      cir.store %8, %9 : !u64i, !cir.ptr<!u64i> loc(#loc472)
    } loc(#loc426)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc474)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc165)
      %7 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc166)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc474)
      cir.scope {
        %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc476)
        cir.scope {
          %9 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc173)
          %10 = cir.const #cir.int<5> : !u64i loc(#loc478)
          %11 = cir.cmp(gt, %9, %10) : !u64i, !cir.bool loc(#loc479)
          cir.if %11 {
            %12 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc179)
            %13 = cir.call @_Znam(%12) : (!u64i) -> !cir.ptr<!void> loc(#loc180)
            %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc481)
            cir.store %14, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc482)
            %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc184)
            %16 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc185)
            %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc21)
            %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc21)
            %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc184)
            %20 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc186)
            cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc187)
            %21 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc188)
            cir.delete.array %21 : <!s8i> loc(#loc188)
          } else {
            %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc24)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc24)
            cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc189)
          } loc(#loc480)
        } loc(#loc477)
      } loc(#loc475)
    } loc(#loc473)
    cir.return loc(#loc26)
  } loc(#loc421)
  cir.func internal private @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc484)
    %1 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc485)
    %2 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc486)
    cir.store %0, %1 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc485)
    cir.store %0, %2 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc486)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc198)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc198)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc487)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc489)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc203)
      %7 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc204)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc489)
      %8 = cir.const #cir.int<20> : !s32i loc(#loc205)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc205)
      cir.store %9, %5 : !u64i, !cir.ptr<!u64i> loc(#loc490)
      %10 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc207)
      %11 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc208)
      cir.store %10, %11 : !u64i, !cir.ptr<!u64i> loc(#loc491)
    } loc(#loc488)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc493)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc213)
      %7 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc214)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc493)
      cir.scope {
        %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc495)
        cir.scope {
          %9 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc221)
          %10 = cir.const #cir.int<5> : !u64i loc(#loc497)
          %11 = cir.cmp(gt, %9, %10) : !u64i, !cir.bool loc(#loc498)
          cir.if %11 {
            %12 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc227)
            %13 = cir.call @_Znam(%12) : (!u64i) -> !cir.ptr<!void> loc(#loc228)
            %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc500)
            cir.store %14, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc501)
            %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc232)
            %16 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc233)
            %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc234)
            %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc234)
            %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc232)
            %20 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc235)
            cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc236)
            %21 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc237)
            cir.delete.array %21 : <!s8i> loc(#loc237)
          } else {
            %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc238)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc238)
            cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc239)
          } loc(#loc499)
        } loc(#loc496)
      } loc(#loc494)
    } loc(#loc492)
    cir.return loc(#loc191)
  } loc(#loc483)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc240)
  cir.func internal private @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc503)
    %1 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc504)
    %2 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc505)
    cir.store %0, %1 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc504)
    cir.store %0, %2 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc505)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc249)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc249)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc506)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc508)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc254)
      %7 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc255)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc508)
      cir.scope {
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc510)
        %11 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc511)
        %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc512)
        %13 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc513)
        %14 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc514)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc263)
        %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc263)
        cir.store %16, %12 : !s32i, !cir.ptr<!s32i> loc(#loc512)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc265)
        %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc265)
        cir.store %18, %13 : !s32i, !cir.ptr<!s32i> loc(#loc513)
        cir.scope {
          cir.do {
            cir.scope {
              %19 = cir.const #cir.int<2> : !s32i loc(#loc272)
              %20 = cir.const #cir.int<1> : !u32i loc(#loc273)
              %21 = cir.cast(integral, %20 : !u32i), !s32i loc(#loc273)
              %22 = cir.const #cir.int<6> : !u32i loc(#loc274)
              %23 = cir.cast(integral, %22 : !u32i), !s32i loc(#loc274)
              %24 = cir.call @socket(%19, %21, %23) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc275)
              cir.store %24, %12 : !s32i, !cir.ptr<!s32i> loc(#loc517)
              cir.scope {
                %68 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc280)
                %69 = cir.const #cir.int<1> : !s32i loc(#loc281)
                %70 = cir.unary(minus, %69) nsw : !s32i, !s32i loc(#loc281)
                %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc519)
                cir.if %71 {
                  cir.break loc(#loc283)
                } loc(#loc520)
              } loc(#loc518)
              %25 = cir.cast(bitcast, %11 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc521)
              %26 = cir.const #cir.int<0> : !s32i loc(#loc286)
              %27 = cir.const #cir.int<16> : !u64i loc(#loc522)
              cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc523)
              %28 = cir.const #cir.int<2> : !s32i loc(#loc291)
              %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc291)
              %30 = cir.get_member %11[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
              cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc524)
              %31 = cir.const #cir.int<0> : !s32i loc(#loc293)
              %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc293)
              %33 = cir.get_member %11[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc79)
              %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc80)
              cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc525)
              %35 = cir.const #cir.int<27015> : !s32i loc(#loc295)
              %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc295)
              %37 = cir.call @htons(%36) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc296)
              %38 = cir.get_member %11[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc84)
              cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc526)
              cir.scope {
                %68 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc301)
                %69 = cir.cast(bitcast, %11 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc528)
                %70 = cir.const #cir.int<16> : !u64i loc(#loc529)
                %71 = cir.cast(integral, %70 : !u64i), !u32i loc(#loc529)
                %72 = cir.call @bind(%68, %69, %71) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc306)
                %73 = cir.const #cir.int<1> : !s32i loc(#loc307)
                %74 = cir.unary(minus, %73) nsw : !s32i, !s32i loc(#loc307)
                %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc530)
                cir.if %75 {
                  cir.break loc(#loc309)
                } loc(#loc531)
              } loc(#loc527)
              cir.scope {
                %68 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc312)
                %69 = cir.const #cir.int<5> : !s32i loc(#loc313)
                %70 = cir.call @listen(%68, %69) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc314)
                %71 = cir.const #cir.int<1> : !s32i loc(#loc315)
                %72 = cir.unary(minus, %71) nsw : !s32i, !s32i loc(#loc315)
                %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc533)
                cir.if %73 {
                  cir.break loc(#loc317)
                } loc(#loc534)
              } loc(#loc532)
              %39 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc318)
              %40 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc319)
              %41 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc320)
              %42 = cir.call @accept(%39, %40, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc321)
              cir.store %42, %13 : !s32i, !cir.ptr<!s32i> loc(#loc535)
              cir.scope {
                %68 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc326)
                %69 = cir.const #cir.int<1> : !s32i loc(#loc327)
                %70 = cir.unary(minus, %69) nsw : !s32i, !s32i loc(#loc327)
                %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc537)
                cir.if %71 {
                  cir.break loc(#loc329)
                } loc(#loc538)
              } loc(#loc536)
              %43 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc330)
              %44 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc331)
              %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc331)
              %46 = cir.const #cir.int<3> : !s32i loc(#loc332)
              %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc332)
              %48 = cir.const #cir.int<8> : !u64i loc(#loc332)
              %49 = cir.binop(mul, %47, %48) : !u64i loc(#loc332)
              %50 = cir.const #cir.int<2> : !s32i loc(#loc332)
              %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc332)
              %52 = cir.binop(add, %49, %51) : !u64i loc(#loc332)
              %53 = cir.const #cir.int<1> : !s32i loc(#loc333)
              %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc333)
              %55 = cir.binop(sub, %52, %54) : !u64i loc(#loc539)
              %56 = cir.const #cir.int<0> : !s32i loc(#loc334)
              %57 = cir.call @recv(%43, %45, %55, %56) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc335)
              %58 = cir.cast(integral, %57 : !s64i), !s32i loc(#loc335)
              cir.store %58, %10 : !s32i, !cir.ptr<!s32i> loc(#loc540)
              cir.scope {
                %68 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc340)
                %69 = cir.const #cir.int<1> : !s32i loc(#loc341)
                %70 = cir.unary(minus, %69) nsw : !s32i, !s32i loc(#loc341)
                %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc542)
                %72 = cir.ternary(%71, true {
                  %73 = cir.const #true loc(#loc342)
                  cir.yield %73 : !cir.bool loc(#loc342)
                }, false {
                  %73 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc343)
                  %74 = cir.const #cir.int<0> : !s32i loc(#loc344)
                  %75 = cir.cmp(eq, %73, %74) : !s32i, !cir.bool loc(#loc543)
                  %76 = cir.ternary(%75, true {
                    %77 = cir.const #true loc(#loc342)
                    cir.yield %77 : !cir.bool loc(#loc342)
                  }, false {
                    %77 = cir.const #false loc(#loc342)
                    cir.yield %77 : !cir.bool loc(#loc342)
                  }) : (!cir.bool) -> !cir.bool loc(#loc342)
                  cir.yield %76 : !cir.bool loc(#loc342)
                }) : (!cir.bool) -> !cir.bool loc(#loc342)
                cir.if %72 {
                  cir.break loc(#loc346)
                } loc(#loc544)
              } loc(#loc541)
              %59 = cir.const #cir.int<0> : !s8i loc(#loc347)
              %60 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc348)
              %61 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc349)
              %62 = cir.ptr_stride(%61 : !cir.ptr<!s8i>, %60 : !s32i), !cir.ptr<!s8i> loc(#loc349)
              cir.store %59, %62 : !s8i, !cir.ptr<!s8i> loc(#loc545)
              %63 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc350)
              %64 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc351)
              %65 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc352)
              %66 = cir.const #cir.int<0> : !s32i loc(#loc353)
              %67 = cir.call @__isoc23_strtoul(%64, %65, %66) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc350)
              cir.store %67, %5 : !u64i, !cir.ptr<!u64i> loc(#loc546)
            } loc(#loc516)
            cir.yield loc(#loc269)
          } while {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc356)
            %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc356)
            cir.condition(%20) loc(#loc356)
          } loc(#loc515)
        } loc(#loc515)
        cir.scope {
          %19 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc359)
          %20 = cir.const #cir.int<1> : !s32i loc(#loc360)
          %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc360)
          %22 = cir.cmp(ne, %19, %21) : !s32i, !cir.bool loc(#loc548)
          cir.if %22 {
            %23 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc362)
            %24 = cir.call @close(%23) : (!s32i) -> !s32i loc(#loc363)
          } loc(#loc549)
        } loc(#loc547)
        cir.scope {
          %19 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc366)
          %20 = cir.const #cir.int<1> : !s32i loc(#loc367)
          %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc367)
          %22 = cir.cmp(ne, %19, %21) : !s32i, !cir.bool loc(#loc551)
          cir.if %22 {
            %23 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc369)
            %24 = cir.call @close(%23) : (!s32i) -> !s32i loc(#loc370)
          } loc(#loc552)
        } loc(#loc550)
      } loc(#loc509)
      %8 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc371)
      %9 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc372)
      cir.store %8, %9 : !u64i, !cir.ptr<!u64i> loc(#loc553)
    } loc(#loc507)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc555)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc377)
      %7 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc378)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc555)
      cir.scope {
        %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc557)
        cir.scope {
          %9 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc385)
          %10 = cir.const #cir.int<5> : !u64i loc(#loc559)
          %11 = cir.cmp(gt, %9, %10) : !u64i, !cir.bool loc(#loc560)
          %12 = cir.ternary(%11, true {
            %13 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc389)
            %14 = cir.const #cir.int<100> : !s32i loc(#loc390)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc390)
            %16 = cir.cmp(lt, %13, %15) : !u64i, !cir.bool loc(#loc561)
            %17 = cir.ternary(%16, true {
              %18 = cir.const #true loc(#loc388)
              cir.yield %18 : !cir.bool loc(#loc388)
            }, false {
              %18 = cir.const #false loc(#loc388)
              cir.yield %18 : !cir.bool loc(#loc388)
            }) : (!cir.bool) -> !cir.bool loc(#loc388)
            cir.yield %17 : !cir.bool loc(#loc388)
          }, false {
            %13 = cir.const #false loc(#loc388)
            cir.yield %13 : !cir.bool loc(#loc388)
          }) : (!cir.bool) -> !cir.bool loc(#loc388)
          cir.if %12 {
            %13 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc394)
            %14 = cir.call @_Znam(%13) : (!u64i) -> !cir.ptr<!void> loc(#loc395)
            %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc563)
            cir.store %15, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc564)
            %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc399)
            %17 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc400)
            %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc401)
            %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc401)
            %20 = cir.call @strcpy(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc399)
            %21 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc402)
            cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc403)
            %22 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc404)
            cir.delete.array %22 : <!s8i> loc(#loc404)
          } else {
            %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc240)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc240)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc405)
          } loc(#loc562)
        } loc(#loc558)
      } loc(#loc556)
    } loc(#loc554)
    cir.return loc(#loc242)
  } loc(#loc502)
  cir.func @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_324goodEv() extra(#fn_attr1) {
    cir.call @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32L7goodG2BEv() : () -> () loc(#loc408)
    cir.call @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32L7goodB2GEv() : () -> () loc(#loc409)
    cir.return loc(#loc407)
  } loc(#loc565)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":219:1)
#loc14 = loc("/usr/include/stdlib.h":223:6)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc18 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc19 = loc("/usr/include/string.h":141:1)
#loc20 = loc("/usr/include/string.h":142:14)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":144:34)
#loc22 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc23 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":150:27)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":53:1)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":154:1)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":55:5)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":55:12)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":56:5)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":56:25)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":57:5)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":57:25)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":59:12)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":59:5)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":60:5)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":132:5)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":61:9)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":61:24)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":61:23)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":62:9)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":130:9)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":67:13)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":67:17)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":68:13)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":68:32)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":69:13)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":69:35)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":70:13)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":70:35)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":71:13)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":71:45)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":72:13)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":115:21)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":73:13)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":114:13)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":82:39)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":82:48)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":82:61)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":82:32)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":82:17)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":82:72)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":83:17)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":86:17)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":83:21)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":83:37)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":84:17)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":85:21)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":87:24)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":87:25)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":87:34)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":87:37)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":87:51)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":87:17)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":87:52)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":88:38)
#loc76 = loc("/usr/include/netinet/in.h":249:5)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":88:17)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":89:43)
#loc79 = loc("/usr/include/netinet/in.h":251:20)
#loc80 = loc("/usr/include/netinet/in.h":33:15)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":89:17)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":90:42)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":90:36)
#loc84 = loc("/usr/include/netinet/in.h":250:15)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":90:17)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":90:50)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":91:17)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":94:17)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":91:26)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":91:58)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":91:59)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":91:68)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":91:82)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":91:21)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":91:88)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":92:17)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":93:21)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":95:17)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":98:17)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":95:28)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":95:42)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":95:21)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":95:61)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":96:17)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":97:21)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":99:39)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":99:53)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":99:59)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":99:32)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":99:17)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":99:63)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":100:17)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":103:17)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":100:21)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":100:37)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":101:17)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":102:21)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":105:35)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":105:49)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":105:62)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":105:80)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":105:83)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":105:30)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":105:17)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":105:84)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":106:17)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":109:17)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":106:21)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":106:35)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":106:48)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":106:51)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":106:65)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":107:17)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":108:21)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":111:43)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":111:29)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":111:17)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":113:24)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":113:32)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":113:45)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":113:51)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":113:17)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":113:52)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":115:20)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":116:13)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":119:13)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":116:17)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":116:33)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":117:13)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":118:30)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":118:17)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":120:13)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":123:13)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":120:17)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":120:33)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":121:13)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":122:30)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":122:17)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":131:21)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":131:10)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":131:9)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":133:5)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":153:5)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":134:9)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":134:24)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":134:23)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":135:9)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":152:9)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":136:13)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":136:20)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":140:13)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":151:13)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":140:17)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":140:24)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":140:43)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":141:13)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":147:13)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":149:13)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":142:37)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":53:6)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":142:28)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":142:41)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":142:17)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":144:17)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":144:24)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":145:27)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":145:17)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":146:27)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":150:17)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":161:1)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":195:1)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":163:5)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":163:12)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":164:5)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":164:25)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":165:5)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":165:25)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":167:12)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":167:5)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":168:5)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":173:5)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":169:9)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":169:24)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":169:23)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":171:16)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":171:9)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":172:21)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":172:10)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":172:9)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":174:5)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":194:5)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":175:9)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":175:24)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":175:23)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":176:9)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":193:9)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":177:13)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":177:20)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":181:13)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":192:13)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":181:17)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":181:24)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":181:43)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":182:13)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":188:13)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":190:13)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":183:37)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":161:13)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":183:28)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":183:41)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":183:17)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":185:17)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":185:24)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":185:34)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":186:27)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":186:17)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":187:27)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":191:27)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":191:17)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":295:27)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":198:1)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":299:1)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":200:5)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":200:12)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":201:5)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":201:25)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":202:5)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":202:25)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":204:12)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":204:5)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":205:5)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":277:5)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":206:9)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":206:24)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":206:23)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":207:9)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":275:9)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":212:13)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":212:17)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":213:13)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":213:32)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":214:13)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":214:35)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":215:13)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":215:35)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":216:13)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":216:45)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":217:13)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":260:21)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":218:13)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":259:13)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":227:39)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":227:48)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":227:61)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":227:32)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":227:17)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":227:72)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":228:17)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":231:17)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":228:21)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":228:37)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":229:17)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":230:21)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":232:24)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":232:25)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":232:34)
#loc287 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":232:37)
#loc288 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":232:51)
#loc289 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":232:17)
#loc290 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":232:52)
#loc291 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":233:38)
#loc292 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":233:17)
#loc293 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":234:43)
#loc294 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":234:17)
#loc295 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":235:42)
#loc296 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":235:36)
#loc297 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":235:17)
#loc298 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":235:50)
#loc299 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":236:17)
#loc300 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":239:17)
#loc301 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":236:26)
#loc302 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":236:58)
#loc303 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":236:59)
#loc304 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":236:68)
#loc305 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":236:82)
#loc306 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":236:21)
#loc307 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":236:88)
#loc308 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":237:17)
#loc309 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":238:21)
#loc310 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":240:17)
#loc311 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":243:17)
#loc312 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":240:28)
#loc313 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":240:42)
#loc314 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":240:21)
#loc315 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":240:61)
#loc316 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":241:17)
#loc317 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":242:21)
#loc318 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":244:39)
#loc319 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":244:53)
#loc320 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":244:59)
#loc321 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":244:32)
#loc322 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":244:17)
#loc323 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":244:63)
#loc324 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":245:17)
#loc325 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":248:17)
#loc326 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":245:21)
#loc327 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":245:37)
#loc328 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":246:17)
#loc329 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":247:21)
#loc330 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":250:35)
#loc331 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":250:49)
#loc332 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":250:62)
#loc333 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":250:80)
#loc334 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":250:83)
#loc335 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":250:30)
#loc336 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":250:17)
#loc337 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":250:84)
#loc338 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":251:17)
#loc339 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":254:17)
#loc340 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":251:21)
#loc341 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":251:35)
#loc342 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":251:48)
#loc343 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":251:51)
#loc344 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":251:65)
#loc345 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":252:17)
#loc346 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":253:21)
#loc347 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":256:43)
#loc348 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":256:29)
#loc349 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":256:17)
#loc350 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":258:24)
#loc351 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":258:32)
#loc352 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":258:45)
#loc353 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":258:51)
#loc354 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":258:17)
#loc355 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":258:52)
#loc356 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":260:20)
#loc357 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":261:13)
#loc358 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":264:13)
#loc359 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":261:17)
#loc360 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":261:33)
#loc361 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":262:13)
#loc362 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":263:30)
#loc363 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":263:17)
#loc364 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":265:13)
#loc365 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":268:13)
#loc366 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":265:17)
#loc367 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":265:33)
#loc368 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":266:13)
#loc369 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":267:30)
#loc370 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":267:17)
#loc371 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":276:21)
#loc372 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":276:10)
#loc373 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":276:9)
#loc374 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":278:5)
#loc375 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":298:5)
#loc376 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":279:9)
#loc377 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":279:24)
#loc378 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":279:23)
#loc379 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":280:9)
#loc380 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":297:9)
#loc381 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":281:13)
#loc382 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":281:20)
#loc383 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":285:13)
#loc384 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":296:13)
#loc385 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":285:17)
#loc386 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":285:24)
#loc387 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":285:43)
#loc388 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":285:45)
#loc389 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":285:48)
#loc390 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":285:55)
#loc391 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":286:13)
#loc392 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":292:13)
#loc393 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":294:13)
#loc394 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":287:37)
#loc395 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":198:13)
#loc396 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":287:28)
#loc397 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":287:41)
#loc398 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":287:17)
#loc399 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":289:17)
#loc400 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":289:24)
#loc401 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":289:34)
#loc402 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":290:27)
#loc403 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":290:17)
#loc404 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":291:27)
#loc405 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":295:17)
#loc406 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":301:1)
#loc407 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":305:1)
#loc408 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":303:5)
#loc409 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_32.cpp":304:5)
#loc410 = loc(fused[#loc1, #loc2])
#loc411 = loc(fused[#loc3, #loc4])
#loc412 = loc(fused[#loc5, #loc6])
#loc413 = loc(fused[#loc7, #loc8])
#loc414 = loc(fused[#loc9, #loc10])
#loc415 = loc(fused[#loc11, #loc12])
#loc416 = loc(fused[#loc13, #loc14])
#loc417 = loc(fused[#loc15, #loc16])
#loc418 = loc(fused[#loc17, #loc18])
#loc419 = loc(fused[#loc19, #loc20])
#loc420 = loc(fused[#loc22, #loc23])
#loc421 = loc(fused[#loc25, #loc26])
#loc422 = loc(fused[#loc27, #loc28])
#loc423 = loc(fused[#loc29, #loc30])
#loc424 = loc(fused[#loc31, #loc32])
#loc425 = loc(fused[#loc34, #loc33])
#loc426 = loc(fused[#loc35, #loc36])
#loc427 = loc(fused[#loc37, #loc38])
#loc428 = loc(fused[#loc40, #loc41])
#loc429 = loc(fused[#loc42, #loc43])
#loc430 = loc(fused[#loc44, #loc45])
#loc431 = loc(fused[#loc46, #loc47])
#loc432 = loc(fused[#loc48, #loc49])
#loc433 = loc(fused[#loc50, #loc51])
#loc434 = loc(fused[#loc52, #loc53])
#loc435 = loc(fused[#loc54, #loc55])
#loc436 = loc(fused[#loc60, #loc61])
#loc437 = loc(fused[#loc62, #loc63])
#loc438 = loc(fused[#loc64, #loc65])
#loc439 = loc(fused[#loc66, #loc63])
#loc440 = loc(fused[#loc68, #loc69])
#loc441 = loc(fused[#loc71, #loc72])
#loc442 = loc(fused[#loc73, #loc74])
#loc443 = loc(fused[#loc77, #loc75])
#loc444 = loc(fused[#loc81, #loc78])
#loc445 = loc(fused[#loc85, #loc86])
#loc446 = loc(fused[#loc87, #loc88])
#loc447 = loc(fused[#loc90, #loc91])
#loc448 = loc(fused[#loc92, #loc93])
#loc449 = loc(fused[#loc94, #loc95])
#loc450 = loc(fused[#loc96, #loc88])
#loc451 = loc(fused[#loc98, #loc99])
#loc452 = loc(fused[#loc102, #loc103])
#loc453 = loc(fused[#loc104, #loc99])
#loc454 = loc(fused[#loc110, #loc111])
#loc455 = loc(fused[#loc112, #loc113])
#loc456 = loc(fused[#loc114, #loc115])
#loc457 = loc(fused[#loc116, #loc113])
#loc458 = loc(fused[#loc120, #loc121])
#loc459 = loc(fused[#loc124, #loc125])
#loc460 = loc(fused[#loc126, #loc127])
#loc461 = loc(fused[#loc128, #loc129])
#loc462 = loc(fused[#loc131, #loc132])
#loc463 = loc(fused[#loc133, #loc127])
#loc464 = loc(fused[#loc137, #loc135])
#loc465 = loc(fused[#loc142, #loc143])
#loc466 = loc(fused[#loc145, #loc146])
#loc467 = loc(fused[#loc147, #loc148])
#loc468 = loc(fused[#loc149, #loc146])
#loc469 = loc(fused[#loc152, #loc153])
#loc470 = loc(fused[#loc154, #loc155])
#loc471 = loc(fused[#loc156, #loc153])
#loc472 = loc(fused[#loc161, #loc159])
#loc473 = loc(fused[#loc162, #loc163])
#loc474 = loc(fused[#loc164, #loc165])
#loc475 = loc(fused[#loc167, #loc168])
#loc476 = loc(fused[#loc169, #loc170])
#loc477 = loc(fused[#loc171, #loc172])
#loc478 = loc(fused[#loc174, #loc175])
#loc479 = loc(fused[#loc173, #loc175])
#loc480 = loc(fused[#loc176, #loc177, #loc178, #loc172])
#loc481 = loc(fused[#loc181, #loc182])
#loc482 = loc(fused[#loc183, #loc182])
#loc483 = loc(fused[#loc190, #loc191])
#loc484 = loc(fused[#loc192, #loc193])
#loc485 = loc(fused[#loc194, #loc195])
#loc486 = loc(fused[#loc196, #loc197])
#loc487 = loc(fused[#loc199, #loc198])
#loc488 = loc(fused[#loc200, #loc201])
#loc489 = loc(fused[#loc202, #loc203])
#loc490 = loc(fused[#loc206, #loc205])
#loc491 = loc(fused[#loc209, #loc207])
#loc492 = loc(fused[#loc210, #loc211])
#loc493 = loc(fused[#loc212, #loc213])
#loc494 = loc(fused[#loc215, #loc216])
#loc495 = loc(fused[#loc217, #loc218])
#loc496 = loc(fused[#loc219, #loc220])
#loc497 = loc(fused[#loc222, #loc223])
#loc498 = loc(fused[#loc221, #loc223])
#loc499 = loc(fused[#loc224, #loc225, #loc226, #loc220])
#loc500 = loc(fused[#loc229, #loc230])
#loc501 = loc(fused[#loc231, #loc230])
#loc502 = loc(fused[#loc241, #loc242])
#loc503 = loc(fused[#loc243, #loc244])
#loc504 = loc(fused[#loc245, #loc246])
#loc505 = loc(fused[#loc247, #loc248])
#loc506 = loc(fused[#loc250, #loc249])
#loc507 = loc(fused[#loc251, #loc252])
#loc508 = loc(fused[#loc253, #loc254])
#loc509 = loc(fused[#loc256, #loc257])
#loc510 = loc(fused[#loc258, #loc259])
#loc511 = loc(fused[#loc260, #loc261])
#loc512 = loc(fused[#loc262, #loc263])
#loc513 = loc(fused[#loc264, #loc265])
#loc514 = loc(fused[#loc266, #loc267])
#loc515 = loc(fused[#loc268, #loc269])
#loc516 = loc(fused[#loc270, #loc271])
#loc517 = loc(fused[#loc276, #loc277])
#loc518 = loc(fused[#loc278, #loc279])
#loc519 = loc(fused[#loc280, #loc281])
#loc520 = loc(fused[#loc282, #loc279])
#loc521 = loc(fused[#loc284, #loc285])
#loc522 = loc(fused[#loc287, #loc288])
#loc523 = loc(fused[#loc289, #loc290])
#loc524 = loc(fused[#loc292, #loc291])
#loc525 = loc(fused[#loc294, #loc293])
#loc526 = loc(fused[#loc297, #loc298])
#loc527 = loc(fused[#loc299, #loc300])
#loc528 = loc(fused[#loc302, #loc303])
#loc529 = loc(fused[#loc304, #loc305])
#loc530 = loc(fused[#loc306, #loc307])
#loc531 = loc(fused[#loc308, #loc300])
#loc532 = loc(fused[#loc310, #loc311])
#loc533 = loc(fused[#loc314, #loc315])
#loc534 = loc(fused[#loc316, #loc311])
#loc535 = loc(fused[#loc322, #loc323])
#loc536 = loc(fused[#loc324, #loc325])
#loc537 = loc(fused[#loc326, #loc327])
#loc538 = loc(fused[#loc328, #loc325])
#loc539 = loc(fused[#loc332, #loc333])
#loc540 = loc(fused[#loc336, #loc337])
#loc541 = loc(fused[#loc338, #loc339])
#loc542 = loc(fused[#loc340, #loc341])
#loc543 = loc(fused[#loc343, #loc344])
#loc544 = loc(fused[#loc345, #loc339])
#loc545 = loc(fused[#loc349, #loc347])
#loc546 = loc(fused[#loc354, #loc355])
#loc547 = loc(fused[#loc357, #loc358])
#loc548 = loc(fused[#loc359, #loc360])
#loc549 = loc(fused[#loc361, #loc358])
#loc550 = loc(fused[#loc364, #loc365])
#loc551 = loc(fused[#loc366, #loc367])
#loc552 = loc(fused[#loc368, #loc365])
#loc553 = loc(fused[#loc373, #loc371])
#loc554 = loc(fused[#loc374, #loc375])
#loc555 = loc(fused[#loc376, #loc377])
#loc556 = loc(fused[#loc379, #loc380])
#loc557 = loc(fused[#loc381, #loc382])
#loc558 = loc(fused[#loc383, #loc384])
#loc559 = loc(fused[#loc386, #loc387])
#loc560 = loc(fused[#loc385, #loc387])
#loc561 = loc(fused[#loc389, #loc390])
#loc562 = loc(fused[#loc391, #loc392, #loc393, #loc384])
#loc563 = loc(fused[#loc396, #loc397])
#loc564 = loc(fused[#loc398, #loc397])
#loc565 = loc(fused[#loc406, #loc407])
