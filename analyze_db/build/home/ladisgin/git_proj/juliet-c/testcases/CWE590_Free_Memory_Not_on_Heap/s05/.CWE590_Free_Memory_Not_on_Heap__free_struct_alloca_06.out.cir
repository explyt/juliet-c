!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":139:10)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":139:14)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":139:20)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":139:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc239 = loc(fused[#loc70, #loc71])
#loc240 = loc(fused[#loc72, #loc73])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc212)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc213)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc215)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc9)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc216)
    cir.scope {
      %8 = cir.const #cir.int<5> : !s32i loc(#loc13)
      %9 = cir.const #cir.int<5> : !s32i loc(#loc14)
      %10 = cir.cmp(eq, %8, %9) : !s32i, !cir.bool loc(#loc218)
      cir.if %10 {
        cir.scope {
          %11 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc221)
          %12 = cir.const #cir.int<100> : !s32i loc(#loc19)
          %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc19)
          %14 = cir.const #cir.int<8> : !u64i loc(#loc19)
          %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc19)
          %16 = cir.alloca !u8i, !cir.ptr<!u8i>, %15 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc19)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc19)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc19)
          cir.store %18, %11 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc221)
          cir.scope {
            %20 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc223)
            cir.scope {
              %21 = cir.const #cir.int<0> : !s32i loc(#loc26)
              %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc26)
              cir.store %22, %20 : !u64i, !cir.ptr<!u64i> loc(#loc225)
              cir.for : cond {
                %23 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc28)
                %24 = cir.const #cir.int<100> : !s32i loc(#loc29)
                %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc29)
                %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc226)
                cir.condition(%26) loc(#loc30)
              } body {
                cir.scope {
                  %23 = cir.const #cir.int<1> : !s32i loc(#loc32)
                  %24 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc33)
                  %25 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc34)
                  %26 = cir.ptr_stride(%24 : !cir.ptr<!ty__twoIntsStruct>, %25 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc35)
                  %27 = cir.get_member %26[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
                  cir.store %23, %27 : !s32i, !cir.ptr<!s32i> loc(#loc228)
                  %28 = cir.const #cir.int<1> : !s32i loc(#loc37)
                  %29 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc38)
                  %30 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc39)
                  %31 = cir.ptr_stride(%29 : !cir.ptr<!ty__twoIntsStruct>, %30 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc40)
                  %32 = cir.get_member %31[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc41)
                  cir.store %28, %32 : !s32i, !cir.ptr<!s32i> loc(#loc229)
                } loc(#loc227)
                cir.yield loc(#loc25)
              } step {
                %23 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc42)
                %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc43)
                cir.store %24, %20 : !u64i, !cir.ptr<!u64i> loc(#loc230)
                cir.yield loc(#loc224)
              } loc(#loc224)
            } loc(#loc224)
          } loc(#loc222)
          %19 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc44)
          cir.store %19, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc231)
        } loc(#loc220)
      } loc(#loc219)
    } loc(#loc217)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc47)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!ty__twoIntsStruct>, %3 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc48)
    cir.call @printStructLine(%4) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc49)
    %5 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc50)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc51)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc51)
    cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc50)
    cir.return loc(#loc6)
  } loc(#loc214)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc233)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc234)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc56)
    cir.return loc(#loc53)
  } loc(#loc232)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc235)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc236)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc237)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc67)
  cir.func @main(%arg0: !s32i loc(fused[#loc70, #loc71]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc72, #loc73])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc239)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc240)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc69)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc74)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc74)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc75)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc76)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc76)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc77)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc64)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %8 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06_good : !cir.ptr<!cir.func<!void ()>> loc(#loc241)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06_good() : () -> () loc(#loc79)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc65)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc66)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %13 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc242)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06_bad() : () -> () loc(#loc83)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc67)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc86)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc243)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc243)
    cir.return %17 : !s32i loc(#loc243)
  } loc(#loc238)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc88)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc244)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc91)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc245)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc247)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc98)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc248)
    cir.scope {
      %8 = cir.const #cir.int<5> : !s32i loc(#loc102)
      %9 = cir.const #cir.int<5> : !s32i loc(#loc103)
      %10 = cir.cmp(ne, %8, %9) : !s32i, !cir.bool loc(#loc250)
      cir.if %10 {
        %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc88)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc88)
        cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc107)
      } else {
        cir.scope {
          %11 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc253)
          %12 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc112)
          %13 = cir.const #cir.int<100> : !s32i loc(#loc113)
          %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc113)
          %15 = cir.const #cir.int<8> : !u64i loc(#loc254)
          %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc255)
          %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc112)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc256)
          cir.store %18, %11 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc253)
          cir.scope {
            %20 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc118)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc119)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc119)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc258)
            cir.if %23 {
              %24 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc91)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc91)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc121)
              %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc122)
              %27 = cir.const #cir.int<1> : !s32i loc(#loc123)
              cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc122)
            } loc(#loc259)
          } loc(#loc257)
          cir.scope {
            %20 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc261)
            cir.scope {
              %21 = cir.const #cir.int<0> : !s32i loc(#loc130)
              %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc130)
              cir.store %22, %20 : !u64i, !cir.ptr<!u64i> loc(#loc263)
              cir.for : cond {
                %23 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc132)
                %24 = cir.const #cir.int<100> : !s32i loc(#loc133)
                %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc133)
                %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc264)
                cir.condition(%26) loc(#loc134)
              } body {
                cir.scope {
                  %23 = cir.const #cir.int<1> : !s32i loc(#loc136)
                  %24 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc137)
                  %25 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc138)
                  %26 = cir.ptr_stride(%24 : !cir.ptr<!ty__twoIntsStruct>, %25 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc139)
                  %27 = cir.get_member %26[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
                  cir.store %23, %27 : !s32i, !cir.ptr<!s32i> loc(#loc266)
                  %28 = cir.const #cir.int<1> : !s32i loc(#loc140)
                  %29 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc141)
                  %30 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc142)
                  %31 = cir.ptr_stride(%29 : !cir.ptr<!ty__twoIntsStruct>, %30 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc143)
                  %32 = cir.get_member %31[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc41)
                  cir.store %28, %32 : !s32i, !cir.ptr<!s32i> loc(#loc267)
                } loc(#loc265)
                cir.yield loc(#loc129)
              } step {
                %23 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc144)
                %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc145)
                cir.store %24, %20 : !u64i, !cir.ptr<!u64i> loc(#loc268)
                cir.yield loc(#loc262)
              } loc(#loc262)
            } loc(#loc262)
          } loc(#loc260)
          %19 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc146)
          cir.store %19, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc269)
        } loc(#loc252)
      } loc(#loc251)
    } loc(#loc249)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc148)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc149)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!ty__twoIntsStruct>, %3 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc150)
    cir.call @printStructLine(%4) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc151)
    %5 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc152)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc153)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc153)
    cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc152)
    cir.return loc(#loc95)
  } loc(#loc246)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc271)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc158)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc272)
    cir.scope {
      %8 = cir.const #cir.int<5> : !s32i loc(#loc162)
      %9 = cir.const #cir.int<5> : !s32i loc(#loc163)
      %10 = cir.cmp(eq, %8, %9) : !s32i, !cir.bool loc(#loc274)
      cir.if %10 {
        cir.scope {
          %11 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc277)
          %12 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc169)
          %13 = cir.const #cir.int<100> : !s32i loc(#loc170)
          %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc170)
          %15 = cir.const #cir.int<8> : !u64i loc(#loc278)
          %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc279)
          %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc169)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc280)
          cir.store %18, %11 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc277)
          cir.scope {
            %20 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc175)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc176)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc176)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc282)
            cir.if %23 {
              %24 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc178)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc178)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc179)
              %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc180)
              %27 = cir.const #cir.int<1> : !s32i loc(#loc181)
              cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc180)
            } loc(#loc283)
          } loc(#loc281)
          cir.scope {
            %20 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc285)
            cir.scope {
              %21 = cir.const #cir.int<0> : !s32i loc(#loc188)
              %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc188)
              cir.store %22, %20 : !u64i, !cir.ptr<!u64i> loc(#loc287)
              cir.for : cond {
                %23 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc190)
                %24 = cir.const #cir.int<100> : !s32i loc(#loc191)
                %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc191)
                %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc288)
                cir.condition(%26) loc(#loc192)
              } body {
                cir.scope {
                  %23 = cir.const #cir.int<1> : !s32i loc(#loc194)
                  %24 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc195)
                  %25 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc196)
                  %26 = cir.ptr_stride(%24 : !cir.ptr<!ty__twoIntsStruct>, %25 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc197)
                  %27 = cir.get_member %26[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
                  cir.store %23, %27 : !s32i, !cir.ptr<!s32i> loc(#loc290)
                  %28 = cir.const #cir.int<1> : !s32i loc(#loc198)
                  %29 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc199)
                  %30 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc200)
                  %31 = cir.ptr_stride(%29 : !cir.ptr<!ty__twoIntsStruct>, %30 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc201)
                  %32 = cir.get_member %31[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc41)
                  cir.store %28, %32 : !s32i, !cir.ptr<!s32i> loc(#loc291)
                } loc(#loc289)
                cir.yield loc(#loc187)
              } step {
                %23 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc202)
                %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc203)
                cir.store %24, %20 : !u64i, !cir.ptr<!u64i> loc(#loc292)
                cir.yield loc(#loc286)
              } loc(#loc286)
            } loc(#loc286)
          } loc(#loc284)
          %19 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc204)
          cir.store %19, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc293)
        } loc(#loc276)
      } loc(#loc275)
    } loc(#loc273)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc206)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc207)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!ty__twoIntsStruct>, %3 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc208)
    cir.call @printStructLine(%4) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc209)
    %5 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc210)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc211)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc211)
    cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc210)
    cir.return loc(#loc155)
  } loc(#loc270)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":27:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":50:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":29:5)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":29:21)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":30:12)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":30:5)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":31:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":46:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":31:8)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":31:27)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":32:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":33:9)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":45:9)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":35:13)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":35:59)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":36:13)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":43:13)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":37:17)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":37:24)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":38:17)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":42:17)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":38:26)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":38:22)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":38:29)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":38:33)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":38:31)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":39:17)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":40:44)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":40:21)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":40:32)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":40:33)
#loc36 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":41:44)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":41:21)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":41:32)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":41:33)
#loc41 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":38:39)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":38:38)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":44:20)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":44:13)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":47:22)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":47:27)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":47:28)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":47:5)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":49:5)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":49:10)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":123:1)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":127:1)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":125:5)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":125:14)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":126:5)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":126:14)
#loc58 = loc("/usr/include/stdlib.h":575:1)
#loc59 = loc("/usr/include/stdlib.h":575:41)
#loc60 = loc("/usr/include/time.h":76:1)
#loc61 = loc("/usr/include/time.h":76:38)
#loc62 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc63 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":144:15)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":146:15)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":149:15)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":151:15)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":139:1)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":154:1)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":140:1)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":142:27)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":142:22)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":142:5)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":144:5)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":145:5)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":145:64)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":146:5)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":149:5)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":150:5)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":150:63)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":151:5)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":153:12)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":153:5)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":64:19)
#loc89 = loc("/usr/include/stdlib.h":672:1)
#loc90 = loc("/usr/include/stdlib.h":672:45)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":73:27)
#loc92 = loc("/usr/include/stdlib.h":756:1)
#loc93 = loc("/usr/include/stdlib.h":756:70)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":57:1)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":90:1)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":59:5)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":59:21)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":60:12)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":60:5)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":61:5)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":86:5)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":61:8)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":61:27)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":62:5)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":65:5)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":67:5)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":64:9)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":68:9)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":85:9)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":70:13)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":70:91)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":70:59)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":70:66)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":70:70)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":70:90)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":71:13)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":75:13)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":71:17)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":71:31)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":72:13)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":73:17)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":74:17)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":74:22)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":76:13)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":83:13)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":77:17)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":77:24)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":78:17)
#loc129 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":82:17)
#loc130 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":78:26)
#loc131 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":78:22)
#loc132 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":78:29)
#loc133 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":78:33)
#loc134 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":78:31)
#loc135 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":79:17)
#loc136 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":80:44)
#loc137 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":80:21)
#loc138 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":80:32)
#loc139 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":80:33)
#loc140 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":81:44)
#loc141 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":81:21)
#loc142 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":81:32)
#loc143 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":81:33)
#loc144 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":78:39)
#loc145 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":78:38)
#loc146 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":84:20)
#loc147 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":84:13)
#loc148 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":87:22)
#loc149 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":87:27)
#loc150 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":87:28)
#loc151 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":87:5)
#loc152 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":89:5)
#loc153 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":89:10)
#loc154 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":93:1)
#loc155 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":121:1)
#loc156 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":95:5)
#loc157 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":95:21)
#loc158 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":96:12)
#loc159 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":96:5)
#loc160 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":97:5)
#loc161 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":117:5)
#loc162 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":97:8)
#loc163 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":97:27)
#loc164 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":98:5)
#loc165 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":99:9)
#loc166 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":116:9)
#loc167 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":101:13)
#loc168 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":101:91)
#loc169 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":101:59)
#loc170 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":101:66)
#loc171 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":101:70)
#loc172 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":101:90)
#loc173 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":102:13)
#loc174 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":106:13)
#loc175 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":102:17)
#loc176 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":102:31)
#loc177 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":103:13)
#loc178 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":104:27)
#loc179 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":104:17)
#loc180 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":105:17)
#loc181 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":105:22)
#loc182 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":107:13)
#loc183 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":114:13)
#loc184 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":108:17)
#loc185 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":108:24)
#loc186 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":109:17)
#loc187 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":113:17)
#loc188 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":109:26)
#loc189 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":109:22)
#loc190 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":109:29)
#loc191 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":109:33)
#loc192 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":109:31)
#loc193 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":110:17)
#loc194 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":111:44)
#loc195 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":111:21)
#loc196 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":111:32)
#loc197 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":111:33)
#loc198 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":112:44)
#loc199 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":112:21)
#loc200 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":112:32)
#loc201 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":112:33)
#loc202 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":109:39)
#loc203 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":109:38)
#loc204 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":115:20)
#loc205 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":115:13)
#loc206 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":118:22)
#loc207 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":118:27)
#loc208 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":118:28)
#loc209 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":118:5)
#loc210 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":120:5)
#loc211 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_06.c":120:10)
#loc212 = loc(fused[#loc1, #loc2])
#loc213 = loc(fused[#loc3, #loc4])
#loc214 = loc(fused[#loc5, #loc6])
#loc215 = loc(fused[#loc7, #loc8])
#loc216 = loc(fused[#loc10, #loc9])
#loc217 = loc(fused[#loc11, #loc12])
#loc218 = loc(fused[#loc13, #loc14])
#loc219 = loc(fused[#loc15, #loc12])
#loc220 = loc(fused[#loc16, #loc17])
#loc221 = loc(fused[#loc18, #loc19])
#loc222 = loc(fused[#loc20, #loc21])
#loc223 = loc(fused[#loc22, #loc23])
#loc224 = loc(fused[#loc24, #loc25])
#loc225 = loc(fused[#loc27, #loc26])
#loc226 = loc(fused[#loc28, #loc29])
#loc227 = loc(fused[#loc31, #loc25])
#loc228 = loc(fused[#loc33, #loc32])
#loc229 = loc(fused[#loc38, #loc37])
#loc230 = loc(fused[#loc43, #loc42])
#loc231 = loc(fused[#loc45, #loc44])
#loc232 = loc(fused[#loc52, #loc53])
#loc233 = loc(fused[#loc54, #loc55])
#loc234 = loc(fused[#loc56, #loc57])
#loc235 = loc(fused[#loc58, #loc59])
#loc236 = loc(fused[#loc60, #loc61])
#loc237 = loc(fused[#loc62, #loc63])
#loc238 = loc(fused[#loc68, #loc69])
#loc241 = loc(fused[#loc79, #loc80])
#loc242 = loc(fused[#loc83, #loc84])
#loc243 = loc(fused[#loc87, #loc86])
#loc244 = loc(fused[#loc89, #loc90])
#loc245 = loc(fused[#loc92, #loc93])
#loc246 = loc(fused[#loc94, #loc95])
#loc247 = loc(fused[#loc96, #loc97])
#loc248 = loc(fused[#loc99, #loc98])
#loc249 = loc(fused[#loc100, #loc101])
#loc250 = loc(fused[#loc102, #loc103])
#loc251 = loc(fused[#loc104, #loc105, #loc106, #loc101])
#loc252 = loc(fused[#loc108, #loc109])
#loc253 = loc(fused[#loc110, #loc111])
#loc254 = loc(fused[#loc114, #loc115])
#loc255 = loc(fused[#loc113, #loc115])
#loc256 = loc(fused[#loc112, #loc111])
#loc257 = loc(fused[#loc116, #loc117])
#loc258 = loc(fused[#loc118, #loc119])
#loc259 = loc(fused[#loc120, #loc117])
#loc260 = loc(fused[#loc124, #loc125])
#loc261 = loc(fused[#loc126, #loc127])
#loc262 = loc(fused[#loc128, #loc129])
#loc263 = loc(fused[#loc131, #loc130])
#loc264 = loc(fused[#loc132, #loc133])
#loc265 = loc(fused[#loc135, #loc129])
#loc266 = loc(fused[#loc137, #loc136])
#loc267 = loc(fused[#loc141, #loc140])
#loc268 = loc(fused[#loc145, #loc144])
#loc269 = loc(fused[#loc147, #loc146])
#loc270 = loc(fused[#loc154, #loc155])
#loc271 = loc(fused[#loc156, #loc157])
#loc272 = loc(fused[#loc159, #loc158])
#loc273 = loc(fused[#loc160, #loc161])
#loc274 = loc(fused[#loc162, #loc163])
#loc275 = loc(fused[#loc164, #loc161])
#loc276 = loc(fused[#loc165, #loc166])
#loc277 = loc(fused[#loc167, #loc168])
#loc278 = loc(fused[#loc171, #loc172])
#loc279 = loc(fused[#loc170, #loc172])
#loc280 = loc(fused[#loc169, #loc168])
#loc281 = loc(fused[#loc173, #loc174])
#loc282 = loc(fused[#loc175, #loc176])
#loc283 = loc(fused[#loc177, #loc174])
#loc284 = loc(fused[#loc182, #loc183])
#loc285 = loc(fused[#loc184, #loc185])
#loc286 = loc(fused[#loc186, #loc187])
#loc287 = loc(fused[#loc189, #loc188])
#loc288 = loc(fused[#loc190, #loc191])
#loc289 = loc(fused[#loc193, #loc187])
#loc290 = loc(fused[#loc195, #loc194])
#loc291 = loc(fused[#loc199, #loc198])
#loc292 = loc(fused[#loc203, #loc202])
#loc293 = loc(fused[#loc205, #loc204])
