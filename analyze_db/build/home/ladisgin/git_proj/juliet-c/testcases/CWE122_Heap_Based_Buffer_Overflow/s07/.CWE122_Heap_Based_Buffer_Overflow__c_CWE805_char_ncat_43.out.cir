!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":26:23)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":26:31)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":55:27)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":55:35)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":98:10)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":98:14)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":98:20)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":98:32)
#loc147 = loc(fused[#loc7, #loc8])
#loc167 = loc(fused[#loc65, #loc66])
#loc187 = loc(fused[#loc128, #loc129])
#loc188 = loc(fused[#loc130, #loc131])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc144)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc145)
  cir.func internal private @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43L9badSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc147)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc9)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc10)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc11)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc11)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc148)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc149)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc10)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc150)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc15)
    cir.store %7, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
    cir.scope {
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc18)
      %15 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
      %16 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc19)
      %17 = cir.cmp(eq, %15, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc153)
      cir.if %17 {
        %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc21)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc22)
        %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc23)
        cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc21)
      } loc(#loc154)
    } loc(#loc152)
    %9 = cir.const #cir.int<0> : !s8i loc(#loc24)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc25)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc27)
    cir.store %9, %13 : !s8i, !cir.ptr<!s8i> loc(#loc155)
    cir.return loc(#loc6)
  } loc(#loc146)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc156)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc157)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc158)
  cir.func @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc160)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc38)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc161)
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43L9badSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc40)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc163)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc45)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc45)
      %5 = cir.const #cir.int<67> : !s8i loc(#loc46)
      %6 = cir.cast(integral, %5 : !s8i), !s32i loc(#loc46)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc47)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc48)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc47)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc47)
      cir.libc.memset %10 bytes from %4 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc164)
      %11 = cir.const #cir.int<0> : !s8i loc(#loc51)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc52)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc53)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc52)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc54)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc165)
      %17 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc55)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
      %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc57)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc58)
      %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc58)
      %22 = cir.call @strncat(%18, %19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc55)
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
      cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc60)
      %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc61)
      %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
      %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc62)
      cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc61)
    } loc(#loc162)
    cir.return loc(#loc35)
  } loc(#loc159)
  cir.func internal private @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43L13goodG2BSourceERPc(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc65, #loc66])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc167)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc67)
    %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc68)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc69)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc69)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc168)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc169)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc68)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc170)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc73)
    cir.store %7, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc171)
    cir.scope {
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc76)
      %15 = cir.load %14 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
      %16 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc77)
      %17 = cir.cmp(eq, %15, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc173)
      cir.if %17 {
        %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc79)
        %19 = cir.const #cir.int<1> : !s32i loc(#loc80)
        %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc81)
        cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc79)
      } loc(#loc174)
    } loc(#loc172)
    %9 = cir.const #cir.int<0> : !s8i loc(#loc82)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc83)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc84)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc85)
    cir.store %9, %13 : !s8i, !cir.ptr<!s8i> loc(#loc175)
    cir.return loc(#loc64)
  } loc(#loc166)
  cir.func internal private @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc177)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc90)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc178)
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43L13goodG2BSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc92)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc180)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc97)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc97)
      %5 = cir.const #cir.int<67> : !s8i loc(#loc98)
      %6 = cir.cast(integral, %5 : !s8i), !s32i loc(#loc98)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc99)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc100)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc99)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc99)
      cir.libc.memset %10 bytes from %4 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc181)
      %11 = cir.const #cir.int<0> : !s8i loc(#loc103)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc104)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc105)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc104)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc106)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc106)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc182)
      %17 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc107)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
      %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc109)
      %20 = cir.const #cir.int<100> : !s32i loc(#loc110)
      %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc110)
      %22 = cir.call @strncat(%18, %19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc107)
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
      cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc112)
      %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc113)
      %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
      %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc114)
      cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc113)
    } loc(#loc179)
    cir.return loc(#loc87)
  } loc(#loc176)
  cir.func @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43L7goodG2BEv() : () -> () loc(#loc117)
    cir.return loc(#loc116)
  } loc(#loc183)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc184)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc185)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc122)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc123)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc124)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc125)
  cir.func @main(%arg0: !s32i loc(fused[#loc128, #loc129]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc130, #loc131])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc187)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc188)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc127)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc132)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc132)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc133)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc134)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc134)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc135)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc122)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc122)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc136)
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_434goodEv() : () -> () loc(#loc137)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc123)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc123)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc138)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc124)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc124)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc139)
    cir.call @_ZN56CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_433badEv() : () -> () loc(#loc140)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc125)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc125)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc141)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc142)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc189)
    cir.return %15 : !s32i loc(#loc189)
  } loc(#loc186)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":26:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":32:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":27:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":29:20)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":29:27)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":29:30)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":29:41)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":29:42)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":29:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":30:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":30:33)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":30:9)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":30:17)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":30:23)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":30:24)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":30:30)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":30:29)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":31:15)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":31:5)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":31:10)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":31:11)
#loc28 = loc("/usr/include/string.h":152:1)
#loc29 = loc("/usr/include/string.h":153:29)
#loc30 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc31 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc32 = loc("/usr/include/stdlib.h":687:1)
#loc33 = loc("/usr/include/stdlib.h":687:32)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":34:1)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":48:1)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":36:5)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":36:12)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":37:12)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":37:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":38:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":39:5)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":47:5)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":40:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":40:24)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":41:16)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":41:24)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":41:29)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":41:33)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":41:9)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":41:34)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":42:25)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":42:16)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":42:20)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":42:9)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":44:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":44:17)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":44:23)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":44:31)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":45:19)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":45:9)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":46:9)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":46:14)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":55:1)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":61:1)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":56:1)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":58:20)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":58:27)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":58:31)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":58:42)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":58:43)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":58:5)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":59:5)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":59:33)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":59:9)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":59:17)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":59:23)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":59:24)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":59:30)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":59:29)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":60:15)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":60:5)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":60:10)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":60:11)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":63:1)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":77:1)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":65:5)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":65:12)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":66:12)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":66:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":67:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":68:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":76:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":69:9)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":69:24)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":70:16)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":70:24)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":70:29)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":70:33)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":70:9)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":70:34)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":71:25)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":71:16)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":71:20)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":71:9)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":73:9)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":73:17)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":73:23)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":73:31)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":74:19)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":74:9)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":75:9)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":75:14)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":79:1)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":82:1)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":81:5)
#loc118 = loc("/usr/include/stdlib.h":575:1)
#loc119 = loc("/usr/include/stdlib.h":575:41)
#loc120 = loc("/usr/include/time.h":76:1)
#loc121 = loc("/usr/include/time.h":76:38)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":103:15)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":105:15)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":108:15)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":110:15)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":98:1)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":113:1)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":99:1)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":101:27)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":101:22)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":101:5)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":103:5)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":104:5)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":105:5)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":108:5)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":109:5)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":110:5)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":112:12)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_43.cpp":112:5)
#loc144 = loc(fused[#loc1, #loc2])
#loc145 = loc(fused[#loc3, #loc4])
#loc146 = loc(fused[#loc5, #loc6])
#loc148 = loc(fused[#loc12, #loc13])
#loc149 = loc(fused[#loc11, #loc13])
#loc150 = loc(fused[#loc10, #loc14])
#loc151 = loc(fused[#loc15, #loc14])
#loc152 = loc(fused[#loc16, #loc17])
#loc153 = loc(fused[#loc18, #loc19])
#loc154 = loc(fused[#loc20, #loc17])
#loc155 = loc(fused[#loc25, #loc24])
#loc156 = loc(fused[#loc28, #loc29])
#loc157 = loc(fused[#loc30, #loc31])
#loc158 = loc(fused[#loc32, #loc33])
#loc159 = loc(fused[#loc34, #loc35])
#loc160 = loc(fused[#loc36, #loc37])
#loc161 = loc(fused[#loc39, #loc38])
#loc162 = loc(fused[#loc41, #loc42])
#loc163 = loc(fused[#loc43, #loc44])
#loc164 = loc(fused[#loc49, #loc50])
#loc165 = loc(fused[#loc54, #loc51])
#loc166 = loc(fused[#loc63, #loc64])
#loc168 = loc(fused[#loc70, #loc71])
#loc169 = loc(fused[#loc69, #loc71])
#loc170 = loc(fused[#loc68, #loc72])
#loc171 = loc(fused[#loc73, #loc72])
#loc172 = loc(fused[#loc74, #loc75])
#loc173 = loc(fused[#loc76, #loc77])
#loc174 = loc(fused[#loc78, #loc75])
#loc175 = loc(fused[#loc83, #loc82])
#loc176 = loc(fused[#loc86, #loc87])
#loc177 = loc(fused[#loc88, #loc89])
#loc178 = loc(fused[#loc91, #loc90])
#loc179 = loc(fused[#loc93, #loc94])
#loc180 = loc(fused[#loc95, #loc96])
#loc181 = loc(fused[#loc101, #loc102])
#loc182 = loc(fused[#loc106, #loc103])
#loc183 = loc(fused[#loc115, #loc116])
#loc184 = loc(fused[#loc118, #loc119])
#loc185 = loc(fused[#loc120, #loc121])
#loc186 = loc(fused[#loc126, #loc127])
#loc189 = loc(fused[#loc143, #loc142])
