!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":110:10)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":110:14)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":110:20)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":110:32)
#loc154 = loc(fused[#loc101, #loc102])
#loc155 = loc(fused[#loc103, #loc104])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s03/CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc117)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc118)
  cir.func @_ZN52CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_023badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc120)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc121)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc11)
    cir.store %2, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc122)
    cir.br ^bb1 loc(#loc123)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc15)
    cir.brcond %4 ^bb2, ^bb5 loc(#loc124)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc125)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.int<4> : !u64i loc(#loc8)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc8)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc8)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc8)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc120)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc19)
    %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc20)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc126)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc22)
    cir.store %11, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc127)
    cir.br ^bb4 loc(#loc18)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc14)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc14)
  ^bb6:  // pred: ^bb5
    %12 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc24)
    %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc25)
    cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc26)
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc27)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc27)
    cir.call @_ZdlPv(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc28)
    cir.return loc(#loc6)
  } loc(#loc119)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc29)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc128)
  cir.func internal private @_ZN52CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc130)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc131)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc38)
    cir.store %2, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc132)
    cir.br ^bb1 loc(#loc133)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc42)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc134)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc29)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc29)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    cir.br ^bb6 loc(#loc44)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc135)
  ^bb4:  // pred: ^bb3
    %7 = cir.const #cir.int<4> : !u64i loc(#loc136)
    %8 = cir.call @_Znwm(%7) : (!u64i) -> !cir.ptr<!void> loc(#loc130)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc136)
    cir.store %9, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc130)
    %10 = cir.const #cir.int<5> : !s32i loc(#loc50)
    %11 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc51)
    cir.store %10, %11 : !s32i, !cir.ptr<!s32i> loc(#loc137)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc53)
    cir.store %12, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc138)
    cir.br ^bb5 loc(#loc48)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc41)
  ^bb6:  // 2 preds: ^bb2, ^bb5
    cir.br ^bb7 loc(#loc41)
  ^bb7:  // pred: ^bb6
    %13 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc55)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc57)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc58)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc58)
    cir.call @_ZdlPv(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc59)
    cir.return loc(#loc33)
  } loc(#loc129)
  cir.func internal private @_ZN52CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc140)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc141)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc66)
    cir.store %2, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc142)
    cir.br ^bb1 loc(#loc143)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<1> : !s32i loc(#loc70)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc70)
    cir.brcond %4 ^bb2, ^bb5 loc(#loc144)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc145)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.int<4> : !u64i loc(#loc146)
    %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc140)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc146)
    cir.store %7, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc140)
    %8 = cir.const #cir.int<5> : !s32i loc(#loc75)
    %9 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc76)
    cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc147)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc78)
    cir.store %10, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc148)
    cir.br ^bb4 loc(#loc73)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc69)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc69)
  ^bb6:  // pred: ^bb5
    %11 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc80)
    %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc82)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc83)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc83)
    cir.call @_ZdlPv(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc84)
    cir.return loc(#loc61)
  } loc(#loc139)
  cir.func @_ZN52CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_024goodEv() extra(#fn_attr1) {
    cir.call @_ZN52CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02L8goodG2B1Ev() : () -> () loc(#loc87)
    cir.call @_ZN52CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02L8goodG2B2Ev() : () -> () loc(#loc88)
    cir.return loc(#loc86)
  } loc(#loc149)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc150)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc151)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc152)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc96)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc97)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc98)
  cir.func @main(%arg0: !s32i loc(fused[#loc101, #loc102]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc103, #loc104])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc154)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc155)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc100)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc105)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc105)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc106)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc107)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc107)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc108)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc95)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc95)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc109)
    cir.call @_ZN52CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_024goodEv() : () -> () loc(#loc110)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc96)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc96)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc97)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    cir.call @_ZN52CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_023badEv() : () -> () loc(#loc113)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc98)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc115)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    cir.return %15 : !s32i loc(#loc156)
  } loc(#loc153)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s03/CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":26:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":42:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":34:13)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":34:39)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":28:5)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":28:11)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":29:12)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":29:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":30:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":38:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":30:8)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":31:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":32:9)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":37:9)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":35:27)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":35:14)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":35:13)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":36:20)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":36:13)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":39:19)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":39:18)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":39:5)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":41:12)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":26:6)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":56:19)
#loc30 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc31 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":49:1)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":70:1)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":62:13)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":62:36)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":51:5)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":51:11)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":52:12)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":52:5)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":53:5)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":66:5)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":53:8)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":54:5)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":57:5)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":59:5)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":56:9)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":60:9)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":65:9)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":62:32)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":63:27)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":63:14)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":63:13)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":64:20)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":64:13)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":67:19)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":67:18)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":67:5)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":69:12)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":49:13)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":73:1)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":89:1)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":81:13)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":81:36)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":75:5)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":75:11)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":76:12)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":76:5)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":77:5)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":85:5)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":77:8)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":78:5)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":79:9)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":84:9)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":81:32)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":82:27)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":82:14)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":82:13)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":83:20)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":83:13)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":86:19)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":86:18)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":86:5)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":88:12)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":73:13)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":91:1)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":95:1)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":93:5)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":94:5)
#loc89 = loc("/usr/include/stdlib.h":575:1)
#loc90 = loc("/usr/include/stdlib.h":575:41)
#loc91 = loc("/usr/include/time.h":76:1)
#loc92 = loc("/usr/include/time.h":76:38)
#loc93 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc94 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":115:15)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":117:15)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":120:15)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":122:15)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":110:1)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":125:1)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":111:1)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":113:27)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":113:22)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":113:5)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":115:5)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":116:5)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":117:5)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":120:5)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":121:5)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":122:5)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":124:12)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_02.cpp":124:5)
#loc117 = loc(fused[#loc1, #loc2])
#loc118 = loc(fused[#loc3, #loc4])
#loc119 = loc(fused[#loc5, #loc6])
#loc120 = loc(fused[#loc7, #loc8])
#loc121 = loc(fused[#loc9, #loc10])
#loc122 = loc(fused[#loc12, #loc11])
#loc123 = loc(fused[#loc13, #loc14])
#loc124 = loc(fused[#loc16, #loc14])
#loc125 = loc(fused[#loc17, #loc18])
#loc126 = loc(fused[#loc21, #loc19])
#loc127 = loc(fused[#loc23, #loc22])
#loc128 = loc(fused[#loc30, #loc31])
#loc129 = loc(fused[#loc32, #loc33])
#loc130 = loc(fused[#loc34, #loc35])
#loc131 = loc(fused[#loc36, #loc37])
#loc132 = loc(fused[#loc39, #loc38])
#loc133 = loc(fused[#loc40, #loc41])
#loc134 = loc(fused[#loc43, #loc44, #loc45, #loc41])
#loc135 = loc(fused[#loc47, #loc48])
#loc136 = loc(fused[#loc49, #loc35])
#loc137 = loc(fused[#loc52, #loc50])
#loc138 = loc(fused[#loc54, #loc53])
#loc139 = loc(fused[#loc60, #loc61])
#loc140 = loc(fused[#loc62, #loc63])
#loc141 = loc(fused[#loc64, #loc65])
#loc142 = loc(fused[#loc67, #loc66])
#loc143 = loc(fused[#loc68, #loc69])
#loc144 = loc(fused[#loc71, #loc69])
#loc145 = loc(fused[#loc72, #loc73])
#loc146 = loc(fused[#loc74, #loc63])
#loc147 = loc(fused[#loc77, #loc75])
#loc148 = loc(fused[#loc79, #loc78])
#loc149 = loc(fused[#loc85, #loc86])
#loc150 = loc(fused[#loc89, #loc90])
#loc151 = loc(fused[#loc91, #loc92])
#loc152 = loc(fused[#loc93, #loc94])
#loc153 = loc(fused[#loc99, #loc100])
#loc156 = loc(fused[#loc116, #loc115])
