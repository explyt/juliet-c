!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" internal dsolocal @CWE590_Free_Memory_Not_on_Heap__free_struct_static_64_bad.dataBuffer = #cir.zero : !cir.array<!ty__twoIntsStruct x 100> {alignment = 16 : i64} loc(#loc1)
  cir.func private @CWE590_Free_Memory_Not_on_Heap__free_struct_static_64b_badSink(!cir.ptr<!void>) loc(#loc101)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_struct_static_64_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc103)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc8)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc104)
    cir.scope {
      %3 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_struct_static_64_bad.dataBuffer : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>> loc(#loc1)
      cir.scope {
        %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc107)
        cir.scope {
          %6 = cir.const #cir.int<0> : !s32i loc(#loc18)
          %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc18)
          cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc109)
          cir.for : cond {
            %8 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc20)
            %9 = cir.const #cir.int<100> : !s32i loc(#loc21)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc21)
            %11 = cir.cmp(lt, %8, %10) : !u64i, !cir.bool loc(#loc110)
            cir.condition(%11) loc(#loc22)
          } body {
            cir.scope {
              %8 = cir.const #cir.int<1> : !s32i loc(#loc24)
              %9 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc25)
              %10 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc26)
              %11 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %9 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc26)
              %12 = cir.get_member %11[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc27)
              cir.store %8, %12 : !s32i, !cir.ptr<!s32i> loc(#loc112)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc28)
              %14 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc29)
              %15 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!ty__twoIntsStruct>, %14 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
              %17 = cir.get_member %16[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
              cir.store %13, %17 : !s32i, !cir.ptr<!s32i> loc(#loc113)
            } loc(#loc111)
            cir.yield loc(#loc17)
          } step {
            %8 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc32)
            %9 = cir.unary(inc, %8) : !u64i, !u64i loc(#loc33)
            cir.store %9, %5 : !u64i, !cir.ptr<!u64i> loc(#loc114)
            cir.yield loc(#loc108)
          } loc(#loc108)
        } loc(#loc108)
      } loc(#loc106)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
      cir.store %4, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc115)
    } loc(#loc105)
    %2 = cir.cast(bitcast, %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>), !cir.ptr<!void> loc(#loc116)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_struct_static_64b_badSink(%2) : (!cir.ptr<!void>) -> () loc(#loc38)
    cir.return loc(#loc5)
  } loc(#loc102)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_struct_static_64_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc118)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc41)
    cir.return loc(#loc40)
  } loc(#loc117)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc119)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc120)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc47)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc121)
  cir.func private @CWE590_Free_Memory_Not_on_Heap__free_struct_static_64b_goodG2BSink(!cir.ptr<!void>) loc(#loc122)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc124)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc56)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc125)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc127)
      %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc62)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc63)
      %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc63)
      %7 = cir.const #cir.int<8> : !u64i loc(#loc128)
      %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc129)
      %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc62)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc130)
      cir.store %10, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc127)
      cir.scope {
        %12 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc68)
        %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc69)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc69)
        %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc132)
        cir.if %15 {
          %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc47)
          %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc47)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc71)
          %18 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc72)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc73)
          cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr1) loc(#loc72)
        } loc(#loc133)
      } loc(#loc131)
      cir.scope {
        %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc135)
        cir.scope {
          %13 = cir.const #cir.int<0> : !s32i loc(#loc80)
          %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc80)
          cir.store %14, %12 : !u64i, !cir.ptr<!u64i> loc(#loc137)
          cir.for : cond {
            %15 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc82)
            %16 = cir.const #cir.int<100> : !s32i loc(#loc83)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc83)
            %18 = cir.cmp(lt, %15, %17) : !u64i, !cir.bool loc(#loc138)
            cir.condition(%18) loc(#loc84)
          } body {
            cir.scope {
              %15 = cir.const #cir.int<1> : !s32i loc(#loc86)
              %16 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc87)
              %17 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc88)
              %18 = cir.ptr_stride(%16 : !cir.ptr<!ty__twoIntsStruct>, %17 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc89)
              %19 = cir.get_member %18[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc27)
              cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc140)
              %20 = cir.const #cir.int<1> : !s32i loc(#loc90)
              %21 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc91)
              %22 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc92)
              %23 = cir.ptr_stride(%21 : !cir.ptr<!ty__twoIntsStruct>, %22 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc93)
              %24 = cir.get_member %23[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
              cir.store %20, %24 : !s32i, !cir.ptr<!s32i> loc(#loc141)
            } loc(#loc139)
            cir.yield loc(#loc79)
          } step {
            %15 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc94)
            %16 = cir.unary(inc, %15) : !u64i, !u64i loc(#loc95)
            cir.store %16, %12 : !u64i, !cir.ptr<!u64i> loc(#loc142)
            cir.yield loc(#loc136)
          } loc(#loc136)
        } loc(#loc136)
      } loc(#loc134)
      %11 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc96)
      cir.store %11, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc143)
    } loc(#loc126)
    %2 = cir.cast(bitcast, %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>), !cir.ptr<!void> loc(#loc144)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_struct_static_64b_goodG2BSink(%2) : (!cir.ptr<!void>) -> () loc(#loc100)
    cir.return loc(#loc53)
  } loc(#loc123)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":32:30)
#loc2 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":24:1)
#loc3 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":24:87)
#loc4 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":26:1)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":44:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":28:5)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":28:21)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":29:12)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":29:5)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":30:5)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":42:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":33:9)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":40:9)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":34:13)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":34:20)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":35:13)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":39:13)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":35:22)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":35:18)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":35:25)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":35:29)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":35:27)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":36:13)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":37:40)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":37:28)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":37:17)
#loc27 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":38:40)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":38:28)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":38:17)
#loc31 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":35:35)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":35:34)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":41:16)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":41:9)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":43:68)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":43:69)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":43:5)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":78:1)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":81:1)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":80:5)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":80:13)
#loc43 = loc("/usr/include/stdlib.h":672:1)
#loc44 = loc("/usr/include/stdlib.h":672:45)
#loc45 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc46 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":62:23)
#loc48 = loc("/usr/include/stdlib.h":756:1)
#loc49 = loc("/usr/include/stdlib.h":756:70)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":51:1)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":51:91)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":53:1)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":76:1)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":55:5)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":55:21)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":56:12)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":56:5)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":57:5)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":74:5)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":59:9)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":59:87)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":59:55)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":59:62)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":59:66)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":59:86)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":60:9)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":64:9)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":60:13)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":60:27)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":61:9)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":62:13)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":63:13)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":63:18)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":65:9)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":72:9)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":66:13)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":66:20)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":67:13)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":71:13)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":67:22)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":67:18)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":67:25)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":67:29)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":67:27)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":68:13)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":69:40)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":69:17)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":69:28)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":69:29)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":70:40)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":70:17)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":70:28)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":70:29)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":67:35)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":67:34)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":73:16)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":73:9)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":75:72)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":75:73)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_static_64a.c":75:5)
#loc101 = loc(fused[#loc2, #loc3])
#loc102 = loc(fused[#loc4, #loc5])
#loc103 = loc(fused[#loc6, #loc7])
#loc104 = loc(fused[#loc9, #loc8])
#loc105 = loc(fused[#loc10, #loc11])
#loc106 = loc(fused[#loc12, #loc13])
#loc107 = loc(fused[#loc14, #loc15])
#loc108 = loc(fused[#loc16, #loc17])
#loc109 = loc(fused[#loc19, #loc18])
#loc110 = loc(fused[#loc20, #loc21])
#loc111 = loc(fused[#loc23, #loc17])
#loc112 = loc(fused[#loc26, #loc24])
#loc113 = loc(fused[#loc30, #loc28])
#loc114 = loc(fused[#loc33, #loc32])
#loc115 = loc(fused[#loc35, #loc34])
#loc116 = loc(fused[#loc36, #loc37])
#loc117 = loc(fused[#loc39, #loc40])
#loc118 = loc(fused[#loc41, #loc42])
#loc119 = loc(fused[#loc43, #loc44])
#loc120 = loc(fused[#loc45, #loc46])
#loc121 = loc(fused[#loc48, #loc49])
#loc122 = loc(fused[#loc50, #loc51])
#loc123 = loc(fused[#loc52, #loc53])
#loc124 = loc(fused[#loc54, #loc55])
#loc125 = loc(fused[#loc57, #loc56])
#loc126 = loc(fused[#loc58, #loc59])
#loc127 = loc(fused[#loc60, #loc61])
#loc128 = loc(fused[#loc64, #loc65])
#loc129 = loc(fused[#loc63, #loc65])
#loc130 = loc(fused[#loc62, #loc61])
#loc131 = loc(fused[#loc66, #loc67])
#loc132 = loc(fused[#loc68, #loc69])
#loc133 = loc(fused[#loc70, #loc67])
#loc134 = loc(fused[#loc74, #loc75])
#loc135 = loc(fused[#loc76, #loc77])
#loc136 = loc(fused[#loc78, #loc79])
#loc137 = loc(fused[#loc81, #loc80])
#loc138 = loc(fused[#loc82, #loc83])
#loc139 = loc(fused[#loc85, #loc79])
#loc140 = loc(fused[#loc87, #loc86])
#loc141 = loc(fused[#loc91, #loc90])
#loc142 = loc(fused[#loc95, #loc94])
#loc143 = loc(fused[#loc97, #loc96])
#loc144 = loc(fused[#loc98, #loc99])
