!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":50:25)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":50:32)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":178:29)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":178:36)
#loc320 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":143:29)
#loc321 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":143:36)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc380 = loc(fused[#loc18, #loc19])
#loc441 = loc(fused[#loc177, #loc178])
#loc495 = loc(fused[#loc320, #loc321])
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc372)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc373)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc374)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc375)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc376)
  cir.func private @strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc377)
  cir.func private @close(!s32i) -> !s32i loc(#loc378)
  cir.func internal private @badSource(%arg0: !u64i loc(fused[#loc18, #loc19])) -> !u64i extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc380)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["__retval"] {alignment = 8 : i64} loc(#loc17)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc20)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc382)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc383)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc384)
      %7 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc385)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc28)
      %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc28)
      cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc384)
      cir.scope {
        cir.do {
          cir.scope {
            %10 = cir.const #cir.int<2> : !s32i loc(#loc35)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc36)
            %12 = cir.const #cir.int<6> : !s32i loc(#loc37)
            %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc38)
            cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc388)
            cir.scope {
              %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc43)
              %56 = cir.const #cir.int<1> : !s32i loc(#loc44)
              %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc44)
              %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc390)
              cir.if %58 {
                cir.break loc(#loc46)
              } loc(#loc391)
            } loc(#loc389)
            %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc392)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc49)
            %16 = cir.const #cir.int<16> : !u64i loc(#loc393)
            cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc394)
            %17 = cir.const #cir.int<2> : !s32i loc(#loc54)
            %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc54)
            %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc55)
            cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc395)
            %20 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
            %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
            %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc57)
            %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc58)
            %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc59)
            cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc396)
            %25 = cir.const #cir.int<27015> : !s32i loc(#loc62)
            %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc62)
            %27 = cir.call @htons(%26) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc63)
            %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
            cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc397)
            cir.scope {
              %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc69)
              %56 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc399)
              %57 = cir.const #cir.int<16> : !u64i loc(#loc400)
              %58 = cir.cast(integral, %57 : !u64i), !u32i loc(#loc400)
              %59 = cir.call @connect(%55, %56, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc74)
              %60 = cir.const #cir.int<1> : !s32i loc(#loc75)
              %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc75)
              %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc401)
              cir.if %62 {
                cir.break loc(#loc77)
              } loc(#loc402)
            } loc(#loc398)
            %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc78)
            %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc79)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc79)
            %32 = cir.const #cir.int<3> : !s32i loc(#loc80)
            %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc80)
            %34 = cir.const #cir.int<8> : !u64i loc(#loc80)
            %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc80)
            %36 = cir.const #cir.int<2> : !s32i loc(#loc80)
            %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc80)
            %38 = cir.binop(add, %35, %37) : !u64i loc(#loc80)
            %39 = cir.const #cir.int<1> : !s32i loc(#loc81)
            %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc81)
            %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc403)
            %42 = cir.const #cir.int<0> : !s32i loc(#loc82)
            %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc83)
            %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc83)
            cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc404)
            cir.scope {
              %55 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc88)
              %56 = cir.const #cir.int<1> : !s32i loc(#loc89)
              %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc89)
              %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc406)
              %59 = cir.ternary(%58, true {
                %60 = cir.const #true loc(#loc90)
                cir.yield %60 : !cir.bool loc(#loc90)
              }, false {
                %60 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc91)
                %61 = cir.const #cir.int<0> : !s32i loc(#loc92)
                %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc407)
                %63 = cir.ternary(%62, true {
                  %64 = cir.const #true loc(#loc90)
                  cir.yield %64 : !cir.bool loc(#loc90)
                }, false {
                  %64 = cir.const #false loc(#loc90)
                  cir.yield %64 : !cir.bool loc(#loc90)
                }) : (!cir.bool) -> !cir.bool loc(#loc90)
                cir.yield %63 : !cir.bool loc(#loc90)
              }) : (!cir.bool) -> !cir.bool loc(#loc90)
              cir.if %59 {
                cir.break loc(#loc94)
              } loc(#loc408)
            } loc(#loc405)
            %45 = cir.const #cir.int<0> : !s32i loc(#loc95)
            %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc95)
            %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc96)
            %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc97)
            %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc97)
            cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc409)
            %50 = cir.get_global @strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc98)
            %51 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc99)
            %52 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc100)
            %53 = cir.const #cir.int<0> : !s32i loc(#loc101)
            %54 = cir.call @strtoul(%51, %52, %53) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc98)
            cir.store %54, %0 : !u64i, !cir.ptr<!u64i> loc(#loc410)
          } loc(#loc387)
          cir.yield loc(#loc32)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc104)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc104)
          cir.condition(%11) loc(#loc104)
        } loc(#loc386)
      } loc(#loc386)
      cir.scope {
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc107)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc108)
        %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc108)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc412)
        cir.if %13 {
          %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc110)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc111)
        } loc(#loc413)
      } loc(#loc411)
    } loc(#loc381)
    %2 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc112)
    cir.store %2, %1 : !u64i, !cir.ptr<!u64i> loc(#loc414)
    %3 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc414)
    cir.return %3 : !u64i loc(#loc414)
  } loc(#loc379)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc415)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc416)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc417)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc120)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc418)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc419)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc125)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc421)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc130)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc130)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc422)
    %3 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc132)
    %4 = cir.call @badSource(%3) : (!u64i) -> !u64i loc(#loc133)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc423)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc425)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc142)
        %7 = cir.const #cir.int<5> : !u64i loc(#loc427)
        %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc428)
        cir.if %8 {
          %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc148)
          %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc149)
          %11 = cir.const #cir.int<1> : !u64i loc(#loc430)
          %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc431)
          %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc148)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc432)
          cir.store %14, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc433)
          cir.scope {
            %24 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
            %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc157)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc157)
            %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc435)
            cir.if %27 {
              %28 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc159)
              %29 = cir.const #cir.int<1> : !s32i loc(#loc160)
              %30 = cir.unary(minus, %29) nsw : !s32i, !s32i loc(#loc161)
              cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc159)
            } loc(#loc436)
          } loc(#loc434)
          %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc162)
          %16 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
          %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc120)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc120)
          %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc162)
          %20 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
          cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc165)
          %21 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc166)
          %22 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
          %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc167)
          cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc166)
        } else {
          %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc125)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc125)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc168)
        } loc(#loc429)
      } loc(#loc426)
    } loc(#loc424)
    cir.return loc(#loc127)
  } loc(#loc420)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc438)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc171)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc439)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc173)
    cir.return loc(#loc170)
  } loc(#loc437)
  cir.func internal private @goodB2GSource(%arg0: !u64i loc(fused[#loc177, #loc178])) -> !u64i extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc441)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["__retval"] {alignment = 8 : i64} loc(#loc176)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc179)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc443)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc444)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc445)
      %7 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc446)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc187)
      %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc187)
      cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc445)
      cir.scope {
        cir.do {
          cir.scope {
            %10 = cir.const #cir.int<2> : !s32i loc(#loc194)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc195)
            %12 = cir.const #cir.int<6> : !s32i loc(#loc196)
            %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc197)
            cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc449)
            cir.scope {
              %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc202)
              %56 = cir.const #cir.int<1> : !s32i loc(#loc203)
              %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc203)
              %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc451)
              cir.if %58 {
                cir.break loc(#loc205)
              } loc(#loc452)
            } loc(#loc450)
            %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc453)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc208)
            %16 = cir.const #cir.int<16> : !u64i loc(#loc454)
            cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc455)
            %17 = cir.const #cir.int<2> : !s32i loc(#loc213)
            %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc213)
            %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc55)
            cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc456)
            %20 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc215)
            %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc215)
            %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc216)
            %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc58)
            %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc59)
            cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc457)
            %25 = cir.const #cir.int<27015> : !s32i loc(#loc219)
            %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc219)
            %27 = cir.call @htons(%26) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc220)
            %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc64)
            cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc458)
            cir.scope {
              %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc225)
              %56 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc460)
              %57 = cir.const #cir.int<16> : !u64i loc(#loc461)
              %58 = cir.cast(integral, %57 : !u64i), !u32i loc(#loc461)
              %59 = cir.call @connect(%55, %56, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc230)
              %60 = cir.const #cir.int<1> : !s32i loc(#loc231)
              %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc231)
              %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc462)
              cir.if %62 {
                cir.break loc(#loc233)
              } loc(#loc463)
            } loc(#loc459)
            %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc234)
            %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc235)
            %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc235)
            %32 = cir.const #cir.int<3> : !s32i loc(#loc236)
            %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc236)
            %34 = cir.const #cir.int<8> : !u64i loc(#loc236)
            %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc236)
            %36 = cir.const #cir.int<2> : !s32i loc(#loc236)
            %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc236)
            %38 = cir.binop(add, %35, %37) : !u64i loc(#loc236)
            %39 = cir.const #cir.int<1> : !s32i loc(#loc237)
            %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc237)
            %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc464)
            %42 = cir.const #cir.int<0> : !s32i loc(#loc238)
            %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc239)
            %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc239)
            cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc465)
            cir.scope {
              %55 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc244)
              %56 = cir.const #cir.int<1> : !s32i loc(#loc245)
              %57 = cir.unary(minus, %56) nsw : !s32i, !s32i loc(#loc245)
              %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc467)
              %59 = cir.ternary(%58, true {
                %60 = cir.const #true loc(#loc246)
                cir.yield %60 : !cir.bool loc(#loc246)
              }, false {
                %60 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc247)
                %61 = cir.const #cir.int<0> : !s32i loc(#loc248)
                %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc468)
                %63 = cir.ternary(%62, true {
                  %64 = cir.const #true loc(#loc246)
                  cir.yield %64 : !cir.bool loc(#loc246)
                }, false {
                  %64 = cir.const #false loc(#loc246)
                  cir.yield %64 : !cir.bool loc(#loc246)
                }) : (!cir.bool) -> !cir.bool loc(#loc246)
                cir.yield %63 : !cir.bool loc(#loc246)
              }) : (!cir.bool) -> !cir.bool loc(#loc246)
              cir.if %59 {
                cir.break loc(#loc250)
              } loc(#loc469)
            } loc(#loc466)
            %45 = cir.const #cir.int<0> : !s32i loc(#loc251)
            %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc251)
            %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc252)
            %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc253)
            %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc253)
            cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc470)
            %50 = cir.get_global @strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc254)
            %51 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc255)
            %52 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc256)
            %53 = cir.const #cir.int<0> : !s32i loc(#loc257)
            %54 = cir.call @strtoul(%51, %52, %53) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc254)
            cir.store %54, %0 : !u64i, !cir.ptr<!u64i> loc(#loc471)
          } loc(#loc448)
          cir.yield loc(#loc191)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc260)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc260)
          cir.condition(%11) loc(#loc260)
        } loc(#loc447)
      } loc(#loc447)
      cir.scope {
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc263)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc264)
        %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc264)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc473)
        cir.if %13 {
          %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc266)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc267)
        } loc(#loc474)
      } loc(#loc472)
    } loc(#loc442)
    %2 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc268)
    cir.store %2, %1 : !u64i, !cir.ptr<!u64i> loc(#loc475)
    %3 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc475)
    cir.return %3 : !u64i loc(#loc475)
  } loc(#loc440)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc270)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc477)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc275)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc275)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc478)
    %3 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc277)
    %4 = cir.call @goodB2GSource(%3) : (!u64i) -> !u64i loc(#loc278)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc479)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc481)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc287)
        %7 = cir.const #cir.int<5> : !u64i loc(#loc483)
        %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc484)
        %9 = cir.ternary(%8, true {
          %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc291)
          %11 = cir.const #cir.int<100> : !s32i loc(#loc292)
          %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc292)
          %13 = cir.cmp(lt, %10, %12) : !u64i, !cir.bool loc(#loc485)
          %14 = cir.ternary(%13, true {
            %15 = cir.const #true loc(#loc290)
            cir.yield %15 : !cir.bool loc(#loc290)
          }, false {
            %15 = cir.const #false loc(#loc290)
            cir.yield %15 : !cir.bool loc(#loc290)
          }) : (!cir.bool) -> !cir.bool loc(#loc290)
          cir.yield %14 : !cir.bool loc(#loc290)
        }, false {
          %10 = cir.const #false loc(#loc290)
          cir.yield %10 : !cir.bool loc(#loc290)
        }) : (!cir.bool) -> !cir.bool loc(#loc290)
        cir.if %9 {
          %10 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc296)
          %11 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc297)
          %12 = cir.const #cir.int<1> : !u64i loc(#loc487)
          %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc488)
          %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc296)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc489)
          cir.store %15, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc490)
          cir.scope {
            %25 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc304)
            %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc305)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc305)
            %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc492)
            cir.if %28 {
              %29 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc307)
              %30 = cir.const #cir.int<1> : !s32i loc(#loc308)
              %31 = cir.unary(minus, %30) nsw : !s32i, !s32i loc(#loc309)
              cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc307)
            } loc(#loc493)
          } loc(#loc491)
          %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc310)
          %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc311)
          %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc312)
          %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc312)
          %20 = cir.call @strcpy(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc310)
          %21 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc313)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc314)
          %22 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc315)
          %23 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc316)
          %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc316)
          cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc315)
        } else {
          %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc270)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc270)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc317)
        } loc(#loc486)
      } loc(#loc482)
    } loc(#loc480)
    cir.return loc(#loc272)
  } loc(#loc476)
  cir.func internal private @goodG2BSource(%arg0: !u64i loc(fused[#loc320, #loc321])) -> !u64i extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc495)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["__retval"] {alignment = 8 : i64} loc(#loc319)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc322)
    %2 = cir.const #cir.int<20> : !s32i loc(#loc323)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc323)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc496)
    %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc325)
    cir.store %4, %1 : !u64i, !cir.ptr<!u64i> loc(#loc497)
    %5 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc497)
    cir.return %5 : !u64i loc(#loc497)
  } loc(#loc494)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc499)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc331)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc331)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc500)
    %3 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc333)
    %4 = cir.call @goodG2BSource(%3) : (!u64i) -> !u64i loc(#loc334)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc501)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc503)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc343)
        %7 = cir.const #cir.int<5> : !u64i loc(#loc505)
        %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc506)
        cir.if %8 {
          %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc349)
          %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc350)
          %11 = cir.const #cir.int<1> : !u64i loc(#loc508)
          %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc509)
          %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc349)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc510)
          cir.store %14, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc511)
          cir.scope {
            %24 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc357)
            %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc358)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc358)
            %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc513)
            cir.if %27 {
              %28 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc360)
              %29 = cir.const #cir.int<1> : !s32i loc(#loc361)
              %30 = cir.unary(minus, %29) nsw : !s32i, !s32i loc(#loc362)
              cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc360)
            } loc(#loc514)
          } loc(#loc512)
          %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc363)
          %16 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc364)
          %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc365)
          %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc365)
          %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc363)
          %20 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc366)
          cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc367)
          %21 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc368)
          %22 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc369)
          %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc369)
          cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc368)
        } else {
          %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc370)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc370)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc371)
        } loc(#loc507)
      } loc(#loc504)
    } loc(#loc502)
    cir.return loc(#loc328)
  } loc(#loc498)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":78:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":181:1)
#loc13 = loc("/usr/include/stdlib.h":183:14)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":50:1)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":109:1)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":51:1)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":52:5)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":107:5)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":57:9)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":57:13)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":58:9)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":58:28)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":59:9)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":59:32)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":60:9)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":60:41)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":61:9)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":96:17)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":62:9)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":95:9)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":71:36)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":71:45)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":71:58)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":71:29)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":71:13)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":71:69)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":72:13)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":75:13)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":72:17)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":72:34)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":73:13)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":74:17)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":76:20)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":76:21)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":76:30)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":76:33)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":76:47)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":76:13)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":76:48)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":77:34)
#loc55 = loc("/usr/include/netinet/in.h":249:5)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":77:13)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":78:39)
#loc58 = loc("/usr/include/netinet/in.h":251:20)
#loc59 = loc("/usr/include/netinet/in.h":33:15)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":78:13)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":78:59)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":79:38)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":79:32)
#loc64 = loc("/usr/include/netinet/in.h":250:15)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":79:13)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":79:46)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":80:13)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":83:13)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":80:25)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":80:58)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":80:59)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":80:68)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":80:82)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":80:17)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":80:88)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":81:13)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":82:17)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":86:31)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":86:46)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":86:59)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":86:77)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":86:80)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":86:26)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":86:13)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":86:81)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":87:13)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":90:13)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":87:17)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":87:31)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":87:44)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":87:47)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":87:61)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":88:13)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":89:17)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":92:39)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":92:25)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":92:13)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":94:20)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":94:28)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":94:41)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":94:47)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":94:13)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":94:48)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":96:16)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":97:9)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":100:9)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":97:13)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":97:30)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":98:9)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":99:26)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":99:13)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":108:12)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":108:5)
#loc114 = loc("/usr/include/stdlib.h":672:1)
#loc115 = loc("/usr/include/stdlib.h":672:45)
#loc116 = loc("/usr/include/stdlib.h":756:1)
#loc117 = loc("/usr/include/stdlib.h":756:70)
#loc118 = loc("/usr/include/string.h":141:1)
#loc119 = loc("/usr/include/string.h":142:14)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":127:30)
#loc121 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc122 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc123 = loc("/usr/include/stdlib.h":687:1)
#loc124 = loc("/usr/include/stdlib.h":687:32)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":133:23)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":111:1)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":136:1)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":113:5)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":113:12)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":115:12)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":115:5)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":116:22)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":116:12)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":116:5)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":116:26)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":117:5)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":135:5)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":118:9)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":118:16)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":122:9)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":134:9)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":122:13)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":122:20)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":122:39)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":123:9)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":130:9)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":132:9)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":124:32)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":124:39)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":124:44)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":124:55)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":124:56)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":124:13)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":125:13)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":125:45)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":125:17)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":125:29)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":125:35)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":125:36)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":125:42)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":125:41)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":127:13)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":127:20)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":128:23)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":128:13)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":129:13)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":129:18)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":133:13)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":266:1)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":270:1)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":268:5)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":268:13)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":269:5)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":269:13)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":178:1)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":237:1)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":179:1)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":180:5)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":235:5)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":185:9)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":185:13)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":186:9)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":186:28)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":187:9)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":187:32)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":188:9)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":188:41)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":189:9)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":224:17)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":190:9)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":223:9)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":199:36)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":199:45)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":199:58)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":199:29)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":199:13)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":199:69)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":200:13)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":203:13)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":200:17)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":200:34)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":201:13)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":202:17)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":204:20)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":204:21)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":204:30)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":204:33)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":204:47)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":204:13)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":204:48)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":205:34)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":205:13)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":206:49)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":206:39)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":206:13)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":206:59)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":207:38)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":207:32)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":207:13)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":207:46)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":208:13)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":211:13)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":208:25)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":208:58)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":208:59)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":208:68)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":208:82)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":208:17)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":208:88)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":209:13)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":210:17)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":214:31)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":214:46)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":214:59)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":214:77)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":214:80)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":214:26)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":214:13)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":214:81)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":215:13)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":218:13)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":215:17)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":215:31)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":215:44)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":215:47)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":215:61)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":216:13)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":217:17)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":220:39)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":220:25)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":220:13)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":222:20)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":222:28)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":222:41)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":222:47)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":222:13)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":222:48)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":224:16)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":225:9)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":228:9)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":225:13)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":225:30)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":226:9)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":227:26)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":227:13)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":236:12)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":236:5)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":261:23)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":239:1)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":264:1)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":241:5)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":241:12)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":243:12)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":243:5)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":244:26)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":244:12)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":244:5)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":244:30)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":245:5)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":263:5)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":246:9)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":246:16)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":250:9)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":262:9)
#loc287 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":250:13)
#loc288 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":250:20)
#loc289 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":250:39)
#loc290 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":250:41)
#loc291 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":250:44)
#loc292 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":250:51)
#loc293 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":251:9)
#loc294 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":258:9)
#loc295 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":260:9)
#loc296 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":252:32)
#loc297 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":252:39)
#loc298 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":252:44)
#loc299 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":252:55)
#loc300 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":252:56)
#loc301 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":252:13)
#loc302 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":253:13)
#loc303 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":253:45)
#loc304 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":253:17)
#loc305 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":253:29)
#loc306 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":253:35)
#loc307 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":253:36)
#loc308 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":253:42)
#loc309 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":253:41)
#loc310 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":255:13)
#loc311 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":255:20)
#loc312 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":255:30)
#loc313 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":256:23)
#loc314 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":256:13)
#loc315 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":257:13)
#loc316 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":257:18)
#loc317 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":261:13)
#loc318 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":143:1)
#loc319 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":148:1)
#loc322 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":144:1)
#loc323 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":146:12)
#loc324 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":146:5)
#loc325 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":147:12)
#loc326 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":147:5)
#loc327 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":150:1)
#loc328 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":175:1)
#loc329 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":152:5)
#loc330 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":152:12)
#loc331 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":154:12)
#loc332 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":154:5)
#loc333 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":155:26)
#loc334 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":155:12)
#loc335 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":155:5)
#loc336 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":155:30)
#loc337 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":156:5)
#loc338 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":174:5)
#loc339 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":157:9)
#loc340 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":157:16)
#loc341 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":161:9)
#loc342 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":173:9)
#loc343 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":161:13)
#loc344 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":161:20)
#loc345 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":161:39)
#loc346 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":162:9)
#loc347 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":169:9)
#loc348 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":171:9)
#loc349 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":163:32)
#loc350 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":163:39)
#loc351 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":163:44)
#loc352 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":163:55)
#loc353 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":163:56)
#loc354 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":163:13)
#loc355 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":164:13)
#loc356 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":164:45)
#loc357 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":164:17)
#loc358 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":164:29)
#loc359 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":164:35)
#loc360 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":164:36)
#loc361 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":164:42)
#loc362 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":164:41)
#loc363 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":166:13)
#loc364 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":166:20)
#loc365 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":166:30)
#loc366 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":167:23)
#loc367 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":167:13)
#loc368 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":168:13)
#loc369 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":168:18)
#loc370 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":172:23)
#loc371 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_42.c":172:13)
#loc372 = loc(fused[#loc1, #loc2])
#loc373 = loc(fused[#loc3, #loc4])
#loc374 = loc(fused[#loc6, #loc7])
#loc375 = loc(fused[#loc8, #loc9])
#loc376 = loc(fused[#loc10, #loc11])
#loc377 = loc(fused[#loc12, #loc13])
#loc378 = loc(fused[#loc14, #loc15])
#loc379 = loc(fused[#loc16, #loc17])
#loc381 = loc(fused[#loc21, #loc22])
#loc382 = loc(fused[#loc23, #loc24])
#loc383 = loc(fused[#loc25, #loc26])
#loc384 = loc(fused[#loc27, #loc28])
#loc385 = loc(fused[#loc29, #loc30])
#loc386 = loc(fused[#loc31, #loc32])
#loc387 = loc(fused[#loc33, #loc34])
#loc388 = loc(fused[#loc39, #loc40])
#loc389 = loc(fused[#loc41, #loc42])
#loc390 = loc(fused[#loc43, #loc44])
#loc391 = loc(fused[#loc45, #loc42])
#loc392 = loc(fused[#loc47, #loc48])
#loc393 = loc(fused[#loc50, #loc51])
#loc394 = loc(fused[#loc52, #loc53])
#loc395 = loc(fused[#loc56, #loc54])
#loc396 = loc(fused[#loc60, #loc61])
#loc397 = loc(fused[#loc65, #loc66])
#loc398 = loc(fused[#loc67, #loc68])
#loc399 = loc(fused[#loc70, #loc71])
#loc400 = loc(fused[#loc72, #loc73])
#loc401 = loc(fused[#loc74, #loc75])
#loc402 = loc(fused[#loc76, #loc68])
#loc403 = loc(fused[#loc80, #loc81])
#loc404 = loc(fused[#loc84, #loc85])
#loc405 = loc(fused[#loc86, #loc87])
#loc406 = loc(fused[#loc88, #loc89])
#loc407 = loc(fused[#loc91, #loc92])
#loc408 = loc(fused[#loc93, #loc87])
#loc409 = loc(fused[#loc97, #loc95])
#loc410 = loc(fused[#loc102, #loc103])
#loc411 = loc(fused[#loc105, #loc106])
#loc412 = loc(fused[#loc107, #loc108])
#loc413 = loc(fused[#loc109, #loc106])
#loc414 = loc(fused[#loc113, #loc112])
#loc415 = loc(fused[#loc114, #loc115])
#loc416 = loc(fused[#loc116, #loc117])
#loc417 = loc(fused[#loc118, #loc119])
#loc418 = loc(fused[#loc121, #loc122])
#loc419 = loc(fused[#loc123, #loc124])
#loc420 = loc(fused[#loc126, #loc127])
#loc421 = loc(fused[#loc128, #loc129])
#loc422 = loc(fused[#loc131, #loc130])
#loc423 = loc(fused[#loc134, #loc135])
#loc424 = loc(fused[#loc136, #loc137])
#loc425 = loc(fused[#loc138, #loc139])
#loc426 = loc(fused[#loc140, #loc141])
#loc427 = loc(fused[#loc143, #loc144])
#loc428 = loc(fused[#loc142, #loc144])
#loc429 = loc(fused[#loc145, #loc146, #loc147, #loc141])
#loc430 = loc(fused[#loc150, #loc151])
#loc431 = loc(fused[#loc149, #loc151])
#loc432 = loc(fused[#loc148, #loc152])
#loc433 = loc(fused[#loc153, #loc152])
#loc434 = loc(fused[#loc154, #loc155])
#loc435 = loc(fused[#loc156, #loc157])
#loc436 = loc(fused[#loc158, #loc155])
#loc437 = loc(fused[#loc169, #loc170])
#loc438 = loc(fused[#loc171, #loc172])
#loc439 = loc(fused[#loc173, #loc174])
#loc440 = loc(fused[#loc175, #loc176])
#loc442 = loc(fused[#loc180, #loc181])
#loc443 = loc(fused[#loc182, #loc183])
#loc444 = loc(fused[#loc184, #loc185])
#loc445 = loc(fused[#loc186, #loc187])
#loc446 = loc(fused[#loc188, #loc189])
#loc447 = loc(fused[#loc190, #loc191])
#loc448 = loc(fused[#loc192, #loc193])
#loc449 = loc(fused[#loc198, #loc199])
#loc450 = loc(fused[#loc200, #loc201])
#loc451 = loc(fused[#loc202, #loc203])
#loc452 = loc(fused[#loc204, #loc201])
#loc453 = loc(fused[#loc206, #loc207])
#loc454 = loc(fused[#loc209, #loc210])
#loc455 = loc(fused[#loc211, #loc212])
#loc456 = loc(fused[#loc214, #loc213])
#loc457 = loc(fused[#loc217, #loc218])
#loc458 = loc(fused[#loc221, #loc222])
#loc459 = loc(fused[#loc223, #loc224])
#loc460 = loc(fused[#loc226, #loc227])
#loc461 = loc(fused[#loc228, #loc229])
#loc462 = loc(fused[#loc230, #loc231])
#loc463 = loc(fused[#loc232, #loc224])
#loc464 = loc(fused[#loc236, #loc237])
#loc465 = loc(fused[#loc240, #loc241])
#loc466 = loc(fused[#loc242, #loc243])
#loc467 = loc(fused[#loc244, #loc245])
#loc468 = loc(fused[#loc247, #loc248])
#loc469 = loc(fused[#loc249, #loc243])
#loc470 = loc(fused[#loc253, #loc251])
#loc471 = loc(fused[#loc258, #loc259])
#loc472 = loc(fused[#loc261, #loc262])
#loc473 = loc(fused[#loc263, #loc264])
#loc474 = loc(fused[#loc265, #loc262])
#loc475 = loc(fused[#loc269, #loc268])
#loc476 = loc(fused[#loc271, #loc272])
#loc477 = loc(fused[#loc273, #loc274])
#loc478 = loc(fused[#loc276, #loc275])
#loc479 = loc(fused[#loc279, #loc280])
#loc480 = loc(fused[#loc281, #loc282])
#loc481 = loc(fused[#loc283, #loc284])
#loc482 = loc(fused[#loc285, #loc286])
#loc483 = loc(fused[#loc288, #loc289])
#loc484 = loc(fused[#loc287, #loc289])
#loc485 = loc(fused[#loc291, #loc292])
#loc486 = loc(fused[#loc293, #loc294, #loc295, #loc286])
#loc487 = loc(fused[#loc298, #loc299])
#loc488 = loc(fused[#loc297, #loc299])
#loc489 = loc(fused[#loc296, #loc300])
#loc490 = loc(fused[#loc301, #loc300])
#loc491 = loc(fused[#loc302, #loc303])
#loc492 = loc(fused[#loc304, #loc305])
#loc493 = loc(fused[#loc306, #loc303])
#loc494 = loc(fused[#loc318, #loc319])
#loc496 = loc(fused[#loc324, #loc323])
#loc497 = loc(fused[#loc326, #loc325])
#loc498 = loc(fused[#loc327, #loc328])
#loc499 = loc(fused[#loc329, #loc330])
#loc500 = loc(fused[#loc332, #loc331])
#loc501 = loc(fused[#loc335, #loc336])
#loc502 = loc(fused[#loc337, #loc338])
#loc503 = loc(fused[#loc339, #loc340])
#loc504 = loc(fused[#loc341, #loc342])
#loc505 = loc(fused[#loc344, #loc345])
#loc506 = loc(fused[#loc343, #loc345])
#loc507 = loc(fused[#loc346, #loc347, #loc348, #loc342])
#loc508 = loc(fused[#loc351, #loc352])
#loc509 = loc(fused[#loc350, #loc352])
#loc510 = loc(fused[#loc349, #loc353])
#loc511 = loc(fused[#loc354, #loc353])
#loc512 = loc(fused[#loc355, #loc356])
#loc513 = loc(fused[#loc357, #loc358])
#loc514 = loc(fused[#loc359, #loc356])
