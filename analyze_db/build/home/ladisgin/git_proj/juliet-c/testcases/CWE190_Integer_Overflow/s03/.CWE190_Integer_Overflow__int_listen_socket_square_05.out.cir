!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc122 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":103:48)
#loc179 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":398:10)
#loc180 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":398:14)
#loc181 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":398:20)
#loc182 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":398:32)
#loc299 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":195:48)
#loc336 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":229:28)
#loc446 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":293:48)
#loc480 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":322:28)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc615 = loc(fused[#loc179, #loc180])
#loc616 = loc(fused[#loc181, #loc182])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc544)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc545)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc546)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc547)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc548)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc549)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc550)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc551)
  cir.func private @close(!s32i) -> !s32i loc(#loc552)
  cir.func private @printIntLine(!s32i) loc(#loc553)
  cir.func no_proto @CWE190_Integer_Overflow__int_listen_socket_square_05_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc555)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc556)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc557)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc558)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc559)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc560)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc561)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc37)
    cir.store %7, %6 : !s32i, !cir.ptr<!s32i> loc(#loc562)
    cir.br ^bb1 loc(#loc563)
  ^bb1:  // pred: ^bb0
    %8 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc544)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc41)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc41)
    cir.brcond %10 ^bb2, ^bb46 loc(#loc564)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc565)
  ^bb3:  // pred: ^bb2
    %11 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc28)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc557)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc30)
    cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc558)
    cir.br ^bb4 loc(#loc566)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc566)
  ^bb5:  // pred: ^bb34
    %15 = cir.const #cir.int<0> : !s32i loc(#loc47)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc47)
    cir.brcond %16 ^bb6, ^bb35 loc(#loc47)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %17 = cir.const #cir.int<2> : !s32i loc(#loc48)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %19 = cir.const #cir.int<6> : !s32i loc(#loc50)
    %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc51)
    cir.store %20, %2 : !s32i, !cir.ptr<!s32i> loc(#loc567)
    cir.br ^bb7 loc(#loc568)
  ^bb7:  // pred: ^bb6
    %21 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc57)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc57)
    %24 = cir.cmp(eq, %21, %23) : !s32i, !cir.bool loc(#loc569)
    cir.brcond %24 ^bb8, ^bb9 loc(#loc570)
  ^bb8:  // pred: ^bb7
    cir.br ^bb35 loc(#loc59)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc55)
  ^bb10:  // pred: ^bb9
    %25 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc571)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %27 = cir.const #cir.int<16> : !u64i loc(#loc572)
    cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc573)
    %28 = cir.const #cir.int<2> : !s32i loc(#loc67)
    %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc67)
    %30 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
    cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc574)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc70)
    %33 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
    %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
    cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc575)
    %35 = cir.const #cir.int<27015> : !s32i loc(#loc74)
    %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc74)
    %37 = cir.call @htons(%36) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc75)
    %38 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
    cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc576)
    cir.br ^bb11 loc(#loc577)
  ^bb11:  // pred: ^bb10
    %39 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    %40 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc578)
    %41 = cir.const #cir.int<16> : !u64i loc(#loc579)
    %42 = cir.cast(integral, %41 : !u64i), !u32i loc(#loc579)
    %43 = cir.call @bind(%39, %40, %42) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc86)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc87)
    %45 = cir.unary(minus, %44) : !s32i, !s32i loc(#loc87)
    %46 = cir.cmp(eq, %43, %45) : !s32i, !cir.bool loc(#loc580)
    cir.brcond %46 ^bb12, ^bb13 loc(#loc581)
  ^bb12:  // pred: ^bb11
    cir.br ^bb35 loc(#loc89)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc80)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc582)
  ^bb15:  // pred: ^bb14
    %47 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    %48 = cir.const #cir.int<5> : !s32i loc(#loc93)
    %49 = cir.call @listen(%47, %48) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc94)
    %50 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %51 = cir.unary(minus, %50) : !s32i, !s32i loc(#loc95)
    %52 = cir.cmp(eq, %49, %51) : !s32i, !cir.bool loc(#loc583)
    cir.brcond %52 ^bb16, ^bb17 loc(#loc584)
  ^bb16:  // pred: ^bb15
    cir.br ^bb35 loc(#loc97)
  ^bb17:  // pred: ^bb15
    cir.br ^bb18 loc(#loc91)
  ^bb18:  // pred: ^bb17
    %53 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc99)
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc100)
    %56 = cir.call @accept(%53, %54, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc101)
    cir.store %56, %3 : !s32i, !cir.ptr<!s32i> loc(#loc585)
    cir.br ^bb19 loc(#loc586)
  ^bb19:  // pred: ^bb18
    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc107)
    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc587)
    cir.brcond %60 ^bb20, ^bb21 loc(#loc588)
  ^bb20:  // pred: ^bb19
    cir.br ^bb35 loc(#loc109)
  ^bb21:  // pred: ^bb19
    cir.br ^bb22 loc(#loc105)
  ^bb22:  // pred: ^bb21
    %61 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    %62 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc111)
    %63 = cir.cast(bitcast, %62 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc111)
    %64 = cir.const #cir.int<3> : !s32i loc(#loc112)
    %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc112)
    %66 = cir.const #cir.int<4> : !u64i loc(#loc112)
    %67 = cir.binop(mul, %65, %66) : !u64i loc(#loc112)
    %68 = cir.const #cir.int<2> : !s32i loc(#loc112)
    %69 = cir.cast(integral, %68 : !s32i), !u64i loc(#loc112)
    %70 = cir.binop(add, %67, %69) : !u64i loc(#loc112)
    %71 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %72 = cir.cast(integral, %71 : !s32i), !u64i loc(#loc113)
    %73 = cir.binop(sub, %70, %72) : !u64i loc(#loc589)
    %74 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %75 = cir.call @recv(%61, %63, %73, %74) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc115)
    %76 = cir.cast(integral, %75 : !s64i), !s32i loc(#loc115)
    cir.store %76, %0 : !s32i, !cir.ptr<!s32i> loc(#loc590)
    cir.br ^bb23 loc(#loc591)
  ^bb23:  // pred: ^bb22
    %77 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc120)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc121)
    %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc121)
    %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc592)
    cir.brcond %80 ^bb24, ^bb25 loc(#loc122)
  ^bb24:  // pred: ^bb23
    %81 = cir.const #true loc(#loc122)
    cir.br ^bb30(%81 : !cir.bool) loc(#loc122)
  ^bb25:  // pred: ^bb23
    %82 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    %83 = cir.const #cir.int<0> : !s32i loc(#loc124)
    %84 = cir.cmp(eq, %82, %83) : !s32i, !cir.bool loc(#loc593)
    cir.brcond %84 ^bb26, ^bb27 loc(#loc122)
  ^bb26:  // pred: ^bb25
    %85 = cir.const #true loc(#loc122)
    cir.br ^bb28(%85 : !cir.bool) loc(#loc122)
  ^bb27:  // pred: ^bb25
    %86 = cir.const #false loc(#loc122)
    cir.br ^bb28(%86 : !cir.bool) loc(#loc122)
  ^bb28(%87: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":103:48)):  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc122)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30(%87 : !cir.bool) loc(#loc122)
  ^bb30(%88: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":103:48)):  // 2 preds: ^bb24, ^bb29
    cir.br ^bb31 loc(#loc122)
  ^bb31:  // pred: ^bb30
    cir.brcond %88 ^bb32, ^bb33 loc(#loc594)
  ^bb32:  // pred: ^bb31
    cir.br ^bb35 loc(#loc126)
  ^bb33:  // pred: ^bb31
    cir.br ^bb34 loc(#loc119)
  ^bb34:  // pred: ^bb33
    %89 = cir.const #cir.int<0> : !s32i loc(#loc127)
    %90 = cir.cast(integral, %89 : !s32i), !s8i loc(#loc127)
    %91 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    %92 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc129)
    %93 = cir.ptr_stride(%92 : !cir.ptr<!s8i>, %91 : !s32i), !cir.ptr<!s8i> loc(#loc129)
    cir.store %90, %93 : !s8i, !cir.ptr<!s8i> loc(#loc595)
    %94 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc130)
    %95 = cir.call @atoi(%94) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc131)
    cir.store %95, %6 : !s32i, !cir.ptr<!s32i> loc(#loc596)
    cir.br ^bb5 loc(#loc46)
  ^bb35:  // 6 preds: ^bb5, ^bb8, ^bb12, ^bb16, ^bb20, ^bb32
    cir.br ^bb36 loc(#loc46)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc597)
  ^bb37:  // pred: ^bb36
    %96 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc136)
    %97 = cir.const #cir.int<1> : !s32i loc(#loc137)
    %98 = cir.unary(minus, %97) : !s32i, !s32i loc(#loc137)
    %99 = cir.cmp(ne, %96, %98) : !s32i, !cir.bool loc(#loc598)
    cir.brcond %99 ^bb38, ^bb39 loc(#loc599)
  ^bb38:  // pred: ^bb37
    %100 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    %101 = cir.call @close(%100) : (!s32i) -> !s32i loc(#loc140)
    cir.br ^bb39 loc(#loc135)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc135)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc600)
  ^bb41:  // pred: ^bb40
    %102 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    %103 = cir.const #cir.int<1> : !s32i loc(#loc144)
    %104 = cir.unary(minus, %103) : !s32i, !s32i loc(#loc144)
    %105 = cir.cmp(ne, %102, %104) : !s32i, !cir.bool loc(#loc601)
    cir.brcond %105 ^bb42, ^bb43 loc(#loc602)
  ^bb42:  // pred: ^bb41
    %106 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    %107 = cir.call @close(%106) : (!s32i) -> !s32i loc(#loc147)
    cir.br ^bb43 loc(#loc142)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc142)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc44)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc40)
  ^bb46:  // 2 preds: ^bb1, ^bb45
    cir.br ^bb47 loc(#loc40)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc603)
  ^bb48:  // pred: ^bb47
    %108 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc544)
    %109 = cir.load %108 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    %110 = cir.cast(int_to_bool, %109 : !s32i), !cir.bool loc(#loc150)
    cir.brcond %110 ^bb49, ^bb52 loc(#loc604)
  ^bb49:  // pred: ^bb48
    cir.br ^bb50 loc(#loc605)
  ^bb50:  // pred: ^bb49
    %111 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc154)
    %112 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    %113 = cir.binop(mul, %111, %112) nsw : !s32i loc(#loc154)
    cir.store %113, %5 : !s32i, !cir.ptr<!s32i> loc(#loc560)
    %114 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc155)
    cir.call @printIntLine(%114) : (!s32i) -> () loc(#loc156)
    cir.br ^bb51 loc(#loc153)
  ^bb51:  // pred: ^bb50
    cir.br ^bb52 loc(#loc149)
  ^bb52:  // 2 preds: ^bb48, ^bb51
    cir.br ^bb53 loc(#loc149)
  ^bb53:  // pred: ^bb52
    cir.return loc(#loc22)
  } loc(#loc554)
  cir.func no_proto @CWE190_Integer_Overflow__int_listen_socket_square_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc607)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc159)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc608)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc161)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc609)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc163)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc610)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc165)
    cir.return loc(#loc158)
  } loc(#loc606)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc611)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc612)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc613)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc173)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc174)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc175)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc176)
  cir.func @main(%arg0: !s32i loc(fused[#loc179, #loc180]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc181, #loc182])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc615)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc616)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc178)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc183)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc183)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc184)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc185)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc185)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc186)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc173)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc173)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc187)
    %8 = cir.get_global @CWE190_Integer_Overflow__int_listen_socket_square_05_good : !cir.ptr<!cir.func<!void ()>> loc(#loc617)
    cir.call @CWE190_Integer_Overflow__int_listen_socket_square_05_good() : () -> () loc(#loc188)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc174)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc174)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc190)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc175)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc175)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc191)
    %13 = cir.get_global @CWE190_Integer_Overflow__int_listen_socket_square_05_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc618)
    cir.call @CWE190_Integer_Overflow__int_listen_socket_square_05_bad() : () -> () loc(#loc192)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc176)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc176)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc194)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc195)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc619)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc619)
    cir.return %17 : !s32i loc(#loc619)
  } loc(#loc614)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc620)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc199)
  cir.func private @sqrt(!cir.double) -> !cir.double extra(#fn_attr) loc(#loc200)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc201)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc622)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc623)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc624)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc625)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc626)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc627)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc628)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc218)
    cir.store %7, %6 : !s32i, !cir.ptr<!s32i> loc(#loc629)
    cir.br ^bb1 loc(#loc630)
  ^bb1:  // pred: ^bb0
    %8 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc544)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc222)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc222)
    cir.brcond %10 ^bb2, ^bb46 loc(#loc631)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc632)
  ^bb3:  // pred: ^bb2
    %11 = cir.const #cir.int<1> : !s32i loc(#loc209)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc209)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc624)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc211)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc211)
    cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc625)
    cir.br ^bb4 loc(#loc633)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc633)
  ^bb5:  // pred: ^bb34
    %15 = cir.const #cir.int<0> : !s32i loc(#loc228)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc228)
    cir.brcond %16 ^bb6, ^bb35 loc(#loc228)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %17 = cir.const #cir.int<2> : !s32i loc(#loc229)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc230)
    %19 = cir.const #cir.int<6> : !s32i loc(#loc231)
    %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc232)
    cir.store %20, %2 : !s32i, !cir.ptr<!s32i> loc(#loc634)
    cir.br ^bb7 loc(#loc635)
  ^bb7:  // pred: ^bb6
    %21 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc237)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc238)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc238)
    %24 = cir.cmp(eq, %21, %23) : !s32i, !cir.bool loc(#loc636)
    cir.brcond %24 ^bb8, ^bb9 loc(#loc637)
  ^bb8:  // pred: ^bb7
    cir.br ^bb35 loc(#loc240)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc236)
  ^bb10:  // pred: ^bb9
    %25 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc638)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc243)
    %27 = cir.const #cir.int<16> : !u64i loc(#loc639)
    cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc640)
    %28 = cir.const #cir.int<2> : !s32i loc(#loc248)
    %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc248)
    %30 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
    cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc641)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc250)
    %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc250)
    %33 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
    %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
    cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc642)
    %35 = cir.const #cir.int<27015> : !s32i loc(#loc252)
    %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc252)
    %37 = cir.call @htons(%36) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc253)
    %38 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
    cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc643)
    cir.br ^bb11 loc(#loc644)
  ^bb11:  // pred: ^bb10
    %39 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc258)
    %40 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc645)
    %41 = cir.const #cir.int<16> : !u64i loc(#loc646)
    %42 = cir.cast(integral, %41 : !u64i), !u32i loc(#loc646)
    %43 = cir.call @bind(%39, %40, %42) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc263)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc264)
    %45 = cir.unary(minus, %44) : !s32i, !s32i loc(#loc264)
    %46 = cir.cmp(eq, %43, %45) : !s32i, !cir.bool loc(#loc647)
    cir.brcond %46 ^bb12, ^bb13 loc(#loc648)
  ^bb12:  // pred: ^bb11
    cir.br ^bb35 loc(#loc266)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc257)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc649)
  ^bb15:  // pred: ^bb14
    %47 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc269)
    %48 = cir.const #cir.int<5> : !s32i loc(#loc270)
    %49 = cir.call @listen(%47, %48) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc271)
    %50 = cir.const #cir.int<1> : !s32i loc(#loc272)
    %51 = cir.unary(minus, %50) : !s32i, !s32i loc(#loc272)
    %52 = cir.cmp(eq, %49, %51) : !s32i, !cir.bool loc(#loc650)
    cir.brcond %52 ^bb16, ^bb17 loc(#loc651)
  ^bb16:  // pred: ^bb15
    cir.br ^bb35 loc(#loc274)
  ^bb17:  // pred: ^bb15
    cir.br ^bb18 loc(#loc268)
  ^bb18:  // pred: ^bb17
    %53 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc275)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc276)
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc277)
    %56 = cir.call @accept(%53, %54, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc278)
    cir.store %56, %3 : !s32i, !cir.ptr<!s32i> loc(#loc652)
    cir.br ^bb19 loc(#loc653)
  ^bb19:  // pred: ^bb18
    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc283)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc284)
    %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc284)
    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc654)
    cir.brcond %60 ^bb20, ^bb21 loc(#loc655)
  ^bb20:  // pred: ^bb19
    cir.br ^bb35 loc(#loc286)
  ^bb21:  // pred: ^bb19
    cir.br ^bb22 loc(#loc282)
  ^bb22:  // pred: ^bb21
    %61 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc287)
    %62 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc288)
    %63 = cir.cast(bitcast, %62 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc288)
    %64 = cir.const #cir.int<3> : !s32i loc(#loc289)
    %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc289)
    %66 = cir.const #cir.int<4> : !u64i loc(#loc289)
    %67 = cir.binop(mul, %65, %66) : !u64i loc(#loc289)
    %68 = cir.const #cir.int<2> : !s32i loc(#loc289)
    %69 = cir.cast(integral, %68 : !s32i), !u64i loc(#loc289)
    %70 = cir.binop(add, %67, %69) : !u64i loc(#loc289)
    %71 = cir.const #cir.int<1> : !s32i loc(#loc290)
    %72 = cir.cast(integral, %71 : !s32i), !u64i loc(#loc290)
    %73 = cir.binop(sub, %70, %72) : !u64i loc(#loc656)
    %74 = cir.const #cir.int<0> : !s32i loc(#loc291)
    %75 = cir.call @recv(%61, %63, %73, %74) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc292)
    %76 = cir.cast(integral, %75 : !s64i), !s32i loc(#loc292)
    cir.store %76, %0 : !s32i, !cir.ptr<!s32i> loc(#loc657)
    cir.br ^bb23 loc(#loc658)
  ^bb23:  // pred: ^bb22
    %77 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc297)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc298)
    %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc298)
    %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc659)
    cir.brcond %80 ^bb24, ^bb25 loc(#loc299)
  ^bb24:  // pred: ^bb23
    %81 = cir.const #true loc(#loc299)
    cir.br ^bb30(%81 : !cir.bool) loc(#loc299)
  ^bb25:  // pred: ^bb23
    %82 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc300)
    %83 = cir.const #cir.int<0> : !s32i loc(#loc301)
    %84 = cir.cmp(eq, %82, %83) : !s32i, !cir.bool loc(#loc660)
    cir.brcond %84 ^bb26, ^bb27 loc(#loc299)
  ^bb26:  // pred: ^bb25
    %85 = cir.const #true loc(#loc299)
    cir.br ^bb28(%85 : !cir.bool) loc(#loc299)
  ^bb27:  // pred: ^bb25
    %86 = cir.const #false loc(#loc299)
    cir.br ^bb28(%86 : !cir.bool) loc(#loc299)
  ^bb28(%87: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":195:48)):  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc299)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30(%87 : !cir.bool) loc(#loc299)
  ^bb30(%88: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":195:48)):  // 2 preds: ^bb24, ^bb29
    cir.br ^bb31 loc(#loc299)
  ^bb31:  // pred: ^bb30
    cir.brcond %88 ^bb32, ^bb33 loc(#loc661)
  ^bb32:  // pred: ^bb31
    cir.br ^bb35 loc(#loc303)
  ^bb33:  // pred: ^bb31
    cir.br ^bb34 loc(#loc296)
  ^bb34:  // pred: ^bb33
    %89 = cir.const #cir.int<0> : !s32i loc(#loc304)
    %90 = cir.cast(integral, %89 : !s32i), !s8i loc(#loc304)
    %91 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc305)
    %92 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc306)
    %93 = cir.ptr_stride(%92 : !cir.ptr<!s8i>, %91 : !s32i), !cir.ptr<!s8i> loc(#loc306)
    cir.store %90, %93 : !s8i, !cir.ptr<!s8i> loc(#loc662)
    %94 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc307)
    %95 = cir.call @atoi(%94) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc308)
    cir.store %95, %6 : !s32i, !cir.ptr<!s32i> loc(#loc663)
    cir.br ^bb5 loc(#loc227)
  ^bb35:  // 6 preds: ^bb5, ^bb8, ^bb12, ^bb16, ^bb20, ^bb32
    cir.br ^bb36 loc(#loc227)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc664)
  ^bb37:  // pred: ^bb36
    %96 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc313)
    %97 = cir.const #cir.int<1> : !s32i loc(#loc314)
    %98 = cir.unary(minus, %97) : !s32i, !s32i loc(#loc314)
    %99 = cir.cmp(ne, %96, %98) : !s32i, !cir.bool loc(#loc665)
    cir.brcond %99 ^bb38, ^bb39 loc(#loc666)
  ^bb38:  // pred: ^bb37
    %100 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc316)
    %101 = cir.call @close(%100) : (!s32i) -> !s32i loc(#loc317)
    cir.br ^bb39 loc(#loc312)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc312)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc667)
  ^bb41:  // pred: ^bb40
    %102 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc320)
    %103 = cir.const #cir.int<1> : !s32i loc(#loc321)
    %104 = cir.unary(minus, %103) : !s32i, !s32i loc(#loc321)
    %105 = cir.cmp(ne, %102, %104) : !s32i, !cir.bool loc(#loc668)
    cir.brcond %105 ^bb42, ^bb43 loc(#loc669)
  ^bb42:  // pred: ^bb41
    %106 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc323)
    %107 = cir.call @close(%106) : (!s32i) -> !s32i loc(#loc324)
    cir.br ^bb43 loc(#loc319)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc319)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc225)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc221)
  ^bb46:  // 2 preds: ^bb1, ^bb45
    cir.br ^bb47 loc(#loc221)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc670)
  ^bb48:  // pred: ^bb47
    %108 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc620)
    %109 = cir.load %108 : !cir.ptr<!s32i>, !s32i loc(#loc327)
    %110 = cir.cast(int_to_bool, %109 : !s32i), !cir.bool loc(#loc327)
    cir.brcond %110 ^bb49, ^bb50 loc(#loc671)
  ^bb49:  // pred: ^bb48
    %111 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc199)
    %112 = cir.cast(array_to_ptrdecay, %111 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc199)
    cir.call @printLine(%112) : (!cir.ptr<!s8i>) -> () loc(#loc331)
    cir.br ^bb64 loc(#loc329)
  ^bb50:  // pred: ^bb48
    cir.br ^bb51 loc(#loc672)
  ^bb51:  // pred: ^bb50
    %113 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc334)
    %114 = cir.const #cir.int<2147483647> : !s32i loc(#loc335)
    %115 = cir.unary(minus, %114) : !s32i, !s32i loc(#loc335)
    %116 = cir.const #cir.int<1> : !s32i loc(#loc335)
    %117 = cir.binop(sub, %115, %116) nsw : !s32i loc(#loc335)
    %118 = cir.cmp(gt, %113, %117) : !s32i, !cir.bool loc(#loc673)
    cir.brcond %118 ^bb52, ^bb57 loc(#loc336)
  ^bb52:  // pred: ^bb51
    %119 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc337)
    %120 = cir.abs %119 poison : !s32i loc(#loc338)
    %121 = cir.cast(integral, %120 : !s32i), !s64i loc(#loc338)
    %122 = cir.get_global @sqrt : !cir.ptr<!cir.func<!cir.double (!cir.double)>> loc(#loc339)
    %123 = cir.const #cir.int<2147483647> : !s32i loc(#loc340)
    %124 = cir.cast(int_to_float, %123 : !s32i), !cir.double loc(#loc340)
    %125 = cir.call @sqrt(%124) : (!cir.double) -> !cir.double extra(#fn_attr) loc(#loc339)
    %126 = cir.cast(float_to_int, %125 : !cir.double), !s64i loc(#loc339)
    %127 = cir.cmp(lt, %121, %126) : !s64i, !cir.bool loc(#loc674)
    cir.brcond %127 ^bb53, ^bb54 loc(#loc336)
  ^bb53:  // pred: ^bb52
    %128 = cir.const #true loc(#loc336)
    cir.br ^bb55(%128 : !cir.bool) loc(#loc336)
  ^bb54:  // pred: ^bb52
    %129 = cir.const #false loc(#loc336)
    cir.br ^bb55(%129 : !cir.bool) loc(#loc336)
  ^bb55(%130: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":229:28)):  // 2 preds: ^bb53, ^bb54
    cir.br ^bb56 loc(#loc336)
  ^bb56:  // pred: ^bb55
    cir.br ^bb58(%130 : !cir.bool) loc(#loc336)
  ^bb57:  // pred: ^bb51
    %131 = cir.const #false loc(#loc336)
    cir.br ^bb58(%131 : !cir.bool) loc(#loc336)
  ^bb58(%132: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":229:28)):  // 2 preds: ^bb56, ^bb57
    cir.br ^bb59 loc(#loc336)
  ^bb59:  // pred: ^bb58
    cir.brcond %132 ^bb60, ^bb61 loc(#loc675)
  ^bb60:  // pred: ^bb59
    %133 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc345)
    %134 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc215)
    %135 = cir.binop(mul, %133, %134) nsw : !s32i loc(#loc345)
    cir.store %135, %5 : !s32i, !cir.ptr<!s32i> loc(#loc627)
    %136 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc346)
    cir.call @printIntLine(%136) : (!s32i) -> () loc(#loc347)
    cir.br ^bb62 loc(#loc343)
  ^bb61:  // pred: ^bb59
    %137 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc201)
    %138 = cir.cast(array_to_ptrdecay, %137 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc201)
    cir.call @printLine(%138) : (!cir.ptr<!s8i>) -> () loc(#loc348)
    cir.br ^bb62 loc(#loc333)
  ^bb62:  // 2 preds: ^bb60, ^bb61
    cir.br ^bb63 loc(#loc333)
  ^bb63:  // pred: ^bb62
    cir.br ^bb64 loc(#loc326)
  ^bb64:  // 2 preds: ^bb49, ^bb63
    cir.br ^bb65 loc(#loc326)
  ^bb65:  // pred: ^bb64
    cir.return loc(#loc203)
  } loc(#loc621)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc677)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc678)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc679)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc680)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc681)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc682)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc683)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc365)
    cir.store %7, %6 : !s32i, !cir.ptr<!s32i> loc(#loc684)
    cir.br ^bb1 loc(#loc685)
  ^bb1:  // pred: ^bb0
    %8 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc544)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc369)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc369)
    cir.brcond %10 ^bb2, ^bb46 loc(#loc686)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc687)
  ^bb3:  // pred: ^bb2
    %11 = cir.const #cir.int<1> : !s32i loc(#loc356)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc356)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc679)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc358)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc358)
    cir.store %14, %3 : !s32i, !cir.ptr<!s32i> loc(#loc680)
    cir.br ^bb4 loc(#loc688)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc688)
  ^bb5:  // pred: ^bb34
    %15 = cir.const #cir.int<0> : !s32i loc(#loc375)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc375)
    cir.brcond %16 ^bb6, ^bb35 loc(#loc375)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %17 = cir.const #cir.int<2> : !s32i loc(#loc376)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc377)
    %19 = cir.const #cir.int<6> : !s32i loc(#loc378)
    %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc379)
    cir.store %20, %2 : !s32i, !cir.ptr<!s32i> loc(#loc689)
    cir.br ^bb7 loc(#loc690)
  ^bb7:  // pred: ^bb6
    %21 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc384)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc385)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc385)
    %24 = cir.cmp(eq, %21, %23) : !s32i, !cir.bool loc(#loc691)
    cir.brcond %24 ^bb8, ^bb9 loc(#loc692)
  ^bb8:  // pred: ^bb7
    cir.br ^bb35 loc(#loc387)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc383)
  ^bb10:  // pred: ^bb9
    %25 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc693)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc390)
    %27 = cir.const #cir.int<16> : !u64i loc(#loc694)
    cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc695)
    %28 = cir.const #cir.int<2> : !s32i loc(#loc395)
    %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc395)
    %30 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
    cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc696)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc397)
    %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc397)
    %33 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
    %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
    cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc697)
    %35 = cir.const #cir.int<27015> : !s32i loc(#loc399)
    %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc399)
    %37 = cir.call @htons(%36) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc400)
    %38 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
    cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc698)
    cir.br ^bb11 loc(#loc699)
  ^bb11:  // pred: ^bb10
    %39 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc405)
    %40 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc700)
    %41 = cir.const #cir.int<16> : !u64i loc(#loc701)
    %42 = cir.cast(integral, %41 : !u64i), !u32i loc(#loc701)
    %43 = cir.call @bind(%39, %40, %42) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc410)
    %44 = cir.const #cir.int<1> : !s32i loc(#loc411)
    %45 = cir.unary(minus, %44) : !s32i, !s32i loc(#loc411)
    %46 = cir.cmp(eq, %43, %45) : !s32i, !cir.bool loc(#loc702)
    cir.brcond %46 ^bb12, ^bb13 loc(#loc703)
  ^bb12:  // pred: ^bb11
    cir.br ^bb35 loc(#loc413)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc404)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc704)
  ^bb15:  // pred: ^bb14
    %47 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc416)
    %48 = cir.const #cir.int<5> : !s32i loc(#loc417)
    %49 = cir.call @listen(%47, %48) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc418)
    %50 = cir.const #cir.int<1> : !s32i loc(#loc419)
    %51 = cir.unary(minus, %50) : !s32i, !s32i loc(#loc419)
    %52 = cir.cmp(eq, %49, %51) : !s32i, !cir.bool loc(#loc705)
    cir.brcond %52 ^bb16, ^bb17 loc(#loc706)
  ^bb16:  // pred: ^bb15
    cir.br ^bb35 loc(#loc421)
  ^bb17:  // pred: ^bb15
    cir.br ^bb18 loc(#loc415)
  ^bb18:  // pred: ^bb17
    %53 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc422)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc423)
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc424)
    %56 = cir.call @accept(%53, %54, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc425)
    cir.store %56, %3 : !s32i, !cir.ptr<!s32i> loc(#loc707)
    cir.br ^bb19 loc(#loc708)
  ^bb19:  // pred: ^bb18
    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc430)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc431)
    %59 = cir.unary(minus, %58) : !s32i, !s32i loc(#loc431)
    %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc709)
    cir.brcond %60 ^bb20, ^bb21 loc(#loc710)
  ^bb20:  // pred: ^bb19
    cir.br ^bb35 loc(#loc433)
  ^bb21:  // pred: ^bb19
    cir.br ^bb22 loc(#loc429)
  ^bb22:  // pred: ^bb21
    %61 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc434)
    %62 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc435)
    %63 = cir.cast(bitcast, %62 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc435)
    %64 = cir.const #cir.int<3> : !s32i loc(#loc436)
    %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc436)
    %66 = cir.const #cir.int<4> : !u64i loc(#loc436)
    %67 = cir.binop(mul, %65, %66) : !u64i loc(#loc436)
    %68 = cir.const #cir.int<2> : !s32i loc(#loc436)
    %69 = cir.cast(integral, %68 : !s32i), !u64i loc(#loc436)
    %70 = cir.binop(add, %67, %69) : !u64i loc(#loc436)
    %71 = cir.const #cir.int<1> : !s32i loc(#loc437)
    %72 = cir.cast(integral, %71 : !s32i), !u64i loc(#loc437)
    %73 = cir.binop(sub, %70, %72) : !u64i loc(#loc711)
    %74 = cir.const #cir.int<0> : !s32i loc(#loc438)
    %75 = cir.call @recv(%61, %63, %73, %74) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc439)
    %76 = cir.cast(integral, %75 : !s64i), !s32i loc(#loc439)
    cir.store %76, %0 : !s32i, !cir.ptr<!s32i> loc(#loc712)
    cir.br ^bb23 loc(#loc713)
  ^bb23:  // pred: ^bb22
    %77 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc444)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc445)
    %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc445)
    %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc714)
    cir.brcond %80 ^bb24, ^bb25 loc(#loc446)
  ^bb24:  // pred: ^bb23
    %81 = cir.const #true loc(#loc446)
    cir.br ^bb30(%81 : !cir.bool) loc(#loc446)
  ^bb25:  // pred: ^bb23
    %82 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc447)
    %83 = cir.const #cir.int<0> : !s32i loc(#loc448)
    %84 = cir.cmp(eq, %82, %83) : !s32i, !cir.bool loc(#loc715)
    cir.brcond %84 ^bb26, ^bb27 loc(#loc446)
  ^bb26:  // pred: ^bb25
    %85 = cir.const #true loc(#loc446)
    cir.br ^bb28(%85 : !cir.bool) loc(#loc446)
  ^bb27:  // pred: ^bb25
    %86 = cir.const #false loc(#loc446)
    cir.br ^bb28(%86 : !cir.bool) loc(#loc446)
  ^bb28(%87: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":293:48)):  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc446)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30(%87 : !cir.bool) loc(#loc446)
  ^bb30(%88: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":293:48)):  // 2 preds: ^bb24, ^bb29
    cir.br ^bb31 loc(#loc446)
  ^bb31:  // pred: ^bb30
    cir.brcond %88 ^bb32, ^bb33 loc(#loc716)
  ^bb32:  // pred: ^bb31
    cir.br ^bb35 loc(#loc450)
  ^bb33:  // pred: ^bb31
    cir.br ^bb34 loc(#loc443)
  ^bb34:  // pred: ^bb33
    %89 = cir.const #cir.int<0> : !s32i loc(#loc451)
    %90 = cir.cast(integral, %89 : !s32i), !s8i loc(#loc451)
    %91 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc452)
    %92 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc453)
    %93 = cir.ptr_stride(%92 : !cir.ptr<!s8i>, %91 : !s32i), !cir.ptr<!s8i> loc(#loc453)
    cir.store %90, %93 : !s8i, !cir.ptr<!s8i> loc(#loc717)
    %94 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc454)
    %95 = cir.call @atoi(%94) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc455)
    cir.store %95, %6 : !s32i, !cir.ptr<!s32i> loc(#loc718)
    cir.br ^bb5 loc(#loc374)
  ^bb35:  // 6 preds: ^bb5, ^bb8, ^bb12, ^bb16, ^bb20, ^bb32
    cir.br ^bb36 loc(#loc374)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc719)
  ^bb37:  // pred: ^bb36
    %96 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc460)
    %97 = cir.const #cir.int<1> : !s32i loc(#loc461)
    %98 = cir.unary(minus, %97) : !s32i, !s32i loc(#loc461)
    %99 = cir.cmp(ne, %96, %98) : !s32i, !cir.bool loc(#loc720)
    cir.brcond %99 ^bb38, ^bb39 loc(#loc721)
  ^bb38:  // pred: ^bb37
    %100 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc463)
    %101 = cir.call @close(%100) : (!s32i) -> !s32i loc(#loc464)
    cir.br ^bb39 loc(#loc459)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc459)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc722)
  ^bb41:  // pred: ^bb40
    %102 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc467)
    %103 = cir.const #cir.int<1> : !s32i loc(#loc468)
    %104 = cir.unary(minus, %103) : !s32i, !s32i loc(#loc468)
    %105 = cir.cmp(ne, %102, %104) : !s32i, !cir.bool loc(#loc723)
    cir.brcond %105 ^bb42, ^bb43 loc(#loc724)
  ^bb42:  // pred: ^bb41
    %106 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc470)
    %107 = cir.call @close(%106) : (!s32i) -> !s32i loc(#loc471)
    cir.br ^bb43 loc(#loc466)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc466)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc372)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc368)
  ^bb46:  // 2 preds: ^bb1, ^bb45
    cir.br ^bb47 loc(#loc368)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc725)
  ^bb48:  // pred: ^bb47
    %108 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc544)
    %109 = cir.load %108 : !cir.ptr<!s32i>, !s32i loc(#loc474)
    %110 = cir.cast(int_to_bool, %109 : !s32i), !cir.bool loc(#loc474)
    cir.brcond %110 ^bb49, ^bb63 loc(#loc726)
  ^bb49:  // pred: ^bb48
    cir.br ^bb50 loc(#loc727)
  ^bb50:  // pred: ^bb49
    %111 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc478)
    %112 = cir.const #cir.int<2147483647> : !s32i loc(#loc479)
    %113 = cir.unary(minus, %112) : !s32i, !s32i loc(#loc479)
    %114 = cir.const #cir.int<1> : !s32i loc(#loc479)
    %115 = cir.binop(sub, %113, %114) nsw : !s32i loc(#loc479)
    %116 = cir.cmp(gt, %111, %115) : !s32i, !cir.bool loc(#loc728)
    cir.brcond %116 ^bb51, ^bb56 loc(#loc480)
  ^bb51:  // pred: ^bb50
    %117 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc481)
    %118 = cir.abs %117 poison : !s32i loc(#loc482)
    %119 = cir.cast(integral, %118 : !s32i), !s64i loc(#loc482)
    %120 = cir.get_global @sqrt : !cir.ptr<!cir.func<!cir.double (!cir.double)>> loc(#loc483)
    %121 = cir.const #cir.int<2147483647> : !s32i loc(#loc484)
    %122 = cir.cast(int_to_float, %121 : !s32i), !cir.double loc(#loc484)
    %123 = cir.call @sqrt(%122) : (!cir.double) -> !cir.double extra(#fn_attr) loc(#loc483)
    %124 = cir.cast(float_to_int, %123 : !cir.double), !s64i loc(#loc483)
    %125 = cir.cmp(lt, %119, %124) : !s64i, !cir.bool loc(#loc729)
    cir.brcond %125 ^bb52, ^bb53 loc(#loc480)
  ^bb52:  // pred: ^bb51
    %126 = cir.const #true loc(#loc480)
    cir.br ^bb54(%126 : !cir.bool) loc(#loc480)
  ^bb53:  // pred: ^bb51
    %127 = cir.const #false loc(#loc480)
    cir.br ^bb54(%127 : !cir.bool) loc(#loc480)
  ^bb54(%128: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":322:28)):  // 2 preds: ^bb52, ^bb53
    cir.br ^bb55 loc(#loc480)
  ^bb55:  // pred: ^bb54
    cir.br ^bb57(%128 : !cir.bool) loc(#loc480)
  ^bb56:  // pred: ^bb50
    %129 = cir.const #false loc(#loc480)
    cir.br ^bb57(%129 : !cir.bool) loc(#loc480)
  ^bb57(%130: !cir.bool loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":322:28)):  // 2 preds: ^bb55, ^bb56
    cir.br ^bb58 loc(#loc480)
  ^bb58:  // pred: ^bb57
    cir.brcond %130 ^bb59, ^bb60 loc(#loc730)
  ^bb59:  // pred: ^bb58
    %131 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc489)
    %132 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc362)
    %133 = cir.binop(mul, %131, %132) nsw : !s32i loc(#loc489)
    cir.store %133, %5 : !s32i, !cir.ptr<!s32i> loc(#loc682)
    %134 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc490)
    cir.call @printIntLine(%134) : (!s32i) -> () loc(#loc491)
    cir.br ^bb61 loc(#loc487)
  ^bb60:  // pred: ^bb58
    %135 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc492)
    %136 = cir.cast(array_to_ptrdecay, %135 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc492)
    cir.call @printLine(%136) : (!cir.ptr<!s8i>) -> () loc(#loc493)
    cir.br ^bb61 loc(#loc477)
  ^bb61:  // 2 preds: ^bb59, ^bb60
    cir.br ^bb62 loc(#loc477)
  ^bb62:  // pred: ^bb61
    cir.br ^bb63 loc(#loc473)
  ^bb63:  // 2 preds: ^bb48, ^bb62
    cir.br ^bb64 loc(#loc473)
  ^bb64:  // pred: ^bb63
    cir.return loc(#loc350)
  } loc(#loc676)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc732)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc733)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc500)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc734)
    cir.br ^bb1 loc(#loc735)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc620)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc504)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc504)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc736)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc508)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc508)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc509)
    cir.br ^bb4 loc(#loc506)
  ^bb3:  // pred: ^bb1
    %8 = cir.const #cir.int<2> : !s32i loc(#loc510)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc737)
    cir.br ^bb4 loc(#loc503)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc503)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc738)
  ^bb6:  // pred: ^bb5
    %9 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc544)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc514)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc514)
    cir.brcond %11 ^bb7, ^bb10 loc(#loc739)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc740)
  ^bb8:  // pred: ^bb7
    %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc518)
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc497)
    %14 = cir.binop(mul, %12, %13) nsw : !s32i loc(#loc518)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc732)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc519)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc520)
    cir.br ^bb9 loc(#loc517)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc513)
  ^bb10:  // 2 preds: ^bb6, ^bb9
    cir.br ^bb11 loc(#loc513)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc495)
  } loc(#loc731)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc742)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc743)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc527)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc744)
    cir.br ^bb1 loc(#loc745)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc544)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc531)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc531)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc746)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<2> : !s32i loc(#loc533)
    cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc747)
    cir.br ^bb3 loc(#loc530)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc530)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc748)
  ^bb5:  // pred: ^bb4
    %7 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc544)
    %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc537)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc537)
    cir.brcond %9 ^bb6, ^bb9 loc(#loc749)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc750)
  ^bb7:  // pred: ^bb6
    %10 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc541)
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc524)
    %12 = cir.binop(mul, %10, %11) nsw : !s32i loc(#loc541)
    cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc742)
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc542)
    cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc543)
    cir.br ^bb8 loc(#loc540)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc536)
  ^bb9:  // 2 preds: ^bb5, ^bb8
    cir.br ^bb10 loc(#loc536)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc522)
  } loc(#loc741)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_listen_socket_square_05.c":0:0)
#loc1 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":47:1)
#loc2 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":47:25)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/netinet/in.h":404:1)
#loc6 = loc("/usr/include/netinet/in.h":405:40)
#loc7 = loc("/usr/include/sys/socket.h":112:1)
#loc8 = loc("/usr/include/sys/socket.h":113:6)
#loc9 = loc("/usr/include/sys/socket.h":296:1)
#loc10 = loc("/usr/include/sys/socket.h":296:39)
#loc11 = loc("/usr/include/sys/socket.h":306:1)
#loc12 = loc("/usr/include/sys/socket.h":307:38)
#loc13 = loc("/usr/include/sys/socket.h":145:1)
#loc14 = loc("/usr/include/sys/socket.h":145:68)
#loc15 = loc("/usr/include/stdlib.h":105:1)
#loc16 = loc("/usr/include/stdlib.h":106:33)
#loc17 = loc("/usr/include/unistd.h":358:1)
#loc18 = loc("/usr/include/unistd.h":358:27)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc21 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":52:1)
#loc22 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":137:1)
#loc23 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":64:13)
#loc24 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":64:17)
#loc25 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":65:13)
#loc26 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":65:32)
#loc27 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":66:13)
#loc28 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":66:35)
#loc29 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":67:13)
#loc30 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":67:35)
#loc31 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":68:13)
#loc32 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":68:45)
#loc33 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":133:13)
#loc34 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":133:33)
#loc35 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":54:5)
#loc36 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":54:9)
#loc37 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":56:12)
#loc38 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":56:5)
#loc39 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":57:5)
#loc40 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":128:5)
#loc41 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":57:8)
#loc42 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":58:5)
#loc43 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":59:9)
#loc44 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":127:9)
#loc45 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":69:13)
#loc46 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":112:21)
#loc47 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":112:20)
#loc48 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":79:39)
#loc49 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":79:48)
#loc50 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":79:61)
#loc51 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":79:32)
#loc52 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":79:17)
#loc53 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":79:72)
#loc54 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":80:17)
#loc55 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":83:17)
#loc56 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":80:21)
#loc57 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":80:37)
#loc58 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":81:17)
#loc59 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":82:21)
#loc60 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":84:24)
#loc61 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":84:25)
#loc62 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":84:34)
#loc63 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":84:37)
#loc64 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":84:51)
#loc65 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":84:17)
#loc66 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":84:52)
#loc67 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":85:38)
#loc68 = loc("/usr/include/netinet/in.h":249:5)
#loc69 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":85:17)
#loc70 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":86:43)
#loc71 = loc("/usr/include/netinet/in.h":251:20)
#loc72 = loc("/usr/include/netinet/in.h":33:15)
#loc73 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":86:17)
#loc74 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":87:42)
#loc75 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":87:36)
#loc76 = loc("/usr/include/netinet/in.h":250:15)
#loc77 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":87:17)
#loc78 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":87:50)
#loc79 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":88:17)
#loc80 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":91:17)
#loc81 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":88:26)
#loc82 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":88:58)
#loc83 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":88:59)
#loc84 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":88:68)
#loc85 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":88:82)
#loc86 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":88:21)
#loc87 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":88:88)
#loc88 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":89:17)
#loc89 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":90:21)
#loc90 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":92:17)
#loc91 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":95:17)
#loc92 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":92:28)
#loc93 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":92:42)
#loc94 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":92:21)
#loc95 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":92:61)
#loc96 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":93:17)
#loc97 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":94:21)
#loc98 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":96:39)
#loc99 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":96:53)
#loc100 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":96:59)
#loc101 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":96:32)
#loc102 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":96:17)
#loc103 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":96:63)
#loc104 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":97:17)
#loc105 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":100:17)
#loc106 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":97:21)
#loc107 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":97:37)
#loc108 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":98:17)
#loc109 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":99:21)
#loc110 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":102:35)
#loc111 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":102:49)
#loc112 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":102:62)
#loc113 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":102:80)
#loc114 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":102:83)
#loc115 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":102:30)
#loc116 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":102:17)
#loc117 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":102:84)
#loc118 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":103:17)
#loc119 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":106:17)
#loc120 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":103:21)
#loc121 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":103:35)
#loc123 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":103:51)
#loc124 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":103:65)
#loc125 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":104:17)
#loc126 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":105:21)
#loc127 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":108:43)
#loc128 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":108:29)
#loc129 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":108:17)
#loc130 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":110:29)
#loc131 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":110:24)
#loc132 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":110:17)
#loc133 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":110:40)
#loc134 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":113:13)
#loc135 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":116:13)
#loc136 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":113:17)
#loc137 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":113:33)
#loc138 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":114:13)
#loc139 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":115:30)
#loc140 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":115:17)
#loc141 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":117:13)
#loc142 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":120:13)
#loc143 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":117:17)
#loc144 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":117:33)
#loc145 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":118:13)
#loc146 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":119:30)
#loc147 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":119:17)
#loc148 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":129:5)
#loc149 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":136:5)
#loc150 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":129:8)
#loc151 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":130:5)
#loc152 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":131:9)
#loc153 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":135:9)
#loc154 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":133:26)
#loc155 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":134:26)
#loc156 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":134:13)
#loc157 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":381:1)
#loc158 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":387:1)
#loc159 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":383:5)
#loc160 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":383:14)
#loc161 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":384:5)
#loc162 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":384:14)
#loc163 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":385:5)
#loc164 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":385:14)
#loc165 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":386:5)
#loc166 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":386:14)
#loc167 = loc("/usr/include/stdlib.h":575:1)
#loc168 = loc("/usr/include/stdlib.h":575:41)
#loc169 = loc("/usr/include/time.h":76:1)
#loc170 = loc("/usr/include/time.h":76:38)
#loc171 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc172 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc173 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":403:15)
#loc174 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":405:15)
#loc175 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":408:15)
#loc176 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":410:15)
#loc177 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":398:1)
#loc178 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":413:1)
#loc183 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":399:1)
#loc184 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":401:27)
#loc185 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":401:22)
#loc186 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":401:5)
#loc187 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":403:5)
#loc188 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":404:5)
#loc189 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":404:63)
#loc190 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":405:5)
#loc191 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":408:5)
#loc192 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":409:5)
#loc193 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":409:62)
#loc194 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":410:5)
#loc195 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":412:12)
#loc196 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":412:5)
#loc197 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":48:1)
#loc198 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":48:26)
#loc199 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":224:19)
#loc200 = loc("/usr/include/bits/mathcalls.h":158:1)
#loc201 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":236:23)
#loc202 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":144:1)
#loc203 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":239:1)
#loc204 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":156:13)
#loc205 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":156:17)
#loc206 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":157:13)
#loc207 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":157:32)
#loc208 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":158:13)
#loc209 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":158:35)
#loc210 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":159:13)
#loc211 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":159:35)
#loc212 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":160:13)
#loc213 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":160:45)
#loc214 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":231:13)
#loc215 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":231:33)
#loc216 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":146:5)
#loc217 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":146:9)
#loc218 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":148:12)
#loc219 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":148:5)
#loc220 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":149:5)
#loc221 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":220:5)
#loc222 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":149:8)
#loc223 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":150:5)
#loc224 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":151:9)
#loc225 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":219:9)
#loc226 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":161:13)
#loc227 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":204:21)
#loc228 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":204:20)
#loc229 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":171:39)
#loc230 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":171:48)
#loc231 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":171:61)
#loc232 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":171:32)
#loc233 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":171:17)
#loc234 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":171:72)
#loc235 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":172:17)
#loc236 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":175:17)
#loc237 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":172:21)
#loc238 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":172:37)
#loc239 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":173:17)
#loc240 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":174:21)
#loc241 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":176:24)
#loc242 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":176:25)
#loc243 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":176:34)
#loc244 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":176:37)
#loc245 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":176:51)
#loc246 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":176:17)
#loc247 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":176:52)
#loc248 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":177:38)
#loc249 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":177:17)
#loc250 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":178:43)
#loc251 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":178:17)
#loc252 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":179:42)
#loc253 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":179:36)
#loc254 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":179:17)
#loc255 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":179:50)
#loc256 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":180:17)
#loc257 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":183:17)
#loc258 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":180:26)
#loc259 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":180:58)
#loc260 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":180:59)
#loc261 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":180:68)
#loc262 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":180:82)
#loc263 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":180:21)
#loc264 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":180:88)
#loc265 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":181:17)
#loc266 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":182:21)
#loc267 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":184:17)
#loc268 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":187:17)
#loc269 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":184:28)
#loc270 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":184:42)
#loc271 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":184:21)
#loc272 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":184:61)
#loc273 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":185:17)
#loc274 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":186:21)
#loc275 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":188:39)
#loc276 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":188:53)
#loc277 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":188:59)
#loc278 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":188:32)
#loc279 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":188:17)
#loc280 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":188:63)
#loc281 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":189:17)
#loc282 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":192:17)
#loc283 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":189:21)
#loc284 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":189:37)
#loc285 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":190:17)
#loc286 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":191:21)
#loc287 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":194:35)
#loc288 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":194:49)
#loc289 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":194:62)
#loc290 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":194:80)
#loc291 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":194:83)
#loc292 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":194:30)
#loc293 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":194:17)
#loc294 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":194:84)
#loc295 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":195:17)
#loc296 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":198:17)
#loc297 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":195:21)
#loc298 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":195:35)
#loc300 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":195:51)
#loc301 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":195:65)
#loc302 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":196:17)
#loc303 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":197:21)
#loc304 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":200:43)
#loc305 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":200:29)
#loc306 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":200:17)
#loc307 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":202:29)
#loc308 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":202:24)
#loc309 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":202:17)
#loc310 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":202:40)
#loc311 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":205:13)
#loc312 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":208:13)
#loc313 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":205:17)
#loc314 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":205:33)
#loc315 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":206:13)
#loc316 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":207:30)
#loc317 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":207:17)
#loc318 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":209:13)
#loc319 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":212:13)
#loc320 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":209:17)
#loc321 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":209:33)
#loc322 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":210:13)
#loc323 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":211:30)
#loc324 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":211:17)
#loc325 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":221:5)
#loc326 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":238:5)
#loc327 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":221:8)
#loc328 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":222:5)
#loc329 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":225:5)
#loc330 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":227:5)
#loc331 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":224:9)
#loc332 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":229:9)
#loc333 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":237:9)
#loc334 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":229:13)
#loc335 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":229:20)
#loc337 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":229:35)
#loc338 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":229:31)
#loc339 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":229:49)
#loc340 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":229:62)
#loc341 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":229:69)
#loc342 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":230:9)
#loc343 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":233:9)
#loc344 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":235:9)
#loc345 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":231:26)
#loc346 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":232:26)
#loc347 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":232:13)
#loc348 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":236:13)
#loc349 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":242:1)
#loc350 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":332:1)
#loc351 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":254:13)
#loc352 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":254:17)
#loc353 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":255:13)
#loc354 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":255:32)
#loc355 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":256:13)
#loc356 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":256:35)
#loc357 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":257:13)
#loc358 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":257:35)
#loc359 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":258:13)
#loc360 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":258:45)
#loc361 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":324:13)
#loc362 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":324:33)
#loc363 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":244:5)
#loc364 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":244:9)
#loc365 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":246:12)
#loc366 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":246:5)
#loc367 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":247:5)
#loc368 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":318:5)
#loc369 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":247:8)
#loc370 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":248:5)
#loc371 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":249:9)
#loc372 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":317:9)
#loc373 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":259:13)
#loc374 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":302:21)
#loc375 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":302:20)
#loc376 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":269:39)
#loc377 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":269:48)
#loc378 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":269:61)
#loc379 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":269:32)
#loc380 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":269:17)
#loc381 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":269:72)
#loc382 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":270:17)
#loc383 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":273:17)
#loc384 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":270:21)
#loc385 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":270:37)
#loc386 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":271:17)
#loc387 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":272:21)
#loc388 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":274:24)
#loc389 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":274:25)
#loc390 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":274:34)
#loc391 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":274:37)
#loc392 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":274:51)
#loc393 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":274:17)
#loc394 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":274:52)
#loc395 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":275:38)
#loc396 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":275:17)
#loc397 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":276:43)
#loc398 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":276:17)
#loc399 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":277:42)
#loc400 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":277:36)
#loc401 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":277:17)
#loc402 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":277:50)
#loc403 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":278:17)
#loc404 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":281:17)
#loc405 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":278:26)
#loc406 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":278:58)
#loc407 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":278:59)
#loc408 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":278:68)
#loc409 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":278:82)
#loc410 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":278:21)
#loc411 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":278:88)
#loc412 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":279:17)
#loc413 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":280:21)
#loc414 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":282:17)
#loc415 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":285:17)
#loc416 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":282:28)
#loc417 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":282:42)
#loc418 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":282:21)
#loc419 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":282:61)
#loc420 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":283:17)
#loc421 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":284:21)
#loc422 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":286:39)
#loc423 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":286:53)
#loc424 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":286:59)
#loc425 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":286:32)
#loc426 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":286:17)
#loc427 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":286:63)
#loc428 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":287:17)
#loc429 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":290:17)
#loc430 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":287:21)
#loc431 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":287:37)
#loc432 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":288:17)
#loc433 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":289:21)
#loc434 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":292:35)
#loc435 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":292:49)
#loc436 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":292:62)
#loc437 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":292:80)
#loc438 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":292:83)
#loc439 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":292:30)
#loc440 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":292:17)
#loc441 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":292:84)
#loc442 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":293:17)
#loc443 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":296:17)
#loc444 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":293:21)
#loc445 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":293:35)
#loc447 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":293:51)
#loc448 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":293:65)
#loc449 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":294:17)
#loc450 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":295:21)
#loc451 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":298:43)
#loc452 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":298:29)
#loc453 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":298:17)
#loc454 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":300:29)
#loc455 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":300:24)
#loc456 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":300:17)
#loc457 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":300:40)
#loc458 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":303:13)
#loc459 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":306:13)
#loc460 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":303:17)
#loc461 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":303:33)
#loc462 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":304:13)
#loc463 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":305:30)
#loc464 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":305:17)
#loc465 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":307:13)
#loc466 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":310:13)
#loc467 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":307:17)
#loc468 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":307:33)
#loc469 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":308:13)
#loc470 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":309:30)
#loc471 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":309:17)
#loc472 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":319:5)
#loc473 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":331:5)
#loc474 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":319:8)
#loc475 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":320:5)
#loc476 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":322:9)
#loc477 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":330:9)
#loc478 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":322:13)
#loc479 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":322:20)
#loc481 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":322:35)
#loc482 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":322:31)
#loc483 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":322:49)
#loc484 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":322:62)
#loc485 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":322:69)
#loc486 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":323:9)
#loc487 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":326:9)
#loc488 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":328:9)
#loc489 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":324:26)
#loc490 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":325:26)
#loc491 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":325:13)
#loc492 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":329:23)
#loc493 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":329:13)
#loc494 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":335:1)
#loc495 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":358:1)
#loc496 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":354:13)
#loc497 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":354:33)
#loc498 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":337:5)
#loc499 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":337:9)
#loc500 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":339:12)
#loc501 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":339:5)
#loc502 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":340:5)
#loc503 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":349:5)
#loc504 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":340:8)
#loc505 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":341:5)
#loc506 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":344:5)
#loc507 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":346:5)
#loc508 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":343:19)
#loc509 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":343:9)
#loc510 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":348:16)
#loc511 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":348:9)
#loc512 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":350:5)
#loc513 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":357:5)
#loc514 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":350:8)
#loc515 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":351:5)
#loc516 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":352:9)
#loc517 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":356:9)
#loc518 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":354:26)
#loc519 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":355:26)
#loc520 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":355:13)
#loc521 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":361:1)
#loc522 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":379:1)
#loc523 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":375:13)
#loc524 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":375:33)
#loc525 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":363:5)
#loc526 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":363:9)
#loc527 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":365:12)
#loc528 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":365:5)
#loc529 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":366:5)
#loc530 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":370:5)
#loc531 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":366:8)
#loc532 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":367:5)
#loc533 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":369:16)
#loc534 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":369:9)
#loc535 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":371:5)
#loc536 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":378:5)
#loc537 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":371:8)
#loc538 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":372:5)
#loc539 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":373:9)
#loc540 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":377:9)
#loc541 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":375:26)
#loc542 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":376:26)
#loc543 = loc("CWE190_Integer_Overflow__int_listen_socket_square_05.c":376:13)
#loc544 = loc(fused[#loc1, #loc2])
#loc545 = loc(fused[#loc3, #loc4])
#loc546 = loc(fused[#loc5, #loc6])
#loc547 = loc(fused[#loc7, #loc8])
#loc548 = loc(fused[#loc9, #loc10])
#loc549 = loc(fused[#loc11, #loc12])
#loc550 = loc(fused[#loc13, #loc14])
#loc551 = loc(fused[#loc15, #loc16])
#loc552 = loc(fused[#loc17, #loc18])
#loc553 = loc(fused[#loc19, #loc20])
#loc554 = loc(fused[#loc21, #loc22])
#loc555 = loc(fused[#loc23, #loc24])
#loc556 = loc(fused[#loc25, #loc26])
#loc557 = loc(fused[#loc27, #loc28])
#loc558 = loc(fused[#loc29, #loc30])
#loc559 = loc(fused[#loc31, #loc32])
#loc560 = loc(fused[#loc33, #loc34])
#loc561 = loc(fused[#loc35, #loc36])
#loc562 = loc(fused[#loc38, #loc37])
#loc563 = loc(fused[#loc39, #loc40])
#loc564 = loc(fused[#loc42, #loc40])
#loc565 = loc(fused[#loc43, #loc44])
#loc566 = loc(fused[#loc45, #loc46])
#loc567 = loc(fused[#loc52, #loc53])
#loc568 = loc(fused[#loc54, #loc55])
#loc569 = loc(fused[#loc56, #loc57])
#loc570 = loc(fused[#loc58, #loc55])
#loc571 = loc(fused[#loc60, #loc61])
#loc572 = loc(fused[#loc63, #loc64])
#loc573 = loc(fused[#loc65, #loc66])
#loc574 = loc(fused[#loc69, #loc67])
#loc575 = loc(fused[#loc73, #loc70])
#loc576 = loc(fused[#loc77, #loc78])
#loc577 = loc(fused[#loc79, #loc80])
#loc578 = loc(fused[#loc82, #loc83])
#loc579 = loc(fused[#loc84, #loc85])
#loc580 = loc(fused[#loc86, #loc87])
#loc581 = loc(fused[#loc88, #loc80])
#loc582 = loc(fused[#loc90, #loc91])
#loc583 = loc(fused[#loc94, #loc95])
#loc584 = loc(fused[#loc96, #loc91])
#loc585 = loc(fused[#loc102, #loc103])
#loc586 = loc(fused[#loc104, #loc105])
#loc587 = loc(fused[#loc106, #loc107])
#loc588 = loc(fused[#loc108, #loc105])
#loc589 = loc(fused[#loc112, #loc113])
#loc590 = loc(fused[#loc116, #loc117])
#loc591 = loc(fused[#loc118, #loc119])
#loc592 = loc(fused[#loc120, #loc121])
#loc593 = loc(fused[#loc123, #loc124])
#loc594 = loc(fused[#loc125, #loc119])
#loc595 = loc(fused[#loc129, #loc127])
#loc596 = loc(fused[#loc132, #loc133])
#loc597 = loc(fused[#loc134, #loc135])
#loc598 = loc(fused[#loc136, #loc137])
#loc599 = loc(fused[#loc138, #loc135])
#loc600 = loc(fused[#loc141, #loc142])
#loc601 = loc(fused[#loc143, #loc144])
#loc602 = loc(fused[#loc145, #loc142])
#loc603 = loc(fused[#loc148, #loc149])
#loc604 = loc(fused[#loc151, #loc149])
#loc605 = loc(fused[#loc152, #loc153])
#loc606 = loc(fused[#loc157, #loc158])
#loc607 = loc(fused[#loc159, #loc160])
#loc608 = loc(fused[#loc161, #loc162])
#loc609 = loc(fused[#loc163, #loc164])
#loc610 = loc(fused[#loc165, #loc166])
#loc611 = loc(fused[#loc167, #loc168])
#loc612 = loc(fused[#loc169, #loc170])
#loc613 = loc(fused[#loc171, #loc172])
#loc614 = loc(fused[#loc177, #loc178])
#loc617 = loc(fused[#loc188, #loc189])
#loc618 = loc(fused[#loc192, #loc193])
#loc619 = loc(fused[#loc196, #loc195])
#loc620 = loc(fused[#loc197, #loc198])
#loc621 = loc(fused[#loc202, #loc203])
#loc622 = loc(fused[#loc204, #loc205])
#loc623 = loc(fused[#loc206, #loc207])
#loc624 = loc(fused[#loc208, #loc209])
#loc625 = loc(fused[#loc210, #loc211])
#loc626 = loc(fused[#loc212, #loc213])
#loc627 = loc(fused[#loc214, #loc215])
#loc628 = loc(fused[#loc216, #loc217])
#loc629 = loc(fused[#loc219, #loc218])
#loc630 = loc(fused[#loc220, #loc221])
#loc631 = loc(fused[#loc223, #loc221])
#loc632 = loc(fused[#loc224, #loc225])
#loc633 = loc(fused[#loc226, #loc227])
#loc634 = loc(fused[#loc233, #loc234])
#loc635 = loc(fused[#loc235, #loc236])
#loc636 = loc(fused[#loc237, #loc238])
#loc637 = loc(fused[#loc239, #loc236])
#loc638 = loc(fused[#loc241, #loc242])
#loc639 = loc(fused[#loc244, #loc245])
#loc640 = loc(fused[#loc246, #loc247])
#loc641 = loc(fused[#loc249, #loc248])
#loc642 = loc(fused[#loc251, #loc250])
#loc643 = loc(fused[#loc254, #loc255])
#loc644 = loc(fused[#loc256, #loc257])
#loc645 = loc(fused[#loc259, #loc260])
#loc646 = loc(fused[#loc261, #loc262])
#loc647 = loc(fused[#loc263, #loc264])
#loc648 = loc(fused[#loc265, #loc257])
#loc649 = loc(fused[#loc267, #loc268])
#loc650 = loc(fused[#loc271, #loc272])
#loc651 = loc(fused[#loc273, #loc268])
#loc652 = loc(fused[#loc279, #loc280])
#loc653 = loc(fused[#loc281, #loc282])
#loc654 = loc(fused[#loc283, #loc284])
#loc655 = loc(fused[#loc285, #loc282])
#loc656 = loc(fused[#loc289, #loc290])
#loc657 = loc(fused[#loc293, #loc294])
#loc658 = loc(fused[#loc295, #loc296])
#loc659 = loc(fused[#loc297, #loc298])
#loc660 = loc(fused[#loc300, #loc301])
#loc661 = loc(fused[#loc302, #loc296])
#loc662 = loc(fused[#loc306, #loc304])
#loc663 = loc(fused[#loc309, #loc310])
#loc664 = loc(fused[#loc311, #loc312])
#loc665 = loc(fused[#loc313, #loc314])
#loc666 = loc(fused[#loc315, #loc312])
#loc667 = loc(fused[#loc318, #loc319])
#loc668 = loc(fused[#loc320, #loc321])
#loc669 = loc(fused[#loc322, #loc319])
#loc670 = loc(fused[#loc325, #loc326])
#loc671 = loc(fused[#loc328, #loc329, #loc330, #loc326])
#loc672 = loc(fused[#loc332, #loc333])
#loc673 = loc(fused[#loc334, #loc335])
#loc674 = loc(fused[#loc338, #loc341])
#loc675 = loc(fused[#loc342, #loc343, #loc344, #loc333])
#loc676 = loc(fused[#loc349, #loc350])
#loc677 = loc(fused[#loc351, #loc352])
#loc678 = loc(fused[#loc353, #loc354])
#loc679 = loc(fused[#loc355, #loc356])
#loc680 = loc(fused[#loc357, #loc358])
#loc681 = loc(fused[#loc359, #loc360])
#loc682 = loc(fused[#loc361, #loc362])
#loc683 = loc(fused[#loc363, #loc364])
#loc684 = loc(fused[#loc366, #loc365])
#loc685 = loc(fused[#loc367, #loc368])
#loc686 = loc(fused[#loc370, #loc368])
#loc687 = loc(fused[#loc371, #loc372])
#loc688 = loc(fused[#loc373, #loc374])
#loc689 = loc(fused[#loc380, #loc381])
#loc690 = loc(fused[#loc382, #loc383])
#loc691 = loc(fused[#loc384, #loc385])
#loc692 = loc(fused[#loc386, #loc383])
#loc693 = loc(fused[#loc388, #loc389])
#loc694 = loc(fused[#loc391, #loc392])
#loc695 = loc(fused[#loc393, #loc394])
#loc696 = loc(fused[#loc396, #loc395])
#loc697 = loc(fused[#loc398, #loc397])
#loc698 = loc(fused[#loc401, #loc402])
#loc699 = loc(fused[#loc403, #loc404])
#loc700 = loc(fused[#loc406, #loc407])
#loc701 = loc(fused[#loc408, #loc409])
#loc702 = loc(fused[#loc410, #loc411])
#loc703 = loc(fused[#loc412, #loc404])
#loc704 = loc(fused[#loc414, #loc415])
#loc705 = loc(fused[#loc418, #loc419])
#loc706 = loc(fused[#loc420, #loc415])
#loc707 = loc(fused[#loc426, #loc427])
#loc708 = loc(fused[#loc428, #loc429])
#loc709 = loc(fused[#loc430, #loc431])
#loc710 = loc(fused[#loc432, #loc429])
#loc711 = loc(fused[#loc436, #loc437])
#loc712 = loc(fused[#loc440, #loc441])
#loc713 = loc(fused[#loc442, #loc443])
#loc714 = loc(fused[#loc444, #loc445])
#loc715 = loc(fused[#loc447, #loc448])
#loc716 = loc(fused[#loc449, #loc443])
#loc717 = loc(fused[#loc453, #loc451])
#loc718 = loc(fused[#loc456, #loc457])
#loc719 = loc(fused[#loc458, #loc459])
#loc720 = loc(fused[#loc460, #loc461])
#loc721 = loc(fused[#loc462, #loc459])
#loc722 = loc(fused[#loc465, #loc466])
#loc723 = loc(fused[#loc467, #loc468])
#loc724 = loc(fused[#loc469, #loc466])
#loc725 = loc(fused[#loc472, #loc473])
#loc726 = loc(fused[#loc475, #loc473])
#loc727 = loc(fused[#loc476, #loc477])
#loc728 = loc(fused[#loc478, #loc479])
#loc729 = loc(fused[#loc482, #loc485])
#loc730 = loc(fused[#loc486, #loc487, #loc488, #loc477])
#loc731 = loc(fused[#loc494, #loc495])
#loc732 = loc(fused[#loc496, #loc497])
#loc733 = loc(fused[#loc498, #loc499])
#loc734 = loc(fused[#loc501, #loc500])
#loc735 = loc(fused[#loc502, #loc503])
#loc736 = loc(fused[#loc505, #loc506, #loc507, #loc503])
#loc737 = loc(fused[#loc511, #loc510])
#loc738 = loc(fused[#loc512, #loc513])
#loc739 = loc(fused[#loc515, #loc513])
#loc740 = loc(fused[#loc516, #loc517])
#loc741 = loc(fused[#loc521, #loc522])
#loc742 = loc(fused[#loc523, #loc524])
#loc743 = loc(fused[#loc525, #loc526])
#loc744 = loc(fused[#loc528, #loc527])
#loc745 = loc(fused[#loc529, #loc530])
#loc746 = loc(fused[#loc532, #loc530])
#loc747 = loc(fused[#loc534, #loc533])
#loc748 = loc(fused[#loc535, #loc536])
#loc749 = loc(fused[#loc538, #loc536])
#loc750 = loc(fused[#loc539, #loc540])
