!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i}>
module @"/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_malloc_use_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc131)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc132)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc133)
  cir.func private @printIntLine(!s32i) loc(#loc134)
  cir.func no_proto @CWE758_Undefined_Behavior__struct_malloc_use_06_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc13)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc14)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc137)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc140)
          %4 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc141)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc22)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc142)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc22)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc143)
          cir.store %8, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc140)
          cir.scope {
            %17 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc27)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc28)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc28)
            %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc145)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc30)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc31)
              %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc32)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc30)
            } loc(#loc146)
          } loc(#loc144)
          %9 = cir.load deref %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc21)
          cir.copy %9 to %4 : !cir.ptr<!ty__twoIntsStruct> loc(#loc141)
          %10 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc33)
          %11 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc34)
          cir.call @free(%12) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc33)
          %13 = cir.get_member %4[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc35)
          %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc36)
          cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc37)
          %15 = cir.get_member %4[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc38)
          %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc39)
          cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc40)
        } loc(#loc139)
      } loc(#loc138)
    } loc(#loc136)
    cir.return loc(#loc10)
  } loc(#loc135)
  cir.func no_proto @CWE758_Undefined_Behavior__struct_malloc_use_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc148)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc43)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc149)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc45)
    cir.return loc(#loc42)
  } loc(#loc147)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc49)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc54)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc55)
      %2 = cir.cmp(ne, %0, %1) : !s32i, !cir.bool loc(#loc153)
      cir.if %2 {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc49)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc49)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc59)
      } else {
        cir.scope {
          %3 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc156)
          %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc157)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc66)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc158)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc66)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc159)
          cir.store %8, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc157)
          cir.scope {
            %17 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc71)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc72)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc72)
            %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc161)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc74)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc75)
              %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc76)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc74)
            } loc(#loc162)
          } loc(#loc160)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc77)
          %10 = cir.get_member %3[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc35)
          cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc163)
          %11 = cir.const #cir.int<2> : !s32i loc(#loc79)
          %12 = cir.get_member %3[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc38)
          cir.store %11, %12 : !s32i, !cir.ptr<!s32i> loc(#loc164)
          %13 = cir.load deref %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc81)
          cir.copy %3 to %13 : !cir.ptr<!ty__twoIntsStruct> loc(#loc81)
          cir.scope {
            %17 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc166)
            %18 = cir.load deref %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc85)
            cir.copy %18 to %17 : !cir.ptr<!ty__twoIntsStruct> loc(#loc166)
            %19 = cir.get_member %17[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc35)
            %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc86)
            cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc87)
            %21 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc38)
            %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc88)
            cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc89)
          } loc(#loc165)
          %14 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc90)
          %15 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc91)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc91)
          cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc90)
        } loc(#loc155)
      } loc(#loc154)
    } loc(#loc152)
    cir.return loc(#loc51)
  } loc(#loc151)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc96)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc97)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc169)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data"] {alignment = 4 : i64} loc(#loc172)
          %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["pointer", init] {alignment = 8 : i64} loc(#loc173)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc105)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc174)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc105)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc175)
          cir.store %8, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc173)
          cir.scope {
            %17 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc110)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc111)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc111)
            %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc177)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc113)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc114)
              %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc115)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc113)
            } loc(#loc178)
          } loc(#loc176)
          %9 = cir.const #cir.int<1> : !s32i loc(#loc116)
          %10 = cir.get_member %3[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc35)
          cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc179)
          %11 = cir.const #cir.int<2> : !s32i loc(#loc118)
          %12 = cir.get_member %3[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc38)
          cir.store %11, %12 : !s32i, !cir.ptr<!s32i> loc(#loc180)
          %13 = cir.load deref %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc120)
          cir.copy %3 to %13 : !cir.ptr<!ty__twoIntsStruct> loc(#loc120)
          cir.scope {
            %17 = cir.alloca !ty__twoIntsStruct, !cir.ptr<!ty__twoIntsStruct>, ["data", init] {alignment = 4 : i64} loc(#loc182)
            %18 = cir.load deref %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc124)
            cir.copy %18 to %17 : !cir.ptr<!ty__twoIntsStruct> loc(#loc182)
            %19 = cir.get_member %17[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc35)
            %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc125)
            cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc126)
            %21 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc38)
            %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc127)
            cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc128)
          } loc(#loc181)
          %14 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc129)
          %15 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc130)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc130)
          cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc129)
        } loc(#loc171)
      } loc(#loc170)
    } loc(#loc168)
    cir.return loc(#loc93)
  } loc(#loc167)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__struct_malloc_use_06.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc9 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":25:1)
#loc10 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":38:1)
#loc11 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":27:5)
#loc12 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":37:5)
#loc13 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":27:8)
#loc14 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":27:27)
#loc15 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":28:5)
#loc16 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":29:9)
#loc17 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":36:9)
#loc18 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":30:13)
#loc19 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":30:84)
#loc20 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":32:13)
#loc21 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":32:35)
#loc22 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":30:56)
#loc23 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":30:63)
#loc24 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":30:83)
#loc25 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":31:13)
#loc26 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":31:44)
#loc27 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":31:17)
#loc28 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":31:28)
#loc29 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":31:34)
#loc30 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":31:35)
#loc31 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":31:41)
#loc32 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":31:40)
#loc33 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":33:13)
#loc34 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":33:18)
#loc35 = loc("../../testcasesupport/std_testcase.h":98:9)
#loc36 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":34:31)
#loc37 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":34:13)
#loc38 = loc("../../testcasesupport/std_testcase.h":99:9)
#loc39 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":35:31)
#loc40 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":35:13)
#loc41 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":93:1)
#loc42 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":97:1)
#loc43 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":95:5)
#loc44 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":95:11)
#loc45 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":96:5)
#loc46 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":96:11)
#loc47 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc48 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc49 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":50:19)
#loc50 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":45:1)
#loc51 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":69:1)
#loc52 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":47:5)
#loc53 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":68:5)
#loc54 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":47:8)
#loc55 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":47:27)
#loc56 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":48:5)
#loc57 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":51:5)
#loc58 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":53:5)
#loc59 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":50:9)
#loc60 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":54:9)
#loc61 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":67:9)
#loc62 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":55:13)
#loc63 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":55:27)
#loc64 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":56:13)
#loc65 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":56:84)
#loc66 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":56:56)
#loc67 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":56:63)
#loc68 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":56:83)
#loc69 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":57:13)
#loc70 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":57:44)
#loc71 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":57:17)
#loc72 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":57:28)
#loc73 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":57:34)
#loc74 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":57:35)
#loc75 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":57:41)
#loc76 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":57:40)
#loc77 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":58:27)
#loc78 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":58:13)
#loc79 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":59:27)
#loc80 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":59:13)
#loc81 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":60:14)
#loc82 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":61:13)
#loc83 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":65:13)
#loc84 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":62:17)
#loc85 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":62:39)
#loc86 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":63:35)
#loc87 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":63:17)
#loc88 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":64:35)
#loc89 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":64:17)
#loc90 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":66:13)
#loc91 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":66:18)
#loc92 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":72:1)
#loc93 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":91:1)
#loc94 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":74:5)
#loc95 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":90:5)
#loc96 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":74:8)
#loc97 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":74:27)
#loc98 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":75:5)
#loc99 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":76:9)
#loc100 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":89:9)
#loc101 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":77:13)
#loc102 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":77:27)
#loc103 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":78:13)
#loc104 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":78:84)
#loc105 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":78:56)
#loc106 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":78:63)
#loc107 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":78:83)
#loc108 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":79:13)
#loc109 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":79:44)
#loc110 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":79:17)
#loc111 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":79:28)
#loc112 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":79:34)
#loc113 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":79:35)
#loc114 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":79:41)
#loc115 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":79:40)
#loc116 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":80:27)
#loc117 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":80:13)
#loc118 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":81:27)
#loc119 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":81:13)
#loc120 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":82:14)
#loc121 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":83:13)
#loc122 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":87:13)
#loc123 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":84:17)
#loc124 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":84:39)
#loc125 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":85:35)
#loc126 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":85:17)
#loc127 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":86:35)
#loc128 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":86:17)
#loc129 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":88:13)
#loc130 = loc("CWE758_Undefined_Behavior__struct_malloc_use_06.c":88:18)
#loc131 = loc(fused[#loc1, #loc2])
#loc132 = loc(fused[#loc3, #loc4])
#loc133 = loc(fused[#loc5, #loc6])
#loc134 = loc(fused[#loc7, #loc8])
#loc135 = loc(fused[#loc9, #loc10])
#loc136 = loc(fused[#loc11, #loc12])
#loc137 = loc(fused[#loc13, #loc14])
#loc138 = loc(fused[#loc15, #loc12])
#loc139 = loc(fused[#loc16, #loc17])
#loc140 = loc(fused[#loc18, #loc19])
#loc141 = loc(fused[#loc20, #loc21])
#loc142 = loc(fused[#loc23, #loc24])
#loc143 = loc(fused[#loc22, #loc19])
#loc144 = loc(fused[#loc25, #loc26])
#loc145 = loc(fused[#loc27, #loc28])
#loc146 = loc(fused[#loc29, #loc26])
#loc147 = loc(fused[#loc41, #loc42])
#loc148 = loc(fused[#loc43, #loc44])
#loc149 = loc(fused[#loc45, #loc46])
#loc150 = loc(fused[#loc47, #loc48])
#loc151 = loc(fused[#loc50, #loc51])
#loc152 = loc(fused[#loc52, #loc53])
#loc153 = loc(fused[#loc54, #loc55])
#loc154 = loc(fused[#loc56, #loc57, #loc58, #loc53])
#loc155 = loc(fused[#loc60, #loc61])
#loc156 = loc(fused[#loc62, #loc63])
#loc157 = loc(fused[#loc64, #loc65])
#loc158 = loc(fused[#loc67, #loc68])
#loc159 = loc(fused[#loc66, #loc65])
#loc160 = loc(fused[#loc69, #loc70])
#loc161 = loc(fused[#loc71, #loc72])
#loc162 = loc(fused[#loc73, #loc70])
#loc163 = loc(fused[#loc78, #loc77])
#loc164 = loc(fused[#loc80, #loc79])
#loc165 = loc(fused[#loc82, #loc83])
#loc166 = loc(fused[#loc84, #loc85])
#loc167 = loc(fused[#loc92, #loc93])
#loc168 = loc(fused[#loc94, #loc95])
#loc169 = loc(fused[#loc96, #loc97])
#loc170 = loc(fused[#loc98, #loc95])
#loc171 = loc(fused[#loc99, #loc100])
#loc172 = loc(fused[#loc101, #loc102])
#loc173 = loc(fused[#loc103, #loc104])
#loc174 = loc(fused[#loc106, #loc107])
#loc175 = loc(fused[#loc105, #loc104])
#loc176 = loc(fused[#loc108, #loc109])
#loc177 = loc(fused[#loc110, #loc111])
#loc178 = loc(fused[#loc112, #loc109])
#loc179 = loc(fused[#loc117, #loc116])
#loc180 = loc(fused[#loc119, #loc118])
#loc181 = loc(fused[#loc121, #loc122])
#loc182 = loc(fused[#loc123, #loc124])
