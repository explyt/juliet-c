!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc268 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":236:10)
#loc269 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":236:14)
#loc270 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":236:20)
#loc271 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":236:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc380 = loc(fused[#loc268, #loc269])
#loc381 = loc(fused[#loc270, #loc271])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s01/CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc284)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc285)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc286)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc287)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc288)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc289)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc290)
  cir.func private @close(!s32i) -> !s32i loc(#loc291)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc292)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc20)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc293)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"wb+\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc23)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc294)
  cir.func @_ZN59CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_153badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc296)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc297)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc297)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc297)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc32)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc298)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc36)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc301)
            %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc302)
            %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc303)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc304)
            %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc305)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc47)
            %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc47)
            cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc304)
            %12 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc50)
            %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
            %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc50)
            cir.store %14, %9 : !u64i, !cir.ptr<!u64i> loc(#loc305)
            cir.scope {
              cir.do {
                %15 = cir.const #cir.int<2> : !s32i loc(#loc54)
                %16 = cir.const #cir.int<1> : !u32i loc(#loc55)
                %17 = cir.cast(integral, %16 : !u32i), !s32i loc(#loc55)
                %18 = cir.const #cir.int<6> : !u32i loc(#loc56)
                %19 = cir.cast(integral, %18 : !u32i), !s32i loc(#loc56)
                %20 = cir.call @socket(%15, %17, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc57)
                cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc307)
                cir.scope {
                  %70 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc62)
                  %71 = cir.const #cir.int<1> : !s32i loc(#loc63)
                  %72 = cir.unary(minus, %71) : !s32i, !s32i loc(#loc63)
                  %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc309)
                  cir.if %73 {
                    cir.break loc(#loc65)
                  } loc(#loc310)
                } loc(#loc308)
                %21 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc311)
                %22 = cir.const #cir.int<0> : !s32i loc(#loc68)
                %23 = cir.const #cir.int<16> : !u64i loc(#loc312)
                cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc313)
                %24 = cir.const #cir.int<2> : !s32i loc(#loc73)
                %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc73)
                %26 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
                cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc314)
                %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
                %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
                %29 = cir.call @inet_addr(%28) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc76)
                %30 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc77)
                %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc78)
                cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc315)
                %32 = cir.const #cir.int<27015> : !s32i loc(#loc81)
                %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc81)
                %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc82)
                %35 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc83)
                cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc316)
                cir.scope {
                  %70 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc88)
                  %71 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc318)
                  %72 = cir.const #cir.int<16> : !u64i loc(#loc319)
                  %73 = cir.cast(integral, %72 : !u64i), !u32i loc(#loc319)
                  %74 = cir.call @connect(%70, %71, %73) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc93)
                  %75 = cir.const #cir.int<1> : !s32i loc(#loc94)
                  %76 = cir.unary(minus, %75) : !s32i, !s32i loc(#loc94)
                  %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc320)
                  cir.if %77 {
                    cir.break loc(#loc96)
                  } loc(#loc321)
                } loc(#loc317)
                %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc97)
                %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
                %38 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc99)
                %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc100)
                %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc322)
                %41 = cir.const #cir.int<1> : !u64i loc(#loc323)
                %42 = cir.const #cir.int<4096> : !s32i loc(#loc105)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc105)
                %44 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc106)
                %45 = cir.binop(sub, %43, %44) : !u64i loc(#loc324)
                %46 = cir.const #cir.int<1> : !s32i loc(#loc107)
                %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc107)
                %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc325)
                %49 = cir.binop(mul, %41, %48) : !u64i loc(#loc326)
                %50 = cir.const #cir.int<0> : !s32i loc(#loc109)
                %51 = cir.call @recv(%36, %40, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc110)
                %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc110)
                cir.store %52, %5 : !s32i, !cir.ptr<!s32i> loc(#loc327)
                cir.scope {
                  %70 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc115)
                  %71 = cir.const #cir.int<1> : !s32i loc(#loc116)
                  %72 = cir.unary(minus, %71) : !s32i, !s32i loc(#loc116)
                  %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc329)
                  %74 = cir.ternary(%73, true {
                    %75 = cir.const #true loc(#loc117)
                    cir.yield %75 : !cir.bool loc(#loc117)
                  }, false {
                    %75 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc118)
                    %76 = cir.const #cir.int<0> : !s32i loc(#loc119)
                    %77 = cir.cmp(eq, %75, %76) : !s32i, !cir.bool loc(#loc330)
                    %78 = cir.ternary(%77, true {
                      %79 = cir.const #true loc(#loc117)
                      cir.yield %79 : !cir.bool loc(#loc117)
                    }, false {
                      %79 = cir.const #false loc(#loc117)
                      cir.yield %79 : !cir.bool loc(#loc117)
                    }) : (!cir.bool) -> !cir.bool loc(#loc117)
                    cir.yield %78 : !cir.bool loc(#loc117)
                  }) : (!cir.bool) -> !cir.bool loc(#loc117)
                  cir.if %74 {
                    cir.break loc(#loc121)
                  } loc(#loc331)
                } loc(#loc328)
                %53 = cir.const #cir.int<0> : !s8i loc(#loc122)
                %54 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
                %55 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc124)
                %56 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc125)
                %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc125)
                %58 = cir.const #cir.int<1> : !u64i loc(#loc332)
                %59 = cir.binop(div, %57, %58) : !u64i loc(#loc333)
                %60 = cir.binop(add, %55, %59) : !u64i loc(#loc334)
                %61 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %60 : !u64i), !cir.ptr<!s8i> loc(#loc128)
                cir.store %53, %61 : !s8i, !cir.ptr<!s8i> loc(#loc335)
                %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
                %63 = cir.const #cir.int<13> : !s8i loc(#loc130)
                %64 = cir.cast(integral, %63 : !s8i), !s32i loc(#loc130)
                %65 = cir.call @strchr(%62, %64) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc131)
                cir.store %65, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc336)
                cir.scope {
                  %70 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
                  %71 = cir.cast(ptr_to_bool, %70 : !cir.ptr<!s8i>), !cir.bool loc(#loc136)
                  cir.if %71 {
                    %72 = cir.const #cir.int<0> : !s8i loc(#loc138)
                    %73 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
                    cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc339)
                  } loc(#loc338)
                } loc(#loc337)
                %66 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
                %67 = cir.const #cir.int<10> : !s8i loc(#loc142)
                %68 = cir.cast(integral, %67 : !s8i), !s32i loc(#loc142)
                %69 = cir.call @strchr(%66, %68) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc143)
                cir.store %69, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc340)
                cir.scope {
                  %70 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
                  %71 = cir.cast(ptr_to_bool, %70 : !cir.ptr<!s8i>), !cir.bool loc(#loc148)
                  cir.if %71 {
                    %72 = cir.const #cir.int<0> : !s8i loc(#loc150)
                    %73 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
                    cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc343)
                  } loc(#loc342)
                } loc(#loc341)
                cir.yield loc(#loc53)
              } while {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc153)
                %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc153)
                cir.condition(%16) loc(#loc153)
              } loc(#loc306)
            } loc(#loc306)
            cir.scope {
              %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc156)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc157)
              %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc157)
              %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc345)
              cir.if %18 {
                %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc159)
                %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc160)
              } loc(#loc346)
            } loc(#loc344)
          } loc(#loc300)
          cir.break loc(#loc161)
        } loc(#loc37)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc20)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc20)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc163)
          cir.break loc(#loc164)
        } loc(#loc162)
        cir.yield loc(#loc34)
      } loc(#loc34)
    } loc(#loc299)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc348)
      %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc168)
      cir.store %5, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc348)
      %6 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc169)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
      %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc23)
      %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc23)
      %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc169)
      cir.store %10, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc349)
      cir.scope {
        %11 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc175)
        %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc176)
        %13 = cir.cmp(ne, %11, %12) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc351)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc178)
          %15 = cir.call @fclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc179)
        } loc(#loc352)
      } loc(#loc350)
    } loc(#loc347)
    cir.return loc(#loc27)
  } loc(#loc295)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc353)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc182)
  cir.func internal private @_ZN59CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc355)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc356)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc356)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc356)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc189)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc357)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc193)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc195)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc195)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc196)
          cir.break loc(#loc197)
        } loc(#loc194)
        cir.case(default, []) {
          %5 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc199)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc200)
          %7 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc182)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc182)
          %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc199)
          cir.break loc(#loc201)
        } loc(#loc198)
        cir.yield loc(#loc191)
      } loc(#loc191)
    } loc(#loc358)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc360)
      %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc205)
      cir.store %5, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc360)
      %6 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc206)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc207)
      %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc208)
      %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc208)
      %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc206)
      cir.store %10, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc361)
      cir.scope {
        %11 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc213)
        %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc214)
        %13 = cir.cmp(ne, %11, %12) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc363)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc216)
          %15 = cir.call @fclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc217)
        } loc(#loc364)
      } loc(#loc362)
    } loc(#loc359)
    cir.return loc(#loc184)
  } loc(#loc354)
  cir.func internal private @_ZN59CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc366)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc367)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 4096> loc(#loc367)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc367)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc224)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc368)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc228)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %5 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc230)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc231)
          %7 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc232)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc232)
          %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc230)
          cir.break loc(#loc233)
        } loc(#loc229)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc235)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc235)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc236)
          cir.break loc(#loc237)
        } loc(#loc234)
        cir.yield loc(#loc226)
      } loc(#loc226)
    } loc(#loc369)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc371)
      %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc241)
      cir.store %5, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc371)
      %6 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc242)
      %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc243)
      %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc244)
      %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc244)
      %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc242)
      cir.store %10, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc372)
      cir.scope {
        %11 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc249)
        %12 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc250)
        %13 = cir.cmp(ne, %11, %12) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc374)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc252)
          %15 = cir.call @fclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc253)
        } loc(#loc375)
      } loc(#loc373)
    } loc(#loc370)
    cir.return loc(#loc219)
  } loc(#loc365)
  cir.func @_ZN59CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_154goodEv() extra(#fn_attr1) {
    cir.call @_ZN59CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15L8goodG2B1Ev() : () -> () loc(#loc256)
    cir.call @_ZN59CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15L8goodG2B2Ev() : () -> () loc(#loc257)
    cir.return loc(#loc255)
  } loc(#loc376)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc377)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc378)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc262)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc263)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc264)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc265)
  cir.func @main(%arg0: !s32i loc(fused[#loc268, #loc269]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc270, #loc271])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc380)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc381)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc267)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc272)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc272)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc273)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc274)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc274)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc275)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc262)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc262)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc276)
    cir.call @_ZN59CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_154goodEv() : () -> () loc(#loc277)
    %8 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc263)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc263)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc278)
    %10 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc264)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc264)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc279)
    cir.call @_ZN59CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_153badEv() : () -> () loc(#loc280)
    %12 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc265)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc265)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc281)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc282)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc382)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc382)
    cir.return %15 : !s32i loc(#loc382)
  } loc(#loc379)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE36_Absolute_Path_Traversal/s01/CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":90:49)
#loc8 = loc("/usr/include/netinet/in.h":404:1)
#loc9 = loc("/usr/include/netinet/in.h":405:40)
#loc10 = loc("/usr/include/sys/socket.h":126:1)
#loc11 = loc("/usr/include/sys/socket.h":126:75)
#loc12 = loc("/usr/include/sys/socket.h":145:1)
#loc13 = loc("/usr/include/sys/socket.h":145:68)
#loc14 = loc("/usr/include/string.h":226:1)
#loc15 = loc("/usr/include/string.h":227:50)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":133:19)
#loc21 = loc("/usr/include/stdio.h":264:1)
#loc22 = loc("/usr/include/stdio.h":266:3)
#loc23 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":139:29)
#loc24 = loc("/usr/include/stdio.h":184:1)
#loc25 = loc("/usr/include/stdio.h":184:36)
#loc26 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":55:1)
#loc27 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":145:1)
#loc28 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":57:5)
#loc29 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":57:12)
#loc30 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":58:5)
#loc31 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":58:37)
#loc32 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":59:12)
#loc33 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":59:5)
#loc34 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":60:5)
#loc35 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":135:5)
#loc36 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":60:12)
#loc37 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":62:5)
#loc38 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":63:5)
#loc39 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":129:5)
#loc40 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":68:9)
#loc41 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":68:13)
#loc42 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":69:9)
#loc43 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":69:28)
#loc44 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":70:9)
#loc45 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":70:15)
#loc46 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":71:9)
#loc47 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":71:32)
#loc48 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":72:9)
#loc49 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":72:37)
#loc50 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":72:26)
#loc51 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":72:33)
#loc52 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":73:9)
#loc53 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":118:17)
#loc54 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":83:36)
#loc55 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":83:45)
#loc56 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":83:58)
#loc57 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":83:29)
#loc58 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":83:13)
#loc59 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":83:69)
#loc60 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":84:13)
#loc61 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":87:13)
#loc62 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":84:17)
#loc63 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":84:34)
#loc64 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":85:13)
#loc65 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":86:17)
#loc66 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":88:20)
#loc67 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":88:21)
#loc68 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":88:30)
#loc69 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":88:33)
#loc70 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":88:47)
#loc71 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":88:13)
#loc72 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":88:48)
#loc73 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":89:34)
#loc74 = loc("/usr/include/netinet/in.h":249:5)
#loc75 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":89:13)
#loc76 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":90:39)
#loc77 = loc("/usr/include/netinet/in.h":251:20)
#loc78 = loc("/usr/include/netinet/in.h":33:15)
#loc79 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":90:13)
#loc80 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":90:59)
#loc81 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":91:38)
#loc82 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":91:32)
#loc83 = loc("/usr/include/netinet/in.h":250:15)
#loc84 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":91:13)
#loc85 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":91:46)
#loc86 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":92:13)
#loc87 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":95:13)
#loc88 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":92:25)
#loc89 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":92:58)
#loc90 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":92:59)
#loc91 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":92:68)
#loc92 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":92:82)
#loc93 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":92:17)
#loc94 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":92:88)
#loc95 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":93:13)
#loc96 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":94:17)
#loc97 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":99:31)
#loc98 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":99:55)
#loc99 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":99:62)
#loc100 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":99:60)
#loc101 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":99:46)
#loc102 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":99:69)
#loc103 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":99:72)
#loc104 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":99:83)
#loc105 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":99:88)
#loc106 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":99:103)
#loc107 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":99:113)
#loc108 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":99:114)
#loc109 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":99:117)
#loc110 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":99:26)
#loc111 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":99:13)
#loc112 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":99:118)
#loc113 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":100:13)
#loc114 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":103:13)
#loc115 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":100:17)
#loc116 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":100:31)
#loc117 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":100:44)
#loc118 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":100:47)
#loc119 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":100:61)
#loc120 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":101:13)
#loc121 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":102:17)
#loc122 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":105:57)
#loc123 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":105:13)
#loc124 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":105:18)
#loc125 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":105:28)
#loc126 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":105:41)
#loc127 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":105:52)
#loc128 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":105:53)
#loc129 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":107:30)
#loc130 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":107:36)
#loc131 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":107:23)
#loc132 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":107:13)
#loc133 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":107:40)
#loc134 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":108:13)
#loc135 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":111:13)
#loc136 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":108:17)
#loc137 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":109:13)
#loc138 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":110:28)
#loc139 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":110:18)
#loc140 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":110:17)
#loc141 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":112:30)
#loc142 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":112:36)
#loc143 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":112:23)
#loc144 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":112:13)
#loc145 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":112:40)
#loc146 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":113:13)
#loc147 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":116:13)
#loc148 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":113:17)
#loc149 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":114:13)
#loc150 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":115:28)
#loc151 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":115:18)
#loc152 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":115:17)
#loc153 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":118:16)
#loc154 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":119:9)
#loc155 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":122:9)
#loc156 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":119:13)
#loc157 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":119:30)
#loc158 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":120:9)
#loc159 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":121:26)
#loc160 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":121:13)
#loc161 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":130:5)
#loc162 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":131:5)
#loc163 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":133:9)
#loc164 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":134:9)
#loc165 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":136:5)
#loc166 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":144:5)
#loc167 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":137:9)
#loc168 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":137:23)
#loc169 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":139:17)
#loc170 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":139:23)
#loc171 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":139:9)
#loc172 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":139:34)
#loc173 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":140:9)
#loc174 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":143:9)
#loc175 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":140:13)
#loc176 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":140:22)
#loc177 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":141:9)
#loc178 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":142:20)
#loc179 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":142:13)
#loc180 = loc("/usr/include/string.h":149:1)
#loc181 = loc("/usr/include/string.h":150:14)
#loc182 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":169:22)
#loc183 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":152:1)
#loc184 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":182:1)
#loc185 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":154:5)
#loc186 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":154:12)
#loc187 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":155:5)
#loc188 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":155:37)
#loc189 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":156:12)
#loc190 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":156:5)
#loc191 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":157:5)
#loc192 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":172:5)
#loc193 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":157:12)
#loc194 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":159:5)
#loc195 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":161:19)
#loc196 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":161:9)
#loc197 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":162:9)
#loc198 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":163:5)
#loc199 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":169:9)
#loc200 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":169:16)
#loc201 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":171:9)
#loc202 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":173:5)
#loc203 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":181:5)
#loc204 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":174:9)
#loc205 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":174:23)
#loc206 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":176:17)
#loc207 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":176:23)
#loc208 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":176:29)
#loc209 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":176:9)
#loc210 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":176:34)
#loc211 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":177:9)
#loc212 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":180:9)
#loc213 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":177:13)
#loc214 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":177:22)
#loc215 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":178:9)
#loc216 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":179:20)
#loc217 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":179:13)
#loc218 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":185:1)
#loc219 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":215:1)
#loc220 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":187:5)
#loc221 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":187:12)
#loc222 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":188:5)
#loc223 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":188:37)
#loc224 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":189:12)
#loc225 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":189:5)
#loc226 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":190:5)
#loc227 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":205:5)
#loc228 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":190:12)
#loc229 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":192:5)
#loc230 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":198:9)
#loc231 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":198:16)
#loc232 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":198:22)
#loc233 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":200:9)
#loc234 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":201:5)
#loc235 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":203:19)
#loc236 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":203:9)
#loc237 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":204:9)
#loc238 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":206:5)
#loc239 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":214:5)
#loc240 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":207:9)
#loc241 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":207:23)
#loc242 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":209:17)
#loc243 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":209:23)
#loc244 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":209:29)
#loc245 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":209:9)
#loc246 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":209:34)
#loc247 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":210:9)
#loc248 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":213:9)
#loc249 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":210:13)
#loc250 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":210:22)
#loc251 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":211:9)
#loc252 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":212:20)
#loc253 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":212:13)
#loc254 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":217:1)
#loc255 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":221:1)
#loc256 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":219:5)
#loc257 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":220:5)
#loc258 = loc("/usr/include/stdlib.h":575:1)
#loc259 = loc("/usr/include/stdlib.h":575:41)
#loc260 = loc("/usr/include/time.h":76:1)
#loc261 = loc("/usr/include/time.h":76:38)
#loc262 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":241:15)
#loc263 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":243:15)
#loc264 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":246:15)
#loc265 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":248:15)
#loc266 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":236:1)
#loc267 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":251:1)
#loc272 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":237:1)
#loc273 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":239:27)
#loc274 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":239:22)
#loc275 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":239:5)
#loc276 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":241:5)
#loc277 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":242:5)
#loc278 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":243:5)
#loc279 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":246:5)
#loc280 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":247:5)
#loc281 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":248:5)
#loc282 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":250:12)
#loc283 = loc("CWE36_Absolute_Path_Traversal__char_connect_socket_fopen_15.cpp":250:5)
#loc284 = loc(fused[#loc1, #loc2])
#loc285 = loc(fused[#loc3, #loc4])
#loc286 = loc(fused[#loc5, #loc6])
#loc287 = loc(fused[#loc8, #loc9])
#loc288 = loc(fused[#loc10, #loc11])
#loc289 = loc(fused[#loc12, #loc13])
#loc290 = loc(fused[#loc14, #loc15])
#loc291 = loc(fused[#loc16, #loc17])
#loc292 = loc(fused[#loc18, #loc19])
#loc293 = loc(fused[#loc21, #loc22])
#loc294 = loc(fused[#loc24, #loc25])
#loc295 = loc(fused[#loc26, #loc27])
#loc296 = loc(fused[#loc28, #loc29])
#loc297 = loc(fused[#loc30, #loc31])
#loc298 = loc(fused[#loc33, #loc32])
#loc299 = loc(fused[#loc34, #loc35])
#loc300 = loc(fused[#loc38, #loc39])
#loc301 = loc(fused[#loc40, #loc41])
#loc302 = loc(fused[#loc42, #loc43])
#loc303 = loc(fused[#loc44, #loc45])
#loc304 = loc(fused[#loc46, #loc47])
#loc305 = loc(fused[#loc48, #loc49])
#loc306 = loc(fused[#loc52, #loc53])
#loc307 = loc(fused[#loc58, #loc59])
#loc308 = loc(fused[#loc60, #loc61])
#loc309 = loc(fused[#loc62, #loc63])
#loc310 = loc(fused[#loc64, #loc61])
#loc311 = loc(fused[#loc66, #loc67])
#loc312 = loc(fused[#loc69, #loc70])
#loc313 = loc(fused[#loc71, #loc72])
#loc314 = loc(fused[#loc75, #loc73])
#loc315 = loc(fused[#loc79, #loc80])
#loc316 = loc(fused[#loc84, #loc85])
#loc317 = loc(fused[#loc86, #loc87])
#loc318 = loc(fused[#loc89, #loc90])
#loc319 = loc(fused[#loc91, #loc92])
#loc320 = loc(fused[#loc93, #loc94])
#loc321 = loc(fused[#loc95, #loc87])
#loc322 = loc(fused[#loc101, #loc102])
#loc323 = loc(fused[#loc103, #loc104])
#loc324 = loc(fused[#loc105, #loc106])
#loc325 = loc(fused[#loc105, #loc107])
#loc326 = loc(fused[#loc103, #loc108])
#loc327 = loc(fused[#loc111, #loc112])
#loc328 = loc(fused[#loc113, #loc114])
#loc329 = loc(fused[#loc115, #loc116])
#loc330 = loc(fused[#loc118, #loc119])
#loc331 = loc(fused[#loc120, #loc114])
#loc332 = loc(fused[#loc126, #loc127])
#loc333 = loc(fused[#loc125, #loc127])
#loc334 = loc(fused[#loc124, #loc127])
#loc335 = loc(fused[#loc123, #loc122])
#loc336 = loc(fused[#loc132, #loc133])
#loc337 = loc(fused[#loc134, #loc135])
#loc338 = loc(fused[#loc137, #loc135])
#loc339 = loc(fused[#loc140, #loc138])
#loc340 = loc(fused[#loc144, #loc145])
#loc341 = loc(fused[#loc146, #loc147])
#loc342 = loc(fused[#loc149, #loc147])
#loc343 = loc(fused[#loc152, #loc150])
#loc344 = loc(fused[#loc154, #loc155])
#loc345 = loc(fused[#loc156, #loc157])
#loc346 = loc(fused[#loc158, #loc155])
#loc347 = loc(fused[#loc165, #loc166])
#loc348 = loc(fused[#loc167, #loc168])
#loc349 = loc(fused[#loc171, #loc172])
#loc350 = loc(fused[#loc173, #loc174])
#loc351 = loc(fused[#loc175, #loc176])
#loc352 = loc(fused[#loc177, #loc174])
#loc353 = loc(fused[#loc180, #loc181])
#loc354 = loc(fused[#loc183, #loc184])
#loc355 = loc(fused[#loc185, #loc186])
#loc356 = loc(fused[#loc187, #loc188])
#loc357 = loc(fused[#loc190, #loc189])
#loc358 = loc(fused[#loc191, #loc192])
#loc359 = loc(fused[#loc202, #loc203])
#loc360 = loc(fused[#loc204, #loc205])
#loc361 = loc(fused[#loc209, #loc210])
#loc362 = loc(fused[#loc211, #loc212])
#loc363 = loc(fused[#loc213, #loc214])
#loc364 = loc(fused[#loc215, #loc212])
#loc365 = loc(fused[#loc218, #loc219])
#loc366 = loc(fused[#loc220, #loc221])
#loc367 = loc(fused[#loc222, #loc223])
#loc368 = loc(fused[#loc225, #loc224])
#loc369 = loc(fused[#loc226, #loc227])
#loc370 = loc(fused[#loc238, #loc239])
#loc371 = loc(fused[#loc240, #loc241])
#loc372 = loc(fused[#loc245, #loc246])
#loc373 = loc(fused[#loc247, #loc248])
#loc374 = loc(fused[#loc249, #loc250])
#loc375 = loc(fused[#loc251, #loc248])
#loc376 = loc(fused[#loc254, #loc255])
#loc377 = loc(fused[#loc258, #loc259])
#loc378 = loc(fused[#loc260, #loc261])
#loc379 = loc(fused[#loc266, #loc267])
#loc382 = loc(fused[#loc283, #loc282])
