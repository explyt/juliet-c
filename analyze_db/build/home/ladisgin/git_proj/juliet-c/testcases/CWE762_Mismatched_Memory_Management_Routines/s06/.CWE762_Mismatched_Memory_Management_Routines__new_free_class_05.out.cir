!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc5 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc160 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":160:10)
#loc161 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":160:14)
#loc162 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":160:20)
#loc163 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":160:32)
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
#loc243 = loc(fused[#loc160, #loc161])
#loc244 = loc(fused[#loc162, #loc163])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s06/CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @_ZL10staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc176)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc177)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc5)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc5)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc5)
    cir.return loc(#loc5)
  } loc(#loc5)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc178)
  cir.func @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_053badEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc180)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc12)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc181)
    cir.scope {
      %2 = cir.get_global @_ZL10staticTrue : !cir.ptr<!s32i> loc(#loc176)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc16)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc16)
      cir.if %4 {
        %5 = cir.const #cir.int<8> : !u64i loc(#loc184)
        %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc20)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc184)
        cir.call @_ZN12TwoIntsClassC2Ev(%7) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc19)
        cir.store %7, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc185)
      } loc(#loc183)
    } loc(#loc182)
    cir.scope {
      %2 = cir.get_global @_ZL10staticTrue : !cir.ptr<!s32i> loc(#loc176)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc24)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc24)
      cir.if %4 {
        %5 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc26)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc27)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc27)
        cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc26)
      } loc(#loc187)
    } loc(#loc186)
    cir.return loc(#loc9)
  } loc(#loc179)
  cir.global "private" internal dsolocal @_ZL11staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc188)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc30)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc189)
  cir.func internal private @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_05L8goodB2G1Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc191)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc37)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc192)
    cir.scope {
      %2 = cir.get_global @_ZL10staticTrue : !cir.ptr<!s32i> loc(#loc176)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc41)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc41)
      cir.if %4 {
        %5 = cir.const #cir.int<8> : !u64i loc(#loc195)
        %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc45)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc195)
        cir.call @_ZN12TwoIntsClassC2Ev(%7) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc44)
        cir.store %7, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc196)
      } loc(#loc194)
    } loc(#loc193)
    cir.scope {
      %2 = cir.get_global @_ZL11staticFalse : !cir.ptr<!s32i> loc(#loc188)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc49)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc49)
      cir.if %4 {
        %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc30)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc30)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc53)
      } else {
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc54)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc54)
        cir.call @_ZdlPv(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc45)
      } loc(#loc198)
    } loc(#loc197)
    cir.return loc(#loc34)
  } loc(#loc190)
  cir.func internal private @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_05L8goodB2G2Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc200)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc59)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc201)
    cir.scope {
      %2 = cir.get_global @_ZL10staticTrue : !cir.ptr<!s32i> loc(#loc176)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc63)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc63)
      cir.if %4 {
        %5 = cir.const #cir.int<8> : !u64i loc(#loc204)
        %6 = cir.call @_Znwm(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc67)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc204)
        cir.call @_ZN12TwoIntsClassC2Ev(%7) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc66)
        cir.store %7, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc205)
      } loc(#loc203)
    } loc(#loc202)
    cir.scope {
      %2 = cir.get_global @_ZL10staticTrue : !cir.ptr<!s32i> loc(#loc176)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc71)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc71)
      cir.if %4 {
        %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc73)
        %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc73)
        cir.call @_ZdlPv(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc67)
      } loc(#loc207)
    } loc(#loc206)
    cir.return loc(#loc56)
  } loc(#loc199)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc208)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc209)
  cir.func internal private @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_05L8goodG2B1Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc211)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc82)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc212)
    cir.scope {
      %2 = cir.get_global @_ZL11staticFalse : !cir.ptr<!s32i> loc(#loc188)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc86)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc86)
      cir.if %4 {
        %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc90)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc90)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc91)
      } else {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc92)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc93)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc93)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc215)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc216)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc92)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc217)
        cir.store %11, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc218)
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc100)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc101)
          %14 = cir.cmp(eq, %12, %13) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc220)
          cir.if %14 {
            %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc103)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc104)
            %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc105)
            cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr1) loc(#loc103)
          } loc(#loc221)
        } loc(#loc219)
      } loc(#loc214)
    } loc(#loc213)
    cir.scope {
      %2 = cir.get_global @_ZL10staticTrue : !cir.ptr<!s32i> loc(#loc176)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc108)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc108)
      cir.if %4 {
        %5 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc110)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc111)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc111)
        cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc110)
      } loc(#loc223)
    } loc(#loc222)
    cir.return loc(#loc79)
  } loc(#loc210)
  cir.func internal private @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_05L8goodG2B2Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc225)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc116)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc226)
    cir.scope {
      %2 = cir.get_global @_ZL10staticTrue : !cir.ptr<!s32i> loc(#loc176)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc120)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc120)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc122)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc123)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc123)
        %8 = cir.const #cir.int<8> : !u64i loc(#loc229)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc230)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc122)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc231)
        cir.store %11, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc232)
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc130)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc131)
          %14 = cir.cmp(eq, %12, %13) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc234)
          cir.if %14 {
            %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc133)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc134)
            %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc135)
            cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr1) loc(#loc133)
          } loc(#loc235)
        } loc(#loc233)
      } loc(#loc228)
    } loc(#loc227)
    cir.scope {
      %2 = cir.get_global @_ZL10staticTrue : !cir.ptr<!s32i> loc(#loc176)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc138)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc138)
      cir.if %4 {
        %5 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc140)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc141)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc141)
        cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc140)
      } loc(#loc237)
    } loc(#loc236)
    cir.return loc(#loc113)
  } loc(#loc224)
  cir.func @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_054goodEv() extra(#fn_attr2) {
    cir.call @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_05L8goodB2G1Ev() : () -> () loc(#loc144)
    cir.call @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_05L8goodB2G2Ev() : () -> () loc(#loc145)
    cir.call @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_05L8goodG2B1Ev() : () -> () loc(#loc146)
    cir.call @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_05L8goodG2B2Ev() : () -> () loc(#loc147)
    cir.return loc(#loc143)
  } loc(#loc238)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc239)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc240)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc241)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc154)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc155)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc156)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc157)
  cir.func @main(%arg0: !s32i loc(fused[#loc160, #loc161]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc162, #loc163])) -> !s32i extra(#fn_attr2) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc243)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc244)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc159)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc164)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc165)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc166)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc166)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc167)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc154)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc154)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc168)
    cir.call @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_054goodEv() : () -> () loc(#loc169)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc155)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc155)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc170)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc156)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc156)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc171)
    cir.call @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_053badEv() : () -> () loc(#loc172)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc157)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc157)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc173)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc174)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc245)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc245)
    cir.return %15 : !s32i loc(#loc245)
  } loc(#loc242)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s06/CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":0:0)
#loc1 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":23:1)
#loc2 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":23:25)
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc6 = loc("/usr/include/stdlib.h":687:1)
#loc7 = loc("/usr/include/stdlib.h":687:32)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":31:1)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":47:1)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":33:5)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":33:20)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":35:12)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":35:5)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":36:5)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":40:5)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":36:8)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":37:5)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":39:16)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":39:20)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":31:6)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":39:9)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":41:5)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":46:5)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":41:8)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":42:5)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":45:9)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":45:14)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":24:1)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":24:26)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":67:19)
#loc31 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc32 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":54:1)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":74:1)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":56:5)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":56:20)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":58:12)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":58:5)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":59:5)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":63:5)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":59:8)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":60:5)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":62:16)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":62:20)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":54:13)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":62:9)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":64:5)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":73:5)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":64:8)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":65:5)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":68:5)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":70:5)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":67:9)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":72:16)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":77:1)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":92:1)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":79:5)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":79:20)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":81:12)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":81:5)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":82:5)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":86:5)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":82:8)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":83:5)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":85:16)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":85:20)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":77:13)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":85:9)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":87:5)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":91:5)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":87:8)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":88:5)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":90:16)
#loc74 = loc("/usr/include/stdlib.h":672:1)
#loc75 = loc("/usr/include/stdlib.h":672:45)
#loc76 = loc("/usr/include/stdlib.h":756:1)
#loc77 = loc("/usr/include/stdlib.h":756:70)
#loc78 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":95:1)
#loc79 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":117:1)
#loc80 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":97:5)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":97:20)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":99:12)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":99:5)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":100:5)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":110:5)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":100:8)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":101:5)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":104:5)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":106:5)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":103:19)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":103:9)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":108:32)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":108:39)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":108:43)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":108:62)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":108:63)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":108:9)
#loc98 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":109:9)
#loc99 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":109:37)
#loc100 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":109:13)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":109:21)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":109:27)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":109:28)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":109:34)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":109:33)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":111:5)
#loc107 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":116:5)
#loc108 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":111:8)
#loc109 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":112:5)
#loc110 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":115:9)
#loc111 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":115:14)
#loc112 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":120:1)
#loc113 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":137:1)
#loc114 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":122:5)
#loc115 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":122:20)
#loc116 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":124:12)
#loc117 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":124:5)
#loc118 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":125:5)
#loc119 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":130:5)
#loc120 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":125:8)
#loc121 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":126:5)
#loc122 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":128:32)
#loc123 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":128:39)
#loc124 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":128:43)
#loc125 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":128:62)
#loc126 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":128:63)
#loc127 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":128:9)
#loc128 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":129:9)
#loc129 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":129:37)
#loc130 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":129:13)
#loc131 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":129:21)
#loc132 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":129:27)
#loc133 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":129:28)
#loc134 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":129:34)
#loc135 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":129:33)
#loc136 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":131:5)
#loc137 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":136:5)
#loc138 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":131:8)
#loc139 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":132:5)
#loc140 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":135:9)
#loc141 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":135:14)
#loc142 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":139:1)
#loc143 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":145:1)
#loc144 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":141:5)
#loc145 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":142:5)
#loc146 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":143:5)
#loc147 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":144:5)
#loc148 = loc("/usr/include/stdlib.h":575:1)
#loc149 = loc("/usr/include/stdlib.h":575:41)
#loc150 = loc("/usr/include/time.h":76:1)
#loc151 = loc("/usr/include/time.h":76:38)
#loc152 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc153 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc154 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":165:15)
#loc155 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":167:15)
#loc156 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":170:15)
#loc157 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":172:15)
#loc158 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":160:1)
#loc159 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":175:1)
#loc164 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":161:1)
#loc165 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":163:27)
#loc166 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":163:22)
#loc167 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":163:5)
#loc168 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":165:5)
#loc169 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":166:5)
#loc170 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":167:5)
#loc171 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":170:5)
#loc172 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":171:5)
#loc173 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":172:5)
#loc174 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":174:12)
#loc175 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_05.cpp":174:5)
#loc176 = loc(fused[#loc1, #loc2])
#loc177 = loc(fused[#loc3, #loc4])
#loc178 = loc(fused[#loc6, #loc7])
#loc179 = loc(fused[#loc8, #loc9])
#loc180 = loc(fused[#loc10, #loc11])
#loc181 = loc(fused[#loc13, #loc12])
#loc182 = loc(fused[#loc14, #loc15])
#loc183 = loc(fused[#loc17, #loc15])
#loc184 = loc(fused[#loc18, #loc19])
#loc185 = loc(fused[#loc21, #loc19])
#loc186 = loc(fused[#loc22, #loc23])
#loc187 = loc(fused[#loc25, #loc23])
#loc188 = loc(fused[#loc28, #loc29])
#loc189 = loc(fused[#loc31, #loc32])
#loc190 = loc(fused[#loc33, #loc34])
#loc191 = loc(fused[#loc35, #loc36])
#loc192 = loc(fused[#loc38, #loc37])
#loc193 = loc(fused[#loc39, #loc40])
#loc194 = loc(fused[#loc42, #loc40])
#loc195 = loc(fused[#loc43, #loc44])
#loc196 = loc(fused[#loc46, #loc44])
#loc197 = loc(fused[#loc47, #loc48])
#loc198 = loc(fused[#loc50, #loc51, #loc52, #loc48])
#loc199 = loc(fused[#loc55, #loc56])
#loc200 = loc(fused[#loc57, #loc58])
#loc201 = loc(fused[#loc60, #loc59])
#loc202 = loc(fused[#loc61, #loc62])
#loc203 = loc(fused[#loc64, #loc62])
#loc204 = loc(fused[#loc65, #loc66])
#loc205 = loc(fused[#loc68, #loc66])
#loc206 = loc(fused[#loc69, #loc70])
#loc207 = loc(fused[#loc72, #loc70])
#loc208 = loc(fused[#loc74, #loc75])
#loc209 = loc(fused[#loc76, #loc77])
#loc210 = loc(fused[#loc78, #loc79])
#loc211 = loc(fused[#loc80, #loc81])
#loc212 = loc(fused[#loc83, #loc82])
#loc213 = loc(fused[#loc84, #loc85])
#loc214 = loc(fused[#loc87, #loc88, #loc89, #loc85])
#loc215 = loc(fused[#loc94, #loc95])
#loc216 = loc(fused[#loc93, #loc95])
#loc217 = loc(fused[#loc92, #loc96])
#loc218 = loc(fused[#loc97, #loc96])
#loc219 = loc(fused[#loc98, #loc99])
#loc220 = loc(fused[#loc100, #loc101])
#loc221 = loc(fused[#loc102, #loc99])
#loc222 = loc(fused[#loc106, #loc107])
#loc223 = loc(fused[#loc109, #loc107])
#loc224 = loc(fused[#loc112, #loc113])
#loc225 = loc(fused[#loc114, #loc115])
#loc226 = loc(fused[#loc117, #loc116])
#loc227 = loc(fused[#loc118, #loc119])
#loc228 = loc(fused[#loc121, #loc119])
#loc229 = loc(fused[#loc124, #loc125])
#loc230 = loc(fused[#loc123, #loc125])
#loc231 = loc(fused[#loc122, #loc126])
#loc232 = loc(fused[#loc127, #loc126])
#loc233 = loc(fused[#loc128, #loc129])
#loc234 = loc(fused[#loc130, #loc131])
#loc235 = loc(fused[#loc132, #loc129])
#loc236 = loc(fused[#loc136, #loc137])
#loc237 = loc(fused[#loc139, #loc137])
#loc238 = loc(fused[#loc142, #loc143])
#loc239 = loc(fused[#loc148, #loc149])
#loc240 = loc(fused[#loc150, #loc151])
#loc241 = loc(fused[#loc152, #loc153])
#loc242 = loc(fused[#loc158, #loc159])
#loc245 = loc(fused[#loc175, #loc174])
