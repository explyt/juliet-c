!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__char_malloc_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc109)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc110)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Initialize\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc111)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc112)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__char_malloc_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc114)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc14)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc16)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc17)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc17)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc116)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc117)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc16)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc118)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc119)
    cir.scope {
      %9 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc121)
      %10 = cir.call %9() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc24)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc24)
      cir.if %11 {
        %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc27)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
        %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc5)
        %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc5)
        %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc27)
        %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
        cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc30)
        %18 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc31)
        %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
        %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc32)
        cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc31)
      } loc(#loc122)
    } loc(#loc120)
    cir.return loc(#loc11)
  } loc(#loc113)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__char_malloc_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc124)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc35)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc125)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc37)
    cir.return loc(#loc34)
  } loc(#loc123)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc40)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc41)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc127)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    cir.return %2 : !s32i loc(#loc127)
  } loc(#loc126)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc43)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc129)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc48)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc130)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc50)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc51)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc51)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc131)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc132)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc50)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc133)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
    cir.scope {
      %9 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc136)
      %10 = cir.call %9() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc58)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc58)
      cir.if %11 {
        %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc43)
        %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc43)
        cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc63)
      } else {
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc67)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc67)
          %15 = cir.cmp(ne, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc139)
          cir.if %15 {
            %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc69)
            %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
            %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc71)
            %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc71)
            %20 = cir.call @strcpy(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc69)
            %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
            cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc73)
            %22 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc74)
            %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
            %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc75)
            cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc74)
          } loc(#loc140)
        } loc(#loc138)
      } loc(#loc137)
    } loc(#loc135)
    cir.return loc(#loc45)
  } loc(#loc128)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc77)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc78)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc142)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    cir.return %2 : !s32i loc(#loc142)
  } loc(#loc141)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc144)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc84)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc145)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc86)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc87)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc87)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc146)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc147)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc86)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc148)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc149)
    cir.scope {
      %9 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc151)
      %10 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc94)
      %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc94)
      cir.if %11 {
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc100)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc100)
          %15 = cir.cmp(ne, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc154)
          cir.if %15 {
            %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc102)
            %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
            %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc104)
            %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc104)
            %20 = cir.call @strcpy(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc102)
            %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
            cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc106)
            %22 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc107)
            %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
            %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc108)
            cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc107)
          } loc(#loc155)
        } loc(#loc153)
      } loc(#loc152)
    } loc(#loc150)
    cir.return loc(#loc81)
  } loc(#loc143)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__char_malloc_08.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/string.h":141:1)
#loc4 = loc("/usr/include/string.h":142:14)
#loc5 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":45:22)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("/usr/include/stdlib.h":687:1)
#loc9 = loc("/usr/include/stdlib.h":687:32)
#loc10 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":36:1)
#loc11 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":49:1)
#loc12 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":38:5)
#loc13 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":38:12)
#loc14 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":39:12)
#loc15 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":39:5)
#loc16 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":41:20)
#loc17 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":41:27)
#loc18 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":41:30)
#loc19 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":41:41)
#loc20 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":41:42)
#loc21 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":41:5)
#loc22 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":42:5)
#loc23 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":48:5)
#loc24 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":42:8)
#loc25 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":42:26)
#loc26 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":43:5)
#loc27 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":45:9)
#loc28 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":45:16)
#loc29 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":46:19)
#loc30 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":46:9)
#loc31 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":47:9)
#loc32 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":47:14)
#loc33 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":98:1)
#loc34 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":102:1)
#loc35 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":100:5)
#loc36 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":100:14)
#loc37 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":101:5)
#loc38 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":101:14)
#loc39 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":24:1)
#loc40 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":27:1)
#loc41 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":26:12)
#loc42 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":26:5)
#loc43 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":65:19)
#loc44 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":56:1)
#loc45 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":77:1)
#loc46 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":58:5)
#loc47 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":58:12)
#loc48 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":59:12)
#loc49 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":59:5)
#loc50 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":61:20)
#loc51 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":61:27)
#loc52 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":61:30)
#loc53 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":61:41)
#loc54 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":61:42)
#loc55 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":61:5)
#loc56 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":62:5)
#loc57 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":76:5)
#loc58 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":62:8)
#loc59 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":62:27)
#loc60 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":63:5)
#loc61 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":66:5)
#loc62 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":68:5)
#loc63 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":65:9)
#loc64 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":70:9)
#loc65 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":75:9)
#loc66 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":70:13)
#loc67 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":70:21)
#loc68 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":71:9)
#loc69 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":72:13)
#loc70 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":72:20)
#loc71 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":72:26)
#loc72 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":73:23)
#loc73 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":73:13)
#loc74 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":74:13)
#loc75 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":74:18)
#loc76 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":29:1)
#loc77 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":32:1)
#loc78 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":31:12)
#loc79 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":31:5)
#loc80 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":80:1)
#loc81 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":96:1)
#loc82 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":82:5)
#loc83 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":82:12)
#loc84 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":83:12)
#loc85 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":83:5)
#loc86 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":85:20)
#loc87 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":85:27)
#loc88 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":85:30)
#loc89 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":85:41)
#loc90 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":85:42)
#loc91 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":85:5)
#loc92 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":86:5)
#loc93 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":95:5)
#loc94 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":86:8)
#loc95 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":86:26)
#loc96 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":87:5)
#loc97 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":89:9)
#loc98 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":94:9)
#loc99 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":89:13)
#loc100 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":89:21)
#loc101 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":90:9)
#loc102 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":91:13)
#loc103 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":91:20)
#loc104 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":91:26)
#loc105 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":92:23)
#loc106 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":92:13)
#loc107 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":93:13)
#loc108 = loc("CWE690_NULL_Deref_From_Return__char_malloc_08.c":93:18)
#loc109 = loc(fused[#loc1, #loc2])
#loc110 = loc(fused[#loc3, #loc4])
#loc111 = loc(fused[#loc6, #loc7])
#loc112 = loc(fused[#loc8, #loc9])
#loc113 = loc(fused[#loc10, #loc11])
#loc114 = loc(fused[#loc12, #loc13])
#loc115 = loc(fused[#loc15, #loc14])
#loc116 = loc(fused[#loc18, #loc19])
#loc117 = loc(fused[#loc17, #loc19])
#loc118 = loc(fused[#loc16, #loc20])
#loc119 = loc(fused[#loc21, #loc20])
#loc120 = loc(fused[#loc22, #loc23])
#loc121 = loc(fused[#loc24, #loc25])
#loc122 = loc(fused[#loc26, #loc23])
#loc123 = loc(fused[#loc33, #loc34])
#loc124 = loc(fused[#loc35, #loc36])
#loc125 = loc(fused[#loc37, #loc38])
#loc126 = loc(fused[#loc39, #loc40])
#loc127 = loc(fused[#loc42, #loc41])
#loc128 = loc(fused[#loc44, #loc45])
#loc129 = loc(fused[#loc46, #loc47])
#loc130 = loc(fused[#loc49, #loc48])
#loc131 = loc(fused[#loc52, #loc53])
#loc132 = loc(fused[#loc51, #loc53])
#loc133 = loc(fused[#loc50, #loc54])
#loc134 = loc(fused[#loc55, #loc54])
#loc135 = loc(fused[#loc56, #loc57])
#loc136 = loc(fused[#loc58, #loc59])
#loc137 = loc(fused[#loc60, #loc61, #loc62, #loc57])
#loc138 = loc(fused[#loc64, #loc65])
#loc139 = loc(fused[#loc66, #loc67])
#loc140 = loc(fused[#loc68, #loc65])
#loc141 = loc(fused[#loc76, #loc77])
#loc142 = loc(fused[#loc79, #loc78])
#loc143 = loc(fused[#loc80, #loc81])
#loc144 = loc(fused[#loc82, #loc83])
#loc145 = loc(fused[#loc85, #loc84])
#loc146 = loc(fused[#loc88, #loc89])
#loc147 = loc(fused[#loc87, #loc89])
#loc148 = loc(fused[#loc86, #loc90])
#loc149 = loc(fused[#loc91, #loc90])
#loc150 = loc(fused[#loc92, #loc93])
#loc151 = loc(fused[#loc94, #loc95])
#loc152 = loc(fused[#loc96, #loc93])
#loc153 = loc(fused[#loc97, #loc98])
#loc154 = loc(fused[#loc99, #loc100])
#loc155 = loc(fused[#loc101, #loc98])
