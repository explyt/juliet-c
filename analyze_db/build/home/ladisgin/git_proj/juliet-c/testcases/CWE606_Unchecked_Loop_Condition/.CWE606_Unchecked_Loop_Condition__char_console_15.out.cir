!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":333:10)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":333:14)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":333:20)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":333:32)
#true = #cir.bool<true> : !cir.bool
#loc550 = loc(fused[#loc139, #loc140])
#loc551 = loc(fused[#loc141, #loc142])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc497)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc498)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc499)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc500)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc10)
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc501)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc13)
  cir.func private @printIntLine(!s32i) loc(#loc502)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_console_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc504)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc505)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc505)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc505)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc22)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc506)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc26)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc509)
            %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc32)
            %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
            %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc32)
            cir.store %8, %5 : !u64i, !cir.ptr<!u64i> loc(#loc509)
            cir.scope {
              %9 = cir.const #cir.int<100> : !s32i loc(#loc36)
              %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc36)
              %11 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc37)
              %12 = cir.binop(sub, %10, %11) : !u64i loc(#loc511)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc38)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc38)
              %15 = cir.cmp(gt, %12, %14) : !u64i, !cir.bool loc(#loc512)
              cir.if %15 {
                cir.scope {
                  %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
                  %17 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc43)
                  %18 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %17 : !u64i), !cir.ptr<!s8i> loc(#loc44)
                  %19 = cir.const #cir.int<100> : !s32i loc(#loc45)
                  %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc45)
                  %21 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc46)
                  %22 = cir.binop(sub, %20, %21) : !u64i loc(#loc515)
                  %23 = cir.cast(integral, %22 : !u64i), !s32i loc(#loc515)
                  %24 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc499)
                  %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc47)
                  %26 = cir.call @fgets(%18, %23, %25) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc48)
                  %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc49)
                  %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc49)
                  %29 = cir.cmp(ne, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc516)
                  cir.if %29 {
                    %30 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc53)
                    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
                    %32 = cir.call @strlen(%31) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc53)
                    cir.store %32, %5 : !u64i, !cir.ptr<!u64i> loc(#loc518)
                    cir.scope {
                      %33 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc59)
                      %34 = cir.const #cir.int<0> : !s32i loc(#loc60)
                      %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc60)
                      %36 = cir.cmp(gt, %33, %35) : !u64i, !cir.bool loc(#loc520)
                      %37 = cir.ternary(%36, true {
                        %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
                        %39 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc63)
                        %40 = cir.const #cir.int<1> : !s32i loc(#loc64)
                        %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc64)
                        %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc521)
                        %43 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc65)
                        %44 = cir.load %43 : !cir.ptr<!s8i>, !s8i loc(#loc62)
                        %45 = cir.cast(integral, %44 : !s8i), !s32i loc(#loc62)
                        %46 = cir.const #cir.int<10> : !s32i loc(#loc66)
                        %47 = cir.cmp(eq, %45, %46) : !s32i, !cir.bool loc(#loc522)
                        %48 = cir.ternary(%47, true {
                          %49 = cir.const #true loc(#loc61)
                          cir.yield %49 : !cir.bool loc(#loc61)
                        }, false {
                          %49 = cir.const #false loc(#loc61)
                          cir.yield %49 : !cir.bool loc(#loc61)
                        }) : (!cir.bool) -> !cir.bool loc(#loc61)
                        cir.yield %48 : !cir.bool loc(#loc61)
                      }, false {
                        %38 = cir.const #false loc(#loc61)
                        cir.yield %38 : !cir.bool loc(#loc61)
                      }) : (!cir.bool) -> !cir.bool loc(#loc61)
                      cir.if %37 {
                        %38 = cir.const #cir.int<0> : !s32i loc(#loc68)
                        %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc68)
                        %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
                        %41 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc70)
                        %42 = cir.const #cir.int<1> : !s32i loc(#loc71)
                        %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc71)
                        %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc524)
                        %45 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc72)
                        cir.store %39, %45 : !s8i, !cir.ptr<!s8i> loc(#loc525)
                      } loc(#loc523)
                    } loc(#loc519)
                  } else {
                    %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
                    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
                    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc73)
                    %32 = cir.const #cir.int<0> : !s32i loc(#loc74)
                    %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc74)
                    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
                    %35 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc76)
                    %36 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc77)
                    cir.store %33, %36 : !s8i, !cir.ptr<!s8i> loc(#loc526)
                  } loc(#loc517)
                } loc(#loc514)
              } loc(#loc513)
            } loc(#loc510)
          } loc(#loc508)
          cir.break loc(#loc78)
        } loc(#loc27)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc10)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc10)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc80)
          cir.break loc(#loc81)
        } loc(#loc79)
        cir.yield loc(#loc24)
      } loc(#loc24)
    } loc(#loc507)
    cir.scope {
      %4 = cir.const #cir.int<7> : !s32i loc(#loc84)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc529)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc530)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc531)
            cir.scope {
              %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc94)
              %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
              %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc13)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc13)
              %12 = cir.call @__isoc99_sscanf(%9, %11, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc94)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc96)
              %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc533)
              cir.if %14 {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc98)
                cir.store %15, %7 : !s32i, !cir.ptr<!s32i> loc(#loc535)
                cir.scope {
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc102)
                  cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc537)
                  cir.for : cond {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc104)
                    %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc105)
                    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc538)
                    cir.condition(%20) loc(#loc106)
                  } body {
                    cir.scope {
                      %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc108)
                      %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc109)
                      cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc540)
                    } loc(#loc539)
                    cir.yield loc(#loc101)
                  } step {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc110)
                    %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc111)
                    cir.store %19, %5 : !s32i, !cir.ptr<!s32i> loc(#loc541)
                    cir.yield loc(#loc536)
                  } loc(#loc536)
                } loc(#loc536)
                %16 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc112)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc113)
              } loc(#loc534)
            } loc(#loc532)
          } loc(#loc528)
          cir.break loc(#loc114)
        } loc(#loc85)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc116)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc116)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc117)
          cir.break loc(#loc118)
        } loc(#loc115)
        cir.yield loc(#loc82)
      } loc(#loc82)
    } loc(#loc527)
    cir.return loc(#loc17)
  } loc(#loc503)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_console_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc543)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc121)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc544)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc123)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc545)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc125)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc546)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc127)
    cir.return loc(#loc120)
  } loc(#loc542)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc547)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc548)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc133)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc134)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc135)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc136)
  cir.func @main(%arg0: !s32i loc(fused[#loc139, #loc140]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc141, #loc142])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc550)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc551)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc138)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc143)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc143)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc144)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc145)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc145)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc146)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc133)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc133)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc147)
    %8 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_console_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc552)
    cir.call @CWE606_Unchecked_Loop_Condition__char_console_15_good() : () -> () loc(#loc148)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc134)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc134)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc150)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc135)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc135)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc151)
    %13 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_console_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc553)
    cir.call @CWE606_Unchecked_Loop_Condition__char_console_15_bad() : () -> () loc(#loc152)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc136)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc136)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc154)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc155)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc554)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc554)
    cir.return %17 : !s32i loc(#loc554)
  } loc(#loc549)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc556)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc557)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc557)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc557)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc163)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc558)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc167)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc561)
            %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc173)
            %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc174)
            %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc173)
            cir.store %8, %5 : !u64i, !cir.ptr<!u64i> loc(#loc561)
            cir.scope {
              %9 = cir.const #cir.int<100> : !s32i loc(#loc177)
              %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc177)
              %11 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc178)
              %12 = cir.binop(sub, %10, %11) : !u64i loc(#loc563)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc179)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc179)
              %15 = cir.cmp(gt, %12, %14) : !u64i, !cir.bool loc(#loc564)
              cir.if %15 {
                cir.scope {
                  %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc183)
                  %17 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc184)
                  %18 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %17 : !u64i), !cir.ptr<!s8i> loc(#loc185)
                  %19 = cir.const #cir.int<100> : !s32i loc(#loc186)
                  %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc186)
                  %21 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc187)
                  %22 = cir.binop(sub, %20, %21) : !u64i loc(#loc567)
                  %23 = cir.cast(integral, %22 : !u64i), !s32i loc(#loc567)
                  %24 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc499)
                  %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc188)
                  %26 = cir.call @fgets(%18, %23, %25) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc189)
                  %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc190)
                  %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc190)
                  %29 = cir.cmp(ne, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc568)
                  cir.if %29 {
                    %30 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc194)
                    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc195)
                    %32 = cir.call @strlen(%31) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc194)
                    cir.store %32, %5 : !u64i, !cir.ptr<!u64i> loc(#loc570)
                    cir.scope {
                      %33 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc200)
                      %34 = cir.const #cir.int<0> : !s32i loc(#loc201)
                      %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc201)
                      %36 = cir.cmp(gt, %33, %35) : !u64i, !cir.bool loc(#loc572)
                      %37 = cir.ternary(%36, true {
                        %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc203)
                        %39 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc204)
                        %40 = cir.const #cir.int<1> : !s32i loc(#loc205)
                        %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc205)
                        %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc573)
                        %43 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc206)
                        %44 = cir.load %43 : !cir.ptr<!s8i>, !s8i loc(#loc203)
                        %45 = cir.cast(integral, %44 : !s8i), !s32i loc(#loc203)
                        %46 = cir.const #cir.int<10> : !s32i loc(#loc207)
                        %47 = cir.cmp(eq, %45, %46) : !s32i, !cir.bool loc(#loc574)
                        %48 = cir.ternary(%47, true {
                          %49 = cir.const #true loc(#loc202)
                          cir.yield %49 : !cir.bool loc(#loc202)
                        }, false {
                          %49 = cir.const #false loc(#loc202)
                          cir.yield %49 : !cir.bool loc(#loc202)
                        }) : (!cir.bool) -> !cir.bool loc(#loc202)
                        cir.yield %48 : !cir.bool loc(#loc202)
                      }, false {
                        %38 = cir.const #false loc(#loc202)
                        cir.yield %38 : !cir.bool loc(#loc202)
                      }) : (!cir.bool) -> !cir.bool loc(#loc202)
                      cir.if %37 {
                        %38 = cir.const #cir.int<0> : !s32i loc(#loc209)
                        %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc209)
                        %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc210)
                        %41 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc211)
                        %42 = cir.const #cir.int<1> : !s32i loc(#loc212)
                        %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc212)
                        %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc576)
                        %45 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc213)
                        cir.store %39, %45 : !s8i, !cir.ptr<!s8i> loc(#loc577)
                      } loc(#loc575)
                    } loc(#loc571)
                  } else {
                    %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc214)
                    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc214)
                    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc215)
                    %32 = cir.const #cir.int<0> : !s32i loc(#loc216)
                    %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc216)
                    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc217)
                    %35 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc218)
                    %36 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc219)
                    cir.store %33, %36 : !s8i, !cir.ptr<!s8i> loc(#loc578)
                  } loc(#loc569)
                } loc(#loc566)
              } loc(#loc565)
            } loc(#loc562)
          } loc(#loc560)
          cir.break loc(#loc220)
        } loc(#loc168)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc222)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc222)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc223)
          cir.break loc(#loc224)
        } loc(#loc221)
        cir.yield loc(#loc165)
      } loc(#loc165)
    } loc(#loc559)
    cir.scope {
      %4 = cir.const #cir.int<8> : !s32i loc(#loc227)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc229)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc229)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc230)
          cir.break loc(#loc231)
        } loc(#loc228)
        cir.case(default, []) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc581)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc582)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc583)
            cir.scope {
              %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc241)
              %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc242)
              %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc243)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc243)
              %12 = cir.call @__isoc99_sscanf(%9, %11, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc241)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc244)
              %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc585)
              cir.if %14 {
                cir.scope {
                  %15 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc248)
                  %16 = cir.const #cir.int<10000> : !s32i loc(#loc249)
                  %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc588)
                  cir.if %17 {
                    %18 = cir.const #cir.int<0> : !s32i loc(#loc251)
                    cir.store %18, %7 : !s32i, !cir.ptr<!s32i> loc(#loc590)
                    cir.scope {
                      %20 = cir.const #cir.int<0> : !s32i loc(#loc255)
                      cir.store %20, %5 : !s32i, !cir.ptr<!s32i> loc(#loc592)
                      cir.for : cond {
                        %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc257)
                        %22 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc258)
                        %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc593)
                        cir.condition(%23) loc(#loc259)
                      } body {
                        cir.scope {
                          %21 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc261)
                          %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc262)
                          cir.store %22, %7 : !s32i, !cir.ptr<!s32i> loc(#loc595)
                        } loc(#loc594)
                        cir.yield loc(#loc254)
                      } step {
                        %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc263)
                        %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc264)
                        cir.store %22, %5 : !s32i, !cir.ptr<!s32i> loc(#loc596)
                        cir.yield loc(#loc591)
                      } loc(#loc591)
                    } loc(#loc591)
                    %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc265)
                    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc266)
                  } loc(#loc589)
                } loc(#loc587)
              } loc(#loc586)
            } loc(#loc584)
          } loc(#loc580)
          cir.break loc(#loc267)
        } loc(#loc232)
        cir.yield loc(#loc225)
      } loc(#loc225)
    } loc(#loc579)
    cir.return loc(#loc158)
  } loc(#loc555)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc598)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc599)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc599)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc599)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc274)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc600)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc278)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc603)
            %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc284)
            %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc285)
            %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc284)
            cir.store %8, %5 : !u64i, !cir.ptr<!u64i> loc(#loc603)
            cir.scope {
              %9 = cir.const #cir.int<100> : !s32i loc(#loc288)
              %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc288)
              %11 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc289)
              %12 = cir.binop(sub, %10, %11) : !u64i loc(#loc605)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc290)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc290)
              %15 = cir.cmp(gt, %12, %14) : !u64i, !cir.bool loc(#loc606)
              cir.if %15 {
                cir.scope {
                  %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc294)
                  %17 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc295)
                  %18 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %17 : !u64i), !cir.ptr<!s8i> loc(#loc296)
                  %19 = cir.const #cir.int<100> : !s32i loc(#loc297)
                  %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc297)
                  %21 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc298)
                  %22 = cir.binop(sub, %20, %21) : !u64i loc(#loc609)
                  %23 = cir.cast(integral, %22 : !u64i), !s32i loc(#loc609)
                  %24 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc499)
                  %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc299)
                  %26 = cir.call @fgets(%18, %23, %25) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc300)
                  %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc301)
                  %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc301)
                  %29 = cir.cmp(ne, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc610)
                  cir.if %29 {
                    %30 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc305)
                    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc306)
                    %32 = cir.call @strlen(%31) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc305)
                    cir.store %32, %5 : !u64i, !cir.ptr<!u64i> loc(#loc612)
                    cir.scope {
                      %33 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc311)
                      %34 = cir.const #cir.int<0> : !s32i loc(#loc312)
                      %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc312)
                      %36 = cir.cmp(gt, %33, %35) : !u64i, !cir.bool loc(#loc614)
                      %37 = cir.ternary(%36, true {
                        %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc314)
                        %39 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc315)
                        %40 = cir.const #cir.int<1> : !s32i loc(#loc316)
                        %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc316)
                        %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc615)
                        %43 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc317)
                        %44 = cir.load %43 : !cir.ptr<!s8i>, !s8i loc(#loc314)
                        %45 = cir.cast(integral, %44 : !s8i), !s32i loc(#loc314)
                        %46 = cir.const #cir.int<10> : !s32i loc(#loc318)
                        %47 = cir.cmp(eq, %45, %46) : !s32i, !cir.bool loc(#loc616)
                        %48 = cir.ternary(%47, true {
                          %49 = cir.const #true loc(#loc313)
                          cir.yield %49 : !cir.bool loc(#loc313)
                        }, false {
                          %49 = cir.const #false loc(#loc313)
                          cir.yield %49 : !cir.bool loc(#loc313)
                        }) : (!cir.bool) -> !cir.bool loc(#loc313)
                        cir.yield %48 : !cir.bool loc(#loc313)
                      }, false {
                        %38 = cir.const #false loc(#loc313)
                        cir.yield %38 : !cir.bool loc(#loc313)
                      }) : (!cir.bool) -> !cir.bool loc(#loc313)
                      cir.if %37 {
                        %38 = cir.const #cir.int<0> : !s32i loc(#loc320)
                        %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc320)
                        %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc321)
                        %41 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc322)
                        %42 = cir.const #cir.int<1> : !s32i loc(#loc323)
                        %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc323)
                        %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc618)
                        %45 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc324)
                        cir.store %39, %45 : !s8i, !cir.ptr<!s8i> loc(#loc619)
                      } loc(#loc617)
                    } loc(#loc613)
                  } else {
                    %30 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc325)
                    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc325)
                    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc326)
                    %32 = cir.const #cir.int<0> : !s32i loc(#loc327)
                    %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc327)
                    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc328)
                    %35 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc329)
                    %36 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc330)
                    cir.store %33, %36 : !s8i, !cir.ptr<!s8i> loc(#loc620)
                  } loc(#loc611)
                } loc(#loc608)
              } loc(#loc607)
            } loc(#loc604)
          } loc(#loc602)
          cir.break loc(#loc331)
        } loc(#loc279)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc333)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc333)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc334)
          cir.break loc(#loc335)
        } loc(#loc332)
        cir.yield loc(#loc276)
      } loc(#loc276)
    } loc(#loc601)
    cir.scope {
      %4 = cir.const #cir.int<7> : !s32i loc(#loc338)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc623)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc624)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc625)
            cir.scope {
              %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc348)
              %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc349)
              %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc350)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc350)
              %12 = cir.call @__isoc99_sscanf(%9, %11, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc348)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc351)
              %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc627)
              cir.if %14 {
                cir.scope {
                  %15 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc355)
                  %16 = cir.const #cir.int<10000> : !s32i loc(#loc356)
                  %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc630)
                  cir.if %17 {
                    %18 = cir.const #cir.int<0> : !s32i loc(#loc358)
                    cir.store %18, %7 : !s32i, !cir.ptr<!s32i> loc(#loc632)
                    cir.scope {
                      %20 = cir.const #cir.int<0> : !s32i loc(#loc362)
                      cir.store %20, %5 : !s32i, !cir.ptr<!s32i> loc(#loc634)
                      cir.for : cond {
                        %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc364)
                        %22 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc365)
                        %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc635)
                        cir.condition(%23) loc(#loc366)
                      } body {
                        cir.scope {
                          %21 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc368)
                          %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc369)
                          cir.store %22, %7 : !s32i, !cir.ptr<!s32i> loc(#loc637)
                        } loc(#loc636)
                        cir.yield loc(#loc361)
                      } step {
                        %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc370)
                        %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc371)
                        cir.store %22, %5 : !s32i, !cir.ptr<!s32i> loc(#loc638)
                        cir.yield loc(#loc633)
                      } loc(#loc633)
                    } loc(#loc633)
                    %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc372)
                    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc373)
                  } loc(#loc631)
                } loc(#loc629)
              } loc(#loc628)
            } loc(#loc626)
          } loc(#loc622)
          cir.break loc(#loc374)
        } loc(#loc339)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc376)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc376)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc377)
          cir.break loc(#loc378)
        } loc(#loc375)
        cir.yield loc(#loc336)
      } loc(#loc336)
    } loc(#loc621)
    cir.return loc(#loc269)
  } loc(#loc597)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc639)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc381)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc641)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc642)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc642)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc642)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc388)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc643)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc392)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc394)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc394)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc395)
          cir.break loc(#loc396)
        } loc(#loc393)
        cir.case(default, []) {
          %5 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc398)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc399)
          %7 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc381)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc381)
          %9 = cir.call @strcpy(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc398)
          cir.break loc(#loc400)
        } loc(#loc397)
        cir.yield loc(#loc390)
      } loc(#loc390)
    } loc(#loc644)
    cir.scope {
      %4 = cir.const #cir.int<7> : !s32i loc(#loc403)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc647)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc648)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc649)
            cir.scope {
              %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc413)
              %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc414)
              %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc415)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc415)
              %12 = cir.call @__isoc99_sscanf(%9, %11, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc413)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc416)
              %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc651)
              cir.if %14 {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc418)
                cir.store %15, %7 : !s32i, !cir.ptr<!s32i> loc(#loc653)
                cir.scope {
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc422)
                  cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc655)
                  cir.for : cond {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc424)
                    %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc425)
                    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc656)
                    cir.condition(%20) loc(#loc426)
                  } body {
                    cir.scope {
                      %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc428)
                      %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc429)
                      cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc658)
                    } loc(#loc657)
                    cir.yield loc(#loc421)
                  } step {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc430)
                    %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc431)
                    cir.store %19, %5 : !s32i, !cir.ptr<!s32i> loc(#loc659)
                    cir.yield loc(#loc654)
                  } loc(#loc654)
                } loc(#loc654)
                %16 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc432)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc433)
              } loc(#loc652)
            } loc(#loc650)
          } loc(#loc646)
          cir.break loc(#loc434)
        } loc(#loc404)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc436)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc436)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc437)
          cir.break loc(#loc438)
        } loc(#loc435)
        cir.yield loc(#loc401)
      } loc(#loc401)
    } loc(#loc645)
    cir.return loc(#loc383)
  } loc(#loc640)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc661)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc662)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc662)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc662)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc445)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc663)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc449)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %5 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc451)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc452)
          %7 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc453)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc453)
          %9 = cir.call @strcpy(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc451)
          cir.break loc(#loc454)
        } loc(#loc450)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc456)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc456)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc457)
          cir.break loc(#loc458)
        } loc(#loc455)
        cir.yield loc(#loc447)
      } loc(#loc447)
    } loc(#loc664)
    cir.scope {
      %4 = cir.const #cir.int<7> : !s32i loc(#loc461)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc667)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc668)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc669)
            cir.scope {
              %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc471)
              %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc472)
              %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc473)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc473)
              %12 = cir.call @__isoc99_sscanf(%9, %11, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc471)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc474)
              %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc671)
              cir.if %14 {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc476)
                cir.store %15, %7 : !s32i, !cir.ptr<!s32i> loc(#loc673)
                cir.scope {
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc480)
                  cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc675)
                  cir.for : cond {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc482)
                    %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc483)
                    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc676)
                    cir.condition(%20) loc(#loc484)
                  } body {
                    cir.scope {
                      %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc486)
                      %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc487)
                      cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc678)
                    } loc(#loc677)
                    cir.yield loc(#loc479)
                  } step {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc488)
                    %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc489)
                    cir.store %19, %5 : !s32i, !cir.ptr<!s32i> loc(#loc679)
                    cir.yield loc(#loc674)
                  } loc(#loc674)
                } loc(#loc674)
                %16 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc490)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc491)
              } loc(#loc672)
            } loc(#loc670)
          } loc(#loc666)
          cir.break loc(#loc492)
        } loc(#loc462)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc494)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc494)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc495)
          cir.break loc(#loc496)
        } loc(#loc493)
        cir.yield loc(#loc459)
      } loc(#loc459)
    } loc(#loc665)
    cir.return loc(#loc440)
  } loc(#loc660)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_15.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":55:27)
#loc10 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":64:19)
#loc11 = loc("/usr/include/stdio.h":468:1)
#loc12 = loc("/usr/include/stdio.h":468:12)
#loc13 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":72:26)
#loc14 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc15 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc16 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":28:1)
#loc17 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":90:1)
#loc18 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":30:5)
#loc19 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":30:12)
#loc20 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":31:5)
#loc21 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":31:28)
#loc22 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":32:12)
#loc23 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":32:5)
#loc24 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":33:5)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":66:5)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":33:12)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":35:5)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":36:5)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":60:5)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":38:9)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":38:37)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":38:26)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":38:33)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":40:9)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":59:9)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":40:13)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":40:17)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":40:27)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":41:9)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":43:13)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":58:13)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":43:23)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":43:28)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":43:27)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":43:43)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":43:47)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":43:57)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":43:17)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":43:67)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":44:13)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":52:13)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":54:13)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":47:27)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":47:34)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":47:17)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":47:38)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":48:17)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":51:17)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":48:21)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":48:31)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":48:33)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":48:36)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":48:41)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":48:49)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":48:50)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":48:55)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":49:17)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":50:39)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":50:21)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":50:26)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":50:34)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":50:35)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":55:17)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":57:33)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":57:17)
#loc76 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":57:22)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":57:29)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":61:5)
#loc79 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":62:5)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":64:9)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":65:9)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":67:5)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":89:5)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":67:12)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":69:5)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":70:5)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":83:5)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":71:9)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":71:13)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":71:16)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":71:19)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":72:9)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":82:9)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":72:13)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":72:20)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":72:39)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":73:9)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":75:27)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":75:13)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":76:13)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":80:13)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":76:22)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":76:18)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":76:25)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":76:29)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":76:27)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":77:13)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":79:28)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":79:17)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":76:33)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":76:32)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":81:26)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":81:13)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":84:5)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":85:5)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":87:19)
#loc117 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":87:9)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":88:9)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":316:1)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":322:1)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":318:5)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":318:14)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":319:5)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":319:14)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":320:5)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":320:14)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":321:5)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":321:14)
#loc129 = loc("/usr/include/stdlib.h":575:1)
#loc130 = loc("/usr/include/stdlib.h":575:41)
#loc131 = loc("/usr/include/time.h":76:1)
#loc132 = loc("/usr/include/time.h":76:38)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":338:15)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":340:15)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":343:15)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":345:15)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":333:1)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":348:1)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":334:1)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":336:27)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":336:22)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":336:5)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":338:5)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":339:5)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":339:59)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":340:5)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":343:5)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":344:5)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":344:58)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":345:5)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":347:12)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":347:5)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":97:1)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":162:1)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":99:5)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":99:12)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":100:5)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":100:28)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":101:12)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":101:5)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":102:5)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":135:5)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":102:12)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":104:5)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":105:5)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":129:5)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":107:9)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":107:37)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":107:26)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":107:33)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":109:9)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":128:9)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":109:13)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":109:17)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":109:27)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":110:9)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":112:13)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":127:13)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":112:23)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":112:28)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":112:27)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":112:43)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":112:47)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":112:57)
#loc189 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":112:17)
#loc190 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":112:67)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":113:13)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":121:13)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":123:13)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":116:27)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":116:34)
#loc196 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":116:17)
#loc197 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":116:38)
#loc198 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":117:17)
#loc199 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":120:17)
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":117:21)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":117:31)
#loc202 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":117:33)
#loc203 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":117:36)
#loc204 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":117:41)
#loc205 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":117:49)
#loc206 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":117:50)
#loc207 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":117:55)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":118:17)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":119:39)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":119:21)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":119:26)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":119:34)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":119:35)
#loc214 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":124:27)
#loc215 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":124:17)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":126:33)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":126:17)
#loc218 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":126:22)
#loc219 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":126:29)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":130:5)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":131:5)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":133:19)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":133:9)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":134:9)
#loc225 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":136:5)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":161:5)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":136:12)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":138:5)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":140:19)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":140:9)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":141:9)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":142:5)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":143:5)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":159:5)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":144:9)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":144:13)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":144:16)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":144:19)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":145:9)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":158:9)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":145:13)
#loc242 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":145:20)
#loc243 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":145:26)
#loc244 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":145:39)
#loc245 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":146:9)
#loc246 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":148:13)
#loc247 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":157:13)
#loc248 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":148:17)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":148:21)
#loc250 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":149:13)
#loc251 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":150:31)
#loc252 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":150:17)
#loc253 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":151:17)
#loc254 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":155:17)
#loc255 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":151:26)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":151:22)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":151:29)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":151:33)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":151:31)
#loc260 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":152:17)
#loc261 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":154:32)
#loc262 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":154:21)
#loc263 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":151:37)
#loc264 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":151:36)
#loc265 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":156:30)
#loc266 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":156:17)
#loc267 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":160:5)
#loc268 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":165:1)
#loc269 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":230:1)
#loc270 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":167:5)
#loc271 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":167:12)
#loc272 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":168:5)
#loc273 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":168:28)
#loc274 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":169:12)
#loc275 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":169:5)
#loc276 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":170:5)
#loc277 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":203:5)
#loc278 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":170:12)
#loc279 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":172:5)
#loc280 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":173:5)
#loc281 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":197:5)
#loc282 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":175:9)
#loc283 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":175:37)
#loc284 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":175:26)
#loc285 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":175:33)
#loc286 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":177:9)
#loc287 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":196:9)
#loc288 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":177:13)
#loc289 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":177:17)
#loc290 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":177:27)
#loc291 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":178:9)
#loc292 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":180:13)
#loc293 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":195:13)
#loc294 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":180:23)
#loc295 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":180:28)
#loc296 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":180:27)
#loc297 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":180:43)
#loc298 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":180:47)
#loc299 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":180:57)
#loc300 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":180:17)
#loc301 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":180:67)
#loc302 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":181:13)
#loc303 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":189:13)
#loc304 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":191:13)
#loc305 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":184:27)
#loc306 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":184:34)
#loc307 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":184:17)
#loc308 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":184:38)
#loc309 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":185:17)
#loc310 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":188:17)
#loc311 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":185:21)
#loc312 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":185:31)
#loc313 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":185:33)
#loc314 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":185:36)
#loc315 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":185:41)
#loc316 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":185:49)
#loc317 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":185:50)
#loc318 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":185:55)
#loc319 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":186:17)
#loc320 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":187:39)
#loc321 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":187:21)
#loc322 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":187:26)
#loc323 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":187:34)
#loc324 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":187:35)
#loc325 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":192:27)
#loc326 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":192:17)
#loc327 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":194:33)
#loc328 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":194:17)
#loc329 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":194:22)
#loc330 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":194:29)
#loc331 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":198:5)
#loc332 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":199:5)
#loc333 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":201:19)
#loc334 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":201:9)
#loc335 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":202:9)
#loc336 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":204:5)
#loc337 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":229:5)
#loc338 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":204:12)
#loc339 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":206:5)
#loc340 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":207:5)
#loc341 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":223:5)
#loc342 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":208:9)
#loc343 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":208:13)
#loc344 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":208:16)
#loc345 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":208:19)
#loc346 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":209:9)
#loc347 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":222:9)
#loc348 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":209:13)
#loc349 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":209:20)
#loc350 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":209:26)
#loc351 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":209:39)
#loc352 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":210:9)
#loc353 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":212:13)
#loc354 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":221:13)
#loc355 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":212:17)
#loc356 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":212:21)
#loc357 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":213:13)
#loc358 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":214:31)
#loc359 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":214:17)
#loc360 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":215:17)
#loc361 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":219:17)
#loc362 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":215:26)
#loc363 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":215:22)
#loc364 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":215:29)
#loc365 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":215:33)
#loc366 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":215:31)
#loc367 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":216:17)
#loc368 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":218:32)
#loc369 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":218:21)
#loc370 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":215:37)
#loc371 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":215:36)
#loc372 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":220:30)
#loc373 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":220:17)
#loc374 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":224:5)
#loc375 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":225:5)
#loc376 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":227:19)
#loc377 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":227:9)
#loc378 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":228:9)
#loc379 = loc("/usr/include/string.h":141:1)
#loc380 = loc("/usr/include/string.h":142:14)
#loc381 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":246:22)
#loc382 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":233:1)
#loc383 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":272:1)
#loc384 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":235:5)
#loc385 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":235:12)
#loc386 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":236:5)
#loc387 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":236:28)
#loc388 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":237:12)
#loc389 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":237:5)
#loc390 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":238:5)
#loc391 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":248:5)
#loc392 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":238:12)
#loc393 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":240:5)
#loc394 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":242:19)
#loc395 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":242:9)
#loc396 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":243:9)
#loc397 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":244:5)
#loc398 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":246:9)
#loc399 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":246:16)
#loc400 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":247:9)
#loc401 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":249:5)
#loc402 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":271:5)
#loc403 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":249:12)
#loc404 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":251:5)
#loc405 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":252:5)
#loc406 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":265:5)
#loc407 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":253:9)
#loc408 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":253:13)
#loc409 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":253:16)
#loc410 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":253:19)
#loc411 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":254:9)
#loc412 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":264:9)
#loc413 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":254:13)
#loc414 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":254:20)
#loc415 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":254:26)
#loc416 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":254:39)
#loc417 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":255:9)
#loc418 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":257:27)
#loc419 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":257:13)
#loc420 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":258:13)
#loc421 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":262:13)
#loc422 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":258:22)
#loc423 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":258:18)
#loc424 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":258:25)
#loc425 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":258:29)
#loc426 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":258:27)
#loc427 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":259:13)
#loc428 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":261:28)
#loc429 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":261:17)
#loc430 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":258:33)
#loc431 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":258:32)
#loc432 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":263:26)
#loc433 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":263:13)
#loc434 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":266:5)
#loc435 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":267:5)
#loc436 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":269:19)
#loc437 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":269:9)
#loc438 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":270:9)
#loc439 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":275:1)
#loc440 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":314:1)
#loc441 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":277:5)
#loc442 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":277:12)
#loc443 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":278:5)
#loc444 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":278:28)
#loc445 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":279:12)
#loc446 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":279:5)
#loc447 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":280:5)
#loc448 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":290:5)
#loc449 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":280:12)
#loc450 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":282:5)
#loc451 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":284:9)
#loc452 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":284:16)
#loc453 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":284:22)
#loc454 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":285:9)
#loc455 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":286:5)
#loc456 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":288:19)
#loc457 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":288:9)
#loc458 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":289:9)
#loc459 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":291:5)
#loc460 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":313:5)
#loc461 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":291:12)
#loc462 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":293:5)
#loc463 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":294:5)
#loc464 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":307:5)
#loc465 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":295:9)
#loc466 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":295:13)
#loc467 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":295:16)
#loc468 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":295:19)
#loc469 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":296:9)
#loc470 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":306:9)
#loc471 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":296:13)
#loc472 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":296:20)
#loc473 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":296:26)
#loc474 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":296:39)
#loc475 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":297:9)
#loc476 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":299:27)
#loc477 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":299:13)
#loc478 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":300:13)
#loc479 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":304:13)
#loc480 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":300:22)
#loc481 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":300:18)
#loc482 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":300:25)
#loc483 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":300:29)
#loc484 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":300:27)
#loc485 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":301:13)
#loc486 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":303:28)
#loc487 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":303:17)
#loc488 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":300:33)
#loc489 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":300:32)
#loc490 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":305:26)
#loc491 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":305:13)
#loc492 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":308:5)
#loc493 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":309:5)
#loc494 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":311:19)
#loc495 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":311:9)
#loc496 = loc("CWE606_Unchecked_Loop_Condition__char_console_15.c":312:9)
#loc497 = loc(fused[#loc1, #loc2])
#loc498 = loc(fused[#loc3, #loc4])
#loc499 = loc(fused[#loc5, #loc6])
#loc500 = loc(fused[#loc7, #loc8])
#loc501 = loc(fused[#loc11, #loc12])
#loc502 = loc(fused[#loc14, #loc15])
#loc503 = loc(fused[#loc16, #loc17])
#loc504 = loc(fused[#loc18, #loc19])
#loc505 = loc(fused[#loc20, #loc21])
#loc506 = loc(fused[#loc23, #loc22])
#loc507 = loc(fused[#loc24, #loc25])
#loc508 = loc(fused[#loc28, #loc29])
#loc509 = loc(fused[#loc30, #loc31])
#loc510 = loc(fused[#loc34, #loc35])
#loc511 = loc(fused[#loc36, #loc37])
#loc512 = loc(fused[#loc36, #loc38])
#loc513 = loc(fused[#loc39, #loc35])
#loc514 = loc(fused[#loc40, #loc41])
#loc515 = loc(fused[#loc45, #loc46])
#loc516 = loc(fused[#loc48, #loc49])
#loc517 = loc(fused[#loc50, #loc51, #loc52, #loc41])
#loc518 = loc(fused[#loc55, #loc56])
#loc519 = loc(fused[#loc57, #loc58])
#loc520 = loc(fused[#loc59, #loc60])
#loc521 = loc(fused[#loc63, #loc64])
#loc522 = loc(fused[#loc62, #loc66])
#loc523 = loc(fused[#loc67, #loc58])
#loc524 = loc(fused[#loc70, #loc71])
#loc525 = loc(fused[#loc69, #loc68])
#loc526 = loc(fused[#loc75, #loc74])
#loc527 = loc(fused[#loc82, #loc83])
#loc528 = loc(fused[#loc86, #loc87])
#loc529 = loc(fused[#loc88, #loc89])
#loc530 = loc(fused[#loc88, #loc90])
#loc531 = loc(fused[#loc88, #loc91])
#loc532 = loc(fused[#loc92, #loc93])
#loc533 = loc(fused[#loc94, #loc96])
#loc534 = loc(fused[#loc97, #loc93])
#loc535 = loc(fused[#loc99, #loc98])
#loc536 = loc(fused[#loc100, #loc101])
#loc537 = loc(fused[#loc103, #loc102])
#loc538 = loc(fused[#loc104, #loc105])
#loc539 = loc(fused[#loc107, #loc101])
#loc540 = loc(fused[#loc109, #loc108])
#loc541 = loc(fused[#loc111, #loc110])
#loc542 = loc(fused[#loc119, #loc120])
#loc543 = loc(fused[#loc121, #loc122])
#loc544 = loc(fused[#loc123, #loc124])
#loc545 = loc(fused[#loc125, #loc126])
#loc546 = loc(fused[#loc127, #loc128])
#loc547 = loc(fused[#loc129, #loc130])
#loc548 = loc(fused[#loc131, #loc132])
#loc549 = loc(fused[#loc137, #loc138])
#loc552 = loc(fused[#loc148, #loc149])
#loc553 = loc(fused[#loc152, #loc153])
#loc554 = loc(fused[#loc156, #loc155])
#loc555 = loc(fused[#loc157, #loc158])
#loc556 = loc(fused[#loc159, #loc160])
#loc557 = loc(fused[#loc161, #loc162])
#loc558 = loc(fused[#loc164, #loc163])
#loc559 = loc(fused[#loc165, #loc166])
#loc560 = loc(fused[#loc169, #loc170])
#loc561 = loc(fused[#loc171, #loc172])
#loc562 = loc(fused[#loc175, #loc176])
#loc563 = loc(fused[#loc177, #loc178])
#loc564 = loc(fused[#loc177, #loc179])
#loc565 = loc(fused[#loc180, #loc176])
#loc566 = loc(fused[#loc181, #loc182])
#loc567 = loc(fused[#loc186, #loc187])
#loc568 = loc(fused[#loc189, #loc190])
#loc569 = loc(fused[#loc191, #loc192, #loc193, #loc182])
#loc570 = loc(fused[#loc196, #loc197])
#loc571 = loc(fused[#loc198, #loc199])
#loc572 = loc(fused[#loc200, #loc201])
#loc573 = loc(fused[#loc204, #loc205])
#loc574 = loc(fused[#loc203, #loc207])
#loc575 = loc(fused[#loc208, #loc199])
#loc576 = loc(fused[#loc211, #loc212])
#loc577 = loc(fused[#loc210, #loc209])
#loc578 = loc(fused[#loc217, #loc216])
#loc579 = loc(fused[#loc225, #loc226])
#loc580 = loc(fused[#loc233, #loc234])
#loc581 = loc(fused[#loc235, #loc236])
#loc582 = loc(fused[#loc235, #loc237])
#loc583 = loc(fused[#loc235, #loc238])
#loc584 = loc(fused[#loc239, #loc240])
#loc585 = loc(fused[#loc241, #loc244])
#loc586 = loc(fused[#loc245, #loc240])
#loc587 = loc(fused[#loc246, #loc247])
#loc588 = loc(fused[#loc248, #loc249])
#loc589 = loc(fused[#loc250, #loc247])
#loc590 = loc(fused[#loc252, #loc251])
#loc591 = loc(fused[#loc253, #loc254])
#loc592 = loc(fused[#loc256, #loc255])
#loc593 = loc(fused[#loc257, #loc258])
#loc594 = loc(fused[#loc260, #loc254])
#loc595 = loc(fused[#loc262, #loc261])
#loc596 = loc(fused[#loc264, #loc263])
#loc597 = loc(fused[#loc268, #loc269])
#loc598 = loc(fused[#loc270, #loc271])
#loc599 = loc(fused[#loc272, #loc273])
#loc600 = loc(fused[#loc275, #loc274])
#loc601 = loc(fused[#loc276, #loc277])
#loc602 = loc(fused[#loc280, #loc281])
#loc603 = loc(fused[#loc282, #loc283])
#loc604 = loc(fused[#loc286, #loc287])
#loc605 = loc(fused[#loc288, #loc289])
#loc606 = loc(fused[#loc288, #loc290])
#loc607 = loc(fused[#loc291, #loc287])
#loc608 = loc(fused[#loc292, #loc293])
#loc609 = loc(fused[#loc297, #loc298])
#loc610 = loc(fused[#loc300, #loc301])
#loc611 = loc(fused[#loc302, #loc303, #loc304, #loc293])
#loc612 = loc(fused[#loc307, #loc308])
#loc613 = loc(fused[#loc309, #loc310])
#loc614 = loc(fused[#loc311, #loc312])
#loc615 = loc(fused[#loc315, #loc316])
#loc616 = loc(fused[#loc314, #loc318])
#loc617 = loc(fused[#loc319, #loc310])
#loc618 = loc(fused[#loc322, #loc323])
#loc619 = loc(fused[#loc321, #loc320])
#loc620 = loc(fused[#loc328, #loc327])
#loc621 = loc(fused[#loc336, #loc337])
#loc622 = loc(fused[#loc340, #loc341])
#loc623 = loc(fused[#loc342, #loc343])
#loc624 = loc(fused[#loc342, #loc344])
#loc625 = loc(fused[#loc342, #loc345])
#loc626 = loc(fused[#loc346, #loc347])
#loc627 = loc(fused[#loc348, #loc351])
#loc628 = loc(fused[#loc352, #loc347])
#loc629 = loc(fused[#loc353, #loc354])
#loc630 = loc(fused[#loc355, #loc356])
#loc631 = loc(fused[#loc357, #loc354])
#loc632 = loc(fused[#loc359, #loc358])
#loc633 = loc(fused[#loc360, #loc361])
#loc634 = loc(fused[#loc363, #loc362])
#loc635 = loc(fused[#loc364, #loc365])
#loc636 = loc(fused[#loc367, #loc361])
#loc637 = loc(fused[#loc369, #loc368])
#loc638 = loc(fused[#loc371, #loc370])
#loc639 = loc(fused[#loc379, #loc380])
#loc640 = loc(fused[#loc382, #loc383])
#loc641 = loc(fused[#loc384, #loc385])
#loc642 = loc(fused[#loc386, #loc387])
#loc643 = loc(fused[#loc389, #loc388])
#loc644 = loc(fused[#loc390, #loc391])
#loc645 = loc(fused[#loc401, #loc402])
#loc646 = loc(fused[#loc405, #loc406])
#loc647 = loc(fused[#loc407, #loc408])
#loc648 = loc(fused[#loc407, #loc409])
#loc649 = loc(fused[#loc407, #loc410])
#loc650 = loc(fused[#loc411, #loc412])
#loc651 = loc(fused[#loc413, #loc416])
#loc652 = loc(fused[#loc417, #loc412])
#loc653 = loc(fused[#loc419, #loc418])
#loc654 = loc(fused[#loc420, #loc421])
#loc655 = loc(fused[#loc423, #loc422])
#loc656 = loc(fused[#loc424, #loc425])
#loc657 = loc(fused[#loc427, #loc421])
#loc658 = loc(fused[#loc429, #loc428])
#loc659 = loc(fused[#loc431, #loc430])
#loc660 = loc(fused[#loc439, #loc440])
#loc661 = loc(fused[#loc441, #loc442])
#loc662 = loc(fused[#loc443, #loc444])
#loc663 = loc(fused[#loc446, #loc445])
#loc664 = loc(fused[#loc447, #loc448])
#loc665 = loc(fused[#loc459, #loc460])
#loc666 = loc(fused[#loc463, #loc464])
#loc667 = loc(fused[#loc465, #loc466])
#loc668 = loc(fused[#loc465, #loc467])
#loc669 = loc(fused[#loc465, #loc468])
#loc670 = loc(fused[#loc469, #loc470])
#loc671 = loc(fused[#loc471, #loc474])
#loc672 = loc(fused[#loc475, #loc470])
#loc673 = loc(fused[#loc477, #loc476])
#loc674 = loc(fused[#loc478, #loc479])
#loc675 = loc(fused[#loc481, #loc480])
#loc676 = loc(fused[#loc482, #loc483])
#loc677 = loc(fused[#loc485, #loc479])
#loc678 = loc(fused[#loc487, #loc486])
#loc679 = loc(fused[#loc489, #loc488])
