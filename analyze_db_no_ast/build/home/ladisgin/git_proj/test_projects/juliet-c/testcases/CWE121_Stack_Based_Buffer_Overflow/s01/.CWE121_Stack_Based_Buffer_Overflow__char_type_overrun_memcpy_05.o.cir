!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__charVoid = !cir.struct<struct "_charVoid" {!cir.array<!s8i x 16>, !cir.ptr<!void>, !cir.ptr<!void>}>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc130)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"0123456789abcdef0123456789abcde\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc3)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc131)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc130)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc10)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc10)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc136)
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc3)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc3)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc3)
          %7 = cir.get_member %3[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc16)
          cir.store %6, %7 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc137)
          %8 = cir.get_member %3[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc16)
          %9 = cir.load %8 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc18)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc138)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc20)
          %11 = cir.get_member %3[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc21)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc139)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc139)
          %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc24)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc24)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc24)
          %17 = cir.const #cir.int<32> : !u64i loc(#loc140)
          cir.libc.memcpy %17 bytes from %16 to %13 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc141)
          %18 = cir.const #cir.int<0> : !s32i loc(#loc29)
          %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc29)
          %20 = cir.get_member %3[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc21)
          %21 = cir.const #cir.int<16> : !u64i loc(#loc142)
          %22 = cir.const #cir.int<1> : !u64i loc(#loc143)
          %23 = cir.binop(div, %21, %22) : !u64i loc(#loc144)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc34)
          %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc34)
          %26 = cir.binop(sub, %23, %25) : !u64i loc(#loc145)
          %27 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc36)
          %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !u64i), !cir.ptr<!s8i> loc(#loc37)
          cir.store %19, %28 : !s8i, !cir.ptr<!s8i> loc(#loc146)
          %29 = cir.get_member %3[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc21)
          %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc147)
          cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc40)
          %31 = cir.get_member %3[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc16)
          %32 = cir.load %31 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc41)
          %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc148)
          cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc43)
        } loc(#loc135)
      } loc(#loc134)
    } loc(#loc133)
    cir.return loc(#loc7)
  } loc(#loc132)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc150)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc151)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc48)
    cir.return loc(#loc45)
  } loc(#loc149)
  cir.global "private"  internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc152)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc52)
  cir.func no_proto internal private  @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc152)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc57)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc57)
      cir.if %2 {
        %3 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc52)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc52)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc61)
      } else {
        cir.scope {
          %3 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc157)
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc66)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc66)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc66)
          %7 = cir.get_member %3[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc16)
          cir.store %6, %7 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc158)
          %8 = cir.get_member %3[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc16)
          %9 = cir.load %8 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc68)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc159)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc70)
          %11 = cir.get_member %3[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc21)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc160)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc160)
          %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc73)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc73)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc73)
          %17 = cir.const #cir.int<16> : !u64i loc(#loc161)
          cir.libc.memcpy %17 bytes from %16 to %13 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc162)
          %18 = cir.const #cir.int<0> : !s32i loc(#loc78)
          %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc78)
          %20 = cir.get_member %3[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc21)
          %21 = cir.const #cir.int<16> : !u64i loc(#loc163)
          %22 = cir.const #cir.int<1> : !u64i loc(#loc164)
          %23 = cir.binop(div, %21, %22) : !u64i loc(#loc165)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc83)
          %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc83)
          %26 = cir.binop(sub, %23, %25) : !u64i loc(#loc166)
          %27 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc85)
          %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !u64i), !cir.ptr<!s8i> loc(#loc86)
          cir.store %19, %28 : !s8i, !cir.ptr<!s8i> loc(#loc167)
          %29 = cir.get_member %3[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc21)
          %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc168)
          cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc89)
          %31 = cir.get_member %3[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc16)
          %32 = cir.load %31 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc90)
          %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc169)
          cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc92)
        } loc(#loc156)
      } loc(#loc155)
    } loc(#loc154)
    cir.return loc(#loc54)
  } loc(#loc153)
  cir.func no_proto internal private  @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc130)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc97)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc97)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !ty__charVoid, !cir.ptr<!ty__charVoid>, ["structCharVoid"] {alignment = 8 : i64} loc(#loc174)
          %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc103)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc103)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc103)
          %7 = cir.get_member %3[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc16)
          cir.store %6, %7 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc175)
          %8 = cir.get_member %3[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc16)
          %9 = cir.load %8 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc105)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc176)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc107)
          %11 = cir.get_member %3[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc21)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc177)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc177)
          %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc110)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc110)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc110)
          %17 = cir.const #cir.int<16> : !u64i loc(#loc178)
          cir.libc.memcpy %17 bytes from %16 to %13 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc179)
          %18 = cir.const #cir.int<0> : !s32i loc(#loc115)
          %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc115)
          %20 = cir.get_member %3[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc21)
          %21 = cir.const #cir.int<16> : !u64i loc(#loc180)
          %22 = cir.const #cir.int<1> : !u64i loc(#loc181)
          %23 = cir.binop(div, %21, %22) : !u64i loc(#loc182)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc120)
          %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc120)
          %26 = cir.binop(sub, %23, %25) : !u64i loc(#loc183)
          %27 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc122)
          %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !u64i), !cir.ptr<!s8i> loc(#loc123)
          cir.store %19, %28 : !s8i, !cir.ptr<!s8i> loc(#loc184)
          %29 = cir.get_member %3[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc21)
          %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc185)
          cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc126)
          %31 = cir.get_member %3[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc16)
          %32 = cir.load %31 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc127)
          %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc186)
          cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc129)
        } loc(#loc173)
      } loc(#loc172)
    } loc(#loc171)
    cir.return loc(#loc94)
  } loc(#loc170)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":35:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":35:25)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":46:49)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":40:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":56:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":42:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":55:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":42:8)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":43:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":44:9)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":54:9)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":45:13)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":45:22)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":28:12)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":46:13)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":48:46)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":48:31)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":48:13)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":27:10)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":50:20)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":50:35)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":50:46)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":50:55)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":50:76)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":50:13)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":50:77)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":51:91)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":51:39)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":51:70)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":51:72)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":51:83)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":51:86)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":51:38)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":51:13)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":51:28)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":52:31)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":52:46)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":52:13)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":53:46)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":53:31)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":53:13)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":105:1)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":109:1)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":107:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":107:11)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":108:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":108:11)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":36:1)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":36:26)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":68:19)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":63:1)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":84:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":65:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":83:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":65:8)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":66:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":69:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":71:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":68:9)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":72:9)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":82:9)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":73:13)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":73:22)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":74:49)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":74:13)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":76:46)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":76:31)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":76:13)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":78:20)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":78:35)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":78:46)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":78:55)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":78:86)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":78:13)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":78:87)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":79:91)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":79:39)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":79:70)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":79:72)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":79:83)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":79:86)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":79:38)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":79:13)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":79:28)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":80:31)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":80:46)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":80:13)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":81:46)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":81:31)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":81:13)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":87:1)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":103:1)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":89:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":102:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":89:8)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":90:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":91:9)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":101:9)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":92:13)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":92:22)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":93:49)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":93:13)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":95:46)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":95:31)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":95:13)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":97:20)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":97:35)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":97:46)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":97:55)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":97:86)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":97:13)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":97:87)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":98:91)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":98:39)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":98:70)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":98:72)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":98:83)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":98:86)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":98:38)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":98:13)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":98:28)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":99:31)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":99:46)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":99:13)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":100:46)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":100:31)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__char_type_overrun_memcpy_05.c":100:13)
#loc130 = loc(fused[#loc1, #loc2])
#loc131 = loc(fused[#loc4, #loc5])
#loc132 = loc(fused[#loc6, #loc7])
#loc133 = loc(fused[#loc8, #loc9])
#loc134 = loc(fused[#loc11, #loc9])
#loc135 = loc(fused[#loc12, #loc13])
#loc136 = loc(fused[#loc14, #loc15])
#loc137 = loc(fused[#loc17, #loc3])
#loc138 = loc(fused[#loc19, #loc18])
#loc139 = loc(fused[#loc22, #loc23])
#loc140 = loc(fused[#loc25, #loc26])
#loc141 = loc(fused[#loc27, #loc28])
#loc142 = loc(fused[#loc30, #loc31])
#loc143 = loc(fused[#loc32, #loc33])
#loc144 = loc(fused[#loc30, #loc33])
#loc145 = loc(fused[#loc35, #loc34])
#loc146 = loc(fused[#loc36, #loc29])
#loc147 = loc(fused[#loc38, #loc39])
#loc148 = loc(fused[#loc42, #loc41])
#loc149 = loc(fused[#loc44, #loc45])
#loc150 = loc(fused[#loc46, #loc47])
#loc151 = loc(fused[#loc48, #loc49])
#loc152 = loc(fused[#loc50, #loc51])
#loc153 = loc(fused[#loc53, #loc54])
#loc154 = loc(fused[#loc55, #loc56])
#loc155 = loc(fused[#loc58, #loc59, #loc60, #loc56])
#loc156 = loc(fused[#loc62, #loc63])
#loc157 = loc(fused[#loc64, #loc65])
#loc158 = loc(fused[#loc67, #loc66])
#loc159 = loc(fused[#loc69, #loc68])
#loc160 = loc(fused[#loc71, #loc72])
#loc161 = loc(fused[#loc74, #loc75])
#loc162 = loc(fused[#loc76, #loc77])
#loc163 = loc(fused[#loc79, #loc80])
#loc164 = loc(fused[#loc81, #loc82])
#loc165 = loc(fused[#loc79, #loc82])
#loc166 = loc(fused[#loc84, #loc83])
#loc167 = loc(fused[#loc85, #loc78])
#loc168 = loc(fused[#loc87, #loc88])
#loc169 = loc(fused[#loc91, #loc90])
#loc170 = loc(fused[#loc93, #loc94])
#loc171 = loc(fused[#loc95, #loc96])
#loc172 = loc(fused[#loc98, #loc96])
#loc173 = loc(fused[#loc99, #loc100])
#loc174 = loc(fused[#loc101, #loc102])
#loc175 = loc(fused[#loc104, #loc103])
#loc176 = loc(fused[#loc106, #loc105])
#loc177 = loc(fused[#loc108, #loc109])
#loc178 = loc(fused[#loc111, #loc112])
#loc179 = loc(fused[#loc113, #loc114])
#loc180 = loc(fused[#loc116, #loc117])
#loc181 = loc(fused[#loc118, #loc119])
#loc182 = loc(fused[#loc116, #loc119])
#loc183 = loc(fused[#loc121, #loc120])
#loc184 = loc(fused[#loc122, #loc115])
#loc185 = loc(fused[#loc124, #loc125])
#loc186 = loc(fused[#loc128, #loc127])
