!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc3 = loc("../../../testcasesupport/std_testcase.h":96:16)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc168)
  cir.func linkonce_odr  @_ZN14_twoIntsStructC2Ev(%arg0: !cir.ptr<!ty__twoIntsStruct> loc("../../../testcasesupport/std_testcase.h":96:16)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc3)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc3)
    cir.return loc(#loc3)
  } loc(#loc3)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc169)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc6)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc170)
  cir.func  @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_153badEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc172)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc173)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc17)
      cir.switch (%2 : !s32i) [
      case (equal, 6) {
        %3 = cir.const #cir.int<8> : !u64i loc(#loc175)
        %4 = cir.call @_Znwm(%3) : (!u64i) -> !cir.ptr<!void> loc(#loc20)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc175)
        cir.call @_ZN14_twoIntsStructC2Ev(%5) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr1) loc(#loc19)
        cir.store %5, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc176)
        cir.break loc(#loc22)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc6)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc6)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc23)
        cir.break loc(#loc24)
      }
      ] loc(#loc15)
    } loc(#loc174)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc27)
      cir.switch (%2 : !s32i) [
      case (equal, 7) {
        %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc28)
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc29)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc29)
        cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc28)
        cir.break loc(#loc30)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc31)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc31)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc32)
        cir.break loc(#loc33)
      }
      ] loc(#loc25)
    } loc(#loc177)
    cir.return loc(#loc10)
  } loc(#loc171)
  cir.func private  @_ZdlPvm(!cir.ptr<!void>, !u64i) extra(#fn_attr1) loc(#loc178)
  cir.func internal private  @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15L8goodB2G1Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc180)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc40)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc181)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc44)
      cir.switch (%2 : !s32i) [
      case (equal, 6) {
        %3 = cir.const #cir.int<8> : !u64i loc(#loc183)
        %4 = cir.call @_Znwm(%3) : (!u64i) -> !cir.ptr<!void> loc(#loc47)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc183)
        cir.call @_ZN14_twoIntsStructC2Ev(%5) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr1) loc(#loc46)
        cir.store %5, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc184)
        cir.break loc(#loc49)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc50)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc50)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc51)
        cir.break loc(#loc52)
      }
      ] loc(#loc42)
    } loc(#loc182)
    cir.scope {
      %2 = cir.const #cir.int<8> : !s32i loc(#loc55)
      cir.switch (%2 : !s32i) [
      case (equal, 7) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc56)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc56)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc57)
        cir.break loc(#loc58)
      },
      case (default) {
        %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc59)
        %4 = cir.cast(bitcast, %3 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc59)
        %5 = cir.const #cir.int<8> : !u64i loc(#loc47)
        cir.call @_ZdlPvm(%4, %5) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr1) loc(#loc47)
        cir.break loc(#loc60)
      }
      ] loc(#loc53)
    } loc(#loc185)
    cir.return loc(#loc37)
  } loc(#loc179)
  cir.func internal private  @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15L8goodB2G2Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc187)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc65)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc188)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc69)
      cir.switch (%2 : !s32i) [
      case (equal, 6) {
        %3 = cir.const #cir.int<8> : !u64i loc(#loc190)
        %4 = cir.call @_Znwm(%3) : (!u64i) -> !cir.ptr<!void> loc(#loc72)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc190)
        cir.call @_ZN14_twoIntsStructC2Ev(%5) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr1) loc(#loc71)
        cir.store %5, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc191)
        cir.break loc(#loc74)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc75)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc75)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc76)
        cir.break loc(#loc77)
      }
      ] loc(#loc67)
    } loc(#loc189)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc80)
      cir.switch (%2 : !s32i) [
      case (equal, 7) {
        %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc81)
        %4 = cir.cast(bitcast, %3 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc81)
        %5 = cir.const #cir.int<8> : !u64i loc(#loc72)
        cir.call @_ZdlPvm(%4, %5) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr1) loc(#loc72)
        cir.break loc(#loc82)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc83)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc83)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc84)
        cir.break loc(#loc85)
      }
      ] loc(#loc78)
    } loc(#loc192)
    cir.return loc(#loc62)
  } loc(#loc186)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc193)
  cir.func private  @exit(!s32i) extra(#fn_attr1) loc(#loc194)
  cir.func internal private  @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15L8goodG2B1Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc196)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc94)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc197)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc98)
      cir.switch (%2 : !s32i) [
      case (equal, 6) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc99)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc99)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc100)
        cir.break loc(#loc101)
      },
      case (default) {
        %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc102)
        %4 = cir.const #cir.int<100> : !s32i loc(#loc103)
        %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc103)
        %6 = cir.const #cir.int<8> : !u64i loc(#loc199)
        %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc200)
        %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc102)
        %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc201)
        cir.store %9, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc202)
        cir.scope {
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc110)
          %11 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc111)
          %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc204)
          cir.if %12 {
            %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc113)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc114)
            %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc115)
            cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr1) loc(#loc113)
          } loc(#loc205)
        } loc(#loc203)
        cir.break loc(#loc116)
      }
      ] loc(#loc96)
    } loc(#loc198)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc119)
      cir.switch (%2 : !s32i) [
      case (equal, 7) {
        %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc120)
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc121)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc121)
        cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc120)
        cir.break loc(#loc122)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc123)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc123)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc124)
        cir.break loc(#loc125)
      }
      ] loc(#loc117)
    } loc(#loc206)
    cir.return loc(#loc91)
  } loc(#loc195)
  cir.func internal private  @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15L8goodG2B2Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc208)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc130)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc209)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc134)
      cir.switch (%2 : !s32i) [
      case (equal, 6) {
        %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc135)
        %4 = cir.const #cir.int<100> : !s32i loc(#loc136)
        %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc136)
        %6 = cir.const #cir.int<8> : !u64i loc(#loc211)
        %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc212)
        %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc135)
        %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc213)
        cir.store %9, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc214)
        cir.scope {
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc143)
          %11 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc144)
          %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc216)
          cir.if %12 {
            %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc146)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc147)
            %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc148)
            cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr1) loc(#loc146)
          } loc(#loc217)
        } loc(#loc215)
        cir.break loc(#loc149)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc150)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc150)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc151)
        cir.break loc(#loc152)
      }
      ] loc(#loc132)
    } loc(#loc210)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc155)
      cir.switch (%2 : !s32i) [
      case (equal, 7) {
        %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc156)
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc157)
        %5 = cir.cast(bitcast, %4 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc157)
        cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc156)
        cir.break loc(#loc158)
      },
      case (default) {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc159)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc159)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc160)
        cir.break loc(#loc161)
      }
      ] loc(#loc153)
    } loc(#loc218)
    cir.return loc(#loc127)
  } loc(#loc207)
  cir.func  @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_154goodEv() extra(#fn_attr2) {
    cir.call @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15L8goodB2G1Ev() : () -> () loc(#loc164)
    cir.call @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15L8goodB2G2Ev() : () -> () loc(#loc165)
    cir.call @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15L8goodG2B1Ev() : () -> () loc(#loc166)
    cir.call @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15L8goodG2B2Ev() : () -> () loc(#loc167)
    cir.return loc(#loc163)
  } loc(#loc219)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc2 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":37:19)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":24:1)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":52:1)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":26:5)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":26:21)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":28:12)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":28:5)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":29:5)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":39:5)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":29:12)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":33:16)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":33:20)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":24:6)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":33:9)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":34:9)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":37:9)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":38:9)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":40:5)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":51:5)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":40:12)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":45:9)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":45:14)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":46:9)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":49:19)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":49:9)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":50:9)
#loc34 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":140:1)
#loc35 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":141:41)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":59:1)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":86:1)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":61:5)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":61:21)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":63:12)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":63:5)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":64:5)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":74:5)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":64:12)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":68:16)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":68:20)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":59:13)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":68:9)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":69:9)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":72:19)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":72:9)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":73:9)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":75:5)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":85:5)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":75:12)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":79:19)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":79:9)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":80:9)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":83:16)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":84:9)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":89:1)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":116:1)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":91:5)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":91:21)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":93:12)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":93:5)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":94:5)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":104:5)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":94:12)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":98:16)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":98:20)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":89:13)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":98:9)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":99:9)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":102:19)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":102:9)
#loc77 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":103:9)
#loc78 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":105:5)
#loc79 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":115:5)
#loc80 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":105:12)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":109:16)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":110:9)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":113:19)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":113:9)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":114:9)
#loc86 = loc("/usr/include/stdlib.h":672:1)
#loc87 = loc("/usr/include/stdlib.h":672:45)
#loc88 = loc("/usr/include/stdlib.h":756:1)
#loc89 = loc("/usr/include/stdlib.h":756:70)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":119:1)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":148:1)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":121:5)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":121:21)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":123:12)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":123:5)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":124:5)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":135:5)
#loc98 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":124:12)
#loc99 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":128:19)
#loc100 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":128:9)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":129:9)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":132:33)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":132:40)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":132:44)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":132:64)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":132:65)
#loc107 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":132:9)
#loc108 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":133:9)
#loc109 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":133:37)
#loc110 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":133:13)
#loc111 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":133:21)
#loc112 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":133:27)
#loc113 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":133:28)
#loc114 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":133:34)
#loc115 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":133:33)
#loc116 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":134:9)
#loc117 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":136:5)
#loc118 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":147:5)
#loc119 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":136:12)
#loc120 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":141:9)
#loc121 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":141:14)
#loc122 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":142:9)
#loc123 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":145:19)
#loc124 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":145:9)
#loc125 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":146:9)
#loc126 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":151:1)
#loc127 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":180:1)
#loc128 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":153:5)
#loc129 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":153:21)
#loc130 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":155:12)
#loc131 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":155:5)
#loc132 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":156:5)
#loc133 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":167:5)
#loc134 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":156:12)
#loc135 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":160:33)
#loc136 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":160:40)
#loc137 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":160:44)
#loc138 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":160:64)
#loc139 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":160:65)
#loc140 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":160:9)
#loc141 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":161:9)
#loc142 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":161:37)
#loc143 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":161:13)
#loc144 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":161:21)
#loc145 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":161:27)
#loc146 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":161:28)
#loc147 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":161:34)
#loc148 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":161:33)
#loc149 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":162:9)
#loc150 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":165:19)
#loc151 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":165:9)
#loc152 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":166:9)
#loc153 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":168:5)
#loc154 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":179:5)
#loc155 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":168:12)
#loc156 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":173:9)
#loc157 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":173:14)
#loc158 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":174:9)
#loc159 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":177:19)
#loc160 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":177:9)
#loc161 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":178:9)
#loc162 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":182:1)
#loc163 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":188:1)
#loc164 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":184:5)
#loc165 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":185:5)
#loc166 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":186:5)
#loc167 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_15.cpp":187:5)
#loc168 = loc(fused[#loc1, #loc2])
#loc169 = loc(fused[#loc4, #loc5])
#loc170 = loc(fused[#loc7, #loc8])
#loc171 = loc(fused[#loc9, #loc10])
#loc172 = loc(fused[#loc11, #loc12])
#loc173 = loc(fused[#loc14, #loc13])
#loc174 = loc(fused[#loc15, #loc16])
#loc175 = loc(fused[#loc18, #loc19])
#loc176 = loc(fused[#loc21, #loc19])
#loc177 = loc(fused[#loc25, #loc26])
#loc178 = loc(fused[#loc34, #loc35])
#loc179 = loc(fused[#loc36, #loc37])
#loc180 = loc(fused[#loc38, #loc39])
#loc181 = loc(fused[#loc41, #loc40])
#loc182 = loc(fused[#loc42, #loc43])
#loc183 = loc(fused[#loc45, #loc46])
#loc184 = loc(fused[#loc48, #loc46])
#loc185 = loc(fused[#loc53, #loc54])
#loc186 = loc(fused[#loc61, #loc62])
#loc187 = loc(fused[#loc63, #loc64])
#loc188 = loc(fused[#loc66, #loc65])
#loc189 = loc(fused[#loc67, #loc68])
#loc190 = loc(fused[#loc70, #loc71])
#loc191 = loc(fused[#loc73, #loc71])
#loc192 = loc(fused[#loc78, #loc79])
#loc193 = loc(fused[#loc86, #loc87])
#loc194 = loc(fused[#loc88, #loc89])
#loc195 = loc(fused[#loc90, #loc91])
#loc196 = loc(fused[#loc92, #loc93])
#loc197 = loc(fused[#loc95, #loc94])
#loc198 = loc(fused[#loc96, #loc97])
#loc199 = loc(fused[#loc104, #loc105])
#loc200 = loc(fused[#loc103, #loc105])
#loc201 = loc(fused[#loc102, #loc106])
#loc202 = loc(fused[#loc107, #loc106])
#loc203 = loc(fused[#loc108, #loc109])
#loc204 = loc(fused[#loc110, #loc111])
#loc205 = loc(fused[#loc112, #loc109])
#loc206 = loc(fused[#loc117, #loc118])
#loc207 = loc(fused[#loc126, #loc127])
#loc208 = loc(fused[#loc128, #loc129])
#loc209 = loc(fused[#loc131, #loc130])
#loc210 = loc(fused[#loc132, #loc133])
#loc211 = loc(fused[#loc137, #loc138])
#loc212 = loc(fused[#loc136, #loc138])
#loc213 = loc(fused[#loc135, #loc139])
#loc214 = loc(fused[#loc140, #loc139])
#loc215 = loc(fused[#loc141, #loc142])
#loc216 = loc(fused[#loc143, #loc144])
#loc217 = loc(fused[#loc145, #loc142])
#loc218 = loc(fused[#loc153, #loc154])
#loc219 = loc(fused[#loc162, #loc163])
