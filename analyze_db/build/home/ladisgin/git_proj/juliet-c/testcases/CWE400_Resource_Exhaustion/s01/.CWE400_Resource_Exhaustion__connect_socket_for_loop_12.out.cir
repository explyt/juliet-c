!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc186 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":357:10)
#loc187 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":357:14)
#loc188 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":357:20)
#loc189 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":357:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc573 = loc(fused[#loc186, #loc187])
#loc574 = loc(fused[#loc188, #loc189])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc498)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc499)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc500)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc501)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc502)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc503)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc504)
  cir.func private @close(!s32i) -> !s32i loc(#loc505)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc506)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc20)
  cir.func no_proto @CWE400_Resource_Exhaustion__connect_socket_for_loop_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc508)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc26)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc509)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc511)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc511)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc30)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc30)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc514)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc515)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc516)
          %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc517)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc42)
          %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc42)
          cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc516)
          cir.scope {
            cir.do {
              %13 = cir.const #cir.int<2> : !s32i loc(#loc47)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc48)
              %15 = cir.const #cir.int<6> : !s32i loc(#loc49)
              %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc50)
              cir.store %16, %9 : !s32i, !cir.ptr<!s32i> loc(#loc519)
              cir.scope {
                %55 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc55)
                %56 = cir.const #cir.int<1> : !s32i loc(#loc56)
                %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc56)
                %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc521)
                cir.if %58 {
                  cir.break loc(#loc58)
                } loc(#loc522)
              } loc(#loc520)
              %17 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc523)
              %18 = cir.const #cir.int<0> : !s32i loc(#loc61)
              %19 = cir.const #cir.int<16> : !u64i loc(#loc524)
              cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc525)
              %20 = cir.const #cir.int<2> : !s32i loc(#loc66)
              %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc66)
              %22 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
              cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc526)
              %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
              %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
              %25 = cir.call @inet_addr(%24) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc69)
              %26 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
              %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
              cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc527)
              %28 = cir.const #cir.int<27015> : !s32i loc(#loc74)
              %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc74)
              %30 = cir.call @htons(%29) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc75)
              %31 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
              cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc528)
              cir.scope {
                %55 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc81)
                %56 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc530)
                %57 = cir.const #cir.int<16> : !u64i loc(#loc531)
                %58 = cir.cast(integral, %57 : !u64i), !u32i loc(#loc531)
                %59 = cir.call @connect(%55, %56, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc86)
                %60 = cir.const #cir.int<1> : !s32i loc(#loc87)
                %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc87)
                %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc532)
                cir.if %62 {
                  cir.break loc(#loc89)
                } loc(#loc533)
              } loc(#loc529)
              %32 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc90)
              %33 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc91)
              %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc91)
              %35 = cir.const #cir.int<3> : !s32i loc(#loc92)
              %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc92)
              %37 = cir.const #cir.int<4> : !u64i loc(#loc92)
              %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc92)
              %39 = cir.const #cir.int<2> : !s32i loc(#loc92)
              %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc92)
              %41 = cir.binop(add, %38, %40) : !u64i loc(#loc92)
              %42 = cir.const #cir.int<1> : !s32i loc(#loc93)
              %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc93)
              %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc534)
              %45 = cir.const #cir.int<0> : !s32i loc(#loc94)
              %46 = cir.call @recv(%32, %34, %44, %45) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc95)
              %47 = cir.cast(integral, %46 : !s64i), !s32i loc(#loc95)
              cir.store %47, %7 : !s32i, !cir.ptr<!s32i> loc(#loc535)
              cir.scope {
                %55 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc100)
                %56 = cir.const #cir.int<1> : !s32i loc(#loc101)
                %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc101)
                %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc537)
                %59 = cir.ternary(%58, true {
                  %60 = cir.const #true loc(#loc102)
                  cir.yield %60 : !cir.bool loc(#loc102)
                }, false {
                  %60 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc103)
                  %61 = cir.const #cir.int<0> : !s32i loc(#loc104)
                  %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc538)
                  %63 = cir.ternary(%62, true {
                    %64 = cir.const #true loc(#loc102)
                    cir.yield %64 : !cir.bool loc(#loc102)
                  }, false {
                    %64 = cir.const #false loc(#loc102)
                    cir.yield %64 : !cir.bool loc(#loc102)
                  }) : (!cir.bool) -> !cir.bool loc(#loc102)
                  cir.yield %63 : !cir.bool loc(#loc102)
                }) : (!cir.bool) -> !cir.bool loc(#loc102)
                cir.if %59 {
                  cir.break loc(#loc106)
                } loc(#loc539)
              } loc(#loc536)
              %48 = cir.const #cir.int<0> : !s32i loc(#loc107)
              %49 = cir.cast(integral, %48 : !s32i), !s8i loc(#loc107)
              %50 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc108)
              %51 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc109)
              %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !s32i), !cir.ptr<!s8i> loc(#loc109)
              cir.store %49, %52 : !s8i, !cir.ptr<!s8i> loc(#loc540)
              %53 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc110)
              %54 = cir.call @atoi(%53) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc111)
              cir.store %54, %0 : !s32i, !cir.ptr<!s32i> loc(#loc541)
              cir.yield loc(#loc46)
            } while {
              %13 = cir.const #cir.int<0> : !s32i loc(#loc114)
              %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc114)
              cir.condition(%14) loc(#loc114)
            } loc(#loc518)
          } loc(#loc518)
          cir.scope {
            %13 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc117)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc118)
            %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc118)
            %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc543)
            cir.if %16 {
              %17 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc120)
              %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc121)
            } loc(#loc544)
          } loc(#loc542)
        } loc(#loc513)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc122)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc545)
      } loc(#loc512)
    } loc(#loc510)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc547)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc547)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc126)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc126)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc550)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc134)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc134)
          cir.store %9, %7 : !u64i, !cir.ptr<!u64i> loc(#loc550)
          cir.scope {
            %10 = cir.const #cir.int<0> : !s32i loc(#loc137)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc137)
            cir.store %11, %7 : !u64i, !cir.ptr<!u64i> loc(#loc552)
            cir.for : cond {
              %12 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc139)
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc140)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc140)
              %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc553)
              cir.condition(%15) loc(#loc141)
            } body {
              cir.scope {
                %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc20)
                %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc20)
                cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc143)
              } loc(#loc554)
              cir.yield loc(#loc136)
            } step {
              %12 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc144)
              %13 = cir.unary(inc, %12) : !u64i, !u64i loc(#loc145)
              cir.store %13, %7 : !u64i, !cir.ptr<!u64i> loc(#loc555)
              cir.yield loc(#loc551)
            } loc(#loc551)
          } loc(#loc551)
        } loc(#loc549)
      } else {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc557)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc149)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc149)
          cir.store %9, %7 : !u64i, !cir.ptr<!u64i> loc(#loc557)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc152)
            %11 = cir.const #cir.int<0> : !s32i loc(#loc153)
            %12 = cir.cmp(gt, %10, %11) : !s32i, !cir.bool loc(#loc559)
            %13 = cir.ternary(%12, true {
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc155)
              %15 = cir.const #cir.int<20> : !s32i loc(#loc156)
              %16 = cir.cmp(le, %14, %15) : !s32i, !cir.bool loc(#loc560)
              %17 = cir.ternary(%16, true {
                %18 = cir.const #true loc(#loc154)
                cir.yield %18 : !cir.bool loc(#loc154)
              }, false {
                %18 = cir.const #false loc(#loc154)
                cir.yield %18 : !cir.bool loc(#loc154)
              }) : (!cir.bool) -> !cir.bool loc(#loc154)
              cir.yield %17 : !cir.bool loc(#loc154)
            }, false {
              %14 = cir.const #false loc(#loc154)
              cir.yield %14 : !cir.bool loc(#loc154)
            }) : (!cir.bool) -> !cir.bool loc(#loc154)
            cir.if %13 {
              cir.scope {
                %14 = cir.const #cir.int<0> : !s32i loc(#loc160)
                %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc160)
                cir.store %15, %7 : !u64i, !cir.ptr<!u64i> loc(#loc563)
                cir.for : cond {
                  %16 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc162)
                  %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc163)
                  %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc163)
                  %19 = cir.cmp(lt, %16, %18) : !u64i, !cir.bool loc(#loc564)
                  cir.condition(%19) loc(#loc164)
                } body {
                  cir.scope {
                    %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc166)
                    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc166)
                    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc167)
                  } loc(#loc565)
                  cir.yield loc(#loc159)
                } step {
                  %16 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc168)
                  %17 = cir.unary(inc, %16) : !u64i, !u64i loc(#loc169)
                  cir.store %17, %7 : !u64i, !cir.ptr<!u64i> loc(#loc566)
                  cir.yield loc(#loc562)
                } loc(#loc562)
              } loc(#loc562)
            } loc(#loc561)
          } loc(#loc558)
        } loc(#loc556)
      } loc(#loc548)
    } loc(#loc546)
    cir.return loc(#loc22)
  } loc(#loc507)
  cir.func no_proto @CWE400_Resource_Exhaustion__connect_socket_for_loop_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc568)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc172)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc569)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc174)
    cir.return loc(#loc171)
  } loc(#loc567)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc570)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc571)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc180)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc181)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc182)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc183)
  cir.func @main(%arg0: !s32i loc(fused[#loc186, #loc187]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc188, #loc189])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc573)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc574)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc185)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc190)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc190)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc191)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc192)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc192)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc193)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc180)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc180)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc194)
    %8 = cir.get_global @CWE400_Resource_Exhaustion__connect_socket_for_loop_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc575)
    cir.call @CWE400_Resource_Exhaustion__connect_socket_for_loop_12_good() : () -> () loc(#loc195)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc181)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc181)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc197)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc182)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc182)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc198)
    %13 = cir.get_global @CWE400_Resource_Exhaustion__connect_socket_for_loop_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc576)
    cir.call @CWE400_Resource_Exhaustion__connect_socket_for_loop_12_bad() : () -> () loc(#loc199)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc183)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc183)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc201)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc202)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc577)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc577)
    cir.return %17 : !s32i loc(#loc577)
  } loc(#loc572)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc579)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc208)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc209)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc580)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc582)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc582)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc213)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc213)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc585)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc586)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc587)
          %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc588)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc225)
          %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc225)
          cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc587)
          cir.scope {
            cir.do {
              %13 = cir.const #cir.int<2> : !s32i loc(#loc230)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc231)
              %15 = cir.const #cir.int<6> : !s32i loc(#loc232)
              %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc233)
              cir.store %16, %9 : !s32i, !cir.ptr<!s32i> loc(#loc590)
              cir.scope {
                %55 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc238)
                %56 = cir.const #cir.int<1> : !s32i loc(#loc239)
                %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc239)
                %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc592)
                cir.if %58 {
                  cir.break loc(#loc241)
                } loc(#loc593)
              } loc(#loc591)
              %17 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc594)
              %18 = cir.const #cir.int<0> : !s32i loc(#loc244)
              %19 = cir.const #cir.int<16> : !u64i loc(#loc595)
              cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc596)
              %20 = cir.const #cir.int<2> : !s32i loc(#loc249)
              %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc249)
              %22 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
              cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc597)
              %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc251)
              %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc251)
              %25 = cir.call @inet_addr(%24) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc252)
              %26 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
              %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
              cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc598)
              %28 = cir.const #cir.int<27015> : !s32i loc(#loc255)
              %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc255)
              %30 = cir.call @htons(%29) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc256)
              %31 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
              cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc599)
              cir.scope {
                %55 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc261)
                %56 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc601)
                %57 = cir.const #cir.int<16> : !u64i loc(#loc602)
                %58 = cir.cast(integral, %57 : !u64i), !u32i loc(#loc602)
                %59 = cir.call @connect(%55, %56, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc266)
                %60 = cir.const #cir.int<1> : !s32i loc(#loc267)
                %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc267)
                %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc603)
                cir.if %62 {
                  cir.break loc(#loc269)
                } loc(#loc604)
              } loc(#loc600)
              %32 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc270)
              %33 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc271)
              %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc271)
              %35 = cir.const #cir.int<3> : !s32i loc(#loc272)
              %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc272)
              %37 = cir.const #cir.int<4> : !u64i loc(#loc272)
              %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc272)
              %39 = cir.const #cir.int<2> : !s32i loc(#loc272)
              %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc272)
              %41 = cir.binop(add, %38, %40) : !u64i loc(#loc272)
              %42 = cir.const #cir.int<1> : !s32i loc(#loc273)
              %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc273)
              %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc605)
              %45 = cir.const #cir.int<0> : !s32i loc(#loc274)
              %46 = cir.call @recv(%32, %34, %44, %45) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc275)
              %47 = cir.cast(integral, %46 : !s64i), !s32i loc(#loc275)
              cir.store %47, %7 : !s32i, !cir.ptr<!s32i> loc(#loc606)
              cir.scope {
                %55 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc280)
                %56 = cir.const #cir.int<1> : !s32i loc(#loc281)
                %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc281)
                %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc608)
                %59 = cir.ternary(%58, true {
                  %60 = cir.const #true loc(#loc282)
                  cir.yield %60 : !cir.bool loc(#loc282)
                }, false {
                  %60 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc283)
                  %61 = cir.const #cir.int<0> : !s32i loc(#loc284)
                  %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc609)
                  %63 = cir.ternary(%62, true {
                    %64 = cir.const #true loc(#loc282)
                    cir.yield %64 : !cir.bool loc(#loc282)
                  }, false {
                    %64 = cir.const #false loc(#loc282)
                    cir.yield %64 : !cir.bool loc(#loc282)
                  }) : (!cir.bool) -> !cir.bool loc(#loc282)
                  cir.yield %63 : !cir.bool loc(#loc282)
                }) : (!cir.bool) -> !cir.bool loc(#loc282)
                cir.if %59 {
                  cir.break loc(#loc286)
                } loc(#loc610)
              } loc(#loc607)
              %48 = cir.const #cir.int<0> : !s32i loc(#loc287)
              %49 = cir.cast(integral, %48 : !s32i), !s8i loc(#loc287)
              %50 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc288)
              %51 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc289)
              %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !s32i), !cir.ptr<!s8i> loc(#loc289)
              cir.store %49, %52 : !s8i, !cir.ptr<!s8i> loc(#loc611)
              %53 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc290)
              %54 = cir.call @atoi(%53) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc291)
              cir.store %54, %0 : !s32i, !cir.ptr<!s32i> loc(#loc612)
              cir.yield loc(#loc229)
            } while {
              %13 = cir.const #cir.int<0> : !s32i loc(#loc294)
              %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc294)
              cir.condition(%14) loc(#loc294)
            } loc(#loc589)
          } loc(#loc589)
          cir.scope {
            %13 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc297)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc298)
            %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc298)
            %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc614)
            cir.if %16 {
              %17 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc300)
              %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc301)
            } loc(#loc615)
          } loc(#loc613)
        } loc(#loc584)
      } else {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc617)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc618)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc619)
          %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc620)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc309)
          %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc309)
          cir.store %12, %9 : !s32i, !cir.ptr<!s32i> loc(#loc619)
          cir.scope {
            cir.do {
              %13 = cir.const #cir.int<2> : !s32i loc(#loc314)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc315)
              %15 = cir.const #cir.int<6> : !s32i loc(#loc316)
              %16 = cir.call @socket(%13, %14, %15) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc317)
              cir.store %16, %9 : !s32i, !cir.ptr<!s32i> loc(#loc622)
              cir.scope {
                %55 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc322)
                %56 = cir.const #cir.int<1> : !s32i loc(#loc323)
                %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc323)
                %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc624)
                cir.if %58 {
                  cir.break loc(#loc325)
                } loc(#loc625)
              } loc(#loc623)
              %17 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc626)
              %18 = cir.const #cir.int<0> : !s32i loc(#loc328)
              %19 = cir.const #cir.int<16> : !u64i loc(#loc627)
              cir.libc.memset %19 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc628)
              %20 = cir.const #cir.int<2> : !s32i loc(#loc333)
              %21 = cir.cast(integral, %20 : !s32i), !u16i loc(#loc333)
              %22 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
              cir.store %21, %22 : !u16i, !cir.ptr<!u16i> loc(#loc629)
              %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc335)
              %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc335)
              %25 = cir.call @inet_addr(%24) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc336)
              %26 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
              %27 = cir.get_member %26[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
              cir.store %25, %27 : !u32i, !cir.ptr<!u32i> loc(#loc630)
              %28 = cir.const #cir.int<27015> : !s32i loc(#loc339)
              %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc339)
              %30 = cir.call @htons(%29) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc340)
              %31 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
              cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc631)
              cir.scope {
                %55 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc345)
                %56 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc633)
                %57 = cir.const #cir.int<16> : !u64i loc(#loc634)
                %58 = cir.cast(integral, %57 : !u64i), !u32i loc(#loc634)
                %59 = cir.call @connect(%55, %56, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc350)
                %60 = cir.const #cir.int<1> : !s32i loc(#loc351)
                %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc351)
                %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc635)
                cir.if %62 {
                  cir.break loc(#loc353)
                } loc(#loc636)
              } loc(#loc632)
              %32 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc354)
              %33 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc355)
              %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc355)
              %35 = cir.const #cir.int<3> : !s32i loc(#loc356)
              %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc356)
              %37 = cir.const #cir.int<4> : !u64i loc(#loc356)
              %38 = cir.binop(mul, %36, %37) : !u64i loc(#loc356)
              %39 = cir.const #cir.int<2> : !s32i loc(#loc356)
              %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc356)
              %41 = cir.binop(add, %38, %40) : !u64i loc(#loc356)
              %42 = cir.const #cir.int<1> : !s32i loc(#loc357)
              %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc357)
              %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc637)
              %45 = cir.const #cir.int<0> : !s32i loc(#loc358)
              %46 = cir.call @recv(%32, %34, %44, %45) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc359)
              %47 = cir.cast(integral, %46 : !s64i), !s32i loc(#loc359)
              cir.store %47, %7 : !s32i, !cir.ptr<!s32i> loc(#loc638)
              cir.scope {
                %55 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc364)
                %56 = cir.const #cir.int<1> : !s32i loc(#loc365)
                %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc365)
                %58 = cir.cmp(eq, %55, %57) : !s32i, !cir.bool loc(#loc640)
                %59 = cir.ternary(%58, true {
                  %60 = cir.const #true loc(#loc366)
                  cir.yield %60 : !cir.bool loc(#loc366)
                }, false {
                  %60 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc367)
                  %61 = cir.const #cir.int<0> : !s32i loc(#loc368)
                  %62 = cir.cmp(eq, %60, %61) : !s32i, !cir.bool loc(#loc641)
                  %63 = cir.ternary(%62, true {
                    %64 = cir.const #true loc(#loc366)
                    cir.yield %64 : !cir.bool loc(#loc366)
                  }, false {
                    %64 = cir.const #false loc(#loc366)
                    cir.yield %64 : !cir.bool loc(#loc366)
                  }) : (!cir.bool) -> !cir.bool loc(#loc366)
                  cir.yield %63 : !cir.bool loc(#loc366)
                }) : (!cir.bool) -> !cir.bool loc(#loc366)
                cir.if %59 {
                  cir.break loc(#loc370)
                } loc(#loc642)
              } loc(#loc639)
              %48 = cir.const #cir.int<0> : !s32i loc(#loc371)
              %49 = cir.cast(integral, %48 : !s32i), !s8i loc(#loc371)
              %50 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc372)
              %51 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc373)
              %52 = cir.ptr_stride(%51 : !cir.ptr<!s8i>, %50 : !s32i), !cir.ptr<!s8i> loc(#loc373)
              cir.store %49, %52 : !s8i, !cir.ptr<!s8i> loc(#loc643)
              %53 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc374)
              %54 = cir.call @atoi(%53) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc375)
              cir.store %54, %0 : !s32i, !cir.ptr<!s32i> loc(#loc644)
              cir.yield loc(#loc313)
            } while {
              %13 = cir.const #cir.int<0> : !s32i loc(#loc378)
              %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc378)
              cir.condition(%14) loc(#loc378)
            } loc(#loc621)
          } loc(#loc621)
          cir.scope {
            %13 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc381)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc382)
            %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc382)
            %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc646)
            cir.if %16 {
              %17 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc384)
              %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc385)
            } loc(#loc647)
          } loc(#loc645)
        } loc(#loc616)
      } loc(#loc583)
    } loc(#loc581)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc649)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc649)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc388)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc388)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc652)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc396)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc396)
          cir.store %9, %7 : !u64i, !cir.ptr<!u64i> loc(#loc652)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc399)
            %11 = cir.const #cir.int<0> : !s32i loc(#loc400)
            %12 = cir.cmp(gt, %10, %11) : !s32i, !cir.bool loc(#loc654)
            %13 = cir.ternary(%12, true {
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc402)
              %15 = cir.const #cir.int<20> : !s32i loc(#loc403)
              %16 = cir.cmp(le, %14, %15) : !s32i, !cir.bool loc(#loc655)
              %17 = cir.ternary(%16, true {
                %18 = cir.const #true loc(#loc401)
                cir.yield %18 : !cir.bool loc(#loc401)
              }, false {
                %18 = cir.const #false loc(#loc401)
                cir.yield %18 : !cir.bool loc(#loc401)
              }) : (!cir.bool) -> !cir.bool loc(#loc401)
              cir.yield %17 : !cir.bool loc(#loc401)
            }, false {
              %14 = cir.const #false loc(#loc401)
              cir.yield %14 : !cir.bool loc(#loc401)
            }) : (!cir.bool) -> !cir.bool loc(#loc401)
            cir.if %13 {
              cir.scope {
                %14 = cir.const #cir.int<0> : !s32i loc(#loc407)
                %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc407)
                cir.store %15, %7 : !u64i, !cir.ptr<!u64i> loc(#loc658)
                cir.for : cond {
                  %16 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc409)
                  %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc410)
                  %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc410)
                  %19 = cir.cmp(lt, %16, %18) : !u64i, !cir.bool loc(#loc659)
                  cir.condition(%19) loc(#loc411)
                } body {
                  cir.scope {
                    %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc413)
                    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc413)
                    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc414)
                  } loc(#loc660)
                  cir.yield loc(#loc406)
                } step {
                  %16 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc415)
                  %17 = cir.unary(inc, %16) : !u64i, !u64i loc(#loc416)
                  cir.store %17, %7 : !u64i, !cir.ptr<!u64i> loc(#loc661)
                  cir.yield loc(#loc657)
                } loc(#loc657)
              } loc(#loc657)
            } loc(#loc656)
          } loc(#loc653)
        } loc(#loc651)
      } else {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc663)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc420)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc420)
          cir.store %9, %7 : !u64i, !cir.ptr<!u64i> loc(#loc663)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc423)
            %11 = cir.const #cir.int<0> : !s32i loc(#loc424)
            %12 = cir.cmp(gt, %10, %11) : !s32i, !cir.bool loc(#loc665)
            %13 = cir.ternary(%12, true {
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc426)
              %15 = cir.const #cir.int<20> : !s32i loc(#loc427)
              %16 = cir.cmp(le, %14, %15) : !s32i, !cir.bool loc(#loc666)
              %17 = cir.ternary(%16, true {
                %18 = cir.const #true loc(#loc425)
                cir.yield %18 : !cir.bool loc(#loc425)
              }, false {
                %18 = cir.const #false loc(#loc425)
                cir.yield %18 : !cir.bool loc(#loc425)
              }) : (!cir.bool) -> !cir.bool loc(#loc425)
              cir.yield %17 : !cir.bool loc(#loc425)
            }, false {
              %14 = cir.const #false loc(#loc425)
              cir.yield %14 : !cir.bool loc(#loc425)
            }) : (!cir.bool) -> !cir.bool loc(#loc425)
            cir.if %13 {
              cir.scope {
                %14 = cir.const #cir.int<0> : !s32i loc(#loc431)
                %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc431)
                cir.store %15, %7 : !u64i, !cir.ptr<!u64i> loc(#loc669)
                cir.for : cond {
                  %16 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc433)
                  %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc434)
                  %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc434)
                  %19 = cir.cmp(lt, %16, %18) : !u64i, !cir.bool loc(#loc670)
                  cir.condition(%19) loc(#loc435)
                } body {
                  cir.scope {
                    %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc437)
                    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc437)
                    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc438)
                  } loc(#loc671)
                  cir.yield loc(#loc430)
                } step {
                  %16 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc439)
                  %17 = cir.unary(inc, %16) : !u64i, !u64i loc(#loc440)
                  cir.store %17, %7 : !u64i, !cir.ptr<!u64i> loc(#loc672)
                  cir.yield loc(#loc668)
                } loc(#loc668)
              } loc(#loc668)
            } loc(#loc667)
          } loc(#loc664)
        } loc(#loc662)
      } loc(#loc650)
    } loc(#loc648)
    cir.return loc(#loc205)
  } loc(#loc578)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc674)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc445)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc446)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc675)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc677)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc677)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc450)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc450)
      cir.if %6 {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc455)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc679)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc457)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc680)
      } loc(#loc678)
    } loc(#loc676)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc682)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc682)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc461)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc461)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc685)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc469)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc469)
          cir.store %9, %7 : !u64i, !cir.ptr<!u64i> loc(#loc685)
          cir.scope {
            %10 = cir.const #cir.int<0> : !s32i loc(#loc472)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc472)
            cir.store %11, %7 : !u64i, !cir.ptr<!u64i> loc(#loc687)
            cir.for : cond {
              %12 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc474)
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc475)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc475)
              %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc688)
              cir.condition(%15) loc(#loc476)
            } body {
              cir.scope {
                %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc478)
                %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc478)
                cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc479)
              } loc(#loc689)
              cir.yield loc(#loc471)
            } step {
              %12 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc480)
              %13 = cir.unary(inc, %12) : !u64i, !u64i loc(#loc481)
              cir.store %13, %7 : !u64i, !cir.ptr<!u64i> loc(#loc690)
              cir.yield loc(#loc686)
            } loc(#loc686)
          } loc(#loc686)
        } loc(#loc684)
      } else {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc692)
          %8 = cir.const #cir.int<0> : !s32i loc(#loc485)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc485)
          cir.store %9, %7 : !u64i, !cir.ptr<!u64i> loc(#loc692)
          cir.scope {
            %10 = cir.const #cir.int<0> : !s32i loc(#loc488)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc488)
            cir.store %11, %7 : !u64i, !cir.ptr<!u64i> loc(#loc694)
            cir.for : cond {
              %12 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc490)
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc491)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc491)
              %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc695)
              cir.condition(%15) loc(#loc492)
            } body {
              cir.scope {
                %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc494)
                %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc494)
                cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc495)
              } loc(#loc696)
              cir.yield loc(#loc487)
            } step {
              %12 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc496)
              %13 = cir.unary(inc, %12) : !u64i, !u64i loc(#loc497)
              cir.store %13, %7 : !u64i, !cir.ptr<!u64i> loc(#loc697)
              cir.yield loc(#loc693)
            } loc(#loc693)
          } loc(#loc693)
        } loc(#loc691)
      } loc(#loc683)
    } loc(#loc681)
    cir.return loc(#loc442)
  } loc(#loc673)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":77:53)
#loc8 = loc("/usr/include/netinet/in.h":404:1)
#loc9 = loc("/usr/include/netinet/in.h":405:40)
#loc10 = loc("/usr/include/sys/socket.h":126:1)
#loc11 = loc("/usr/include/sys/socket.h":126:75)
#loc12 = loc("/usr/include/sys/socket.h":145:1)
#loc13 = loc("/usr/include/sys/socket.h":145:68)
#loc14 = loc("/usr/include/stdlib.h":105:1)
#loc15 = loc("/usr/include/stdlib.h":106:33)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":120:27)
#loc21 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":44:1)
#loc22 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":138:1)
#loc23 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":46:5)
#loc24 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":46:9)
#loc25 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":48:14)
#loc26 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":48:13)
#loc27 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":48:5)
#loc28 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":49:5)
#loc29 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":112:5)
#loc30 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":49:8)
#loc31 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":49:33)
#loc32 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":50:5)
#loc33 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":107:5)
#loc34 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":109:5)
#loc35 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":51:9)
#loc36 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":106:9)
#loc37 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":56:13)
#loc38 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":56:17)
#loc39 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":57:13)
#loc40 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":57:32)
#loc41 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":58:13)
#loc42 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":58:36)
#loc43 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":59:13)
#loc44 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":59:45)
#loc45 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":60:13)
#loc46 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":95:21)
#loc47 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":70:40)
#loc48 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":70:49)
#loc49 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":70:62)
#loc50 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":70:33)
#loc51 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":70:17)
#loc52 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":70:73)
#loc53 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":71:17)
#loc54 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":74:17)
#loc55 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":71:21)
#loc56 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":71:38)
#loc57 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":72:17)
#loc58 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":73:21)
#loc59 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":75:24)
#loc60 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":75:25)
#loc61 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":75:34)
#loc62 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":75:37)
#loc63 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":75:51)
#loc64 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":75:17)
#loc65 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":75:52)
#loc66 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":76:38)
#loc67 = loc("/usr/include/netinet/in.h":249:5)
#loc68 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":76:17)
#loc69 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":77:43)
#loc70 = loc("/usr/include/netinet/in.h":251:20)
#loc71 = loc("/usr/include/netinet/in.h":33:15)
#loc72 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":77:17)
#loc73 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":77:63)
#loc74 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":78:42)
#loc75 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":78:36)
#loc76 = loc("/usr/include/netinet/in.h":250:15)
#loc77 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":78:17)
#loc78 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":78:50)
#loc79 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":79:17)
#loc80 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":82:17)
#loc81 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":79:29)
#loc82 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":79:62)
#loc83 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":79:63)
#loc84 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":79:72)
#loc85 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":79:86)
#loc86 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":79:21)
#loc87 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":79:92)
#loc88 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":80:17)
#loc89 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":81:21)
#loc90 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":85:35)
#loc91 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":85:50)
#loc92 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":85:63)
#loc93 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":85:81)
#loc94 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":85:84)
#loc95 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":85:30)
#loc96 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":85:17)
#loc97 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":85:85)
#loc98 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":86:17)
#loc99 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":89:17)
#loc100 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":86:21)
#loc101 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":86:35)
#loc102 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":86:48)
#loc103 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":86:51)
#loc104 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":86:65)
#loc105 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":87:17)
#loc106 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":88:21)
#loc107 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":91:43)
#loc108 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":91:29)
#loc109 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":91:17)
#loc110 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":93:30)
#loc111 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":93:25)
#loc112 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":93:17)
#loc113 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":93:41)
#loc114 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":95:20)
#loc115 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":96:13)
#loc116 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":99:13)
#loc117 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":96:17)
#loc118 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":96:34)
#loc119 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":97:13)
#loc120 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":98:30)
#loc121 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":98:17)
#loc122 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":111:17)
#loc123 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":111:9)
#loc124 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":113:5)
#loc125 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":137:5)
#loc126 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":113:8)
#loc127 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":113:33)
#loc128 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":114:5)
#loc129 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":123:5)
#loc130 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":125:5)
#loc131 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":115:9)
#loc132 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":122:9)
#loc133 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":116:13)
#loc134 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":116:24)
#loc135 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":118:13)
#loc136 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":121:13)
#loc137 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":118:22)
#loc138 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":118:18)
#loc139 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":118:25)
#loc140 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":118:37)
#loc141 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":118:27)
#loc142 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":119:13)
#loc143 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":120:17)
#loc144 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":118:45)
#loc145 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":118:44)
#loc146 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":126:9)
#loc147 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":136:9)
#loc148 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":127:13)
#loc149 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":127:24)
#loc150 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":129:13)
#loc151 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":135:13)
#loc152 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":129:17)
#loc153 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":129:25)
#loc154 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":129:27)
#loc155 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":129:30)
#loc156 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":129:39)
#loc157 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":130:13)
#loc158 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":131:17)
#loc159 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":134:17)
#loc160 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":131:26)
#loc161 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":131:22)
#loc162 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":131:29)
#loc163 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":131:41)
#loc164 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":131:31)
#loc165 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":132:17)
#loc166 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":133:31)
#loc167 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":133:21)
#loc168 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":131:49)
#loc169 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":131:48)
#loc170 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":342:1)
#loc171 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":346:1)
#loc172 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":344:5)
#loc173 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":344:13)
#loc174 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":345:5)
#loc175 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":345:13)
#loc176 = loc("/usr/include/stdlib.h":575:1)
#loc177 = loc("/usr/include/stdlib.h":575:41)
#loc178 = loc("/usr/include/time.h":76:1)
#loc179 = loc("/usr/include/time.h":76:38)
#loc180 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":362:15)
#loc181 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":364:15)
#loc182 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":367:15)
#loc183 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":369:15)
#loc184 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":357:1)
#loc185 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":372:1)
#loc190 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":358:1)
#loc191 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":360:27)
#loc192 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":360:22)
#loc193 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":360:5)
#loc194 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":362:5)
#loc195 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":363:5)
#loc196 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":363:65)
#loc197 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":364:5)
#loc198 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":367:5)
#loc199 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":368:5)
#loc200 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":368:64)
#loc201 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":369:5)
#loc202 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":371:12)
#loc203 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":371:5)
#loc204 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":147:1)
#loc205 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":298:1)
#loc206 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":149:5)
#loc207 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":149:9)
#loc208 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":151:14)
#loc209 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":151:13)
#loc210 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":151:5)
#loc211 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":152:5)
#loc212 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":269:5)
#loc213 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":152:8)
#loc214 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":152:33)
#loc215 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":153:5)
#loc216 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":210:5)
#loc217 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":212:5)
#loc218 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":154:9)
#loc219 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":209:9)
#loc220 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":159:13)
#loc221 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":159:17)
#loc222 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":160:13)
#loc223 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":160:32)
#loc224 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":161:13)
#loc225 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":161:36)
#loc226 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":162:13)
#loc227 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":162:45)
#loc228 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":163:13)
#loc229 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":198:21)
#loc230 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":173:40)
#loc231 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":173:49)
#loc232 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":173:62)
#loc233 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":173:33)
#loc234 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":173:17)
#loc235 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":173:73)
#loc236 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":174:17)
#loc237 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":177:17)
#loc238 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":174:21)
#loc239 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":174:38)
#loc240 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":175:17)
#loc241 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":176:21)
#loc242 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":178:24)
#loc243 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":178:25)
#loc244 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":178:34)
#loc245 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":178:37)
#loc246 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":178:51)
#loc247 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":178:17)
#loc248 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":178:52)
#loc249 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":179:38)
#loc250 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":179:17)
#loc251 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":180:53)
#loc252 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":180:43)
#loc253 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":180:17)
#loc254 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":180:63)
#loc255 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":181:42)
#loc256 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":181:36)
#loc257 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":181:17)
#loc258 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":181:50)
#loc259 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":182:17)
#loc260 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":185:17)
#loc261 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":182:29)
#loc262 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":182:62)
#loc263 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":182:63)
#loc264 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":182:72)
#loc265 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":182:86)
#loc266 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":182:21)
#loc267 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":182:92)
#loc268 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":183:17)
#loc269 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":184:21)
#loc270 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":188:35)
#loc271 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":188:50)
#loc272 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":188:63)
#loc273 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":188:81)
#loc274 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":188:84)
#loc275 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":188:30)
#loc276 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":188:17)
#loc277 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":188:85)
#loc278 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":189:17)
#loc279 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":192:17)
#loc280 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":189:21)
#loc281 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":189:35)
#loc282 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":189:48)
#loc283 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":189:51)
#loc284 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":189:65)
#loc285 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":190:17)
#loc286 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":191:21)
#loc287 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":194:43)
#loc288 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":194:29)
#loc289 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":194:17)
#loc290 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":196:30)
#loc291 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":196:25)
#loc292 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":196:17)
#loc293 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":196:41)
#loc294 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":198:20)
#loc295 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":199:13)
#loc296 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":202:13)
#loc297 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":199:17)
#loc298 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":199:34)
#loc299 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":200:13)
#loc300 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":201:30)
#loc301 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":201:17)
#loc302 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":213:9)
#loc303 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":268:9)
#loc304 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":218:13)
#loc305 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":218:17)
#loc306 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":219:13)
#loc307 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":219:32)
#loc308 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":220:13)
#loc309 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":220:36)
#loc310 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":221:13)
#loc311 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":221:45)
#loc312 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":222:13)
#loc313 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":257:21)
#loc314 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":232:40)
#loc315 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":232:49)
#loc316 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":232:62)
#loc317 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":232:33)
#loc318 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":232:17)
#loc319 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":232:73)
#loc320 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":233:17)
#loc321 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":236:17)
#loc322 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":233:21)
#loc323 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":233:38)
#loc324 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":234:17)
#loc325 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":235:21)
#loc326 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":237:24)
#loc327 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":237:25)
#loc328 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":237:34)
#loc329 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":237:37)
#loc330 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":237:51)
#loc331 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":237:17)
#loc332 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":237:52)
#loc333 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":238:38)
#loc334 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":238:17)
#loc335 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":239:53)
#loc336 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":239:43)
#loc337 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":239:17)
#loc338 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":239:63)
#loc339 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":240:42)
#loc340 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":240:36)
#loc341 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":240:17)
#loc342 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":240:50)
#loc343 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":241:17)
#loc344 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":244:17)
#loc345 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":241:29)
#loc346 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":241:62)
#loc347 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":241:63)
#loc348 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":241:72)
#loc349 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":241:86)
#loc350 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":241:21)
#loc351 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":241:92)
#loc352 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":242:17)
#loc353 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":243:21)
#loc354 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":247:35)
#loc355 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":247:50)
#loc356 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":247:63)
#loc357 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":247:81)
#loc358 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":247:84)
#loc359 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":247:30)
#loc360 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":247:17)
#loc361 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":247:85)
#loc362 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":248:17)
#loc363 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":251:17)
#loc364 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":248:21)
#loc365 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":248:35)
#loc366 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":248:48)
#loc367 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":248:51)
#loc368 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":248:65)
#loc369 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":249:17)
#loc370 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":250:21)
#loc371 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":253:43)
#loc372 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":253:29)
#loc373 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":253:17)
#loc374 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":255:30)
#loc375 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":255:25)
#loc376 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":255:17)
#loc377 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":255:41)
#loc378 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":257:20)
#loc379 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":258:13)
#loc380 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":261:13)
#loc381 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":258:17)
#loc382 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":258:34)
#loc383 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":259:13)
#loc384 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":260:30)
#loc385 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":260:17)
#loc386 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":270:5)
#loc387 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":297:5)
#loc388 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":270:8)
#loc389 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":270:33)
#loc390 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":271:5)
#loc391 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":283:5)
#loc392 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":285:5)
#loc393 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":272:9)
#loc394 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":282:9)
#loc395 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":273:13)
#loc396 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":273:24)
#loc397 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":275:13)
#loc398 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":281:13)
#loc399 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":275:17)
#loc400 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":275:25)
#loc401 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":275:27)
#loc402 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":275:30)
#loc403 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":275:39)
#loc404 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":276:13)
#loc405 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":277:17)
#loc406 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":280:17)
#loc407 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":277:26)
#loc408 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":277:22)
#loc409 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":277:29)
#loc410 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":277:41)
#loc411 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":277:31)
#loc412 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":278:17)
#loc413 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":279:31)
#loc414 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":279:21)
#loc415 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":277:49)
#loc416 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":277:48)
#loc417 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":286:9)
#loc418 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":296:9)
#loc419 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":287:13)
#loc420 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":287:24)
#loc421 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":289:13)
#loc422 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":295:13)
#loc423 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":289:17)
#loc424 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":289:25)
#loc425 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":289:27)
#loc426 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":289:30)
#loc427 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":289:39)
#loc428 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":290:13)
#loc429 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":291:17)
#loc430 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":294:17)
#loc431 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":291:26)
#loc432 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":291:22)
#loc433 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":291:29)
#loc434 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":291:41)
#loc435 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":291:31)
#loc436 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":292:17)
#loc437 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":293:31)
#loc438 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":293:21)
#loc439 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":291:49)
#loc440 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":291:48)
#loc441 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":303:1)
#loc442 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":340:1)
#loc443 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":305:5)
#loc444 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":305:9)
#loc445 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":307:14)
#loc446 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":307:13)
#loc447 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":307:5)
#loc448 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":308:5)
#loc449 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":317:5)
#loc450 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":308:8)
#loc451 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":308:33)
#loc452 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":309:5)
#loc453 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":312:5)
#loc454 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":314:5)
#loc455 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":311:17)
#loc456 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":311:9)
#loc457 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":316:17)
#loc458 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":316:9)
#loc459 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":318:5)
#loc460 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":339:5)
#loc461 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":318:8)
#loc462 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":318:33)
#loc463 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":319:5)
#loc464 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":328:5)
#loc465 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":330:5)
#loc466 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":320:9)
#loc467 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":327:9)
#loc468 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":321:13)
#loc469 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":321:24)
#loc470 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":323:13)
#loc471 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":326:13)
#loc472 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":323:22)
#loc473 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":323:18)
#loc474 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":323:25)
#loc475 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":323:37)
#loc476 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":323:27)
#loc477 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":324:13)
#loc478 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":325:27)
#loc479 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":325:17)
#loc480 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":323:45)
#loc481 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":323:44)
#loc482 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":331:9)
#loc483 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":338:9)
#loc484 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":332:13)
#loc485 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":332:24)
#loc486 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":334:13)
#loc487 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":337:13)
#loc488 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":334:22)
#loc489 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":334:18)
#loc490 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":334:25)
#loc491 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":334:37)
#loc492 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":334:27)
#loc493 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":335:13)
#loc494 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":336:27)
#loc495 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":336:17)
#loc496 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":334:45)
#loc497 = loc("CWE400_Resource_Exhaustion__connect_socket_for_loop_12.c":334:44)
#loc498 = loc(fused[#loc1, #loc2])
#loc499 = loc(fused[#loc3, #loc4])
#loc500 = loc(fused[#loc5, #loc6])
#loc501 = loc(fused[#loc8, #loc9])
#loc502 = loc(fused[#loc10, #loc11])
#loc503 = loc(fused[#loc12, #loc13])
#loc504 = loc(fused[#loc14, #loc15])
#loc505 = loc(fused[#loc16, #loc17])
#loc506 = loc(fused[#loc18, #loc19])
#loc507 = loc(fused[#loc21, #loc22])
#loc508 = loc(fused[#loc23, #loc24])
#loc509 = loc(fused[#loc27, #loc25])
#loc510 = loc(fused[#loc28, #loc29])
#loc511 = loc(fused[#loc30, #loc31])
#loc512 = loc(fused[#loc32, #loc33, #loc34, #loc29])
#loc513 = loc(fused[#loc35, #loc36])
#loc514 = loc(fused[#loc37, #loc38])
#loc515 = loc(fused[#loc39, #loc40])
#loc516 = loc(fused[#loc41, #loc42])
#loc517 = loc(fused[#loc43, #loc44])
#loc518 = loc(fused[#loc45, #loc46])
#loc519 = loc(fused[#loc51, #loc52])
#loc520 = loc(fused[#loc53, #loc54])
#loc521 = loc(fused[#loc55, #loc56])
#loc522 = loc(fused[#loc57, #loc54])
#loc523 = loc(fused[#loc59, #loc60])
#loc524 = loc(fused[#loc62, #loc63])
#loc525 = loc(fused[#loc64, #loc65])
#loc526 = loc(fused[#loc68, #loc66])
#loc527 = loc(fused[#loc72, #loc73])
#loc528 = loc(fused[#loc77, #loc78])
#loc529 = loc(fused[#loc79, #loc80])
#loc530 = loc(fused[#loc82, #loc83])
#loc531 = loc(fused[#loc84, #loc85])
#loc532 = loc(fused[#loc86, #loc87])
#loc533 = loc(fused[#loc88, #loc80])
#loc534 = loc(fused[#loc92, #loc93])
#loc535 = loc(fused[#loc96, #loc97])
#loc536 = loc(fused[#loc98, #loc99])
#loc537 = loc(fused[#loc100, #loc101])
#loc538 = loc(fused[#loc103, #loc104])
#loc539 = loc(fused[#loc105, #loc99])
#loc540 = loc(fused[#loc109, #loc107])
#loc541 = loc(fused[#loc112, #loc113])
#loc542 = loc(fused[#loc115, #loc116])
#loc543 = loc(fused[#loc117, #loc118])
#loc544 = loc(fused[#loc119, #loc116])
#loc545 = loc(fused[#loc123, #loc122])
#loc546 = loc(fused[#loc124, #loc125])
#loc547 = loc(fused[#loc126, #loc127])
#loc548 = loc(fused[#loc128, #loc129, #loc130, #loc125])
#loc549 = loc(fused[#loc131, #loc132])
#loc550 = loc(fused[#loc133, #loc134])
#loc551 = loc(fused[#loc135, #loc136])
#loc552 = loc(fused[#loc138, #loc137])
#loc553 = loc(fused[#loc139, #loc140])
#loc554 = loc(fused[#loc142, #loc136])
#loc555 = loc(fused[#loc145, #loc144])
#loc556 = loc(fused[#loc146, #loc147])
#loc557 = loc(fused[#loc148, #loc149])
#loc558 = loc(fused[#loc150, #loc151])
#loc559 = loc(fused[#loc152, #loc153])
#loc560 = loc(fused[#loc155, #loc156])
#loc561 = loc(fused[#loc157, #loc151])
#loc562 = loc(fused[#loc158, #loc159])
#loc563 = loc(fused[#loc161, #loc160])
#loc564 = loc(fused[#loc162, #loc163])
#loc565 = loc(fused[#loc165, #loc159])
#loc566 = loc(fused[#loc169, #loc168])
#loc567 = loc(fused[#loc170, #loc171])
#loc568 = loc(fused[#loc172, #loc173])
#loc569 = loc(fused[#loc174, #loc175])
#loc570 = loc(fused[#loc176, #loc177])
#loc571 = loc(fused[#loc178, #loc179])
#loc572 = loc(fused[#loc184, #loc185])
#loc575 = loc(fused[#loc195, #loc196])
#loc576 = loc(fused[#loc199, #loc200])
#loc577 = loc(fused[#loc203, #loc202])
#loc578 = loc(fused[#loc204, #loc205])
#loc579 = loc(fused[#loc206, #loc207])
#loc580 = loc(fused[#loc210, #loc208])
#loc581 = loc(fused[#loc211, #loc212])
#loc582 = loc(fused[#loc213, #loc214])
#loc583 = loc(fused[#loc215, #loc216, #loc217, #loc212])
#loc584 = loc(fused[#loc218, #loc219])
#loc585 = loc(fused[#loc220, #loc221])
#loc586 = loc(fused[#loc222, #loc223])
#loc587 = loc(fused[#loc224, #loc225])
#loc588 = loc(fused[#loc226, #loc227])
#loc589 = loc(fused[#loc228, #loc229])
#loc590 = loc(fused[#loc234, #loc235])
#loc591 = loc(fused[#loc236, #loc237])
#loc592 = loc(fused[#loc238, #loc239])
#loc593 = loc(fused[#loc240, #loc237])
#loc594 = loc(fused[#loc242, #loc243])
#loc595 = loc(fused[#loc245, #loc246])
#loc596 = loc(fused[#loc247, #loc248])
#loc597 = loc(fused[#loc250, #loc249])
#loc598 = loc(fused[#loc253, #loc254])
#loc599 = loc(fused[#loc257, #loc258])
#loc600 = loc(fused[#loc259, #loc260])
#loc601 = loc(fused[#loc262, #loc263])
#loc602 = loc(fused[#loc264, #loc265])
#loc603 = loc(fused[#loc266, #loc267])
#loc604 = loc(fused[#loc268, #loc260])
#loc605 = loc(fused[#loc272, #loc273])
#loc606 = loc(fused[#loc276, #loc277])
#loc607 = loc(fused[#loc278, #loc279])
#loc608 = loc(fused[#loc280, #loc281])
#loc609 = loc(fused[#loc283, #loc284])
#loc610 = loc(fused[#loc285, #loc279])
#loc611 = loc(fused[#loc289, #loc287])
#loc612 = loc(fused[#loc292, #loc293])
#loc613 = loc(fused[#loc295, #loc296])
#loc614 = loc(fused[#loc297, #loc298])
#loc615 = loc(fused[#loc299, #loc296])
#loc616 = loc(fused[#loc302, #loc303])
#loc617 = loc(fused[#loc304, #loc305])
#loc618 = loc(fused[#loc306, #loc307])
#loc619 = loc(fused[#loc308, #loc309])
#loc620 = loc(fused[#loc310, #loc311])
#loc621 = loc(fused[#loc312, #loc313])
#loc622 = loc(fused[#loc318, #loc319])
#loc623 = loc(fused[#loc320, #loc321])
#loc624 = loc(fused[#loc322, #loc323])
#loc625 = loc(fused[#loc324, #loc321])
#loc626 = loc(fused[#loc326, #loc327])
#loc627 = loc(fused[#loc329, #loc330])
#loc628 = loc(fused[#loc331, #loc332])
#loc629 = loc(fused[#loc334, #loc333])
#loc630 = loc(fused[#loc337, #loc338])
#loc631 = loc(fused[#loc341, #loc342])
#loc632 = loc(fused[#loc343, #loc344])
#loc633 = loc(fused[#loc346, #loc347])
#loc634 = loc(fused[#loc348, #loc349])
#loc635 = loc(fused[#loc350, #loc351])
#loc636 = loc(fused[#loc352, #loc344])
#loc637 = loc(fused[#loc356, #loc357])
#loc638 = loc(fused[#loc360, #loc361])
#loc639 = loc(fused[#loc362, #loc363])
#loc640 = loc(fused[#loc364, #loc365])
#loc641 = loc(fused[#loc367, #loc368])
#loc642 = loc(fused[#loc369, #loc363])
#loc643 = loc(fused[#loc373, #loc371])
#loc644 = loc(fused[#loc376, #loc377])
#loc645 = loc(fused[#loc379, #loc380])
#loc646 = loc(fused[#loc381, #loc382])
#loc647 = loc(fused[#loc383, #loc380])
#loc648 = loc(fused[#loc386, #loc387])
#loc649 = loc(fused[#loc388, #loc389])
#loc650 = loc(fused[#loc390, #loc391, #loc392, #loc387])
#loc651 = loc(fused[#loc393, #loc394])
#loc652 = loc(fused[#loc395, #loc396])
#loc653 = loc(fused[#loc397, #loc398])
#loc654 = loc(fused[#loc399, #loc400])
#loc655 = loc(fused[#loc402, #loc403])
#loc656 = loc(fused[#loc404, #loc398])
#loc657 = loc(fused[#loc405, #loc406])
#loc658 = loc(fused[#loc408, #loc407])
#loc659 = loc(fused[#loc409, #loc410])
#loc660 = loc(fused[#loc412, #loc406])
#loc661 = loc(fused[#loc416, #loc415])
#loc662 = loc(fused[#loc417, #loc418])
#loc663 = loc(fused[#loc419, #loc420])
#loc664 = loc(fused[#loc421, #loc422])
#loc665 = loc(fused[#loc423, #loc424])
#loc666 = loc(fused[#loc426, #loc427])
#loc667 = loc(fused[#loc428, #loc422])
#loc668 = loc(fused[#loc429, #loc430])
#loc669 = loc(fused[#loc432, #loc431])
#loc670 = loc(fused[#loc433, #loc434])
#loc671 = loc(fused[#loc436, #loc430])
#loc672 = loc(fused[#loc440, #loc439])
#loc673 = loc(fused[#loc441, #loc442])
#loc674 = loc(fused[#loc443, #loc444])
#loc675 = loc(fused[#loc447, #loc445])
#loc676 = loc(fused[#loc448, #loc449])
#loc677 = loc(fused[#loc450, #loc451])
#loc678 = loc(fused[#loc452, #loc453, #loc454, #loc449])
#loc679 = loc(fused[#loc456, #loc455])
#loc680 = loc(fused[#loc458, #loc457])
#loc681 = loc(fused[#loc459, #loc460])
#loc682 = loc(fused[#loc461, #loc462])
#loc683 = loc(fused[#loc463, #loc464, #loc465, #loc460])
#loc684 = loc(fused[#loc466, #loc467])
#loc685 = loc(fused[#loc468, #loc469])
#loc686 = loc(fused[#loc470, #loc471])
#loc687 = loc(fused[#loc473, #loc472])
#loc688 = loc(fused[#loc474, #loc475])
#loc689 = loc(fused[#loc477, #loc471])
#loc690 = loc(fused[#loc481, #loc480])
#loc691 = loc(fused[#loc482, #loc483])
#loc692 = loc(fused[#loc484, #loc485])
#loc693 = loc(fused[#loc486, #loc487])
#loc694 = loc(fused[#loc489, #loc488])
#loc695 = loc(fused[#loc490, #loc491])
#loc696 = loc(fused[#loc493, #loc487])
#loc697 = loc(fused[#loc497, #loc496])
