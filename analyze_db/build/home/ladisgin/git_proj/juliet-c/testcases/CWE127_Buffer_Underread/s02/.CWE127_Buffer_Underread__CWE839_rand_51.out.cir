!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc12 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":31:12)
#loc34 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":81:10)
#loc35 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":81:14)
#loc36 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":81:20)
#loc37 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":81:32)
#loc74 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":62:12)
#loc91 = loc(fused[#loc34, #loc35])
#loc92 = loc(fused[#loc36, #loc37])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s02/CWE127_Buffer_Underread__CWE839_rand_51a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc78)
  cir.func private @CWE127_Buffer_Underread__CWE839_rand_51b_badSink(!s32i) loc(#loc79)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_rand_51_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc81)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc9)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc10)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc82)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc12)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc12)
    %5 = cir.binop(and, %3, %4) : !s32i loc(#loc12)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc12)
    cir.brcond %6 ^bb1, ^bb2 loc(#loc12)
  ^bb1:  // pred: ^bb0
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc12)
    %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc12)
    %9 = cir.const #cir.int<30> : !s32i loc(#loc12)
    %10 = cir.shift(left, %8 : !u32i, %9 : !s32i) -> !u32i loc(#loc12)
    %11 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc12)
    %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc12)
    %13 = cir.const #cir.int<15> : !s32i loc(#loc12)
    %14 = cir.shift(left, %12 : !u32i, %13 : !s32i) -> !u32i loc(#loc12)
    %15 = cir.binop(xor, %10, %14) : !u32i loc(#loc12)
    %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc12)
    %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc12)
    %18 = cir.binop(xor, %15, %17) : !u32i loc(#loc12)
    cir.br ^bb3(%18 : !u32i) loc(#loc12)
  ^bb2:  // pred: ^bb0
    %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc12)
    %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc12)
    %21 = cir.const #cir.int<30> : !s32i loc(#loc12)
    %22 = cir.shift(left, %20 : !u32i, %21 : !s32i) -> !u32i loc(#loc12)
    %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc12)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc12)
    %25 = cir.const #cir.int<15> : !s32i loc(#loc12)
    %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc12)
    %27 = cir.binop(xor, %22, %26) : !u32i loc(#loc12)
    %28 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc12)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc12)
    %30 = cir.binop(xor, %27, %29) : !u32i loc(#loc12)
    %31 = cir.unary(minus, %30) : !u32i, !u32i loc(#loc12)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc12)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc12)
    %34 = cir.binop(sub, %31, %33) : !u32i loc(#loc12)
    cir.br ^bb3(%34 : !u32i) loc(#loc12)
  ^bb3(%35: !u32i loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":31:12)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc12)
  ^bb4:  // pred: ^bb3
    %36 = cir.cast(integral, %35 : !u32i), !s32i loc(#loc12)
    cir.store %36, %0 : !s32i, !cir.ptr<!s32i> loc(#loc83)
    %37 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc14)
    cir.call @CWE127_Buffer_Underread__CWE839_rand_51b_badSink(%37) : (!s32i) -> () loc(#loc15)
    cir.return loc(#loc6)
  } loc(#loc80)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_rand_51_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc85)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc18)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc86)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc20)
    cir.return loc(#loc17)
  } loc(#loc84)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc87)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc88)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc89)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc28)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc29)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc30)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc31)
  cir.func @main(%arg0: !s32i loc(fused[#loc34, #loc35]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc36, #loc37])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc91)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc92)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc33)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc38)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc38)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc39)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc40)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc40)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc41)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc28)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc28)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc42)
    %8 = cir.get_global @CWE127_Buffer_Underread__CWE839_rand_51_good : !cir.ptr<!cir.func<!void ()>> loc(#loc93)
    cir.call @CWE127_Buffer_Underread__CWE839_rand_51_good() : () -> () loc(#loc43)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc29)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc29)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc30)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc30)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    %13 = cir.get_global @CWE127_Buffer_Underread__CWE839_rand_51_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc94)
    cir.call @CWE127_Buffer_Underread__CWE839_rand_51_bad() : () -> () loc(#loc47)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc31)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc31)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc50)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc95)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    cir.return %17 : !s32i loc(#loc95)
  } loc(#loc90)
  cir.func private @CWE127_Buffer_Underread__CWE839_rand_51b_goodG2BSink(!s32i) loc(#loc96)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc98)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc58)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc59)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc99)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc61)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc100)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc63)
    cir.call @CWE127_Buffer_Underread__CWE839_rand_51b_goodG2BSink(%4) : (!s32i) -> () loc(#loc64)
    cir.return loc(#loc55)
  } loc(#loc97)
  cir.func private @CWE127_Buffer_Underread__CWE839_rand_51b_goodB2GSink(!s32i) loc(#loc101)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc103)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc71)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc72)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc104)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc74)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc74)
    %5 = cir.binop(and, %3, %4) : !s32i loc(#loc74)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc74)
    cir.brcond %6 ^bb1, ^bb2 loc(#loc74)
  ^bb1:  // pred: ^bb0
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc74)
    %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc74)
    %9 = cir.const #cir.int<30> : !s32i loc(#loc74)
    %10 = cir.shift(left, %8 : !u32i, %9 : !s32i) -> !u32i loc(#loc74)
    %11 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc74)
    %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc74)
    %13 = cir.const #cir.int<15> : !s32i loc(#loc74)
    %14 = cir.shift(left, %12 : !u32i, %13 : !s32i) -> !u32i loc(#loc74)
    %15 = cir.binop(xor, %10, %14) : !u32i loc(#loc74)
    %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc74)
    %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc74)
    %18 = cir.binop(xor, %15, %17) : !u32i loc(#loc74)
    cir.br ^bb3(%18 : !u32i) loc(#loc74)
  ^bb2:  // pred: ^bb0
    %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc74)
    %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc74)
    %21 = cir.const #cir.int<30> : !s32i loc(#loc74)
    %22 = cir.shift(left, %20 : !u32i, %21 : !s32i) -> !u32i loc(#loc74)
    %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc74)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc74)
    %25 = cir.const #cir.int<15> : !s32i loc(#loc74)
    %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc74)
    %27 = cir.binop(xor, %22, %26) : !u32i loc(#loc74)
    %28 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc74)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc74)
    %30 = cir.binop(xor, %27, %29) : !u32i loc(#loc74)
    %31 = cir.unary(minus, %30) : !u32i, !u32i loc(#loc74)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc74)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc74)
    %34 = cir.binop(sub, %31, %33) : !u32i loc(#loc74)
    cir.br ^bb3(%34 : !u32i) loc(#loc74)
  ^bb3(%35: !u32i loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":62:12)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc74)
  ^bb4:  // pred: ^bb3
    %36 = cir.cast(integral, %35 : !u32i), !s32i loc(#loc74)
    cir.store %36, %0 : !s32i, !cir.ptr<!s32i> loc(#loc105)
    %37 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc76)
    cir.call @CWE127_Buffer_Underread__CWE839_rand_51b_goodB2GSink(%37) : (!s32i) -> () loc(#loc77)
    cir.return loc(#loc68)
  } loc(#loc102)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s02/CWE127_Buffer_Underread__CWE839_rand_51a.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":23:1)
#loc4 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":23:63)
#loc5 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":25:1)
#loc6 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":33:1)
#loc7 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":27:5)
#loc8 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":27:9)
#loc9 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":29:13)
#loc10 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":29:12)
#loc11 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":29:5)
#loc13 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":31:5)
#loc14 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":32:54)
#loc15 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":32:5)
#loc16 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":66:1)
#loc17 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":70:1)
#loc18 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":68:5)
#loc19 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":68:13)
#loc20 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":69:5)
#loc21 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":69:13)
#loc22 = loc("/usr/include/stdlib.h":575:1)
#loc23 = loc("/usr/include/stdlib.h":575:41)
#loc24 = loc("/usr/include/time.h":76:1)
#loc25 = loc("/usr/include/time.h":76:38)
#loc26 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc27 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc28 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":86:15)
#loc29 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":88:15)
#loc30 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":91:15)
#loc31 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":93:15)
#loc32 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":81:1)
#loc33 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":96:1)
#loc38 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":82:1)
#loc39 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":84:27)
#loc40 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":84:22)
#loc41 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":84:5)
#loc42 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":86:5)
#loc43 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":87:5)
#loc44 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":87:50)
#loc45 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":88:5)
#loc46 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":91:5)
#loc47 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":92:5)
#loc48 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":92:49)
#loc49 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":93:5)
#loc50 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":95:12)
#loc51 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":95:5)
#loc52 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":40:1)
#loc53 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":40:67)
#loc54 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":42:1)
#loc55 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":51:1)
#loc56 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":44:5)
#loc57 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":44:9)
#loc58 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":46:13)
#loc59 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":46:12)
#loc60 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":46:5)
#loc61 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":49:12)
#loc62 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":49:5)
#loc63 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":50:58)
#loc64 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":50:5)
#loc65 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":54:1)
#loc66 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":54:67)
#loc67 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":56:1)
#loc68 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":64:1)
#loc69 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":58:5)
#loc70 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":58:9)
#loc71 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":60:13)
#loc72 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":60:12)
#loc73 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":60:5)
#loc75 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":62:5)
#loc76 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":63:58)
#loc77 = loc("CWE127_Buffer_Underread__CWE839_rand_51a.c":63:5)
#loc78 = loc(fused[#loc1, #loc2])
#loc79 = loc(fused[#loc3, #loc4])
#loc80 = loc(fused[#loc5, #loc6])
#loc81 = loc(fused[#loc7, #loc8])
#loc82 = loc(fused[#loc11, #loc9])
#loc83 = loc(fused[#loc13, #loc12])
#loc84 = loc(fused[#loc16, #loc17])
#loc85 = loc(fused[#loc18, #loc19])
#loc86 = loc(fused[#loc20, #loc21])
#loc87 = loc(fused[#loc22, #loc23])
#loc88 = loc(fused[#loc24, #loc25])
#loc89 = loc(fused[#loc26, #loc27])
#loc90 = loc(fused[#loc32, #loc33])
#loc93 = loc(fused[#loc43, #loc44])
#loc94 = loc(fused[#loc47, #loc48])
#loc95 = loc(fused[#loc51, #loc50])
#loc96 = loc(fused[#loc52, #loc53])
#loc97 = loc(fused[#loc54, #loc55])
#loc98 = loc(fused[#loc56, #loc57])
#loc99 = loc(fused[#loc60, #loc58])
#loc100 = loc(fused[#loc62, #loc61])
#loc101 = loc(fused[#loc65, #loc66])
#loc102 = loc(fused[#loc67, #loc68])
#loc103 = loc(fused[#loc69, #loc70])
#loc104 = loc(fused[#loc73, #loc71])
#loc105 = loc(fused[#loc75, #loc74])
