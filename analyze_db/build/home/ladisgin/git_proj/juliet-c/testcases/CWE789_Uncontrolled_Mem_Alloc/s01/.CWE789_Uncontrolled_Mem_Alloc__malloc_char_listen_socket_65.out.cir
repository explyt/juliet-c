!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":247:10)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":247:14)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":247:20)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":247:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc384 = loc(fused[#loc164, #loc165])
#loc385 = loc(fused[#loc166, #loc167])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65b_badSink(!u64i) loc(#loc321)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc322)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc323)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc324)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc325)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc326)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc327)
  cir.func private @strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc328)
  cir.func private @close(!s32i) -> !s32i loc(#loc329)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc331)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!u64i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc332)
    %2 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65b_badSink : !cir.ptr<!cir.func<!void (!u64i)>> loc(#loc24)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!u64i)>>> loc(#loc332)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc25)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc25)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc333)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc335)
      %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc336)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc337)
      %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc338)
      %11 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc339)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc34)
      %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc34)
      cir.store %13, %9 : !s32i, !cir.ptr<!s32i> loc(#loc337)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc36)
      %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc36)
      cir.store %15, %10 : !s32i, !cir.ptr<!s32i> loc(#loc338)
      cir.scope {
        cir.do {
          %16 = cir.const #cir.int<2> : !s32i loc(#loc41)
          %17 = cir.const #cir.int<1> : !s32i loc(#loc42)
          %18 = cir.const #cir.int<6> : !s32i loc(#loc43)
          %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc44)
          cir.store %19, %9 : !s32i, !cir.ptr<!s32i> loc(#loc341)
          cir.scope {
            %64 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc49)
            %65 = cir.const #cir.int<1> : !s32i loc(#loc50)
            %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc50)
            %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc343)
            cir.if %67 {
              cir.break loc(#loc52)
            } loc(#loc344)
          } loc(#loc342)
          %20 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc345)
          %21 = cir.const #cir.int<0> : !s32i loc(#loc55)
          %22 = cir.const #cir.int<16> : !u64i loc(#loc346)
          cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc347)
          %23 = cir.const #cir.int<2> : !s32i loc(#loc60)
          %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc60)
          %25 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc61)
          cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc348)
          %26 = cir.const #cir.int<0> : !s32i loc(#loc63)
          %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc63)
          %28 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc64)
          %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc65)
          cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc349)
          %30 = cir.const #cir.int<27015> : !s32i loc(#loc67)
          %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc67)
          %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc68)
          %33 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
          cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc350)
          cir.scope {
            %64 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc74)
            %65 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc352)
            %66 = cir.const #cir.int<16> : !u64i loc(#loc353)
            %67 = cir.cast(integral, %66 : !u64i), !u32i loc(#loc353)
            %68 = cir.call @bind(%64, %65, %67) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc79)
            %69 = cir.const #cir.int<1> : !s32i loc(#loc80)
            %70 = cir.unary(minus, %69) : !s32i, !s32i loc(#loc80)
            %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc354)
            cir.if %71 {
              cir.break loc(#loc82)
            } loc(#loc355)
          } loc(#loc351)
          cir.scope {
            %64 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc85)
            %65 = cir.const #cir.int<5> : !s32i loc(#loc86)
            %66 = cir.call @listen(%64, %65) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc87)
            %67 = cir.const #cir.int<1> : !s32i loc(#loc88)
            %68 = cir.unary(minus, %67) : !s32i, !s32i loc(#loc88)
            %69 = cir.cmp(eq, %66, %68) : !s32i, !cir.bool loc(#loc357)
            cir.if %69 {
              cir.break loc(#loc90)
            } loc(#loc358)
          } loc(#loc356)
          %34 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc91)
          %35 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc92)
          %36 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc93)
          %37 = cir.call @accept(%34, %35, %36) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc94)
          cir.store %37, %10 : !s32i, !cir.ptr<!s32i> loc(#loc359)
          cir.scope {
            %64 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc99)
            %65 = cir.const #cir.int<1> : !s32i loc(#loc100)
            %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc100)
            %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc361)
            cir.if %67 {
              cir.break loc(#loc102)
            } loc(#loc362)
          } loc(#loc360)
          %38 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc103)
          %39 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc104)
          %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc104)
          %41 = cir.const #cir.int<3> : !s32i loc(#loc105)
          %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc105)
          %43 = cir.const #cir.int<8> : !u64i loc(#loc105)
          %44 = cir.binop(mul, %42, %43) : !u64i loc(#loc105)
          %45 = cir.const #cir.int<2> : !s32i loc(#loc105)
          %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc105)
          %47 = cir.binop(add, %44, %46) : !u64i loc(#loc105)
          %48 = cir.const #cir.int<1> : !s32i loc(#loc106)
          %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc106)
          %50 = cir.binop(sub, %47, %49) : !u64i loc(#loc363)
          %51 = cir.const #cir.int<0> : !s32i loc(#loc107)
          %52 = cir.call @recv(%38, %40, %50, %51) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc108)
          %53 = cir.cast(integral, %52 : !s64i), !s32i loc(#loc108)
          cir.store %53, %7 : !s32i, !cir.ptr<!s32i> loc(#loc364)
          cir.scope {
            %64 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc113)
            %65 = cir.const #cir.int<1> : !s32i loc(#loc114)
            %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc114)
            %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc366)
            %68 = cir.ternary(%67, true {
              %69 = cir.const #true loc(#loc115)
              cir.yield %69 : !cir.bool loc(#loc115)
            }, false {
              %69 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc116)
              %70 = cir.const #cir.int<0> : !s32i loc(#loc117)
              %71 = cir.cmp(eq, %69, %70) : !s32i, !cir.bool loc(#loc367)
              %72 = cir.ternary(%71, true {
                %73 = cir.const #true loc(#loc115)
                cir.yield %73 : !cir.bool loc(#loc115)
              }, false {
                %73 = cir.const #false loc(#loc115)
                cir.yield %73 : !cir.bool loc(#loc115)
              }) : (!cir.bool) -> !cir.bool loc(#loc115)
              cir.yield %72 : !cir.bool loc(#loc115)
            }) : (!cir.bool) -> !cir.bool loc(#loc115)
            cir.if %68 {
              cir.break loc(#loc119)
            } loc(#loc368)
          } loc(#loc365)
          %54 = cir.const #cir.int<0> : !s32i loc(#loc120)
          %55 = cir.cast(integral, %54 : !s32i), !s8i loc(#loc120)
          %56 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc121)
          %57 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc122)
          %58 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %56 : !s32i), !cir.ptr<!s8i> loc(#loc122)
          cir.store %55, %58 : !s8i, !cir.ptr<!s8i> loc(#loc369)
          %59 = cir.get_global @strtoul : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i)>> loc(#loc123)
          %60 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc124)
          %61 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
          %62 = cir.const #cir.int<0> : !s32i loc(#loc126)
          %63 = cir.call @strtoul(%60, %61, %62) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc123)
          cir.store %63, %0 : !u64i, !cir.ptr<!u64i> loc(#loc370)
          cir.yield loc(#loc40)
        } while {
          %16 = cir.const #cir.int<0> : !s32i loc(#loc129)
          %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc129)
          cir.condition(%17) loc(#loc129)
        } loc(#loc340)
      } loc(#loc340)
      cir.scope {
        %16 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc132)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc133)
        %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc133)
        %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc372)
        cir.if %19 {
          %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc135)
          %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc136)
        } loc(#loc373)
      } loc(#loc371)
      cir.scope {
        %16 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc139)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc140)
        %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc140)
        %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc375)
        cir.if %19 {
          %20 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc142)
          %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc143)
        } loc(#loc376)
      } loc(#loc374)
    } loc(#loc334)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!u64i)>>>, !cir.ptr<!cir.func<!void (!u64i)>> loc(#loc144)
    %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc145)
    cir.call %5(%6) : (!cir.ptr<!cir.func<!void (!u64i)>>, !u64i) -> () loc(#loc144)
    cir.return loc(#loc20)
  } loc(#loc330)
  cir.func no_proto @CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc378)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc148)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc379)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc150)
    cir.return loc(#loc147)
  } loc(#loc377)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc380)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc381)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc382)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc158)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc159)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc160)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc161)
  cir.func @main(%arg0: !s32i loc(fused[#loc164, #loc165]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc166, #loc167])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc384)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc385)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc163)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc168)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc168)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc169)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc170)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc170)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc171)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc158)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc158)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc172)
    %8 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65_good : !cir.ptr<!cir.func<!void ()>> loc(#loc386)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65_good() : () -> () loc(#loc173)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc159)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc159)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc175)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc160)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc160)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc176)
    %13 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc387)
    cir.call @CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65_bad() : () -> () loc(#loc177)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc161)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc161)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc179)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc180)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc388)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc388)
    cir.return %17 : !s32i loc(#loc388)
  } loc(#loc383)
  cir.func private @CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65b_goodG2BSink(!u64i) loc(#loc389)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc391)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!u64i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc392)
    %2 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65b_goodG2BSink : !cir.ptr<!cir.func<!void (!u64i)>> loc(#loc189)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!u64i)>>> loc(#loc392)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc190)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc190)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc393)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc192)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc192)
    cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc394)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!u64i)>>>, !cir.ptr<!cir.func<!void (!u64i)>> loc(#loc194)
    %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc195)
    cir.call %7(%8) : (!cir.ptr<!cir.func<!void (!u64i)>>, !u64i) -> () loc(#loc194)
    cir.return loc(#loc185)
  } loc(#loc390)
  cir.func private @CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65b_goodB2GSink(!u64i) loc(#loc395)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc397)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!u64i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc398)
    %2 = cir.get_global @CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65b_goodB2GSink : !cir.ptr<!cir.func<!void (!u64i)>> loc(#loc203)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!u64i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!u64i)>>> loc(#loc398)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc204)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc204)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc399)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc401)
      %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc402)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc403)
      %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc404)
      %11 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc405)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc213)
      %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc213)
      cir.store %13, %9 : !s32i, !cir.ptr<!s32i> loc(#loc403)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc215)
      %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc215)
      cir.store %15, %10 : !s32i, !cir.ptr<!s32i> loc(#loc404)
      cir.scope {
        cir.do {
          %16 = cir.const #cir.int<2> : !s32i loc(#loc220)
          %17 = cir.const #cir.int<1> : !s32i loc(#loc221)
          %18 = cir.const #cir.int<6> : !s32i loc(#loc222)
          %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc223)
          cir.store %19, %9 : !s32i, !cir.ptr<!s32i> loc(#loc407)
          cir.scope {
            %64 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc228)
            %65 = cir.const #cir.int<1> : !s32i loc(#loc229)
            %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc229)
            %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc409)
            cir.if %67 {
              cir.break loc(#loc231)
            } loc(#loc410)
          } loc(#loc408)
          %20 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc411)
          %21 = cir.const #cir.int<0> : !s32i loc(#loc234)
          %22 = cir.const #cir.int<16> : !u64i loc(#loc412)
          cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc413)
          %23 = cir.const #cir.int<2> : !s32i loc(#loc239)
          %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc239)
          %25 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc61)
          cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc414)
          %26 = cir.const #cir.int<0> : !s32i loc(#loc241)
          %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc241)
          %28 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc64)
          %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc65)
          cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc415)
          %30 = cir.const #cir.int<27015> : !s32i loc(#loc243)
          %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc243)
          %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc244)
          %33 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
          cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc416)
          cir.scope {
            %64 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc249)
            %65 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc418)
            %66 = cir.const #cir.int<16> : !u64i loc(#loc419)
            %67 = cir.cast(integral, %66 : !u64i), !u32i loc(#loc419)
            %68 = cir.call @bind(%64, %65, %67) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc254)
            %69 = cir.const #cir.int<1> : !s32i loc(#loc255)
            %70 = cir.unary(minus, %69) : !s32i, !s32i loc(#loc255)
            %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc420)
            cir.if %71 {
              cir.break loc(#loc257)
            } loc(#loc421)
          } loc(#loc417)
          cir.scope {
            %64 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc260)
            %65 = cir.const #cir.int<5> : !s32i loc(#loc261)
            %66 = cir.call @listen(%64, %65) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc262)
            %67 = cir.const #cir.int<1> : !s32i loc(#loc263)
            %68 = cir.unary(minus, %67) : !s32i, !s32i loc(#loc263)
            %69 = cir.cmp(eq, %66, %68) : !s32i, !cir.bool loc(#loc423)
            cir.if %69 {
              cir.break loc(#loc265)
            } loc(#loc424)
          } loc(#loc422)
          %34 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc266)
          %35 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc267)
          %36 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc268)
          %37 = cir.call @accept(%34, %35, %36) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc269)
          cir.store %37, %10 : !s32i, !cir.ptr<!s32i> loc(#loc425)
          cir.scope {
            %64 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc274)
            %65 = cir.const #cir.int<1> : !s32i loc(#loc275)
            %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc275)
            %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc427)
            cir.if %67 {
              cir.break loc(#loc277)
            } loc(#loc428)
          } loc(#loc426)
          %38 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc278)
          %39 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc279)
          %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc279)
          %41 = cir.const #cir.int<3> : !s32i loc(#loc280)
          %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc280)
          %43 = cir.const #cir.int<8> : !u64i loc(#loc280)
          %44 = cir.binop(mul, %42, %43) : !u64i loc(#loc280)
          %45 = cir.const #cir.int<2> : !s32i loc(#loc280)
          %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc280)
          %47 = cir.binop(add, %44, %46) : !u64i loc(#loc280)
          %48 = cir.const #cir.int<1> : !s32i loc(#loc281)
          %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc281)
          %50 = cir.binop(sub, %47, %49) : !u64i loc(#loc429)
          %51 = cir.const #cir.int<0> : !s32i loc(#loc282)
          %52 = cir.call @recv(%38, %40, %50, %51) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc283)
          %53 = cir.cast(integral, %52 : !s64i), !s32i loc(#loc283)
          cir.store %53, %7 : !s32i, !cir.ptr<!s32i> loc(#loc430)
          cir.scope {
            %64 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc288)
            %65 = cir.const #cir.int<1> : !s32i loc(#loc289)
            %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc289)
            %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc432)
            %68 = cir.ternary(%67, true {
              %69 = cir.const #true loc(#loc290)
              cir.yield %69 : !cir.bool loc(#loc290)
            }, false {
              %69 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc291)
              %70 = cir.const #cir.int<0> : !s32i loc(#loc292)
              %71 = cir.cmp(eq, %69, %70) : !s32i, !cir.bool loc(#loc433)
              %72 = cir.ternary(%71, true {
                %73 = cir.const #true loc(#loc290)
                cir.yield %73 : !cir.bool loc(#loc290)
              }, false {
                %73 = cir.const #false loc(#loc290)
                cir.yield %73 : !cir.bool loc(#loc290)
              }) : (!cir.bool) -> !cir.bool loc(#loc290)
              cir.yield %72 : !cir.bool loc(#loc290)
            }) : (!cir.bool) -> !cir.bool loc(#loc290)
            cir.if %68 {
              cir.break loc(#loc294)
            } loc(#loc434)
          } loc(#loc431)
          %54 = cir.const #cir.int<0> : !s32i loc(#loc295)
          %55 = cir.cast(integral, %54 : !s32i), !s8i loc(#loc295)
          %56 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc296)
          %57 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc297)
          %58 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %56 : !s32i), !cir.ptr<!s8i> loc(#loc297)
          cir.store %55, %58 : !s8i, !cir.ptr<!s8i> loc(#loc435)
          %59 = cir.get_global @strtoul : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i)>> loc(#loc298)
          %60 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc299)
          %61 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc300)
          %62 = cir.const #cir.int<0> : !s32i loc(#loc301)
          %63 = cir.call @strtoul(%60, %61, %62) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc298)
          cir.store %63, %0 : !u64i, !cir.ptr<!u64i> loc(#loc436)
          cir.yield loc(#loc219)
        } while {
          %16 = cir.const #cir.int<0> : !s32i loc(#loc304)
          %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc304)
          cir.condition(%17) loc(#loc304)
        } loc(#loc406)
      } loc(#loc406)
      cir.scope {
        %16 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc307)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc308)
        %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc308)
        %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc438)
        cir.if %19 {
          %20 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc310)
          %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc311)
        } loc(#loc439)
      } loc(#loc437)
      cir.scope {
        %16 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc314)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc315)
        %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc315)
        %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc441)
        cir.if %19 {
          %20 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc317)
          %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc318)
        } loc(#loc442)
      } loc(#loc440)
    } loc(#loc400)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!u64i)>>>, !cir.ptr<!cir.func<!void (!u64i)>> loc(#loc319)
    %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc320)
    cir.call %5(%6) : (!cir.ptr<!cir.func<!void (!u64i)>>, !u64i) -> () loc(#loc319)
    cir.return loc(#loc199)
  } loc(#loc396)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":0:0)
#loc1 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":51:1)
#loc2 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":51:86)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/netinet/in.h":404:1)
#loc6 = loc("/usr/include/netinet/in.h":405:40)
#loc7 = loc("/usr/include/sys/socket.h":112:1)
#loc8 = loc("/usr/include/sys/socket.h":113:6)
#loc9 = loc("/usr/include/sys/socket.h":296:1)
#loc10 = loc("/usr/include/sys/socket.h":296:39)
#loc11 = loc("/usr/include/sys/socket.h":306:1)
#loc12 = loc("/usr/include/sys/socket.h":307:38)
#loc13 = loc("/usr/include/sys/socket.h":145:1)
#loc14 = loc("/usr/include/sys/socket.h":145:68)
#loc15 = loc("/usr/include/stdlib.h":181:1)
#loc16 = loc("/usr/include/stdlib.h":183:14)
#loc17 = loc("/usr/include/unistd.h":358:1)
#loc18 = loc("/usr/include/unistd.h":358:27)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":53:1)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":131:1)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":55:5)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":55:12)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":57:5)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":57:32)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":59:12)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":59:5)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":60:5)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":128:5)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":65:9)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":65:13)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":66:9)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":66:28)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":67:9)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":67:31)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":68:9)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":68:31)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":69:9)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":69:41)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":70:9)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":113:17)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":80:35)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":80:44)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":80:57)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":80:28)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":80:13)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":80:68)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":81:13)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":84:13)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":81:17)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":81:33)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":82:13)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":83:17)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":85:20)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":85:21)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":85:30)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":85:33)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":85:47)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":85:13)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":85:48)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":86:34)
#loc61 = loc("/usr/include/netinet/in.h":249:5)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":86:13)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":87:39)
#loc64 = loc("/usr/include/netinet/in.h":251:20)
#loc65 = loc("/usr/include/netinet/in.h":33:15)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":87:13)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":88:38)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":88:32)
#loc69 = loc("/usr/include/netinet/in.h":250:15)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":88:13)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":88:46)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":89:13)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":92:13)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":89:22)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":89:54)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":89:55)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":89:64)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":89:78)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":89:17)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":89:84)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":90:13)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":91:17)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":93:13)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":96:13)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":93:24)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":93:38)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":93:17)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":93:57)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":94:13)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":95:17)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":97:35)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":97:49)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":97:55)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":97:28)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":97:13)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":97:59)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":98:13)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":101:13)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":98:17)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":98:33)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":99:13)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":100:17)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":103:31)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":103:45)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":103:58)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":103:76)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":103:79)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":103:26)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":103:13)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":103:80)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":104:13)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":107:13)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":104:17)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":104:31)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":104:44)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":104:47)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":104:61)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":105:13)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":106:17)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":109:39)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":109:25)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":109:13)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":111:20)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":111:28)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":111:41)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":111:47)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":111:13)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":111:48)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":113:16)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":114:9)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":117:9)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":114:13)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":114:29)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":115:9)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":116:26)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":116:13)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":118:9)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":121:9)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":118:13)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":118:29)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":119:9)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":120:26)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":120:13)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":130:5)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":130:13)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":232:1)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":236:1)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":234:5)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":234:13)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":235:5)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":235:13)
#loc152 = loc("/usr/include/stdlib.h":575:1)
#loc153 = loc("/usr/include/stdlib.h":575:41)
#loc154 = loc("/usr/include/time.h":76:1)
#loc155 = loc("/usr/include/time.h":76:38)
#loc156 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc157 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":252:15)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":254:15)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":257:15)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":259:15)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":247:1)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":262:1)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":248:1)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":250:27)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":250:22)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":250:5)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":252:5)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":253:5)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":253:70)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":254:5)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":257:5)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":258:5)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":258:69)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":259:5)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":261:12)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":261:5)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":138:1)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":138:90)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":140:1)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":149:1)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":142:5)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":142:12)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":143:5)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":143:32)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":145:12)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":145:5)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":147:12)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":147:5)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":148:5)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":148:13)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":152:1)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":152:90)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":154:1)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":230:1)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":156:5)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":156:12)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":157:5)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":157:32)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":159:12)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":159:5)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":160:5)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":228:5)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":165:9)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":165:13)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":166:9)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":166:28)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":167:9)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":167:31)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":168:9)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":168:31)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":169:9)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":169:41)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":170:9)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":213:17)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":180:35)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":180:44)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":180:57)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":180:28)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":180:13)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":180:68)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":181:13)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":184:13)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":181:17)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":181:33)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":182:13)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":183:17)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":185:20)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":185:21)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":185:30)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":185:33)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":185:47)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":185:13)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":185:48)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":186:34)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":186:13)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":187:39)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":187:13)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":188:38)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":188:32)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":188:13)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":188:46)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":189:13)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":192:13)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":189:22)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":189:54)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":189:55)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":189:64)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":189:78)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":189:17)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":189:84)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":190:13)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":191:17)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":193:13)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":196:13)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":193:24)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":193:38)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":193:17)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":193:57)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":194:13)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":195:17)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":197:35)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":197:49)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":197:55)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":197:28)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":197:13)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":197:59)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":198:13)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":201:13)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":198:17)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":198:33)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":199:13)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":200:17)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":203:31)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":203:45)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":203:58)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":203:76)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":203:79)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":203:26)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":203:13)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":203:80)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":204:13)
#loc287 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":207:13)
#loc288 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":204:17)
#loc289 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":204:31)
#loc290 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":204:44)
#loc291 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":204:47)
#loc292 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":204:61)
#loc293 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":205:13)
#loc294 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":206:17)
#loc295 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":209:39)
#loc296 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":209:25)
#loc297 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":209:13)
#loc298 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":211:20)
#loc299 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":211:28)
#loc300 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":211:41)
#loc301 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":211:47)
#loc302 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":211:13)
#loc303 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":211:48)
#loc304 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":213:16)
#loc305 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":214:9)
#loc306 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":217:9)
#loc307 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":214:13)
#loc308 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":214:29)
#loc309 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":215:9)
#loc310 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":216:26)
#loc311 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":216:13)
#loc312 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":218:9)
#loc313 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":221:9)
#loc314 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":218:13)
#loc315 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":218:29)
#loc316 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":219:9)
#loc317 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":220:26)
#loc318 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":220:13)
#loc319 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":229:5)
#loc320 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_listen_socket_65a.c":229:13)
#loc321 = loc(fused[#loc1, #loc2])
#loc322 = loc(fused[#loc3, #loc4])
#loc323 = loc(fused[#loc5, #loc6])
#loc324 = loc(fused[#loc7, #loc8])
#loc325 = loc(fused[#loc9, #loc10])
#loc326 = loc(fused[#loc11, #loc12])
#loc327 = loc(fused[#loc13, #loc14])
#loc328 = loc(fused[#loc15, #loc16])
#loc329 = loc(fused[#loc17, #loc18])
#loc330 = loc(fused[#loc19, #loc20])
#loc331 = loc(fused[#loc21, #loc22])
#loc332 = loc(fused[#loc23, #loc24])
#loc333 = loc(fused[#loc26, #loc25])
#loc334 = loc(fused[#loc27, #loc28])
#loc335 = loc(fused[#loc29, #loc30])
#loc336 = loc(fused[#loc31, #loc32])
#loc337 = loc(fused[#loc33, #loc34])
#loc338 = loc(fused[#loc35, #loc36])
#loc339 = loc(fused[#loc37, #loc38])
#loc340 = loc(fused[#loc39, #loc40])
#loc341 = loc(fused[#loc45, #loc46])
#loc342 = loc(fused[#loc47, #loc48])
#loc343 = loc(fused[#loc49, #loc50])
#loc344 = loc(fused[#loc51, #loc48])
#loc345 = loc(fused[#loc53, #loc54])
#loc346 = loc(fused[#loc56, #loc57])
#loc347 = loc(fused[#loc58, #loc59])
#loc348 = loc(fused[#loc62, #loc60])
#loc349 = loc(fused[#loc66, #loc63])
#loc350 = loc(fused[#loc70, #loc71])
#loc351 = loc(fused[#loc72, #loc73])
#loc352 = loc(fused[#loc75, #loc76])
#loc353 = loc(fused[#loc77, #loc78])
#loc354 = loc(fused[#loc79, #loc80])
#loc355 = loc(fused[#loc81, #loc73])
#loc356 = loc(fused[#loc83, #loc84])
#loc357 = loc(fused[#loc87, #loc88])
#loc358 = loc(fused[#loc89, #loc84])
#loc359 = loc(fused[#loc95, #loc96])
#loc360 = loc(fused[#loc97, #loc98])
#loc361 = loc(fused[#loc99, #loc100])
#loc362 = loc(fused[#loc101, #loc98])
#loc363 = loc(fused[#loc105, #loc106])
#loc364 = loc(fused[#loc109, #loc110])
#loc365 = loc(fused[#loc111, #loc112])
#loc366 = loc(fused[#loc113, #loc114])
#loc367 = loc(fused[#loc116, #loc117])
#loc368 = loc(fused[#loc118, #loc112])
#loc369 = loc(fused[#loc122, #loc120])
#loc370 = loc(fused[#loc127, #loc128])
#loc371 = loc(fused[#loc130, #loc131])
#loc372 = loc(fused[#loc132, #loc133])
#loc373 = loc(fused[#loc134, #loc131])
#loc374 = loc(fused[#loc137, #loc138])
#loc375 = loc(fused[#loc139, #loc140])
#loc376 = loc(fused[#loc141, #loc138])
#loc377 = loc(fused[#loc146, #loc147])
#loc378 = loc(fused[#loc148, #loc149])
#loc379 = loc(fused[#loc150, #loc151])
#loc380 = loc(fused[#loc152, #loc153])
#loc381 = loc(fused[#loc154, #loc155])
#loc382 = loc(fused[#loc156, #loc157])
#loc383 = loc(fused[#loc162, #loc163])
#loc386 = loc(fused[#loc173, #loc174])
#loc387 = loc(fused[#loc177, #loc178])
#loc388 = loc(fused[#loc181, #loc180])
#loc389 = loc(fused[#loc182, #loc183])
#loc390 = loc(fused[#loc184, #loc185])
#loc391 = loc(fused[#loc186, #loc187])
#loc392 = loc(fused[#loc188, #loc189])
#loc393 = loc(fused[#loc191, #loc190])
#loc394 = loc(fused[#loc193, #loc192])
#loc395 = loc(fused[#loc196, #loc197])
#loc396 = loc(fused[#loc198, #loc199])
#loc397 = loc(fused[#loc200, #loc201])
#loc398 = loc(fused[#loc202, #loc203])
#loc399 = loc(fused[#loc205, #loc204])
#loc400 = loc(fused[#loc206, #loc207])
#loc401 = loc(fused[#loc208, #loc209])
#loc402 = loc(fused[#loc210, #loc211])
#loc403 = loc(fused[#loc212, #loc213])
#loc404 = loc(fused[#loc214, #loc215])
#loc405 = loc(fused[#loc216, #loc217])
#loc406 = loc(fused[#loc218, #loc219])
#loc407 = loc(fused[#loc224, #loc225])
#loc408 = loc(fused[#loc226, #loc227])
#loc409 = loc(fused[#loc228, #loc229])
#loc410 = loc(fused[#loc230, #loc227])
#loc411 = loc(fused[#loc232, #loc233])
#loc412 = loc(fused[#loc235, #loc236])
#loc413 = loc(fused[#loc237, #loc238])
#loc414 = loc(fused[#loc240, #loc239])
#loc415 = loc(fused[#loc242, #loc241])
#loc416 = loc(fused[#loc245, #loc246])
#loc417 = loc(fused[#loc247, #loc248])
#loc418 = loc(fused[#loc250, #loc251])
#loc419 = loc(fused[#loc252, #loc253])
#loc420 = loc(fused[#loc254, #loc255])
#loc421 = loc(fused[#loc256, #loc248])
#loc422 = loc(fused[#loc258, #loc259])
#loc423 = loc(fused[#loc262, #loc263])
#loc424 = loc(fused[#loc264, #loc259])
#loc425 = loc(fused[#loc270, #loc271])
#loc426 = loc(fused[#loc272, #loc273])
#loc427 = loc(fused[#loc274, #loc275])
#loc428 = loc(fused[#loc276, #loc273])
#loc429 = loc(fused[#loc280, #loc281])
#loc430 = loc(fused[#loc284, #loc285])
#loc431 = loc(fused[#loc286, #loc287])
#loc432 = loc(fused[#loc288, #loc289])
#loc433 = loc(fused[#loc291, #loc292])
#loc434 = loc(fused[#loc293, #loc287])
#loc435 = loc(fused[#loc297, #loc295])
#loc436 = loc(fused[#loc302, #loc303])
#loc437 = loc(fused[#loc305, #loc306])
#loc438 = loc(fused[#loc307, #loc308])
#loc439 = loc(fused[#loc309, #loc306])
#loc440 = loc(fused[#loc312, #loc313])
#loc441 = loc(fused[#loc314, #loc315])
#loc442 = loc(fused[#loc316, #loc313])
