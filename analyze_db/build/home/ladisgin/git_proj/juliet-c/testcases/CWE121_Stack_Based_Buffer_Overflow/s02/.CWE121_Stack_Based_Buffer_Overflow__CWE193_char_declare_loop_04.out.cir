!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":140:10)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":140:14)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":140:20)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":140:32)
#loc217 = loc(fused[#loc73, #loc74])
#loc218 = loc(fused[#loc75, #loc76])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B2.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc187)
  cir.global "private" constant cir_private @__const.goodG2B1.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc188)
  cir.global "private" constant cir_private @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc189)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc190)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc191)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc189)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc193)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc194)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc195)
    %4 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc196)
    %5 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc197)
    cir.br ^bb1 loc(#loc198)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc24)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc199)
  ^bb2:  // pred: ^bb1
    %8 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc26)
    cir.store %8, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc200)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc28)
    %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc31)
    cir.store %10, %13 : !s8i, !cir.ptr<!s8i> loc(#loc201)
    cir.br ^bb3 loc(#loc23)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc23)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc202)
  ^bb5:  // pred: ^bb4
    %14 = cir.get_global @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc189)
    cir.copy %14 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc189)
    %15 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc34)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc35)
    %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc34)
    cir.store %17, %2 : !u64i, !cir.ptr<!u64i> loc(#loc203)
    cir.br ^bb6 loc(#loc204)
  ^bb6:  // pred: ^bb5
    %18 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc40)
    cir.store %19, %1 : !u64i, !cir.ptr<!u64i> loc(#loc205)
    cir.br ^bb7 loc(#loc204)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc42)
    %21 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc43)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc44)
    %24 = cir.binop(add, %21, %23) : !u64i loc(#loc206)
    %25 = cir.cmp(lt, %20, %24) : !u64i, !cir.bool loc(#loc207)
    cir.brcond %25 ^bb8, ^bb12 loc(#loc45)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc208)
  ^bb9:  // pred: ^bb8
    %26 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc47)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc48)
    %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !u64i), !cir.ptr<!s8i> loc(#loc48)
    %29 = cir.load %28 : !cir.ptr<!s8i>, !s8i loc(#loc48)
    %30 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
    %31 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc50)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %31 : !u64i), !cir.ptr<!s8i> loc(#loc51)
    cir.store %29, %32 : !s8i, !cir.ptr<!s8i> loc(#loc209)
    cir.br ^bb10 loc(#loc39)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc39)
  ^bb11:  // pred: ^bb10
    %33 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc53)
    %34 = cir.unary(inc, %33) : !u64i, !u64i loc(#loc54)
    cir.store %34, %1 : !u64i, !cir.ptr<!u64i> loc(#loc210)
    cir.br ^bb7 loc(#loc204)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc39)
  ^bb13:  // pred: ^bb12
    %35 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    cir.br ^bb14 loc(#loc33)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc12)
  } loc(#loc192)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc212)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc59)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc213)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc61)
    cir.return loc(#loc58)
  } loc(#loc211)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc214)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc215)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc70)
  cir.func @main(%arg0: !s32i loc(fused[#loc73, #loc74]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc75, #loc76])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc217)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc218)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc72)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc77)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc77)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc78)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc79)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc79)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc80)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc67)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04_good : !cir.ptr<!cir.func<!void ()>> loc(#loc219)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04_good() : () -> () loc(#loc82)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc68)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc69)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc220)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04_bad() : () -> () loc(#loc86)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc70)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc89)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc221)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc221)
    cir.return %17 : !s32i loc(#loc221)
  } loc(#loc216)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc91)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc188)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc223)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc224)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc225)
    %4 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc226)
    %5 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc227)
    cir.br ^bb1 loc(#loc228)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<0> : !s32i loc(#loc105)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc105)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc229)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc91)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc91)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc109)
    cir.br ^bb4 loc(#loc107)
  ^bb3:  // pred: ^bb1
    %10 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc110)
    cir.store %10, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc230)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc112)
    %13 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %15 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc115)
    cir.store %12, %15 : !s8i, !cir.ptr<!s8i> loc(#loc231)
    cir.br ^bb4 loc(#loc104)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc104)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc232)
  ^bb6:  // pred: ^bb5
    %16 = cir.get_global @__const.goodG2B1.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc188)
    cir.copy %16 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc188)
    %17 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc118)
    %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc119)
    %19 = cir.call @strlen(%18) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc118)
    cir.store %19, %2 : !u64i, !cir.ptr<!u64i> loc(#loc233)
    cir.br ^bb7 loc(#loc234)
  ^bb7:  // pred: ^bb6
    %20 = cir.const #cir.int<0> : !s32i loc(#loc124)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc124)
    cir.store %21, %1 : !u64i, !cir.ptr<!u64i> loc(#loc235)
    cir.br ^bb8 loc(#loc234)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %22 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc126)
    %23 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc127)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc128)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc128)
    %26 = cir.binop(add, %23, %25) : !u64i loc(#loc236)
    %27 = cir.cmp(lt, %22, %26) : !u64i, !cir.bool loc(#loc237)
    cir.brcond %27 ^bb9, ^bb13 loc(#loc129)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc238)
  ^bb10:  // pred: ^bb9
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc131)
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc132)
    %30 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %28 : !u64i), !cir.ptr<!s8i> loc(#loc132)
    %31 = cir.load %30 : !cir.ptr<!s8i>, !s8i loc(#loc132)
    %32 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
    %33 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc134)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %33 : !u64i), !cir.ptr<!s8i> loc(#loc135)
    cir.store %31, %34 : !s8i, !cir.ptr<!s8i> loc(#loc239)
    cir.br ^bb11 loc(#loc123)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc123)
  ^bb12:  // pred: ^bb11
    %35 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc137)
    %36 = cir.unary(inc, %35) : !u64i, !u64i loc(#loc138)
    cir.store %36, %1 : !u64i, !cir.ptr<!u64i> loc(#loc240)
    cir.br ^bb8 loc(#loc234)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc123)
  ^bb14:  // pred: ^bb13
    %37 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
    cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc140)
    cir.br ^bb15 loc(#loc117)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc93)
  } loc(#loc222)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc187)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc242)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc243)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc244)
    %4 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc245)
    %5 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc246)
    cir.br ^bb1 loc(#loc247)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<1> : !s32i loc(#loc154)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc154)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc248)
  ^bb2:  // pred: ^bb1
    %8 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc156)
    cir.store %8, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc249)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc158)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc158)
    %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc160)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc161)
    cir.store %10, %13 : !s8i, !cir.ptr<!s8i> loc(#loc250)
    cir.br ^bb3 loc(#loc153)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc153)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc251)
  ^bb5:  // pred: ^bb4
    %14 = cir.get_global @__const.goodG2B2.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc187)
    cir.copy %14 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc187)
    %15 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc164)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc165)
    %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc164)
    cir.store %17, %2 : !u64i, !cir.ptr<!u64i> loc(#loc252)
    cir.br ^bb6 loc(#loc253)
  ^bb6:  // pred: ^bb5
    %18 = cir.const #cir.int<0> : !s32i loc(#loc170)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc170)
    cir.store %19, %1 : !u64i, !cir.ptr<!u64i> loc(#loc254)
    cir.br ^bb7 loc(#loc253)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc172)
    %21 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc173)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc174)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc174)
    %24 = cir.binop(add, %21, %23) : !u64i loc(#loc255)
    %25 = cir.cmp(lt, %20, %24) : !u64i, !cir.bool loc(#loc256)
    cir.brcond %25 ^bb8, ^bb12 loc(#loc175)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc257)
  ^bb9:  // pred: ^bb8
    %26 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc177)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc178)
    %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !u64i), !cir.ptr<!s8i> loc(#loc178)
    %29 = cir.load %28 : !cir.ptr<!s8i>, !s8i loc(#loc178)
    %30 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
    %31 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc180)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s8i>, %31 : !u64i), !cir.ptr<!s8i> loc(#loc181)
    cir.store %29, %32 : !s8i, !cir.ptr<!s8i> loc(#loc258)
    cir.br ^bb10 loc(#loc169)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc169)
  ^bb11:  // pred: ^bb10
    %33 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc183)
    %34 = cir.unary(inc, %33) : !u64i, !u64i loc(#loc184)
    cir.store %34, %1 : !u64i, !cir.ptr<!u64i> loc(#loc259)
    cir.br ^bb7 loc(#loc253)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc169)
  ^bb13:  // pred: ^bb12
    %35 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc185)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc186)
    cir.br ^bb14 loc(#loc163)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc142)
  } loc(#loc241)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":111:9)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":111:29)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":84:9)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":84:29)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":48:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":48:29)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":35:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":59:1)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":49:9)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":49:16)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":49:19)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":37:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":37:12)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":38:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":38:26)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":39:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":39:29)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":40:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":46:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":40:8)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":41:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":44:16)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":44:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":45:19)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":45:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":45:14)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":45:15)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":47:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":58:5)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":50:21)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":50:28)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":50:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":50:34)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":53:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":56:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":53:18)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":53:14)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":53:21)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":53:25)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":53:37)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":53:23)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":54:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":55:30)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":55:23)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":55:13)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":55:18)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":55:19)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":55:31)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":53:41)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":53:40)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":57:19)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":57:9)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":124:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":128:1)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":126:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":126:14)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":127:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":127:14)
#loc63 = loc("/usr/include/stdlib.h":575:1)
#loc64 = loc("/usr/include/stdlib.h":575:41)
#loc65 = loc("/usr/include/time.h":76:1)
#loc66 = loc("/usr/include/time.h":76:38)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":145:15)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":147:15)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":150:15)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":152:15)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":140:1)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":155:1)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":141:1)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":143:27)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":143:22)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":143:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":145:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":146:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":146:74)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":147:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":150:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":151:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":151:73)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":152:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":154:12)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":154:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":74:19)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":66:1)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":95:1)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":85:9)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":85:16)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":85:19)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":68:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":68:12)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":69:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":69:26)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":70:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":70:29)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":71:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":82:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":71:8)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":72:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":75:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":77:5)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":74:9)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":80:16)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":80:9)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":81:19)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":81:9)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":81:14)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":81:15)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":83:5)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":94:5)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":86:21)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":86:28)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":86:9)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":86:34)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":89:9)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":92:9)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":89:18)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":89:14)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":89:21)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":89:25)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":89:37)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":89:23)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":90:9)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":91:30)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":91:23)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":91:13)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":91:18)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":91:19)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":91:31)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":89:41)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":89:40)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":93:19)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":93:9)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":98:1)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":122:1)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":112:9)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":112:16)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":112:19)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":100:5)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":100:12)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":101:5)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":101:26)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":102:5)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":102:29)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":103:5)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":109:5)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":103:8)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":104:5)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":107:16)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":107:9)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":108:19)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":108:9)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":108:14)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":108:15)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":110:5)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":121:5)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":113:21)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":113:28)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":113:9)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":113:34)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":116:9)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":119:9)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":116:18)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":116:14)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":116:21)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":116:25)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":116:37)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":116:23)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":117:9)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":118:30)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":118:23)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":118:13)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":118:18)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":118:19)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":118:31)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":116:41)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":116:40)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":120:19)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_loop_04.c":120:9)
#loc187 = loc(fused[#loc1, #loc2])
#loc188 = loc(fused[#loc3, #loc4])
#loc189 = loc(fused[#loc5, #loc6])
#loc190 = loc(fused[#loc7, #loc8])
#loc191 = loc(fused[#loc9, #loc10])
#loc192 = loc(fused[#loc11, #loc12])
#loc193 = loc(fused[#loc13, #loc14])
#loc194 = loc(fused[#loc13, #loc15])
#loc195 = loc(fused[#loc16, #loc17])
#loc196 = loc(fused[#loc18, #loc19])
#loc197 = loc(fused[#loc20, #loc21])
#loc198 = loc(fused[#loc22, #loc23])
#loc199 = loc(fused[#loc25, #loc23])
#loc200 = loc(fused[#loc27, #loc26])
#loc201 = loc(fused[#loc29, #loc28])
#loc202 = loc(fused[#loc32, #loc33])
#loc203 = loc(fused[#loc36, #loc37])
#loc204 = loc(fused[#loc38, #loc39])
#loc205 = loc(fused[#loc41, #loc40])
#loc206 = loc(fused[#loc43, #loc44])
#loc207 = loc(fused[#loc42, #loc44])
#loc208 = loc(fused[#loc46, #loc39])
#loc209 = loc(fused[#loc49, #loc52])
#loc210 = loc(fused[#loc54, #loc53])
#loc211 = loc(fused[#loc57, #loc58])
#loc212 = loc(fused[#loc59, #loc60])
#loc213 = loc(fused[#loc61, #loc62])
#loc214 = loc(fused[#loc63, #loc64])
#loc215 = loc(fused[#loc65, #loc66])
#loc216 = loc(fused[#loc71, #loc72])
#loc219 = loc(fused[#loc82, #loc83])
#loc220 = loc(fused[#loc86, #loc87])
#loc221 = loc(fused[#loc90, #loc89])
#loc222 = loc(fused[#loc92, #loc93])
#loc223 = loc(fused[#loc94, #loc95])
#loc224 = loc(fused[#loc94, #loc96])
#loc225 = loc(fused[#loc97, #loc98])
#loc226 = loc(fused[#loc99, #loc100])
#loc227 = loc(fused[#loc101, #loc102])
#loc228 = loc(fused[#loc103, #loc104])
#loc229 = loc(fused[#loc106, #loc107, #loc108, #loc104])
#loc230 = loc(fused[#loc111, #loc110])
#loc231 = loc(fused[#loc113, #loc112])
#loc232 = loc(fused[#loc116, #loc117])
#loc233 = loc(fused[#loc120, #loc121])
#loc234 = loc(fused[#loc122, #loc123])
#loc235 = loc(fused[#loc125, #loc124])
#loc236 = loc(fused[#loc127, #loc128])
#loc237 = loc(fused[#loc126, #loc128])
#loc238 = loc(fused[#loc130, #loc123])
#loc239 = loc(fused[#loc133, #loc136])
#loc240 = loc(fused[#loc138, #loc137])
#loc241 = loc(fused[#loc141, #loc142])
#loc242 = loc(fused[#loc143, #loc144])
#loc243 = loc(fused[#loc143, #loc145])
#loc244 = loc(fused[#loc146, #loc147])
#loc245 = loc(fused[#loc148, #loc149])
#loc246 = loc(fused[#loc150, #loc151])
#loc247 = loc(fused[#loc152, #loc153])
#loc248 = loc(fused[#loc155, #loc153])
#loc249 = loc(fused[#loc157, #loc156])
#loc250 = loc(fused[#loc159, #loc158])
#loc251 = loc(fused[#loc162, #loc163])
#loc252 = loc(fused[#loc166, #loc167])
#loc253 = loc(fused[#loc168, #loc169])
#loc254 = loc(fused[#loc171, #loc170])
#loc255 = loc(fused[#loc173, #loc174])
#loc256 = loc(fused[#loc172, #loc174])
#loc257 = loc(fused[#loc176, #loc169])
#loc258 = loc(fused[#loc179, #loc182])
#loc259 = loc(fused[#loc184, #loc183])
