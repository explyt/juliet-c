!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc8 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":22:56)
#loc9 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":22:70)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":46:60)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":46:74)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":65:60)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":65:74)
#true = #cir.bool<true> : !cir.bool
#loc91 = loc(fused[#loc8, #loc9])
#loc99 = loc(fused[#loc33, #loc34])
#loc107 = loc(fused[#loc60, #loc61])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fscanf_66b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printIntLine(!s32i) loc(#loc88)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc89)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc5)
  cir.func  @CWE126_Buffer_Overread__CWE129_fscanf_66b_badSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc8, #loc9])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc91)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc92)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc12)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc13)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc14)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!s32i>, %3 : !s32i), !cir.ptr<!s32i> loc(#loc11)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc13)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc92)
    cir.scope {
      %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc94)
      %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc94)
      cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc94)
      cir.scope {
        %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc21)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc22)
        %10 = cir.cmp(ge, %8, %9) : !s32i, !s32i loc(#loc96)
        %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc23)
        cir.if %11 {
          %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc27)
          %13 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc28)
          %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc28)
          %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc28)
          cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc29)
        } else {
          %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc5)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc5)
          cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc30)
        } loc(#loc97)
      } loc(#loc95)
    } loc(#loc93)
    cir.return loc(#loc7)
  } loc(#loc90)
  cir.func  @CWE126_Buffer_Overread__CWE129_fscanf_66b_goodG2BSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc33, #loc34])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc99)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc100)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc37)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc38)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc39)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!s32i>, %3 : !s32i), !cir.ptr<!s32i> loc(#loc36)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc100)
    cir.scope {
      %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc102)
      %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc102)
      cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc102)
      cir.scope {
        %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc46)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc47)
        %10 = cir.cmp(ge, %8, %9) : !s32i, !s32i loc(#loc104)
        %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc48)
        cir.if %11 {
          %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc52)
          %13 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc53)
          %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc53)
          %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc53)
          cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc54)
        } else {
          %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc55)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc55)
          cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc56)
        } loc(#loc105)
      } loc(#loc103)
    } loc(#loc101)
    cir.return loc(#loc32)
  } loc(#loc98)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc57)
  cir.func  @CWE126_Buffer_Overread__CWE129_fscanf_66b_goodB2GSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc60, #loc61])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc107)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc108)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc64)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc65)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc66)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!s32i>, %3 : !s32i), !cir.ptr<!s32i> loc(#loc63)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc108)
    cir.scope {
      %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc110)
      %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc110)
      cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc110)
      cir.scope {
        %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc73)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc74)
        %10 = cir.cmp(ge, %8, %9) : !s32i, !s32i loc(#loc112)
        %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc75)
        %12 = cir.ternary(%11, true {
          %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc77)
          %14 = cir.const #cir.int<10> : !s32i loc(#loc78)
          %15 = cir.cmp(lt, %13, %14) : !s32i, !s32i loc(#loc113)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc80)
          %17 = cir.ternary(%16, true {
            %18 = cir.const #true loc(#loc76)
            cir.yield %18 : !cir.bool loc(#loc76)
          }, false {
            %18 = cir.const #false loc(#loc76)
            cir.yield %18 : !cir.bool loc(#loc76)
          }) : (!cir.bool) -> !cir.bool loc(#loc76)
          cir.yield %17 : !cir.bool loc(#loc76)
        }, false {
          %13 = cir.const #false loc(#loc76)
          cir.yield %13 : !cir.bool loc(#loc76)
        }) : (!cir.bool) -> !cir.bool loc(#loc76)
        cir.if %12 {
          %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc84)
          %14 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc85)
          %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc85)
          %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc85)
          cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc86)
        } else {
          %13 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc57)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc57)
          cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc87)
        } loc(#loc114)
      } loc(#loc111)
    } loc(#loc109)
    cir.return loc(#loc59)
  } loc(#loc106)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fscanf_66b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":36:23)
#loc6 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":22:1)
#loc7 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":39:1)
#loc10 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":25:5)
#loc11 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":25:27)
#loc12 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":23:1)
#loc13 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":25:16)
#loc14 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":25:26)
#loc15 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":26:5)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":38:5)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":27:9)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":27:30)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":30:9)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":37:9)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":30:13)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":30:21)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":30:18)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":31:9)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":33:9)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":35:9)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":32:33)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":32:26)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":32:13)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":36:13)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":46:1)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":62:1)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":48:5)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":48:27)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":47:1)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":48:16)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":48:26)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":49:5)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":61:5)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":50:9)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":50:30)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":53:9)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":60:9)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":53:13)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":53:21)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":53:18)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":54:9)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":56:9)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":58:9)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":55:33)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":55:26)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":55:13)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":59:23)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":59:13)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":77:23)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":65:1)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":80:1)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":67:5)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":67:27)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":66:1)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":67:16)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":67:26)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":68:5)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":79:5)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":69:9)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":69:30)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":71:9)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":78:9)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":71:13)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":71:21)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":71:18)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":71:23)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":71:26)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":71:34)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":71:36)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":71:31)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":72:9)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":74:9)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":76:9)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":73:33)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":73:26)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":73:13)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_fscanf_66b.c":77:13)
#loc88 = loc(fused[#loc1, #loc2])
#loc89 = loc(fused[#loc3, #loc4])
#loc90 = loc(fused[#loc6, #loc7])
#loc92 = loc(fused[#loc10, #loc11])
#loc93 = loc(fused[#loc15, #loc16])
#loc94 = loc(fused[#loc17, #loc18])
#loc95 = loc(fused[#loc19, #loc20])
#loc96 = loc(fused[#loc21, #loc22])
#loc97 = loc(fused[#loc24, #loc25, #loc26, #loc20])
#loc98 = loc(fused[#loc31, #loc32])
#loc100 = loc(fused[#loc35, #loc36])
#loc101 = loc(fused[#loc40, #loc41])
#loc102 = loc(fused[#loc42, #loc43])
#loc103 = loc(fused[#loc44, #loc45])
#loc104 = loc(fused[#loc46, #loc47])
#loc105 = loc(fused[#loc49, #loc50, #loc51, #loc45])
#loc106 = loc(fused[#loc58, #loc59])
#loc108 = loc(fused[#loc62, #loc63])
#loc109 = loc(fused[#loc67, #loc68])
#loc110 = loc(fused[#loc69, #loc70])
#loc111 = loc(fused[#loc71, #loc72])
#loc112 = loc(fused[#loc73, #loc74])
#loc113 = loc(fused[#loc77, #loc79])
#loc114 = loc(fused[#loc81, #loc82, #loc83, #loc72])
