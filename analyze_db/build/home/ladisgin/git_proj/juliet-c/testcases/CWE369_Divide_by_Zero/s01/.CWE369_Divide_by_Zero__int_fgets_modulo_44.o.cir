!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc5 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":24:21)
#loc6 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":24:25)
#loc58 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":59:25)
#loc59 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":59:29)
#loc80 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":77:25)
#loc81 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":77:29)
#loc127 = loc(fused[#loc5, #loc6])
#loc147 = loc(fused[#loc58, #loc59])
#loc155 = loc(fused[#loc80, #loc81])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_modulo_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc125)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc127)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc7)
    %1 = cir.const #cir.int<100> : !s32i loc(#loc8)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc9)
    %3 = cir.binop(rem, %1, %2) : !s32i loc(#loc128)
    cir.call @printIntLine(%3) : (!s32i) -> () loc(#loc10)
    cir.return loc(#loc4)
  } loc(#loc126)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc129)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc130)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc131)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc132)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc19)
  cir.func no_proto @CWE369_Divide_by_Zero__int_fgets_modulo_44_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc134)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc135)
    %2 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc136)
    %3 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc27)
    cir.store %3, %2 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc136)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc29)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc137)
    cir.br ^bb1 loc(#loc138)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc134)
    cir.store %6, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc134)
    cir.br ^bb2 loc(#loc139)
  ^bb2:  // pred: ^bb1
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc35)
    %8 = cir.const #cir.int<3> : !s32i loc(#loc36)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc36)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc36)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc36)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc36)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc36)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc36)
    %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc36)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc130)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc37)
    %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc38)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc39)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc39)
    %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc140)
    cir.brcond %21 ^bb3, ^bb4 loc(#loc141)
  ^bb3:  // pred: ^bb2
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc43)
    %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc44)
    cir.store %23, %1 : !s32i, !cir.ptr<!s32i> loc(#loc142)
    cir.br ^bb5 loc(#loc41)
  ^bb4:  // pred: ^bb2
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc19)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc19)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc47)
    cir.br ^bb5 loc(#loc34)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc34)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc32)
  ^bb7:  // pred: ^bb6
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc48)
    %27 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc49)
    cir.call %26(%27) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc48)
    cir.return loc(#loc21)
  } loc(#loc133)
  cir.func no_proto @CWE369_Divide_by_Zero__int_fgets_modulo_44_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc144)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc52)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc145)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    cir.return loc(#loc51)
  } loc(#loc143)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc58, #loc59])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc147)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc60)
    %1 = cir.const #cir.int<100> : !s32i loc(#loc61)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    %3 = cir.binop(rem, %1, %2) : !s32i loc(#loc148)
    cir.call @printIntLine(%3) : (!s32i) -> () loc(#loc63)
    cir.return loc(#loc57)
  } loc(#loc146)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc150)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc151)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc69)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc151)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc70)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc71)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    %5 = cir.const #cir.int<7> : !s32i loc(#loc73)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc153)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc75)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc76)
    cir.call %6(%7) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc75)
    cir.return loc(#loc65)
  } loc(#loc149)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc77)
  cir.func internal private @goodB2GSink(%arg0: !s32i loc(fused[#loc80, #loc81])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc155)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc82)
    cir.br ^bb1 loc(#loc156)
  ^bb1:  // pred: ^bb0
    %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc86)
    %3 = cir.cmp(ne, %1, %2) : !s32i, !cir.bool loc(#loc157)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc158)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<100> : !s32i loc(#loc90)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    %6 = cir.binop(rem, %4, %5) : !s32i loc(#loc159)
    cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc92)
    cir.br ^bb4 loc(#loc88)
  ^bb3:  // pred: ^bb1
    %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc77)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    cir.br ^bb4 loc(#loc84)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc84)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc79)
  } loc(#loc154)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc161)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc162)
    %2 = cir.alloca !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc163)
    %3 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc101)
    cir.store %3, %2 : !cir.ptr<!cir.func<!void (!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>> loc(#loc163)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc103)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    cir.br ^bb1 loc(#loc165)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc161)
    cir.store %6, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc161)
    cir.br ^bb2 loc(#loc166)
  ^bb2:  // pred: ^bb1
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc109)
    %8 = cir.const #cir.int<3> : !s32i loc(#loc110)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc110)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc110)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc110)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc110)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc110)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc110)
    %15 = cir.cast(integral, %14 : !u64i), !s32i loc(#loc110)
    %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc130)
    %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc111)
    %18 = cir.call @fgets(%7, %15, %17) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc112)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc113)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc113)
    %21 = cir.cmp(ne, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc167)
    cir.brcond %21 ^bb3, ^bb4 loc(#loc168)
  ^bb3:  // pred: ^bb2
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc117)
    %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc118)
    cir.store %23, %1 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    cir.br ^bb5 loc(#loc115)
  ^bb4:  // pred: ^bb2
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc121)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc121)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc122)
    cir.br ^bb5 loc(#loc108)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc108)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc106)
  ^bb7:  // pred: ^bb6
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.func<!void (!s32i)>>>, !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc123)
    %27 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    cir.call %26(%27) : (!cir.ptr<!cir.func<!void (!s32i)>>, !s32i) -> () loc(#loc123)
    cir.return loc(#loc95)
  } loc(#loc160)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_modulo_44.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":24:1)
#loc4 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":28:1)
#loc7 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":25:1)
#loc8 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":27:18)
#loc9 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":27:24)
#loc10 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":27:5)
#loc11 = loc("/usr/include/stdio.h":654:1)
#loc12 = loc("/usr/include/stdio.h":655:59)
#loc13 = loc("/usr/include/stdio.h":149:1)
#loc14 = loc("/usr/include/stdio.h":149:14)
#loc15 = loc("/usr/include/stdlib.h":105:1)
#loc16 = loc("/usr/include/stdlib.h":106:33)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc19 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":47:23)
#loc20 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":30:1)
#loc21 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":52:1)
#loc22 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":38:9)
#loc23 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":38:45)
#loc24 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":32:5)
#loc25 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":32:9)
#loc26 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":34:5)
#loc27 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":34:29)
#loc28 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":36:13)
#loc29 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":36:12)
#loc30 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":36:5)
#loc31 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":37:5)
#loc32 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":49:5)
#loc33 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":40:9)
#loc34 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":48:9)
#loc35 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":40:19)
#loc36 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":40:32)
#loc37 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":40:49)
#loc38 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":40:13)
#loc39 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":40:59)
#loc40 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":41:9)
#loc41 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":44:9)
#loc42 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":46:9)
#loc43 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":43:25)
#loc44 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":43:20)
#loc45 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":43:13)
#loc46 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":43:36)
#loc47 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":47:13)
#loc48 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":51:5)
#loc49 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":51:13)
#loc50 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":112:1)
#loc51 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":116:1)
#loc52 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":114:5)
#loc53 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":114:13)
#loc54 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":115:5)
#loc55 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":115:13)
#loc56 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":59:1)
#loc57 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":63:1)
#loc60 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":60:1)
#loc61 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":62:18)
#loc62 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":62:24)
#loc63 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":62:5)
#loc64 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":65:1)
#loc65 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":74:1)
#loc66 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":67:5)
#loc67 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":67:9)
#loc68 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":68:5)
#loc69 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":68:29)
#loc70 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":70:13)
#loc71 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":70:12)
#loc72 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":70:5)
#loc73 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":72:12)
#loc74 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":72:5)
#loc75 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":73:5)
#loc76 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":73:13)
#loc77 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":86:19)
#loc78 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":77:1)
#loc79 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":88:1)
#loc82 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":78:1)
#loc83 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":80:5)
#loc84 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":87:5)
#loc85 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":80:9)
#loc86 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":80:17)
#loc87 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":81:5)
#loc88 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":83:5)
#loc89 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":85:5)
#loc90 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":82:22)
#loc91 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":82:28)
#loc92 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":82:9)
#loc93 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":86:9)
#loc94 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":90:1)
#loc95 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":110:1)
#loc96 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":97:9)
#loc97 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":97:45)
#loc98 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":92:5)
#loc99 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":92:9)
#loc100 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":93:5)
#loc101 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":93:29)
#loc102 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":95:13)
#loc103 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":95:12)
#loc104 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":95:5)
#loc105 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":96:5)
#loc106 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":108:5)
#loc107 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":99:9)
#loc108 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":107:9)
#loc109 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":99:19)
#loc110 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":99:32)
#loc111 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":99:49)
#loc112 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":99:13)
#loc113 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":99:59)
#loc114 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":100:9)
#loc115 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":103:9)
#loc116 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":105:9)
#loc117 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":102:25)
#loc118 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":102:20)
#loc119 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":102:13)
#loc120 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":102:36)
#loc121 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":106:23)
#loc122 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":106:13)
#loc123 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":109:5)
#loc124 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_44.c":109:13)
#loc125 = loc(fused[#loc1, #loc2])
#loc126 = loc(fused[#loc3, #loc4])
#loc128 = loc(fused[#loc8, #loc9])
#loc129 = loc(fused[#loc11, #loc12])
#loc130 = loc(fused[#loc13, #loc14])
#loc131 = loc(fused[#loc15, #loc16])
#loc132 = loc(fused[#loc17, #loc18])
#loc133 = loc(fused[#loc20, #loc21])
#loc134 = loc(fused[#loc22, #loc23])
#loc135 = loc(fused[#loc24, #loc25])
#loc136 = loc(fused[#loc26, #loc27])
#loc137 = loc(fused[#loc30, #loc28])
#loc138 = loc(fused[#loc31, #loc32])
#loc139 = loc(fused[#loc33, #loc34])
#loc140 = loc(fused[#loc38, #loc39])
#loc141 = loc(fused[#loc40, #loc41, #loc42, #loc34])
#loc142 = loc(fused[#loc45, #loc46])
#loc143 = loc(fused[#loc50, #loc51])
#loc144 = loc(fused[#loc52, #loc53])
#loc145 = loc(fused[#loc54, #loc55])
#loc146 = loc(fused[#loc56, #loc57])
#loc148 = loc(fused[#loc61, #loc62])
#loc149 = loc(fused[#loc64, #loc65])
#loc150 = loc(fused[#loc66, #loc67])
#loc151 = loc(fused[#loc68, #loc69])
#loc152 = loc(fused[#loc72, #loc70])
#loc153 = loc(fused[#loc74, #loc73])
#loc154 = loc(fused[#loc78, #loc79])
#loc156 = loc(fused[#loc83, #loc84])
#loc157 = loc(fused[#loc85, #loc86])
#loc158 = loc(fused[#loc87, #loc88, #loc89, #loc84])
#loc159 = loc(fused[#loc90, #loc91])
#loc160 = loc(fused[#loc94, #loc95])
#loc161 = loc(fused[#loc96, #loc97])
#loc162 = loc(fused[#loc98, #loc99])
#loc163 = loc(fused[#loc100, #loc101])
#loc164 = loc(fused[#loc104, #loc102])
#loc165 = loc(fused[#loc105, #loc106])
#loc166 = loc(fused[#loc107, #loc108])
#loc167 = loc(fused[#loc112, #loc113])
#loc168 = loc(fused[#loc114, #loc115, #loc116, #loc108])
#loc169 = loc(fused[#loc119, #loc120])
