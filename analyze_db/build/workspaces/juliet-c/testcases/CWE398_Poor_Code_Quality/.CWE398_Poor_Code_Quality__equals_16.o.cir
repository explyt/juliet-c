!s32i = !cir.int<s, 32>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE398_Poor_Code_Quality/CWE398_Poor_Code_Quality__equals_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc42)
  cir.func no_proto @CWE398_Poor_Code_Quality__equals_16_bad() extra(#fn_attr) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc7)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc7)
        cir.condition(%1) loc(#loc7)
      } do {
        cir.scope {
          cir.scope {
            %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intOne", init] {alignment = 4 : i64} loc(#loc47)
            %1 = cir.const #cir.int<1> : !s32i loc(#loc12)
            cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc47)
            %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc13)
            cir.call @printIntLine(%2) : (!s32i) -> () loc(#loc14)
            %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc15)
            cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc48)
            %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc17)
            cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc18)
          } loc(#loc46)
          cir.break loc(#loc19)
        } loc(#loc45)
        cir.yield loc(#loc6)
      } loc(#loc44)
    } loc(#loc44)
    cir.return loc(#loc4)
  } loc(#loc43)
  cir.func no_proto @CWE398_Poor_Code_Quality__equals_16_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc50)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc22)
    cir.return loc(#loc21)
  } loc(#loc49)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc28)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc28)
        cir.condition(%1) loc(#loc28)
      } do {
        cir.scope {
          cir.scope {
            %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intOne", init] {alignment = 4 : i64} loc(#loc55)
            %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intFive", init] {alignment = 4 : i64} loc(#loc56)
            %2 = cir.const #cir.int<1> : !s32i loc(#loc33)
            cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc55)
            %3 = cir.const #cir.int<5> : !s32i loc(#loc34)
            cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc56)
            %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc35)
            cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc36)
            %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc37)
            cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc57)
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc39)
            cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc40)
          } loc(#loc54)
          cir.break loc(#loc41)
        } loc(#loc53)
        cir.yield loc(#loc27)
      } loc(#loc52)
    } loc(#loc52)
    cir.return loc(#loc25)
  } loc(#loc51)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE398_Poor_Code_Quality/CWE398_Poor_Code_Quality__equals_16.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE398_Poor_Code_Quality__equals_16.c":20:1)
#loc4 = loc("CWE398_Poor_Code_Quality__equals_16.c":33:1)
#loc5 = loc("CWE398_Poor_Code_Quality__equals_16.c":22:5)
#loc6 = loc("CWE398_Poor_Code_Quality__equals_16.c":32:5)
#loc7 = loc("CWE398_Poor_Code_Quality__equals_16.c":22:11)
#loc8 = loc("CWE398_Poor_Code_Quality__equals_16.c":23:5)
#loc9 = loc("CWE398_Poor_Code_Quality__equals_16.c":24:9)
#loc10 = loc("CWE398_Poor_Code_Quality__equals_16.c":30:9)
#loc11 = loc("CWE398_Poor_Code_Quality__equals_16.c":25:13)
#loc12 = loc("CWE398_Poor_Code_Quality__equals_16.c":25:26)
#loc13 = loc("CWE398_Poor_Code_Quality__equals_16.c":26:26)
#loc14 = loc("CWE398_Poor_Code_Quality__equals_16.c":26:13)
#loc15 = loc("CWE398_Poor_Code_Quality__equals_16.c":28:22)
#loc16 = loc("CWE398_Poor_Code_Quality__equals_16.c":28:13)
#loc17 = loc("CWE398_Poor_Code_Quality__equals_16.c":29:26)
#loc18 = loc("CWE398_Poor_Code_Quality__equals_16.c":29:13)
#loc19 = loc("CWE398_Poor_Code_Quality__equals_16.c":31:9)
#loc20 = loc("CWE398_Poor_Code_Quality__equals_16.c":55:1)
#loc21 = loc("CWE398_Poor_Code_Quality__equals_16.c":58:1)
#loc22 = loc("CWE398_Poor_Code_Quality__equals_16.c":57:5)
#loc23 = loc("CWE398_Poor_Code_Quality__equals_16.c":57:11)
#loc24 = loc("CWE398_Poor_Code_Quality__equals_16.c":40:1)
#loc25 = loc("CWE398_Poor_Code_Quality__equals_16.c":53:1)
#loc26 = loc("CWE398_Poor_Code_Quality__equals_16.c":42:5)
#loc27 = loc("CWE398_Poor_Code_Quality__equals_16.c":52:5)
#loc28 = loc("CWE398_Poor_Code_Quality__equals_16.c":42:11)
#loc29 = loc("CWE398_Poor_Code_Quality__equals_16.c":43:5)
#loc30 = loc("CWE398_Poor_Code_Quality__equals_16.c":44:9)
#loc31 = loc("CWE398_Poor_Code_Quality__equals_16.c":50:9)
#loc32 = loc("CWE398_Poor_Code_Quality__equals_16.c":45:13)
#loc33 = loc("CWE398_Poor_Code_Quality__equals_16.c":45:26)
#loc34 = loc("CWE398_Poor_Code_Quality__equals_16.c":45:39)
#loc35 = loc("CWE398_Poor_Code_Quality__equals_16.c":46:26)
#loc36 = loc("CWE398_Poor_Code_Quality__equals_16.c":46:13)
#loc37 = loc("CWE398_Poor_Code_Quality__equals_16.c":48:22)
#loc38 = loc("CWE398_Poor_Code_Quality__equals_16.c":48:13)
#loc39 = loc("CWE398_Poor_Code_Quality__equals_16.c":49:26)
#loc40 = loc("CWE398_Poor_Code_Quality__equals_16.c":49:13)
#loc41 = loc("CWE398_Poor_Code_Quality__equals_16.c":51:9)
#loc42 = loc(fused[#loc1, #loc2])
#loc43 = loc(fused[#loc3, #loc4])
#loc44 = loc(fused[#loc5, #loc6])
#loc45 = loc(fused[#loc8, #loc6])
#loc46 = loc(fused[#loc9, #loc10])
#loc47 = loc(fused[#loc11, #loc12])
#loc48 = loc(fused[#loc16, #loc15])
#loc49 = loc(fused[#loc20, #loc21])
#loc50 = loc(fused[#loc22, #loc23])
#loc51 = loc(fused[#loc24, #loc25])
#loc52 = loc(fused[#loc26, #loc27])
#loc53 = loc(fused[#loc29, #loc27])
#loc54 = loc(fused[#loc30, #loc31])
#loc55 = loc(fused[#loc32, #loc33])
#loc56 = loc(fused[#loc32, #loc34])
#loc57 = loc(fused[#loc38, #loc37])
