!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE467_Use_of_sizeof_on_Pointer_Type/CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc133)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc134)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc135)
  cir.func private @printShortLine(!s16i) loc(#loc136)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc137)
  cir.func no_proto @CWE467_Use_of_sizeof_on_Pointer_Type__short_12_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc140)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc140)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc15)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc15)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>>, ["badShort", init] {alignment = 8 : i64} loc(#loc143)
          %5 = cir.const #cir.ptr<null> : !cir.ptr<!s16i> loc(#loc23)
          cir.store %5, %4 : !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>> loc(#loc143)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc24)
          %7 = cir.const #cir.int<8> : !u64i loc(#loc144)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc24)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s16i> loc(#loc145)
          cir.store %9, %4 : !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>> loc(#loc146)
          cir.scope {
            %18 = cir.load %4 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc31)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc32)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s16i> loc(#loc32)
            %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s16i>, !cir.bool loc(#loc148)
            cir.if %21 {
              %22 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc34)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc35)
              %24 = cir.unary(minus, %23) nsw : !s32i, !s32i loc(#loc36)
              cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc34)
            } loc(#loc149)
          } loc(#loc147)
          %10 = cir.const #cir.int<5> : !s32i loc(#loc37)
          %11 = cir.cast(integral, %10 : !s32i), !s16i loc(#loc37)
          %12 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc38)
          cir.store %11, %12 : !s16i, !cir.ptr<!s16i> loc(#loc150)
          %13 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc40)
          %14 = cir.load %13 : !cir.ptr<!s16i>, !s16i loc(#loc41)
          cir.call @printShortLine(%14) : (!s16i) -> () loc(#loc42)
          %15 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc43)
          %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc44)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!s16i>), !cir.ptr<!void> loc(#loc44)
          cir.call @free(%17) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc43)
        } loc(#loc142)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>>, ["goodShort", init] {alignment = 8 : i64} loc(#loc152)
          %5 = cir.const #cir.ptr<null> : !cir.ptr<!s16i> loc(#loc48)
          cir.store %5, %4 : !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>> loc(#loc152)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc49)
          %7 = cir.const #cir.int<2> : !u64i loc(#loc153)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc49)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s16i> loc(#loc154)
          cir.store %9, %4 : !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>> loc(#loc155)
          cir.scope {
            %18 = cir.load %4 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc56)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc57)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s16i> loc(#loc57)
            %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s16i>, !cir.bool loc(#loc157)
            cir.if %21 {
              %22 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc59)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc60)
              %24 = cir.unary(minus, %23) nsw : !s32i, !s32i loc(#loc61)
              cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc59)
            } loc(#loc158)
          } loc(#loc156)
          %10 = cir.const #cir.int<6> : !s32i loc(#loc62)
          %11 = cir.cast(integral, %10 : !s32i), !s16i loc(#loc62)
          %12 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc63)
          cir.store %11, %12 : !s16i, !cir.ptr<!s16i> loc(#loc159)
          %13 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc65)
          %14 = cir.load %13 : !cir.ptr<!s16i>, !s16i loc(#loc66)
          cir.call @printShortLine(%14) : (!s16i) -> () loc(#loc67)
          %15 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc68)
          %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc69)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!s16i>), !cir.ptr<!void> loc(#loc69)
          cir.call @free(%17) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc68)
        } loc(#loc151)
      } loc(#loc141)
    } loc(#loc139)
    cir.return loc(#loc12)
  } loc(#loc138)
  cir.func no_proto @CWE467_Use_of_sizeof_on_Pointer_Type__short_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc161)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc72)
    cir.return loc(#loc71)
  } loc(#loc160)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc164)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc164)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc78)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc78)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>>, ["goodShort", init] {alignment = 8 : i64} loc(#loc167)
          %5 = cir.const #cir.ptr<null> : !cir.ptr<!s16i> loc(#loc86)
          cir.store %5, %4 : !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>> loc(#loc167)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc87)
          %7 = cir.const #cir.int<2> : !u64i loc(#loc168)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc87)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s16i> loc(#loc169)
          cir.store %9, %4 : !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>> loc(#loc170)
          cir.scope {
            %18 = cir.load %4 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc94)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc95)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s16i> loc(#loc95)
            %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s16i>, !cir.bool loc(#loc172)
            cir.if %21 {
              %22 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc97)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc98)
              %24 = cir.unary(minus, %23) nsw : !s32i, !s32i loc(#loc99)
              cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc97)
            } loc(#loc173)
          } loc(#loc171)
          %10 = cir.const #cir.int<6> : !s32i loc(#loc100)
          %11 = cir.cast(integral, %10 : !s32i), !s16i loc(#loc100)
          %12 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc101)
          cir.store %11, %12 : !s16i, !cir.ptr<!s16i> loc(#loc174)
          %13 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc103)
          %14 = cir.load %13 : !cir.ptr<!s16i>, !s16i loc(#loc104)
          cir.call @printShortLine(%14) : (!s16i) -> () loc(#loc105)
          %15 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc106)
          %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc107)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!s16i>), !cir.ptr<!void> loc(#loc107)
          cir.call @free(%17) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc106)
        } loc(#loc166)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>>, ["goodShort", init] {alignment = 8 : i64} loc(#loc176)
          %5 = cir.const #cir.ptr<null> : !cir.ptr<!s16i> loc(#loc111)
          cir.store %5, %4 : !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>> loc(#loc176)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc112)
          %7 = cir.const #cir.int<2> : !u64i loc(#loc177)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc112)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s16i> loc(#loc178)
          cir.store %9, %4 : !cir.ptr<!s16i>, !cir.ptr<!cir.ptr<!s16i>> loc(#loc179)
          cir.scope {
            %18 = cir.load %4 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc119)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc120)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s16i> loc(#loc120)
            %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s16i>, !cir.bool loc(#loc181)
            cir.if %21 {
              %22 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc122)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc123)
              %24 = cir.unary(minus, %23) nsw : !s32i, !s32i loc(#loc124)
              cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc122)
            } loc(#loc182)
          } loc(#loc180)
          %10 = cir.const #cir.int<6> : !s32i loc(#loc125)
          %11 = cir.cast(integral, %10 : !s32i), !s16i loc(#loc125)
          %12 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc126)
          cir.store %11, %12 : !s16i, !cir.ptr<!s16i> loc(#loc183)
          %13 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc128)
          %14 = cir.load %13 : !cir.ptr<!s16i>, !s16i loc(#loc129)
          cir.call @printShortLine(%14) : (!s16i) -> () loc(#loc130)
          %15 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc131)
          %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s16i>>, !cir.ptr<!s16i> loc(#loc132)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!s16i>), !cir.ptr<!void> loc(#loc132)
          cir.call @free(%17) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc131)
        } loc(#loc175)
      } loc(#loc165)
    } loc(#loc163)
    cir.return loc(#loc75)
  } loc(#loc162)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE467_Use_of_sizeof_on_Pointer_Type/CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":20:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":20:39)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":20:1)
#loc12 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":46:1)
#loc13 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":22:5)
#loc14 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":45:5)
#loc15 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":22:8)
#loc16 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":22:33)
#loc17 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":23:5)
#loc18 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":33:5)
#loc19 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":35:5)
#loc20 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":24:9)
#loc21 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":32:9)
#loc22 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":25:13)
#loc23 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":25:32)
#loc24 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":27:33)
#loc25 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":27:40)
#loc26 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":27:55)
#loc27 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":27:56)
#loc28 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":27:13)
#loc29 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":28:13)
#loc30 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":28:45)
#loc31 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":28:17)
#loc32 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":28:29)
#loc33 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":28:35)
#loc34 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":28:36)
#loc35 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":28:42)
#loc36 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":28:41)
#loc37 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":29:25)
#loc38 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":29:14)
#loc39 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":29:13)
#loc40 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":30:29)
#loc41 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":30:28)
#loc42 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":30:13)
#loc43 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":31:13)
#loc44 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":31:18)
#loc45 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":36:9)
#loc46 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":44:9)
#loc47 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":37:13)
#loc48 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":37:33)
#loc49 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":39:34)
#loc50 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":39:41)
#loc51 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":39:58)
#loc52 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":39:59)
#loc53 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":39:13)
#loc54 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":40:13)
#loc55 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":40:46)
#loc56 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":40:17)
#loc57 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":40:30)
#loc58 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":40:36)
#loc59 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":40:37)
#loc60 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":40:43)
#loc61 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":40:42)
#loc62 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":41:26)
#loc63 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":41:14)
#loc64 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":41:13)
#loc65 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":42:29)
#loc66 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":42:28)
#loc67 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":42:13)
#loc68 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":43:13)
#loc69 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":43:18)
#loc70 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":81:1)
#loc71 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":84:1)
#loc72 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":83:5)
#loc73 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":83:11)
#loc74 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":53:1)
#loc75 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":79:1)
#loc76 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":55:5)
#loc77 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":78:5)
#loc78 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":55:8)
#loc79 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":55:33)
#loc80 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":56:5)
#loc81 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":66:5)
#loc82 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":68:5)
#loc83 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":57:9)
#loc84 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":65:9)
#loc85 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":58:13)
#loc86 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":58:33)
#loc87 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":60:34)
#loc88 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":60:41)
#loc89 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":60:58)
#loc90 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":60:59)
#loc91 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":60:13)
#loc92 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":61:13)
#loc93 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":61:46)
#loc94 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":61:17)
#loc95 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":61:30)
#loc96 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":61:36)
#loc97 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":61:37)
#loc98 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":61:43)
#loc99 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":61:42)
#loc100 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":62:26)
#loc101 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":62:14)
#loc102 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":62:13)
#loc103 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":63:29)
#loc104 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":63:28)
#loc105 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":63:13)
#loc106 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":64:13)
#loc107 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":64:18)
#loc108 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":69:9)
#loc109 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":77:9)
#loc110 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":70:13)
#loc111 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":70:33)
#loc112 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":72:34)
#loc113 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":72:41)
#loc114 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":72:58)
#loc115 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":72:59)
#loc116 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":72:13)
#loc117 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":73:13)
#loc118 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":73:46)
#loc119 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":73:17)
#loc120 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":73:30)
#loc121 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":73:36)
#loc122 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":73:37)
#loc123 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":73:43)
#loc124 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":73:42)
#loc125 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":74:26)
#loc126 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":74:14)
#loc127 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":74:13)
#loc128 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":75:29)
#loc129 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":75:28)
#loc130 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":75:13)
#loc131 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":76:13)
#loc132 = loc("CWE467_Use_of_sizeof_on_Pointer_Type__short_12.c":76:18)
#loc133 = loc(fused[#loc1, #loc2])
#loc134 = loc(fused[#loc3, #loc4])
#loc135 = loc(fused[#loc5, #loc6])
#loc136 = loc(fused[#loc7, #loc8])
#loc137 = loc(fused[#loc9, #loc10])
#loc138 = loc(fused[#loc11, #loc12])
#loc139 = loc(fused[#loc13, #loc14])
#loc140 = loc(fused[#loc15, #loc16])
#loc141 = loc(fused[#loc17, #loc18, #loc19, #loc14])
#loc142 = loc(fused[#loc20, #loc21])
#loc143 = loc(fused[#loc22, #loc23])
#loc144 = loc(fused[#loc25, #loc26])
#loc145 = loc(fused[#loc24, #loc27])
#loc146 = loc(fused[#loc28, #loc27])
#loc147 = loc(fused[#loc29, #loc30])
#loc148 = loc(fused[#loc31, #loc32])
#loc149 = loc(fused[#loc33, #loc30])
#loc150 = loc(fused[#loc39, #loc37])
#loc151 = loc(fused[#loc45, #loc46])
#loc152 = loc(fused[#loc47, #loc48])
#loc153 = loc(fused[#loc50, #loc51])
#loc154 = loc(fused[#loc49, #loc52])
#loc155 = loc(fused[#loc53, #loc52])
#loc156 = loc(fused[#loc54, #loc55])
#loc157 = loc(fused[#loc56, #loc57])
#loc158 = loc(fused[#loc58, #loc55])
#loc159 = loc(fused[#loc64, #loc62])
#loc160 = loc(fused[#loc70, #loc71])
#loc161 = loc(fused[#loc72, #loc73])
#loc162 = loc(fused[#loc74, #loc75])
#loc163 = loc(fused[#loc76, #loc77])
#loc164 = loc(fused[#loc78, #loc79])
#loc165 = loc(fused[#loc80, #loc81, #loc82, #loc77])
#loc166 = loc(fused[#loc83, #loc84])
#loc167 = loc(fused[#loc85, #loc86])
#loc168 = loc(fused[#loc88, #loc89])
#loc169 = loc(fused[#loc87, #loc90])
#loc170 = loc(fused[#loc91, #loc90])
#loc171 = loc(fused[#loc92, #loc93])
#loc172 = loc(fused[#loc94, #loc95])
#loc173 = loc(fused[#loc96, #loc93])
#loc174 = loc(fused[#loc102, #loc100])
#loc175 = loc(fused[#loc108, #loc109])
#loc176 = loc(fused[#loc110, #loc111])
#loc177 = loc(fused[#loc113, #loc114])
#loc178 = loc(fused[#loc112, #loc115])
#loc179 = loc(fused[#loc116, #loc115])
#loc180 = loc(fused[#loc117, #loc118])
#loc181 = loc(fused[#loc119, #loc120])
#loc182 = loc(fused[#loc121, #loc118])
#loc183 = loc(fused[#loc127, #loc125])
