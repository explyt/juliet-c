!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":21:70)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":21:76)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":52:74)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":52:80)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":95:10)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":95:14)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":95:20)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":95:32)
#loc160 = loc(fused[#loc7, #loc8])
#loc184 = loc(fused[#loc68, #loc69])
#loc201 = loc(fused[#loc117, #loc118])
#loc202 = loc(fused[#loc119, #loc120])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printIntLine(!s32i) loc(#loc157)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc158)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41_badSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc161)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc162)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc160)
    cir.store %arg0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc13)
    cir.br ^bb1 loc(#loc163)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.zero : !cir.array<!s32i x 100> loc(#loc161)
    cir.store %3, %0 : !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>> loc(#loc161)
    cir.br ^bb2 loc(#loc164)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc165)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.int<0> : !s32i loc(#loc20)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc20)
    cir.store %5, %1 : !u64i, !cir.ptr<!u64i> loc(#loc166)
    cir.br ^bb4 loc(#loc165)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %6 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc22)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc23)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc23)
    %9 = cir.cmp(lt, %6, %8) : !u64i, !cir.bool loc(#loc167)
    cir.brcond %9 ^bb5, ^bb9 loc(#loc24)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc168)
  ^bb6:  // pred: ^bb5
    %10 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc26)
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc27)
    %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !u64i), !cir.ptr<!s32i> loc(#loc27)
    %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc27)
    %14 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc28)
    %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc29)
    %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !u64i), !cir.ptr<!s32i> loc(#loc30)
    cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    cir.br ^bb7 loc(#loc19)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc19)
  ^bb8:  // pred: ^bb7
    %17 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc32)
    %18 = cir.unary(inc, %17) : !u64i, !u64i loc(#loc33)
    cir.store %18, %1 : !u64i, !cir.ptr<!u64i> loc(#loc170)
    cir.br ^bb4 loc(#loc165)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc19)
  ^bb10:  // pred: ^bb9
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc34)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc35)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc36)
    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc37)
    %23 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc38)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc38)
    cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc39)
    cir.br ^bb11 loc(#loc17)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc15)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc6)
  } loc(#loc159)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc171)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc172)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc174)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc48)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc175)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc50)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc51)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc51)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc176)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc177)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc50)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc178)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc179)
    cir.br ^bb1 loc(#loc180)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc58)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc59)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc59)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s32i>, !cir.bool loc(#loc181)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc182)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc61)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc62)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc63)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc61)
    cir.br ^bb3 loc(#loc57)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc57)
  ^bb4:  // pred: ^bb3
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc64)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41_badSink(%16) : (!cir.ptr<!s32i>) -> () loc(#loc65)
    cir.return loc(#loc45)
  } loc(#loc173)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41_goodG2BSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc68, #loc69])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc185)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc186)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc184)
    cir.store %arg0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc74)
    cir.br ^bb1 loc(#loc187)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.zero : !cir.array<!s32i x 100> loc(#loc185)
    cir.store %3, %0 : !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>> loc(#loc185)
    cir.br ^bb2 loc(#loc188)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc189)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.int<0> : !s32i loc(#loc81)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc81)
    cir.store %5, %1 : !u64i, !cir.ptr<!u64i> loc(#loc190)
    cir.br ^bb4 loc(#loc189)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %6 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc83)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc84)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc84)
    %9 = cir.cmp(lt, %6, %8) : !u64i, !cir.bool loc(#loc191)
    cir.brcond %9 ^bb5, ^bb9 loc(#loc85)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc192)
  ^bb6:  // pred: ^bb5
    %10 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc87)
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc88)
    %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !u64i), !cir.ptr<!s32i> loc(#loc88)
    %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    %14 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc89)
    %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc90)
    %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !u64i), !cir.ptr<!s32i> loc(#loc91)
    cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    cir.br ^bb7 loc(#loc80)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc80)
  ^bb8:  // pred: ^bb7
    %17 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc93)
    %18 = cir.unary(inc, %17) : !u64i, !u64i loc(#loc94)
    cir.store %18, %1 : !u64i, !cir.ptr<!u64i> loc(#loc194)
    cir.br ^bb4 loc(#loc189)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc80)
  ^bb10:  // pred: ^bb9
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc95)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc96)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc97)
    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc98)
    %23 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc99)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc99)
    cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc100)
    cir.br ^bb11 loc(#loc78)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc76)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc67)
  } loc(#loc183)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc196)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc103)
    cir.return loc(#loc102)
  } loc(#loc195)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc197)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc198)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc199)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc111)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc112)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc113)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc114)
  cir.func @main(%arg0: !s32i loc(fused[#loc117, #loc118]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc119, #loc120])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc201)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc202)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc116)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc121)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc121)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc122)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc123)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc123)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc124)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc111)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc111)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc125)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc203)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41_good() : () -> () loc(#loc126)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc112)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc112)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc128)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc113)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc113)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc129)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc204)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41_bad() : () -> () loc(#loc130)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc114)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc114)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc132)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc133)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc205)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc205)
    cir.return %17 : !s32i loc(#loc205)
  } loc(#loc200)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc207)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc139)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc208)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc141)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc142)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc142)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc209)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc210)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc141)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc211)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc212)
    cir.br ^bb1 loc(#loc213)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc149)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc150)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc150)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s32i>, !cir.bool loc(#loc214)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc215)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc152)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc153)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc154)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc152)
    cir.br ^bb3 loc(#loc148)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc148)
  ^bb4:  // pred: ^bb3
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc155)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41_goodG2BSink(%16) : (!cir.ptr<!s32i>) -> () loc(#loc156)
    cir.return loc(#loc136)
  } loc(#loc206)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":21:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":36:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":24:9)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":24:29)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":26:13)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":26:20)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":22:1)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":23:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":35:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":25:9)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":34:9)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":28:13)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":31:13)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":28:22)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":28:18)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":28:25)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":28:29)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":28:27)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":29:13)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":30:34)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":30:27)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":30:17)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":30:22)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":30:23)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":30:35)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":28:35)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":28:34)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":32:26)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":32:31)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":32:32)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":32:13)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":33:18)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":33:13)
#loc40 = loc("/usr/include/stdlib.h":672:1)
#loc41 = loc("/usr/include/stdlib.h":672:45)
#loc42 = loc("/usr/include/stdlib.h":756:1)
#loc43 = loc("/usr/include/stdlib.h":756:70)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":38:1)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":46:1)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":40:5)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":40:11)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":41:12)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":41:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":43:19)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":43:26)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":43:29)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":43:39)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":43:40)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":43:5)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":44:5)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":44:33)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":44:9)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":44:17)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":44:23)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":44:24)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":44:30)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":44:29)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":45:69)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":45:5)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":52:1)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":67:1)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":55:9)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":55:29)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":57:13)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":57:20)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":53:1)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":54:5)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":66:5)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":56:9)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":65:9)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":59:13)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":62:13)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":59:22)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":59:18)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":59:25)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":59:29)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":59:27)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":60:13)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":61:34)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":61:27)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":61:17)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":61:22)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":61:23)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":61:35)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":59:35)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":59:34)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":63:26)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":63:31)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":63:32)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":63:13)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":64:18)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":64:13)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":80:1)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":83:1)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":82:5)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":82:13)
#loc105 = loc("/usr/include/stdlib.h":575:1)
#loc106 = loc("/usr/include/stdlib.h":575:41)
#loc107 = loc("/usr/include/time.h":76:1)
#loc108 = loc("/usr/include/time.h":76:38)
#loc109 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc110 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":100:15)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":102:15)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":105:15)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":107:15)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":95:1)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":110:1)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":96:1)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":98:27)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":98:22)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":98:5)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":100:5)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":101:5)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":101:66)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":102:5)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":105:5)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":106:5)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":106:65)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":107:5)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":109:12)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":109:5)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":70:1)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":78:1)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":72:5)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":72:11)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":73:12)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":73:5)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":75:19)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":75:26)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":75:30)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":75:40)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":75:41)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":75:5)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":76:5)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":76:33)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":76:9)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":76:17)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":76:23)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":76:24)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":76:30)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":76:29)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":77:73)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_loop_41.c":77:5)
#loc157 = loc(fused[#loc1, #loc2])
#loc158 = loc(fused[#loc3, #loc4])
#loc159 = loc(fused[#loc5, #loc6])
#loc161 = loc(fused[#loc9, #loc10])
#loc162 = loc(fused[#loc11, #loc12])
#loc163 = loc(fused[#loc14, #loc15])
#loc164 = loc(fused[#loc16, #loc17])
#loc165 = loc(fused[#loc18, #loc19])
#loc166 = loc(fused[#loc21, #loc20])
#loc167 = loc(fused[#loc22, #loc23])
#loc168 = loc(fused[#loc25, #loc19])
#loc169 = loc(fused[#loc28, #loc31])
#loc170 = loc(fused[#loc33, #loc32])
#loc171 = loc(fused[#loc40, #loc41])
#loc172 = loc(fused[#loc42, #loc43])
#loc173 = loc(fused[#loc44, #loc45])
#loc174 = loc(fused[#loc46, #loc47])
#loc175 = loc(fused[#loc49, #loc48])
#loc176 = loc(fused[#loc52, #loc53])
#loc177 = loc(fused[#loc51, #loc53])
#loc178 = loc(fused[#loc50, #loc54])
#loc179 = loc(fused[#loc55, #loc54])
#loc180 = loc(fused[#loc56, #loc57])
#loc181 = loc(fused[#loc58, #loc59])
#loc182 = loc(fused[#loc60, #loc57])
#loc183 = loc(fused[#loc66, #loc67])
#loc185 = loc(fused[#loc70, #loc71])
#loc186 = loc(fused[#loc72, #loc73])
#loc187 = loc(fused[#loc75, #loc76])
#loc188 = loc(fused[#loc77, #loc78])
#loc189 = loc(fused[#loc79, #loc80])
#loc190 = loc(fused[#loc82, #loc81])
#loc191 = loc(fused[#loc83, #loc84])
#loc192 = loc(fused[#loc86, #loc80])
#loc193 = loc(fused[#loc89, #loc92])
#loc194 = loc(fused[#loc94, #loc93])
#loc195 = loc(fused[#loc101, #loc102])
#loc196 = loc(fused[#loc103, #loc104])
#loc197 = loc(fused[#loc105, #loc106])
#loc198 = loc(fused[#loc107, #loc108])
#loc199 = loc(fused[#loc109, #loc110])
#loc200 = loc(fused[#loc115, #loc116])
#loc203 = loc(fused[#loc126, #loc127])
#loc204 = loc(fused[#loc130, #loc131])
#loc205 = loc(fused[#loc134, #loc133])
#loc206 = loc(fused[#loc135, #loc136])
#loc207 = loc(fused[#loc137, #loc138])
#loc208 = loc(fused[#loc140, #loc139])
#loc209 = loc(fused[#loc143, #loc144])
#loc210 = loc(fused[#loc142, #loc144])
#loc211 = loc(fused[#loc141, #loc145])
#loc212 = loc(fused[#loc146, #loc145])
#loc213 = loc(fused[#loc147, #loc148])
#loc214 = loc(fused[#loc149, #loc150])
#loc215 = loc(fused[#loc151, #loc148])
