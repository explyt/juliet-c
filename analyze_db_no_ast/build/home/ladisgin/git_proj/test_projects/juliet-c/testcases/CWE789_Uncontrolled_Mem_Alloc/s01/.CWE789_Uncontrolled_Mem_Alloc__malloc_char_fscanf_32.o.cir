!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc213)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc214)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%zu\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc5)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc215)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc216)
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc217)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc12)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc218)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc219)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc17)
  cir.func no_proto  @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc221)
    %1 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc222)
    %2 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc223)
    cir.store %0, %1 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc222)
    cir.store %0, %2 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc223)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc26)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc224)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc226)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc31)
      %7 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc32)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc226)
      %8 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc33)
      %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc214)
      %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc34)
      %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc5)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc5)
      %13 = cir.call @__isoc99_fscanf(%10, %12, %5) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u64i>) -> !s32i loc(#loc33)
      %14 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc35)
      %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc36)
      cir.store %14, %15 : !u64i, !cir.ptr<!u64i> loc(#loc227)
    } loc(#loc225)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc229)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc41)
      %7 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc42)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc229)
      cir.scope {
        %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc231)
        cir.scope {
          %9 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc49)
          %10 = cir.const #cir.int<5> : !u64i loc(#loc233)
          %11 = cir.cmp(gt, %9, %10) : !u64i, !s32i loc(#loc234)
          %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc52)
          cir.if %12 {
            %13 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc56)
            %14 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc57)
            %15 = cir.const #cir.int<1> : !u64i loc(#loc236)
            %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc237)
            %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc56)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc238)
            cir.store %18, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc239)
            cir.scope {
              %28 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
              %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc65)
              %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc65)
              %31 = cir.cmp(eq, %28, %30) : !cir.ptr<!s8i>, !s32i loc(#loc241)
              %32 = cir.cast(int_to_bool, %31 : !s32i), !cir.bool loc(#loc66)
              cir.if %32 {
                %33 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc68)
                %34 = cir.const #cir.int<1> : !s32i loc(#loc69)
                %35 = cir.unary(minus, %34) : !s32i, !s32i loc(#loc70)
                cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc68)
              } loc(#loc242)
            } loc(#loc240)
            %19 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc71)
            %20 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
            %21 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc12)
            %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc12)
            %23 = cir.call @strcpy(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc71)
            %24 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
            cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc74)
            %25 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc75)
            %26 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc76)
            cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc75)
          } else {
            %13 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc17)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc17)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc77)
          } loc(#loc235)
        } loc(#loc232)
      } loc(#loc230)
    } loc(#loc228)
    cir.return loc(#loc19)
  } loc(#loc220)
  cir.func no_proto  @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc244)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc80)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc245)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc82)
    cir.return loc(#loc79)
  } loc(#loc243)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc247)
    %1 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc248)
    %2 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc249)
    cir.store %0, %1 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc248)
    cir.store %0, %2 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc249)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc92)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc92)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc250)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc252)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc97)
      %7 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc98)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc252)
      %8 = cir.const #cir.int<20> : !s32i loc(#loc99)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc99)
      cir.store %9, %5 : !u64i, !cir.ptr<!u64i> loc(#loc253)
      %10 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc101)
      %11 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc102)
      cir.store %10, %11 : !u64i, !cir.ptr<!u64i> loc(#loc254)
    } loc(#loc251)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc256)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc107)
      %7 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc108)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc256)
      cir.scope {
        %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc258)
        cir.scope {
          %9 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc115)
          %10 = cir.const #cir.int<5> : !u64i loc(#loc260)
          %11 = cir.cmp(gt, %9, %10) : !u64i, !s32i loc(#loc261)
          %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc118)
          cir.if %12 {
            %13 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc122)
            %14 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc123)
            %15 = cir.const #cir.int<1> : !u64i loc(#loc263)
            %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc264)
            %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc122)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc265)
            cir.store %18, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc266)
            cir.scope {
              %28 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
              %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc131)
              %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc131)
              %31 = cir.cmp(eq, %28, %30) : !cir.ptr<!s8i>, !s32i loc(#loc268)
              %32 = cir.cast(int_to_bool, %31 : !s32i), !cir.bool loc(#loc132)
              cir.if %32 {
                %33 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc134)
                %34 = cir.const #cir.int<1> : !s32i loc(#loc135)
                %35 = cir.unary(minus, %34) : !s32i, !s32i loc(#loc136)
                cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc134)
              } loc(#loc269)
            } loc(#loc267)
            %19 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc137)
            %20 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
            %21 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc139)
            %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc139)
            %23 = cir.call @strcpy(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc137)
            %24 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
            cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc141)
            %25 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc142)
            %26 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc143)
            cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc142)
          } else {
            %13 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc144)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc144)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc145)
          } loc(#loc262)
        } loc(#loc259)
      } loc(#loc257)
    } loc(#loc255)
    cir.return loc(#loc85)
  } loc(#loc246)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc146)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc271)
    %1 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc272)
    %2 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc273)
    cir.store %0, %1 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc272)
    cir.store %0, %2 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc273)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc155)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc155)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc274)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc276)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc160)
      %7 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc161)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc276)
      %8 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc162)
      %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc214)
      %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc163)
      %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc164)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc164)
      %13 = cir.call @__isoc99_fscanf(%10, %12, %5) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u64i>) -> !s32i loc(#loc162)
      %14 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc165)
      %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc166)
      cir.store %14, %15 : !u64i, !cir.ptr<!u64i> loc(#loc277)
    } loc(#loc275)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc279)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc171)
      %7 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc172)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc279)
      cir.scope {
        %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc281)
        cir.scope {
          %9 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc179)
          %10 = cir.const #cir.int<5> : !u64i loc(#loc283)
          %11 = cir.cmp(gt, %9, %10) : !u64i, !s32i loc(#loc284)
          %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc182)
          %13 = cir.ternary(%12, true {
            %14 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc184)
            %15 = cir.const #cir.int<100> : !s32i loc(#loc185)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc185)
            %17 = cir.cmp(lt, %14, %16) : !u64i, !s32i loc(#loc285)
            %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc186)
            %19 = cir.ternary(%18, true {
              %20 = cir.const #true loc(#loc183)
              cir.yield %20 : !cir.bool loc(#loc183)
            }, false {
              %20 = cir.const #false loc(#loc183)
              cir.yield %20 : !cir.bool loc(#loc183)
            }) : (!cir.bool) -> !cir.bool loc(#loc183)
            cir.yield %19 : !cir.bool loc(#loc183)
          }, false {
            %14 = cir.const #false loc(#loc183)
            cir.yield %14 : !cir.bool loc(#loc183)
          }) : (!cir.bool) -> !cir.bool loc(#loc183)
          cir.if %13 {
            %14 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc190)
            %15 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc191)
            %16 = cir.const #cir.int<1> : !u64i loc(#loc287)
            %17 = cir.binop(mul, %15, %16) : !u64i loc(#loc288)
            %18 = cir.call @malloc(%17) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc190)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc289)
            cir.store %19, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc290)
            cir.scope {
              %29 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc198)
              %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc199)
              %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc199)
              %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!s8i>, !s32i loc(#loc292)
              %33 = cir.cast(int_to_bool, %32 : !s32i), !cir.bool loc(#loc200)
              cir.if %33 {
                %34 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc202)
                %35 = cir.const #cir.int<1> : !s32i loc(#loc203)
                %36 = cir.unary(minus, %35) : !s32i, !s32i loc(#loc204)
                cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc202)
              } loc(#loc293)
            } loc(#loc291)
            %20 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc205)
            %21 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc206)
            %22 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc207)
            %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc207)
            %24 = cir.call @strcpy(%21, %23) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc205)
            %25 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc208)
            cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc209)
            %26 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc210)
            %27 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc211)
            %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc211)
            cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc210)
          } else {
            %14 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc146)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc146)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc212)
          } loc(#loc286)
        } loc(#loc282)
      } loc(#loc280)
    } loc(#loc278)
    cir.return loc(#loc148)
  } loc(#loc270)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":38:23)
#loc6 = loc("/usr/include/stdlib.h":672:1)
#loc7 = loc("/usr/include/stdlib.h":672:45)
#loc8 = loc("/usr/include/stdlib.h":756:1)
#loc9 = loc("/usr/include/stdlib.h":756:70)
#loc10 = loc("/usr/include/string.h":141:1)
#loc11 = loc("/usr/include/string.h":142:14)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":53:34)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc15 = loc("/usr/include/stdlib.h":687:1)
#loc16 = loc("/usr/include/stdlib.h":687:32)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":59:27)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":28:1)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":63:1)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":30:5)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":30:12)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":31:5)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":31:25)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":32:5)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":32:25)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":34:12)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":34:5)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":35:5)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":40:5)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":36:9)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":36:24)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":36:23)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":38:9)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":38:16)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":39:21)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":39:10)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":39:9)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":41:5)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":62:5)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":42:9)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":42:24)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":42:23)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":43:9)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":61:9)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":44:13)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":44:20)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":48:13)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":60:13)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":48:17)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":48:24)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":48:43)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":48:22)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":49:13)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":56:13)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":58:13)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":50:36)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":50:43)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":50:48)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":50:59)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":50:60)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":50:17)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":51:17)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":51:49)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":51:21)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":51:33)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":51:30)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":51:39)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":51:40)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":51:46)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":51:45)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":53:17)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":53:24)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":54:27)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":54:17)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":55:17)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":55:22)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":59:17)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":145:1)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":149:1)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":147:5)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":147:13)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":148:5)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":148:13)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":70:1)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":105:1)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":72:5)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":72:12)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":73:5)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":73:25)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":74:5)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":74:25)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":76:12)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":76:5)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":77:5)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":82:5)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":78:9)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":78:24)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":78:23)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":80:16)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":80:9)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":81:21)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":81:10)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":81:9)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":83:5)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":104:5)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":84:9)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":84:24)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":84:23)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":85:9)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":103:9)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":86:13)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":86:20)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":90:13)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":102:13)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":90:17)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":90:24)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":90:43)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":90:22)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":91:13)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":98:13)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":100:13)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":92:36)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":92:43)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":92:48)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":92:59)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":92:60)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":92:17)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":93:17)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":93:49)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":93:21)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":93:33)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":93:30)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":93:39)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":93:40)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":93:46)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":93:45)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":95:17)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":95:24)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":95:34)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":96:27)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":96:17)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":97:17)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":97:22)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":101:27)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":101:17)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":139:27)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":108:1)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":143:1)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":110:5)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":110:12)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":111:5)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":111:25)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":112:5)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":112:25)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":114:12)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":114:5)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":115:5)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":120:5)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":116:9)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":116:24)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":116:23)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":118:9)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":118:16)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":118:23)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":119:21)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":119:10)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":119:9)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":121:5)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":142:5)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":122:9)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":122:24)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":122:23)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":123:9)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":141:9)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":124:13)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":124:20)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":128:13)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":140:13)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":128:17)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":128:24)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":128:43)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":128:22)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":128:45)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":128:48)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":128:55)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":128:53)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":129:13)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":136:13)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":138:13)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":130:36)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":130:43)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":130:48)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":130:59)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":130:60)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":130:17)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":131:17)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":131:49)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":131:21)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":131:33)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":131:30)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":131:39)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":131:40)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":131:46)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":131:45)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":133:17)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":133:24)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":133:34)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":134:27)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":134:17)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":135:17)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":135:22)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fscanf_32.c":139:17)
#loc213 = loc(fused[#loc1, #loc2])
#loc214 = loc(fused[#loc3, #loc4])
#loc215 = loc(fused[#loc6, #loc7])
#loc216 = loc(fused[#loc8, #loc9])
#loc217 = loc(fused[#loc10, #loc11])
#loc218 = loc(fused[#loc13, #loc14])
#loc219 = loc(fused[#loc15, #loc16])
#loc220 = loc(fused[#loc18, #loc19])
#loc221 = loc(fused[#loc20, #loc21])
#loc222 = loc(fused[#loc22, #loc23])
#loc223 = loc(fused[#loc24, #loc25])
#loc224 = loc(fused[#loc27, #loc26])
#loc225 = loc(fused[#loc28, #loc29])
#loc226 = loc(fused[#loc30, #loc31])
#loc227 = loc(fused[#loc37, #loc35])
#loc228 = loc(fused[#loc38, #loc39])
#loc229 = loc(fused[#loc40, #loc41])
#loc230 = loc(fused[#loc43, #loc44])
#loc231 = loc(fused[#loc45, #loc46])
#loc232 = loc(fused[#loc47, #loc48])
#loc233 = loc(fused[#loc50, #loc51])
#loc234 = loc(fused[#loc49, #loc51])
#loc235 = loc(fused[#loc53, #loc54, #loc55, #loc48])
#loc236 = loc(fused[#loc58, #loc59])
#loc237 = loc(fused[#loc57, #loc59])
#loc238 = loc(fused[#loc56, #loc60])
#loc239 = loc(fused[#loc61, #loc60])
#loc240 = loc(fused[#loc62, #loc63])
#loc241 = loc(fused[#loc64, #loc65])
#loc242 = loc(fused[#loc67, #loc63])
#loc243 = loc(fused[#loc78, #loc79])
#loc244 = loc(fused[#loc80, #loc81])
#loc245 = loc(fused[#loc82, #loc83])
#loc246 = loc(fused[#loc84, #loc85])
#loc247 = loc(fused[#loc86, #loc87])
#loc248 = loc(fused[#loc88, #loc89])
#loc249 = loc(fused[#loc90, #loc91])
#loc250 = loc(fused[#loc93, #loc92])
#loc251 = loc(fused[#loc94, #loc95])
#loc252 = loc(fused[#loc96, #loc97])
#loc253 = loc(fused[#loc100, #loc99])
#loc254 = loc(fused[#loc103, #loc101])
#loc255 = loc(fused[#loc104, #loc105])
#loc256 = loc(fused[#loc106, #loc107])
#loc257 = loc(fused[#loc109, #loc110])
#loc258 = loc(fused[#loc111, #loc112])
#loc259 = loc(fused[#loc113, #loc114])
#loc260 = loc(fused[#loc116, #loc117])
#loc261 = loc(fused[#loc115, #loc117])
#loc262 = loc(fused[#loc119, #loc120, #loc121, #loc114])
#loc263 = loc(fused[#loc124, #loc125])
#loc264 = loc(fused[#loc123, #loc125])
#loc265 = loc(fused[#loc122, #loc126])
#loc266 = loc(fused[#loc127, #loc126])
#loc267 = loc(fused[#loc128, #loc129])
#loc268 = loc(fused[#loc130, #loc131])
#loc269 = loc(fused[#loc133, #loc129])
#loc270 = loc(fused[#loc147, #loc148])
#loc271 = loc(fused[#loc149, #loc150])
#loc272 = loc(fused[#loc151, #loc152])
#loc273 = loc(fused[#loc153, #loc154])
#loc274 = loc(fused[#loc156, #loc155])
#loc275 = loc(fused[#loc157, #loc158])
#loc276 = loc(fused[#loc159, #loc160])
#loc277 = loc(fused[#loc167, #loc165])
#loc278 = loc(fused[#loc168, #loc169])
#loc279 = loc(fused[#loc170, #loc171])
#loc280 = loc(fused[#loc173, #loc174])
#loc281 = loc(fused[#loc175, #loc176])
#loc282 = loc(fused[#loc177, #loc178])
#loc283 = loc(fused[#loc180, #loc181])
#loc284 = loc(fused[#loc179, #loc181])
#loc285 = loc(fused[#loc184, #loc185])
#loc286 = loc(fused[#loc187, #loc188, #loc189, #loc178])
#loc287 = loc(fused[#loc192, #loc193])
#loc288 = loc(fused[#loc191, #loc193])
#loc289 = loc(fused[#loc190, #loc194])
#loc290 = loc(fused[#loc195, #loc194])
#loc291 = loc(fused[#loc196, #loc197])
#loc292 = loc(fused[#loc198, #loc199])
#loc293 = loc(fused[#loc201, #loc197])
