!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc199)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc200)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc201)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc202)
  cir.func private @printLongLongLine(!s64i) loc(#loc203)
  cir.func no_proto @CWE191_Integer_Underflow__int64_t_fscanf_multiply_07_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc205)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc206)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc17)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc207)
    cir.br ^bb1 loc(#loc208)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc199)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc22)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc209)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc210)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc24)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc201)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc25)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc202)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc202)
    %12 = cir.call @__isoc99_fscanf(%9, %11, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc24)
    cir.br ^bb3 loc(#loc20)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc20)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc211)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc199)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc28)
    %15 = cir.const #cir.int<5> : !s32i loc(#loc29)
    %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc212)
    cir.brcond %16 ^bb6, ^bb11 loc(#loc213)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc214)
  ^bb7:  // pred: ^bb6
    %17 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc33)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %19 = cir.cast(integral, %18 : !s32i), !s64i loc(#loc34)
    %20 = cir.cmp(lt, %17, %19) : !s64i, !cir.bool loc(#loc215)
    cir.brcond %20 ^bb8, ^bb9 loc(#loc216)
  ^bb8:  // pred: ^bb7
    %21 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc36)
    %22 = cir.const #cir.int<2> : !s32i loc(#loc14)
    %23 = cir.cast(integral, %22 : !s32i), !s64i loc(#loc14)
    %24 = cir.binop(mul, %21, %23) nsw : !s64i loc(#loc36)
    cir.store %24, %0 : !s64i, !cir.ptr<!s64i> loc(#loc205)
    %25 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc37)
    cir.call @printLongLongLine(%25) : (!s64i) -> () loc(#loc38)
    cir.br ^bb9 loc(#loc32)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc32)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc27)
  ^bb11:  // 2 preds: ^bb5, ^bb10
    cir.br ^bb12 loc(#loc27)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc12)
  } loc(#loc204)
  cir.func no_proto @CWE191_Integer_Underflow__int64_t_fscanf_multiply_07_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc218)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc41)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc219)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc43)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc220)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc45)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc221)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc47)
    cir.return loc(#loc40)
  } loc(#loc217)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc222)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc52)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc224)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc225)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc59)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc226)
    cir.br ^bb1 loc(#loc227)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc199)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc63)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc64)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc228)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc229)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc66)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc201)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc67)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc230)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc230)
    %12 = cir.call @__isoc99_fscanf(%9, %11, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc66)
    cir.br ^bb3 loc(#loc62)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc62)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc231)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc199)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    %15 = cir.const #cir.int<5> : !s32i loc(#loc73)
    %16 = cir.cmp(ne, %14, %15) : !s32i, !cir.bool loc(#loc232)
    cir.brcond %16 ^bb6, ^bb7 loc(#loc233)
  ^bb6:  // pred: ^bb5
    %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc51)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    cir.br ^bb17 loc(#loc75)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc234)
  ^bb8:  // pred: ^bb7
    %19 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc80)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc81)
    %21 = cir.cast(integral, %20 : !s32i), !s64i loc(#loc81)
    %22 = cir.cmp(lt, %19, %21) : !s64i, !cir.bool loc(#loc235)
    cir.brcond %22 ^bb9, ^bb15 loc(#loc236)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc237)
  ^bb10:  // pred: ^bb9
    %23 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc85)
    %24 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc86)
    %25 = cir.unary(minus, %24) nsw : !s64i, !s64i loc(#loc86)
    %26 = cir.const #cir.int<1> : !s64i loc(#loc86)
    %27 = cir.binop(sub, %25, %26) nsw : !s64i loc(#loc86)
    %28 = cir.const #cir.int<2> : !s32i loc(#loc87)
    %29 = cir.cast(integral, %28 : !s32i), !s64i loc(#loc87)
    %30 = cir.binop(div, %27, %29) : !s64i loc(#loc238)
    %31 = cir.cmp(gt, %23, %30) : !s64i, !cir.bool loc(#loc239)
    cir.brcond %31 ^bb11, ^bb12 loc(#loc240)
  ^bb11:  // pred: ^bb10
    %32 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc92)
    %33 = cir.const #cir.int<2> : !s32i loc(#loc56)
    %34 = cir.cast(integral, %33 : !s32i), !s64i loc(#loc56)
    %35 = cir.binop(mul, %32, %34) nsw : !s64i loc(#loc92)
    cir.store %35, %0 : !s64i, !cir.ptr<!s64i> loc(#loc224)
    %36 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc93)
    cir.call @printLongLongLine(%36) : (!s64i) -> () loc(#loc94)
    cir.br ^bb13 loc(#loc90)
  ^bb12:  // pred: ^bb10
    %37 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc52)
    %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    cir.br ^bb13 loc(#loc84)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc84)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc79)
  ^bb15:  // 2 preds: ^bb8, ^bb14
    cir.br ^bb16 loc(#loc79)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc71)
  ^bb17:  // 2 preds: ^bb6, ^bb16
    cir.br ^bb18 loc(#loc71)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc54)
  } loc(#loc223)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc242)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc243)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc102)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc244)
    cir.br ^bb1 loc(#loc245)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc199)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc107)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc246)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc247)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc109)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc201)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc110)
    %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc248)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc248)
    %12 = cir.call @__isoc99_fscanf(%9, %11, %1) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc109)
    cir.br ^bb3 loc(#loc105)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc105)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc249)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc199)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc115)
    %15 = cir.const #cir.int<5> : !s32i loc(#loc116)
    %16 = cir.cmp(eq, %14, %15) : !s32i, !cir.bool loc(#loc250)
    cir.brcond %16 ^bb6, ^bb16 loc(#loc251)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc252)
  ^bb7:  // pred: ^bb6
    %17 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc120)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc121)
    %19 = cir.cast(integral, %18 : !s32i), !s64i loc(#loc121)
    %20 = cir.cmp(lt, %17, %19) : !s64i, !cir.bool loc(#loc253)
    cir.brcond %20 ^bb8, ^bb14 loc(#loc254)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc255)
  ^bb9:  // pred: ^bb8
    %21 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc125)
    %22 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc126)
    %23 = cir.unary(minus, %22) nsw : !s64i, !s64i loc(#loc126)
    %24 = cir.const #cir.int<1> : !s64i loc(#loc126)
    %25 = cir.binop(sub, %23, %24) nsw : !s64i loc(#loc126)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc127)
    %27 = cir.cast(integral, %26 : !s32i), !s64i loc(#loc127)
    %28 = cir.binop(div, %25, %27) : !s64i loc(#loc256)
    %29 = cir.cmp(gt, %21, %28) : !s64i, !cir.bool loc(#loc257)
    cir.brcond %29 ^bb10, ^bb11 loc(#loc258)
  ^bb10:  // pred: ^bb9
    %30 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc132)
    %31 = cir.const #cir.int<2> : !s32i loc(#loc99)
    %32 = cir.cast(integral, %31 : !s32i), !s64i loc(#loc99)
    %33 = cir.binop(mul, %30, %32) nsw : !s64i loc(#loc132)
    cir.store %33, %0 : !s64i, !cir.ptr<!s64i> loc(#loc242)
    %34 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc133)
    cir.call @printLongLongLine(%34) : (!s64i) -> () loc(#loc134)
    cir.br ^bb12 loc(#loc130)
  ^bb11:  // pred: ^bb9
    %35 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc135)
    %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc135)
    cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc136)
    cir.br ^bb12 loc(#loc124)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc124)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc119)
  ^bb14:  // 2 preds: ^bb7, ^bb13
    cir.br ^bb15 loc(#loc119)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc114)
  ^bb16:  // 2 preds: ^bb5, ^bb15
    cir.br ^bb17 loc(#loc114)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc97)
  } loc(#loc241)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc260)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc261)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc143)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc262)
    cir.br ^bb1 loc(#loc263)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc199)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc147)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc148)
    %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc264)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc265)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc152)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc152)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc153)
    cir.br ^bb4 loc(#loc150)
  ^bb3:  // pred: ^bb1
    %9 = cir.const #cir.int<2> : !s32i loc(#loc154)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc155)
    %11 = cir.cast(integral, %10 : !s32i), !s64i loc(#loc155)
    cir.store %11, %1 : !s64i, !cir.ptr<!s64i> loc(#loc266)
    cir.br ^bb4 loc(#loc146)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc146)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc267)
  ^bb6:  // pred: ^bb5
    %12 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc199)
    %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    %14 = cir.const #cir.int<5> : !s32i loc(#loc160)
    %15 = cir.cmp(eq, %13, %14) : !s32i, !cir.bool loc(#loc268)
    cir.brcond %15 ^bb7, ^bb12 loc(#loc269)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc270)
  ^bb8:  // pred: ^bb7
    %16 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc164)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc165)
    %18 = cir.cast(integral, %17 : !s32i), !s64i loc(#loc165)
    %19 = cir.cmp(lt, %16, %18) : !s64i, !cir.bool loc(#loc271)
    cir.brcond %19 ^bb9, ^bb10 loc(#loc272)
  ^bb9:  // pred: ^bb8
    %20 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc167)
    %21 = cir.const #cir.int<2> : !s32i loc(#loc140)
    %22 = cir.cast(integral, %21 : !s32i), !s64i loc(#loc140)
    %23 = cir.binop(mul, %20, %22) nsw : !s64i loc(#loc167)
    cir.store %23, %0 : !s64i, !cir.ptr<!s64i> loc(#loc260)
    %24 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc168)
    cir.call @printLongLongLine(%24) : (!s64i) -> () loc(#loc169)
    cir.br ^bb10 loc(#loc163)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc163)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc158)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc158)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc138)
  } loc(#loc259)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc274)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc275)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc176)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc276)
    cir.br ^bb1 loc(#loc277)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc199)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc180)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc181)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc278)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc279)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<2> : !s32i loc(#loc183)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc184)
    %9 = cir.cast(integral, %8 : !s32i), !s64i loc(#loc184)
    cir.store %9, %1 : !s64i, !cir.ptr<!s64i> loc(#loc280)
    cir.br ^bb3 loc(#loc179)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc179)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc281)
  ^bb5:  // pred: ^bb4
    %10 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc199)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc188)
    %12 = cir.const #cir.int<5> : !s32i loc(#loc189)
    %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc282)
    cir.brcond %13 ^bb6, ^bb11 loc(#loc283)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc284)
  ^bb7:  // pred: ^bb6
    %14 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc193)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc194)
    %16 = cir.cast(integral, %15 : !s32i), !s64i loc(#loc194)
    %17 = cir.cmp(lt, %14, %16) : !s64i, !cir.bool loc(#loc285)
    cir.brcond %17 ^bb8, ^bb9 loc(#loc286)
  ^bb8:  // pred: ^bb7
    %18 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc196)
    %19 = cir.const #cir.int<2> : !s32i loc(#loc173)
    %20 = cir.cast(integral, %19 : !s32i), !s64i loc(#loc173)
    %21 = cir.binop(mul, %18, %20) nsw : !s64i loc(#loc196)
    cir.store %21, %0 : !s64i, !cir.ptr<!s64i> loc(#loc274)
    %22 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc197)
    cir.call @printLongLongLine(%22) : (!s64i) -> () loc(#loc198)
    cir.br ^bb9 loc(#loc192)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc192)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc187)
  ^bb11:  // 2 preds: ^bb5, ^bb10
    cir.br ^bb12 loc(#loc187)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc171)
  } loc(#loc273)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":0:0)
#loc1 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":24:1)
#loc2 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":24:25)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":35:24)
#loc8 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":35:28)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc11 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":28:1)
#loc12 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":46:1)
#loc13 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":42:13)
#loc14 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":42:37)
#loc15 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":30:5)
#loc16 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":30:13)
#loc17 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":31:12)
#loc18 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":31:5)
#loc19 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":32:5)
#loc20 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":36:5)
#loc21 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":32:8)
#loc22 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":32:20)
#loc23 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":33:5)
#loc24 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":35:9)
#loc25 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":35:17)
#loc26 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":37:5)
#loc27 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":45:5)
#loc28 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":37:8)
#loc29 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":37:20)
#loc30 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":38:5)
#loc31 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":39:9)
#loc32 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":44:9)
#loc33 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":39:12)
#loc34 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":39:19)
#loc35 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":40:9)
#loc36 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":42:30)
#loc37 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":43:31)
#loc38 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":43:13)
#loc39 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":160:1)
#loc40 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":166:1)
#loc41 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":162:5)
#loc42 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":162:14)
#loc43 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":163:5)
#loc44 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":163:14)
#loc45 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":164:5)
#loc46 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":164:14)
#loc47 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":165:5)
#loc48 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":165:14)
#loc49 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc50 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc51 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":65:19)
#loc52 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":79:27)
#loc53 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":53:1)
#loc54 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":83:1)
#loc55 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":74:17)
#loc56 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":74:41)
#loc57 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":55:5)
#loc58 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":55:13)
#loc59 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":56:12)
#loc60 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":56:5)
#loc61 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":57:5)
#loc62 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":61:5)
#loc63 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":57:8)
#loc64 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":57:20)
#loc65 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":58:5)
#loc66 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":60:9)
#loc67 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":60:17)
#loc68 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":60:24)
#loc69 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":60:28)
#loc70 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":62:5)
#loc71 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":82:5)
#loc72 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":62:8)
#loc73 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":62:20)
#loc74 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":63:5)
#loc75 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":66:5)
#loc76 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":68:5)
#loc77 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":65:9)
#loc78 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":69:9)
#loc79 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":81:9)
#loc80 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":69:12)
#loc81 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":69:19)
#loc82 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":70:9)
#loc83 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":72:13)
#loc84 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":80:13)
#loc85 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":72:17)
#loc86 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":72:25)
#loc87 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":72:35)
#loc88 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":72:36)
#loc89 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":73:13)
#loc90 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":76:13)
#loc91 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":78:13)
#loc92 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":74:34)
#loc93 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":75:35)
#loc94 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":75:17)
#loc95 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":79:17)
#loc96 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":86:1)
#loc97 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":111:1)
#loc98 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":102:17)
#loc99 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":102:41)
#loc100 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":88:5)
#loc101 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":88:13)
#loc102 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":89:12)
#loc103 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":89:5)
#loc104 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":90:5)
#loc105 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":94:5)
#loc106 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":90:8)
#loc107 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":90:20)
#loc108 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":91:5)
#loc109 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":93:9)
#loc110 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":93:17)
#loc111 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":93:24)
#loc112 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":93:28)
#loc113 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":95:5)
#loc114 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":110:5)
#loc115 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":95:8)
#loc116 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":95:20)
#loc117 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":96:5)
#loc118 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":97:9)
#loc119 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":109:9)
#loc120 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":97:12)
#loc121 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":97:19)
#loc122 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":98:9)
#loc123 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":100:13)
#loc124 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":108:13)
#loc125 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":100:17)
#loc126 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":100:25)
#loc127 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":100:35)
#loc128 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":100:36)
#loc129 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":101:13)
#loc130 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":104:13)
#loc131 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":106:13)
#loc132 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":102:34)
#loc133 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":103:35)
#loc134 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":103:17)
#loc135 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":107:27)
#loc136 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":107:17)
#loc137 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":114:1)
#loc138 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":137:1)
#loc139 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":133:13)
#loc140 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":133:37)
#loc141 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":116:5)
#loc142 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":116:13)
#loc143 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":117:12)
#loc144 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":117:5)
#loc145 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":118:5)
#loc146 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":127:5)
#loc147 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":118:8)
#loc148 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":118:20)
#loc149 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":119:5)
#loc150 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":122:5)
#loc151 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":124:5)
#loc152 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":121:19)
#loc153 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":121:9)
#loc154 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":126:17)
#loc155 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":126:16)
#loc156 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":126:9)
#loc157 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":128:5)
#loc158 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":136:5)
#loc159 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":128:8)
#loc160 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":128:20)
#loc161 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":129:5)
#loc162 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":130:9)
#loc163 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":135:9)
#loc164 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":130:12)
#loc165 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":130:19)
#loc166 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":131:9)
#loc167 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":133:30)
#loc168 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":134:31)
#loc169 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":134:13)
#loc170 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":140:1)
#loc171 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":158:1)
#loc172 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":154:13)
#loc173 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":154:37)
#loc174 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":142:5)
#loc175 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":142:13)
#loc176 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":143:12)
#loc177 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":143:5)
#loc178 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":144:5)
#loc179 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":148:5)
#loc180 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":144:8)
#loc181 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":144:20)
#loc182 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":145:5)
#loc183 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":147:17)
#loc184 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":147:16)
#loc185 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":147:9)
#loc186 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":149:5)
#loc187 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":157:5)
#loc188 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":149:8)
#loc189 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":149:20)
#loc190 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":150:5)
#loc191 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":151:9)
#loc192 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":156:9)
#loc193 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":151:12)
#loc194 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":151:19)
#loc195 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":152:9)
#loc196 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":154:30)
#loc197 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":155:31)
#loc198 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_07.c":155:13)
#loc199 = loc(fused[#loc1, #loc2])
#loc200 = loc(fused[#loc3, #loc4])
#loc201 = loc(fused[#loc5, #loc6])
#loc202 = loc(fused[#loc7, #loc8])
#loc203 = loc(fused[#loc9, #loc10])
#loc204 = loc(fused[#loc11, #loc12])
#loc205 = loc(fused[#loc13, #loc14])
#loc206 = loc(fused[#loc15, #loc16])
#loc207 = loc(fused[#loc18, #loc17])
#loc208 = loc(fused[#loc19, #loc20])
#loc209 = loc(fused[#loc21, #loc22])
#loc210 = loc(fused[#loc23, #loc20])
#loc211 = loc(fused[#loc26, #loc27])
#loc212 = loc(fused[#loc28, #loc29])
#loc213 = loc(fused[#loc30, #loc27])
#loc214 = loc(fused[#loc31, #loc32])
#loc215 = loc(fused[#loc33, #loc34])
#loc216 = loc(fused[#loc35, #loc32])
#loc217 = loc(fused[#loc39, #loc40])
#loc218 = loc(fused[#loc41, #loc42])
#loc219 = loc(fused[#loc43, #loc44])
#loc220 = loc(fused[#loc45, #loc46])
#loc221 = loc(fused[#loc47, #loc48])
#loc222 = loc(fused[#loc49, #loc50])
#loc223 = loc(fused[#loc53, #loc54])
#loc224 = loc(fused[#loc55, #loc56])
#loc225 = loc(fused[#loc57, #loc58])
#loc226 = loc(fused[#loc60, #loc59])
#loc227 = loc(fused[#loc61, #loc62])
#loc228 = loc(fused[#loc63, #loc64])
#loc229 = loc(fused[#loc65, #loc62])
#loc230 = loc(fused[#loc68, #loc69])
#loc231 = loc(fused[#loc70, #loc71])
#loc232 = loc(fused[#loc72, #loc73])
#loc233 = loc(fused[#loc74, #loc75, #loc76, #loc71])
#loc234 = loc(fused[#loc78, #loc79])
#loc235 = loc(fused[#loc80, #loc81])
#loc236 = loc(fused[#loc82, #loc79])
#loc237 = loc(fused[#loc83, #loc84])
#loc238 = loc(fused[#loc86, #loc87])
#loc239 = loc(fused[#loc85, #loc88])
#loc240 = loc(fused[#loc89, #loc90, #loc91, #loc84])
#loc241 = loc(fused[#loc96, #loc97])
#loc242 = loc(fused[#loc98, #loc99])
#loc243 = loc(fused[#loc100, #loc101])
#loc244 = loc(fused[#loc103, #loc102])
#loc245 = loc(fused[#loc104, #loc105])
#loc246 = loc(fused[#loc106, #loc107])
#loc247 = loc(fused[#loc108, #loc105])
#loc248 = loc(fused[#loc111, #loc112])
#loc249 = loc(fused[#loc113, #loc114])
#loc250 = loc(fused[#loc115, #loc116])
#loc251 = loc(fused[#loc117, #loc114])
#loc252 = loc(fused[#loc118, #loc119])
#loc253 = loc(fused[#loc120, #loc121])
#loc254 = loc(fused[#loc122, #loc119])
#loc255 = loc(fused[#loc123, #loc124])
#loc256 = loc(fused[#loc126, #loc127])
#loc257 = loc(fused[#loc125, #loc128])
#loc258 = loc(fused[#loc129, #loc130, #loc131, #loc124])
#loc259 = loc(fused[#loc137, #loc138])
#loc260 = loc(fused[#loc139, #loc140])
#loc261 = loc(fused[#loc141, #loc142])
#loc262 = loc(fused[#loc144, #loc143])
#loc263 = loc(fused[#loc145, #loc146])
#loc264 = loc(fused[#loc147, #loc148])
#loc265 = loc(fused[#loc149, #loc150, #loc151, #loc146])
#loc266 = loc(fused[#loc156, #loc154])
#loc267 = loc(fused[#loc157, #loc158])
#loc268 = loc(fused[#loc159, #loc160])
#loc269 = loc(fused[#loc161, #loc158])
#loc270 = loc(fused[#loc162, #loc163])
#loc271 = loc(fused[#loc164, #loc165])
#loc272 = loc(fused[#loc166, #loc163])
#loc273 = loc(fused[#loc170, #loc171])
#loc274 = loc(fused[#loc172, #loc173])
#loc275 = loc(fused[#loc174, #loc175])
#loc276 = loc(fused[#loc177, #loc176])
#loc277 = loc(fused[#loc178, #loc179])
#loc278 = loc(fused[#loc180, #loc181])
#loc279 = loc(fused[#loc182, #loc179])
#loc280 = loc(fused[#loc185, #loc183])
#loc281 = loc(fused[#loc186, #loc187])
#loc282 = loc(fused[#loc188, #loc189])
#loc283 = loc(fused[#loc190, #loc187])
#loc284 = loc(fused[#loc191, #loc192])
#loc285 = loc(fused[#loc193, #loc194])
#loc286 = loc(fused[#loc195, #loc192])
