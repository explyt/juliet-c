!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_scanf_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_scanf(!cir.ptr<!s8i>, ...) -> !s32i loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%99s" : !cir.array<!s8i x 4>, trailing_zeros> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc3)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_scanf_16_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc47)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc48)
    cir.br ^bb1 loc(#loc49)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc49)
  ^bb2:  // pred: ^bb1
    %2 = cir.const #cir.int<1> : !s32i loc(#loc12)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc12)
    cir.brcond %3 ^bb3, ^bb6 loc(#loc12)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc50)
  ^bb4:  // pred: ^bb3
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc47)
    cir.store %4, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc47)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc9)
    cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc48)
    %6 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, ...)>> loc(#loc15)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc3)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc3)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc16)
    %10 = cir.call @__isoc99_scanf(%8, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc15)
    cir.br ^bb5 loc(#loc14)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc17)
  ^bb6:  // 2 preds: ^bb2, ^bb5
    cir.br ^bb7 loc(#loc11)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc5)
  } loc(#loc46)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_scanf_16_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc52)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc20)
    cir.return loc(#loc19)
  } loc(#loc51)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"scanf failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc24)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc55)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc56)
    cir.br ^bb1 loc(#loc57)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc57)
  ^bb2:  // pred: ^bb1
    %2 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc33)
    cir.brcond %3 ^bb3, ^bb10 loc(#loc33)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc58)
  ^bb4:  // pred: ^bb3
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc55)
    cir.store %4, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc55)
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc30)
    cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc56)
    cir.br ^bb5 loc(#loc59)
  ^bb5:  // pred: ^bb4
    %6 = cir.get_global @__isoc99_scanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, ...)>> loc(#loc38)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc39)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc39)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    %10 = cir.call @__isoc99_scanf(%8, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc38)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc41)
    %13 = cir.cmp(eq, %10, %12) : !s32i, !cir.bool loc(#loc60)
    cir.brcond %13 ^bb6, ^bb7 loc(#loc61)
  ^bb6:  // pred: ^bb5
    %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc24)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc24)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    cir.br ^bb7 loc(#loc37)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc37)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc35)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc44)
  ^bb10:  // 2 preds: ^bb2, ^bb9
    cir.br ^bb11 loc(#loc32)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc26)
  } loc(#loc54)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_scanf_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":466:1)
#loc2 = loc("/usr/include/stdio.h":466:12)
#loc3 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":34:19)
#loc4 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":24:1)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":38:1)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":31:13)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":31:36)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":32:13)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":32:27)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":26:5)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":37:5)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":26:11)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":28:9)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":35:9)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":34:13)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":34:29)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":36:9)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":64:1)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":67:1)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":66:5)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":66:11)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc23 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":57:27)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":45:1)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":62:1)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":52:13)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":52:36)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":53:13)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":53:27)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":47:5)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":61:5)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":47:11)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":49:9)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":59:9)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":55:13)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":58:13)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":55:17)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":55:23)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":55:33)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":55:42)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":56:13)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":57:17)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_scanf_16.c":60:9)
#loc45 = loc(fused[#loc1, #loc2])
#loc46 = loc(fused[#loc4, #loc5])
#loc47 = loc(fused[#loc6, #loc7])
#loc48 = loc(fused[#loc8, #loc9])
#loc49 = loc(fused[#loc10, #loc11])
#loc50 = loc(fused[#loc13, #loc14])
#loc51 = loc(fused[#loc18, #loc19])
#loc52 = loc(fused[#loc20, #loc21])
#loc53 = loc(fused[#loc22, #loc23])
#loc54 = loc(fused[#loc25, #loc26])
#loc55 = loc(fused[#loc27, #loc28])
#loc56 = loc(fused[#loc29, #loc30])
#loc57 = loc(fused[#loc31, #loc32])
#loc58 = loc(fused[#loc34, #loc35])
#loc59 = loc(fused[#loc36, #loc37])
#loc60 = loc(fused[#loc38, #loc41])
#loc61 = loc(fused[#loc42, #loc37])
