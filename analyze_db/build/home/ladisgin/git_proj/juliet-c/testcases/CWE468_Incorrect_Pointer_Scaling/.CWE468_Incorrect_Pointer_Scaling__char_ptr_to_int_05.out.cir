!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc47 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":97:10)
#loc48 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":97:14)
#loc49 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":97:20)
#loc50 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":97:32)
#loc129 = loc(fused[#loc47, #loc48])
#loc130 = loc(fused[#loc49, #loc50])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE468_Incorrect_Pointer_Scaling/CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.good2.intArray = #cir.const_array<[#cir.int<1> : !s32i, #cir.int<2> : !s32i, #cir.int<3> : !s32i, #cir.int<4> : !s32i, #cir.int<5> : !s32i]> : !cir.array<!s32i x 5> loc(#loc111)
  cir.global "private" constant cir_private @__const.good1.intArray = #cir.const_array<[#cir.int<1> : !s32i, #cir.int<2> : !s32i, #cir.int<3> : !s32i, #cir.int<4> : !s32i, #cir.int<5> : !s32i]> : !cir.array<!s32i x 5> loc(#loc112)
  cir.global "private" constant cir_private @__const.CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05_bad.intArray = #cir.const_array<[#cir.int<1> : !s32i, #cir.int<2> : !s32i, #cir.int<3> : !s32i, #cir.int<4> : !s32i, #cir.int<5> : !s32i]> : !cir.array<!s32i x 5> loc(#loc113)
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc114)
  cir.func private @printIntLine(!s32i) loc(#loc115)
  cir.func no_proto @CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 5>, !cir.ptr<!cir.array<!s32i x 5>>, ["intArray"] {alignment = 16 : i64} loc(#loc113)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["charPointer", init] {alignment = 8 : i64} loc(#loc117)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["toPrint", init] {alignment = 4 : i64} loc(#loc118)
    cir.br ^bb1 loc(#loc119)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc114)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %5 ^bb2, ^bb5 loc(#loc120)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc121)
  ^bb3:  // pred: ^bb2
    %6 = cir.get_global @__const.CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05_bad.intArray : !cir.ptr<!cir.array<!s32i x 5>> loc(#loc113)
    cir.copy %6 to %0 : !cir.ptr<!cir.array<!s32i x 5>> loc(#loc113)
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc14)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s32i>), !cir.ptr<!s8i> loc(#loc14)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc117)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc24)
    %11 = cir.ptr_stride(%9 : !cir.ptr<!s8i>, %10 : !s32i), !cir.ptr<!s8i> loc(#loc25)
    %12 = cir.load %11 : !cir.ptr<!s8i>, !s8i loc(#loc26)
    %13 = cir.cast(integral, %12 : !s8i), !s32i loc(#loc26)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc118)
    %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc27)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc28)
    cir.br ^bb4 loc(#loc22)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc18)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc18)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc12)
  } loc(#loc116)
  cir.func no_proto @CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc123)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc31)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc124)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc33)
    cir.return loc(#loc30)
  } loc(#loc122)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc125)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc126)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc127)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc41)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc42)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc44)
  cir.func @main(%arg0: !s32i loc(fused[#loc47, #loc48]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc49, #loc50])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc129)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc130)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc46)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc51)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc51)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc52)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc53)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc53)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc54)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc41)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    %8 = cir.get_global @CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05_good : !cir.ptr<!cir.func<!void ()>> loc(#loc131)
    cir.call @CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05_good() : () -> () loc(#loc56)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc42)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc43)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %13 = cir.get_global @CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc132)
    cir.call @CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05_bad() : () -> () loc(#loc60)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc44)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc63)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc133)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    cir.return %17 : !s32i loc(#loc133)
  } loc(#loc128)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc134)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc67)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 5>, !cir.ptr<!cir.array<!s32i x 5>>, ["intArray"] {alignment = 16 : i64} loc(#loc112)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["charPointer", init] {alignment = 8 : i64} loc(#loc136)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["toPrint", init] {alignment = 4 : i64} loc(#loc137)
    cir.br ^bb1 loc(#loc138)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc134)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc76)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc76)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc139)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc67)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    cir.br ^bb6 loc(#loc78)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc140)
  ^bb4:  // pred: ^bb3
    %8 = cir.get_global @__const.good1.intArray : !cir.ptr<!cir.array<!s32i x 5>> loc(#loc112)
    cir.copy %8 to %0 : !cir.ptr<!cir.array<!s32i x 5>> loc(#loc112)
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc71)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!s32i>), !cir.ptr<!s8i> loc(#loc71)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc136)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc84)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc84)
    %14 = cir.const #cir.int<4> : !u64i loc(#loc141)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc142)
    %16 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %15 : !u64i), !cir.ptr<!s8i> loc(#loc87)
    %17 = cir.load %16 : !cir.ptr<!s8i>, !s8i loc(#loc88)
    %18 = cir.cast(integral, %17 : !s8i), !s32i loc(#loc88)
    cir.store %18, %2 : !s32i, !cir.ptr<!s32i> loc(#loc137)
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc90)
    cir.br ^bb5 loc(#loc82)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc75)
  ^bb6:  // 2 preds: ^bb2, ^bb5
    cir.br ^bb7 loc(#loc75)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc69)
  } loc(#loc135)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 5>, !cir.ptr<!cir.array<!s32i x 5>>, ["intArray"] {alignment = 16 : i64} loc(#loc111)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["charPointer", init] {alignment = 8 : i64} loc(#loc144)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["toPrint", init] {alignment = 4 : i64} loc(#loc145)
    cir.br ^bb1 loc(#loc146)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc114)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc99)
    cir.brcond %5 ^bb2, ^bb5 loc(#loc147)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc148)
  ^bb3:  // pred: ^bb2
    %6 = cir.get_global @__const.good2.intArray : !cir.ptr<!cir.array<!s32i x 5>> loc(#loc111)
    cir.copy %6 to %0 : !cir.ptr<!cir.array<!s32i x 5>> loc(#loc111)
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc94)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s32i>), !cir.ptr<!s8i> loc(#loc94)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc144)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    %10 = cir.const #cir.int<2> : !s32i loc(#loc104)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc104)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc149)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc150)
    %14 = cir.ptr_stride(%9 : !cir.ptr<!s8i>, %13 : !u64i), !cir.ptr<!s8i> loc(#loc107)
    %15 = cir.load %14 : !cir.ptr<!s8i>, !s8i loc(#loc108)
    %16 = cir.cast(integral, %15 : !s8i), !s32i loc(#loc108)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc145)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc110)
    cir.br ^bb4 loc(#loc102)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc98)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc98)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc92)
  } loc(#loc143)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE468_Incorrect_Pointer_Scaling/CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":0:0)
#loc1 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":72:13)
#loc2 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":72:47)
#loc3 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":56:13)
#loc4 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":56:47)
#loc5 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":31:13)
#loc6 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":31:47)
#loc7 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":21:1)
#loc8 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":21:25)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc11 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":26:1)
#loc12 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":39:1)
#loc13 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":32:13)
#loc14 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":32:41)
#loc15 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":35:13)
#loc16 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":35:50)
#loc17 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":28:5)
#loc18 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":38:5)
#loc19 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":28:8)
#loc20 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":29:5)
#loc21 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":30:9)
#loc22 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":37:9)
#loc23 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":35:36)
#loc24 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":35:48)
#loc25 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":35:47)
#loc26 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":35:34)
#loc27 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":36:26)
#loc28 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":36:13)
#loc29 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":82:1)
#loc30 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":86:1)
#loc31 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":84:5)
#loc32 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":84:11)
#loc33 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":85:5)
#loc34 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":85:11)
#loc35 = loc("/usr/include/stdlib.h":575:1)
#loc36 = loc("/usr/include/stdlib.h":575:41)
#loc37 = loc("/usr/include/time.h":76:1)
#loc38 = loc("/usr/include/time.h":76:38)
#loc39 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc40 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc41 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":102:15)
#loc42 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":104:15)
#loc43 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":107:15)
#loc44 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":109:15)
#loc45 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":97:1)
#loc46 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":112:1)
#loc51 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":98:1)
#loc52 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":100:27)
#loc53 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":100:22)
#loc54 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":100:5)
#loc55 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":102:5)
#loc56 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":103:5)
#loc57 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":103:63)
#loc58 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":104:5)
#loc59 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":107:5)
#loc60 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":108:5)
#loc61 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":108:62)
#loc62 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":109:5)
#loc63 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":111:12)
#loc64 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":111:5)
#loc65 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":22:1)
#loc66 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":22:26)
#loc67 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":51:19)
#loc68 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":46:1)
#loc69 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":64:1)
#loc70 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":57:13)
#loc71 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":57:41)
#loc72 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":60:13)
#loc73 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":60:64)
#loc74 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":48:5)
#loc75 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":63:5)
#loc76 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":48:8)
#loc77 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":49:5)
#loc78 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":52:5)
#loc79 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":54:5)
#loc80 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":51:9)
#loc81 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":55:9)
#loc82 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":62:9)
#loc83 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":60:36)
#loc84 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":60:49)
#loc85 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":60:51)
#loc86 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":60:61)
#loc87 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":60:47)
#loc88 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":60:34)
#loc89 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":61:26)
#loc90 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":61:13)
#loc91 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":67:1)
#loc92 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":80:1)
#loc93 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":73:13)
#loc94 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":73:41)
#loc95 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":76:13)
#loc96 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":76:64)
#loc97 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":69:5)
#loc98 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":79:5)
#loc99 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":69:8)
#loc100 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":70:5)
#loc101 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":71:9)
#loc102 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":78:9)
#loc103 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":76:36)
#loc104 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":76:49)
#loc105 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":76:51)
#loc106 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":76:61)
#loc107 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":76:47)
#loc108 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":76:34)
#loc109 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":77:26)
#loc110 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_05.c":77:13)
#loc111 = loc(fused[#loc1, #loc2])
#loc112 = loc(fused[#loc3, #loc4])
#loc113 = loc(fused[#loc5, #loc6])
#loc114 = loc(fused[#loc7, #loc8])
#loc115 = loc(fused[#loc9, #loc10])
#loc116 = loc(fused[#loc11, #loc12])
#loc117 = loc(fused[#loc13, #loc14])
#loc118 = loc(fused[#loc15, #loc16])
#loc119 = loc(fused[#loc17, #loc18])
#loc120 = loc(fused[#loc20, #loc18])
#loc121 = loc(fused[#loc21, #loc22])
#loc122 = loc(fused[#loc29, #loc30])
#loc123 = loc(fused[#loc31, #loc32])
#loc124 = loc(fused[#loc33, #loc34])
#loc125 = loc(fused[#loc35, #loc36])
#loc126 = loc(fused[#loc37, #loc38])
#loc127 = loc(fused[#loc39, #loc40])
#loc128 = loc(fused[#loc45, #loc46])
#loc131 = loc(fused[#loc56, #loc57])
#loc132 = loc(fused[#loc60, #loc61])
#loc133 = loc(fused[#loc64, #loc63])
#loc134 = loc(fused[#loc65, #loc66])
#loc135 = loc(fused[#loc68, #loc69])
#loc136 = loc(fused[#loc70, #loc71])
#loc137 = loc(fused[#loc72, #loc73])
#loc138 = loc(fused[#loc74, #loc75])
#loc139 = loc(fused[#loc77, #loc78, #loc79, #loc75])
#loc140 = loc(fused[#loc81, #loc82])
#loc141 = loc(fused[#loc85, #loc86])
#loc142 = loc(fused[#loc84, #loc86])
#loc143 = loc(fused[#loc91, #loc92])
#loc144 = loc(fused[#loc93, #loc94])
#loc145 = loc(fused[#loc95, #loc96])
#loc146 = loc(fused[#loc97, #loc98])
#loc147 = loc(fused[#loc100, #loc98])
#loc148 = loc(fused[#loc101, #loc102])
#loc149 = loc(fused[#loc105, #loc106])
#loc150 = loc(fused[#loc104, #loc106])
