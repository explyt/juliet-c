!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc12 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":26:24)
#loc13 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":26:30)
#loc64 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":83:28)
#loc65 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":83:34)
#loc117 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":62:28)
#loc118 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":62:34)
#loc147 = loc(fused[#loc12, #loc13])
#loc167 = loc(fused[#loc64, #loc65])
#loc185 = loc(fused[#loc117, #loc118])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc142)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc143)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc144)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc145)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func internal private @badSource(%arg0: !cir.float loc(fused[#loc12, #loc13])) -> !cir.float extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc147)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["__retval"] {alignment = 4 : i64} loc(#loc11)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc14)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc149)
      cir.scope {
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc21)
        %6 = cir.const #cir.int<20> : !s32i loc(#loc22)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc143)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc23)
        %9 = cir.call @fgets(%5, %6, %8) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc24)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc25)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc25)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc151)
        cir.if %12 {
          %13 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc29)
          %14 = cir.call @atof(%13) : (!cir.ptr<!s8i>) -> !cir.double side_effect(pure) extra(#fn_attr) loc(#loc30)
          %15 = cir.cast(floating, %14 : !cir.double), !cir.float loc(#loc30)
          cir.store %15, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc153)
        } else {
          %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc33)
        } loc(#loc152)
      } loc(#loc150)
    } loc(#loc148)
    %2 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc34)
    cir.store %2, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc154)
    %3 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc154)
    cir.return %3 : !cir.float loc(#loc154)
  } loc(#loc146)
  cir.func private @printIntLine(!s32i) loc(#loc155)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fgets_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc157)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc42)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc158)
    %2 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc44)
    %3 = cir.call @badSource(%2) : (!cir.float) -> !cir.float loc(#loc45)
    cir.store %3, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc159)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc161)
      %5 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc52)
      %6 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc53)
      %7 = cir.cast(floating, %6 : !cir.float), !cir.double loc(#loc53)
      %8 = cir.binop(div, %5, %7) : !cir.double loc(#loc162)
      %9 = cir.cast(float_to_int, %8 : !cir.double), !s32i loc(#loc162)
      cir.store %9, %4 : !s32i, !cir.ptr<!s32i> loc(#loc161)
      %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc54)
      cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc55)
    } loc(#loc160)
    cir.return loc(#loc39)
  } loc(#loc156)
  cir.func no_proto @CWE369_Divide_by_Zero__float_fgets_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc164)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc58)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc165)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc60)
    cir.return loc(#loc57)
  } loc(#loc163)
  cir.func internal private @goodB2GSource(%arg0: !cir.float loc(fused[#loc64, #loc65])) -> !cir.float extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc167)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["__retval"] {alignment = 4 : i64} loc(#loc63)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc66)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc169)
      cir.scope {
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc73)
        %6 = cir.const #cir.int<20> : !s32i loc(#loc74)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc143)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc75)
        %9 = cir.call @fgets(%5, %6, %8) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc76)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc77)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc77)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc171)
        cir.if %12 {
          %13 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc81)
          %14 = cir.call @atof(%13) : (!cir.ptr<!s8i>) -> !cir.double side_effect(pure) extra(#fn_attr) loc(#loc82)
          %15 = cir.cast(floating, %14 : !cir.double), !cir.float loc(#loc82)
          cir.store %15, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc173)
        } else {
          %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc85)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc85)
          cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc86)
        } loc(#loc172)
      } loc(#loc170)
    } loc(#loc168)
    %2 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc87)
    cir.store %2, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc174)
    %3 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc174)
    cir.return %3 : !cir.float loc(#loc174)
  } loc(#loc166)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc89)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc176)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc94)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc177)
    %2 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc96)
    %3 = cir.call @goodB2GSource(%2) : (!cir.float) -> !cir.float loc(#loc97)
    cir.store %3, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc178)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc102)
      %5 = cir.cast(floating, %4 : !cir.float), !cir.double loc(#loc102)
      %6 = cir.fabs %5 : !cir.double loc(#loc102)
      %7 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc103)
      %8 = cir.cmp(gt, %6, %7) : !cir.double, !cir.bool loc(#loc180)
      cir.if %8 {
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc182)
        %10 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc110)
        %11 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc111)
        %12 = cir.cast(floating, %11 : !cir.float), !cir.double loc(#loc111)
        %13 = cir.binop(div, %10, %12) : !cir.double loc(#loc183)
        %14 = cir.cast(float_to_int, %13 : !cir.double), !s32i loc(#loc183)
        cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc182)
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc112)
        cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc113)
      } else {
        %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc89)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc89)
        cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc114)
      } loc(#loc181)
    } loc(#loc179)
    cir.return loc(#loc91)
  } loc(#loc175)
  cir.func internal private @goodG2BSource(%arg0: !cir.float loc(fused[#loc117, #loc118])) -> !cir.float extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc185)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["__retval"] {alignment = 4 : i64} loc(#loc116)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc119)
    %2 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc120)
    cir.store %2, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc186)
    %3 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc122)
    cir.store %3, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc187)
    %4 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc187)
    cir.return %4 : !cir.float loc(#loc187)
  } loc(#loc184)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc189)
    %1 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc128)
    cir.store %1, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc190)
    %2 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc130)
    %3 = cir.call @goodG2BSource(%2) : (!cir.float) -> !cir.float loc(#loc131)
    cir.store %3, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc191)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc193)
      %5 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc138)
      %6 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc139)
      %7 = cir.cast(floating, %6 : !cir.float), !cir.double loc(#loc139)
      %8 = cir.binop(div, %5, %7) : !cir.double loc(#loc194)
      %9 = cir.cast(float_to_int, %8 : !cir.double), !s32i loc(#loc194)
      cir.store %9, %4 : !s32i, !cir.ptr<!s32i> loc(#loc193)
      %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc140)
      cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc141)
    } loc(#loc192)
    cir.return loc(#loc125)
  } loc(#loc188)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_fgets_42.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":102:1)
#loc6 = loc("/usr/include/stdlib.h":103:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":38:23)
#loc10 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":26:1)
#loc11 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":42:1)
#loc14 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":27:1)
#loc15 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":28:5)
#loc16 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":40:5)
#loc17 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":29:9)
#loc18 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":29:41)
#loc19 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":31:9)
#loc20 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":39:9)
#loc21 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":31:19)
#loc22 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":31:32)
#loc23 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":31:49)
#loc24 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":31:13)
#loc25 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":31:59)
#loc26 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":32:9)
#loc27 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":35:9)
#loc28 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":37:9)
#loc29 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":34:32)
#loc30 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":34:27)
#loc31 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":34:13)
#loc32 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":34:43)
#loc33 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":38:13)
#loc34 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":41:12)
#loc35 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":41:5)
#loc36 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc37 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc38 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":44:1)
#loc39 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":55:1)
#loc40 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":46:5)
#loc41 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":46:11)
#loc42 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":48:12)
#loc43 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":48:5)
#loc44 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":49:22)
#loc45 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":49:12)
#loc46 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":49:5)
#loc47 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":49:26)
#loc48 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":50:5)
#loc49 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":54:5)
#loc50 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":52:9)
#loc51 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":52:40)
#loc52 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":52:28)
#loc53 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":52:36)
#loc54 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":53:22)
#loc55 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":53:9)
#loc56 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":119:1)
#loc57 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":123:1)
#loc58 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":121:5)
#loc59 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":121:13)
#loc60 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":122:5)
#loc61 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":122:13)
#loc62 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":83:1)
#loc63 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":99:1)
#loc66 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":84:1)
#loc67 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":85:5)
#loc68 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":97:5)
#loc69 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":86:9)
#loc70 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":86:41)
#loc71 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":88:9)
#loc72 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":96:9)
#loc73 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":88:19)
#loc74 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":88:32)
#loc75 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":88:49)
#loc76 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":88:13)
#loc77 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":88:59)
#loc78 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":89:9)
#loc79 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":92:9)
#loc80 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":94:9)
#loc81 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":91:32)
#loc82 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":91:27)
#loc83 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":91:13)
#loc84 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":91:43)
#loc85 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":95:23)
#loc86 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":95:13)
#loc87 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":98:12)
#loc88 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":98:5)
#loc89 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":115:19)
#loc90 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":101:1)
#loc91 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":117:1)
#loc92 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":103:5)
#loc93 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":103:11)
#loc94 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":105:12)
#loc95 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":105:5)
#loc96 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":106:26)
#loc97 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":106:12)
#loc98 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":106:5)
#loc99 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":106:30)
#loc100 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":108:5)
#loc101 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":116:5)
#loc102 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":108:13)
#loc103 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":108:21)
#loc104 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":108:8)
#loc105 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":109:5)
#loc106 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":112:5)
#loc107 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":114:5)
#loc108 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":110:9)
#loc109 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":110:40)
#loc110 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":110:28)
#loc111 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":110:36)
#loc112 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":111:22)
#loc113 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":111:9)
#loc114 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":115:9)
#loc115 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":62:1)
#loc116 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":67:1)
#loc119 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":63:1)
#loc120 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":65:12)
#loc121 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":65:5)
#loc122 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":66:12)
#loc123 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":66:5)
#loc124 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":69:1)
#loc125 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":80:1)
#loc126 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":71:5)
#loc127 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":71:11)
#loc128 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":73:12)
#loc129 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":73:5)
#loc130 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":74:26)
#loc131 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":74:12)
#loc132 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":74:5)
#loc133 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":74:30)
#loc134 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":75:5)
#loc135 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":79:5)
#loc136 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":77:9)
#loc137 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":77:40)
#loc138 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":77:28)
#loc139 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":77:36)
#loc140 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":78:22)
#loc141 = loc("CWE369_Divide_by_Zero__float_fgets_42.c":78:9)
#loc142 = loc(fused[#loc1, #loc2])
#loc143 = loc(fused[#loc3, #loc4])
#loc144 = loc(fused[#loc5, #loc6])
#loc145 = loc(fused[#loc7, #loc8])
#loc146 = loc(fused[#loc10, #loc11])
#loc148 = loc(fused[#loc15, #loc16])
#loc149 = loc(fused[#loc17, #loc18])
#loc150 = loc(fused[#loc19, #loc20])
#loc151 = loc(fused[#loc24, #loc25])
#loc152 = loc(fused[#loc26, #loc27, #loc28, #loc20])
#loc153 = loc(fused[#loc31, #loc32])
#loc154 = loc(fused[#loc35, #loc34])
#loc155 = loc(fused[#loc36, #loc37])
#loc156 = loc(fused[#loc38, #loc39])
#loc157 = loc(fused[#loc40, #loc41])
#loc158 = loc(fused[#loc43, #loc42])
#loc159 = loc(fused[#loc46, #loc47])
#loc160 = loc(fused[#loc48, #loc49])
#loc161 = loc(fused[#loc50, #loc51])
#loc162 = loc(fused[#loc52, #loc53])
#loc163 = loc(fused[#loc56, #loc57])
#loc164 = loc(fused[#loc58, #loc59])
#loc165 = loc(fused[#loc60, #loc61])
#loc166 = loc(fused[#loc62, #loc63])
#loc168 = loc(fused[#loc67, #loc68])
#loc169 = loc(fused[#loc69, #loc70])
#loc170 = loc(fused[#loc71, #loc72])
#loc171 = loc(fused[#loc76, #loc77])
#loc172 = loc(fused[#loc78, #loc79, #loc80, #loc72])
#loc173 = loc(fused[#loc83, #loc84])
#loc174 = loc(fused[#loc88, #loc87])
#loc175 = loc(fused[#loc90, #loc91])
#loc176 = loc(fused[#loc92, #loc93])
#loc177 = loc(fused[#loc95, #loc94])
#loc178 = loc(fused[#loc98, #loc99])
#loc179 = loc(fused[#loc100, #loc101])
#loc180 = loc(fused[#loc104, #loc103])
#loc181 = loc(fused[#loc105, #loc106, #loc107, #loc101])
#loc182 = loc(fused[#loc108, #loc109])
#loc183 = loc(fused[#loc110, #loc111])
#loc184 = loc(fused[#loc115, #loc116])
#loc186 = loc(fused[#loc121, #loc120])
#loc187 = loc(fused[#loc123, #loc122])
#loc188 = loc(fused[#loc124, #loc125])
#loc189 = loc(fused[#loc126, #loc127])
#loc190 = loc(fused[#loc129, #loc128])
#loc191 = loc(fused[#loc132, #loc133])
#loc192 = loc(fused[#loc134, #loc135])
#loc193 = loc(fused[#loc136, #loc137])
#loc194 = loc(fused[#loc138, #loc139])
