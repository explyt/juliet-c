!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":87:10)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":87:14)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":87:20)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":87:32)
#loc119 = loc(fused[#loc80, #loc81])
#loc120 = loc(fused[#loc82, #loc83])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s10/CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @_ZN53CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_629badSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc96)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc97)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc98)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc99)
  cir.func @_ZN53CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_623badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc101)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc102)
    cir.call @_ZN53CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_629badSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc15)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc104)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc20)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc20)
      %5 = cir.const #cir.int<67> : !s8i loc(#loc21)
      %6 = cir.cast(integral, %5 : !s8i), !s32i loc(#loc21)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc22)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc23)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc22)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc22)
      cir.libc.memset %10 bytes from %4 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc105)
      %11 = cir.const #cir.int<0> : !s8i loc(#loc26)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc27)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc28)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc27)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc29)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc29)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc106)
      %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc30)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
      %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc32)
      %20 = cir.call @strcpy(%18, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc30)
      %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
      cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc34)
      %22 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc35)
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
      %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
      cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc35)
    } loc(#loc103)
    cir.return loc(#loc10)
  } loc(#loc100)
  cir.func private @_ZN53CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_6213goodG2BSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc107)
  cir.func internal private @_ZN53CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc109)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc43)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc110)
    cir.call @_ZN53CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_6213goodG2BSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc45)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc112)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc50)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc50)
      %5 = cir.const #cir.int<67> : !s8i loc(#loc51)
      %6 = cir.cast(integral, %5 : !s8i), !s32i loc(#loc51)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc52)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc53)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc52)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc52)
      cir.libc.memset %10 bytes from %4 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc113)
      %11 = cir.const #cir.int<0> : !s8i loc(#loc56)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc57)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc58)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc57)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc59)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc59)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc114)
      %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc60)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
      %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc62)
      %20 = cir.call @strcpy(%18, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc60)
      %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
      cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc64)
      %22 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc65)
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
      %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc66)
      cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc65)
    } loc(#loc111)
    cir.return loc(#loc40)
  } loc(#loc108)
  cir.func @_ZN53CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_624goodEv() extra(#fn_attr1) {
    cir.call @_ZN53CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62L7goodG2BEv() : () -> () loc(#loc69)
    cir.return loc(#loc68)
  } loc(#loc115)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc116)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc117)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc75)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc77)
  cir.func @main(%arg0: !s32i loc(fused[#loc80, #loc81]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc82, #loc83])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc119)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc120)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc79)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc84)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc84)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc85)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc86)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc86)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc87)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc74)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    cir.call @_ZN53CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_624goodEv() : () -> () loc(#loc89)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc75)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc76)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    cir.call @_ZN53CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_623badEv() : () -> () loc(#loc92)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc77)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc94)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc121)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    cir.return %15 : !s32i loc(#loc121)
  } loc(#loc118)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s10/CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":27:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":27:28)
#loc3 = loc("/usr/include/string.h":141:1)
#loc4 = loc("/usr/include/string.h":142:14)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":29:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":43:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":31:5)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":31:12)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":32:12)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":32:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":33:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":34:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":42:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":35:9)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":35:24)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":36:16)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":36:24)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":36:29)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":36:33)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":36:9)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":36:34)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":37:25)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":37:16)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":37:20)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":37:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":39:9)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":39:16)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":39:22)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":40:19)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":40:9)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":41:9)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":41:14)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":50:1)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":50:32)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":52:1)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":66:1)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":54:5)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":54:12)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":55:12)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":55:5)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":56:5)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":57:5)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":65:5)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":58:9)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":58:24)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":59:16)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":59:24)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":59:29)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":59:33)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":59:9)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":59:34)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":60:25)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":60:16)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":60:20)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":60:9)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":62:9)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":62:16)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":62:22)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":63:19)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":63:9)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":64:9)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":64:14)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":68:1)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":71:1)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":70:5)
#loc70 = loc("/usr/include/stdlib.h":575:1)
#loc71 = loc("/usr/include/stdlib.h":575:41)
#loc72 = loc("/usr/include/time.h":76:1)
#loc73 = loc("/usr/include/time.h":76:38)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":92:15)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":94:15)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":97:15)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":99:15)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":87:1)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":102:1)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":88:1)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":90:27)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":90:22)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":90:5)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":92:5)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":93:5)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":94:5)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":97:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":98:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":99:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":101:12)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_dest_char_cpy_62a.cpp":101:5)
#loc96 = loc(fused[#loc1, #loc2])
#loc97 = loc(fused[#loc3, #loc4])
#loc98 = loc(fused[#loc5, #loc6])
#loc99 = loc(fused[#loc7, #loc8])
#loc100 = loc(fused[#loc9, #loc10])
#loc101 = loc(fused[#loc11, #loc12])
#loc102 = loc(fused[#loc14, #loc13])
#loc103 = loc(fused[#loc16, #loc17])
#loc104 = loc(fused[#loc18, #loc19])
#loc105 = loc(fused[#loc24, #loc25])
#loc106 = loc(fused[#loc29, #loc26])
#loc107 = loc(fused[#loc37, #loc38])
#loc108 = loc(fused[#loc39, #loc40])
#loc109 = loc(fused[#loc41, #loc42])
#loc110 = loc(fused[#loc44, #loc43])
#loc111 = loc(fused[#loc46, #loc47])
#loc112 = loc(fused[#loc48, #loc49])
#loc113 = loc(fused[#loc54, #loc55])
#loc114 = loc(fused[#loc59, #loc56])
#loc115 = loc(fused[#loc67, #loc68])
#loc116 = loc(fused[#loc70, #loc71])
#loc117 = loc(fused[#loc72, #loc73])
#loc118 = loc(fused[#loc78, #loc79])
#loc121 = loc(fused[#loc95, #loc94])
