!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc37 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":97:10)
#loc38 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":97:14)
#loc39 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":97:20)
#loc40 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":97:32)
#loc124 = loc(fused[#loc37, #loc38])
#loc125 = loc(fused[#loc39, #loc40])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__char_alloca_use_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printHexCharLine(!s8i) loc(#loc109)
  cir.func no_proto @CWE758_Undefined_Behavior__char_alloca_use_06_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc7)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc8)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc112)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["pointer", init] {alignment = 8 : i64} loc(#loc115)
          %4 = cir.const #cir.int<1> : !u64i loc(#loc13)
          %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc13)
          %6 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc116)
          %7 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc13)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc13)
          cir.store %8, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
          %9 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
          %10 = cir.load %9 : !cir.ptr<!s8i>, !s8i loc(#loc16)
          cir.store %10, %6 : !s8i, !cir.ptr<!s8i> loc(#loc116)
          %11 = cir.load %6 : !cir.ptr<!s8i>, !s8i loc(#loc17)
          cir.call @printHexCharLine(%11) : (!s8i) -> () loc(#loc18)
        } loc(#loc114)
      } loc(#loc113)
    } loc(#loc111)
    cir.return loc(#loc4)
  } loc(#loc110)
  cir.func no_proto @CWE758_Undefined_Behavior__char_alloca_use_06_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc118)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc21)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc119)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc23)
    cir.return loc(#loc20)
  } loc(#loc117)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc120)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc121)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc122)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc31)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc32)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc33)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc34)
  cir.func @main(%arg0: !s32i loc(fused[#loc37, #loc38]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc39, #loc40])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc124)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc125)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc36)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc41)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc41)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc42)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc43)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc43)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc44)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc31)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc31)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    %8 = cir.get_global @CWE758_Undefined_Behavior__char_alloca_use_06_good : !cir.ptr<!cir.func<!void ()>> loc(#loc126)
    cir.call @CWE758_Undefined_Behavior__char_alloca_use_06_good() : () -> () loc(#loc46)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc32)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc32)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc33)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc33)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    %13 = cir.get_global @CWE758_Undefined_Behavior__char_alloca_use_06_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc127)
    cir.call @CWE758_Undefined_Behavior__char_alloca_use_06_bad() : () -> () loc(#loc50)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc34)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc53)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc128)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    cir.return %17 : !s32i loc(#loc128)
  } loc(#loc123)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc55)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc60)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc61)
      %2 = cir.cmp(ne, %0, %1) : !s32i, !cir.bool loc(#loc131)
      cir.if %2 {
        %3 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc55)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc55)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc65)
      } else {
        cir.scope {
          %3 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc134)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["pointer", init] {alignment = 8 : i64} loc(#loc135)
          %5 = cir.const #cir.int<1> : !u64i loc(#loc71)
          %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc71)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc71)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc71)
          cir.store %8, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc135)
          %9 = cir.const #cir.int<5> : !s32i loc(#loc72)
          %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc72)
          cir.store %10, %3 : !s8i, !cir.ptr<!s8i> loc(#loc136)
          %11 = cir.load %3 : !cir.ptr<!s8i>, !s8i loc(#loc74)
          %12 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
          cir.store %11, %12 : !s8i, !cir.ptr<!s8i> loc(#loc137)
          cir.scope {
            %13 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc139)
            %14 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
            %15 = cir.load %14 : !cir.ptr<!s8i>, !s8i loc(#loc81)
            cir.store %15, %13 : !s8i, !cir.ptr<!s8i> loc(#loc139)
            %16 = cir.load %13 : !cir.ptr<!s8i>, !s8i loc(#loc82)
            cir.call @printHexCharLine(%16) : (!s8i) -> () loc(#loc83)
          } loc(#loc138)
        } loc(#loc133)
      } loc(#loc132)
    } loc(#loc130)
    cir.return loc(#loc57)
  } loc(#loc129)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc88)
      %1 = cir.const #cir.int<5> : !s32i loc(#loc89)
      %2 = cir.cmp(eq, %0, %1) : !s32i, !cir.bool loc(#loc142)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc145)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["pointer", init] {alignment = 8 : i64} loc(#loc146)
          %5 = cir.const #cir.int<1> : !u64i loc(#loc96)
          %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc96)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc96)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc96)
          cir.store %8, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
          %9 = cir.const #cir.int<5> : !s32i loc(#loc97)
          %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc97)
          cir.store %10, %3 : !s8i, !cir.ptr<!s8i> loc(#loc147)
          %11 = cir.load %3 : !cir.ptr<!s8i>, !s8i loc(#loc99)
          %12 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
          cir.store %11, %12 : !s8i, !cir.ptr<!s8i> loc(#loc148)
          cir.scope {
            %13 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc150)
            %14 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
            %15 = cir.load %14 : !cir.ptr<!s8i>, !s8i loc(#loc106)
            cir.store %15, %13 : !s8i, !cir.ptr<!s8i> loc(#loc150)
            %16 = cir.load %13 : !cir.ptr<!s8i>, !s8i loc(#loc107)
            cir.call @printHexCharLine(%16) : (!s8i) -> () loc(#loc108)
          } loc(#loc149)
        } loc(#loc144)
      } loc(#loc143)
    } loc(#loc141)
    cir.return loc(#loc85)
  } loc(#loc140)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__char_alloca_use_06.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":30:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":30:35)
#loc3 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":25:1)
#loc4 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":35:1)
#loc5 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":27:5)
#loc6 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":34:5)
#loc7 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":27:8)
#loc8 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":27:27)
#loc9 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":28:5)
#loc10 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":29:9)
#loc11 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":33:9)
#loc12 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":30:13)
#loc13 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":30:38)
#loc14 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":31:13)
#loc15 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":31:26)
#loc16 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":31:25)
#loc17 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":32:30)
#loc18 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":32:13)
#loc19 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":82:1)
#loc20 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":86:1)
#loc21 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":84:5)
#loc22 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":84:11)
#loc23 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":85:5)
#loc24 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":85:11)
#loc25 = loc("/usr/include/stdlib.h":575:1)
#loc26 = loc("/usr/include/stdlib.h":575:41)
#loc27 = loc("/usr/include/time.h":76:1)
#loc28 = loc("/usr/include/time.h":76:38)
#loc29 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc30 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc31 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":102:15)
#loc32 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":104:15)
#loc33 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":107:15)
#loc34 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":109:15)
#loc35 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":97:1)
#loc36 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":112:1)
#loc41 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":98:1)
#loc42 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":100:27)
#loc43 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":100:22)
#loc44 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":100:5)
#loc45 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":102:5)
#loc46 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":103:5)
#loc47 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":103:56)
#loc48 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":104:5)
#loc49 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":107:5)
#loc50 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":108:5)
#loc51 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":108:55)
#loc52 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":109:5)
#loc53 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":111:12)
#loc54 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":111:5)
#loc55 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":47:19)
#loc56 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":42:1)
#loc57 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":62:1)
#loc58 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":44:5)
#loc59 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":61:5)
#loc60 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":44:8)
#loc61 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":44:27)
#loc62 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":45:5)
#loc63 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":48:5)
#loc64 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":50:5)
#loc65 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":47:9)
#loc66 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":51:9)
#loc67 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":60:9)
#loc68 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":52:13)
#loc69 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":52:18)
#loc70 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":53:13)
#loc71 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":53:38)
#loc72 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":54:20)
#loc73 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":54:13)
#loc74 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":55:24)
#loc75 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":55:14)
#loc76 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":55:13)
#loc77 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":56:13)
#loc78 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":59:13)
#loc79 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":57:17)
#loc80 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":57:30)
#loc81 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":57:29)
#loc82 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":58:34)
#loc83 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":58:17)
#loc84 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":65:1)
#loc85 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":80:1)
#loc86 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":67:5)
#loc87 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":79:5)
#loc88 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":67:8)
#loc89 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":67:27)
#loc90 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":68:5)
#loc91 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":69:9)
#loc92 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":78:9)
#loc93 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":70:13)
#loc94 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":70:18)
#loc95 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":71:13)
#loc96 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":71:38)
#loc97 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":72:20)
#loc98 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":72:13)
#loc99 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":73:24)
#loc100 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":73:14)
#loc101 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":73:13)
#loc102 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":74:13)
#loc103 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":77:13)
#loc104 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":75:17)
#loc105 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":75:30)
#loc106 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":75:29)
#loc107 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":76:34)
#loc108 = loc("CWE758_Undefined_Behavior__char_alloca_use_06.c":76:17)
#loc109 = loc(fused[#loc1, #loc2])
#loc110 = loc(fused[#loc3, #loc4])
#loc111 = loc(fused[#loc5, #loc6])
#loc112 = loc(fused[#loc7, #loc8])
#loc113 = loc(fused[#loc9, #loc6])
#loc114 = loc(fused[#loc10, #loc11])
#loc115 = loc(fused[#loc12, #loc13])
#loc116 = loc(fused[#loc14, #loc15])
#loc117 = loc(fused[#loc19, #loc20])
#loc118 = loc(fused[#loc21, #loc22])
#loc119 = loc(fused[#loc23, #loc24])
#loc120 = loc(fused[#loc25, #loc26])
#loc121 = loc(fused[#loc27, #loc28])
#loc122 = loc(fused[#loc29, #loc30])
#loc123 = loc(fused[#loc35, #loc36])
#loc126 = loc(fused[#loc46, #loc47])
#loc127 = loc(fused[#loc50, #loc51])
#loc128 = loc(fused[#loc54, #loc53])
#loc129 = loc(fused[#loc56, #loc57])
#loc130 = loc(fused[#loc58, #loc59])
#loc131 = loc(fused[#loc60, #loc61])
#loc132 = loc(fused[#loc62, #loc63, #loc64, #loc59])
#loc133 = loc(fused[#loc66, #loc67])
#loc134 = loc(fused[#loc68, #loc69])
#loc135 = loc(fused[#loc70, #loc71])
#loc136 = loc(fused[#loc73, #loc72])
#loc137 = loc(fused[#loc76, #loc74])
#loc138 = loc(fused[#loc77, #loc78])
#loc139 = loc(fused[#loc79, #loc80])
#loc140 = loc(fused[#loc84, #loc85])
#loc141 = loc(fused[#loc86, #loc87])
#loc142 = loc(fused[#loc88, #loc89])
#loc143 = loc(fused[#loc90, #loc87])
#loc144 = loc(fused[#loc91, #loc92])
#loc145 = loc(fused[#loc93, #loc94])
#loc146 = loc(fused[#loc95, #loc96])
#loc147 = loc(fused[#loc98, #loc97])
#loc148 = loc(fused[#loc101, #loc99])
#loc149 = loc(fused[#loc102, #loc103])
#loc150 = loc(fused[#loc104, #loc105])
