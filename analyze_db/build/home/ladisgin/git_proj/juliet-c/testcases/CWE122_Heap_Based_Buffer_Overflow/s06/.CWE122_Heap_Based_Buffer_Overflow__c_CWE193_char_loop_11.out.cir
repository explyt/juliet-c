!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":130:10)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":130:14)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":130:20)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":130:32)
#loc267 = loc(fused[#loc90, #loc91])
#loc268 = loc(fused[#loc92, #loc93])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B2.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc228)
  cir.global "private" constant cir_private @__const.goodG2B1.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc229)
  cir.global "private" constant cir_private @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc230)
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc231)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc232)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc233)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc234)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc235)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc236)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc230)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc238)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc239)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc240)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc26)
    cir.store %4, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc241)
    cir.br ^bb1 loc(#loc242)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc243)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc243)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc30)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc30)
    cir.brcond %8 ^bb2, ^bb7 loc(#loc244)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc33)
    %10 = cir.const #cir.int<10> : !s32i loc(#loc34)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc34)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc245)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc246)
    %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc33)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc247)
    cir.store %15, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc248)
    cir.br ^bb3 loc(#loc249)
  ^bb3:  // pred: ^bb2
    %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc42)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc42)
    %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc250)
    cir.brcond %19 ^bb4, ^bb5 loc(#loc251)
  ^bb4:  // pred: ^bb3
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc44)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc45)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc46)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc44)
    cir.br ^bb5 loc(#loc40)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc40)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc29)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc29)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc252)
  ^bb9:  // pred: ^bb8
    %23 = cir.get_global @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc230)
    cir.copy %23 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc230)
    %24 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc49)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc50)
    %26 = cir.call @strlen(%25) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc49)
    cir.store %26, %2 : !u64i, !cir.ptr<!u64i> loc(#loc253)
    cir.br ^bb10 loc(#loc254)
  ^bb10:  // pred: ^bb9
    %27 = cir.const #cir.int<0> : !s32i loc(#loc55)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc55)
    cir.store %28, %1 : !u64i, !cir.ptr<!u64i> loc(#loc255)
    cir.br ^bb11 loc(#loc254)
  ^bb11:  // 2 preds: ^bb10, ^bb15
    %29 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc57)
    %30 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc58)
    %31 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc59)
    %33 = cir.binop(add, %30, %32) : !u64i loc(#loc256)
    %34 = cir.cmp(lt, %29, %33) : !u64i, !cir.bool loc(#loc257)
    cir.brcond %34 ^bb12, ^bb16 loc(#loc60)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc258)
  ^bb13:  // pred: ^bb12
    %35 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc62)
    %36 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc63)
    %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc63)
    %38 = cir.load %37 : !cir.ptr<!s8i>, !s8i loc(#loc63)
    %39 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
    %40 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc65)
    %41 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc66)
    cir.store %38, %41 : !s8i, !cir.ptr<!s8i> loc(#loc259)
    cir.br ^bb14 loc(#loc54)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc54)
  ^bb15:  // pred: ^bb14
    %42 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc68)
    %43 = cir.unary(inc, %42) : !u64i, !u64i loc(#loc69)
    cir.store %43, %1 : !u64i, !cir.ptr<!u64i> loc(#loc260)
    cir.br ^bb11 loc(#loc254)
  ^bb16:  // pred: ^bb11
    cir.br ^bb17 loc(#loc54)
  ^bb17:  // pred: ^bb16
    %44 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%44) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %45 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
    %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc72)
    cir.call @free(%46) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc73)
    cir.br ^bb18 loc(#loc48)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc20)
  } loc(#loc237)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc262)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc76)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc263)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc78)
    cir.return loc(#loc75)
  } loc(#loc261)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc264)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc265)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc84)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc85)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc86)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc87)
  cir.func @main(%arg0: !s32i loc(fused[#loc90, #loc91]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc92, #loc93])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc267)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc268)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc89)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc94)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc94)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc95)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc96)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc96)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc97)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc84)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11_good : !cir.ptr<!cir.func<!void ()>> loc(#loc269)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11_good() : () -> () loc(#loc99)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc85)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc86)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc86)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc270)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11_bad() : () -> () loc(#loc103)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc87)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc105)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc106)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc271)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc271)
    cir.return %17 : !s32i loc(#loc271)
  } loc(#loc266)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc272)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc110)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc229)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc274)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc275)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc276)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc118)
    cir.store %4, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc277)
    cir.br ^bb1 loc(#loc278)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc279)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc279)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc122)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc122)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc280)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc110)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc110)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc127)
    cir.br ^bb8 loc(#loc125)
  ^bb3:  // pred: ^bb1
    %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc128)
    %12 = cir.const #cir.int<10> : !s32i loc(#loc129)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc130)
    %14 = cir.binop(add, %12, %13) nsw : !s32i loc(#loc129)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc129)
    %16 = cir.const #cir.int<1> : !u64i loc(#loc281)
    %17 = cir.binop(mul, %15, %16) : !u64i loc(#loc282)
    %18 = cir.call @malloc(%17) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc128)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc283)
    cir.store %19, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc284)
    cir.br ^bb4 loc(#loc285)
  ^bb4:  // pred: ^bb3
    %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
    %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc139)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc139)
    %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc286)
    cir.brcond %23 ^bb5, ^bb6 loc(#loc287)
  ^bb5:  // pred: ^bb4
    %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc141)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc142)
    %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc143)
    cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc141)
    cir.br ^bb6 loc(#loc137)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc137)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc121)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc121)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc288)
  ^bb10:  // pred: ^bb9
    %27 = cir.get_global @__const.goodG2B1.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc229)
    cir.copy %27 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc229)
    %28 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc146)
    %29 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc147)
    %30 = cir.call @strlen(%29) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc146)
    cir.store %30, %2 : !u64i, !cir.ptr<!u64i> loc(#loc289)
    cir.br ^bb11 loc(#loc290)
  ^bb11:  // pred: ^bb10
    %31 = cir.const #cir.int<0> : !s32i loc(#loc152)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc152)
    cir.store %32, %1 : !u64i, !cir.ptr<!u64i> loc(#loc291)
    cir.br ^bb12 loc(#loc290)
  ^bb12:  // 2 preds: ^bb11, ^bb16
    %33 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc154)
    %34 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc155)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc156)
    %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc156)
    %37 = cir.binop(add, %34, %36) : !u64i loc(#loc292)
    %38 = cir.cmp(lt, %33, %37) : !u64i, !cir.bool loc(#loc293)
    cir.brcond %38 ^bb13, ^bb17 loc(#loc157)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc294)
  ^bb14:  // pred: ^bb13
    %39 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc159)
    %40 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc160)
    %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc160)
    %42 = cir.load %41 : !cir.ptr<!s8i>, !s8i loc(#loc160)
    %43 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
    %44 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc162)
    %45 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc163)
    cir.store %42, %45 : !s8i, !cir.ptr<!s8i> loc(#loc295)
    cir.br ^bb15 loc(#loc151)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc151)
  ^bb16:  // pred: ^bb15
    %46 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc165)
    %47 = cir.unary(inc, %46) : !u64i, !u64i loc(#loc166)
    cir.store %47, %1 : !u64i, !cir.ptr<!u64i> loc(#loc296)
    cir.br ^bb12 loc(#loc290)
  ^bb17:  // pred: ^bb12
    cir.br ^bb18 loc(#loc151)
  ^bb18:  // pred: ^bb17
    %48 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
    cir.call @printLine(%48) : (!cir.ptr<!s8i>) -> () loc(#loc168)
    %49 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc169)
    %50 = cir.cast(bitcast, %49 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc169)
    cir.call @free(%50) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc170)
    cir.br ^bb19 loc(#loc145)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc112)
  } loc(#loc273)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc228)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc298)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc299)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc300)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc178)
    cir.store %4, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc301)
    cir.br ^bb1 loc(#loc302)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc303)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc303)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc182)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc182)
    cir.brcond %8 ^bb2, ^bb7 loc(#loc304)
  ^bb2:  // pred: ^bb1
    %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc185)
    %10 = cir.const #cir.int<10> : !s32i loc(#loc186)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc187)
    %12 = cir.binop(add, %10, %11) nsw : !s32i loc(#loc186)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc186)
    %14 = cir.const #cir.int<1> : !u64i loc(#loc305)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc306)
    %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc185)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc307)
    cir.store %17, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc308)
    cir.br ^bb3 loc(#loc309)
  ^bb3:  // pred: ^bb2
    %18 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc195)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc196)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc196)
    %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc310)
    cir.brcond %21 ^bb4, ^bb5 loc(#loc311)
  ^bb4:  // pred: ^bb3
    %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc198)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc199)
    %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc200)
    cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc198)
    cir.br ^bb5 loc(#loc194)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc194)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc181)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc181)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc312)
  ^bb9:  // pred: ^bb8
    %25 = cir.get_global @__const.goodG2B2.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc228)
    cir.copy %25 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc228)
    %26 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc203)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc204)
    %28 = cir.call @strlen(%27) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc203)
    cir.store %28, %2 : !u64i, !cir.ptr<!u64i> loc(#loc313)
    cir.br ^bb10 loc(#loc314)
  ^bb10:  // pred: ^bb9
    %29 = cir.const #cir.int<0> : !s32i loc(#loc209)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc209)
    cir.store %30, %1 : !u64i, !cir.ptr<!u64i> loc(#loc315)
    cir.br ^bb11 loc(#loc314)
  ^bb11:  // 2 preds: ^bb10, ^bb15
    %31 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc211)
    %32 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc212)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc213)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc213)
    %35 = cir.binop(add, %32, %34) : !u64i loc(#loc316)
    %36 = cir.cmp(lt, %31, %35) : !u64i, !cir.bool loc(#loc317)
    cir.brcond %36 ^bb12, ^bb16 loc(#loc214)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc318)
  ^bb13:  // pred: ^bb12
    %37 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc216)
    %38 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc217)
    %39 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %37 : !u64i), !cir.ptr<!s8i> loc(#loc217)
    %40 = cir.load %39 : !cir.ptr<!s8i>, !s8i loc(#loc217)
    %41 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc218)
    %42 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc219)
    %43 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc220)
    cir.store %40, %43 : !s8i, !cir.ptr<!s8i> loc(#loc319)
    cir.br ^bb14 loc(#loc208)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc208)
  ^bb15:  // pred: ^bb14
    %44 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc222)
    %45 = cir.unary(inc, %44) : !u64i, !u64i loc(#loc223)
    cir.store %45, %1 : !u64i, !cir.ptr<!u64i> loc(#loc320)
    cir.br ^bb11 loc(#loc314)
  ^bb16:  // pred: ^bb11
    cir.br ^bb17 loc(#loc208)
  ^bb17:  // pred: ^bb16
    %46 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc224)
    cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc225)
    %47 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc226)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc226)
    cir.call @free(%48) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc227)
    cir.br ^bb18 loc(#loc202)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc172)
  } loc(#loc297)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":100:9)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":100:29)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":74:9)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":74:29)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":39:9)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":39:29)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc9 = loc("/usr/include/stdlib.h":672:1)
#loc10 = loc("/usr/include/stdlib.h":672:45)
#loc11 = loc("/usr/include/stdlib.h":756:1)
#loc12 = loc("/usr/include/stdlib.h":756:70)
#loc13 = loc("/usr/include/string.h":407:1)
#loc14 = loc("/usr/include/string.h":408:33)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc17 = loc("/usr/include/stdlib.h":687:1)
#loc18 = loc("/usr/include/stdlib.h":687:32)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":28:1)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":51:1)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":40:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":40:16)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":40:19)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":30:5)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":30:12)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":31:12)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":31:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":32:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":37:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":32:8)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":32:26)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":33:5)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":35:24)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":35:31)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":35:34)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":35:45)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":35:46)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":35:9)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":36:9)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":36:37)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":36:13)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":36:21)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":36:27)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":36:28)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":36:34)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":36:33)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":38:5)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":50:5)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":41:21)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":41:28)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":41:9)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":41:34)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":44:9)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":47:9)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":44:18)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":44:14)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":44:21)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":44:25)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":44:37)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":44:23)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":45:9)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":46:30)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":46:23)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":46:13)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":46:18)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":46:19)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":46:31)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":44:41)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":44:40)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":48:19)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":48:9)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":49:14)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":49:9)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":114:1)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":118:1)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":116:5)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":116:14)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":117:5)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":117:14)
#loc80 = loc("/usr/include/stdlib.h":575:1)
#loc81 = loc("/usr/include/stdlib.h":575:41)
#loc82 = loc("/usr/include/time.h":76:1)
#loc83 = loc("/usr/include/time.h":76:38)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":135:15)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":137:15)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":140:15)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":142:15)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":130:1)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":145:1)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":131:1)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":133:27)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":133:22)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":133:5)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":135:5)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":136:5)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":136:67)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":137:5)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":140:5)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":141:5)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":141:66)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":142:5)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":144:12)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":144:5)
#loc108 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc109 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":65:19)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":58:1)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":86:1)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":75:9)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":75:16)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":75:19)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":60:5)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":60:12)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":61:12)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":61:5)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":62:5)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":72:5)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":62:8)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":62:27)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":63:5)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":66:5)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":68:5)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":65:9)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":70:24)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":70:32)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":70:35)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":70:38)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":70:49)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":70:31)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":70:50)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":70:9)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":71:9)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":71:37)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":71:13)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":71:21)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":71:27)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":71:28)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":71:34)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":71:33)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":73:5)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":85:5)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":76:21)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":76:28)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":76:9)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":76:34)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":79:9)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":82:9)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":79:18)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":79:14)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":79:21)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":79:25)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":79:37)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":79:23)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":80:9)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":81:30)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":81:23)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":81:13)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":81:18)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":81:19)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":81:31)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":79:41)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":79:40)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":83:19)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":83:9)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":84:14)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":84:9)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":89:1)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":112:1)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":101:9)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":101:16)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":101:19)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":91:5)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":91:12)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":92:12)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":92:5)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":93:5)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":98:5)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":93:8)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":93:26)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":94:5)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":96:24)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":96:32)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":96:35)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":96:38)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":96:49)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":96:31)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":96:50)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":96:9)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":97:9)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":97:37)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":97:13)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":97:21)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":97:27)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":97:28)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":97:34)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":97:33)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":99:5)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":111:5)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":102:21)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":102:28)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":102:9)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":102:34)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":105:9)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":108:9)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":105:18)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":105:14)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":105:21)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":105:25)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":105:37)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":105:23)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":106:9)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":107:30)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":107:23)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":107:13)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":107:18)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":107:19)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":107:31)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":105:41)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":105:40)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":109:19)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":109:9)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":110:14)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_loop_11.c":110:9)
#loc228 = loc(fused[#loc1, #loc2])
#loc229 = loc(fused[#loc3, #loc4])
#loc230 = loc(fused[#loc5, #loc6])
#loc231 = loc(fused[#loc7, #loc8])
#loc232 = loc(fused[#loc9, #loc10])
#loc233 = loc(fused[#loc11, #loc12])
#loc234 = loc(fused[#loc13, #loc14])
#loc235 = loc(fused[#loc15, #loc16])
#loc236 = loc(fused[#loc17, #loc18])
#loc237 = loc(fused[#loc19, #loc20])
#loc238 = loc(fused[#loc21, #loc22])
#loc239 = loc(fused[#loc21, #loc23])
#loc240 = loc(fused[#loc24, #loc25])
#loc241 = loc(fused[#loc27, #loc26])
#loc242 = loc(fused[#loc28, #loc29])
#loc243 = loc(fused[#loc30, #loc31])
#loc244 = loc(fused[#loc32, #loc29])
#loc245 = loc(fused[#loc35, #loc36])
#loc246 = loc(fused[#loc34, #loc36])
#loc247 = loc(fused[#loc33, #loc37])
#loc248 = loc(fused[#loc38, #loc37])
#loc249 = loc(fused[#loc39, #loc40])
#loc250 = loc(fused[#loc41, #loc42])
#loc251 = loc(fused[#loc43, #loc40])
#loc252 = loc(fused[#loc47, #loc48])
#loc253 = loc(fused[#loc51, #loc52])
#loc254 = loc(fused[#loc53, #loc54])
#loc255 = loc(fused[#loc56, #loc55])
#loc256 = loc(fused[#loc58, #loc59])
#loc257 = loc(fused[#loc57, #loc59])
#loc258 = loc(fused[#loc61, #loc54])
#loc259 = loc(fused[#loc64, #loc67])
#loc260 = loc(fused[#loc69, #loc68])
#loc261 = loc(fused[#loc74, #loc75])
#loc262 = loc(fused[#loc76, #loc77])
#loc263 = loc(fused[#loc78, #loc79])
#loc264 = loc(fused[#loc80, #loc81])
#loc265 = loc(fused[#loc82, #loc83])
#loc266 = loc(fused[#loc88, #loc89])
#loc269 = loc(fused[#loc99, #loc100])
#loc270 = loc(fused[#loc103, #loc104])
#loc271 = loc(fused[#loc107, #loc106])
#loc272 = loc(fused[#loc108, #loc109])
#loc273 = loc(fused[#loc111, #loc112])
#loc274 = loc(fused[#loc113, #loc114])
#loc275 = loc(fused[#loc113, #loc115])
#loc276 = loc(fused[#loc116, #loc117])
#loc277 = loc(fused[#loc119, #loc118])
#loc278 = loc(fused[#loc120, #loc121])
#loc279 = loc(fused[#loc122, #loc123])
#loc280 = loc(fused[#loc124, #loc125, #loc126, #loc121])
#loc281 = loc(fused[#loc131, #loc132])
#loc282 = loc(fused[#loc133, #loc132])
#loc283 = loc(fused[#loc128, #loc134])
#loc284 = loc(fused[#loc135, #loc134])
#loc285 = loc(fused[#loc136, #loc137])
#loc286 = loc(fused[#loc138, #loc139])
#loc287 = loc(fused[#loc140, #loc137])
#loc288 = loc(fused[#loc144, #loc145])
#loc289 = loc(fused[#loc148, #loc149])
#loc290 = loc(fused[#loc150, #loc151])
#loc291 = loc(fused[#loc153, #loc152])
#loc292 = loc(fused[#loc155, #loc156])
#loc293 = loc(fused[#loc154, #loc156])
#loc294 = loc(fused[#loc158, #loc151])
#loc295 = loc(fused[#loc161, #loc164])
#loc296 = loc(fused[#loc166, #loc165])
#loc297 = loc(fused[#loc171, #loc172])
#loc298 = loc(fused[#loc173, #loc174])
#loc299 = loc(fused[#loc173, #loc175])
#loc300 = loc(fused[#loc176, #loc177])
#loc301 = loc(fused[#loc179, #loc178])
#loc302 = loc(fused[#loc180, #loc181])
#loc303 = loc(fused[#loc182, #loc183])
#loc304 = loc(fused[#loc184, #loc181])
#loc305 = loc(fused[#loc188, #loc189])
#loc306 = loc(fused[#loc190, #loc189])
#loc307 = loc(fused[#loc185, #loc191])
#loc308 = loc(fused[#loc192, #loc191])
#loc309 = loc(fused[#loc193, #loc194])
#loc310 = loc(fused[#loc195, #loc196])
#loc311 = loc(fused[#loc197, #loc194])
#loc312 = loc(fused[#loc201, #loc202])
#loc313 = loc(fused[#loc205, #loc206])
#loc314 = loc(fused[#loc207, #loc208])
#loc315 = loc(fused[#loc210, #loc209])
#loc316 = loc(fused[#loc212, #loc213])
#loc317 = loc(fused[#loc211, #loc213])
#loc318 = loc(fused[#loc215, #loc208])
#loc319 = loc(fused[#loc218, #loc221])
#loc320 = loc(fused[#loc223, #loc222])
