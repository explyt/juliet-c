!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc51 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":115:10)
#loc52 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":115:14)
#loc53 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":115:20)
#loc54 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":115:32)
#loc150 = loc(fused[#loc51, #loc52])
#loc151 = loc(fused[#loc53, #loc54])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE170_char_strncpy_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc135)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc136)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc5)
  cir.func no_proto @CWE126_Buffer_Overread__CWE170_char_strncpy_15_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc10)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 150>, !cir.ptr<!cir.array<!s8i x 150>>, ["data"] {alignment = 16 : i64} loc(#loc140)
            %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc141)
            %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc17)
            %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc17)
            %5 = cir.const #cir.int<65> : !s32i loc(#loc18)
            %6 = cir.const #cir.int<149> : !s32i loc(#loc19)
            %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc19)
            cir.libc.memset %7 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc142)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc22)
            %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc22)
            %10 = cir.const #cir.int<149> : !s32i loc(#loc23)
            %11 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc24)
            %12 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %10 : !s32i), !cir.ptr<!s8i> loc(#loc24)
            cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc143)
            %13 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc25)
            %14 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc26)
            %15 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc27)
            %16 = cir.const #cir.int<99> : !s32i loc(#loc28)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc28)
            %18 = cir.call @strncpy(%14, %15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc25)
            %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc29)
            cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc30)
          } loc(#loc139)
          cir.break loc(#loc31)
        } loc(#loc11)
        cir.case(default, []) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc5)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc5)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc33)
          cir.break loc(#loc34)
        } loc(#loc32)
        cir.yield loc(#loc8)
      } loc(#loc8)
    } loc(#loc138)
    cir.return loc(#loc7)
  } loc(#loc137)
  cir.func no_proto @CWE126_Buffer_Overread__CWE170_char_strncpy_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc145)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc37)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc146)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    cir.return loc(#loc36)
  } loc(#loc144)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc147)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc148)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc47)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc48)
  cir.func @main(%arg0: !s32i loc(fused[#loc51, #loc52]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc53, #loc54])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc150)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc151)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc50)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc55)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc55)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc56)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc57)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc57)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc58)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc45)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %8 = cir.get_global @CWE126_Buffer_Overread__CWE170_char_strncpy_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc152)
    cir.call @CWE126_Buffer_Overread__CWE170_char_strncpy_15_good() : () -> () loc(#loc60)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc46)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc47)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %13 = cir.get_global @CWE126_Buffer_Overread__CWE170_char_strncpy_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc153)
    cir.call @CWE126_Buffer_Overread__CWE170_char_strncpy_15_bad() : () -> () loc(#loc64)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc48)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc67)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc154)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc154)
    cir.return %17 : !s32i loc(#loc154)
  } loc(#loc149)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc73)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc75)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc75)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc76)
          cir.break loc(#loc77)
        } loc(#loc74)
        cir.case(default, []) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 150>, !cir.ptr<!cir.array<!s8i x 150>>, ["data"] {alignment = 16 : i64} loc(#loc158)
            %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc159)
            %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc84)
            %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc84)
            %5 = cir.const #cir.int<65> : !s32i loc(#loc85)
            %6 = cir.const #cir.int<149> : !s32i loc(#loc86)
            %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc86)
            cir.libc.memset %7 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc160)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc89)
            %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc89)
            %10 = cir.const #cir.int<149> : !s32i loc(#loc90)
            %11 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc91)
            %12 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %10 : !s32i), !cir.ptr<!s8i> loc(#loc91)
            cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc161)
            %13 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc92)
            %14 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc93)
            %15 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc94)
            %16 = cir.const #cir.int<99> : !s32i loc(#loc95)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc95)
            %18 = cir.call @strncpy(%14, %15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc92)
            %19 = cir.const #cir.int<0> : !s32i loc(#loc96)
            %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc96)
            %21 = cir.const #cir.int<99> : !s32i loc(#loc97)
            %22 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc98)
            %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc98)
            cir.store %20, %23 : !s8i, !cir.ptr<!s8i> loc(#loc162)
            %24 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc99)
            cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc100)
          } loc(#loc157)
          cir.break loc(#loc101)
        } loc(#loc78)
        cir.yield loc(#loc71)
      } loc(#loc71)
    } loc(#loc156)
    cir.return loc(#loc70)
  } loc(#loc155)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc106)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 150>, !cir.ptr<!cir.array<!s8i x 150>>, ["data"] {alignment = 16 : i64} loc(#loc166)
            %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc167)
            %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc113)
            %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc113)
            %5 = cir.const #cir.int<65> : !s32i loc(#loc114)
            %6 = cir.const #cir.int<149> : !s32i loc(#loc115)
            %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc115)
            cir.libc.memset %7 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc168)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc118)
            %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc118)
            %10 = cir.const #cir.int<149> : !s32i loc(#loc119)
            %11 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc120)
            %12 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %10 : !s32i), !cir.ptr<!s8i> loc(#loc120)
            cir.store %9, %12 : !s8i, !cir.ptr<!s8i> loc(#loc169)
            %13 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc121)
            %14 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc122)
            %15 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc123)
            %16 = cir.const #cir.int<99> : !s32i loc(#loc124)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc124)
            %18 = cir.call @strncpy(%14, %15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc121)
            %19 = cir.const #cir.int<0> : !s32i loc(#loc125)
            %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc125)
            %21 = cir.const #cir.int<99> : !s32i loc(#loc126)
            %22 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc127)
            %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc127)
            cir.store %20, %23 : !s8i, !cir.ptr<!s8i> loc(#loc170)
            %24 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc128)
            cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc129)
          } loc(#loc165)
          cir.break loc(#loc130)
        } loc(#loc107)
        cir.case(default, []) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc132)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc132)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc133)
          cir.break loc(#loc134)
        } loc(#loc131)
        cir.yield loc(#loc104)
      } loc(#loc104)
    } loc(#loc164)
    cir.return loc(#loc103)
  } loc(#loc163)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":0:0)
#loc1 = loc("/usr/include/string.h":144:1)
#loc2 = loc("/usr/include/string.h":146:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":41:19)
#loc6 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":22:1)
#loc7 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":44:1)
#loc8 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":24:5)
#loc9 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":43:5)
#loc10 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":24:12)
#loc11 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":26:5)
#loc12 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":27:5)
#loc13 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":37:5)
#loc14 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":28:9)
#loc15 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":28:22)
#loc16 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":28:33)
#loc17 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":30:16)
#loc18 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":30:22)
#loc19 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":30:27)
#loc20 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":30:9)
#loc21 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":30:30)
#loc22 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":31:21)
#loc23 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":31:14)
#loc24 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":31:9)
#loc25 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":34:9)
#loc26 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":34:17)
#loc27 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":34:23)
#loc28 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":34:29)
#loc29 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":36:19)
#loc30 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":36:9)
#loc31 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":38:5)
#loc32 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":39:5)
#loc33 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":41:9)
#loc34 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":42:9)
#loc35 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":100:1)
#loc36 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":104:1)
#loc37 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":102:5)
#loc38 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":102:11)
#loc39 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":103:5)
#loc40 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":103:11)
#loc41 = loc("/usr/include/stdlib.h":575:1)
#loc42 = loc("/usr/include/stdlib.h":575:41)
#loc43 = loc("/usr/include/time.h":76:1)
#loc44 = loc("/usr/include/time.h":76:38)
#loc45 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":120:15)
#loc46 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":122:15)
#loc47 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":125:15)
#loc48 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":127:15)
#loc49 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":115:1)
#loc50 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":130:1)
#loc55 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":116:1)
#loc56 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":118:27)
#loc57 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":118:22)
#loc58 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":118:5)
#loc59 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":120:5)
#loc60 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":121:5)
#loc61 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":121:57)
#loc62 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":122:5)
#loc63 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":125:5)
#loc64 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":126:5)
#loc65 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":126:56)
#loc66 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":127:5)
#loc67 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":129:12)
#loc68 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":129:5)
#loc69 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":51:1)
#loc70 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":73:1)
#loc71 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":53:5)
#loc72 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":72:5)
#loc73 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":53:12)
#loc74 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":55:5)
#loc75 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":57:19)
#loc76 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":57:9)
#loc77 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":58:9)
#loc78 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":59:5)
#loc79 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":60:5)
#loc80 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":70:5)
#loc81 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":61:9)
#loc82 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":61:22)
#loc83 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":61:33)
#loc84 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":63:16)
#loc85 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":63:22)
#loc86 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":63:27)
#loc87 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":63:9)
#loc88 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":63:30)
#loc89 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":64:21)
#loc90 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":64:14)
#loc91 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":64:9)
#loc92 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":67:9)
#loc93 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":67:17)
#loc94 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":67:23)
#loc95 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":67:29)
#loc96 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":68:20)
#loc97 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":68:14)
#loc98 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":68:9)
#loc99 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":69:19)
#loc100 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":69:9)
#loc101 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":71:5)
#loc102 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":76:1)
#loc103 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":98:1)
#loc104 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":78:5)
#loc105 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":97:5)
#loc106 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":78:12)
#loc107 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":80:5)
#loc108 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":81:5)
#loc109 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":91:5)
#loc110 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":82:9)
#loc111 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":82:22)
#loc112 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":82:33)
#loc113 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":84:16)
#loc114 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":84:22)
#loc115 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":84:27)
#loc116 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":84:9)
#loc117 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":84:30)
#loc118 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":85:21)
#loc119 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":85:14)
#loc120 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":85:9)
#loc121 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":88:9)
#loc122 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":88:17)
#loc123 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":88:23)
#loc124 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":88:29)
#loc125 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":89:20)
#loc126 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":89:14)
#loc127 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":89:9)
#loc128 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":90:19)
#loc129 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":90:9)
#loc130 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":92:5)
#loc131 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":93:5)
#loc132 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":95:19)
#loc133 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":95:9)
#loc134 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_15.c":96:9)
#loc135 = loc(fused[#loc1, #loc2])
#loc136 = loc(fused[#loc3, #loc4])
#loc137 = loc(fused[#loc6, #loc7])
#loc138 = loc(fused[#loc8, #loc9])
#loc139 = loc(fused[#loc12, #loc13])
#loc140 = loc(fused[#loc14, #loc15])
#loc141 = loc(fused[#loc14, #loc16])
#loc142 = loc(fused[#loc20, #loc21])
#loc143 = loc(fused[#loc24, #loc22])
#loc144 = loc(fused[#loc35, #loc36])
#loc145 = loc(fused[#loc37, #loc38])
#loc146 = loc(fused[#loc39, #loc40])
#loc147 = loc(fused[#loc41, #loc42])
#loc148 = loc(fused[#loc43, #loc44])
#loc149 = loc(fused[#loc49, #loc50])
#loc152 = loc(fused[#loc60, #loc61])
#loc153 = loc(fused[#loc64, #loc65])
#loc154 = loc(fused[#loc68, #loc67])
#loc155 = loc(fused[#loc69, #loc70])
#loc156 = loc(fused[#loc71, #loc72])
#loc157 = loc(fused[#loc79, #loc80])
#loc158 = loc(fused[#loc81, #loc82])
#loc159 = loc(fused[#loc81, #loc83])
#loc160 = loc(fused[#loc87, #loc88])
#loc161 = loc(fused[#loc91, #loc89])
#loc162 = loc(fused[#loc98, #loc96])
#loc163 = loc(fused[#loc102, #loc103])
#loc164 = loc(fused[#loc104, #loc105])
#loc165 = loc(fused[#loc108, #loc109])
#loc166 = loc(fused[#loc110, #loc111])
#loc167 = loc(fused[#loc110, #loc112])
#loc168 = loc(fused[#loc116, #loc117])
#loc169 = loc(fused[#loc120, #loc118])
#loc170 = loc(fused[#loc127, #loc125])
