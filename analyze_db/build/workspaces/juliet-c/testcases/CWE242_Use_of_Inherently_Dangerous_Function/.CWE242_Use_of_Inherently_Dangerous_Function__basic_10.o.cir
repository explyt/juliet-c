!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE242_Use_of_Inherently_Dangerous_Function/CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" external @globalTrue : !s32i {alignment = 4 : i64} loc(#loc120)
  cir.func no_proto private @gets(...) -> !s32i loc(#loc)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc121)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Error Condition: alter control flow to indicate action taken\00" : !cir.array<!s8i x 61>> : !cir.array<!s8i x 61> {alignment = 1 : i64} loc(#loc5)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc122)
  cir.func no_proto @CWE242_Use_of_Inherently_Dangerous_Function__basic_10_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc124)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc125)
    cir.br ^bb1 loc(#loc126)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc120)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc16)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc16)
    cir.brcond %4 ^bb2, ^bb9 loc(#loc127)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc128)
  ^bb3:  // pred: ^bb2
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc20)
    %6 = cir.get_global @gets : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc129)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !s32i>> loc(#loc129)
    %8 = cir.call %7(%5) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !s32i>>, !cir.ptr<!s8i>) -> !s32i loc(#loc21)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc21)
    %10 = cir.cast(int_to_ptr, %9 : !u64i), !cir.ptr<!s8i> loc(#loc21)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc130)
    cir.br ^bb4 loc(#loc131)
  ^bb4:  // pred: ^bb3
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc27)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc27)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc132)
    cir.brcond %14 ^bb5, ^bb6 loc(#loc133)
  ^bb5:  // pred: ^bb4
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc5)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc5)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc29)
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc30)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc31)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc30)
    cir.br ^bb6 loc(#loc25)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc25)
  ^bb7:  // pred: ^bb6
    %19 = cir.const #cir.int<0> : !s32i loc(#loc32)
    %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc32)
    %21 = cir.const #cir.int<10> : !s32i loc(#loc33)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc33)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc35)
    %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc35)
    cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc134)
    %26 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc37)
    cir.br ^bb8 loc(#loc19)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc15)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc15)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc9)
  } loc(#loc123)
  cir.func no_proto @CWE242_Use_of_Inherently_Dangerous_Function__basic_10_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc136)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc40)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc137)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc42)
    cir.return loc(#loc39)
  } loc(#loc135)
  cir.global "private" external @globalFalse : !s32i {alignment = 4 : i64} loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc46)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc139)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc140)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc142)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc143)
    cir.br ^bb1 loc(#loc144)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc138)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc59)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc59)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc145)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc46)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    cir.br ^bb10 loc(#loc61)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc146)
  ^bb4:  // pred: ^bb3
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc66)
    %8 = cir.const #cir.int<10> : !s32i loc(#loc67)
    %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc140)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc68)
    %11 = cir.call @fgets(%7, %8, %10) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc69)
    cir.store %11, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
    cir.br ^bb5 loc(#loc148)
  ^bb5:  // pred: ^bb4
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc75)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc75)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc149)
    cir.brcond %15 ^bb6, ^bb7 loc(#loc150)
  ^bb6:  // pred: ^bb5
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc77)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc79)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc80)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc79)
    cir.br ^bb7 loc(#loc73)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc73)
  ^bb8:  // pred: ^bb7
    %20 = cir.const #cir.int<0> : !s32i loc(#loc81)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc81)
    %22 = cir.const #cir.int<10> : !s32i loc(#loc82)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc83)
    %24 = cir.binop(sub, %22, %23) nsw : !s32i loc(#loc82)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc84)
    %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc84)
    cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc151)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    cir.br ^bb9 loc(#loc65)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc58)
  ^bb10:  // 2 preds: ^bb2, ^bb9
    cir.br ^bb11 loc(#loc58)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc52)
  } loc(#loc141)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc153)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc154)
    cir.br ^bb1 loc(#loc155)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc120)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc95)
    cir.brcond %4 ^bb2, ^bb9 loc(#loc156)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc157)
  ^bb3:  // pred: ^bb2
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc99)
    %6 = cir.const #cir.int<10> : !s32i loc(#loc100)
    %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc140)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc101)
    %9 = cir.call @fgets(%5, %6, %8) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc102)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc158)
    cir.br ^bb4 loc(#loc159)
  ^bb4:  // pred: ^bb3
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc108)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc108)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc160)
    cir.brcond %13 ^bb5, ^bb6 loc(#loc161)
  ^bb5:  // pred: ^bb4
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc110)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc110)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc112)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc113)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc112)
    cir.br ^bb6 loc(#loc106)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc106)
  ^bb7:  // pred: ^bb6
    %18 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc114)
    %20 = cir.const #cir.int<10> : !s32i loc(#loc115)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc115)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc117)
    %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc117)
    cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc162)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc118)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    cir.br ^bb8 loc(#loc98)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc94)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc94)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc88)
  } loc(#loc152)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE242_Use_of_Inherently_Dangerous_Function/CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase.h":116:1)
#loc2 = loc("../../testcasesupport/std_testcase.h":116:12)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":37:27)
#loc6 = loc("/usr/include/stdlib.h":756:1)
#loc7 = loc("/usr/include/stdlib.h":756:70)
#loc8 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":22:1)
#loc9 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":44:1)
#loc10 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":27:13)
#loc11 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":27:32)
#loc12 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":28:13)
#loc13 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":28:19)
#loc14 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":24:5)
#loc15 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":43:5)
#loc16 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":24:8)
#loc17 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":25:5)
#loc18 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":26:9)
#loc19 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":42:9)
#loc20 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":32:27)
#loc21 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":32:22)
#loc22 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":32:31)
#loc23 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":32:13)
#loc24 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":34:13)
#loc25 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":39:13)
#loc26 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":34:17)
#loc27 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":34:27)
#loc28 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":35:13)
#loc29 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":37:17)
#loc30 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":38:17)
#loc31 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":38:22)
#loc32 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":40:33)
#loc33 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":40:18)
#loc34 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":40:28)
#loc35 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":40:13)
#loc36 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":41:23)
#loc37 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":41:13)
#loc38 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":101:1)
#loc39 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":105:1)
#loc40 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":103:5)
#loc41 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":103:11)
#loc42 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":104:5)
#loc43 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":104:11)
#loc44 = loc("../../testcasesupport/std_testcase.h":117:1)
#loc45 = loc("../../testcasesupport/std_testcase.h":117:12)
#loc46 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":56:19)
#loc47 = loc("/usr/include/stdio.h":654:1)
#loc48 = loc("/usr/include/stdio.h":655:59)
#loc49 = loc("/usr/include/stdio.h":149:1)
#loc50 = loc("/usr/include/stdio.h":149:14)
#loc51 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":51:1)
#loc52 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":76:1)
#loc53 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":61:13)
#loc54 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":61:32)
#loc55 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":62:13)
#loc56 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":62:19)
#loc57 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":53:5)
#loc58 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":75:5)
#loc59 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":53:8)
#loc60 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":54:5)
#loc61 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":57:5)
#loc62 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":59:5)
#loc63 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":56:9)
#loc64 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":60:9)
#loc65 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":74:9)
#loc66 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":64:28)
#loc67 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":64:34)
#loc68 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":64:45)
#loc69 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":64:22)
#loc70 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":64:13)
#loc71 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":64:50)
#loc72 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":66:13)
#loc73 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":71:13)
#loc74 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":66:17)
#loc75 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":66:27)
#loc76 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":67:13)
#loc77 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":69:27)
#loc78 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":69:17)
#loc79 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":70:17)
#loc80 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":70:22)
#loc81 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":72:33)
#loc82 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":72:18)
#loc83 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":72:28)
#loc84 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":72:13)
#loc85 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":73:23)
#loc86 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":73:13)
#loc87 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":79:1)
#loc88 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":99:1)
#loc89 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":84:13)
#loc90 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":84:32)
#loc91 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":85:13)
#loc92 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":85:19)
#loc93 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":81:5)
#loc94 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":98:5)
#loc95 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":81:8)
#loc96 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":82:5)
#loc97 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":83:9)
#loc98 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":97:9)
#loc99 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":87:28)
#loc100 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":87:34)
#loc101 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":87:45)
#loc102 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":87:22)
#loc103 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":87:13)
#loc104 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":87:50)
#loc105 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":89:13)
#loc106 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":94:13)
#loc107 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":89:17)
#loc108 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":89:27)
#loc109 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":90:13)
#loc110 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":92:27)
#loc111 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":92:17)
#loc112 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":93:17)
#loc113 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":93:22)
#loc114 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":95:33)
#loc115 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":95:18)
#loc116 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":95:28)
#loc117 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":95:13)
#loc118 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":96:23)
#loc119 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_10.c":96:13)
#loc120 = loc(fused[#loc1, #loc2])
#loc121 = loc(fused[#loc3, #loc4])
#loc122 = loc(fused[#loc6, #loc7])
#loc123 = loc(fused[#loc8, #loc9])
#loc124 = loc(fused[#loc10, #loc11])
#loc125 = loc(fused[#loc12, #loc13])
#loc126 = loc(fused[#loc14, #loc15])
#loc127 = loc(fused[#loc17, #loc15])
#loc128 = loc(fused[#loc18, #loc19])
#loc129 = loc(fused[#loc21, #loc22])
#loc130 = loc(fused[#loc23, #loc22])
#loc131 = loc(fused[#loc24, #loc25])
#loc132 = loc(fused[#loc26, #loc27])
#loc133 = loc(fused[#loc28, #loc25])
#loc134 = loc(fused[#loc35, #loc32])
#loc135 = loc(fused[#loc38, #loc39])
#loc136 = loc(fused[#loc40, #loc41])
#loc137 = loc(fused[#loc42, #loc43])
#loc138 = loc(fused[#loc44, #loc45])
#loc139 = loc(fused[#loc47, #loc48])
#loc140 = loc(fused[#loc49, #loc50])
#loc141 = loc(fused[#loc51, #loc52])
#loc142 = loc(fused[#loc53, #loc54])
#loc143 = loc(fused[#loc55, #loc56])
#loc144 = loc(fused[#loc57, #loc58])
#loc145 = loc(fused[#loc60, #loc61, #loc62, #loc58])
#loc146 = loc(fused[#loc64, #loc65])
#loc147 = loc(fused[#loc70, #loc71])
#loc148 = loc(fused[#loc72, #loc73])
#loc149 = loc(fused[#loc74, #loc75])
#loc150 = loc(fused[#loc76, #loc73])
#loc151 = loc(fused[#loc84, #loc81])
#loc152 = loc(fused[#loc87, #loc88])
#loc153 = loc(fused[#loc89, #loc90])
#loc154 = loc(fused[#loc91, #loc92])
#loc155 = loc(fused[#loc93, #loc94])
#loc156 = loc(fused[#loc96, #loc94])
#loc157 = loc(fused[#loc97, #loc98])
#loc158 = loc(fused[#loc103, #loc104])
#loc159 = loc(fused[#loc105, #loc106])
#loc160 = loc(fused[#loc107, #loc108])
#loc161 = loc(fused[#loc109, #loc106])
#loc162 = loc(fused[#loc117, #loc114])
