!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__int_min_predec_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc191)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printIntLine(!s32i) loc(#loc192)
  cir.func no_proto @CWE191_Integer_Underflow__int_min_predec_15_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc194)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc195)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc12)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc196)
    cir.br ^bb1 loc(#loc197)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc16)
    cir.br ^bb2 loc(#loc14)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc14)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc17)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.const #cir.int<2147483647> : !s32i loc(#loc18)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc18)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc18)
    cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc198)
    cir.br ^bb6 loc(#loc20)
  ^bb5:  // pred: ^bb2
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc3)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc3)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc21)
    cir.br ^bb6 loc(#loc22)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc15)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc199)
  ^bb8:  // pred: ^bb7
    %10 = cir.const #cir.int<7> : !s32i loc(#loc25)
    cir.br ^bb9 loc(#loc23)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %10 : !s32i, ^bb14 [
      7: ^bb11
    ] loc(#loc23)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc26)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc200)
  ^bb12:  // pred: ^bb11
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    %12 = cir.unary(dec, %11) : !s32i, !s32i loc(#loc29)
    cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc201)
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc9)
    cir.store %13, %0 : !s32i, !cir.ptr<!s32i> loc(#loc194)
    %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc31)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc32)
    cir.br ^bb13 loc(#loc28)
  ^bb13:  // pred: ^bb12
    cir.br ^bb15 loc(#loc33)
  ^bb14:  // pred: ^bb9
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc34)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc35)
    cir.br ^bb15 loc(#loc36)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc24)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc7)
  } loc(#loc193)
  cir.func no_proto @CWE191_Integer_Underflow__int_min_predec_15_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc203)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc204)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc205)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc206)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    cir.return loc(#loc38)
  } loc(#loc202)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc47)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc208)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc209)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc54)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc210)
    cir.br ^bb1 loc(#loc211)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc58)
    cir.br ^bb2 loc(#loc56)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc56)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc59)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.const #cir.int<2147483647> : !s32i loc(#loc60)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc60)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc60)
    %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc60)
    cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc212)
    cir.br ^bb6 loc(#loc62)
  ^bb5:  // pred: ^bb2
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc63)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    cir.br ^bb6 loc(#loc65)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc57)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc213)
  ^bb8:  // pred: ^bb7
    %10 = cir.const #cir.int<8> : !s32i loc(#loc68)
    cir.br ^bb9 loc(#loc66)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %10 : !s32i, ^bb12 [
      7: ^bb11
    ] loc(#loc66)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc69)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc70)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    cir.br ^bb18 loc(#loc72)
  ^bb12:  // pred: ^bb9
    cir.br ^bb13 loc(#loc214)
  ^bb13:  // pred: ^bb12
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc75)
    %14 = cir.const #cir.int<2147483647> : !s32i loc(#loc76)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc76)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc76)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc76)
    %18 = cir.cmp(gt, %13, %17) : !s32i, !cir.bool loc(#loc215)
    cir.brcond %18 ^bb14, ^bb15 loc(#loc216)
  ^bb14:  // pred: ^bb13
    %19 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc80)
    %20 = cir.unary(dec, %19) : !s32i, !s32i loc(#loc80)
    cir.store %20, %1 : !s32i, !cir.ptr<!s32i> loc(#loc217)
    %21 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc51)
    cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc208)
    %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc82)
    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc83)
    cir.br ^bb16 loc(#loc78)
  ^bb15:  // pred: ^bb13
    %23 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc47)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    cir.br ^bb16 loc(#loc74)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc74)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc85)
  ^bb18:  // 2 preds: ^bb11, ^bb17
    cir.br ^bb19 loc(#loc67)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc49)
  } loc(#loc207)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc219)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc220)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc92)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc221)
    cir.br ^bb1 loc(#loc222)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc96)
    cir.br ^bb2 loc(#loc94)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc94)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc97)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.const #cir.int<2147483647> : !s32i loc(#loc98)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc98)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc98)
    cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc223)
    cir.br ^bb6 loc(#loc100)
  ^bb5:  // pred: ^bb2
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc101)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc101)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    cir.br ^bb6 loc(#loc103)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc95)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc224)
  ^bb8:  // pred: ^bb7
    %10 = cir.const #cir.int<7> : !s32i loc(#loc106)
    cir.br ^bb9 loc(#loc104)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %10 : !s32i, ^bb17 [
      7: ^bb11
    ] loc(#loc104)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc107)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc225)
  ^bb12:  // pred: ^bb11
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    %12 = cir.const #cir.int<2147483647> : !s32i loc(#loc111)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc111)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc111)
    %16 = cir.cmp(gt, %11, %15) : !s32i, !cir.bool loc(#loc226)
    cir.brcond %16 ^bb13, ^bb14 loc(#loc227)
  ^bb13:  // pred: ^bb12
    %17 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc115)
    %18 = cir.unary(dec, %17) : !s32i, !s32i loc(#loc115)
    cir.store %18, %1 : !s32i, !cir.ptr<!s32i> loc(#loc228)
    %19 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    cir.store %19, %0 : !s32i, !cir.ptr<!s32i> loc(#loc219)
    %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc118)
    cir.br ^bb15 loc(#loc113)
  ^bb14:  // pred: ^bb12
    %21 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc119)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc119)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    cir.br ^bb15 loc(#loc109)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc109)
  ^bb16:  // pred: ^bb15
    cir.br ^bb18 loc(#loc121)
  ^bb17:  // pred: ^bb9
    %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc122)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc122)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    cir.br ^bb18 loc(#loc124)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc105)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc87)
  } loc(#loc218)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc230)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc231)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc131)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc232)
    cir.br ^bb1 loc(#loc233)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc135)
    cir.br ^bb2 loc(#loc133)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc133)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc136)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc137)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc137)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc138)
    cir.br ^bb6 loc(#loc139)
  ^bb5:  // pred: ^bb2
    %6 = cir.const #cir.int<2> : !s32i loc(#loc140)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc141)
    cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc234)
    cir.br ^bb6 loc(#loc143)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc134)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc235)
  ^bb8:  // pred: ^bb7
    %8 = cir.const #cir.int<7> : !s32i loc(#loc146)
    cir.br ^bb9 loc(#loc144)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %8 : !s32i, ^bb14 [
      7: ^bb11
    ] loc(#loc144)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc147)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc236)
  ^bb12:  // pred: ^bb11
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    %10 = cir.unary(dec, %9) : !s32i, !s32i loc(#loc150)
    cir.store %10, %1 : !s32i, !cir.ptr<!s32i> loc(#loc237)
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc230)
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc153)
    cir.br ^bb13 loc(#loc149)
  ^bb13:  // pred: ^bb12
    cir.br ^bb15 loc(#loc154)
  ^bb14:  // pred: ^bb9
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc155)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc155)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc156)
    cir.br ^bb15 loc(#loc157)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc145)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc126)
  } loc(#loc229)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc239)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc240)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc164)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc241)
    cir.br ^bb1 loc(#loc242)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc168)
    cir.br ^bb2 loc(#loc166)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc166)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc169)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.const #cir.int<2> : !s32i loc(#loc170)
    %5 = cir.unary(minus, %4) : !s32i, !s32i loc(#loc171)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc243)
    cir.br ^bb6 loc(#loc173)
  ^bb5:  // pred: ^bb2
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc174)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc174)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc175)
    cir.br ^bb6 loc(#loc176)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc167)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc244)
  ^bb8:  // pred: ^bb7
    %8 = cir.const #cir.int<7> : !s32i loc(#loc179)
    cir.br ^bb9 loc(#loc177)
  ^bb9:  // pred: ^bb8
    cir.switch.flat %8 : !s32i, ^bb14 [
      7: ^bb11
    ] loc(#loc177)
  ^bb10:  // no predecessors
    cir.br ^bb11 loc(#loc180)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc245)
  ^bb12:  // pred: ^bb11
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc183)
    %10 = cir.unary(dec, %9) : !s32i, !s32i loc(#loc183)
    cir.store %10, %1 : !s32i, !cir.ptr<!s32i> loc(#loc246)
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc161)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc239)
    %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc185)
    cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc186)
    cir.br ^bb13 loc(#loc182)
  ^bb13:  // pred: ^bb12
    cir.br ^bb15 loc(#loc187)
  ^bb14:  // pred: ^bb9
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc188)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc188)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc189)
    cir.br ^bb15 loc(#loc190)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc178)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc159)
  } loc(#loc238)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__int_min_predec_15.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":35:19)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc6 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":22:1)
#loc7 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":53:1)
#loc8 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":44:9)
#loc9 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":44:22)
#loc10 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":24:5)
#loc11 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":24:9)
#loc12 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":26:12)
#loc13 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":26:5)
#loc14 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":27:5)
#loc15 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":37:5)
#loc16 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":27:12)
#loc17 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":29:5)
#loc18 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":31:16)
#loc19 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":31:9)
#loc20 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":32:9)
#loc21 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":35:9)
#loc22 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":36:9)
#loc23 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":38:5)
#loc24 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":52:5)
#loc25 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":38:12)
#loc26 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":40:5)
#loc27 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":41:5)
#loc28 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":46:5)
#loc29 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":43:9)
#loc30 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":43:11)
#loc31 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":45:22)
#loc32 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":45:9)
#loc33 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":47:5)
#loc34 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":50:19)
#loc35 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":50:9)
#loc36 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":51:9)
#loc37 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":205:1)
#loc38 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":211:1)
#loc39 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":207:5)
#loc40 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":207:14)
#loc41 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":208:5)
#loc42 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":208:14)
#loc43 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":209:5)
#loc44 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":209:14)
#loc45 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":210:5)
#loc46 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":210:14)
#loc47 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":92:23)
#loc48 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":60:1)
#loc49 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":96:1)
#loc50 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":87:13)
#loc51 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":87:26)
#loc52 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":62:5)
#loc53 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":62:9)
#loc54 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":64:12)
#loc55 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":64:5)
#loc56 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":65:5)
#loc57 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":75:5)
#loc58 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":65:12)
#loc59 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":67:5)
#loc60 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":69:16)
#loc61 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":69:9)
#loc62 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":70:9)
#loc63 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":73:19)
#loc64 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":73:9)
#loc65 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":74:9)
#loc66 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":76:5)
#loc67 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":95:5)
#loc68 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":76:12)
#loc69 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":78:5)
#loc70 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":80:19)
#loc71 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":80:9)
#loc72 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":81:9)
#loc73 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":84:9)
#loc74 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":93:9)
#loc75 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":84:13)
#loc76 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":84:20)
#loc77 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":85:9)
#loc78 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":89:9)
#loc79 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":91:9)
#loc80 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":86:13)
#loc81 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":86:15)
#loc82 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":88:26)
#loc83 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":88:13)
#loc84 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":92:13)
#loc85 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":94:9)
#loc86 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":99:1)
#loc87 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":135:1)
#loc88 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":122:13)
#loc89 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":122:26)
#loc90 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":101:5)
#loc91 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":101:9)
#loc92 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":103:12)
#loc93 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":103:5)
#loc94 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":104:5)
#loc95 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":114:5)
#loc96 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":104:12)
#loc97 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":106:5)
#loc98 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":108:16)
#loc99 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":108:9)
#loc100 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":109:9)
#loc101 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":112:19)
#loc102 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":112:9)
#loc103 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":113:9)
#loc104 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":115:5)
#loc105 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":134:5)
#loc106 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":115:12)
#loc107 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":117:5)
#loc108 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":119:9)
#loc109 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":128:9)
#loc110 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":119:13)
#loc111 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":119:20)
#loc112 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":120:9)
#loc113 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":124:9)
#loc114 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":126:9)
#loc115 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":121:13)
#loc116 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":121:15)
#loc117 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":123:26)
#loc118 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":123:13)
#loc119 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":127:23)
#loc120 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":127:13)
#loc121 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":129:9)
#loc122 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":132:19)
#loc123 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":132:9)
#loc124 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":133:9)
#loc125 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":138:1)
#loc126 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":169:1)
#loc127 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":160:9)
#loc128 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":160:22)
#loc129 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":140:5)
#loc130 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":140:9)
#loc131 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":142:12)
#loc132 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":142:5)
#loc133 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":143:5)
#loc134 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":153:5)
#loc135 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":143:12)
#loc136 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":145:5)
#loc137 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":147:19)
#loc138 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":147:9)
#loc139 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":148:9)
#loc140 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":151:17)
#loc141 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":151:16)
#loc142 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":151:9)
#loc143 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":152:9)
#loc144 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":154:5)
#loc145 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":168:5)
#loc146 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":154:12)
#loc147 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":156:5)
#loc148 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":157:5)
#loc149 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":162:5)
#loc150 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":159:9)
#loc151 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":159:11)
#loc152 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":161:22)
#loc153 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":161:9)
#loc154 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":163:5)
#loc155 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":166:19)
#loc156 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":166:9)
#loc157 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":167:9)
#loc158 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":172:1)
#loc159 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":203:1)
#loc160 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":194:9)
#loc161 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":194:22)
#loc162 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":174:5)
#loc163 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":174:9)
#loc164 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":176:12)
#loc165 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":176:5)
#loc166 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":177:5)
#loc167 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":187:5)
#loc168 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":177:12)
#loc169 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":179:5)
#loc170 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":181:17)
#loc171 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":181:16)
#loc172 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":181:9)
#loc173 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":182:9)
#loc174 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":185:19)
#loc175 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":185:9)
#loc176 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":186:9)
#loc177 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":188:5)
#loc178 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":202:5)
#loc179 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":188:12)
#loc180 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":190:5)
#loc181 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":191:5)
#loc182 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":196:5)
#loc183 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":193:9)
#loc184 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":193:11)
#loc185 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":195:22)
#loc186 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":195:9)
#loc187 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":197:5)
#loc188 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":200:19)
#loc189 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":200:9)
#loc190 = loc("CWE191_Integer_Underflow__int_min_predec_15.c":201:9)
#loc191 = loc(fused[#loc1, #loc2])
#loc192 = loc(fused[#loc4, #loc5])
#loc193 = loc(fused[#loc6, #loc7])
#loc194 = loc(fused[#loc8, #loc9])
#loc195 = loc(fused[#loc10, #loc11])
#loc196 = loc(fused[#loc13, #loc12])
#loc197 = loc(fused[#loc14, #loc15])
#loc198 = loc(fused[#loc19, #loc18])
#loc199 = loc(fused[#loc23, #loc24])
#loc200 = loc(fused[#loc27, #loc28])
#loc201 = loc(fused[#loc29, #loc30])
#loc202 = loc(fused[#loc37, #loc38])
#loc203 = loc(fused[#loc39, #loc40])
#loc204 = loc(fused[#loc41, #loc42])
#loc205 = loc(fused[#loc43, #loc44])
#loc206 = loc(fused[#loc45, #loc46])
#loc207 = loc(fused[#loc48, #loc49])
#loc208 = loc(fused[#loc50, #loc51])
#loc209 = loc(fused[#loc52, #loc53])
#loc210 = loc(fused[#loc55, #loc54])
#loc211 = loc(fused[#loc56, #loc57])
#loc212 = loc(fused[#loc61, #loc60])
#loc213 = loc(fused[#loc66, #loc67])
#loc214 = loc(fused[#loc73, #loc74])
#loc215 = loc(fused[#loc75, #loc76])
#loc216 = loc(fused[#loc77, #loc78, #loc79, #loc74])
#loc217 = loc(fused[#loc80, #loc81])
#loc218 = loc(fused[#loc86, #loc87])
#loc219 = loc(fused[#loc88, #loc89])
#loc220 = loc(fused[#loc90, #loc91])
#loc221 = loc(fused[#loc93, #loc92])
#loc222 = loc(fused[#loc94, #loc95])
#loc223 = loc(fused[#loc99, #loc98])
#loc224 = loc(fused[#loc104, #loc105])
#loc225 = loc(fused[#loc108, #loc109])
#loc226 = loc(fused[#loc110, #loc111])
#loc227 = loc(fused[#loc112, #loc113, #loc114, #loc109])
#loc228 = loc(fused[#loc115, #loc116])
#loc229 = loc(fused[#loc125, #loc126])
#loc230 = loc(fused[#loc127, #loc128])
#loc231 = loc(fused[#loc129, #loc130])
#loc232 = loc(fused[#loc132, #loc131])
#loc233 = loc(fused[#loc133, #loc134])
#loc234 = loc(fused[#loc142, #loc140])
#loc235 = loc(fused[#loc144, #loc145])
#loc236 = loc(fused[#loc148, #loc149])
#loc237 = loc(fused[#loc150, #loc151])
#loc238 = loc(fused[#loc158, #loc159])
#loc239 = loc(fused[#loc160, #loc161])
#loc240 = loc(fused[#loc162, #loc163])
#loc241 = loc(fused[#loc165, #loc164])
#loc242 = loc(fused[#loc166, #loc167])
#loc243 = loc(fused[#loc172, #loc170])
#loc244 = loc(fused[#loc177, #loc178])
#loc245 = loc(fused[#loc181, #loc182])
#loc246 = loc(fused[#loc183, #loc184])
