!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE242_Use_of_Inherently_Dangerous_Function/CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @gets(...) -> !s32i loc(#loc)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc116)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Error Condition: alter control flow to indicate action taken\00" : !cir.array<!s8i x 61>> : !cir.array<!s8i x 61> {alignment = 1 : i64} loc(#loc3)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc117)
  cir.func no_proto @CWE242_Use_of_Inherently_Dangerous_Function__basic_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc119)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc120)
    cir.br ^bb1 loc(#loc121)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc14)
    cir.brcond %3 ^bb2, ^bb9 loc(#loc122)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc123)
  ^bb3:  // pred: ^bb2
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc18)
    %5 = cir.get_global @gets : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc124)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>)>> loc(#loc124)
    %7 = cir.call %6(%4) : (!cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> !s32i loc(#loc19)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc19)
    %9 = cir.cast(int_to_ptr, %8 : !u64i), !cir.ptr<!s8i> loc(#loc19)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
    cir.br ^bb4 loc(#loc126)
  ^bb4:  // pred: ^bb3
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc25)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc25)
    %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc127)
    cir.brcond %13 ^bb5, ^bb6 loc(#loc128)
  ^bb5:  // pred: ^bb4
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc3)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc3)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc27)
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc28)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc29)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc28)
    cir.br ^bb6 loc(#loc23)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc23)
  ^bb7:  // pred: ^bb6
    %18 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc30)
    %20 = cir.const #cir.int<10> : !s32i loc(#loc31)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc31)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc33)
    %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc33)
    cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc129)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc35)
    cir.br ^bb8 loc(#loc17)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc13)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc13)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc7)
  } loc(#loc118)
  cir.func no_proto @CWE242_Use_of_Inherently_Dangerous_Function__basic_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc131)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc132)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc37)
  } loc(#loc130)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc42)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc133)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc134)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc136)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc137)
    cir.br ^bb1 loc(#loc138)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<0> : !s32i loc(#loc55)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc55)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc139)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc42)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    cir.br ^bb10 loc(#loc57)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc140)
  ^bb4:  // pred: ^bb3
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc62)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc63)
    %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc134)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc64)
    %10 = cir.call @fgets(%6, %7, %9) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc65)
    cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc141)
    cir.br ^bb5 loc(#loc142)
  ^bb5:  // pred: ^bb4
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc71)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc71)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc143)
    cir.brcond %14 ^bb6, ^bb7 loc(#loc144)
  ^bb6:  // pred: ^bb5
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc73)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc75)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc76)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc75)
    cir.br ^bb7 loc(#loc69)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc69)
  ^bb8:  // pred: ^bb7
    %19 = cir.const #cir.int<0> : !s32i loc(#loc77)
    %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc77)
    %21 = cir.const #cir.int<10> : !s32i loc(#loc78)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc78)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc80)
    %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc80)
    cir.store %20, %25 : !s8i, !cir.ptr<!s8i> loc(#loc145)
    %26 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    cir.br ^bb9 loc(#loc61)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc54)
  ^bb10:  // 2 preds: ^bb2, ^bb9
    cir.br ^bb11 loc(#loc54)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc48)
  } loc(#loc135)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc147)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc148)
    cir.br ^bb1 loc(#loc149)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc91)
    cir.brcond %3 ^bb2, ^bb9 loc(#loc150)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc151)
  ^bb3:  // pred: ^bb2
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc95)
    %5 = cir.const #cir.int<10> : !s32i loc(#loc96)
    %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc134)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc97)
    %8 = cir.call @fgets(%4, %5, %7) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc98)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
    cir.br ^bb4 loc(#loc153)
  ^bb4:  // pred: ^bb3
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc104)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc104)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc154)
    cir.brcond %12 ^bb5, ^bb6 loc(#loc155)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc106)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc106)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc108)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc109)
    cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc108)
    cir.br ^bb6 loc(#loc102)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc102)
  ^bb7:  // pred: ^bb6
    %17 = cir.const #cir.int<0> : !s32i loc(#loc110)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc110)
    %19 = cir.const #cir.int<10> : !s32i loc(#loc111)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc111)
    %22 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc113)
    %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc113)
    cir.store %18, %23 : !s8i, !cir.ptr<!s8i> loc(#loc156)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc114)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    cir.br ^bb8 loc(#loc94)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc90)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc90)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc84)
  } loc(#loc146)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE242_Use_of_Inherently_Dangerous_Function/CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":43:27)
#loc4 = loc("/usr/include/stdlib.h":756:1)
#loc5 = loc("/usr/include/stdlib.h":756:70)
#loc6 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":28:1)
#loc7 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":50:1)
#loc8 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":33:13)
#loc9 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":33:32)
#loc10 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":34:13)
#loc11 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":34:19)
#loc12 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":30:5)
#loc13 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":49:5)
#loc14 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":30:8)
#loc15 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":31:5)
#loc16 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":32:9)
#loc17 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":48:9)
#loc18 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":38:27)
#loc19 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":38:22)
#loc20 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":38:31)
#loc21 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":38:13)
#loc22 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":40:13)
#loc23 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":45:13)
#loc24 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":40:17)
#loc25 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":40:27)
#loc26 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":41:13)
#loc27 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":43:17)
#loc28 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":44:17)
#loc29 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":44:22)
#loc30 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":46:33)
#loc31 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":46:18)
#loc32 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":46:28)
#loc33 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":46:13)
#loc34 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":47:23)
#loc35 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":47:13)
#loc36 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":107:1)
#loc37 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":111:1)
#loc38 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":109:5)
#loc39 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":109:11)
#loc40 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":110:5)
#loc41 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":110:11)
#loc42 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":62:19)
#loc43 = loc("/usr/include/stdio.h":654:1)
#loc44 = loc("/usr/include/stdio.h":655:59)
#loc45 = loc("/usr/include/stdio.h":149:1)
#loc46 = loc("/usr/include/stdio.h":149:14)
#loc47 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":57:1)
#loc48 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":82:1)
#loc49 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":67:13)
#loc50 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":67:32)
#loc51 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":68:13)
#loc52 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":68:19)
#loc53 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":59:5)
#loc54 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":81:5)
#loc55 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":59:8)
#loc56 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":60:5)
#loc57 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":63:5)
#loc58 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":65:5)
#loc59 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":62:9)
#loc60 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":66:9)
#loc61 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":80:9)
#loc62 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":70:28)
#loc63 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":70:34)
#loc64 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":70:45)
#loc65 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":70:22)
#loc66 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":70:13)
#loc67 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":70:50)
#loc68 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":72:13)
#loc69 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":77:13)
#loc70 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":72:17)
#loc71 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":72:27)
#loc72 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":73:13)
#loc73 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":75:27)
#loc74 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":75:17)
#loc75 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":76:17)
#loc76 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":76:22)
#loc77 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":78:33)
#loc78 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":78:18)
#loc79 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":78:28)
#loc80 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":78:13)
#loc81 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":79:23)
#loc82 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":79:13)
#loc83 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":85:1)
#loc84 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":105:1)
#loc85 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":90:13)
#loc86 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":90:32)
#loc87 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":91:13)
#loc88 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":91:19)
#loc89 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":87:5)
#loc90 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":104:5)
#loc91 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":87:8)
#loc92 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":88:5)
#loc93 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":89:9)
#loc94 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":103:9)
#loc95 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":93:28)
#loc96 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":93:34)
#loc97 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":93:45)
#loc98 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":93:22)
#loc99 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":93:13)
#loc100 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":93:50)
#loc101 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":95:13)
#loc102 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":100:13)
#loc103 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":95:17)
#loc104 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":95:27)
#loc105 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":96:13)
#loc106 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":98:27)
#loc107 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":98:17)
#loc108 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":99:17)
#loc109 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":99:22)
#loc110 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":101:33)
#loc111 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":101:18)
#loc112 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":101:28)
#loc113 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":101:13)
#loc114 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":102:23)
#loc115 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_04.c":102:13)
#loc116 = loc(fused[#loc1, #loc2])
#loc117 = loc(fused[#loc4, #loc5])
#loc118 = loc(fused[#loc6, #loc7])
#loc119 = loc(fused[#loc8, #loc9])
#loc120 = loc(fused[#loc10, #loc11])
#loc121 = loc(fused[#loc12, #loc13])
#loc122 = loc(fused[#loc15, #loc13])
#loc123 = loc(fused[#loc16, #loc17])
#loc124 = loc(fused[#loc19, #loc20])
#loc125 = loc(fused[#loc21, #loc20])
#loc126 = loc(fused[#loc22, #loc23])
#loc127 = loc(fused[#loc24, #loc25])
#loc128 = loc(fused[#loc26, #loc23])
#loc129 = loc(fused[#loc33, #loc30])
#loc130 = loc(fused[#loc36, #loc37])
#loc131 = loc(fused[#loc38, #loc39])
#loc132 = loc(fused[#loc40, #loc41])
#loc133 = loc(fused[#loc43, #loc44])
#loc134 = loc(fused[#loc45, #loc46])
#loc135 = loc(fused[#loc47, #loc48])
#loc136 = loc(fused[#loc49, #loc50])
#loc137 = loc(fused[#loc51, #loc52])
#loc138 = loc(fused[#loc53, #loc54])
#loc139 = loc(fused[#loc56, #loc57, #loc58, #loc54])
#loc140 = loc(fused[#loc60, #loc61])
#loc141 = loc(fused[#loc66, #loc67])
#loc142 = loc(fused[#loc68, #loc69])
#loc143 = loc(fused[#loc70, #loc71])
#loc144 = loc(fused[#loc72, #loc69])
#loc145 = loc(fused[#loc80, #loc77])
#loc146 = loc(fused[#loc83, #loc84])
#loc147 = loc(fused[#loc85, #loc86])
#loc148 = loc(fused[#loc87, #loc88])
#loc149 = loc(fused[#loc89, #loc90])
#loc150 = loc(fused[#loc92, #loc90])
#loc151 = loc(fused[#loc93, #loc94])
#loc152 = loc(fused[#loc99, #loc100])
#loc153 = loc(fused[#loc101, #loc102])
#loc154 = loc(fused[#loc103, #loc104])
#loc155 = loc(fused[#loc105, #loc102])
#loc156 = loc(fused[#loc113, #loc110])
