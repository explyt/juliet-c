!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc11 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":31:14)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":31:21)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":58:18)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":58:25)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":81:18)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":81:25)
#true = #cir.bool<true> : !cir.bool
#loc104 = loc(fused[#loc11, #loc12])
#loc114 = loc(fused[#loc39, #loc40])
#loc124 = loc(fused[#loc70, #loc71])
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc100)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc101)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc102)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc8)
  cir.func @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_657badSinkEm(%arg0: !u64i loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc104)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc13)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc106)
      cir.scope {
        %2 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc20)
        %3 = cir.const #cir.int<5> : !u64i loc(#loc108)
        %4 = cir.cmp(gt, %2, %3) : !u64i, !cir.bool loc(#loc109)
        cir.if %4 {
          %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc26)
          %6 = cir.call @_Znam(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc27)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc111)
          cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc112)
          %8 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc31)
          %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
          %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc5)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc5)
          %12 = cir.call @strcpy(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc31)
          %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
          cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc34)
          %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
          cir.delete.array %14 : <!s8i> loc(#loc35)
        } else {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc8)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc8)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc36)
        } loc(#loc110)
      } loc(#loc107)
    } loc(#loc105)
    cir.return loc(#loc10)
  } loc(#loc103)
  cir.func @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_6511goodG2BSinkEm(%arg0: !u64i loc(fused[#loc39, #loc40])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc114)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc41)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc116)
      cir.scope {
        %2 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc48)
        %3 = cir.const #cir.int<5> : !u64i loc(#loc118)
        %4 = cir.cmp(gt, %2, %3) : !u64i, !cir.bool loc(#loc119)
        cir.if %4 {
          %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc54)
          %6 = cir.call @_Znam(%5) : (!u64i) -> !cir.ptr<!void> loc(#loc55)
          %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc121)
          cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
          %8 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc59)
          %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
          %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc61)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc61)
          %12 = cir.call @strcpy(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc59)
          %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
          cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc63)
          %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
          cir.delete.array %14 : <!s8i> loc(#loc64)
        } else {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc65)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc65)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc66)
        } loc(#loc120)
      } loc(#loc117)
    } loc(#loc115)
    cir.return loc(#loc38)
  } loc(#loc113)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc67)
  cir.func @_ZN47CWE789_Uncontrolled_Mem_Alloc__new_char_rand_6511goodB2GSinkEm(%arg0: !u64i loc(fused[#loc70, #loc71])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc124)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc72)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc126)
      cir.scope {
        %2 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc79)
        %3 = cir.const #cir.int<5> : !u64i loc(#loc128)
        %4 = cir.cmp(gt, %2, %3) : !u64i, !cir.bool loc(#loc129)
        %5 = cir.ternary(%4, true {
          %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc83)
          %7 = cir.const #cir.int<100> : !s32i loc(#loc84)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc84)
          %9 = cir.cmp(lt, %6, %8) : !u64i, !cir.bool loc(#loc130)
          %10 = cir.ternary(%9, true {
            %11 = cir.const #true loc(#loc82)
            cir.yield %11 : !cir.bool loc(#loc82)
          }, false {
            %11 = cir.const #false loc(#loc82)
            cir.yield %11 : !cir.bool loc(#loc82)
          }) : (!cir.bool) -> !cir.bool loc(#loc82)
          cir.yield %10 : !cir.bool loc(#loc82)
        }, false {
          %6 = cir.const #false loc(#loc82)
          cir.yield %6 : !cir.bool loc(#loc82)
        }) : (!cir.bool) -> !cir.bool loc(#loc82)
        cir.if %5 {
          %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc88)
          %7 = cir.call @_Znam(%6) : (!u64i) -> !cir.ptr<!void> loc(#loc89)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc132)
          cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc133)
          %9 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc93)
          %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
          %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc95)
          %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc95)
          %13 = cir.call @strcpy(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc93)
          %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
          cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc97)
          %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
          cir.delete.array %15 : <!s8i> loc(#loc98)
        } else {
          %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc67)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc67)
          cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc99)
        } loc(#loc131)
      } loc(#loc127)
    } loc(#loc125)
    cir.return loc(#loc69)
  } loc(#loc123)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc3 = loc("/usr/include/string.h":141:1)
#loc4 = loc("/usr/include/string.h":142:14)
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":42:30)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":48:23)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":31:1)
#loc10 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":51:1)
#loc13 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":32:1)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":33:5)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":50:5)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":34:9)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":34:16)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":38:9)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":49:9)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":38:13)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":38:20)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":38:39)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":39:9)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":45:9)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":47:9)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":40:33)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":31:6)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":40:24)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":40:37)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":40:13)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":42:13)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":42:20)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":43:23)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":43:13)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":44:23)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":48:13)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":58:1)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":78:1)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":59:1)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":60:5)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":77:5)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":61:9)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":61:16)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":65:9)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":76:9)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":65:13)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":65:20)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":65:39)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":66:9)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":72:9)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":74:9)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":67:33)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":58:6)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":67:24)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":67:37)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":67:13)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":69:13)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":69:20)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":69:30)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":70:23)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":70:13)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":71:23)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":75:23)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":75:13)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":98:23)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":81:1)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":101:1)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":82:1)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":83:5)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":100:5)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":84:9)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":84:16)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":88:9)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":99:9)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":88:13)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":88:20)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":88:39)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":88:41)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":88:44)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":88:51)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":89:9)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":95:9)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":97:9)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":90:33)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":81:6)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":90:24)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":90:37)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":90:13)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":92:13)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":92:20)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":92:30)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":93:23)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":93:13)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":94:23)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_rand_65b.cpp":98:13)
#loc100 = loc(fused[#loc1, #loc2])
#loc101 = loc(fused[#loc3, #loc4])
#loc102 = loc(fused[#loc6, #loc7])
#loc103 = loc(fused[#loc9, #loc10])
#loc105 = loc(fused[#loc14, #loc15])
#loc106 = loc(fused[#loc16, #loc17])
#loc107 = loc(fused[#loc18, #loc19])
#loc108 = loc(fused[#loc21, #loc22])
#loc109 = loc(fused[#loc20, #loc22])
#loc110 = loc(fused[#loc23, #loc24, #loc25, #loc19])
#loc111 = loc(fused[#loc28, #loc29])
#loc112 = loc(fused[#loc30, #loc29])
#loc113 = loc(fused[#loc37, #loc38])
#loc115 = loc(fused[#loc42, #loc43])
#loc116 = loc(fused[#loc44, #loc45])
#loc117 = loc(fused[#loc46, #loc47])
#loc118 = loc(fused[#loc49, #loc50])
#loc119 = loc(fused[#loc48, #loc50])
#loc120 = loc(fused[#loc51, #loc52, #loc53, #loc47])
#loc121 = loc(fused[#loc56, #loc57])
#loc122 = loc(fused[#loc58, #loc57])
#loc123 = loc(fused[#loc68, #loc69])
#loc125 = loc(fused[#loc73, #loc74])
#loc126 = loc(fused[#loc75, #loc76])
#loc127 = loc(fused[#loc77, #loc78])
#loc128 = loc(fused[#loc80, #loc81])
#loc129 = loc(fused[#loc79, #loc81])
#loc130 = loc(fused[#loc83, #loc84])
#loc131 = loc(fused[#loc85, #loc86, #loc87, #loc78])
#loc132 = loc(fused[#loc90, #loc91])
#loc133 = loc(fused[#loc92, #loc91])
