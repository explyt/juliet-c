!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":21:81)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":21:107)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":53:85)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":53:111)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc119 = loc(fused[#loc5, #loc6])
#loc140 = loc(fused[#loc63, #loc64])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc117)
  cir.func  @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b_badSink(%arg0: !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc119)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc120)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc9)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc10)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc11)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, %3 : !s32i), !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc8)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc10)
    cir.store %5, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc120)
    cir.scope {
      %6 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc122)
      cir.scope {
        %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc124)
        cir.scope {
          %8 = cir.const #cir.int<0> : !s32i loc(#loc22)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc22)
          cir.store %9, %7 : !u64i, !cir.ptr<!u64i> loc(#loc126)
          cir.for : cond {
            %10 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc24)
            %11 = cir.const #cir.int<100> : !s32i loc(#loc25)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc25)
            %13 = cir.cmp(lt, %10, %12) : !u64i, !s32i loc(#loc127)
            %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc26)
            cir.condition(%14) loc(#loc26)
          } body {
            cir.scope {
              %10 = cir.const #cir.int<0> : !s32i loc(#loc28)
              %11 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc29)
              %12 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
              %13 = cir.ptr_stride(%12 : !cir.ptr<!ty__twoIntsStruct>, %11 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
              %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
              cir.store %10, %14 : !s32i, !cir.ptr<!s32i> loc(#loc129)
              %15 = cir.const #cir.int<0> : !s32i loc(#loc32)
              %16 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc33)
              %17 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
              %18 = cir.ptr_stride(%17 : !cir.ptr<!ty__twoIntsStruct>, %16 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
              %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc35)
              cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc130)
            } loc(#loc128)
            cir.yield loc(#loc21)
          } step {
            %10 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc36)
            %11 = cir.unary(inc, %10) : !u64i, !u64i loc(#loc37)
            cir.store %11, %7 : !u64i, !cir.ptr<!u64i> loc(#loc131)
            cir.yield loc(#loc125)
          } loc(#loc125)
        } loc(#loc125)
      } loc(#loc123)
      cir.scope {
        %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc133)
        cir.scope {
          %11 = cir.const #cir.int<0> : !s32i loc(#loc44)
          %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc44)
          cir.store %12, %7 : !u64i, !cir.ptr<!u64i> loc(#loc135)
          cir.for : cond {
            %13 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc46)
            %14 = cir.const #cir.int<100> : !s32i loc(#loc47)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc47)
            %16 = cir.cmp(lt, %13, %15) : !u64i, !s32i loc(#loc136)
            %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc48)
            cir.condition(%17) loc(#loc48)
          } body {
            cir.scope {
              %13 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
              %14 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc51)
              %15 = cir.ptr_stride(%13 : !cir.ptr<!ty__twoIntsStruct>, %14 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc52)
              %16 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc53)
              %17 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc54)
              %18 = cir.ptr_stride(%17 : !cir.ptr<!ty__twoIntsStruct>, %16 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc54)
              cir.copy %18 to %15 : !cir.ptr<!ty__twoIntsStruct> loc(#loc52)
            } loc(#loc137)
            cir.yield loc(#loc43)
          } step {
            %13 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc55)
            %14 = cir.unary(inc, %13) : !u64i, !u64i loc(#loc56)
            cir.store %14, %7 : !u64i, !cir.ptr<!u64i> loc(#loc138)
            cir.yield loc(#loc134)
          } loc(#loc134)
        } loc(#loc134)
        %8 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc57)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc58)
        %10 = cir.ptr_stride(%8 : !cir.ptr<!ty__twoIntsStruct>, %9 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc59)
        cir.call @printStructLine(%10) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc60)
      } loc(#loc132)
    } loc(#loc121)
    cir.return loc(#loc4)
  } loc(#loc118)
  cir.func  @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b_goodG2BSink(%arg0: !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(fused[#loc63, #loc64])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc140)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc141)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc67)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc68)
    %3 = cir.const #cir.int<2> : !s32i loc(#loc69)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, %3 : !s32i), !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc66)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc68)
    cir.store %5, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc141)
    cir.scope {
      %6 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc143)
      cir.scope {
        %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc145)
        cir.scope {
          %8 = cir.const #cir.int<0> : !s32i loc(#loc80)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc80)
          cir.store %9, %7 : !u64i, !cir.ptr<!u64i> loc(#loc147)
          cir.for : cond {
            %10 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc82)
            %11 = cir.const #cir.int<100> : !s32i loc(#loc83)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc83)
            %13 = cir.cmp(lt, %10, %12) : !u64i, !s32i loc(#loc148)
            %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc84)
            cir.condition(%14) loc(#loc84)
          } body {
            cir.scope {
              %10 = cir.const #cir.int<0> : !s32i loc(#loc86)
              %11 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc87)
              %12 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc88)
              %13 = cir.ptr_stride(%12 : !cir.ptr<!ty__twoIntsStruct>, %11 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc88)
              %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
              cir.store %10, %14 : !s32i, !cir.ptr<!s32i> loc(#loc150)
              %15 = cir.const #cir.int<0> : !s32i loc(#loc89)
              %16 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc90)
              %17 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc91)
              %18 = cir.ptr_stride(%17 : !cir.ptr<!ty__twoIntsStruct>, %16 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc91)
              %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc35)
              cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc151)
            } loc(#loc149)
            cir.yield loc(#loc79)
          } step {
            %10 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc92)
            %11 = cir.unary(inc, %10) : !u64i, !u64i loc(#loc93)
            cir.store %11, %7 : !u64i, !cir.ptr<!u64i> loc(#loc152)
            cir.yield loc(#loc146)
          } loc(#loc146)
        } loc(#loc146)
      } loc(#loc144)
      cir.scope {
        %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc154)
        cir.scope {
          %11 = cir.const #cir.int<0> : !s32i loc(#loc100)
          %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc100)
          cir.store %12, %7 : !u64i, !cir.ptr<!u64i> loc(#loc156)
          cir.for : cond {
            %13 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc102)
            %14 = cir.const #cir.int<100> : !s32i loc(#loc103)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc103)
            %16 = cir.cmp(lt, %13, %15) : !u64i, !s32i loc(#loc157)
            %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc104)
            cir.condition(%17) loc(#loc104)
          } body {
            cir.scope {
              %13 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc106)
              %14 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc107)
              %15 = cir.ptr_stride(%13 : !cir.ptr<!ty__twoIntsStruct>, %14 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc108)
              %16 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc109)
              %17 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc110)
              %18 = cir.ptr_stride(%17 : !cir.ptr<!ty__twoIntsStruct>, %16 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc110)
              cir.copy %18 to %15 : !cir.ptr<!ty__twoIntsStruct> loc(#loc108)
            } loc(#loc158)
            cir.yield loc(#loc99)
          } step {
            %13 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc111)
            %14 = cir.unary(inc, %13) : !u64i, !u64i loc(#loc112)
            cir.store %14, %7 : !u64i, !cir.ptr<!u64i> loc(#loc159)
            cir.yield loc(#loc155)
          } loc(#loc155)
        } loc(#loc155)
        %8 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc113)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc114)
        %10 = cir.ptr_stride(%8 : !cir.ptr<!ty__twoIntsStruct>, %9 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc115)
        cir.call @printStructLine(%10) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc116)
      } loc(#loc153)
    } loc(#loc142)
    cir.return loc(#loc62)
  } loc(#loc139)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":21:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":46:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":24:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":24:39)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":22:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":24:28)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":24:38)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":25:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":45:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":26:9)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":26:33)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":27:9)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":35:9)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":28:13)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":28:20)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":30:13)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":34:13)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":30:22)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":30:18)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":30:25)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":30:29)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":30:27)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":31:13)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":32:36)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":32:24)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":32:17)
#loc31 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":33:36)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":33:24)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":33:17)
#loc35 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":30:35)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":30:34)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":36:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":44:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":37:13)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":37:20)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":39:13)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":42:13)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":39:22)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":39:18)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":39:25)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":39:29)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":39:27)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":40:13)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":41:17)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":41:22)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":41:23)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":41:34)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":41:27)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":39:35)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":39:34)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":43:30)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":43:35)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":43:36)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":43:13)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":53:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":77:1)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":55:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":55:39)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":54:1)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":55:28)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":55:38)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":56:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":76:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":57:9)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":57:33)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":58:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":66:9)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":59:13)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":59:20)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":61:13)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":65:13)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":61:22)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":61:18)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":61:25)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":61:29)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":61:27)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":62:13)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":63:36)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":63:24)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":63:17)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":64:36)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":64:24)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":64:17)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":61:35)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":61:34)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":67:9)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":75:9)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":68:13)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":68:20)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":70:13)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":73:13)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":70:22)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":70:18)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":70:25)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":70:29)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":70:27)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":71:13)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":72:17)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":72:22)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":72:23)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":72:34)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":72:27)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":70:35)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":70:34)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":74:30)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":74:35)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":74:36)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_loop_66b.c":74:13)
#loc117 = loc(fused[#loc1, #loc2])
#loc118 = loc(fused[#loc3, #loc4])
#loc120 = loc(fused[#loc7, #loc8])
#loc121 = loc(fused[#loc12, #loc13])
#loc122 = loc(fused[#loc14, #loc15])
#loc123 = loc(fused[#loc16, #loc17])
#loc124 = loc(fused[#loc18, #loc19])
#loc125 = loc(fused[#loc20, #loc21])
#loc126 = loc(fused[#loc23, #loc22])
#loc127 = loc(fused[#loc24, #loc25])
#loc128 = loc(fused[#loc27, #loc21])
#loc129 = loc(fused[#loc30, #loc28])
#loc130 = loc(fused[#loc34, #loc32])
#loc131 = loc(fused[#loc37, #loc36])
#loc132 = loc(fused[#loc38, #loc39])
#loc133 = loc(fused[#loc40, #loc41])
#loc134 = loc(fused[#loc42, #loc43])
#loc135 = loc(fused[#loc45, #loc44])
#loc136 = loc(fused[#loc46, #loc47])
#loc137 = loc(fused[#loc49, #loc43])
#loc138 = loc(fused[#loc56, #loc55])
#loc139 = loc(fused[#loc61, #loc62])
#loc141 = loc(fused[#loc65, #loc66])
#loc142 = loc(fused[#loc70, #loc71])
#loc143 = loc(fused[#loc72, #loc73])
#loc144 = loc(fused[#loc74, #loc75])
#loc145 = loc(fused[#loc76, #loc77])
#loc146 = loc(fused[#loc78, #loc79])
#loc147 = loc(fused[#loc81, #loc80])
#loc148 = loc(fused[#loc82, #loc83])
#loc149 = loc(fused[#loc85, #loc79])
#loc150 = loc(fused[#loc88, #loc86])
#loc151 = loc(fused[#loc91, #loc89])
#loc152 = loc(fused[#loc93, #loc92])
#loc153 = loc(fused[#loc94, #loc95])
#loc154 = loc(fused[#loc96, #loc97])
#loc155 = loc(fused[#loc98, #loc99])
#loc156 = loc(fused[#loc101, #loc100])
#loc157 = loc(fused[#loc102, #loc103])
#loc158 = loc(fused[#loc105, #loc99])
#loc159 = loc(fused[#loc112, #loc111])
