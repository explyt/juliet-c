!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc5 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":25:23)
#loc6 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":25:28)
#loc40 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":57:27)
#loc41 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":57:32)
#loc71 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":86:27)
#loc72 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":86:32)
#loc118 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":131:10)
#loc119 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":131:14)
#loc120 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":131:20)
#loc121 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":131:32)
#true = #cir.bool<true> : !cir.bool
#loc136 = loc(fused[#loc5, #loc6])
#loc149 = loc(fused[#loc40, #loc41])
#loc160 = loc(fused[#loc71, #loc72])
#loc175 = loc(fused[#loc118, #loc119])
#loc176 = loc(fused[#loc120, #loc121])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s02/CWE127_Buffer_Underread__CWE839_rand_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc134)
  cir.func internal private @_ZN39CWE127_Buffer_Underread__CWE839_rand_43L9badSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc5, #loc6])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc136)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc7)
    %1 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc8)
    %3 = cir.binop(and, %1, %2) : !s32i loc(#loc8)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc8)
    %5 = cir.ternary(%4, true {
      %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
      %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc8)
      %10 = cir.const #cir.int<30> : !s32i loc(#loc8)
      %11 = cir.shift(left, %9 : !u32i, %10 : !s32i) -> !u32i loc(#loc8)
      %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
      %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc8)
      %14 = cir.const #cir.int<15> : !s32i loc(#loc8)
      %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc8)
      %16 = cir.binop(xor, %11, %15) : !u32i loc(#loc8)
      %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
      %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc8)
      %19 = cir.binop(xor, %16, %18) : !u32i loc(#loc8)
      cir.yield %19 : !u32i loc(#loc8)
    }, false {
      %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
      %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc8)
      %10 = cir.const #cir.int<30> : !s32i loc(#loc8)
      %11 = cir.shift(left, %9 : !u32i, %10 : !s32i) -> !u32i loc(#loc8)
      %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
      %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc8)
      %14 = cir.const #cir.int<15> : !s32i loc(#loc8)
      %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc8)
      %16 = cir.binop(xor, %11, %15) : !u32i loc(#loc8)
      %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
      %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc8)
      %19 = cir.binop(xor, %16, %18) : !u32i loc(#loc8)
      %20 = cir.unary(minus, %19) : !u32i, !u32i loc(#loc8)
      %21 = cir.const #cir.int<1> : !s32i loc(#loc8)
      %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc8)
      %23 = cir.binop(sub, %20, %22) : !u32i loc(#loc8)
      cir.yield %23 : !u32i loc(#loc8)
    }) : (!cir.bool) -> !u32i loc(#loc8)
    %6 = cir.cast(integral, %5 : !u32i), !s32i loc(#loc8)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc9)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc137)
    cir.return loc(#loc4)
  } loc(#loc135)
  cir.func private @printIntLine(!s32i) loc(#loc138)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc139)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is too big.\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc14)
  cir.func @_ZN39CWE127_Buffer_Underread__CWE839_rand_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc141)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc20)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc142)
    cir.call @_ZN39CWE127_Buffer_Underread__CWE839_rand_43L9badSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc22)
    cir.scope {
      %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc144)
      %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc144)
      cir.store %4, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc144)
      cir.scope {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc29)
        %6 = cir.const #cir.int<10> : !s32i loc(#loc30)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc146)
        cir.if %7 {
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc34)
          %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc35)
          %10 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc35)
          %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc35)
          cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc36)
        } else {
          %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc14)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc14)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc37)
        } loc(#loc147)
      } loc(#loc145)
    } loc(#loc143)
    cir.return loc(#loc16)
  } loc(#loc140)
  cir.func internal private @_ZN39CWE127_Buffer_Underread__CWE839_rand_43L13goodG2BSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc40, #loc41])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc149)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc42)
    %1 = cir.const #cir.int<7> : !s32i loc(#loc43)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc44)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc150)
    cir.return loc(#loc39)
  } loc(#loc148)
  cir.func internal private @_ZN39CWE127_Buffer_Underread__CWE839_rand_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc152)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc50)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc153)
    cir.call @_ZN39CWE127_Buffer_Underread__CWE839_rand_43L13goodG2BSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc52)
    cir.scope {
      %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc155)
      %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc155)
      cir.store %4, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc155)
      cir.scope {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc59)
        %6 = cir.const #cir.int<10> : !s32i loc(#loc60)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc157)
        cir.if %7 {
          %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc64)
          %9 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc65)
          %10 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %8 : !s32i), !cir.ptr<!s32i> loc(#loc65)
          %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc65)
          cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc66)
        } else {
          %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc67)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc67)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc68)
        } loc(#loc158)
      } loc(#loc156)
    } loc(#loc154)
    cir.return loc(#loc46)
  } loc(#loc151)
  cir.func internal private @_ZN39CWE127_Buffer_Underread__CWE839_rand_43L13goodB2GSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc71, #loc72])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc160)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc73)
    %1 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc74)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc74)
    %3 = cir.binop(and, %1, %2) : !s32i loc(#loc74)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc74)
    %5 = cir.ternary(%4, true {
      %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc74)
      %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc74)
      %10 = cir.const #cir.int<30> : !s32i loc(#loc74)
      %11 = cir.shift(left, %9 : !u32i, %10 : !s32i) -> !u32i loc(#loc74)
      %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc74)
      %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc74)
      %14 = cir.const #cir.int<15> : !s32i loc(#loc74)
      %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc74)
      %16 = cir.binop(xor, %11, %15) : !u32i loc(#loc74)
      %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc74)
      %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc74)
      %19 = cir.binop(xor, %16, %18) : !u32i loc(#loc74)
      cir.yield %19 : !u32i loc(#loc74)
    }, false {
      %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc74)
      %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc74)
      %10 = cir.const #cir.int<30> : !s32i loc(#loc74)
      %11 = cir.shift(left, %9 : !u32i, %10 : !s32i) -> !u32i loc(#loc74)
      %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc74)
      %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc74)
      %14 = cir.const #cir.int<15> : !s32i loc(#loc74)
      %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc74)
      %16 = cir.binop(xor, %11, %15) : !u32i loc(#loc74)
      %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc74)
      %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc74)
      %19 = cir.binop(xor, %16, %18) : !u32i loc(#loc74)
      %20 = cir.unary(minus, %19) : !u32i, !u32i loc(#loc74)
      %21 = cir.const #cir.int<1> : !s32i loc(#loc74)
      %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc74)
      %23 = cir.binop(sub, %20, %22) : !u32i loc(#loc74)
      cir.yield %23 : !u32i loc(#loc74)
    }) : (!cir.bool) -> !u32i loc(#loc74)
    %6 = cir.cast(integral, %5 : !u32i), !s32i loc(#loc74)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc75)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    cir.return loc(#loc70)
  } loc(#loc159)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc76)
  cir.func internal private @_ZN39CWE127_Buffer_Underread__CWE839_rand_43L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc163)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc81)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc82)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    cir.call @_ZN39CWE127_Buffer_Underread__CWE839_rand_43L13goodB2GSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc84)
    cir.scope {
      %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc166)
      %4 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc166)
      cir.store %4, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc166)
      cir.scope {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc91)
        %6 = cir.const #cir.int<0> : !s32i loc(#loc92)
        %7 = cir.cmp(ge, %5, %6) : !s32i, !cir.bool loc(#loc168)
        %8 = cir.ternary(%7, true {
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc94)
          %10 = cir.const #cir.int<10> : !s32i loc(#loc95)
          %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc169)
          %12 = cir.ternary(%11, true {
            %13 = cir.const #true loc(#loc93)
            cir.yield %13 : !cir.bool loc(#loc93)
          }, false {
            %13 = cir.const #false loc(#loc93)
            cir.yield %13 : !cir.bool loc(#loc93)
          }) : (!cir.bool) -> !cir.bool loc(#loc93)
          cir.yield %12 : !cir.bool loc(#loc93)
        }, false {
          %9 = cir.const #false loc(#loc93)
          cir.yield %9 : !cir.bool loc(#loc93)
        }) : (!cir.bool) -> !cir.bool loc(#loc93)
        cir.if %8 {
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc100)
          %10 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc101)
          %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc101)
          %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc101)
          cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc102)
        } else {
          %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc76)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc76)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc103)
        } loc(#loc170)
      } loc(#loc167)
    } loc(#loc165)
    cir.return loc(#loc78)
  } loc(#loc162)
  cir.func @_ZN39CWE127_Buffer_Underread__CWE839_rand_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN39CWE127_Buffer_Underread__CWE839_rand_43L7goodG2BEv() : () -> () loc(#loc106)
    cir.call @_ZN39CWE127_Buffer_Underread__CWE839_rand_43L7goodB2GEv() : () -> () loc(#loc107)
    cir.return loc(#loc105)
  } loc(#loc171)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc172)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc173)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc112)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc113)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc114)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc115)
  cir.func @main(%arg0: !s32i loc(fused[#loc118, #loc119]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc120, #loc121])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc175)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc176)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc117)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc122)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc122)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc123)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc124)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc124)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc125)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc112)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc112)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc126)
    cir.call @_ZN39CWE127_Buffer_Underread__CWE839_rand_434goodEv() : () -> () loc(#loc127)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc113)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc113)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc128)
    %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc114)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc114)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc129)
    cir.call @_ZN39CWE127_Buffer_Underread__CWE839_rand_433badEv() : () -> () loc(#loc130)
    %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc115)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc115)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc131)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc132)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc177)
    cir.return %15 : !s32i loc(#loc177)
  } loc(#loc174)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s02/CWE127_Buffer_Underread__CWE839_rand_43.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":25:1)
#loc4 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":29:1)
#loc7 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":26:1)
#loc8 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":28:12)
#loc9 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":28:5)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc14 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":47:23)
#loc15 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":31:1)
#loc16 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":50:1)
#loc17 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":33:5)
#loc18 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":33:9)
#loc19 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":35:13)
#loc20 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":35:12)
#loc21 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":35:5)
#loc22 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":36:5)
#loc23 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":37:5)
#loc24 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":49:5)
#loc25 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":38:9)
#loc26 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":38:30)
#loc27 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":41:9)
#loc28 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":48:9)
#loc29 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":41:13)
#loc30 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":41:20)
#loc31 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":42:9)
#loc32 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":44:9)
#loc33 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":46:9)
#loc34 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":43:33)
#loc35 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":43:26)
#loc36 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":43:13)
#loc37 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":47:13)
#loc38 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":57:1)
#loc39 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":62:1)
#loc42 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":58:1)
#loc43 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":61:12)
#loc44 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":61:5)
#loc45 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":64:1)
#loc46 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":83:1)
#loc47 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":66:5)
#loc48 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":66:9)
#loc49 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":68:13)
#loc50 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":68:12)
#loc51 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":68:5)
#loc52 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":69:5)
#loc53 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":70:5)
#loc54 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":82:5)
#loc55 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":71:9)
#loc56 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":71:30)
#loc57 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":74:9)
#loc58 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":81:9)
#loc59 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":74:13)
#loc60 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":74:20)
#loc61 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":75:9)
#loc62 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":77:9)
#loc63 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":79:9)
#loc64 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":76:33)
#loc65 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":76:26)
#loc66 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":76:13)
#loc67 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":80:23)
#loc68 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":80:13)
#loc69 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":86:1)
#loc70 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":90:1)
#loc73 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":87:1)
#loc74 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":89:12)
#loc75 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":89:5)
#loc76 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":107:23)
#loc77 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":92:1)
#loc78 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":110:1)
#loc79 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":94:5)
#loc80 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":94:9)
#loc81 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":96:13)
#loc82 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":96:12)
#loc83 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":96:5)
#loc84 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":97:5)
#loc85 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":98:5)
#loc86 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":109:5)
#loc87 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":99:9)
#loc88 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":99:30)
#loc89 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":101:9)
#loc90 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":108:9)
#loc91 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":101:13)
#loc92 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":101:21)
#loc93 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":101:23)
#loc94 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":101:26)
#loc95 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":101:34)
#loc96 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":101:36)
#loc97 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":102:9)
#loc98 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":104:9)
#loc99 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":106:9)
#loc100 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":103:33)
#loc101 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":103:26)
#loc102 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":103:13)
#loc103 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":107:13)
#loc104 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":112:1)
#loc105 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":116:1)
#loc106 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":114:5)
#loc107 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":115:5)
#loc108 = loc("/usr/include/stdlib.h":575:1)
#loc109 = loc("/usr/include/stdlib.h":575:41)
#loc110 = loc("/usr/include/time.h":76:1)
#loc111 = loc("/usr/include/time.h":76:38)
#loc112 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":136:15)
#loc113 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":138:15)
#loc114 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":141:15)
#loc115 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":143:15)
#loc116 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":131:1)
#loc117 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":146:1)
#loc122 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":132:1)
#loc123 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":134:27)
#loc124 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":134:22)
#loc125 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":134:5)
#loc126 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":136:5)
#loc127 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":137:5)
#loc128 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":138:5)
#loc129 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":141:5)
#loc130 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":142:5)
#loc131 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":143:5)
#loc132 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":145:12)
#loc133 = loc("CWE127_Buffer_Underread__CWE839_rand_43.cpp":145:5)
#loc134 = loc(fused[#loc1, #loc2])
#loc135 = loc(fused[#loc3, #loc4])
#loc137 = loc(fused[#loc9, #loc8])
#loc138 = loc(fused[#loc10, #loc11])
#loc139 = loc(fused[#loc12, #loc13])
#loc140 = loc(fused[#loc15, #loc16])
#loc141 = loc(fused[#loc17, #loc18])
#loc142 = loc(fused[#loc21, #loc19])
#loc143 = loc(fused[#loc23, #loc24])
#loc144 = loc(fused[#loc25, #loc26])
#loc145 = loc(fused[#loc27, #loc28])
#loc146 = loc(fused[#loc29, #loc30])
#loc147 = loc(fused[#loc31, #loc32, #loc33, #loc28])
#loc148 = loc(fused[#loc38, #loc39])
#loc150 = loc(fused[#loc44, #loc43])
#loc151 = loc(fused[#loc45, #loc46])
#loc152 = loc(fused[#loc47, #loc48])
#loc153 = loc(fused[#loc51, #loc49])
#loc154 = loc(fused[#loc53, #loc54])
#loc155 = loc(fused[#loc55, #loc56])
#loc156 = loc(fused[#loc57, #loc58])
#loc157 = loc(fused[#loc59, #loc60])
#loc158 = loc(fused[#loc61, #loc62, #loc63, #loc58])
#loc159 = loc(fused[#loc69, #loc70])
#loc161 = loc(fused[#loc75, #loc74])
#loc162 = loc(fused[#loc77, #loc78])
#loc163 = loc(fused[#loc79, #loc80])
#loc164 = loc(fused[#loc83, #loc81])
#loc165 = loc(fused[#loc85, #loc86])
#loc166 = loc(fused[#loc87, #loc88])
#loc167 = loc(fused[#loc89, #loc90])
#loc168 = loc(fused[#loc91, #loc92])
#loc169 = loc(fused[#loc94, #loc96])
#loc170 = loc(fused[#loc97, #loc98, #loc99, #loc90])
#loc171 = loc(fused[#loc104, #loc105])
#loc172 = loc(fused[#loc108, #loc109])
#loc173 = loc(fused[#loc110, #loc111])
#loc174 = loc(fused[#loc116, #loc117])
#loc177 = loc(fused[#loc133, #loc132])
