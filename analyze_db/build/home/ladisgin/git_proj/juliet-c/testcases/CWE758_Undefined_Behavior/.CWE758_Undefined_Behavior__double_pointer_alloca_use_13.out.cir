!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc40 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":98:10)
#loc41 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":98:14)
#loc42 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":98:20)
#loc43 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":98:32)
#loc162 = loc(fused[#loc40, #loc41])
#loc163 = loc(fused[#loc42, #loc43])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant external @GLOBAL_CONST_FIVE : !s32i {alignment = 4 : i64} loc(#loc146)
  cir.func private @printDoubleLine(!cir.double) loc(#loc147)
  cir.func no_proto @CWE758_Undefined_Behavior__double_pointer_alloca_use_13_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc149)
    %1 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data", init] {alignment = 8 : i64} loc(#loc150)
    cir.br ^bb1 loc(#loc151)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc146)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc13)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc14)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc152)
    cir.brcond %5 ^bb2, ^bb5 loc(#loc153)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc154)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.int<8> : !u64i loc(#loc8)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc8)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc8)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc8)
    cir.store %9, %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>> loc(#loc149)
    %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc10)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc18)
    cir.store %11, %1 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc150)
    %12 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc19)
    %13 = cir.load %12 : !cir.ptr<!cir.double>, !cir.double loc(#loc20)
    cir.call @printDoubleLine(%13) : (!cir.double) -> () loc(#loc21)
    cir.br ^bb4 loc(#loc17)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc12)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc12)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc6)
  } loc(#loc148)
  cir.func no_proto @CWE758_Undefined_Behavior__double_pointer_alloca_use_13_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc156)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc24)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc157)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc26)
    cir.return loc(#loc23)
  } loc(#loc155)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc158)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc159)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc160)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc34)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc35)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc36)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc37)
  cir.func @main(%arg0: !s32i loc(fused[#loc40, #loc41]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc42, #loc43])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc162)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc163)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc39)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc44)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc44)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc45)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc46)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc46)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc47)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc34)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    %8 = cir.get_global @CWE758_Undefined_Behavior__double_pointer_alloca_use_13_good : !cir.ptr<!cir.func<!void ()>> loc(#loc164)
    cir.call @CWE758_Undefined_Behavior__double_pointer_alloca_use_13_good() : () -> () loc(#loc49)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc35)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc35)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc36)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    %13 = cir.get_global @CWE758_Undefined_Behavior__double_pointer_alloca_use_13_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc165)
    cir.call @CWE758_Undefined_Behavior__double_pointer_alloca_use_13_bad() : () -> () loc(#loc53)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc37)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc56)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc166)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    cir.return %17 : !s32i loc(#loc166)
  } loc(#loc161)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc58)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc167)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc168)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc170)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc171)
    %2 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data", init] {alignment = 8 : i64} loc(#loc172)
    cir.br ^bb1 loc(#loc173)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc146)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc73)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc74)
    %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc174)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc175)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc58)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    cir.br ^bb12 loc(#loc76)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc176)
  ^bb4:  // pred: ^bb3
    %9 = cir.const #cir.int<8> : !u64i loc(#loc68)
    %10 = cir.alloca !u8i, !cir.ptr<!u8i>, %9 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc68)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc68)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc68)
    cir.store %12, %1 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>> loc(#loc171)
    %13 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc81)
    %14 = cir.const #cir.int<8> : !u64i loc(#loc177)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc81)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc178)
    cir.store %16, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc179)
    cir.br ^bb5 loc(#loc180)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc88)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc89)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc89)
    %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!cir.double>, !cir.bool loc(#loc181)
    cir.brcond %20 ^bb6, ^bb7 loc(#loc182)
  ^bb6:  // pred: ^bb5
    %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc91)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc92)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc93)
    cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr1) loc(#loc91)
    cir.br ^bb7 loc(#loc87)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc87)
  ^bb8:  // pred: ^bb7
    %24 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc94)
    %25 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc95)
    cir.store %24, %25 : !cir.double, !cir.ptr<!cir.double> loc(#loc183)
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc97)
    %27 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc98)
    cir.store %26, %27 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc184)
    cir.br ^bb9 loc(#loc185)
  ^bb9:  // pred: ^bb8
    %28 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc70)
    %29 = cir.load %28 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc102)
    cir.store %29, %2 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc172)
    %30 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc103)
    %31 = cir.load %30 : !cir.ptr<!cir.double>, !cir.double loc(#loc104)
    cir.call @printDoubleLine(%31) : (!cir.double) -> () loc(#loc105)
    cir.br ^bb10 loc(#loc101)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc80)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc72)
  ^bb12:  // 2 preds: ^bb2, ^bb11
    cir.br ^bb13 loc(#loc72)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc64)
  } loc(#loc169)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc187)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc188)
    %2 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data", init] {alignment = 8 : i64} loc(#loc189)
    cir.br ^bb1 loc(#loc190)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc146)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc116)
    %5 = cir.const #cir.int<5> : !s32i loc(#loc117)
    %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc191)
    cir.brcond %6 ^bb2, ^bb11 loc(#loc192)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc193)
  ^bb3:  // pred: ^bb2
    %7 = cir.const #cir.int<8> : !u64i loc(#loc111)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc111)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc111)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc111)
    cir.store %10, %1 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>> loc(#loc188)
    %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc121)
    %12 = cir.const #cir.int<8> : !u64i loc(#loc194)
    %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc121)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc195)
    cir.store %14, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc196)
    cir.br ^bb4 loc(#loc197)
  ^bb4:  // pred: ^bb3
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc128)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc129)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc129)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!cir.double>, !cir.bool loc(#loc198)
    cir.brcond %18 ^bb5, ^bb6 loc(#loc199)
  ^bb5:  // pred: ^bb4
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc131)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc133)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr1) loc(#loc131)
    cir.br ^bb6 loc(#loc127)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc127)
  ^bb7:  // pred: ^bb6
    %22 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc134)
    %23 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc135)
    cir.store %22, %23 : !cir.double, !cir.ptr<!cir.double> loc(#loc200)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc137)
    %25 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc138)
    cir.store %24, %25 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc201)
    cir.br ^bb8 loc(#loc202)
  ^bb8:  // pred: ^bb7
    %26 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc113)
    %27 = cir.load %26 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc142)
    cir.store %27, %2 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc189)
    %28 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc143)
    %29 = cir.load %28 : !cir.ptr<!cir.double>, !cir.double loc(#loc144)
    cir.call @printDoubleLine(%29) : (!cir.double) -> () loc(#loc145)
    cir.br ^bb9 loc(#loc141)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc120)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc115)
  ^bb11:  // 2 preds: ^bb1, ^bb10
    cir.br ^bb12 loc(#loc115)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc107)
  } loc(#loc186)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase.h":111:1)
#loc2 = loc("../../testcasesupport/std_testcase.h":111:18)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":38:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":38:41)
#loc5 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":20:1)
#loc6 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":30:1)
#loc7 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":25:13)
#loc8 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":25:46)
#loc9 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":26:13)
#loc10 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":26:30)
#loc11 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":22:5)
#loc12 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":29:5)
#loc13 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":22:8)
#loc14 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":22:27)
#loc15 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":23:5)
#loc16 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":24:9)
#loc17 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":28:9)
#loc18 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":26:29)
#loc19 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":27:30)
#loc20 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":27:29)
#loc21 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":27:13)
#loc22 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":83:1)
#loc23 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":87:1)
#loc24 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":85:5)
#loc25 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":85:11)
#loc26 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":86:5)
#loc27 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":86:11)
#loc28 = loc("/usr/include/stdlib.h":575:1)
#loc29 = loc("/usr/include/stdlib.h":575:41)
#loc30 = loc("/usr/include/time.h":76:1)
#loc31 = loc("/usr/include/time.h":76:38)
#loc32 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc33 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc34 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":103:15)
#loc35 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":105:15)
#loc36 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":108:15)
#loc37 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":110:15)
#loc38 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":98:1)
#loc39 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":113:1)
#loc44 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":99:1)
#loc45 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":101:27)
#loc46 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":101:22)
#loc47 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":101:5)
#loc48 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":103:5)
#loc49 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":104:5)
#loc50 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":104:66)
#loc51 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":105:5)
#loc52 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":108:5)
#loc53 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":109:5)
#loc54 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":109:65)
#loc55 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":110:5)
#loc56 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":112:12)
#loc57 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":112:5)
#loc58 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":42:19)
#loc59 = loc("/usr/include/stdlib.h":672:1)
#loc60 = loc("/usr/include/stdlib.h":672:45)
#loc61 = loc("/usr/include/stdlib.h":756:1)
#loc62 = loc("/usr/include/stdlib.h":756:70)
#loc63 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":37:1)
#loc64 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":60:1)
#loc65 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":47:13)
#loc66 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":47:22)
#loc67 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":48:13)
#loc68 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":48:46)
#loc69 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":55:17)
#loc70 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":55:34)
#loc71 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":39:5)
#loc72 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":59:5)
#loc73 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":39:8)
#loc74 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":39:27)
#loc75 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":40:5)
#loc76 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":43:5)
#loc77 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":45:5)
#loc78 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":42:9)
#loc79 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":46:9)
#loc80 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":58:9)
#loc81 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":50:30)
#loc82 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":50:37)
#loc83 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":50:50)
#loc84 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":50:51)
#loc85 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":50:13)
#loc86 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":51:13)
#loc87 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":51:41)
#loc88 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":51:17)
#loc89 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":51:25)
#loc90 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":51:31)
#loc91 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":51:32)
#loc92 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":51:38)
#loc93 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":51:37)
#loc94 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":52:21)
#loc95 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":52:14)
#loc96 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":52:13)
#loc97 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":53:24)
#loc98 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":53:14)
#loc99 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":53:13)
#loc100 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":54:13)
#loc101 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":57:13)
#loc102 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":55:33)
#loc103 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":56:34)
#loc104 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":56:33)
#loc105 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":56:17)
#loc106 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":63:1)
#loc107 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":81:1)
#loc108 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":68:13)
#loc109 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":68:22)
#loc110 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":69:13)
#loc111 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":69:46)
#loc112 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":76:17)
#loc113 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":76:34)
#loc114 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":65:5)
#loc115 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":80:5)
#loc116 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":65:8)
#loc117 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":65:27)
#loc118 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":66:5)
#loc119 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":67:9)
#loc120 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":79:9)
#loc121 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":71:30)
#loc122 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":71:37)
#loc123 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":71:50)
#loc124 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":71:51)
#loc125 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":71:13)
#loc126 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":72:13)
#loc127 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":72:41)
#loc128 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":72:17)
#loc129 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":72:25)
#loc130 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":72:31)
#loc131 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":72:32)
#loc132 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":72:38)
#loc133 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":72:37)
#loc134 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":73:21)
#loc135 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":73:14)
#loc136 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":73:13)
#loc137 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":74:24)
#loc138 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":74:14)
#loc139 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":74:13)
#loc140 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":75:13)
#loc141 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":78:13)
#loc142 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":76:33)
#loc143 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":77:34)
#loc144 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":77:33)
#loc145 = loc("CWE758_Undefined_Behavior__double_pointer_alloca_use_13.c":77:17)
#loc146 = loc(fused[#loc1, #loc2])
#loc147 = loc(fused[#loc3, #loc4])
#loc148 = loc(fused[#loc5, #loc6])
#loc149 = loc(fused[#loc7, #loc8])
#loc150 = loc(fused[#loc9, #loc10])
#loc151 = loc(fused[#loc11, #loc12])
#loc152 = loc(fused[#loc13, #loc14])
#loc153 = loc(fused[#loc15, #loc12])
#loc154 = loc(fused[#loc16, #loc17])
#loc155 = loc(fused[#loc22, #loc23])
#loc156 = loc(fused[#loc24, #loc25])
#loc157 = loc(fused[#loc26, #loc27])
#loc158 = loc(fused[#loc28, #loc29])
#loc159 = loc(fused[#loc30, #loc31])
#loc160 = loc(fused[#loc32, #loc33])
#loc161 = loc(fused[#loc38, #loc39])
#loc164 = loc(fused[#loc49, #loc50])
#loc165 = loc(fused[#loc53, #loc54])
#loc166 = loc(fused[#loc57, #loc56])
#loc167 = loc(fused[#loc59, #loc60])
#loc168 = loc(fused[#loc61, #loc62])
#loc169 = loc(fused[#loc63, #loc64])
#loc170 = loc(fused[#loc65, #loc66])
#loc171 = loc(fused[#loc67, #loc68])
#loc172 = loc(fused[#loc69, #loc70])
#loc173 = loc(fused[#loc71, #loc72])
#loc174 = loc(fused[#loc73, #loc74])
#loc175 = loc(fused[#loc75, #loc76, #loc77, #loc72])
#loc176 = loc(fused[#loc79, #loc80])
#loc177 = loc(fused[#loc82, #loc83])
#loc178 = loc(fused[#loc81, #loc84])
#loc179 = loc(fused[#loc85, #loc84])
#loc180 = loc(fused[#loc86, #loc87])
#loc181 = loc(fused[#loc88, #loc89])
#loc182 = loc(fused[#loc90, #loc87])
#loc183 = loc(fused[#loc96, #loc94])
#loc184 = loc(fused[#loc99, #loc97])
#loc185 = loc(fused[#loc100, #loc101])
#loc186 = loc(fused[#loc106, #loc107])
#loc187 = loc(fused[#loc108, #loc109])
#loc188 = loc(fused[#loc110, #loc111])
#loc189 = loc(fused[#loc112, #loc113])
#loc190 = loc(fused[#loc114, #loc115])
#loc191 = loc(fused[#loc116, #loc117])
#loc192 = loc(fused[#loc118, #loc115])
#loc193 = loc(fused[#loc119, #loc120])
#loc194 = loc(fused[#loc122, #loc123])
#loc195 = loc(fused[#loc121, #loc124])
#loc196 = loc(fused[#loc125, #loc124])
#loc197 = loc(fused[#loc126, #loc127])
#loc198 = loc(fused[#loc128, #loc129])
#loc199 = loc(fused[#loc130, #loc127])
#loc200 = loc(fused[#loc136, #loc134])
#loc201 = loc(fused[#loc139, #loc137])
#loc202 = loc(fused[#loc140, #loc141])
