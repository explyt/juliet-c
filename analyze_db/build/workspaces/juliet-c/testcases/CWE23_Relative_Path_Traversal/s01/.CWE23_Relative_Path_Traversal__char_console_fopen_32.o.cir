!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const._ZN52CWE23_Relative_Path_Traversal__char_console_fopen_32L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc154)
  cir.global "private" constant cir_private @__const._ZN52CWE23_Relative_Path_Traversal__char_console_fopen_323badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc155)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc156)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc157)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc158)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc159)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc13)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc160)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"wb+\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc16)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc161)
  cir.func @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_323badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc163)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc164)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc165)
    %3 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc155)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc164)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc165)
    %4 = cir.get_global @__const._ZN52CWE23_Relative_Path_Traversal__char_console_fopen_323badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc155)
    cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc155)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc27)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc166)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc168)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc32)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc168)
      cir.scope {
        %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc170)
        %12 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc38)
        %13 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
        %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc38)
        cir.store %14, %11 : !u64i, !cir.ptr<!u64i> loc(#loc170)
        cir.scope {
          %15 = cir.const #cir.int<4096> : !s32i loc(#loc42)
          %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc42)
          %17 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc43)
          %18 = cir.binop(sub, %16, %17) : !u64i loc(#loc172)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc44)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc44)
          %21 = cir.cmp(gt, %18, %20) : !u64i, !cir.bool loc(#loc173)
          cir.if %21 {
            cir.scope {
              %22 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
              %23 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc49)
              %24 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %23 : !u64i), !cir.ptr<!s8i> loc(#loc50)
              %25 = cir.const #cir.int<4096> : !s32i loc(#loc51)
              %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc51)
              %27 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc52)
              %28 = cir.binop(sub, %26, %27) : !u64i loc(#loc176)
              %29 = cir.cast(integral, %28 : !u64i), !s32i loc(#loc176)
              %30 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc158)
              %31 = cir.load %30 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc53)
              %32 = cir.call @fgets(%24, %29, %31) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc54)
              %33 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc55)
              %34 = cir.cmp(ne, %32, %33) : !cir.ptr<!s8i>, !cir.bool loc(#loc177)
              cir.if %34 {
                %35 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc59)
                %36 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
                %37 = cir.call @strlen(%36) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc59)
                cir.store %37, %11 : !u64i, !cir.ptr<!u64i> loc(#loc179)
                cir.scope {
                  %38 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc65)
                  %39 = cir.const #cir.int<0> : !s32i loc(#loc66)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc66)
                  %41 = cir.cmp(gt, %38, %40) : !u64i, !cir.bool loc(#loc181)
                  %42 = cir.ternary(%41, true {
                    %43 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
                    %44 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc69)
                    %45 = cir.const #cir.int<1> : !s32i loc(#loc70)
                    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc70)
                    %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc182)
                    %48 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %47 : !u64i), !cir.ptr<!s8i> loc(#loc71)
                    %49 = cir.load %48 : !cir.ptr<!s8i>, !s8i loc(#loc68)
                    %50 = cir.cast(integral, %49 : !s8i), !s32i loc(#loc68)
                    %51 = cir.const #cir.int<10> : !s8i loc(#loc72)
                    %52 = cir.cast(integral, %51 : !s8i), !s32i loc(#loc72)
                    %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc183)
                    %54 = cir.ternary(%53, true {
                      %55 = cir.const #true loc(#loc67)
                      cir.yield %55 : !cir.bool loc(#loc67)
                    }, false {
                      %55 = cir.const #false loc(#loc67)
                      cir.yield %55 : !cir.bool loc(#loc67)
                    }) : (!cir.bool) -> !cir.bool loc(#loc67)
                    cir.yield %54 : !cir.bool loc(#loc67)
                  }, false {
                    %43 = cir.const #false loc(#loc67)
                    cir.yield %43 : !cir.bool loc(#loc67)
                  }) : (!cir.bool) -> !cir.bool loc(#loc67)
                  cir.if %42 {
                    %43 = cir.const #cir.int<0> : !s8i loc(#loc74)
                    %44 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
                    %45 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc76)
                    %46 = cir.const #cir.int<1> : !s32i loc(#loc77)
                    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc77)
                    %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc185)
                    %49 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %48 : !u64i), !cir.ptr<!s8i> loc(#loc78)
                    cir.store %43, %49 : !s8i, !cir.ptr<!s8i> loc(#loc186)
                  } loc(#loc184)
                } loc(#loc180)
              } else {
                %35 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc13)
                %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc13)
                cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc79)
                %37 = cir.const #cir.int<0> : !s8i loc(#loc80)
                %38 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
                %39 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc82)
                %40 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc83)
                cir.store %37, %40 : !s8i, !cir.ptr<!s8i> loc(#loc187)
              } loc(#loc178)
            } loc(#loc175)
          } loc(#loc174)
        } loc(#loc171)
      } loc(#loc169)
      %9 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc85)
      cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc188)
    } loc(#loc167)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc190)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc90)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc190)
      cir.scope {
        %9 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc192)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc95)
        cir.store %10, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc192)
        %11 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc96)
        %12 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
        %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc16)
        %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc16)
        %15 = cir.call @fopen(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc96)
        cir.store %15, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc193)
        cir.scope {
          %16 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc102)
          %17 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc103)
          %18 = cir.cmp(ne, %16, %17) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc195)
          cir.if %18 {
            %19 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc105)
            %20 = cir.call @fclose(%19) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc106)
          } loc(#loc196)
        } loc(#loc194)
      } loc(#loc191)
    } loc(#loc189)
    cir.return loc(#loc20)
  } loc(#loc162)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc197)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc109)
  cir.func internal private @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_32L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc199)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc200)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc201)
    %3 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc154)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc200)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc201)
    %4 = cir.get_global @__const._ZN52CWE23_Relative_Path_Traversal__char_console_fopen_32L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc154)
    cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc154)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc118)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc202)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc204)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc123)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc204)
      %9 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc125)
      %10 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
      %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc109)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc109)
      %13 = cir.call @strcat(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc125)
      %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
      %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc128)
      cir.store %14, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc205)
    } loc(#loc203)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc207)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc133)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc207)
      cir.scope {
        %9 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc209)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc138)
        cir.store %10, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc209)
        %11 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc139)
        %12 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
        %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc141)
        %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc141)
        %15 = cir.call @fopen(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc139)
        cir.store %15, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc210)
        cir.scope {
          %16 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc146)
          %17 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc147)
          %18 = cir.cmp(ne, %16, %17) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc212)
          cir.if %18 {
            %19 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc149)
            %20 = cir.call @fclose(%19) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc150)
          } loc(#loc213)
        } loc(#loc211)
      } loc(#loc208)
    } loc(#loc206)
    cir.return loc(#loc111)
  } loc(#loc198)
  cir.func @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_324goodEv() extra(#fn_attr1) {
    cir.call @_ZN52CWE23_Relative_Path_Traversal__char_console_fopen_32L7goodG2BEv() : () -> () loc(#loc153)
    cir.return loc(#loc152)
  } loc(#loc214)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":97:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":97:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":42:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":42:37)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("/usr/include/stdio.h":149:1)
#loc10 = loc("/usr/include/stdio.h":149:14)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":65:31)
#loc14 = loc("/usr/include/stdio.h":264:1)
#loc15 = loc("/usr/include/stdio.h":266:3)
#loc16 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":78:33)
#loc17 = loc("/usr/include/stdio.h":184:1)
#loc18 = loc("/usr/include/stdio.h":184:36)
#loc19 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":37:1)
#loc20 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":85:1)
#loc21 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":39:5)
#loc22 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":39:12)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":40:5)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":40:25)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":41:5)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":41:25)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":43:12)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":43:5)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":44:5)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":72:5)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":45:9)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":45:24)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":45:23)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":46:9)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":70:9)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":48:13)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":48:41)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":48:30)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":48:37)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":50:13)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":69:13)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":50:17)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":50:30)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":50:40)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":51:13)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":53:17)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":68:17)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":53:27)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":53:32)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":53:31)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":53:47)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":53:60)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":53:70)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":53:21)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":53:80)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":54:17)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":62:17)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":64:17)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":57:31)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":57:38)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":57:21)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":57:42)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":58:21)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":61:21)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":58:25)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":58:35)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":58:37)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":58:40)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":58:45)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":58:53)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":58:54)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":58:59)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":59:21)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":60:43)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":60:25)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":60:30)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":60:38)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":60:39)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":65:21)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":67:37)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":67:21)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":67:26)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":67:33)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":71:21)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":71:10)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":71:9)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":73:5)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":84:5)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":74:9)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":74:24)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":74:23)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":75:9)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":83:9)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":76:13)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":76:27)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":78:21)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":78:27)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":78:13)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":78:38)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":79:13)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":82:13)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":79:17)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":79:26)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":80:13)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":81:24)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":81:17)
#loc107 = loc("/usr/include/string.h":149:1)
#loc108 = loc("/usr/include/string.h":150:14)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":102:22)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":92:1)
#loc111 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":117:1)
#loc112 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":94:5)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":94:12)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":95:5)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":95:25)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":96:5)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":96:25)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":98:12)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":98:5)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":99:5)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":104:5)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":100:9)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":100:24)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":100:23)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":102:9)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":102:16)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":103:21)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":103:10)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":103:9)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":105:5)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":116:5)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":106:9)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":106:24)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":106:23)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":107:9)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":115:9)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":108:13)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":108:27)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":110:21)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":110:27)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":110:33)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":110:13)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":110:38)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":111:13)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":114:13)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":111:17)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":111:26)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":112:13)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":113:24)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":113:17)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":119:1)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":122:1)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_console_fopen_32.cpp":121:5)
#loc154 = loc(fused[#loc1, #loc2])
#loc155 = loc(fused[#loc3, #loc4])
#loc156 = loc(fused[#loc5, #loc6])
#loc157 = loc(fused[#loc7, #loc8])
#loc158 = loc(fused[#loc9, #loc10])
#loc159 = loc(fused[#loc11, #loc12])
#loc160 = loc(fused[#loc14, #loc15])
#loc161 = loc(fused[#loc17, #loc18])
#loc162 = loc(fused[#loc19, #loc20])
#loc163 = loc(fused[#loc21, #loc22])
#loc164 = loc(fused[#loc23, #loc24])
#loc165 = loc(fused[#loc25, #loc26])
#loc166 = loc(fused[#loc28, #loc27])
#loc167 = loc(fused[#loc29, #loc30])
#loc168 = loc(fused[#loc31, #loc32])
#loc169 = loc(fused[#loc34, #loc35])
#loc170 = loc(fused[#loc36, #loc37])
#loc171 = loc(fused[#loc40, #loc41])
#loc172 = loc(fused[#loc42, #loc43])
#loc173 = loc(fused[#loc42, #loc44])
#loc174 = loc(fused[#loc45, #loc41])
#loc175 = loc(fused[#loc46, #loc47])
#loc176 = loc(fused[#loc51, #loc52])
#loc177 = loc(fused[#loc54, #loc55])
#loc178 = loc(fused[#loc56, #loc57, #loc58, #loc47])
#loc179 = loc(fused[#loc61, #loc62])
#loc180 = loc(fused[#loc63, #loc64])
#loc181 = loc(fused[#loc65, #loc66])
#loc182 = loc(fused[#loc69, #loc70])
#loc183 = loc(fused[#loc68, #loc72])
#loc184 = loc(fused[#loc73, #loc64])
#loc185 = loc(fused[#loc76, #loc77])
#loc186 = loc(fused[#loc75, #loc74])
#loc187 = loc(fused[#loc81, #loc80])
#loc188 = loc(fused[#loc86, #loc84])
#loc189 = loc(fused[#loc87, #loc88])
#loc190 = loc(fused[#loc89, #loc90])
#loc191 = loc(fused[#loc92, #loc93])
#loc192 = loc(fused[#loc94, #loc95])
#loc193 = loc(fused[#loc98, #loc99])
#loc194 = loc(fused[#loc100, #loc101])
#loc195 = loc(fused[#loc102, #loc103])
#loc196 = loc(fused[#loc104, #loc101])
#loc197 = loc(fused[#loc107, #loc108])
#loc198 = loc(fused[#loc110, #loc111])
#loc199 = loc(fused[#loc112, #loc113])
#loc200 = loc(fused[#loc114, #loc115])
#loc201 = loc(fused[#loc116, #loc117])
#loc202 = loc(fused[#loc119, #loc118])
#loc203 = loc(fused[#loc120, #loc121])
#loc204 = loc(fused[#loc122, #loc123])
#loc205 = loc(fused[#loc129, #loc127])
#loc206 = loc(fused[#loc130, #loc131])
#loc207 = loc(fused[#loc132, #loc133])
#loc208 = loc(fused[#loc135, #loc136])
#loc209 = loc(fused[#loc137, #loc138])
#loc210 = loc(fused[#loc142, #loc143])
#loc211 = loc(fused[#loc144, #loc145])
#loc212 = loc(fused[#loc146, #loc147])
#loc213 = loc(fused[#loc148, #loc145])
#loc214 = loc(fused[#loc151, #loc152])
