!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc57 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":129:10)
#loc58 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":129:14)
#loc59 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":129:20)
#loc60 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":129:32)
#loc174 = loc(fused[#loc57, #loc58])
#loc175 = loc(fused[#loc59, #loc60])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE242_Use_of_Inherently_Dangerous_Function/CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @gets(...) -> !s32i loc(#loc)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc155)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Error Condition: alter control flow to indicate action taken\00" : !cir.array<!s8i x 61>> : !cir.array<!s8i x 61> {alignment = 1 : i64} loc(#loc3)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc156)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc6)
  cir.func no_proto @CWE242_Use_of_Inherently_Dangerous_Function__basic_15_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc11)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc160)
            %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc161)
            %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc19)
            %4 = cir.get_global @gets : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc162)
            %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>)>> loc(#loc162)
            %6 = cir.call %5(%3) : (!cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> !s32i loc(#loc20)
            %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc20)
            %8 = cir.cast(int_to_ptr, %7 : !u64i), !cir.ptr<!s8i> loc(#loc20)
            cir.store %8, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc163)
            cir.scope {
              %17 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
              %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc26)
              %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc26)
              %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc165)
              cir.if %20 {
                %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc3)
                %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc3)
                cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc28)
                %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc29)
                %24 = cir.const #cir.int<1> : !s32i loc(#loc30)
                cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc29)
              } loc(#loc166)
            } loc(#loc164)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc31)
            %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc31)
            %11 = cir.const #cir.int<10> : !s32i loc(#loc32)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc33)
            %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc32)
            %14 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc34)
            %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc34)
            cir.store %10, %15 : !s8i, !cir.ptr<!s8i> loc(#loc167)
            %16 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc35)
            cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc36)
          } loc(#loc159)
          cir.break loc(#loc37)
        } loc(#loc12)
        cir.case(default, []) {
          %1 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc6)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc6)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc39)
          cir.break loc(#loc40)
        } loc(#loc38)
        cir.yield loc(#loc9)
      } loc(#loc9)
    } loc(#loc158)
    cir.return loc(#loc8)
  } loc(#loc157)
  cir.func no_proto @CWE242_Use_of_Inherently_Dangerous_Function__basic_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc169)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc170)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    cir.return loc(#loc42)
  } loc(#loc168)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc171)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc172)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc51)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc54)
  cir.func @main(%arg0: !s32i loc(fused[#loc57, #loc58]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc59, #loc60])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc174)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc175)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc56)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc61)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc61)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc62)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc63)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc63)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc64)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc51)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %8 = cir.get_global @CWE242_Use_of_Inherently_Dangerous_Function__basic_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc176)
    cir.call @CWE242_Use_of_Inherently_Dangerous_Function__basic_15_good() : () -> () loc(#loc66)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc52)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc53)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %13 = cir.get_global @CWE242_Use_of_Inherently_Dangerous_Function__basic_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc177)
    cir.call @CWE242_Use_of_Inherently_Dangerous_Function__basic_15_bad() : () -> () loc(#loc70)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc54)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc73)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc178)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc178)
    cir.return %17 : !s32i loc(#loc178)
  } loc(#loc173)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc179)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc180)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc83)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %1 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc85)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc85)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc86)
          cir.break loc(#loc87)
        } loc(#loc84)
        cir.case(default, []) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc184)
            %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc185)
            %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc95)
            %4 = cir.const #cir.int<10> : !s32i loc(#loc96)
            %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc180)
            %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc97)
            %7 = cir.call @fgets(%3, %4, %6) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc98)
            cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc186)
            cir.scope {
              %16 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
              %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc104)
              %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc104)
              %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc188)
              cir.if %19 {
                %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc106)
                %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc106)
                cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc107)
                %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc108)
                %23 = cir.const #cir.int<1> : !s32i loc(#loc109)
                cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc108)
              } loc(#loc189)
            } loc(#loc187)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc110)
            %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc110)
            %10 = cir.const #cir.int<10> : !s32i loc(#loc111)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc112)
            %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc111)
            %13 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc113)
            %14 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc113)
            cir.store %9, %14 : !s8i, !cir.ptr<!s8i> loc(#loc190)
            %15 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc114)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc115)
          } loc(#loc183)
          cir.break loc(#loc116)
        } loc(#loc88)
        cir.yield loc(#loc81)
      } loc(#loc81)
    } loc(#loc182)
    cir.return loc(#loc80)
  } loc(#loc181)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc121)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc194)
            %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc195)
            %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc129)
            %4 = cir.const #cir.int<10> : !s32i loc(#loc130)
            %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc180)
            %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc131)
            %7 = cir.call @fgets(%3, %4, %6) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc132)
            cir.store %7, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc196)
            cir.scope {
              %16 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
              %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc138)
              %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc138)
              %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc198)
              cir.if %19 {
                %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc140)
                %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc140)
                cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc141)
                %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc142)
                %23 = cir.const #cir.int<1> : !s32i loc(#loc143)
                cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc142)
              } loc(#loc199)
            } loc(#loc197)
            %8 = cir.const #cir.int<0> : !s32i loc(#loc144)
            %9 = cir.cast(integral, %8 : !s32i), !s8i loc(#loc144)
            %10 = cir.const #cir.int<10> : !s32i loc(#loc145)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc146)
            %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc145)
            %13 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc147)
            %14 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc147)
            cir.store %9, %14 : !s8i, !cir.ptr<!s8i> loc(#loc200)
            %15 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc148)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc149)
          } loc(#loc193)
          cir.break loc(#loc150)
        } loc(#loc122)
        cir.case(default, []) {
          %1 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc152)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc152)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc153)
          cir.break loc(#loc154)
        } loc(#loc151)
        cir.yield loc(#loc119)
      } loc(#loc119)
    } loc(#loc192)
    cir.return loc(#loc118)
  } loc(#loc191)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE242_Use_of_Inherently_Dangerous_Function/CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":38:23)
#loc4 = loc("/usr/include/stdlib.h":756:1)
#loc5 = loc("/usr/include/stdlib.h":756:70)
#loc6 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":47:19)
#loc7 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":22:1)
#loc8 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":50:1)
#loc9 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":24:5)
#loc10 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":49:5)
#loc11 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":24:12)
#loc12 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":26:5)
#loc13 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":27:5)
#loc14 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":43:5)
#loc15 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":28:9)
#loc16 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":28:28)
#loc17 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":29:9)
#loc18 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":29:15)
#loc19 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":33:23)
#loc20 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":33:18)
#loc21 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":33:27)
#loc22 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":33:9)
#loc23 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":35:9)
#loc24 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":40:9)
#loc25 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":35:13)
#loc26 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":35:23)
#loc27 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":36:9)
#loc28 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":38:13)
#loc29 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":39:13)
#loc30 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":39:18)
#loc31 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":41:29)
#loc32 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":41:14)
#loc33 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":41:24)
#loc34 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":41:9)
#loc35 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":42:19)
#loc36 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":42:9)
#loc37 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":44:5)
#loc38 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":45:5)
#loc39 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":47:9)
#loc40 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":48:9)
#loc41 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":114:1)
#loc42 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":118:1)
#loc43 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":116:5)
#loc44 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":116:11)
#loc45 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":117:5)
#loc46 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":117:11)
#loc47 = loc("/usr/include/stdlib.h":575:1)
#loc48 = loc("/usr/include/stdlib.h":575:41)
#loc49 = loc("/usr/include/time.h":76:1)
#loc50 = loc("/usr/include/time.h":76:38)
#loc51 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":134:15)
#loc52 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":136:15)
#loc53 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":139:15)
#loc54 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":141:15)
#loc55 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":129:1)
#loc56 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":144:1)
#loc61 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":130:1)
#loc62 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":132:27)
#loc63 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":132:22)
#loc64 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":132:5)
#loc65 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":134:5)
#loc66 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":135:5)
#loc67 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":135:64)
#loc68 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":136:5)
#loc69 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":139:5)
#loc70 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":140:5)
#loc71 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":140:63)
#loc72 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":141:5)
#loc73 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":143:12)
#loc74 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":143:5)
#loc75 = loc("/usr/include/stdio.h":654:1)
#loc76 = loc("/usr/include/stdio.h":655:59)
#loc77 = loc("/usr/include/stdio.h":149:1)
#loc78 = loc("/usr/include/stdio.h":149:14)
#loc79 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":57:1)
#loc80 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":83:1)
#loc81 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":59:5)
#loc82 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":82:5)
#loc83 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":59:12)
#loc84 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":61:5)
#loc85 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":63:19)
#loc86 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":63:9)
#loc87 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":64:9)
#loc88 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":65:5)
#loc89 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":66:5)
#loc90 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":80:5)
#loc91 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":67:9)
#loc92 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":67:28)
#loc93 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":68:9)
#loc94 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":68:15)
#loc95 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":70:24)
#loc96 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":70:30)
#loc97 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":70:41)
#loc98 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":70:18)
#loc99 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":70:9)
#loc100 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":70:46)
#loc101 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":72:9)
#loc102 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":77:9)
#loc103 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":72:13)
#loc104 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":72:23)
#loc105 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":73:9)
#loc106 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":75:23)
#loc107 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":75:13)
#loc108 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":76:13)
#loc109 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":76:18)
#loc110 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":78:29)
#loc111 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":78:14)
#loc112 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":78:24)
#loc113 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":78:9)
#loc114 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":79:19)
#loc115 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":79:9)
#loc116 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":81:5)
#loc117 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":86:1)
#loc118 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":112:1)
#loc119 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":88:5)
#loc120 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":111:5)
#loc121 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":88:12)
#loc122 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":90:5)
#loc123 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":91:5)
#loc124 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":105:5)
#loc125 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":92:9)
#loc126 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":92:28)
#loc127 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":93:9)
#loc128 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":93:15)
#loc129 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":95:24)
#loc130 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":95:30)
#loc131 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":95:41)
#loc132 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":95:18)
#loc133 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":95:9)
#loc134 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":95:46)
#loc135 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":97:9)
#loc136 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":102:9)
#loc137 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":97:13)
#loc138 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":97:23)
#loc139 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":98:9)
#loc140 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":100:23)
#loc141 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":100:13)
#loc142 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":101:13)
#loc143 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":101:18)
#loc144 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":103:29)
#loc145 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":103:14)
#loc146 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":103:24)
#loc147 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":103:9)
#loc148 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":104:19)
#loc149 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":104:9)
#loc150 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":106:5)
#loc151 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":107:5)
#loc152 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":109:19)
#loc153 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":109:9)
#loc154 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_15.c":110:9)
#loc155 = loc(fused[#loc1, #loc2])
#loc156 = loc(fused[#loc4, #loc5])
#loc157 = loc(fused[#loc7, #loc8])
#loc158 = loc(fused[#loc9, #loc10])
#loc159 = loc(fused[#loc13, #loc14])
#loc160 = loc(fused[#loc15, #loc16])
#loc161 = loc(fused[#loc17, #loc18])
#loc162 = loc(fused[#loc20, #loc21])
#loc163 = loc(fused[#loc22, #loc21])
#loc164 = loc(fused[#loc23, #loc24])
#loc165 = loc(fused[#loc25, #loc26])
#loc166 = loc(fused[#loc27, #loc24])
#loc167 = loc(fused[#loc34, #loc31])
#loc168 = loc(fused[#loc41, #loc42])
#loc169 = loc(fused[#loc43, #loc44])
#loc170 = loc(fused[#loc45, #loc46])
#loc171 = loc(fused[#loc47, #loc48])
#loc172 = loc(fused[#loc49, #loc50])
#loc173 = loc(fused[#loc55, #loc56])
#loc176 = loc(fused[#loc66, #loc67])
#loc177 = loc(fused[#loc70, #loc71])
#loc178 = loc(fused[#loc74, #loc73])
#loc179 = loc(fused[#loc75, #loc76])
#loc180 = loc(fused[#loc77, #loc78])
#loc181 = loc(fused[#loc79, #loc80])
#loc182 = loc(fused[#loc81, #loc82])
#loc183 = loc(fused[#loc89, #loc90])
#loc184 = loc(fused[#loc91, #loc92])
#loc185 = loc(fused[#loc93, #loc94])
#loc186 = loc(fused[#loc99, #loc100])
#loc187 = loc(fused[#loc101, #loc102])
#loc188 = loc(fused[#loc103, #loc104])
#loc189 = loc(fused[#loc105, #loc102])
#loc190 = loc(fused[#loc113, #loc110])
#loc191 = loc(fused[#loc117, #loc118])
#loc192 = loc(fused[#loc119, #loc120])
#loc193 = loc(fused[#loc123, #loc124])
#loc194 = loc(fused[#loc125, #loc126])
#loc195 = loc(fused[#loc127, #loc128])
#loc196 = loc(fused[#loc133, #loc134])
#loc197 = loc(fused[#loc135, #loc136])
#loc198 = loc(fused[#loc137, #loc138])
#loc199 = loc(fused[#loc139, #loc136])
#loc200 = loc(fused[#loc147, #loc144])
