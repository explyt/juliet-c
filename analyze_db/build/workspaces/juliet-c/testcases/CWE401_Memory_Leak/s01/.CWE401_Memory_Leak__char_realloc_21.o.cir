!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc14 = loc("CWE401_Memory_Leak__char_realloc_21.c":27:21)
#loc15 = loc("CWE401_Memory_Leak__char_realloc_21.c":27:28)
#loc65 = loc("CWE401_Memory_Leak__char_realloc_21.c":60:26)
#loc66 = loc("CWE401_Memory_Leak__char_realloc_21.c":60:33)
#loc111 = loc("CWE401_Memory_Leak__char_realloc_21.c":89:26)
#loc112 = loc("CWE401_Memory_Leak__char_realloc_21.c":89:33)
#loc154 = loc("CWE401_Memory_Leak__char_realloc_21.c":113:25)
#loc155 = loc("CWE401_Memory_Leak__char_realloc_21.c":113:32)
#loc184 = loc(fused[#loc14, #loc15])
#loc205 = loc(fused[#loc65, #loc66])
#loc221 = loc(fused[#loc111, #loc112])
#loc237 = loc(fused[#loc154, #loc155])
module @"/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc178)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc179)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc180)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"A String\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc181)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc182)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc14, #loc15])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc184)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc16)
    cir.br ^bb1 loc(#loc185)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc182)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc186)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc18)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc18)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc13)
  } loc(#loc183)
  cir.func no_proto @CWE401_Memory_Leak__char_realloc_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc188)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc25)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc189)
    %2 = cir.get_global @realloc : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void>>> loc(#loc27)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc28)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc29)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc29)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc190)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc191)
    %9 = cir.call @realloc(%4, %8) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc27)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc192)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc193)
    cir.br ^bb1 loc(#loc194)
  ^bb1:  // pred: ^bb0
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc37)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc37)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc195)
    cir.brcond %14 ^bb2, ^bb3 loc(#loc196)
  ^bb2:  // pred: ^bb1
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc39)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc41)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc39)
    cir.br ^bb3 loc(#loc35)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc35)
  ^bb4:  // pred: ^bb3
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc7)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc7)
    %21 = cir.call @strcpy(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc43)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc46)
    %24 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc182)
    cir.store %23, %24 : !s32i, !cir.ptr<!s32i> loc(#loc197)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    cir.call @badSink(%25) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    cir.return loc(#loc22)
  } loc(#loc187)
  cir.func no_proto @CWE401_Memory_Leak__char_realloc_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc199)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc52)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc200)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc54)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc201)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc56)
    cir.return loc(#loc51)
  } loc(#loc198)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc202)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc60)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc203)
  cir.func internal private @goodB2G1Sink(%arg0: !cir.ptr<!s8i> loc(fused[#loc65, #loc66])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc205)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc67)
    cir.br ^bb1 loc(#loc206)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc202)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc70)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc70)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc207)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc60)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    cir.br ^bb4 loc(#loc72)
  ^bb3:  // pred: ^bb1
    %6 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc75)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc76)
    cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc75)
    cir.br ^bb4 loc(#loc69)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc69)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc64)
  } loc(#loc204)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc209)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc81)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc210)
    %2 = cir.get_global @realloc : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void>>> loc(#loc83)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc84)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc85)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc85)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc211)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc212)
    %9 = cir.call @realloc(%4, %8) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc83)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc213)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc214)
    cir.br ^bb1 loc(#loc215)
  ^bb1:  // pred: ^bb0
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc93)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc93)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc216)
    cir.brcond %14 ^bb2, ^bb3 loc(#loc217)
  ^bb2:  // pred: ^bb1
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc95)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc97)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc95)
    cir.br ^bb3 loc(#loc91)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc91)
  ^bb4:  // pred: ^bb3
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc99)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc99)
    %21 = cir.call @strcpy(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc100)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc103)
    %24 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc202)
    cir.store %23, %24 : !s32i, !cir.ptr<!s32i> loc(#loc218)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
    cir.call @goodB2G1Sink(%25) : (!cir.ptr<!s8i>) -> () loc(#loc106)
    cir.return loc(#loc78)
  } loc(#loc208)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc219)
  cir.func internal private @goodB2G2Sink(%arg0: !cir.ptr<!s8i> loc(fused[#loc111, #loc112])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc221)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc113)
    cir.br ^bb1 loc(#loc222)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc219)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc116)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc116)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc223)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc118)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc119)
    cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc118)
    cir.br ^bb3 loc(#loc115)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc115)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc110)
  } loc(#loc220)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc225)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc124)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc226)
    %2 = cir.get_global @realloc : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void>>> loc(#loc126)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc127)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc128)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc128)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc227)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc228)
    %9 = cir.call @realloc(%4, %8) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc126)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc229)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc230)
    cir.br ^bb1 loc(#loc231)
  ^bb1:  // pred: ^bb0
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc136)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc136)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc232)
    cir.brcond %14 ^bb2, ^bb3 loc(#loc233)
  ^bb2:  // pred: ^bb1
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc138)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc139)
    %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc140)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc138)
    cir.br ^bb3 loc(#loc134)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc134)
  ^bb4:  // pred: ^bb3
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc142)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc142)
    %21 = cir.call @strcpy(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc143)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc145)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc146)
    %24 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc219)
    cir.store %23, %24 : !s32i, !cir.ptr<!s32i> loc(#loc234)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
    cir.call @goodB2G2Sink(%25) : (!cir.ptr<!s8i>) -> () loc(#loc149)
    cir.return loc(#loc121)
  } loc(#loc224)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc235)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc154, #loc155])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc237)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc156)
    cir.br ^bb1 loc(#loc238)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc235)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc159)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc239)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc158)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc158)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc153)
  } loc(#loc236)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc241)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc165)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc242)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc167)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc167)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc167)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc167)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc167)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc167)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc167)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc243)
    %9 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc169)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc171)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc171)
    %13 = cir.call @strcpy(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc169)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc173)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc174)
    %16 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc235)
    cir.store %15, %16 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
    cir.call @goodG2BSink(%17) : (!cir.ptr<!s8i>) -> () loc(#loc177)
    cir.return loc(#loc162)
  } loc(#loc240)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_realloc_21.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":683:1)
#loc2 = loc("/usr/include/stdlib.h":684:14)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE401_Memory_Leak__char_realloc_21.c":44:18)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE401_Memory_Leak__char_realloc_21.c":25:1)
#loc11 = loc("CWE401_Memory_Leak__char_realloc_21.c":25:24)
#loc12 = loc("CWE401_Memory_Leak__char_realloc_21.c":27:1)
#loc13 = loc("CWE401_Memory_Leak__char_realloc_21.c":34:1)
#loc16 = loc("CWE401_Memory_Leak__char_realloc_21.c":28:1)
#loc17 = loc("CWE401_Memory_Leak__char_realloc_21.c":29:5)
#loc18 = loc("CWE401_Memory_Leak__char_realloc_21.c":33:5)
#loc19 = loc("CWE401_Memory_Leak__char_realloc_21.c":29:8)
#loc20 = loc("CWE401_Memory_Leak__char_realloc_21.c":30:5)
#loc21 = loc("CWE401_Memory_Leak__char_realloc_21.c":36:1)
#loc22 = loc("CWE401_Memory_Leak__char_realloc_21.c":48:1)
#loc23 = loc("CWE401_Memory_Leak__char_realloc_21.c":38:5)
#loc24 = loc("CWE401_Memory_Leak__char_realloc_21.c":38:12)
#loc25 = loc("CWE401_Memory_Leak__char_realloc_21.c":39:12)
#loc26 = loc("CWE401_Memory_Leak__char_realloc_21.c":39:5)
#loc27 = loc("CWE401_Memory_Leak__char_realloc_21.c":41:20)
#loc28 = loc("CWE401_Memory_Leak__char_realloc_21.c":41:28)
#loc29 = loc("CWE401_Memory_Leak__char_realloc_21.c":41:34)
#loc30 = loc("CWE401_Memory_Leak__char_realloc_21.c":41:38)
#loc31 = loc("CWE401_Memory_Leak__char_realloc_21.c":41:49)
#loc32 = loc("CWE401_Memory_Leak__char_realloc_21.c":41:50)
#loc33 = loc("CWE401_Memory_Leak__char_realloc_21.c":41:5)
#loc34 = loc("CWE401_Memory_Leak__char_realloc_21.c":42:5)
#loc35 = loc("CWE401_Memory_Leak__char_realloc_21.c":42:33)
#loc36 = loc("CWE401_Memory_Leak__char_realloc_21.c":42:9)
#loc37 = loc("CWE401_Memory_Leak__char_realloc_21.c":42:17)
#loc38 = loc("CWE401_Memory_Leak__char_realloc_21.c":42:23)
#loc39 = loc("CWE401_Memory_Leak__char_realloc_21.c":42:24)
#loc40 = loc("CWE401_Memory_Leak__char_realloc_21.c":42:30)
#loc41 = loc("CWE401_Memory_Leak__char_realloc_21.c":42:29)
#loc42 = loc("CWE401_Memory_Leak__char_realloc_21.c":44:12)
#loc43 = loc("CWE401_Memory_Leak__char_realloc_21.c":44:5)
#loc44 = loc("CWE401_Memory_Leak__char_realloc_21.c":45:15)
#loc45 = loc("CWE401_Memory_Leak__char_realloc_21.c":45:5)
#loc46 = loc("CWE401_Memory_Leak__char_realloc_21.c":46:17)
#loc47 = loc("CWE401_Memory_Leak__char_realloc_21.c":46:5)
#loc48 = loc("CWE401_Memory_Leak__char_realloc_21.c":47:13)
#loc49 = loc("CWE401_Memory_Leak__char_realloc_21.c":47:5)
#loc50 = loc("CWE401_Memory_Leak__char_realloc_21.c":135:1)
#loc51 = loc("CWE401_Memory_Leak__char_realloc_21.c":140:1)
#loc52 = loc("CWE401_Memory_Leak__char_realloc_21.c":137:5)
#loc53 = loc("CWE401_Memory_Leak__char_realloc_21.c":137:14)
#loc54 = loc("CWE401_Memory_Leak__char_realloc_21.c":138:5)
#loc55 = loc("CWE401_Memory_Leak__char_realloc_21.c":138:14)
#loc56 = loc("CWE401_Memory_Leak__char_realloc_21.c":139:5)
#loc57 = loc("CWE401_Memory_Leak__char_realloc_21.c":139:13)
#loc58 = loc("CWE401_Memory_Leak__char_realloc_21.c":55:1)
#loc59 = loc("CWE401_Memory_Leak__char_realloc_21.c":55:29)
#loc60 = loc("CWE401_Memory_Leak__char_realloc_21.c":65:19)
#loc61 = loc("/usr/include/stdlib.h":687:1)
#loc62 = loc("/usr/include/stdlib.h":687:32)
#loc63 = loc("CWE401_Memory_Leak__char_realloc_21.c":60:1)
#loc64 = loc("CWE401_Memory_Leak__char_realloc_21.c":72:1)
#loc67 = loc("CWE401_Memory_Leak__char_realloc_21.c":61:1)
#loc68 = loc("CWE401_Memory_Leak__char_realloc_21.c":62:5)
#loc69 = loc("CWE401_Memory_Leak__char_realloc_21.c":71:5)
#loc70 = loc("CWE401_Memory_Leak__char_realloc_21.c":62:8)
#loc71 = loc("CWE401_Memory_Leak__char_realloc_21.c":63:5)
#loc72 = loc("CWE401_Memory_Leak__char_realloc_21.c":66:5)
#loc73 = loc("CWE401_Memory_Leak__char_realloc_21.c":68:5)
#loc74 = loc("CWE401_Memory_Leak__char_realloc_21.c":65:9)
#loc75 = loc("CWE401_Memory_Leak__char_realloc_21.c":70:9)
#loc76 = loc("CWE401_Memory_Leak__char_realloc_21.c":70:14)
#loc77 = loc("CWE401_Memory_Leak__char_realloc_21.c":74:1)
#loc78 = loc("CWE401_Memory_Leak__char_realloc_21.c":86:1)
#loc79 = loc("CWE401_Memory_Leak__char_realloc_21.c":76:5)
#loc80 = loc("CWE401_Memory_Leak__char_realloc_21.c":76:12)
#loc81 = loc("CWE401_Memory_Leak__char_realloc_21.c":77:12)
#loc82 = loc("CWE401_Memory_Leak__char_realloc_21.c":77:5)
#loc83 = loc("CWE401_Memory_Leak__char_realloc_21.c":79:20)
#loc84 = loc("CWE401_Memory_Leak__char_realloc_21.c":79:28)
#loc85 = loc("CWE401_Memory_Leak__char_realloc_21.c":79:34)
#loc86 = loc("CWE401_Memory_Leak__char_realloc_21.c":79:38)
#loc87 = loc("CWE401_Memory_Leak__char_realloc_21.c":79:49)
#loc88 = loc("CWE401_Memory_Leak__char_realloc_21.c":79:50)
#loc89 = loc("CWE401_Memory_Leak__char_realloc_21.c":79:5)
#loc90 = loc("CWE401_Memory_Leak__char_realloc_21.c":80:5)
#loc91 = loc("CWE401_Memory_Leak__char_realloc_21.c":80:33)
#loc92 = loc("CWE401_Memory_Leak__char_realloc_21.c":80:9)
#loc93 = loc("CWE401_Memory_Leak__char_realloc_21.c":80:17)
#loc94 = loc("CWE401_Memory_Leak__char_realloc_21.c":80:23)
#loc95 = loc("CWE401_Memory_Leak__char_realloc_21.c":80:24)
#loc96 = loc("CWE401_Memory_Leak__char_realloc_21.c":80:30)
#loc97 = loc("CWE401_Memory_Leak__char_realloc_21.c":80:29)
#loc98 = loc("CWE401_Memory_Leak__char_realloc_21.c":82:12)
#loc99 = loc("CWE401_Memory_Leak__char_realloc_21.c":82:18)
#loc100 = loc("CWE401_Memory_Leak__char_realloc_21.c":82:5)
#loc101 = loc("CWE401_Memory_Leak__char_realloc_21.c":83:15)
#loc102 = loc("CWE401_Memory_Leak__char_realloc_21.c":83:5)
#loc103 = loc("CWE401_Memory_Leak__char_realloc_21.c":84:22)
#loc104 = loc("CWE401_Memory_Leak__char_realloc_21.c":84:5)
#loc105 = loc("CWE401_Memory_Leak__char_realloc_21.c":85:18)
#loc106 = loc("CWE401_Memory_Leak__char_realloc_21.c":85:5)
#loc107 = loc("CWE401_Memory_Leak__char_realloc_21.c":56:1)
#loc108 = loc("CWE401_Memory_Leak__char_realloc_21.c":56:29)
#loc109 = loc("CWE401_Memory_Leak__char_realloc_21.c":89:1)
#loc110 = loc("CWE401_Memory_Leak__char_realloc_21.c":96:1)
#loc113 = loc("CWE401_Memory_Leak__char_realloc_21.c":90:1)
#loc114 = loc("CWE401_Memory_Leak__char_realloc_21.c":91:5)
#loc115 = loc("CWE401_Memory_Leak__char_realloc_21.c":95:5)
#loc116 = loc("CWE401_Memory_Leak__char_realloc_21.c":91:8)
#loc117 = loc("CWE401_Memory_Leak__char_realloc_21.c":92:5)
#loc118 = loc("CWE401_Memory_Leak__char_realloc_21.c":94:9)
#loc119 = loc("CWE401_Memory_Leak__char_realloc_21.c":94:14)
#loc120 = loc("CWE401_Memory_Leak__char_realloc_21.c":98:1)
#loc121 = loc("CWE401_Memory_Leak__char_realloc_21.c":110:1)
#loc122 = loc("CWE401_Memory_Leak__char_realloc_21.c":100:5)
#loc123 = loc("CWE401_Memory_Leak__char_realloc_21.c":100:12)
#loc124 = loc("CWE401_Memory_Leak__char_realloc_21.c":101:12)
#loc125 = loc("CWE401_Memory_Leak__char_realloc_21.c":101:5)
#loc126 = loc("CWE401_Memory_Leak__char_realloc_21.c":103:20)
#loc127 = loc("CWE401_Memory_Leak__char_realloc_21.c":103:28)
#loc128 = loc("CWE401_Memory_Leak__char_realloc_21.c":103:34)
#loc129 = loc("CWE401_Memory_Leak__char_realloc_21.c":103:38)
#loc130 = loc("CWE401_Memory_Leak__char_realloc_21.c":103:49)
#loc131 = loc("CWE401_Memory_Leak__char_realloc_21.c":103:50)
#loc132 = loc("CWE401_Memory_Leak__char_realloc_21.c":103:5)
#loc133 = loc("CWE401_Memory_Leak__char_realloc_21.c":104:5)
#loc134 = loc("CWE401_Memory_Leak__char_realloc_21.c":104:33)
#loc135 = loc("CWE401_Memory_Leak__char_realloc_21.c":104:9)
#loc136 = loc("CWE401_Memory_Leak__char_realloc_21.c":104:17)
#loc137 = loc("CWE401_Memory_Leak__char_realloc_21.c":104:23)
#loc138 = loc("CWE401_Memory_Leak__char_realloc_21.c":104:24)
#loc139 = loc("CWE401_Memory_Leak__char_realloc_21.c":104:30)
#loc140 = loc("CWE401_Memory_Leak__char_realloc_21.c":104:29)
#loc141 = loc("CWE401_Memory_Leak__char_realloc_21.c":106:12)
#loc142 = loc("CWE401_Memory_Leak__char_realloc_21.c":106:18)
#loc143 = loc("CWE401_Memory_Leak__char_realloc_21.c":106:5)
#loc144 = loc("CWE401_Memory_Leak__char_realloc_21.c":107:15)
#loc145 = loc("CWE401_Memory_Leak__char_realloc_21.c":107:5)
#loc146 = loc("CWE401_Memory_Leak__char_realloc_21.c":108:22)
#loc147 = loc("CWE401_Memory_Leak__char_realloc_21.c":108:5)
#loc148 = loc("CWE401_Memory_Leak__char_realloc_21.c":109:18)
#loc149 = loc("CWE401_Memory_Leak__char_realloc_21.c":109:5)
#loc150 = loc("CWE401_Memory_Leak__char_realloc_21.c":57:1)
#loc151 = loc("CWE401_Memory_Leak__char_realloc_21.c":57:28)
#loc152 = loc("CWE401_Memory_Leak__char_realloc_21.c":113:1)
#loc153 = loc("CWE401_Memory_Leak__char_realloc_21.c":120:1)
#loc156 = loc("CWE401_Memory_Leak__char_realloc_21.c":114:1)
#loc157 = loc("CWE401_Memory_Leak__char_realloc_21.c":115:5)
#loc158 = loc("CWE401_Memory_Leak__char_realloc_21.c":119:5)
#loc159 = loc("CWE401_Memory_Leak__char_realloc_21.c":115:8)
#loc160 = loc("CWE401_Memory_Leak__char_realloc_21.c":116:5)
#loc161 = loc("CWE401_Memory_Leak__char_realloc_21.c":122:1)
#loc162 = loc("CWE401_Memory_Leak__char_realloc_21.c":133:1)
#loc163 = loc("CWE401_Memory_Leak__char_realloc_21.c":124:5)
#loc164 = loc("CWE401_Memory_Leak__char_realloc_21.c":124:12)
#loc165 = loc("CWE401_Memory_Leak__char_realloc_21.c":125:12)
#loc166 = loc("CWE401_Memory_Leak__char_realloc_21.c":125:5)
#loc167 = loc("CWE401_Memory_Leak__char_realloc_21.c":127:20)
#loc168 = loc("CWE401_Memory_Leak__char_realloc_21.c":127:5)
#loc169 = loc("CWE401_Memory_Leak__char_realloc_21.c":129:5)
#loc170 = loc("CWE401_Memory_Leak__char_realloc_21.c":129:12)
#loc171 = loc("CWE401_Memory_Leak__char_realloc_21.c":129:18)
#loc172 = loc("CWE401_Memory_Leak__char_realloc_21.c":130:15)
#loc173 = loc("CWE401_Memory_Leak__char_realloc_21.c":130:5)
#loc174 = loc("CWE401_Memory_Leak__char_realloc_21.c":131:21)
#loc175 = loc("CWE401_Memory_Leak__char_realloc_21.c":131:5)
#loc176 = loc("CWE401_Memory_Leak__char_realloc_21.c":132:17)
#loc177 = loc("CWE401_Memory_Leak__char_realloc_21.c":132:5)
#loc178 = loc(fused[#loc1, #loc2])
#loc179 = loc(fused[#loc3, #loc4])
#loc180 = loc(fused[#loc5, #loc6])
#loc181 = loc(fused[#loc8, #loc9])
#loc182 = loc(fused[#loc10, #loc11])
#loc183 = loc(fused[#loc12, #loc13])
#loc185 = loc(fused[#loc17, #loc18])
#loc186 = loc(fused[#loc20, #loc18])
#loc187 = loc(fused[#loc21, #loc22])
#loc188 = loc(fused[#loc23, #loc24])
#loc189 = loc(fused[#loc26, #loc25])
#loc190 = loc(fused[#loc30, #loc31])
#loc191 = loc(fused[#loc29, #loc31])
#loc192 = loc(fused[#loc27, #loc32])
#loc193 = loc(fused[#loc33, #loc32])
#loc194 = loc(fused[#loc34, #loc35])
#loc195 = loc(fused[#loc36, #loc37])
#loc196 = loc(fused[#loc38, #loc35])
#loc197 = loc(fused[#loc47, #loc46])
#loc198 = loc(fused[#loc50, #loc51])
#loc199 = loc(fused[#loc52, #loc53])
#loc200 = loc(fused[#loc54, #loc55])
#loc201 = loc(fused[#loc56, #loc57])
#loc202 = loc(fused[#loc58, #loc59])
#loc203 = loc(fused[#loc61, #loc62])
#loc204 = loc(fused[#loc63, #loc64])
#loc206 = loc(fused[#loc68, #loc69])
#loc207 = loc(fused[#loc71, #loc72, #loc73, #loc69])
#loc208 = loc(fused[#loc77, #loc78])
#loc209 = loc(fused[#loc79, #loc80])
#loc210 = loc(fused[#loc82, #loc81])
#loc211 = loc(fused[#loc86, #loc87])
#loc212 = loc(fused[#loc85, #loc87])
#loc213 = loc(fused[#loc83, #loc88])
#loc214 = loc(fused[#loc89, #loc88])
#loc215 = loc(fused[#loc90, #loc91])
#loc216 = loc(fused[#loc92, #loc93])
#loc217 = loc(fused[#loc94, #loc91])
#loc218 = loc(fused[#loc104, #loc103])
#loc219 = loc(fused[#loc107, #loc108])
#loc220 = loc(fused[#loc109, #loc110])
#loc222 = loc(fused[#loc114, #loc115])
#loc223 = loc(fused[#loc117, #loc115])
#loc224 = loc(fused[#loc120, #loc121])
#loc225 = loc(fused[#loc122, #loc123])
#loc226 = loc(fused[#loc125, #loc124])
#loc227 = loc(fused[#loc129, #loc130])
#loc228 = loc(fused[#loc128, #loc130])
#loc229 = loc(fused[#loc126, #loc131])
#loc230 = loc(fused[#loc132, #loc131])
#loc231 = loc(fused[#loc133, #loc134])
#loc232 = loc(fused[#loc135, #loc136])
#loc233 = loc(fused[#loc137, #loc134])
#loc234 = loc(fused[#loc147, #loc146])
#loc235 = loc(fused[#loc150, #loc151])
#loc236 = loc(fused[#loc152, #loc153])
#loc238 = loc(fused[#loc157, #loc158])
#loc239 = loc(fused[#loc160, #loc158])
#loc240 = loc(fused[#loc161, #loc162])
#loc241 = loc(fused[#loc163, #loc164])
#loc242 = loc(fused[#loc166, #loc165])
#loc243 = loc(fused[#loc168, #loc167])
#loc244 = loc(fused[#loc175, #loc174])
