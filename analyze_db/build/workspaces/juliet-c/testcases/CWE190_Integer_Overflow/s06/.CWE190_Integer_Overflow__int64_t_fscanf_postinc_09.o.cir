!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant external @GLOBAL_CONST_TRUE : !s32i {alignment = 4 : i64} loc(#loc171)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc172)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc173)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc174)
  cir.func private @printLongLongLine(!s64i) loc(#loc175)
  cir.func no_proto @CWE190_Integer_Overflow__int64_t_fscanf_postinc_09_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc177)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc15)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc178)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc171)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc19)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc19)
      cir.if %4 {
        %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc21)
        %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc173)
        %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc22)
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc174)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc174)
        %10 = cir.call @__isoc99_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc21)
      } loc(#loc180)
    } loc(#loc179)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc171)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc25)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc25)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc184)
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc31)
          %7 = cir.unary(inc, %6) nsw : !s64i, !s64i loc(#loc32)
          cir.store %7, %0 : !s64i, !cir.ptr<!s64i> loc(#loc185)
          %8 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc30)
          cir.store %8, %5 : !s64i, !cir.ptr<!s64i> loc(#loc184)
          %9 = cir.load %5 : !cir.ptr<!s64i>, !s64i loc(#loc33)
          cir.call @printLongLongLine(%9) : (!s64i) -> () loc(#loc34)
        } loc(#loc183)
      } loc(#loc182)
    } loc(#loc181)
    cir.return loc(#loc12)
  } loc(#loc176)
  cir.func no_proto @CWE190_Integer_Overflow__int64_t_fscanf_postinc_09_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc187)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc37)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc188)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc39)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc189)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc41)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc190)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc43)
    cir.return loc(#loc36)
  } loc(#loc186)
  cir.global "private" constant external @GLOBAL_CONST_FALSE : !s32i {alignment = 4 : i64} loc(#loc191)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc192)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc50)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc194)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc55)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc195)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc171)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc59)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc59)
      cir.if %4 {
        %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc61)
        %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc173)
        %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc62)
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc198)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc198)
        %10 = cir.call @__isoc99_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc61)
      } loc(#loc197)
    } loc(#loc196)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FALSE : !cir.ptr<!s32i> loc(#loc191)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc67)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc67)
      cir.if %4 {
        %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc49)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc49)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc71)
      } else {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc74)
          %6 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc75)
          %7 = cir.cmp(lt, %5, %6) : !s64i, !cir.bool loc(#loc202)
          cir.if %7 {
            %8 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc204)
            %9 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc81)
            %10 = cir.unary(inc, %9) nsw : !s64i, !s64i loc(#loc82)
            cir.store %10, %0 : !s64i, !cir.ptr<!s64i> loc(#loc205)
            %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc80)
            cir.store %11, %8 : !s64i, !cir.ptr<!s64i> loc(#loc204)
            %12 = cir.load %8 : !cir.ptr<!s64i>, !s64i loc(#loc83)
            cir.call @printLongLongLine(%12) : (!s64i) -> () loc(#loc84)
          } else {
            %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc50)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc50)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc85)
          } loc(#loc203)
        } loc(#loc201)
      } loc(#loc200)
    } loc(#loc199)
    cir.return loc(#loc52)
  } loc(#loc193)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc207)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc90)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc208)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc171)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc94)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc94)
      cir.if %4 {
        %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc96)
        %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc173)
        %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc97)
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc211)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc211)
        %10 = cir.call @__isoc99_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc96)
      } loc(#loc210)
    } loc(#loc209)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc171)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc102)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc102)
      cir.if %4 {
        cir.scope {
          %5 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc106)
          %6 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc107)
          %7 = cir.cmp(lt, %5, %6) : !s64i, !cir.bool loc(#loc215)
          cir.if %7 {
            %8 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc217)
            %9 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc113)
            %10 = cir.unary(inc, %9) nsw : !s64i, !s64i loc(#loc114)
            cir.store %10, %0 : !s64i, !cir.ptr<!s64i> loc(#loc218)
            %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc112)
            cir.store %11, %8 : !s64i, !cir.ptr<!s64i> loc(#loc217)
            %12 = cir.load %8 : !cir.ptr<!s64i>, !s64i loc(#loc115)
            cir.call @printLongLongLine(%12) : (!s64i) -> () loc(#loc116)
          } else {
            %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc117)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc117)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc118)
          } loc(#loc216)
        } loc(#loc214)
      } loc(#loc213)
    } loc(#loc212)
    cir.return loc(#loc87)
  } loc(#loc206)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc220)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc123)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc221)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FALSE : !cir.ptr<!s32i> loc(#loc191)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc127)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc127)
      cir.if %4 {
        %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc131)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc131)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc132)
      } else {
        %5 = cir.const #cir.int<2> : !s32i loc(#loc133)
        %6 = cir.cast(integral, %5 : !s32i), !s64i loc(#loc133)
        cir.store %6, %0 : !s64i, !cir.ptr<!s64i> loc(#loc224)
      } loc(#loc223)
    } loc(#loc222)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc171)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc137)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc137)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc228)
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc143)
          %7 = cir.unary(inc, %6) nsw : !s64i, !s64i loc(#loc144)
          cir.store %7, %0 : !s64i, !cir.ptr<!s64i> loc(#loc229)
          %8 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc142)
          cir.store %8, %5 : !s64i, !cir.ptr<!s64i> loc(#loc228)
          %9 = cir.load %5 : !cir.ptr<!s64i>, !s64i loc(#loc145)
          cir.call @printLongLongLine(%9) : (!s64i) -> () loc(#loc146)
        } loc(#loc227)
      } loc(#loc226)
    } loc(#loc225)
    cir.return loc(#loc120)
  } loc(#loc219)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc231)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc151)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc232)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc171)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc155)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc155)
      cir.if %4 {
        %5 = cir.const #cir.int<2> : !s32i loc(#loc157)
        %6 = cir.cast(integral, %5 : !s32i), !s64i loc(#loc157)
        cir.store %6, %0 : !s64i, !cir.ptr<!s64i> loc(#loc235)
      } loc(#loc234)
    } loc(#loc233)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_TRUE : !cir.ptr<!s32i> loc(#loc171)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc161)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc161)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc239)
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc167)
          %7 = cir.unary(inc, %6) nsw : !s64i, !s64i loc(#loc168)
          cir.store %7, %0 : !s64i, !cir.ptr<!s64i> loc(#loc240)
          %8 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc166)
          cir.store %8, %5 : !s64i, !cir.ptr<!s64i> loc(#loc239)
          %9 = cir.load %5 : !cir.ptr<!s64i>, !s64i loc(#loc169)
          cir.call @printLongLongLine(%9) : (!s64i) -> () loc(#loc170)
        } loc(#loc238)
      } loc(#loc237)
    } loc(#loc236)
    cir.return loc(#loc148)
  } loc(#loc230)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":109:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":109:18)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":30:24)
#loc8 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":30:28)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc11 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":23:1)
#loc12 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":41:1)
#loc13 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":25:5)
#loc14 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":25:13)
#loc15 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":26:12)
#loc16 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":26:5)
#loc17 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":27:5)
#loc18 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":31:5)
#loc19 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":27:8)
#loc20 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":28:5)
#loc21 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":30:9)
#loc22 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":30:17)
#loc23 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":32:5)
#loc24 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":40:5)
#loc25 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":32:8)
#loc26 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":33:5)
#loc27 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":34:9)
#loc28 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":39:9)
#loc29 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":37:13)
#loc30 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":37:30)
#loc31 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":36:17)
#loc32 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":36:13)
#loc33 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":38:31)
#loc34 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":38:13)
#loc35 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":151:1)
#loc36 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":157:1)
#loc37 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":153:5)
#loc38 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":153:14)
#loc39 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":154:5)
#loc40 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":154:14)
#loc41 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":155:5)
#loc42 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":155:14)
#loc43 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":156:5)
#loc44 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":156:14)
#loc45 = loc("../../../testcasesupport/std_testcase.h":110:1)
#loc46 = loc("../../../testcasesupport/std_testcase.h":110:18)
#loc47 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc48 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc49 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":60:19)
#loc50 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":73:23)
#loc51 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":48:1)
#loc52 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":76:1)
#loc53 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":50:5)
#loc54 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":50:13)
#loc55 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":51:12)
#loc56 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":51:5)
#loc57 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":52:5)
#loc58 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":56:5)
#loc59 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":52:8)
#loc60 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":53:5)
#loc61 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":55:9)
#loc62 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":55:17)
#loc63 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":55:24)
#loc64 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":55:28)
#loc65 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":57:5)
#loc66 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":75:5)
#loc67 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":57:8)
#loc68 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":58:5)
#loc69 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":61:5)
#loc70 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":63:5)
#loc71 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":60:9)
#loc72 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":65:9)
#loc73 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":74:9)
#loc74 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":65:13)
#loc75 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":65:20)
#loc76 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":66:9)
#loc77 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":70:9)
#loc78 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":72:9)
#loc79 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":68:13)
#loc80 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":68:30)
#loc81 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":67:17)
#loc82 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":67:13)
#loc83 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":69:31)
#loc84 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":69:13)
#loc85 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":73:13)
#loc86 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":79:1)
#loc87 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":102:1)
#loc88 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":81:5)
#loc89 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":81:13)
#loc90 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":82:12)
#loc91 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":82:5)
#loc92 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":83:5)
#loc93 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":87:5)
#loc94 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":83:8)
#loc95 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":84:5)
#loc96 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":86:9)
#loc97 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":86:17)
#loc98 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":86:24)
#loc99 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":86:28)
#loc100 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":88:5)
#loc101 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":101:5)
#loc102 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":88:8)
#loc103 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":89:5)
#loc104 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":91:9)
#loc105 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":100:9)
#loc106 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":91:13)
#loc107 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":91:20)
#loc108 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":92:9)
#loc109 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":96:9)
#loc110 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":98:9)
#loc111 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":94:13)
#loc112 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":94:30)
#loc113 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":93:17)
#loc114 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":93:13)
#loc115 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":95:31)
#loc116 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":95:13)
#loc117 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":99:23)
#loc118 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":99:13)
#loc119 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":105:1)
#loc120 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":128:1)
#loc121 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":107:5)
#loc122 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":107:13)
#loc123 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":108:12)
#loc124 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":108:5)
#loc125 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":109:5)
#loc126 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":118:5)
#loc127 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":109:8)
#loc128 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":110:5)
#loc129 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":113:5)
#loc130 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":115:5)
#loc131 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":112:19)
#loc132 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":112:9)
#loc133 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":117:16)
#loc134 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":117:9)
#loc135 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":119:5)
#loc136 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":127:5)
#loc137 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":119:8)
#loc138 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":120:5)
#loc139 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":121:9)
#loc140 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":126:9)
#loc141 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":124:13)
#loc142 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":124:30)
#loc143 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":123:17)
#loc144 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":123:13)
#loc145 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":125:31)
#loc146 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":125:13)
#loc147 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":131:1)
#loc148 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":149:1)
#loc149 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":133:5)
#loc150 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":133:13)
#loc151 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":134:12)
#loc152 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":134:5)
#loc153 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":135:5)
#loc154 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":139:5)
#loc155 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":135:8)
#loc156 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":136:5)
#loc157 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":138:16)
#loc158 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":138:9)
#loc159 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":140:5)
#loc160 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":148:5)
#loc161 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":140:8)
#loc162 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":141:5)
#loc163 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":142:9)
#loc164 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":147:9)
#loc165 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":145:13)
#loc166 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":145:30)
#loc167 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":144:17)
#loc168 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":144:13)
#loc169 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":146:31)
#loc170 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_09.c":146:13)
#loc171 = loc(fused[#loc1, #loc2])
#loc172 = loc(fused[#loc3, #loc4])
#loc173 = loc(fused[#loc5, #loc6])
#loc174 = loc(fused[#loc7, #loc8])
#loc175 = loc(fused[#loc9, #loc10])
#loc176 = loc(fused[#loc11, #loc12])
#loc177 = loc(fused[#loc13, #loc14])
#loc178 = loc(fused[#loc16, #loc15])
#loc179 = loc(fused[#loc17, #loc18])
#loc180 = loc(fused[#loc20, #loc18])
#loc181 = loc(fused[#loc23, #loc24])
#loc182 = loc(fused[#loc26, #loc24])
#loc183 = loc(fused[#loc27, #loc28])
#loc184 = loc(fused[#loc29, #loc30])
#loc185 = loc(fused[#loc32, #loc31])
#loc186 = loc(fused[#loc35, #loc36])
#loc187 = loc(fused[#loc37, #loc38])
#loc188 = loc(fused[#loc39, #loc40])
#loc189 = loc(fused[#loc41, #loc42])
#loc190 = loc(fused[#loc43, #loc44])
#loc191 = loc(fused[#loc45, #loc46])
#loc192 = loc(fused[#loc47, #loc48])
#loc193 = loc(fused[#loc51, #loc52])
#loc194 = loc(fused[#loc53, #loc54])
#loc195 = loc(fused[#loc56, #loc55])
#loc196 = loc(fused[#loc57, #loc58])
#loc197 = loc(fused[#loc60, #loc58])
#loc198 = loc(fused[#loc63, #loc64])
#loc199 = loc(fused[#loc65, #loc66])
#loc200 = loc(fused[#loc68, #loc69, #loc70, #loc66])
#loc201 = loc(fused[#loc72, #loc73])
#loc202 = loc(fused[#loc74, #loc75])
#loc203 = loc(fused[#loc76, #loc77, #loc78, #loc73])
#loc204 = loc(fused[#loc79, #loc80])
#loc205 = loc(fused[#loc82, #loc81])
#loc206 = loc(fused[#loc86, #loc87])
#loc207 = loc(fused[#loc88, #loc89])
#loc208 = loc(fused[#loc91, #loc90])
#loc209 = loc(fused[#loc92, #loc93])
#loc210 = loc(fused[#loc95, #loc93])
#loc211 = loc(fused[#loc98, #loc99])
#loc212 = loc(fused[#loc100, #loc101])
#loc213 = loc(fused[#loc103, #loc101])
#loc214 = loc(fused[#loc104, #loc105])
#loc215 = loc(fused[#loc106, #loc107])
#loc216 = loc(fused[#loc108, #loc109, #loc110, #loc105])
#loc217 = loc(fused[#loc111, #loc112])
#loc218 = loc(fused[#loc114, #loc113])
#loc219 = loc(fused[#loc119, #loc120])
#loc220 = loc(fused[#loc121, #loc122])
#loc221 = loc(fused[#loc124, #loc123])
#loc222 = loc(fused[#loc125, #loc126])
#loc223 = loc(fused[#loc128, #loc129, #loc130, #loc126])
#loc224 = loc(fused[#loc134, #loc133])
#loc225 = loc(fused[#loc135, #loc136])
#loc226 = loc(fused[#loc138, #loc136])
#loc227 = loc(fused[#loc139, #loc140])
#loc228 = loc(fused[#loc141, #loc142])
#loc229 = loc(fused[#loc144, #loc143])
#loc230 = loc(fused[#loc147, #loc148])
#loc231 = loc(fused[#loc149, #loc150])
#loc232 = loc(fused[#loc152, #loc151])
#loc233 = loc(fused[#loc153, #loc154])
#loc234 = loc(fused[#loc156, #loc154])
#loc235 = loc(fused[#loc158, #loc157])
#loc236 = loc(fused[#loc159, #loc160])
#loc237 = loc(fused[#loc162, #loc160])
#loc238 = loc(fused[#loc163, #loc164])
#loc239 = loc(fused[#loc165, #loc166])
#loc240 = loc(fused[#loc168, #loc167])
