!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc173 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":138:10)
#loc174 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":138:14)
#loc175 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":138:20)
#loc176 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":138:32)
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc250 = loc(fused[#loc173, #loc174])
#loc251 = loc(fused[#loc175, #loc176])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE506_Embedded_Malicious_Code/CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc187)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"conf.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"r\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc4)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc188)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc189)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc190)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc191)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc192)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc193)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc194)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc195)
  cir.func private @send(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc196)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc197)
  cir.func private @close(!s32i) -> !s32i loc(#loc198)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc28)
  cir.func no_proto @CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc33)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc202)
            %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc203)
            %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc204)
            %4 = cir.alloca !cir.array<!s8i x 65536>, !cir.ptr<!cir.array<!s8i x 65536>>, ["contents"] {alignment = 16 : i64} loc(#loc205)
            %5 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc206)
            %6 = cir.const #cir.int<1> : !s32i loc(#loc40)
            %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc40)
            cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc203)
            %8 = cir.const #cir.int<1> : !s32i loc(#loc42)
            %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc42)
            cir.store %9, %3 : !s32i, !cir.ptr<!s32i> loc(#loc204)
            %10 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc47)
            %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc3)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc3)
            %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc4)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc4)
            %15 = cir.call @fopen(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc47)
            cir.store %15, %5 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc207)
            cir.scope {
              %16 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc52)
              %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc53)
              %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc53)
              %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc209)
              cir.if %19 {
                cir.scope {
                  %22 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 65536>>), !cir.ptr<!s8i> loc(#loc57)
                  %23 = cir.const #cir.int<65535> : !s32i loc(#loc58)
                  %24 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc59)
                  %25 = cir.call @fgets(%22, %23, %24) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc60)
                  %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc61)
                  %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc61)
                  %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc212)
                  cir.if %28 {
                    %29 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
                    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
                    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc63)
                    %31 = cir.const #cir.int<0> : !s32i loc(#loc64)
                    %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc64)
                    %33 = cir.const #cir.int<0> : !s32i loc(#loc65)
                    %34 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 65536>>), !cir.ptr<!s8i> loc(#loc66)
                    %35 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %33 : !s32i), !cir.ptr<!s8i> loc(#loc66)
                    cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc214)
                  } loc(#loc213)
                } loc(#loc211)
                %20 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc67)
                %21 = cir.call @fclose(%20) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc68)
              } loc(#loc210)
            } loc(#loc208)
            cir.scope {
              cir.do {
                %16 = cir.const #cir.int<2> : !s32i loc(#loc71)
                %17 = cir.const #cir.int<1> : !s32i loc(#loc72)
                %18 = cir.const #cir.int<6> : !s32i loc(#loc73)
                %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc74)
                cir.store %19, %2 : !s32i, !cir.ptr<!s32i> loc(#loc216)
                cir.scope {
                  %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc79)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc80)
                  %40 = cir.unary(minus, %39) : !s32i, !s32i loc(#loc80)
                  %41 = cir.cmp(eq, %38, %40) : !s32i, !cir.bool loc(#loc218)
                  cir.if %41 {
                    cir.break loc(#loc82)
                  } loc(#loc219)
                } loc(#loc217)
                %20 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc220)
                %21 = cir.const #cir.int<0> : !s32i loc(#loc85)
                %22 = cir.const #cir.int<16> : !u64i loc(#loc221)
                cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc222)
                %23 = cir.const #cir.int<2> : !s32i loc(#loc90)
                %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc90)
                %25 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc91)
                cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc223)
                %26 = cir.const #cir.int<0> : !s32i loc(#loc93)
                %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc93)
                %28 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc94)
                %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc95)
                cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc224)
                %30 = cir.const #cir.int<27015> : !s32i loc(#loc97)
                %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc97)
                %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc98)
                %33 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc99)
                cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc225)
                cir.scope {
                  %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc104)
                  %39 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc227)
                  %40 = cir.const #cir.int<16> : !u64i loc(#loc228)
                  %41 = cir.cast(integral, %40 : !u64i), !u32i loc(#loc228)
                  %42 = cir.call @bind(%38, %39, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc109)
                  %43 = cir.const #cir.int<1> : !s32i loc(#loc110)
                  %44 = cir.unary(minus, %43) : !s32i, !s32i loc(#loc110)
                  %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc229)
                  cir.if %45 {
                    cir.break loc(#loc112)
                  } loc(#loc230)
                } loc(#loc226)
                cir.scope {
                  %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc115)
                  %39 = cir.const #cir.int<5> : !s32i loc(#loc116)
                  %40 = cir.call @listen(%38, %39) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc117)
                  %41 = cir.const #cir.int<1> : !s32i loc(#loc118)
                  %42 = cir.unary(minus, %41) : !s32i, !s32i loc(#loc118)
                  %43 = cir.cmp(eq, %40, %42) : !s32i, !cir.bool loc(#loc232)
                  cir.if %43 {
                    cir.break loc(#loc120)
                  } loc(#loc233)
                } loc(#loc231)
                %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc121)
                %35 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc122)
                %36 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc123)
                %37 = cir.call @accept(%34, %35, %36) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc124)
                cir.store %37, %3 : !s32i, !cir.ptr<!s32i> loc(#loc234)
                cir.scope {
                  %38 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc129)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc130)
                  %40 = cir.unary(minus, %39) : !s32i, !s32i loc(#loc130)
                  %41 = cir.cmp(eq, %38, %40) : !s32i, !cir.bool loc(#loc236)
                  cir.if %41 {
                    cir.break loc(#loc132)
                  } loc(#loc237)
                } loc(#loc235)
                cir.scope {
                  %38 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc135)
                  %39 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 65536>>), !cir.ptr<!s8i> loc(#loc136)
                  %40 = cir.cast(bitcast, %39 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc136)
                  %41 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc137)
                  %42 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 65536>>), !cir.ptr<!s8i> loc(#loc138)
                  %43 = cir.call @strlen(%42) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc137)
                  %44 = cir.const #cir.int<0> : !s32i loc(#loc139)
                  %45 = cir.call @send(%38, %40, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc140)
                  %46 = cir.cast(integral, %45 : !s64i), !u64i loc(#loc140)
                  %47 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc141)
                  %48 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 65536>>), !cir.ptr<!s8i> loc(#loc142)
                  %49 = cir.call @strlen(%48) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc141)
                  %50 = cir.cmp(ne, %46, %49) : !u64i, !cir.bool loc(#loc239)
                  cir.if %50 {
                    cir.break loc(#loc145)
                  } loc(#loc240)
                } loc(#loc238)
                cir.yield loc(#loc70)
              } while {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc146)
                %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc146)
                cir.condition(%17) loc(#loc146)
              } loc(#loc215)
            } loc(#loc215)
            cir.scope {
              %16 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc149)
              %17 = cir.const #cir.int<1> : !s32i loc(#loc150)
              %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc150)
              %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc242)
              cir.if %19 {
                %20 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc152)
                %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc153)
              } loc(#loc243)
            } loc(#loc241)
            cir.scope {
              %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc156)
              %17 = cir.const #cir.int<1> : !s32i loc(#loc157)
              %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc157)
              %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc245)
              cir.if %19 {
                %20 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc159)
                %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc160)
              } loc(#loc246)
            } loc(#loc244)
          } loc(#loc201)
          cir.break loc(#loc161)
        } loc(#loc34)
        cir.case(default, []) {
          %1 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc28)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc28)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc163)
          cir.break loc(#loc164)
        } loc(#loc162)
        cir.yield loc(#loc31)
      } loc(#loc31)
    } loc(#loc200)
    cir.return loc(#loc30)
  } loc(#loc199)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc247)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc248)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc169)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc170)
  cir.func @main(%arg0: !s32i loc(fused[#loc173, #loc174]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc175, #loc176])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc250)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc251)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc172)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc177)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc178)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc179)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc179)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc180)
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc169)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc169)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc181)
    %8 = cir.get_global @CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc252)
    cir.call @CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15_bad() : () -> () loc(#loc182)
    %9 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc170)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc170)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc184)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc185)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc253)
    %12 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc253)
    cir.return %12 : !s32i loc(#loc253)
  } loc(#loc249)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE506_Embedded_Malicious_Code/CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":264:1)
#loc2 = loc("/usr/include/stdio.h":266:3)
#loc3 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":57:23)
#loc4 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":57:33)
#loc5 = loc("/usr/include/stdio.h":654:1)
#loc6 = loc("/usr/include/stdio.h":655:59)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":62:27)
#loc10 = loc("/usr/include/stdio.h":184:1)
#loc11 = loc("/usr/include/stdio.h":184:36)
#loc12 = loc("/usr/include/sys/socket.h":102:1)
#loc13 = loc("/usr/include/sys/socket.h":102:62)
#loc14 = loc("/usr/include/netinet/in.h":404:1)
#loc15 = loc("/usr/include/netinet/in.h":405:40)
#loc16 = loc("/usr/include/sys/socket.h":112:1)
#loc17 = loc("/usr/include/sys/socket.h":113:6)
#loc18 = loc("/usr/include/sys/socket.h":296:1)
#loc19 = loc("/usr/include/sys/socket.h":296:39)
#loc20 = loc("/usr/include/sys/socket.h":306:1)
#loc21 = loc("/usr/include/sys/socket.h":307:38)
#loc22 = loc("/usr/include/sys/socket.h":138:1)
#loc23 = loc("/usr/include/sys/socket.h":138:74)
#loc24 = loc("/usr/include/string.h":407:1)
#loc25 = loc("/usr/include/string.h":408:33)
#loc26 = loc("/usr/include/unistd.h":358:1)
#loc27 = loc("/usr/include/unistd.h":358:27)
#loc28 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":124:19)
#loc29 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":42:1)
#loc30 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":127:1)
#loc31 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":44:5)
#loc32 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":126:5)
#loc33 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":44:12)
#loc34 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":46:5)
#loc35 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":47:5)
#loc36 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":120:5)
#loc37 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":52:9)
#loc38 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":52:28)
#loc39 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":53:9)
#loc40 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":53:31)
#loc41 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":54:9)
#loc42 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":54:31)
#loc43 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":55:9)
#loc44 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":55:28)
#loc45 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":56:9)
#loc46 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":56:16)
#loc47 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":57:17)
#loc48 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":57:9)
#loc49 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":57:36)
#loc50 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":58:9)
#loc51 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":67:9)
#loc52 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":58:13)
#loc53 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":58:22)
#loc54 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":59:9)
#loc55 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":60:13)
#loc56 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":65:13)
#loc57 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":60:23)
#loc58 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":60:39)
#loc59 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":60:47)
#loc60 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":60:17)
#loc61 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":60:57)
#loc62 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":61:13)
#loc63 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":62:17)
#loc64 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":64:31)
#loc65 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":64:26)
#loc66 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":64:17)
#loc67 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":66:20)
#loc68 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":66:13)
#loc69 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":68:9)
#loc70 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":105:17)
#loc71 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":77:35)
#loc72 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":77:44)
#loc73 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":77:57)
#loc74 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":77:28)
#loc75 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":77:13)
#loc76 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":77:68)
#loc77 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":78:13)
#loc78 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":81:13)
#loc79 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":78:17)
#loc80 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":78:33)
#loc81 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":79:13)
#loc82 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":80:17)
#loc83 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":82:20)
#loc84 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":82:21)
#loc85 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":82:30)
#loc86 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":82:33)
#loc87 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":82:47)
#loc88 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":82:13)
#loc89 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":82:48)
#loc90 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":83:34)
#loc91 = loc("/usr/include/netinet/in.h":249:5)
#loc92 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":83:13)
#loc93 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":84:39)
#loc94 = loc("/usr/include/netinet/in.h":251:20)
#loc95 = loc("/usr/include/netinet/in.h":33:15)
#loc96 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":84:13)
#loc97 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":85:38)
#loc98 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":85:32)
#loc99 = loc("/usr/include/netinet/in.h":250:15)
#loc100 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":85:13)
#loc101 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":85:46)
#loc102 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":86:13)
#loc103 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":89:13)
#loc104 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":86:22)
#loc105 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":86:54)
#loc106 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":86:55)
#loc107 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":86:64)
#loc108 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":86:78)
#loc109 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":86:17)
#loc110 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":86:84)
#loc111 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":87:13)
#loc112 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":88:17)
#loc113 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":90:13)
#loc114 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":93:13)
#loc115 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":90:24)
#loc116 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":90:38)
#loc117 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":90:17)
#loc118 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":90:57)
#loc119 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":91:13)
#loc120 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":92:17)
#loc121 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":94:35)
#loc122 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":94:49)
#loc123 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":94:55)
#loc124 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":94:28)
#loc125 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":94:13)
#loc126 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":94:59)
#loc127 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":95:13)
#loc128 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":98:13)
#loc129 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":95:17)
#loc130 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":95:33)
#loc131 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":96:13)
#loc132 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":97:17)
#loc133 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":100:13)
#loc134 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":103:13)
#loc135 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":100:22)
#loc136 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":100:36)
#loc137 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":100:46)
#loc138 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":100:53)
#loc139 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":100:64)
#loc140 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":100:17)
#loc141 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":100:70)
#loc142 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":100:77)
#loc143 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":100:85)
#loc144 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":101:13)
#loc145 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":102:17)
#loc146 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":105:16)
#loc147 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":106:9)
#loc148 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":109:9)
#loc149 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":106:13)
#loc150 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":106:29)
#loc151 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":107:9)
#loc152 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":108:26)
#loc153 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":108:13)
#loc154 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":110:9)
#loc155 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":113:9)
#loc156 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":110:13)
#loc157 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":110:29)
#loc158 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":111:9)
#loc159 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":112:26)
#loc160 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":112:13)
#loc161 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":121:5)
#loc162 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":122:5)
#loc163 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":124:9)
#loc164 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":125:9)
#loc165 = loc("/usr/include/stdlib.h":575:1)
#loc166 = loc("/usr/include/stdlib.h":575:41)
#loc167 = loc("/usr/include/time.h":76:1)
#loc168 = loc("/usr/include/time.h":76:38)
#loc169 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":143:15)
#loc170 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":145:15)
#loc171 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":138:1)
#loc172 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":148:1)
#loc177 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":139:1)
#loc178 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":141:27)
#loc179 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":141:22)
#loc180 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":141:5)
#loc181 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":143:5)
#loc182 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":144:5)
#loc183 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":144:72)
#loc184 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":145:5)
#loc185 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":147:12)
#loc186 = loc("CWE506_Embedded_Malicious_Code__file_transfer_listen_socket_15.c":147:5)
#loc187 = loc(fused[#loc1, #loc2])
#loc188 = loc(fused[#loc5, #loc6])
#loc189 = loc(fused[#loc7, #loc8])
#loc190 = loc(fused[#loc10, #loc11])
#loc191 = loc(fused[#loc12, #loc13])
#loc192 = loc(fused[#loc14, #loc15])
#loc193 = loc(fused[#loc16, #loc17])
#loc194 = loc(fused[#loc18, #loc19])
#loc195 = loc(fused[#loc20, #loc21])
#loc196 = loc(fused[#loc22, #loc23])
#loc197 = loc(fused[#loc24, #loc25])
#loc198 = loc(fused[#loc26, #loc27])
#loc199 = loc(fused[#loc29, #loc30])
#loc200 = loc(fused[#loc31, #loc32])
#loc201 = loc(fused[#loc35, #loc36])
#loc202 = loc(fused[#loc37, #loc38])
#loc203 = loc(fused[#loc39, #loc40])
#loc204 = loc(fused[#loc41, #loc42])
#loc205 = loc(fused[#loc43, #loc44])
#loc206 = loc(fused[#loc45, #loc46])
#loc207 = loc(fused[#loc48, #loc49])
#loc208 = loc(fused[#loc50, #loc51])
#loc209 = loc(fused[#loc52, #loc53])
#loc210 = loc(fused[#loc54, #loc51])
#loc211 = loc(fused[#loc55, #loc56])
#loc212 = loc(fused[#loc60, #loc61])
#loc213 = loc(fused[#loc62, #loc56])
#loc214 = loc(fused[#loc66, #loc64])
#loc215 = loc(fused[#loc69, #loc70])
#loc216 = loc(fused[#loc75, #loc76])
#loc217 = loc(fused[#loc77, #loc78])
#loc218 = loc(fused[#loc79, #loc80])
#loc219 = loc(fused[#loc81, #loc78])
#loc220 = loc(fused[#loc83, #loc84])
#loc221 = loc(fused[#loc86, #loc87])
#loc222 = loc(fused[#loc88, #loc89])
#loc223 = loc(fused[#loc92, #loc90])
#loc224 = loc(fused[#loc96, #loc93])
#loc225 = loc(fused[#loc100, #loc101])
#loc226 = loc(fused[#loc102, #loc103])
#loc227 = loc(fused[#loc105, #loc106])
#loc228 = loc(fused[#loc107, #loc108])
#loc229 = loc(fused[#loc109, #loc110])
#loc230 = loc(fused[#loc111, #loc103])
#loc231 = loc(fused[#loc113, #loc114])
#loc232 = loc(fused[#loc117, #loc118])
#loc233 = loc(fused[#loc119, #loc114])
#loc234 = loc(fused[#loc125, #loc126])
#loc235 = loc(fused[#loc127, #loc128])
#loc236 = loc(fused[#loc129, #loc130])
#loc237 = loc(fused[#loc131, #loc128])
#loc238 = loc(fused[#loc133, #loc134])
#loc239 = loc(fused[#loc140, #loc143])
#loc240 = loc(fused[#loc144, #loc134])
#loc241 = loc(fused[#loc147, #loc148])
#loc242 = loc(fused[#loc149, #loc150])
#loc243 = loc(fused[#loc151, #loc148])
#loc244 = loc(fused[#loc154, #loc155])
#loc245 = loc(fused[#loc156, #loc157])
#loc246 = loc(fused[#loc158, #loc155])
#loc247 = loc(fused[#loc165, #loc166])
#loc248 = loc(fused[#loc167, #loc168])
#loc249 = loc(fused[#loc171, #loc172])
#loc252 = loc(fused[#loc182, #loc183])
#loc253 = loc(fused[#loc186, #loc185])
