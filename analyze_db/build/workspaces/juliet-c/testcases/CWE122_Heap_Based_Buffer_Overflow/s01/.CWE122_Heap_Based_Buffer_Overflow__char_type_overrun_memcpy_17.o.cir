!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__charVoid = !cir.record<struct "_charVoid" {!cir.array<!s8i x 16>, !cir.ptr<!void>, !cir.ptr<!void>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc131)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc132)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"0123456789abcdef0123456789abcde\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc133)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc134)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc136)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc16)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc138)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc18)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc19)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc139)
        cir.condition(%4) loc(#loc20)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.ptr<!ty__charVoid>, !cir.ptr<!cir.ptr<!ty__charVoid>>, ["structCharVoid", init] {alignment = 8 : i64} loc(#loc142)
            %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc26)
            %4 = cir.const #cir.int<32> : !u64i loc(#loc143)
            %5 = cir.call @malloc(%4) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc26)
            %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty__charVoid> loc(#loc144)
            cir.store %6, %2 : !cir.ptr<!ty__charVoid>, !cir.ptr<!cir.ptr<!ty__charVoid>> loc(#loc142)
            cir.scope {
              %46 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__charVoid>>, !cir.ptr<!ty__charVoid> loc(#loc31)
              %47 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc32)
              %48 = cir.cast(bitcast, %47 : !cir.ptr<!void>), !cir.ptr<!ty__charVoid> loc(#loc32)
              %49 = cir.cmp(eq, %46, %48) : !cir.ptr<!ty__charVoid>, !cir.bool loc(#loc146)
              cir.if %49 {
                %50 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc34)
                %51 = cir.const #cir.int<1> : !s32i loc(#loc35)
                %52 = cir.unary(minus, %51) nsw : !s32i, !s32i loc(#loc36)
                cir.call @exit(%52) : (!s32i) -> () extra(#fn_attr) loc(#loc34)
              } loc(#loc147)
            } loc(#loc145)
            %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc5)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc5)
            %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc5)
            %10 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__charVoid>>, !cir.ptr<!ty__charVoid> loc(#loc37)
            %11 = cir.get_member %10[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc38)
            cir.store %9, %11 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc148)
            %12 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__charVoid>>, !cir.ptr<!ty__charVoid> loc(#loc39)
            %13 = cir.get_member %12[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc38)
            %14 = cir.load %13 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc40)
            %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc149)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc41)
            %16 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__charVoid>>, !cir.ptr<!ty__charVoid> loc(#loc42)
            %17 = cir.get_member %16[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc43)
            %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc150)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc150)
            %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc45)
            %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc45)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc45)
            %23 = cir.const #cir.int<32> : !u64i loc(#loc151)
            cir.libc.memcpy %23 bytes from %22 to %19 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc152)
            %24 = cir.const #cir.int<0> : !s32i loc(#loc50)
            %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc50)
            %26 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__charVoid>>, !cir.ptr<!ty__charVoid> loc(#loc51)
            %27 = cir.get_member %26[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc43)
            %28 = cir.const #cir.int<16> : !u64i loc(#loc153)
            %29 = cir.const #cir.int<1> : !u64i loc(#loc154)
            %30 = cir.binop(div, %28, %29) : !u64i loc(#loc155)
            %31 = cir.const #cir.int<1> : !s32i loc(#loc56)
            %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc56)
            %33 = cir.binop(sub, %30, %32) : !u64i loc(#loc156)
            %34 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc51)
            %35 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %33 : !u64i), !cir.ptr<!s8i> loc(#loc58)
            cir.store %25, %35 : !s8i, !cir.ptr<!s8i> loc(#loc157)
            %36 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__charVoid>>, !cir.ptr<!ty__charVoid> loc(#loc59)
            %37 = cir.get_member %36[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc43)
            %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc158)
            cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc61)
            %39 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__charVoid>>, !cir.ptr<!ty__charVoid> loc(#loc62)
            %40 = cir.get_member %39[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc38)
            %41 = cir.load %40 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc63)
            %42 = cir.cast(bitcast, %41 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc159)
            cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc64)
            %43 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc65)
            %44 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__charVoid>>, !cir.ptr<!ty__charVoid> loc(#loc66)
            %45 = cir.cast(bitcast, %44 : !cir.ptr<!ty__charVoid>), !cir.ptr<!void> loc(#loc66)
            cir.call @free(%45) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc65)
          } loc(#loc141)
        } loc(#loc140)
        cir.yield loc(#loc15)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc67)
        %3 = cir.unary(inc, %2) nsw : !s32i, !s32i loc(#loc68)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc160)
        cir.yield loc(#loc137)
      } loc(#loc137)
    } loc(#loc137)
    cir.return loc(#loc11)
  } loc(#loc135)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc162)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc71)
    cir.return loc(#loc70)
  } loc(#loc161)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc164)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc79)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc166)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc81)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc82)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc167)
        cir.condition(%4) loc(#loc83)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.ptr<!ty__charVoid>, !cir.ptr<!cir.ptr<!ty__charVoid>>, ["structCharVoid", init] {alignment = 8 : i64} loc(#loc170)
            %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc89)
            %4 = cir.const #cir.int<32> : !u64i loc(#loc171)
            %5 = cir.call @malloc(%4) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc89)
            %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty__charVoid> loc(#loc172)
            cir.store %6, %2 : !cir.ptr<!ty__charVoid>, !cir.ptr<!cir.ptr<!ty__charVoid>> loc(#loc170)
            cir.scope {
              %46 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__charVoid>>, !cir.ptr<!ty__charVoid> loc(#loc94)
              %47 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc95)
              %48 = cir.cast(bitcast, %47 : !cir.ptr<!void>), !cir.ptr<!ty__charVoid> loc(#loc95)
              %49 = cir.cmp(eq, %46, %48) : !cir.ptr<!ty__charVoid>, !cir.bool loc(#loc174)
              cir.if %49 {
                %50 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc97)
                %51 = cir.const #cir.int<1> : !s32i loc(#loc98)
                %52 = cir.unary(minus, %51) nsw : !s32i, !s32i loc(#loc99)
                cir.call @exit(%52) : (!s32i) -> () extra(#fn_attr) loc(#loc97)
              } loc(#loc175)
            } loc(#loc173)
            %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc100)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc100)
            %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc100)
            %10 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__charVoid>>, !cir.ptr<!ty__charVoid> loc(#loc101)
            %11 = cir.get_member %10[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc38)
            cir.store %9, %11 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc176)
            %12 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__charVoid>>, !cir.ptr<!ty__charVoid> loc(#loc102)
            %13 = cir.get_member %12[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc38)
            %14 = cir.load %13 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc103)
            %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc177)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc104)
            %16 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__charVoid>>, !cir.ptr<!ty__charVoid> loc(#loc105)
            %17 = cir.get_member %16[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc43)
            %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc178)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc178)
            %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc107)
            %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc107)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc107)
            %23 = cir.const #cir.int<16> : !u64i loc(#loc179)
            cir.libc.memcpy %23 bytes from %22 to %19 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc180)
            %24 = cir.const #cir.int<0> : !s32i loc(#loc112)
            %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc112)
            %26 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__charVoid>>, !cir.ptr<!ty__charVoid> loc(#loc113)
            %27 = cir.get_member %26[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc43)
            %28 = cir.const #cir.int<16> : !u64i loc(#loc181)
            %29 = cir.const #cir.int<1> : !u64i loc(#loc182)
            %30 = cir.binop(div, %28, %29) : !u64i loc(#loc183)
            %31 = cir.const #cir.int<1> : !s32i loc(#loc118)
            %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc118)
            %33 = cir.binop(sub, %30, %32) : !u64i loc(#loc184)
            %34 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc113)
            %35 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %33 : !u64i), !cir.ptr<!s8i> loc(#loc120)
            cir.store %25, %35 : !s8i, !cir.ptr<!s8i> loc(#loc185)
            %36 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__charVoid>>, !cir.ptr<!ty__charVoid> loc(#loc121)
            %37 = cir.get_member %36[0] {name = "charFirst"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.array<!s8i x 16>> loc(#loc43)
            %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc186)
            cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc123)
            %39 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__charVoid>>, !cir.ptr<!ty__charVoid> loc(#loc124)
            %40 = cir.get_member %39[1] {name = "voidSecond"} : !cir.ptr<!ty__charVoid> -> !cir.ptr<!cir.ptr<!void>> loc(#loc38)
            %41 = cir.load %40 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc125)
            %42 = cir.cast(bitcast, %41 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc187)
            cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc126)
            %43 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc127)
            %44 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__charVoid>>, !cir.ptr<!ty__charVoid> loc(#loc128)
            %45 = cir.cast(bitcast, %44 : !cir.ptr<!ty__charVoid>), !cir.ptr<!void> loc(#loc128)
            cir.call @free(%45) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc127)
          } loc(#loc169)
        } loc(#loc168)
        cir.yield loc(#loc78)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc129)
        %3 = cir.unary(inc, %2) nsw : !s32i, !s32i loc(#loc130)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc188)
        cir.yield loc(#loc165)
      } loc(#loc165)
    } loc(#loc165)
    cir.return loc(#loc74)
  } loc(#loc163)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s01/CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":41:50)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("/usr/include/stdlib.h":687:1)
#loc9 = loc("/usr/include/stdlib.h":687:32)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":33:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":52:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":35:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":35:9)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":36:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":51:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":36:13)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":36:9)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":36:16)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":36:20)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":36:18)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":37:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":38:9)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":50:9)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":39:13)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":39:76)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":39:53)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":39:60)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":39:75)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":40:13)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":40:51)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":40:17)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":40:35)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":40:41)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":40:42)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":40:48)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":40:47)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":41:13)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":27:12)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":43:31)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":43:47)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":43:13)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":45:20)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":26:10)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":45:36)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":45:47)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":45:56)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":45:78)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":45:13)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":45:79)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":46:93)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":46:13)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":46:40)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":46:72)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":46:74)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":46:85)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":46:88)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":46:39)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":46:29)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":47:31)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":47:47)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":47:13)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":48:31)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":48:47)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":48:13)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":49:13)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":49:18)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":36:24)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":36:23)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":80:1)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":83:1)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":82:5)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":82:11)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":59:1)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":78:1)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":61:5)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":61:9)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":62:5)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":77:5)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":62:13)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":62:9)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":62:16)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":62:20)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":62:18)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":63:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":64:9)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":76:9)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":65:13)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":65:76)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":65:53)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":65:60)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":65:75)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":66:13)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":66:51)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":66:17)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":66:35)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":66:41)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":66:42)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":66:48)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":66:47)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":67:50)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":67:13)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":69:31)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":69:47)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":69:13)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":71:20)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":71:36)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":71:47)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":71:56)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":71:88)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":71:13)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":71:89)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":72:93)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":72:13)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":72:40)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":72:72)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":72:74)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":72:85)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":72:88)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":72:39)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":72:29)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":73:31)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":73:47)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":73:13)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":74:31)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":74:47)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":74:13)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":75:13)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":75:18)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":62:24)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__char_type_overrun_memcpy_17.c":62:23)
#loc131 = loc(fused[#loc1, #loc2])
#loc132 = loc(fused[#loc3, #loc4])
#loc133 = loc(fused[#loc6, #loc7])
#loc134 = loc(fused[#loc8, #loc9])
#loc135 = loc(fused[#loc10, #loc11])
#loc136 = loc(fused[#loc12, #loc13])
#loc137 = loc(fused[#loc14, #loc15])
#loc138 = loc(fused[#loc17, #loc16])
#loc139 = loc(fused[#loc18, #loc19])
#loc140 = loc(fused[#loc21, #loc15])
#loc141 = loc(fused[#loc22, #loc23])
#loc142 = loc(fused[#loc24, #loc25])
#loc143 = loc(fused[#loc27, #loc28])
#loc144 = loc(fused[#loc26, #loc25])
#loc145 = loc(fused[#loc29, #loc30])
#loc146 = loc(fused[#loc31, #loc32])
#loc147 = loc(fused[#loc33, #loc30])
#loc148 = loc(fused[#loc37, #loc5])
#loc149 = loc(fused[#loc39, #loc40])
#loc150 = loc(fused[#loc42, #loc44])
#loc151 = loc(fused[#loc46, #loc47])
#loc152 = loc(fused[#loc48, #loc49])
#loc153 = loc(fused[#loc52, #loc53])
#loc154 = loc(fused[#loc54, #loc55])
#loc155 = loc(fused[#loc52, #loc55])
#loc156 = loc(fused[#loc57, #loc56])
#loc157 = loc(fused[#loc51, #loc50])
#loc158 = loc(fused[#loc59, #loc60])
#loc159 = loc(fused[#loc62, #loc63])
#loc160 = loc(fused[#loc68, #loc67])
#loc161 = loc(fused[#loc69, #loc70])
#loc162 = loc(fused[#loc71, #loc72])
#loc163 = loc(fused[#loc73, #loc74])
#loc164 = loc(fused[#loc75, #loc76])
#loc165 = loc(fused[#loc77, #loc78])
#loc166 = loc(fused[#loc80, #loc79])
#loc167 = loc(fused[#loc81, #loc82])
#loc168 = loc(fused[#loc84, #loc78])
#loc169 = loc(fused[#loc85, #loc86])
#loc170 = loc(fused[#loc87, #loc88])
#loc171 = loc(fused[#loc90, #loc91])
#loc172 = loc(fused[#loc89, #loc88])
#loc173 = loc(fused[#loc92, #loc93])
#loc174 = loc(fused[#loc94, #loc95])
#loc175 = loc(fused[#loc96, #loc93])
#loc176 = loc(fused[#loc101, #loc100])
#loc177 = loc(fused[#loc102, #loc103])
#loc178 = loc(fused[#loc105, #loc106])
#loc179 = loc(fused[#loc108, #loc109])
#loc180 = loc(fused[#loc110, #loc111])
#loc181 = loc(fused[#loc114, #loc115])
#loc182 = loc(fused[#loc116, #loc117])
#loc183 = loc(fused[#loc114, #loc117])
#loc184 = loc(fused[#loc119, #loc118])
#loc185 = loc(fused[#loc113, #loc112])
#loc186 = loc(fused[#loc121, #loc122])
#loc187 = loc(fused[#loc124, #loc125])
#loc188 = loc(fused[#loc130, #loc129])
