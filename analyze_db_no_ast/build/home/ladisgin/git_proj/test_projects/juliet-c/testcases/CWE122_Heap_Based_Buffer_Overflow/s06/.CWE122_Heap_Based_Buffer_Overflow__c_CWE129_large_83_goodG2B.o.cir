!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":24:63)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":24:124)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":24:128)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":32:63)
!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B = !cir.struct<class "CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83::CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B" {!s32i} #cir.record.decl.ast>
#loc84 = loc(fused[#loc4, #loc5])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func  @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_8360CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2BC2Ei(%arg0: !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B> loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":24:63), %arg1: !s32i loc(fused[#loc4, #loc5])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc84)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B>> loc(#loc6)
    cir.store %arg1, %1 : !s32i, !cir.ptr<!s32i> loc(#loc6)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B>>, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B> loc(#loc3)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc7)
    %4 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B> -> !cir.ptr<!s32i> loc(#loc8)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc85)
    %5 = cir.const #cir.int<7> : !s32i loc(#loc10)
    %6 = cir.get_member %2[0] {name = "data"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B> -> !cir.ptr<!s32i> loc(#loc8)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc86)
    cir.return loc(#loc2)
  } loc(#loc83)
  cir.func  @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_8360CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2BC1Ei(!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B>, !s32i) alias(@_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_8360CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2BC2Ei) loc(#loc83)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc87)
  cir.func private  @exit(!s32i) extra(#fn_attr1) loc(#loc88)
  cir.func private  @printIntLine(!s32i) loc(#loc89)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc90)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc20)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc91)
  cir.func  @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_8360CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2BD2Ev(%arg0: !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B> loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":32:63)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B>>, ["this", init] {alignment = 8 : i64} loc(#loc25)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B>, !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B>> loc(#loc26)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B>>, !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B> loc(#loc25)
    cir.scope {
      %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc94)
      %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc95)
      %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc33)
      %5 = cir.const #cir.int<10> : !s32i loc(#loc34)
      %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc34)
      %7 = cir.const #cir.int<4> : !u64i loc(#loc96)
      %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc97)
      %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc33)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc98)
      cir.store %10, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc95)
      cir.scope {
        %14 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc39)
        %15 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc40)
        %16 = cir.cmp(eq, %14, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc100)
        cir.if %16 {
          %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc42)
          %18 = cir.const #cir.int<1> : !s32i loc(#loc43)
          %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc44)
          cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr1) loc(#loc42)
        } loc(#loc101)
      } loc(#loc99)
      cir.scope {
        %14 = cir.const #cir.int<0> : !s32i loc(#loc47)
        cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc103)
        cir.for : cond {
          %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc49)
          %16 = cir.const #cir.int<10> : !s32i loc(#loc50)
          %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc104)
          cir.condition(%17) loc(#loc104)
        } body {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc51)
          %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc52)
          %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc53)
          %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc54)
          cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc105)
          cir.yield loc(#loc46)
        } step {
          %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc55)
          %16 = cir.unary(inc, %15) : !s32i, !s32i loc(#loc56)
          cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc106)
          cir.yield loc(#loc102)
        } loc(#loc102)
      } loc(#loc102)
      cir.scope {
        %14 = cir.get_member %1[0] {name = "data"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B> -> !cir.ptr<!s32i> loc(#loc8)
        %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc59)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc60)
        %17 = cir.cmp(ge, %15, %16) : !s32i, !cir.bool loc(#loc108)
        cir.if %17 {
          %18 = cir.const #cir.int<1> : !s32i loc(#loc64)
          %19 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc65)
          %20 = cir.get_member %1[0] {name = "data"} : !cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B> -> !cir.ptr<!s32i> loc(#loc8)
          %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc66)
          %22 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc67)
          cir.store %18, %22 : !s32i, !cir.ptr<!s32i> loc(#loc110)
          cir.scope {
            %23 = cir.const #cir.int<0> : !s32i loc(#loc70)
            cir.store %23, %2 : !s32i, !cir.ptr<!s32i> loc(#loc112)
            cir.for : cond {
              %24 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc72)
              %25 = cir.const #cir.int<10> : !s32i loc(#loc73)
              %26 = cir.cmp(lt, %24, %25) : !s32i, !cir.bool loc(#loc113)
              cir.condition(%26) loc(#loc113)
            } body {
              %24 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc74)
              %25 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc75)
              %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !s32i), !cir.ptr<!s32i> loc(#loc76)
              %27 = cir.load %26 : !cir.ptr<!s32i>, !s32i loc(#loc74)
              cir.call @printIntLine(%27) : (!s32i) -> () loc(#loc77)
              cir.yield loc(#loc69)
            } step {
              %24 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc78)
              %25 = cir.unary(inc, %24) : !s32i, !s32i loc(#loc79)
              cir.store %25, %2 : !s32i, !cir.ptr<!s32i> loc(#loc114)
              cir.yield loc(#loc111)
            } loc(#loc111)
          } loc(#loc111)
        } else {
          %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc20)
          %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc20)
          cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc80)
        } loc(#loc109)
      } loc(#loc107)
      %11 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc81)
      %12 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc82)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc82)
      cir.call @free(%13) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc81)
    } loc(#loc93)
    cir.return loc(#loc24)
  } loc(#loc92)
  cir.func  @_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_8360CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2BD1Ev(!cir.ptr<!ty_CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_833A3ACWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B>) alias(@_ZN52CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_8360CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2BD2Ev) loc(#loc92)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":24:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":30:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":25:1)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":26:12)
#loc8 = loc("./CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83.h":46:9)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":26:5)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":29:12)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":29:5)
#loc12 = loc("/usr/include/stdlib.h":672:1)
#loc13 = loc("/usr/include/stdlib.h":672:45)
#loc14 = loc("/usr/include/stdlib.h":756:1)
#loc15 = loc("/usr/include/stdlib.h":756:70)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":56:23)
#loc21 = loc("/usr/include/stdlib.h":687:1)
#loc22 = loc("/usr/include/stdlib.h":687:32)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":32:1)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":60:1)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":33:1)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":34:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":59:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":35:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":35:13)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":36:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":36:54)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":36:31)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":36:38)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":36:43)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":36:53)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":37:9)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":37:39)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":37:13)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":37:23)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":37:29)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":37:30)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":37:36)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":37:35)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":39:9)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":42:9)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":39:18)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":39:14)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":39:21)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":39:25)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":41:25)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":41:13)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":41:20)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":41:21)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":39:30)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":39:29)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":45:9)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":57:9)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":45:13)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":45:21)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":46:9)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":53:9)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":55:9)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":47:28)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":47:13)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":47:20)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":47:24)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":49:13)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":52:13)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":49:21)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":49:17)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":49:24)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":49:28)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":51:30)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":51:37)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":51:38)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":51:17)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":49:33)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":49:32)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":56:13)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":58:9)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_large_83_goodG2B.cpp":58:14)
#loc83 = loc(fused[#loc1, #loc2])
#loc85 = loc(fused[#loc9, #loc7])
#loc86 = loc(fused[#loc11, #loc10])
#loc87 = loc(fused[#loc12, #loc13])
#loc88 = loc(fused[#loc14, #loc15])
#loc89 = loc(fused[#loc16, #loc17])
#loc90 = loc(fused[#loc18, #loc19])
#loc91 = loc(fused[#loc21, #loc22])
#loc92 = loc(fused[#loc23, #loc24])
#loc93 = loc(fused[#loc27, #loc28])
#loc94 = loc(fused[#loc29, #loc30])
#loc95 = loc(fused[#loc31, #loc32])
#loc96 = loc(fused[#loc35, #loc36])
#loc97 = loc(fused[#loc34, #loc36])
#loc98 = loc(fused[#loc33, #loc32])
#loc99 = loc(fused[#loc37, #loc38])
#loc100 = loc(fused[#loc39, #loc40])
#loc101 = loc(fused[#loc41, #loc38])
#loc102 = loc(fused[#loc45, #loc46])
#loc103 = loc(fused[#loc48, #loc47])
#loc104 = loc(fused[#loc49, #loc50])
#loc105 = loc(fused[#loc52, #loc51])
#loc106 = loc(fused[#loc56, #loc55])
#loc107 = loc(fused[#loc57, #loc58])
#loc108 = loc(fused[#loc59, #loc60])
#loc109 = loc(fused[#loc61, #loc62, #loc63, #loc58])
#loc110 = loc(fused[#loc65, #loc64])
#loc111 = loc(fused[#loc68, #loc69])
#loc112 = loc(fused[#loc71, #loc70])
#loc113 = loc(fused[#loc72, #loc73])
#loc114 = loc(fused[#loc79, #loc78])
