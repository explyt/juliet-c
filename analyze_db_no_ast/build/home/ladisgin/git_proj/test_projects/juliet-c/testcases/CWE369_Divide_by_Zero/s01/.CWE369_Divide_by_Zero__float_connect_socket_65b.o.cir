!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc5 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":46:62)
#loc6 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":46:68)
#loc18 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":60:66)
#loc19 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":60:72)
#loc34 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":70:66)
#loc35 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":70:72)
#loc55 = loc(fused[#loc5, #loc6])
#loc60 = loc(fused[#loc18, #loc19])
#loc66 = loc(fused[#loc34, #loc35])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_65b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printIntLine(!s32i) loc(#loc53)
  cir.func  @CWE369_Divide_by_Zero__float_connect_socket_65b_badSink(%arg0: !cir.float loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc55)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc7)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc57)
      %2 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc12)
      %3 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc13)
      %4 = cir.cast(floating, %3 : !cir.float), !cir.double loc(#loc13)
      %5 = cir.binop(div, %2, %4) : !cir.double loc(#loc58)
      %6 = cir.cast(float_to_int, %5 : !cir.double), !s32i loc(#loc58)
      cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc57)
      %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc14)
      cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc15)
    } loc(#loc56)
    cir.return loc(#loc4)
  } loc(#loc54)
  cir.func  @CWE369_Divide_by_Zero__float_connect_socket_65b_goodG2BSink(%arg0: !cir.float loc(fused[#loc18, #loc19])) extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc60)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc20)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc62)
      %2 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc25)
      %3 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc26)
      %4 = cir.cast(floating, %3 : !cir.float), !cir.double loc(#loc26)
      %5 = cir.binop(div, %2, %4) : !cir.double loc(#loc63)
      %6 = cir.cast(float_to_int, %5 : !cir.double), !s32i loc(#loc63)
      cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc62)
      %7 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc27)
      cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc28)
    } loc(#loc61)
    cir.return loc(#loc17)
  } loc(#loc59)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc64)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc31)
  cir.func  @CWE369_Divide_by_Zero__float_connect_socket_65b_goodB2GSink(%arg0: !cir.float loc(fused[#loc34, #loc35])) extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc66)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc36)
    cir.scope {
      %1 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc39)
      %2 = cir.cast(floating, %1 : !cir.float), !cir.double loc(#loc39)
      %3 = cir.fabs %2 : !cir.double loc(#loc39)
      %4 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc40)
      %5 = cir.cmp(gt, %3, %4) : !cir.double, !s32i loc(#loc68)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc42)
      cir.if %6 {
        %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc70)
        %8 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc48)
        %9 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc49)
        %10 = cir.cast(floating, %9 : !cir.float), !cir.double loc(#loc49)
        %11 = cir.binop(div, %8, %10) : !cir.double loc(#loc71)
        %12 = cir.cast(float_to_int, %11 : !cir.double), !s32i loc(#loc71)
        cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc70)
        %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc50)
        cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc51)
      } else {
        %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc31)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc31)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc52)
      } loc(#loc69)
    } loc(#loc67)
    cir.return loc(#loc33)
  } loc(#loc65)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_connect_socket_65b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":46:1)
#loc4 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":53:1)
#loc7 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":47:1)
#loc8 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":48:5)
#loc9 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":52:5)
#loc10 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":50:9)
#loc11 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":50:40)
#loc12 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":50:28)
#loc13 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":50:36)
#loc14 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":51:22)
#loc15 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":51:9)
#loc16 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":60:1)
#loc17 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":67:1)
#loc20 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":61:1)
#loc21 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":62:5)
#loc22 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":66:5)
#loc23 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":64:9)
#loc24 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":64:40)
#loc25 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":64:28)
#loc26 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":64:36)
#loc27 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":65:22)
#loc28 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":65:9)
#loc29 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc30 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc31 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":80:19)
#loc32 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":70:1)
#loc33 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":82:1)
#loc36 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":71:1)
#loc37 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":73:5)
#loc38 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":81:5)
#loc39 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":73:13)
#loc40 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":73:21)
#loc41 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":73:8)
#loc42 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":73:19)
#loc43 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":74:5)
#loc44 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":77:5)
#loc45 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":79:5)
#loc46 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":75:9)
#loc47 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":75:40)
#loc48 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":75:28)
#loc49 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":75:36)
#loc50 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":76:22)
#loc51 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":76:9)
#loc52 = loc("CWE369_Divide_by_Zero__float_connect_socket_65b.c":80:9)
#loc53 = loc(fused[#loc1, #loc2])
#loc54 = loc(fused[#loc3, #loc4])
#loc56 = loc(fused[#loc8, #loc9])
#loc57 = loc(fused[#loc10, #loc11])
#loc58 = loc(fused[#loc12, #loc13])
#loc59 = loc(fused[#loc16, #loc17])
#loc61 = loc(fused[#loc21, #loc22])
#loc62 = loc(fused[#loc23, #loc24])
#loc63 = loc(fused[#loc25, #loc26])
#loc64 = loc(fused[#loc29, #loc30])
#loc65 = loc(fused[#loc32, #loc33])
#loc67 = loc(fused[#loc37, #loc38])
#loc68 = loc(fused[#loc41, #loc40])
#loc69 = loc(fused[#loc43, #loc44, #loc45, #loc38])
#loc70 = loc(fused[#loc46, #loc47])
#loc71 = loc(fused[#loc48, #loc49])
