!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":128:44)
#loc400 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":285:44)
#loc471 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":219:23)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc499)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc500)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc501)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc502)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc503)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc504)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc505)
  cir.func private @close(!s32i) -> !s32i loc(#loc506)
  cir.global "private" internal dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45_badData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc507)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc509)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc510)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc511)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc512)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc513)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc514)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc34)
    cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc515)
    cir.br ^bb1 loc(#loc516)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc26)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc511)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc28)
    cir.store %11, %3 : !s32i, !cir.ptr<!s32i> loc(#loc512)
    cir.br ^bb2 loc(#loc517)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc517)
  ^bb3:  // pred: ^bb32
    %12 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc40)
    cir.brcond %13 ^bb4, ^bb33 loc(#loc40)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %14 = cir.const #cir.int<2> : !s32i loc(#loc41)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc42)
    %16 = cir.const #cir.int<6> : !s32i loc(#loc43)
    %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc44)
    cir.store %17, %2 : !s32i, !cir.ptr<!s32i> loc(#loc518)
    cir.br ^bb5 loc(#loc519)
  ^bb5:  // pred: ^bb4
    %18 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc49)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc50)
    %21 = cir.cmp(eq, %18, %20) : !s32i, !cir.bool loc(#loc520)
    cir.brcond %21 ^bb6, ^bb7 loc(#loc521)
  ^bb6:  // pred: ^bb5
    cir.br ^bb33 loc(#loc52)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc48)
  ^bb8:  // pred: ^bb7
    %22 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc522)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc55)
    %24 = cir.const #cir.int<16> : !u64i loc(#loc523)
    cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc524)
    %25 = cir.const #cir.int<2> : !s32i loc(#loc60)
    %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc60)
    %27 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc61)
    cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc525)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc63)
    %30 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc64)
    %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc65)
    cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc526)
    %32 = cir.const #cir.int<27015> : !s32i loc(#loc67)
    %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc67)
    %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc68)
    %35 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
    cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc527)
    cir.br ^bb9 loc(#loc528)
  ^bb9:  // pred: ^bb8
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc74)
    %37 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc529)
    %38 = cir.const #cir.int<16> : !u64i loc(#loc530)
    %39 = cir.cast(integral, %38 : !u64i), !u32i loc(#loc530)
    %40 = cir.call @bind(%36, %37, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc79)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc80)
    %42 = cir.unary(minus, %41) : !s32i, !s32i loc(#loc80)
    %43 = cir.cmp(eq, %40, %42) : !s32i, !cir.bool loc(#loc531)
    cir.brcond %43 ^bb10, ^bb11 loc(#loc532)
  ^bb10:  // pred: ^bb9
    cir.br ^bb33 loc(#loc82)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc73)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc533)
  ^bb13:  // pred: ^bb12
    %44 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    %45 = cir.const #cir.int<5> : !s32i loc(#loc86)
    %46 = cir.call @listen(%44, %45) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc87)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %48 = cir.unary(minus, %47) : !s32i, !s32i loc(#loc88)
    %49 = cir.cmp(eq, %46, %48) : !s32i, !cir.bool loc(#loc534)
    cir.brcond %49 ^bb14, ^bb15 loc(#loc535)
  ^bb14:  // pred: ^bb13
    cir.br ^bb33 loc(#loc90)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc84)
  ^bb16:  // pred: ^bb15
    %50 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    %51 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc92)
    %52 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc93)
    %53 = cir.call @accept(%50, %51, %52) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc94)
    cir.store %53, %3 : !s32i, !cir.ptr<!s32i> loc(#loc536)
    cir.br ^bb17 loc(#loc537)
  ^bb17:  // pred: ^bb16
    %54 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %55 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc100)
    %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc538)
    cir.brcond %57 ^bb18, ^bb19 loc(#loc539)
  ^bb18:  // pred: ^bb17
    cir.br ^bb33 loc(#loc102)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc98)
  ^bb20:  // pred: ^bb19
    %58 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    %59 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc104)
    %60 = cir.cast(bitcast, %59 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc104)
    %61 = cir.const #cir.int<3> : !s32i loc(#loc105)
    %62 = cir.cast(integral, %61 : !s32i), !u64i loc(#loc105)
    %63 = cir.const #cir.int<4> : !u64i loc(#loc105)
    %64 = cir.binop(mul, %62, %63) : !u64i loc(#loc105)
    %65 = cir.const #cir.int<2> : !s32i loc(#loc105)
    %66 = cir.cast(integral, %65 : !s32i), !u64i loc(#loc105)
    %67 = cir.binop(add, %64, %66) : !u64i loc(#loc105)
    %68 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %69 = cir.cast(integral, %68 : !s32i), !u64i loc(#loc106)
    %70 = cir.binop(sub, %67, %69) : !u64i loc(#loc540)
    %71 = cir.const #cir.int<0> : !s32i loc(#loc107)
    %72 = cir.call @recv(%58, %60, %70, %71) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc108)
    %73 = cir.cast(integral, %72 : !s64i), !s32i loc(#loc108)
    cir.store %73, %0 : !s32i, !cir.ptr<!s32i> loc(#loc541)
    cir.br ^bb21 loc(#loc542)
  ^bb21:  // pred: ^bb20
    %74 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    %75 = cir.const #cir.int<1> : !s32i loc(#loc114)
    %76 = cir.unary(minus, %75) : !s32i, !s32i loc(#loc114)
    %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc543)
    cir.brcond %77 ^bb22, ^bb23 loc(#loc115)
  ^bb22:  // pred: ^bb21
    %78 = cir.const #true loc(#loc115)
    cir.br ^bb28(%78 : !cir.bool) loc(#loc115)
  ^bb23:  // pred: ^bb21
    %79 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc116)
    %80 = cir.const #cir.int<0> : !s32i loc(#loc117)
    %81 = cir.cmp(eq, %79, %80) : !s32i, !cir.bool loc(#loc544)
    cir.brcond %81 ^bb24, ^bb25 loc(#loc115)
  ^bb24:  // pred: ^bb23
    %82 = cir.const #true loc(#loc115)
    cir.br ^bb26(%82 : !cir.bool) loc(#loc115)
  ^bb25:  // pred: ^bb23
    %83 = cir.const #false loc(#loc115)
    cir.br ^bb26(%83 : !cir.bool) loc(#loc115)
  ^bb26(%84: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":128:44)):  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc115)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28(%84 : !cir.bool) loc(#loc115)
  ^bb28(%85: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":128:44)):  // 2 preds: ^bb22, ^bb27
    cir.br ^bb29 loc(#loc115)
  ^bb29:  // pred: ^bb28
    cir.brcond %85 ^bb30, ^bb31 loc(#loc545)
  ^bb30:  // pred: ^bb29
    cir.br ^bb33 loc(#loc119)
  ^bb31:  // pred: ^bb29
    cir.br ^bb32 loc(#loc112)
  ^bb32:  // pred: ^bb31
    %86 = cir.const #cir.int<0> : !s32i loc(#loc120)
    %87 = cir.cast(integral, %86 : !s32i), !s8i loc(#loc120)
    %88 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    %89 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc122)
    %90 = cir.ptr_stride(%89 : !cir.ptr<!s8i>, %88 : !s32i), !cir.ptr<!s8i> loc(#loc122)
    cir.store %87, %90 : !s8i, !cir.ptr<!s8i> loc(#loc546)
    %91 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc123)
    %92 = cir.call @atoi(%91) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc124)
    cir.store %92, %5 : !s32i, !cir.ptr<!s32i> loc(#loc547)
    cir.br ^bb3 loc(#loc39)
  ^bb33:  // 6 preds: ^bb3, ^bb6, ^bb10, ^bb14, ^bb18, ^bb30
    cir.br ^bb34 loc(#loc39)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc548)
  ^bb35:  // pred: ^bb34
    %93 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    %94 = cir.const #cir.int<1> : !s32i loc(#loc130)
    %95 = cir.unary(minus, %94) : !s32i, !s32i loc(#loc130)
    %96 = cir.cmp(ne, %93, %95) : !s32i, !cir.bool loc(#loc549)
    cir.brcond %96 ^bb36, ^bb37 loc(#loc550)
  ^bb36:  // pred: ^bb35
    %97 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    %98 = cir.call @close(%97) : (!s32i) -> !s32i loc(#loc133)
    cir.br ^bb37 loc(#loc128)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc128)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc551)
  ^bb39:  // pred: ^bb38
    %99 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc136)
    %100 = cir.const #cir.int<1> : !s32i loc(#loc137)
    %101 = cir.unary(minus, %100) : !s32i, !s32i loc(#loc137)
    %102 = cir.cmp(ne, %99, %101) : !s32i, !cir.bool loc(#loc552)
    cir.brcond %102 ^bb40, ^bb41 loc(#loc553)
  ^bb40:  // pred: ^bb39
    %103 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc139)
    %104 = cir.call @close(%103) : (!s32i) -> !s32i loc(#loc140)
    cir.br ^bb41 loc(#loc135)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc135)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc37)
  ^bb43:  // pred: ^bb42
    %105 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc141)
    %106 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45_badData : !cir.ptr<!s32i> loc(#loc507)
    cir.store %105, %106 : !s32i, !cir.ptr<!s32i> loc(#loc554)
    %107 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc555)
    cir.call %107() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc143)
    cir.return loc(#loc20)
  } loc(#loc508)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc557)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc147)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc558)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc149)
    cir.return loc(#loc146)
  } loc(#loc556)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc559)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc560)
  cir.func private @printIntLine(!s32i) loc(#loc561)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc562)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc159)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc563)
  cir.func no_proto internal private @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc565)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc566)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc567)
    %3 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45_badData : !cir.ptr<!s32i> loc(#loc507)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc567)
    cir.br ^bb1 loc(#loc568)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc172)
    %6 = cir.const #cir.int<10> : !s32i loc(#loc173)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc173)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc569)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc570)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc172)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc571)
    cir.store %11, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc566)
    cir.br ^bb2 loc(#loc572)
  ^bb2:  // pred: ^bb1
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc178)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc179)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc179)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s32i>, !cir.bool loc(#loc573)
    cir.brcond %15 ^bb3, ^bb4 loc(#loc574)
  ^bb3:  // pred: ^bb2
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc181)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc182)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc183)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc181)
    cir.br ^bb4 loc(#loc177)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc177)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc575)
  ^bb6:  // pred: ^bb5
    %19 = cir.const #cir.int<0> : !s32i loc(#loc186)
    cir.store %19, %0 : !s32i, !cir.ptr<!s32i> loc(#loc576)
    cir.br ^bb7 loc(#loc575)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc188)
    %21 = cir.const #cir.int<10> : !s32i loc(#loc189)
    %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc577)
    cir.brcond %22 ^bb8, ^bb12 loc(#loc190)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc578)
  ^bb9:  // pred: ^bb8
    %23 = cir.const #cir.int<0> : !s32i loc(#loc192)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc193)
    %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc194)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !s32i), !cir.ptr<!s32i> loc(#loc195)
    cir.store %23, %26 : !s32i, !cir.ptr<!s32i> loc(#loc579)
    cir.br ^bb10 loc(#loc185)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc185)
  ^bb11:  // pred: ^bb10
    %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc196)
    %28 = cir.unary(inc, %27) : !s32i, !s32i loc(#loc197)
    cir.store %28, %0 : !s32i, !cir.ptr<!s32i> loc(#loc580)
    cir.br ^bb7 loc(#loc575)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc185)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc581)
  ^bb14:  // pred: ^bb13
    %29 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc200)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc201)
    %31 = cir.cmp(ge, %29, %30) : !s32i, !cir.bool loc(#loc582)
    cir.brcond %31 ^bb15, ^bb24 loc(#loc583)
  ^bb15:  // pred: ^bb14
    %32 = cir.const #cir.int<1> : !s32i loc(#loc205)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc206)
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc207)
    %35 = cir.ptr_stride(%33 : !cir.ptr<!s32i>, %34 : !s32i), !cir.ptr<!s32i> loc(#loc208)
    cir.store %32, %35 : !s32i, !cir.ptr<!s32i> loc(#loc584)
    cir.br ^bb16 loc(#loc585)
  ^bb16:  // pred: ^bb15
    %36 = cir.const #cir.int<0> : !s32i loc(#loc211)
    cir.store %36, %0 : !s32i, !cir.ptr<!s32i> loc(#loc586)
    cir.br ^bb17 loc(#loc585)
  ^bb17:  // 2 preds: ^bb16, ^bb21
    %37 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc213)
    %38 = cir.const #cir.int<10> : !s32i loc(#loc214)
    %39 = cir.cmp(lt, %37, %38) : !s32i, !cir.bool loc(#loc587)
    cir.brcond %39 ^bb18, ^bb22 loc(#loc215)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc588)
  ^bb19:  // pred: ^bb18
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc217)
    %41 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc218)
    %42 = cir.ptr_stride(%40 : !cir.ptr<!s32i>, %41 : !s32i), !cir.ptr<!s32i> loc(#loc219)
    %43 = cir.load %42 : !cir.ptr<!s32i>, !s32i loc(#loc217)
    cir.call @printIntLine(%43) : (!s32i) -> () loc(#loc220)
    cir.br ^bb20 loc(#loc210)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc210)
  ^bb21:  // pred: ^bb20
    %44 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc221)
    %45 = cir.unary(inc, %44) : !s32i, !s32i loc(#loc222)
    cir.store %45, %0 : !s32i, !cir.ptr<!s32i> loc(#loc589)
    cir.br ^bb17 loc(#loc585)
  ^bb22:  // pred: ^bb17
    cir.br ^bb23 loc(#loc210)
  ^bb23:  // pred: ^bb22
    cir.br ^bb25 loc(#loc203)
  ^bb24:  // pred: ^bb14
    %46 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc159)
    %47 = cir.cast(array_to_ptrdecay, %46 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc159)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc223)
    cir.br ^bb25 loc(#loc199)
  ^bb25:  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc199)
  ^bb26:  // pred: ^bb25
    %48 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc224)
    %49 = cir.cast(bitcast, %48 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc224)
    cir.call @free(%49) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc225)
    cir.br ^bb27 loc(#loc171)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc163)
  } loc(#loc564)
  cir.global "private" internal dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45_goodG2BData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc590)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc592)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc232)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc233)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc593)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc235)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc594)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc237)
    %5 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45_goodG2BData : !cir.ptr<!s32i> loc(#loc590)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc595)
    %6 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc596)
    cir.call %6() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc239)
    cir.return loc(#loc229)
  } loc(#loc591)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc598)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc599)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc600)
    %3 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45_goodG2BData : !cir.ptr<!s32i> loc(#loc590)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc248)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc600)
    cir.br ^bb1 loc(#loc601)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc251)
    %6 = cir.const #cir.int<10> : !s32i loc(#loc252)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc252)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc602)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc603)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc251)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc604)
    cir.store %11, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc599)
    cir.br ^bb2 loc(#loc605)
  ^bb2:  // pred: ^bb1
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc257)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc258)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc258)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s32i>, !cir.bool loc(#loc606)
    cir.brcond %15 ^bb3, ^bb4 loc(#loc607)
  ^bb3:  // pred: ^bb2
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc260)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc261)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc262)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc260)
    cir.br ^bb4 loc(#loc256)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc256)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc608)
  ^bb6:  // pred: ^bb5
    %19 = cir.const #cir.int<0> : !s32i loc(#loc265)
    cir.store %19, %0 : !s32i, !cir.ptr<!s32i> loc(#loc609)
    cir.br ^bb7 loc(#loc608)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc267)
    %21 = cir.const #cir.int<10> : !s32i loc(#loc268)
    %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc610)
    cir.brcond %22 ^bb8, ^bb12 loc(#loc269)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc611)
  ^bb9:  // pred: ^bb8
    %23 = cir.const #cir.int<0> : !s32i loc(#loc271)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc272)
    %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc273)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !s32i), !cir.ptr<!s32i> loc(#loc274)
    cir.store %23, %26 : !s32i, !cir.ptr<!s32i> loc(#loc612)
    cir.br ^bb10 loc(#loc264)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc264)
  ^bb11:  // pred: ^bb10
    %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc275)
    %28 = cir.unary(inc, %27) : !s32i, !s32i loc(#loc276)
    cir.store %28, %0 : !s32i, !cir.ptr<!s32i> loc(#loc613)
    cir.br ^bb7 loc(#loc608)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc264)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc614)
  ^bb14:  // pred: ^bb13
    %29 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc279)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc280)
    %31 = cir.cmp(ge, %29, %30) : !s32i, !cir.bool loc(#loc615)
    cir.brcond %31 ^bb15, ^bb24 loc(#loc616)
  ^bb15:  // pred: ^bb14
    %32 = cir.const #cir.int<1> : !s32i loc(#loc284)
    %33 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc285)
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc286)
    %35 = cir.ptr_stride(%33 : !cir.ptr<!s32i>, %34 : !s32i), !cir.ptr<!s32i> loc(#loc287)
    cir.store %32, %35 : !s32i, !cir.ptr<!s32i> loc(#loc617)
    cir.br ^bb16 loc(#loc618)
  ^bb16:  // pred: ^bb15
    %36 = cir.const #cir.int<0> : !s32i loc(#loc290)
    cir.store %36, %0 : !s32i, !cir.ptr<!s32i> loc(#loc619)
    cir.br ^bb17 loc(#loc618)
  ^bb17:  // 2 preds: ^bb16, ^bb21
    %37 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc292)
    %38 = cir.const #cir.int<10> : !s32i loc(#loc293)
    %39 = cir.cmp(lt, %37, %38) : !s32i, !cir.bool loc(#loc620)
    cir.brcond %39 ^bb18, ^bb22 loc(#loc294)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc621)
  ^bb19:  // pred: ^bb18
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc296)
    %41 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc297)
    %42 = cir.ptr_stride(%40 : !cir.ptr<!s32i>, %41 : !s32i), !cir.ptr<!s32i> loc(#loc298)
    %43 = cir.load %42 : !cir.ptr<!s32i>, !s32i loc(#loc296)
    cir.call @printIntLine(%43) : (!s32i) -> () loc(#loc299)
    cir.br ^bb20 loc(#loc289)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc289)
  ^bb21:  // pred: ^bb20
    %44 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc300)
    %45 = cir.unary(inc, %44) : !s32i, !s32i loc(#loc301)
    cir.store %45, %0 : !s32i, !cir.ptr<!s32i> loc(#loc622)
    cir.br ^bb17 loc(#loc618)
  ^bb22:  // pred: ^bb17
    cir.br ^bb23 loc(#loc289)
  ^bb23:  // pred: ^bb22
    cir.br ^bb25 loc(#loc282)
  ^bb24:  // pred: ^bb14
    %46 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc302)
    %47 = cir.cast(array_to_ptrdecay, %46 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc302)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc303)
    cir.br ^bb25 loc(#loc278)
  ^bb25:  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc278)
  ^bb26:  // pred: ^bb25
    %48 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc304)
    %49 = cir.cast(bitcast, %48 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc304)
    cir.call @free(%49) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc305)
    cir.br ^bb27 loc(#loc250)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc242)
  } loc(#loc597)
  cir.global "private" internal dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45_goodB2GData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc623)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc625)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc626)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc627)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc628)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc629)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc630)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc322)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc323)
    cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc631)
    cir.br ^bb1 loc(#loc632)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.int<1> : !s32i loc(#loc315)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc315)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc627)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc317)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc317)
    cir.store %11, %3 : !s32i, !cir.ptr<!s32i> loc(#loc628)
    cir.br ^bb2 loc(#loc633)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc633)
  ^bb3:  // pred: ^bb32
    %12 = cir.const #cir.int<0> : !s32i loc(#loc329)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc329)
    cir.brcond %13 ^bb4, ^bb33 loc(#loc329)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %14 = cir.const #cir.int<2> : !s32i loc(#loc330)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc331)
    %16 = cir.const #cir.int<6> : !s32i loc(#loc332)
    %17 = cir.call @socket(%14, %15, %16) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc333)
    cir.store %17, %2 : !s32i, !cir.ptr<!s32i> loc(#loc634)
    cir.br ^bb5 loc(#loc635)
  ^bb5:  // pred: ^bb4
    %18 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc338)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc339)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc339)
    %21 = cir.cmp(eq, %18, %20) : !s32i, !cir.bool loc(#loc636)
    cir.brcond %21 ^bb6, ^bb7 loc(#loc637)
  ^bb6:  // pred: ^bb5
    cir.br ^bb33 loc(#loc341)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc337)
  ^bb8:  // pred: ^bb7
    %22 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc638)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc344)
    %24 = cir.const #cir.int<16> : !u64i loc(#loc639)
    cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc640)
    %25 = cir.const #cir.int<2> : !s32i loc(#loc349)
    %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc349)
    %27 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc61)
    cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc641)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc351)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc351)
    %30 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc64)
    %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc65)
    cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc642)
    %32 = cir.const #cir.int<27015> : !s32i loc(#loc353)
    %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc353)
    %34 = cir.call @htons(%33) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc354)
    %35 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
    cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc643)
    cir.br ^bb9 loc(#loc644)
  ^bb9:  // pred: ^bb8
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc359)
    %37 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc645)
    %38 = cir.const #cir.int<16> : !u64i loc(#loc646)
    %39 = cir.cast(integral, %38 : !u64i), !u32i loc(#loc646)
    %40 = cir.call @bind(%36, %37, %39) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc364)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc365)
    %42 = cir.unary(minus, %41) : !s32i, !s32i loc(#loc365)
    %43 = cir.cmp(eq, %40, %42) : !s32i, !cir.bool loc(#loc647)
    cir.brcond %43 ^bb10, ^bb11 loc(#loc648)
  ^bb10:  // pred: ^bb9
    cir.br ^bb33 loc(#loc367)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc358)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc649)
  ^bb13:  // pred: ^bb12
    %44 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc370)
    %45 = cir.const #cir.int<5> : !s32i loc(#loc371)
    %46 = cir.call @listen(%44, %45) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc372)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc373)
    %48 = cir.unary(minus, %47) : !s32i, !s32i loc(#loc373)
    %49 = cir.cmp(eq, %46, %48) : !s32i, !cir.bool loc(#loc650)
    cir.brcond %49 ^bb14, ^bb15 loc(#loc651)
  ^bb14:  // pred: ^bb13
    cir.br ^bb33 loc(#loc375)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc369)
  ^bb16:  // pred: ^bb15
    %50 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc376)
    %51 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc377)
    %52 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc378)
    %53 = cir.call @accept(%50, %51, %52) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc379)
    cir.store %53, %3 : !s32i, !cir.ptr<!s32i> loc(#loc652)
    cir.br ^bb17 loc(#loc653)
  ^bb17:  // pred: ^bb16
    %54 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc384)
    %55 = cir.const #cir.int<1> : !s32i loc(#loc385)
    %56 = cir.unary(minus, %55) : !s32i, !s32i loc(#loc385)
    %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc654)
    cir.brcond %57 ^bb18, ^bb19 loc(#loc655)
  ^bb18:  // pred: ^bb17
    cir.br ^bb33 loc(#loc387)
  ^bb19:  // pred: ^bb17
    cir.br ^bb20 loc(#loc383)
  ^bb20:  // pred: ^bb19
    %58 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc388)
    %59 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc389)
    %60 = cir.cast(bitcast, %59 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc389)
    %61 = cir.const #cir.int<3> : !s32i loc(#loc390)
    %62 = cir.cast(integral, %61 : !s32i), !u64i loc(#loc390)
    %63 = cir.const #cir.int<4> : !u64i loc(#loc390)
    %64 = cir.binop(mul, %62, %63) : !u64i loc(#loc390)
    %65 = cir.const #cir.int<2> : !s32i loc(#loc390)
    %66 = cir.cast(integral, %65 : !s32i), !u64i loc(#loc390)
    %67 = cir.binop(add, %64, %66) : !u64i loc(#loc390)
    %68 = cir.const #cir.int<1> : !s32i loc(#loc391)
    %69 = cir.cast(integral, %68 : !s32i), !u64i loc(#loc391)
    %70 = cir.binop(sub, %67, %69) : !u64i loc(#loc656)
    %71 = cir.const #cir.int<0> : !s32i loc(#loc392)
    %72 = cir.call @recv(%58, %60, %70, %71) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc393)
    %73 = cir.cast(integral, %72 : !s64i), !s32i loc(#loc393)
    cir.store %73, %0 : !s32i, !cir.ptr<!s32i> loc(#loc657)
    cir.br ^bb21 loc(#loc658)
  ^bb21:  // pred: ^bb20
    %74 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc398)
    %75 = cir.const #cir.int<1> : !s32i loc(#loc399)
    %76 = cir.unary(minus, %75) : !s32i, !s32i loc(#loc399)
    %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc659)
    cir.brcond %77 ^bb22, ^bb23 loc(#loc400)
  ^bb22:  // pred: ^bb21
    %78 = cir.const #true loc(#loc400)
    cir.br ^bb28(%78 : !cir.bool) loc(#loc400)
  ^bb23:  // pred: ^bb21
    %79 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc401)
    %80 = cir.const #cir.int<0> : !s32i loc(#loc402)
    %81 = cir.cmp(eq, %79, %80) : !s32i, !cir.bool loc(#loc660)
    cir.brcond %81 ^bb24, ^bb25 loc(#loc400)
  ^bb24:  // pred: ^bb23
    %82 = cir.const #true loc(#loc400)
    cir.br ^bb26(%82 : !cir.bool) loc(#loc400)
  ^bb25:  // pred: ^bb23
    %83 = cir.const #false loc(#loc400)
    cir.br ^bb26(%83 : !cir.bool) loc(#loc400)
  ^bb26(%84: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":285:44)):  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc400)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28(%84 : !cir.bool) loc(#loc400)
  ^bb28(%85: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":285:44)):  // 2 preds: ^bb22, ^bb27
    cir.br ^bb29 loc(#loc400)
  ^bb29:  // pred: ^bb28
    cir.brcond %85 ^bb30, ^bb31 loc(#loc661)
  ^bb30:  // pred: ^bb29
    cir.br ^bb33 loc(#loc404)
  ^bb31:  // pred: ^bb29
    cir.br ^bb32 loc(#loc397)
  ^bb32:  // pred: ^bb31
    %86 = cir.const #cir.int<0> : !s32i loc(#loc405)
    %87 = cir.cast(integral, %86 : !s32i), !s8i loc(#loc405)
    %88 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc406)
    %89 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc407)
    %90 = cir.ptr_stride(%89 : !cir.ptr<!s8i>, %88 : !s32i), !cir.ptr<!s8i> loc(#loc407)
    cir.store %87, %90 : !s8i, !cir.ptr<!s8i> loc(#loc662)
    %91 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc408)
    %92 = cir.call @atoi(%91) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc409)
    cir.store %92, %5 : !s32i, !cir.ptr<!s32i> loc(#loc663)
    cir.br ^bb3 loc(#loc328)
  ^bb33:  // 6 preds: ^bb3, ^bb6, ^bb10, ^bb14, ^bb18, ^bb30
    cir.br ^bb34 loc(#loc328)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc664)
  ^bb35:  // pred: ^bb34
    %93 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc414)
    %94 = cir.const #cir.int<1> : !s32i loc(#loc415)
    %95 = cir.unary(minus, %94) : !s32i, !s32i loc(#loc415)
    %96 = cir.cmp(ne, %93, %95) : !s32i, !cir.bool loc(#loc665)
    cir.brcond %96 ^bb36, ^bb37 loc(#loc666)
  ^bb36:  // pred: ^bb35
    %97 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc417)
    %98 = cir.call @close(%97) : (!s32i) -> !s32i loc(#loc418)
    cir.br ^bb37 loc(#loc413)
  ^bb37:  // 2 preds: ^bb35, ^bb36
    cir.br ^bb38 loc(#loc413)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc667)
  ^bb39:  // pred: ^bb38
    %99 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc421)
    %100 = cir.const #cir.int<1> : !s32i loc(#loc422)
    %101 = cir.unary(minus, %100) : !s32i, !s32i loc(#loc422)
    %102 = cir.cmp(ne, %99, %101) : !s32i, !cir.bool loc(#loc668)
    cir.brcond %102 ^bb40, ^bb41 loc(#loc669)
  ^bb40:  // pred: ^bb39
    %103 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc424)
    %104 = cir.call @close(%103) : (!s32i) -> !s32i loc(#loc425)
    cir.br ^bb41 loc(#loc420)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc420)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc326)
  ^bb43:  // pred: ^bb42
    %105 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc426)
    %106 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45_goodB2GData : !cir.ptr<!s32i> loc(#loc623)
    cir.store %105, %106 : !s32i, !cir.ptr<!s32i> loc(#loc670)
    %107 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<!void ()>> loc(#loc671)
    cir.call %107() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc428)
    cir.return loc(#loc309)
  } loc(#loc624)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc430)
  cir.func no_proto internal private @goodB2GSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc673)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc674)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc675)
    %3 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45_goodB2GData : !cir.ptr<!s32i> loc(#loc623)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc438)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc675)
    cir.br ^bb1 loc(#loc676)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc441)
    %6 = cir.const #cir.int<10> : !s32i loc(#loc442)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc442)
    %8 = cir.const #cir.int<4> : !u64i loc(#loc677)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc678)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc441)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc679)
    cir.store %11, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc674)
    cir.br ^bb2 loc(#loc680)
  ^bb2:  // pred: ^bb1
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc447)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc448)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc448)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s32i>, !cir.bool loc(#loc681)
    cir.brcond %15 ^bb3, ^bb4 loc(#loc682)
  ^bb3:  // pred: ^bb2
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc450)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc451)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc452)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc450)
    cir.br ^bb4 loc(#loc446)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc446)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc683)
  ^bb6:  // pred: ^bb5
    %19 = cir.const #cir.int<0> : !s32i loc(#loc455)
    cir.store %19, %0 : !s32i, !cir.ptr<!s32i> loc(#loc684)
    cir.br ^bb7 loc(#loc683)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc457)
    %21 = cir.const #cir.int<10> : !s32i loc(#loc458)
    %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc685)
    cir.brcond %22 ^bb8, ^bb12 loc(#loc459)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc686)
  ^bb9:  // pred: ^bb8
    %23 = cir.const #cir.int<0> : !s32i loc(#loc461)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc462)
    %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc463)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !s32i), !cir.ptr<!s32i> loc(#loc464)
    cir.store %23, %26 : !s32i, !cir.ptr<!s32i> loc(#loc687)
    cir.br ^bb10 loc(#loc454)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc454)
  ^bb11:  // pred: ^bb10
    %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc465)
    %28 = cir.unary(inc, %27) : !s32i, !s32i loc(#loc466)
    cir.store %28, %0 : !s32i, !cir.ptr<!s32i> loc(#loc688)
    cir.br ^bb7 loc(#loc683)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc454)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc689)
  ^bb14:  // pred: ^bb13
    %29 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc469)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc470)
    %31 = cir.cmp(ge, %29, %30) : !s32i, !cir.bool loc(#loc690)
    cir.brcond %31 ^bb15, ^bb20 loc(#loc471)
  ^bb15:  // pred: ^bb14
    %32 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc472)
    %33 = cir.const #cir.int<10> : !s32i loc(#loc473)
    %34 = cir.cmp(lt, %32, %33) : !s32i, !cir.bool loc(#loc691)
    cir.brcond %34 ^bb16, ^bb17 loc(#loc471)
  ^bb16:  // pred: ^bb15
    %35 = cir.const #true loc(#loc471)
    cir.br ^bb18(%35 : !cir.bool) loc(#loc471)
  ^bb17:  // pred: ^bb15
    %36 = cir.const #false loc(#loc471)
    cir.br ^bb18(%36 : !cir.bool) loc(#loc471)
  ^bb18(%37: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":219:23)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc471)
  ^bb19:  // pred: ^bb18
    cir.br ^bb21(%37 : !cir.bool) loc(#loc471)
  ^bb20:  // pred: ^bb14
    %38 = cir.const #false loc(#loc471)
    cir.br ^bb21(%38 : !cir.bool) loc(#loc471)
  ^bb21(%39: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":219:23)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc471)
  ^bb22:  // pred: ^bb21
    cir.brcond %39 ^bb23, ^bb32 loc(#loc692)
  ^bb23:  // pred: ^bb22
    %40 = cir.const #cir.int<1> : !s32i loc(#loc478)
    %41 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc479)
    %42 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc480)
    %43 = cir.ptr_stride(%41 : !cir.ptr<!s32i>, %42 : !s32i), !cir.ptr<!s32i> loc(#loc481)
    cir.store %40, %43 : !s32i, !cir.ptr<!s32i> loc(#loc693)
    cir.br ^bb24 loc(#loc694)
  ^bb24:  // pred: ^bb23
    %44 = cir.const #cir.int<0> : !s32i loc(#loc484)
    cir.store %44, %0 : !s32i, !cir.ptr<!s32i> loc(#loc695)
    cir.br ^bb25 loc(#loc694)
  ^bb25:  // 2 preds: ^bb24, ^bb29
    %45 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc486)
    %46 = cir.const #cir.int<10> : !s32i loc(#loc487)
    %47 = cir.cmp(lt, %45, %46) : !s32i, !cir.bool loc(#loc696)
    cir.brcond %47 ^bb26, ^bb30 loc(#loc488)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc697)
  ^bb27:  // pred: ^bb26
    %48 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc490)
    %49 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc491)
    %50 = cir.ptr_stride(%48 : !cir.ptr<!s32i>, %49 : !s32i), !cir.ptr<!s32i> loc(#loc492)
    %51 = cir.load %50 : !cir.ptr<!s32i>, !s32i loc(#loc490)
    cir.call @printIntLine(%51) : (!s32i) -> () loc(#loc493)
    cir.br ^bb28 loc(#loc483)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc483)
  ^bb29:  // pred: ^bb28
    %52 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc494)
    %53 = cir.unary(inc, %52) : !s32i, !s32i loc(#loc495)
    cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc698)
    cir.br ^bb25 loc(#loc694)
  ^bb30:  // pred: ^bb25
    cir.br ^bb31 loc(#loc483)
  ^bb31:  // pred: ^bb30
    cir.br ^bb33 loc(#loc476)
  ^bb32:  // pred: ^bb22
    %54 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc430)
    %55 = cir.cast(array_to_ptrdecay, %54 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc430)
    cir.call @printLine(%55) : (!cir.ptr<!s8i>) -> () loc(#loc496)
    cir.br ^bb33 loc(#loc468)
  ^bb33:  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc468)
  ^bb34:  // pred: ^bb33
    %56 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc497)
    %57 = cir.cast(bitcast, %56 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc497)
    cir.call @free(%57) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc498)
    cir.br ^bb35 loc(#loc440)
  ^bb35:  // pred: ^bb34
    cir.return loc(#loc432)
  } loc(#loc672)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":42:1)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":42:12)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":79:1)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":155:1)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":89:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":89:13)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":90:9)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":90:28)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":91:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":91:31)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":92:9)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":92:31)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":93:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":93:41)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":81:5)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":81:9)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":83:13)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":83:12)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":83:5)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":84:5)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":152:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":94:9)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":137:17)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":137:16)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":104:35)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":104:44)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":104:57)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":104:28)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":104:13)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":104:68)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":105:13)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":108:13)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":105:17)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":105:33)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":106:13)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":107:17)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":109:20)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":109:21)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":109:30)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":109:33)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":109:47)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":109:13)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":109:48)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":110:34)
#loc61 = loc("/usr/include/netinet/in.h":249:5)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":110:13)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":111:39)
#loc64 = loc("/usr/include/netinet/in.h":251:20)
#loc65 = loc("/usr/include/netinet/in.h":33:15)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":111:13)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":112:38)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":112:32)
#loc69 = loc("/usr/include/netinet/in.h":250:15)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":112:13)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":112:46)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":113:13)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":116:13)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":113:22)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":113:54)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":113:55)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":113:64)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":113:78)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":113:17)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":113:84)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":114:13)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":115:17)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":117:13)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":120:13)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":117:24)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":117:38)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":117:17)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":117:57)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":118:13)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":119:17)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":121:35)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":121:49)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":121:55)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":121:28)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":121:13)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":121:59)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":122:13)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":125:13)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":122:17)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":122:33)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":123:13)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":124:17)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":127:31)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":127:45)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":127:58)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":127:76)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":127:79)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":127:26)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":127:13)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":127:80)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":128:13)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":131:13)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":128:17)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":128:31)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":128:47)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":128:61)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":129:13)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":130:17)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":133:39)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":133:25)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":133:13)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":135:25)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":135:20)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":135:13)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":135:36)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":138:9)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":141:9)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":138:13)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":138:29)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":139:9)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":140:26)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":140:13)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":142:9)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":145:9)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":142:13)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":142:29)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":143:9)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":144:26)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":144:13)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":153:76)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":153:5)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":154:5)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":154:13)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":314:1)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":318:1)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":316:5)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":316:13)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":317:5)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":317:13)
#loc151 = loc("/usr/include/stdlib.h":672:1)
#loc152 = loc("/usr/include/stdlib.h":672:45)
#loc153 = loc("/usr/include/stdlib.h":756:1)
#loc154 = loc("/usr/include/stdlib.h":756:70)
#loc155 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc156 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc157 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc158 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":73:23)
#loc160 = loc("/usr/include/stdlib.h":687:1)
#loc161 = loc("/usr/include/stdlib.h":687:32)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":48:1)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":77:1)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":52:9)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":52:13)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":53:9)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":53:54)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":50:5)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":50:16)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":51:5)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":76:5)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":53:31)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":53:38)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":53:43)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":53:53)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":54:9)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":54:39)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":54:13)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":54:23)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":54:29)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":54:30)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":54:36)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":54:35)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":56:9)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":59:9)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":56:18)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":56:14)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":56:21)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":56:25)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":56:23)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":57:9)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":58:25)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":58:13)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":58:20)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":58:21)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":56:30)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":56:29)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":62:9)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":74:9)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":62:13)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":62:21)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":63:9)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":70:9)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":72:9)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":64:28)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":64:13)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":64:20)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":64:24)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":66:13)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":69:13)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":66:21)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":66:17)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":66:24)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":66:28)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":66:26)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":67:13)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":68:30)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":68:37)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":68:38)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":68:17)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":66:33)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":66:32)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":73:13)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":75:14)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":75:9)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":43:1)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":43:12)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":193:1)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":203:1)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":195:5)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":195:9)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":197:13)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":197:12)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":197:5)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":200:12)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":200:5)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":201:80)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":201:5)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":202:5)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":202:17)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":162:1)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":191:1)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":166:9)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":166:13)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":167:9)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":167:54)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":164:5)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":164:16)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":165:5)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":190:5)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":167:31)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":167:38)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":167:43)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":167:53)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":168:9)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":168:39)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":168:13)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":168:23)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":168:29)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":168:30)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":168:36)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":168:35)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":170:9)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":173:9)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":170:18)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":170:14)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":170:21)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":170:25)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":170:23)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":171:9)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":172:25)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":172:13)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":172:20)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":172:21)
#loc275 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":170:30)
#loc276 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":170:29)
#loc277 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":176:9)
#loc278 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":188:9)
#loc279 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":176:13)
#loc280 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":176:21)
#loc281 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":177:9)
#loc282 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":184:9)
#loc283 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":186:9)
#loc284 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":178:28)
#loc285 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":178:13)
#loc286 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":178:20)
#loc287 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":178:24)
#loc288 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":180:13)
#loc289 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":183:13)
#loc290 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":180:21)
#loc291 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":180:17)
#loc292 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":180:24)
#loc293 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":180:28)
#loc294 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":180:26)
#loc295 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":181:13)
#loc296 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":182:30)
#loc297 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":182:37)
#loc298 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":182:38)
#loc299 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":182:17)
#loc300 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":180:33)
#loc301 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":180:32)
#loc302 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":187:23)
#loc303 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":187:13)
#loc304 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":189:14)
#loc305 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":189:9)
#loc306 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":44:1)
#loc307 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":44:12)
#loc308 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":236:1)
#loc309 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":312:1)
#loc310 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":246:9)
#loc311 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":246:13)
#loc312 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":247:9)
#loc313 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":247:28)
#loc314 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":248:9)
#loc315 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":248:31)
#loc316 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":249:9)
#loc317 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":249:31)
#loc318 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":250:9)
#loc319 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":250:41)
#loc320 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":238:5)
#loc321 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":238:9)
#loc322 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":240:13)
#loc323 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":240:12)
#loc324 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":240:5)
#loc325 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":241:5)
#loc326 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":309:5)
#loc327 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":251:9)
#loc328 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":294:17)
#loc329 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":294:16)
#loc330 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":261:35)
#loc331 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":261:44)
#loc332 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":261:57)
#loc333 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":261:28)
#loc334 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":261:13)
#loc335 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":261:68)
#loc336 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":262:13)
#loc337 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":265:13)
#loc338 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":262:17)
#loc339 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":262:33)
#loc340 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":263:13)
#loc341 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":264:17)
#loc342 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":266:20)
#loc343 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":266:21)
#loc344 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":266:30)
#loc345 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":266:33)
#loc346 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":266:47)
#loc347 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":266:13)
#loc348 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":266:48)
#loc349 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":267:34)
#loc350 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":267:13)
#loc351 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":268:39)
#loc352 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":268:13)
#loc353 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":269:38)
#loc354 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":269:32)
#loc355 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":269:13)
#loc356 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":269:46)
#loc357 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":270:13)
#loc358 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":273:13)
#loc359 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":270:22)
#loc360 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":270:54)
#loc361 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":270:55)
#loc362 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":270:64)
#loc363 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":270:78)
#loc364 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":270:17)
#loc365 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":270:84)
#loc366 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":271:13)
#loc367 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":272:17)
#loc368 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":274:13)
#loc369 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":277:13)
#loc370 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":274:24)
#loc371 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":274:38)
#loc372 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":274:17)
#loc373 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":274:57)
#loc374 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":275:13)
#loc375 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":276:17)
#loc376 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":278:35)
#loc377 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":278:49)
#loc378 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":278:55)
#loc379 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":278:28)
#loc380 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":278:13)
#loc381 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":278:59)
#loc382 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":279:13)
#loc383 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":282:13)
#loc384 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":279:17)
#loc385 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":279:33)
#loc386 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":280:13)
#loc387 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":281:17)
#loc388 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":284:31)
#loc389 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":284:45)
#loc390 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":284:58)
#loc391 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":284:76)
#loc392 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":284:79)
#loc393 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":284:26)
#loc394 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":284:13)
#loc395 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":284:80)
#loc396 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":285:13)
#loc397 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":288:13)
#loc398 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":285:17)
#loc399 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":285:31)
#loc401 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":285:47)
#loc402 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":285:61)
#loc403 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":286:13)
#loc404 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":287:17)
#loc405 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":290:39)
#loc406 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":290:25)
#loc407 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":290:13)
#loc408 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":292:25)
#loc409 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":292:20)
#loc410 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":292:13)
#loc411 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":292:36)
#loc412 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":295:9)
#loc413 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":298:9)
#loc414 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":295:13)
#loc415 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":295:29)
#loc416 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":296:9)
#loc417 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":297:26)
#loc418 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":297:13)
#loc419 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":299:9)
#loc420 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":302:9)
#loc421 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":299:13)
#loc422 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":299:29)
#loc423 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":300:9)
#loc424 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":301:26)
#loc425 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":301:13)
#loc426 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":310:80)
#loc427 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":310:5)
#loc428 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":311:5)
#loc429 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":311:17)
#loc430 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":230:23)
#loc431 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":206:1)
#loc432 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":234:1)
#loc433 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":210:9)
#loc434 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":210:13)
#loc435 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":211:9)
#loc436 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":211:54)
#loc437 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":208:5)
#loc438 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":208:16)
#loc439 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":209:5)
#loc440 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":233:5)
#loc441 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":211:31)
#loc442 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":211:38)
#loc443 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":211:43)
#loc444 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":211:53)
#loc445 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":212:9)
#loc446 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":212:39)
#loc447 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":212:13)
#loc448 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":212:23)
#loc449 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":212:29)
#loc450 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":212:30)
#loc451 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":212:36)
#loc452 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":212:35)
#loc453 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":214:9)
#loc454 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":217:9)
#loc455 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":214:18)
#loc456 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":214:14)
#loc457 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":214:21)
#loc458 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":214:25)
#loc459 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":214:23)
#loc460 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":215:9)
#loc461 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":216:25)
#loc462 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":216:13)
#loc463 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":216:20)
#loc464 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":216:21)
#loc465 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":214:30)
#loc466 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":214:29)
#loc467 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":219:9)
#loc468 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":231:9)
#loc469 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":219:13)
#loc470 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":219:21)
#loc472 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":219:26)
#loc473 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":219:34)
#loc474 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":219:36)
#loc475 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":220:9)
#loc476 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":227:9)
#loc477 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":229:9)
#loc478 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":221:28)
#loc479 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":221:13)
#loc480 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":221:20)
#loc481 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":221:24)
#loc482 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":223:13)
#loc483 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":226:13)
#loc484 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":223:21)
#loc485 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":223:17)
#loc486 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":223:24)
#loc487 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":223:28)
#loc488 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":223:26)
#loc489 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":224:13)
#loc490 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":225:30)
#loc491 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":225:37)
#loc492 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":225:38)
#loc493 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":225:17)
#loc494 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":223:33)
#loc495 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":223:32)
#loc496 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":230:13)
#loc497 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":232:14)
#loc498 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_45.c":232:9)
#loc499 = loc(fused[#loc1, #loc2])
#loc500 = loc(fused[#loc3, #loc4])
#loc501 = loc(fused[#loc5, #loc6])
#loc502 = loc(fused[#loc7, #loc8])
#loc503 = loc(fused[#loc9, #loc10])
#loc504 = loc(fused[#loc11, #loc12])
#loc505 = loc(fused[#loc13, #loc14])
#loc506 = loc(fused[#loc15, #loc16])
#loc507 = loc(fused[#loc17, #loc18])
#loc508 = loc(fused[#loc19, #loc20])
#loc509 = loc(fused[#loc21, #loc22])
#loc510 = loc(fused[#loc23, #loc24])
#loc511 = loc(fused[#loc25, #loc26])
#loc512 = loc(fused[#loc27, #loc28])
#loc513 = loc(fused[#loc29, #loc30])
#loc514 = loc(fused[#loc31, #loc32])
#loc515 = loc(fused[#loc35, #loc33])
#loc516 = loc(fused[#loc36, #loc37])
#loc517 = loc(fused[#loc38, #loc39])
#loc518 = loc(fused[#loc45, #loc46])
#loc519 = loc(fused[#loc47, #loc48])
#loc520 = loc(fused[#loc49, #loc50])
#loc521 = loc(fused[#loc51, #loc48])
#loc522 = loc(fused[#loc53, #loc54])
#loc523 = loc(fused[#loc56, #loc57])
#loc524 = loc(fused[#loc58, #loc59])
#loc525 = loc(fused[#loc62, #loc60])
#loc526 = loc(fused[#loc66, #loc63])
#loc527 = loc(fused[#loc70, #loc71])
#loc528 = loc(fused[#loc72, #loc73])
#loc529 = loc(fused[#loc75, #loc76])
#loc530 = loc(fused[#loc77, #loc78])
#loc531 = loc(fused[#loc79, #loc80])
#loc532 = loc(fused[#loc81, #loc73])
#loc533 = loc(fused[#loc83, #loc84])
#loc534 = loc(fused[#loc87, #loc88])
#loc535 = loc(fused[#loc89, #loc84])
#loc536 = loc(fused[#loc95, #loc96])
#loc537 = loc(fused[#loc97, #loc98])
#loc538 = loc(fused[#loc99, #loc100])
#loc539 = loc(fused[#loc101, #loc98])
#loc540 = loc(fused[#loc105, #loc106])
#loc541 = loc(fused[#loc109, #loc110])
#loc542 = loc(fused[#loc111, #loc112])
#loc543 = loc(fused[#loc113, #loc114])
#loc544 = loc(fused[#loc116, #loc117])
#loc545 = loc(fused[#loc118, #loc112])
#loc546 = loc(fused[#loc122, #loc120])
#loc547 = loc(fused[#loc125, #loc126])
#loc548 = loc(fused[#loc127, #loc128])
#loc549 = loc(fused[#loc129, #loc130])
#loc550 = loc(fused[#loc131, #loc128])
#loc551 = loc(fused[#loc134, #loc135])
#loc552 = loc(fused[#loc136, #loc137])
#loc553 = loc(fused[#loc138, #loc135])
#loc554 = loc(fused[#loc142, #loc141])
#loc555 = loc(fused[#loc143, #loc144])
#loc556 = loc(fused[#loc145, #loc146])
#loc557 = loc(fused[#loc147, #loc148])
#loc558 = loc(fused[#loc149, #loc150])
#loc559 = loc(fused[#loc151, #loc152])
#loc560 = loc(fused[#loc153, #loc154])
#loc561 = loc(fused[#loc155, #loc156])
#loc562 = loc(fused[#loc157, #loc158])
#loc563 = loc(fused[#loc160, #loc161])
#loc564 = loc(fused[#loc162, #loc163])
#loc565 = loc(fused[#loc164, #loc165])
#loc566 = loc(fused[#loc166, #loc167])
#loc567 = loc(fused[#loc168, #loc169])
#loc568 = loc(fused[#loc170, #loc171])
#loc569 = loc(fused[#loc174, #loc175])
#loc570 = loc(fused[#loc173, #loc175])
#loc571 = loc(fused[#loc172, #loc167])
#loc572 = loc(fused[#loc176, #loc177])
#loc573 = loc(fused[#loc178, #loc179])
#loc574 = loc(fused[#loc180, #loc177])
#loc575 = loc(fused[#loc184, #loc185])
#loc576 = loc(fused[#loc187, #loc186])
#loc577 = loc(fused[#loc188, #loc189])
#loc578 = loc(fused[#loc191, #loc185])
#loc579 = loc(fused[#loc193, #loc192])
#loc580 = loc(fused[#loc197, #loc196])
#loc581 = loc(fused[#loc198, #loc199])
#loc582 = loc(fused[#loc200, #loc201])
#loc583 = loc(fused[#loc202, #loc203, #loc204, #loc199])
#loc584 = loc(fused[#loc206, #loc205])
#loc585 = loc(fused[#loc209, #loc210])
#loc586 = loc(fused[#loc212, #loc211])
#loc587 = loc(fused[#loc213, #loc214])
#loc588 = loc(fused[#loc216, #loc210])
#loc589 = loc(fused[#loc222, #loc221])
#loc590 = loc(fused[#loc226, #loc227])
#loc591 = loc(fused[#loc228, #loc229])
#loc592 = loc(fused[#loc230, #loc231])
#loc593 = loc(fused[#loc234, #loc232])
#loc594 = loc(fused[#loc236, #loc235])
#loc595 = loc(fused[#loc238, #loc237])
#loc596 = loc(fused[#loc239, #loc240])
#loc597 = loc(fused[#loc241, #loc242])
#loc598 = loc(fused[#loc243, #loc244])
#loc599 = loc(fused[#loc245, #loc246])
#loc600 = loc(fused[#loc247, #loc248])
#loc601 = loc(fused[#loc249, #loc250])
#loc602 = loc(fused[#loc253, #loc254])
#loc603 = loc(fused[#loc252, #loc254])
#loc604 = loc(fused[#loc251, #loc246])
#loc605 = loc(fused[#loc255, #loc256])
#loc606 = loc(fused[#loc257, #loc258])
#loc607 = loc(fused[#loc259, #loc256])
#loc608 = loc(fused[#loc263, #loc264])
#loc609 = loc(fused[#loc266, #loc265])
#loc610 = loc(fused[#loc267, #loc268])
#loc611 = loc(fused[#loc270, #loc264])
#loc612 = loc(fused[#loc272, #loc271])
#loc613 = loc(fused[#loc276, #loc275])
#loc614 = loc(fused[#loc277, #loc278])
#loc615 = loc(fused[#loc279, #loc280])
#loc616 = loc(fused[#loc281, #loc282, #loc283, #loc278])
#loc617 = loc(fused[#loc285, #loc284])
#loc618 = loc(fused[#loc288, #loc289])
#loc619 = loc(fused[#loc291, #loc290])
#loc620 = loc(fused[#loc292, #loc293])
#loc621 = loc(fused[#loc295, #loc289])
#loc622 = loc(fused[#loc301, #loc300])
#loc623 = loc(fused[#loc306, #loc307])
#loc624 = loc(fused[#loc308, #loc309])
#loc625 = loc(fused[#loc310, #loc311])
#loc626 = loc(fused[#loc312, #loc313])
#loc627 = loc(fused[#loc314, #loc315])
#loc628 = loc(fused[#loc316, #loc317])
#loc629 = loc(fused[#loc318, #loc319])
#loc630 = loc(fused[#loc320, #loc321])
#loc631 = loc(fused[#loc324, #loc322])
#loc632 = loc(fused[#loc325, #loc326])
#loc633 = loc(fused[#loc327, #loc328])
#loc634 = loc(fused[#loc334, #loc335])
#loc635 = loc(fused[#loc336, #loc337])
#loc636 = loc(fused[#loc338, #loc339])
#loc637 = loc(fused[#loc340, #loc337])
#loc638 = loc(fused[#loc342, #loc343])
#loc639 = loc(fused[#loc345, #loc346])
#loc640 = loc(fused[#loc347, #loc348])
#loc641 = loc(fused[#loc350, #loc349])
#loc642 = loc(fused[#loc352, #loc351])
#loc643 = loc(fused[#loc355, #loc356])
#loc644 = loc(fused[#loc357, #loc358])
#loc645 = loc(fused[#loc360, #loc361])
#loc646 = loc(fused[#loc362, #loc363])
#loc647 = loc(fused[#loc364, #loc365])
#loc648 = loc(fused[#loc366, #loc358])
#loc649 = loc(fused[#loc368, #loc369])
#loc650 = loc(fused[#loc372, #loc373])
#loc651 = loc(fused[#loc374, #loc369])
#loc652 = loc(fused[#loc380, #loc381])
#loc653 = loc(fused[#loc382, #loc383])
#loc654 = loc(fused[#loc384, #loc385])
#loc655 = loc(fused[#loc386, #loc383])
#loc656 = loc(fused[#loc390, #loc391])
#loc657 = loc(fused[#loc394, #loc395])
#loc658 = loc(fused[#loc396, #loc397])
#loc659 = loc(fused[#loc398, #loc399])
#loc660 = loc(fused[#loc401, #loc402])
#loc661 = loc(fused[#loc403, #loc397])
#loc662 = loc(fused[#loc407, #loc405])
#loc663 = loc(fused[#loc410, #loc411])
#loc664 = loc(fused[#loc412, #loc413])
#loc665 = loc(fused[#loc414, #loc415])
#loc666 = loc(fused[#loc416, #loc413])
#loc667 = loc(fused[#loc419, #loc420])
#loc668 = loc(fused[#loc421, #loc422])
#loc669 = loc(fused[#loc423, #loc420])
#loc670 = loc(fused[#loc427, #loc426])
#loc671 = loc(fused[#loc428, #loc429])
#loc672 = loc(fused[#loc431, #loc432])
#loc673 = loc(fused[#loc433, #loc434])
#loc674 = loc(fused[#loc435, #loc436])
#loc675 = loc(fused[#loc437, #loc438])
#loc676 = loc(fused[#loc439, #loc440])
#loc677 = loc(fused[#loc443, #loc444])
#loc678 = loc(fused[#loc442, #loc444])
#loc679 = loc(fused[#loc441, #loc436])
#loc680 = loc(fused[#loc445, #loc446])
#loc681 = loc(fused[#loc447, #loc448])
#loc682 = loc(fused[#loc449, #loc446])
#loc683 = loc(fused[#loc453, #loc454])
#loc684 = loc(fused[#loc456, #loc455])
#loc685 = loc(fused[#loc457, #loc458])
#loc686 = loc(fused[#loc460, #loc454])
#loc687 = loc(fused[#loc462, #loc461])
#loc688 = loc(fused[#loc466, #loc465])
#loc689 = loc(fused[#loc467, #loc468])
#loc690 = loc(fused[#loc469, #loc470])
#loc691 = loc(fused[#loc472, #loc474])
#loc692 = loc(fused[#loc475, #loc476, #loc477, #loc468])
#loc693 = loc(fused[#loc479, #loc478])
#loc694 = loc(fused[#loc482, #loc483])
#loc695 = loc(fused[#loc485, #loc484])
#loc696 = loc(fused[#loc486, #loc487])
#loc697 = loc(fused[#loc489, #loc483])
#loc698 = loc(fused[#loc495, #loc494])
