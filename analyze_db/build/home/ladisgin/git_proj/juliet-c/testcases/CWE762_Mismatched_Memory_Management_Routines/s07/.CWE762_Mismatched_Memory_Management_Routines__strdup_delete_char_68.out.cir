!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc80 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":102:10)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":102:14)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":102:20)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":102:32)
#loc129 = loc(fused[#loc80, #loc81])
#loc130 = loc(fused[#loc82, #loc83])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const._ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68L7goodB2GEv.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc96)
  cir.global "private" constant cir_private @__const._ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_683badEv.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc97)
  cir.global external dsolocal @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_687badDataE = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc98)
  cir.global external dsolocal @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_6811goodG2BDataE = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc99)
  cir.global external dsolocal @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_6811goodB2GDataE = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc100)
  cir.func private @strdup(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc101)
  cir.func private @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_687badSinkEv() loc(#loc102)
  cir.func @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_683badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc104)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc19)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc105)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc97)
      %5 = cir.get_global @__const._ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_683badEv.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc97)
      cir.copy %5 to %4 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc97)
      %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc23)
      %7 = cir.call @strdup(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc24)
      cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc107)
    } loc(#loc106)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
    %3 = cir.get_global @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_687badDataE : !cir.ptr<!cir.ptr<!s8i>> loc(#loc98)
    cir.store %2, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc108)
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_687badSinkEv() : () -> () loc(#loc29)
    cir.return loc(#loc16)
  } loc(#loc103)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc109)
  cir.func private @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_6811goodG2BSinkEv() loc(#loc110)
  cir.func internal private @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc112)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc38)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc113)
    %2 = cir.const #cir.int<1> : !u64i loc(#loc114)
    %3 = cir.call @_Znwm(%2) : (!u64i) -> !cir.ptr<!void> loc(#loc42)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc114)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    %6 = cir.get_global @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_6811goodG2BDataE : !cir.ptr<!cir.ptr<!s8i>> loc(#loc99)
    cir.store %5, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc116)
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_6811goodG2BSinkEv() : () -> () loc(#loc46)
    cir.return loc(#loc35)
  } loc(#loc111)
  cir.func private @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_6811goodB2GSinkEv() loc(#loc117)
  cir.func internal private @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc119)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc53)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc96)
      %5 = cir.get_global @__const._ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68L7goodB2GEv.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc96)
      cir.copy %5 to %4 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc96)
      %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc57)
      %7 = cir.call @strdup(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc58)
      cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
    } loc(#loc121)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
    %3 = cir.get_global @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_6811goodB2GDataE : !cir.ptr<!cir.ptr<!s8i>> loc(#loc100)
    cir.store %2, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc123)
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_6811goodB2GSinkEv() : () -> () loc(#loc63)
    cir.return loc(#loc50)
  } loc(#loc118)
  cir.func @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_684goodEv() extra(#fn_attr1) {
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68L7goodG2BEv() : () -> () loc(#loc66)
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68L7goodB2GEv() : () -> () loc(#loc67)
    cir.return loc(#loc65)
  } loc(#loc124)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc125)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc126)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc127)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc75)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc77)
  cir.func @main(%arg0: !s32i loc(fused[#loc80, #loc81]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc82, #loc83])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc129)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc130)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc79)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc84)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc84)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc85)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc86)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc86)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc87)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc74)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_684goodEv() : () -> () loc(#loc89)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc75)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc76)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_683badEv() : () -> () loc(#loc92)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc77)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc94)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc131)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc131)
    cir.return %15 : !s32i loc(#loc131)
  } loc(#loc128)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":0:0)
#loc1 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":75:9)
#loc2 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":75:27)
#loc3 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":40:9)
#loc4 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":40:27)
#loc5 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":25:1)
#loc6 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":25:8)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":26:1)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":26:8)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":27:1)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":27:8)
#loc11 = loc("/usr/include/string.h":187:1)
#loc12 = loc("/usr/include/string.h":188:35)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":32:1)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":32:14)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":34:1)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":46:1)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":36:5)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":36:12)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":38:12)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":38:5)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":39:5)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":43:5)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":42:23)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":42:16)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":42:9)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":42:31)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":44:15)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":44:5)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":45:5)
#loc30 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc31 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":53:1)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":53:18)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":57:1)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":66:1)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":59:5)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":59:12)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":61:12)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":61:5)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":63:12)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":63:16)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":57:13)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":63:5)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":64:19)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":64:5)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":65:5)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":54:1)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":54:18)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":69:1)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":81:1)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":71:5)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":71:12)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":73:12)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":73:5)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":74:5)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":78:5)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":77:23)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":77:16)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":77:9)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":77:31)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":79:19)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":79:5)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":80:5)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":83:1)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":87:1)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":85:5)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":86:5)
#loc68 = loc("/usr/include/stdlib.h":575:1)
#loc69 = loc("/usr/include/stdlib.h":575:41)
#loc70 = loc("/usr/include/time.h":76:1)
#loc71 = loc("/usr/include/time.h":76:38)
#loc72 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc73 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":107:15)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":109:15)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":112:15)
#loc77 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":114:15)
#loc78 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":102:1)
#loc79 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":117:1)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":103:1)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":105:27)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":105:22)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":105:5)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":107:5)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":108:5)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":109:5)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":112:5)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":113:5)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":114:5)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":116:12)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_68a.cpp":116:5)
#loc96 = loc(fused[#loc1, #loc2])
#loc97 = loc(fused[#loc3, #loc4])
#loc98 = loc(fused[#loc5, #loc6])
#loc99 = loc(fused[#loc7, #loc8])
#loc100 = loc(fused[#loc9, #loc10])
#loc101 = loc(fused[#loc11, #loc12])
#loc102 = loc(fused[#loc13, #loc14])
#loc103 = loc(fused[#loc15, #loc16])
#loc104 = loc(fused[#loc17, #loc18])
#loc105 = loc(fused[#loc20, #loc19])
#loc106 = loc(fused[#loc21, #loc22])
#loc107 = loc(fused[#loc25, #loc26])
#loc108 = loc(fused[#loc28, #loc27])
#loc109 = loc(fused[#loc30, #loc31])
#loc110 = loc(fused[#loc32, #loc33])
#loc111 = loc(fused[#loc34, #loc35])
#loc112 = loc(fused[#loc36, #loc37])
#loc113 = loc(fused[#loc39, #loc38])
#loc114 = loc(fused[#loc40, #loc41])
#loc115 = loc(fused[#loc43, #loc41])
#loc116 = loc(fused[#loc45, #loc44])
#loc117 = loc(fused[#loc47, #loc48])
#loc118 = loc(fused[#loc49, #loc50])
#loc119 = loc(fused[#loc51, #loc52])
#loc120 = loc(fused[#loc54, #loc53])
#loc121 = loc(fused[#loc55, #loc56])
#loc122 = loc(fused[#loc59, #loc60])
#loc123 = loc(fused[#loc62, #loc61])
#loc124 = loc(fused[#loc64, #loc65])
#loc125 = loc(fused[#loc68, #loc69])
#loc126 = loc(fused[#loc70, #loc71])
#loc127 = loc(fused[#loc72, #loc73])
#loc128 = loc(fused[#loc78, #loc79])
#loc131 = loc(fused[#loc95, #loc94])
