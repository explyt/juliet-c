!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s03/CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @_ZL10staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc95)
  cir.func private @printIntLine(!s32i) loc(#loc96)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc97)
  cir.func @_ZN52CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_053badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc99)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc100)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc13)
    cir.store %2, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc101)
    cir.br ^bb1 loc(#loc102)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @_ZL10staticTrue : !cir.ptr<!s32i> loc(#loc95)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc17)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %5 ^bb2, ^bb5 loc(#loc103)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc104)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.int<4> : !u64i loc(#loc10)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc10)
    cir.store %9, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc99)
    %10 = cir.const #cir.int<5> : !s32i loc(#loc21)
    %11 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc22)
    cir.store %10, %11 : !s32i, !cir.ptr<!s32i> loc(#loc105)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc24)
    cir.store %12, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc106)
    cir.br ^bb4 loc(#loc20)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc16)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc16)
  ^bb6:  // pred: ^bb5
    %13 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc26)
    %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc27)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc28)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc29)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc29)
    cir.call @_ZdlPv(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc30)
    cir.return loc(#loc8)
  } loc(#loc98)
  cir.global "private" internal dsolocal @_ZL11staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc107)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc108)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc35)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc109)
  cir.func internal private @_ZN52CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc111)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc112)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc44)
    cir.store %2, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc113)
    cir.br ^bb1 loc(#loc114)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @_ZL11staticFalse : !cir.ptr<!s32i> loc(#loc107)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc48)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc115)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc35)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc35)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    cir.br ^bb6 loc(#loc50)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc116)
  ^bb4:  // pred: ^bb3
    %8 = cir.const #cir.int<4> : !u64i loc(#loc117)
    %9 = cir.call @_Znwm(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc111)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc117)
    cir.store %10, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc111)
    %11 = cir.const #cir.int<5> : !s32i loc(#loc56)
    %12 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc57)
    cir.store %11, %12 : !s32i, !cir.ptr<!s32i> loc(#loc118)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc59)
    cir.store %13, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc119)
    cir.br ^bb5 loc(#loc54)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc47)
  ^bb6:  // 2 preds: ^bb2, ^bb5
    cir.br ^bb7 loc(#loc47)
  ^bb7:  // pred: ^bb6
    %14 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc61)
    %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc63)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc64)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc64)
    cir.call @_ZdlPv(%17) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc65)
    cir.return loc(#loc39)
  } loc(#loc110)
  cir.func internal private @_ZN52CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc121)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc122)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc72)
    cir.store %2, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc123)
    cir.br ^bb1 loc(#loc124)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @_ZL10staticTrue : !cir.ptr<!s32i> loc(#loc95)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc76)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc76)
    cir.brcond %5 ^bb2, ^bb5 loc(#loc125)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc126)
  ^bb3:  // pred: ^bb2
    %6 = cir.const #cir.int<4> : !u64i loc(#loc127)
    %7 = cir.call @_Znwm(%6) : (!u64i) -> !cir.ptr<!void> loc(#loc121)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc127)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc121)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc81)
    %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc82)
    cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc128)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc84)
    cir.store %11, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc129)
    cir.br ^bb4 loc(#loc79)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc75)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc75)
  ^bb6:  // pred: ^bb5
    %12 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc86)
    %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc88)
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc89)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc89)
    cir.call @_ZdlPv(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc90)
    cir.return loc(#loc67)
  } loc(#loc120)
  cir.func @_ZN52CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_054goodEv() extra(#fn_attr1) {
    cir.call @_ZN52CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05L8goodG2B1Ev() : () -> () loc(#loc93)
    cir.call @_ZN52CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05L8goodG2B2Ev() : () -> () loc(#loc94)
    cir.return loc(#loc92)
  } loc(#loc130)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s03/CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":24:1)
#loc2 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":24:25)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc6 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":32:1)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":48:1)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":40:13)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":40:39)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":34:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":34:11)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":35:12)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":35:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":36:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":44:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":36:8)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":37:5)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":38:9)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":43:9)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":41:27)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":41:14)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":41:13)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":42:20)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":42:13)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":45:19)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":45:18)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":45:5)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":47:12)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":32:6)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":25:1)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":25:26)
#loc33 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":62:19)
#loc36 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc37 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":55:1)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":76:1)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":68:13)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":68:36)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":57:5)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":57:11)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":58:12)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":58:5)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":59:5)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":72:5)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":59:8)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":60:5)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":63:5)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":65:5)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":62:9)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":66:9)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":71:9)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":68:32)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":69:27)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":69:14)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":69:13)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":70:20)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":70:13)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":73:19)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":73:18)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":73:5)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":75:12)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":55:13)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":79:1)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":95:1)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":87:13)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":87:36)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":81:5)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":81:11)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":82:12)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":82:5)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":83:5)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":91:5)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":83:8)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":84:5)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":85:9)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":90:9)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":87:32)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":88:27)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":88:14)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":88:13)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":89:20)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":89:13)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":92:19)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":92:18)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":92:5)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":94:12)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":79:13)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":97:1)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":101:1)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":99:5)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__delete_int_alloca_05.cpp":100:5)
#loc95 = loc(fused[#loc1, #loc2])
#loc96 = loc(fused[#loc3, #loc4])
#loc97 = loc(fused[#loc5, #loc6])
#loc98 = loc(fused[#loc7, #loc8])
#loc99 = loc(fused[#loc9, #loc10])
#loc100 = loc(fused[#loc11, #loc12])
#loc101 = loc(fused[#loc14, #loc13])
#loc102 = loc(fused[#loc15, #loc16])
#loc103 = loc(fused[#loc18, #loc16])
#loc104 = loc(fused[#loc19, #loc20])
#loc105 = loc(fused[#loc23, #loc21])
#loc106 = loc(fused[#loc25, #loc24])
#loc107 = loc(fused[#loc31, #loc32])
#loc108 = loc(fused[#loc33, #loc34])
#loc109 = loc(fused[#loc36, #loc37])
#loc110 = loc(fused[#loc38, #loc39])
#loc111 = loc(fused[#loc40, #loc41])
#loc112 = loc(fused[#loc42, #loc43])
#loc113 = loc(fused[#loc45, #loc44])
#loc114 = loc(fused[#loc46, #loc47])
#loc115 = loc(fused[#loc49, #loc50, #loc51, #loc47])
#loc116 = loc(fused[#loc53, #loc54])
#loc117 = loc(fused[#loc55, #loc41])
#loc118 = loc(fused[#loc58, #loc56])
#loc119 = loc(fused[#loc60, #loc59])
#loc120 = loc(fused[#loc66, #loc67])
#loc121 = loc(fused[#loc68, #loc69])
#loc122 = loc(fused[#loc70, #loc71])
#loc123 = loc(fused[#loc73, #loc72])
#loc124 = loc(fused[#loc74, #loc75])
#loc125 = loc(fused[#loc77, #loc75])
#loc126 = loc(fused[#loc78, #loc79])
#loc127 = loc(fused[#loc80, #loc69])
#loc128 = loc(fused[#loc83, #loc81])
#loc129 = loc(fused[#loc85, #loc84])
#loc130 = loc(fused[#loc91, #loc92])
