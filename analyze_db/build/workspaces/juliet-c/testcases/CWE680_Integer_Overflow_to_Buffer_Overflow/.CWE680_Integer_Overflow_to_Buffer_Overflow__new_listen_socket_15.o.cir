!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":98:44)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc295)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc296)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc297)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc298)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc299)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc300)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc301)
  cir.func private @close(!s32i) -> !s32i loc(#loc302)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc303)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc19)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc304)
  cir.func private @printIntLine(!s32i) loc(#loc305)
  cir.func @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_153badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc307)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc308)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc309)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc310)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc311)
    %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc312)
    %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc313)
    %7 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc314)
    %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc315)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc44)
    cir.store %10, %8 : !s32i, !cir.ptr<!s32i> loc(#loc316)
    cir.br ^bb1 loc(#loc317)
  ^bb1:  // pred: ^bb0
    %11 = cir.const #cir.int<6> : !s32i loc(#loc48)
    cir.br ^bb2 loc(#loc46)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %11 : !s32i, ^bb50 [
      6: ^bb4
    ] loc(#loc46)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc49)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc318)
  ^bb5:  // pred: ^bb4
    %12 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc31)
    cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc309)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc33)
    cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc310)
    cir.br ^bb6 loc(#loc319)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc319)
  ^bb7:  // pred: ^bb38
    %16 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc54)
    cir.brcond %17 ^bb8, ^bb39 loc(#loc54)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc320)
  ^bb9:  // pred: ^bb8
    %18 = cir.const #cir.int<2> : !s32i loc(#loc57)
    %19 = cir.const #cir.int<1> : !u32i loc(#loc58)
    %20 = cir.cast(integral, %19 : !u32i), !s32i loc(#loc58)
    %21 = cir.const #cir.int<6> : !u32i loc(#loc59)
    %22 = cir.cast(integral, %21 : !u32i), !s32i loc(#loc59)
    %23 = cir.call @socket(%18, %20, %22) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc60)
    cir.store %23, %2 : !s32i, !cir.ptr<!s32i> loc(#loc321)
    cir.br ^bb10 loc(#loc322)
  ^bb10:  // pred: ^bb9
    %24 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc66)
    %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc66)
    %27 = cir.cmp(eq, %24, %26) : !s32i, !cir.bool loc(#loc323)
    cir.brcond %27 ^bb11, ^bb12 loc(#loc324)
  ^bb11:  // pred: ^bb10
    cir.br ^bb39 loc(#loc68)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc64)
  ^bb13:  // pred: ^bb12
    %28 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc325)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc71)
    %30 = cir.const #cir.int<16> : !u64i loc(#loc326)
    cir.libc.memset %30 bytes from %28 set to %29 : !cir.ptr<!void>, !s32i, !u64i loc(#loc327)
    %31 = cir.const #cir.int<2> : !s32i loc(#loc76)
    %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc76)
    %33 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
    cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc328)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc79)
    %35 = cir.cast(integral, %34 : !s32i), !u32i loc(#loc79)
    %36 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc80)
    %37 = cir.get_member %36[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc81)
    cir.store %35, %37 : !u32i, !cir.ptr<!u32i> loc(#loc329)
    %38 = cir.const #cir.int<27015> : !s32i loc(#loc83)
    %39 = cir.cast(integral, %38 : !s32i), !u16i loc(#loc83)
    %40 = cir.call @htons(%39) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc84)
    %41 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
    cir.store %40, %41 : !u16i, !cir.ptr<!u16i> loc(#loc330)
    cir.br ^bb14 loc(#loc331)
  ^bb14:  // pred: ^bb13
    %42 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    %43 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc332)
    %44 = cir.const #cir.int<16> : !u64i loc(#loc333)
    %45 = cir.cast(integral, %44 : !u64i), !u32i loc(#loc333)
    %46 = cir.call @bind(%42, %43, %45) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc95)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %48 = cir.unary(minus, %47) nsw : !s32i, !s32i loc(#loc96)
    %49 = cir.cmp(eq, %46, %48) : !s32i, !cir.bool loc(#loc334)
    cir.brcond %49 ^bb15, ^bb16 loc(#loc335)
  ^bb15:  // pred: ^bb14
    cir.br ^bb39 loc(#loc98)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc89)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc336)
  ^bb18:  // pred: ^bb17
    %50 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    %51 = cir.const #cir.int<5> : !s32i loc(#loc102)
    %52 = cir.call @listen(%50, %51) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc103)
    %53 = cir.const #cir.int<1> : !s32i loc(#loc104)
    %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc104)
    %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc337)
    cir.brcond %55 ^bb19, ^bb20 loc(#loc338)
  ^bb19:  // pred: ^bb18
    cir.br ^bb39 loc(#loc106)
  ^bb20:  // pred: ^bb18
    cir.br ^bb21 loc(#loc100)
  ^bb21:  // pred: ^bb20
    %56 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc107)
    %57 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc108)
    %58 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc109)
    %59 = cir.call @accept(%56, %57, %58) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc110)
    cir.store %59, %3 : !s32i, !cir.ptr<!s32i> loc(#loc339)
    cir.br ^bb22 loc(#loc340)
  ^bb22:  // pred: ^bb21
    %60 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc115)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc116)
    %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc341)
    cir.brcond %63 ^bb23, ^bb24 loc(#loc342)
  ^bb23:  // pred: ^bb22
    cir.br ^bb39 loc(#loc118)
  ^bb24:  // pred: ^bb22
    cir.br ^bb25 loc(#loc114)
  ^bb25:  // pred: ^bb24
    %64 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    %65 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc120)
    %66 = cir.cast(bitcast, %65 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc120)
    %67 = cir.const #cir.int<3> : !s32i loc(#loc121)
    %68 = cir.cast(integral, %67 : !s32i), !u64i loc(#loc121)
    %69 = cir.const #cir.int<4> : !u64i loc(#loc121)
    %70 = cir.binop(mul, %68, %69) : !u64i loc(#loc121)
    %71 = cir.const #cir.int<2> : !s32i loc(#loc121)
    %72 = cir.cast(integral, %71 : !s32i), !u64i loc(#loc121)
    %73 = cir.binop(add, %70, %72) : !u64i loc(#loc121)
    %74 = cir.const #cir.int<1> : !s32i loc(#loc122)
    %75 = cir.cast(integral, %74 : !s32i), !u64i loc(#loc122)
    %76 = cir.binop(sub, %73, %75) : !u64i loc(#loc343)
    %77 = cir.const #cir.int<0> : !s32i loc(#loc123)
    %78 = cir.call @recv(%64, %66, %76, %77) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc124)
    %79 = cir.cast(integral, %78 : !s64i), !s32i loc(#loc124)
    cir.store %79, %0 : !s32i, !cir.ptr<!s32i> loc(#loc344)
    cir.br ^bb26 loc(#loc345)
  ^bb26:  // pred: ^bb25
    %80 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    %81 = cir.const #cir.int<1> : !s32i loc(#loc130)
    %82 = cir.unary(minus, %81) nsw : !s32i, !s32i loc(#loc130)
    %83 = cir.cmp(eq, %80, %82) : !s32i, !cir.bool loc(#loc346)
    cir.brcond %83 ^bb27, ^bb28 loc(#loc131)
  ^bb27:  // pred: ^bb26
    %84 = cir.const #true loc(#loc131)
    cir.br ^bb33(%84 : !cir.bool) loc(#loc131)
  ^bb28:  // pred: ^bb26
    %85 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    %86 = cir.const #cir.int<0> : !s32i loc(#loc133)
    %87 = cir.cmp(eq, %85, %86) : !s32i, !cir.bool loc(#loc347)
    cir.brcond %87 ^bb29, ^bb30 loc(#loc131)
  ^bb29:  // pred: ^bb28
    %88 = cir.const #true loc(#loc131)
    cir.br ^bb31(%88 : !cir.bool) loc(#loc131)
  ^bb30:  // pred: ^bb28
    %89 = cir.const #false loc(#loc131)
    cir.br ^bb31(%89 : !cir.bool) loc(#loc131)
  ^bb31(%90: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":98:44)):  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc131)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33(%90 : !cir.bool) loc(#loc131)
  ^bb33(%91: !cir.bool loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":98:44)):  // 2 preds: ^bb27, ^bb32
    cir.br ^bb34 loc(#loc131)
  ^bb34:  // pred: ^bb33
    cir.brcond %91 ^bb35, ^bb36 loc(#loc348)
  ^bb35:  // pred: ^bb34
    cir.br ^bb39 loc(#loc135)
  ^bb36:  // pred: ^bb34
    cir.br ^bb37 loc(#loc128)
  ^bb37:  // pred: ^bb36
    %92 = cir.const #cir.int<0> : !s8i loc(#loc136)
    %93 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    %94 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc138)
    %95 = cir.ptr_stride(%94 : !cir.ptr<!s8i>, %93 : !s32i), !cir.ptr<!s8i> loc(#loc138)
    cir.store %92, %95 : !s8i, !cir.ptr<!s8i> loc(#loc349)
    %96 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc139)
    %97 = cir.call @atoi(%96) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc140)
    cir.store %97, %8 : !s32i, !cir.ptr<!s32i> loc(#loc350)
    cir.br ^bb38 loc(#loc56)
  ^bb38:  // pred: ^bb37
    cir.br ^bb7 loc(#loc53)
  ^bb39:  // 6 preds: ^bb7, ^bb11, ^bb15, ^bb19, ^bb23, ^bb35
    cir.br ^bb40 loc(#loc53)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc351)
  ^bb41:  // pred: ^bb40
    %98 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    %99 = cir.const #cir.int<1> : !s32i loc(#loc146)
    %100 = cir.unary(minus, %99) nsw : !s32i, !s32i loc(#loc146)
    %101 = cir.cmp(ne, %98, %100) : !s32i, !cir.bool loc(#loc352)
    cir.brcond %101 ^bb42, ^bb43 loc(#loc353)
  ^bb42:  // pred: ^bb41
    %102 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc148)
    %103 = cir.call @close(%102) : (!s32i) -> !s32i loc(#loc149)
    cir.br ^bb43 loc(#loc144)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc144)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc354)
  ^bb45:  // pred: ^bb44
    %104 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    %105 = cir.const #cir.int<1> : !s32i loc(#loc153)
    %106 = cir.unary(minus, %105) nsw : !s32i, !s32i loc(#loc153)
    %107 = cir.cmp(ne, %104, %106) : !s32i, !cir.bool loc(#loc355)
    cir.brcond %107 ^bb46, ^bb47 loc(#loc356)
  ^bb46:  // pred: ^bb45
    %108 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc155)
    %109 = cir.call @close(%108) : (!s32i) -> !s32i loc(#loc156)
    cir.br ^bb47 loc(#loc151)
  ^bb47:  // 2 preds: ^bb45, ^bb46
    cir.br ^bb48 loc(#loc151)
  ^bb48:  // pred: ^bb47
    cir.br ^bb49 loc(#loc51)
  ^bb49:  // pred: ^bb48
    cir.br ^bb51 loc(#loc157)
  ^bb50:  // pred: ^bb2
    %110 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc19)
    %111 = cir.cast(array_to_ptrdecay, %110 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc19)
    cir.call @printLine(%111) : (!cir.ptr<!s8i>) -> () loc(#loc158)
    cir.br ^bb51 loc(#loc159)
  ^bb51:  // 2 preds: ^bb49, ^bb50
    cir.br ^bb52 loc(#loc47)
  ^bb52:  // pred: ^bb51
    cir.br ^bb53 loc(#loc357)
  ^bb53:  // pred: ^bb52
    %112 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    %113 = cir.cast(integral, %112 : !s32i), !u64i loc(#loc162)
    %114 = cir.const #cir.int<4> : !u64i loc(#loc358)
    %115 = cir.binop(mul, %113, %114) : !u64i loc(#loc359)
    cir.store %115, %5 : !u64i, !cir.ptr<!u64i> loc(#loc360)
    %116 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc166)
    %117 = cir.call @_Znam(%116) : (!u64i) -> !cir.ptr<!void> loc(#loc167)
    %118 = cir.cast(bitcast, %117 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc361)
    %119 = cir.cast(bitcast, %118 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc361)
    cir.store %119, %7 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc362)
    cir.br ^bb54 loc(#loc363)
  ^bb54:  // pred: ^bb53
    %120 = cir.const #cir.int<0> : !s32i loc(#loc173)
    %121 = cir.cast(integral, %120 : !s32i), !u64i loc(#loc173)
    cir.store %121, %6 : !u64i, !cir.ptr<!u64i> loc(#loc364)
    cir.br ^bb55 loc(#loc363)
  ^bb55:  // 2 preds: ^bb54, ^bb59
    %122 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc175)
    %123 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc176)
    %124 = cir.cast(integral, %123 : !s32i), !u64i loc(#loc176)
    %125 = cir.cmp(lt, %122, %124) : !u64i, !cir.bool loc(#loc365)
    cir.brcond %125 ^bb56, ^bb60 loc(#loc365)
  ^bb56:  // pred: ^bb55
    cir.br ^bb57 loc(#loc366)
  ^bb57:  // pred: ^bb56
    %126 = cir.const #cir.int<0> : !s32i loc(#loc178)
    %127 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc179)
    %128 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc180)
    %129 = cir.ptr_stride(%127 : !cir.ptr<!s32i>, %128 : !u64i), !cir.ptr<!s32i> loc(#loc181)
    cir.store %126, %129 : !s32i, !cir.ptr<!s32i> loc(#loc367)
    cir.br ^bb58 loc(#loc172)
  ^bb58:  // pred: ^bb57
    cir.br ^bb59 loc(#loc172)
  ^bb59:  // pred: ^bb58
    %130 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc182)
    %131 = cir.unary(inc, %130) : !u64i, !u64i loc(#loc183)
    cir.store %131, %6 : !u64i, !cir.ptr<!u64i> loc(#loc368)
    cir.br ^bb55 loc(#loc363)
  ^bb60:  // pred: ^bb55
    cir.br ^bb61 loc(#loc172)
  ^bb61:  // pred: ^bb60
    %132 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc184)
    %133 = cir.const #cir.int<0> : !s32i loc(#loc185)
    %134 = cir.ptr_stride(%132 : !cir.ptr<!s32i>, %133 : !s32i), !cir.ptr<!s32i> loc(#loc186)
    %135 = cir.load %134 : !cir.ptr<!s32i>, !s32i loc(#loc184)
    cir.call @printIntLine(%135) : (!s32i) -> () loc(#loc187)
    %136 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc188)
    cir.delete.array %136 : <!s32i> loc(#loc188)
    cir.br ^bb62 loc(#loc161)
  ^bb62:  // pred: ^bb61
    cir.return loc(#loc25)
  } loc(#loc306)
  cir.func internal private @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc370)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc371)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc372)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc373)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc198)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc199)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc374)
    cir.br ^bb1 loc(#loc375)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<5> : !s32i loc(#loc203)
    cir.br ^bb2 loc(#loc201)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %6 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc201)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc204)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc205)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc205)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc206)
    cir.br ^bb6 loc(#loc207)
  ^bb5:  // pred: ^bb2
    %9 = cir.const #cir.int<20> : !s32i loc(#loc208)
    cir.store %9, %3 : !s32i, !cir.ptr<!s32i> loc(#loc376)
    cir.br ^bb6 loc(#loc210)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc202)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc377)
  ^bb8:  // pred: ^bb7
    %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc213)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc213)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc378)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc379)
    cir.store %13, %0 : !u64i, !cir.ptr<!u64i> loc(#loc380)
    %14 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc217)
    %15 = cir.call @_Znam(%14) : (!u64i) -> !cir.ptr<!void> loc(#loc218)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc381)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc381)
    cir.store %17, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc382)
    cir.br ^bb9 loc(#loc383)
  ^bb9:  // pred: ^bb8
    %18 = cir.const #cir.int<0> : !s32i loc(#loc224)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc224)
    cir.store %19, %1 : !u64i, !cir.ptr<!u64i> loc(#loc384)
    cir.br ^bb10 loc(#loc383)
  ^bb10:  // 2 preds: ^bb9, ^bb14
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc226)
    %21 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc227)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc227)
    %23 = cir.cmp(lt, %20, %22) : !u64i, !cir.bool loc(#loc385)
    cir.brcond %23 ^bb11, ^bb15 loc(#loc385)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc386)
  ^bb12:  // pred: ^bb11
    %24 = cir.const #cir.int<0> : !s32i loc(#loc229)
    %25 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc230)
    %26 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc231)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !u64i), !cir.ptr<!s32i> loc(#loc232)
    cir.store %24, %27 : !s32i, !cir.ptr<!s32i> loc(#loc387)
    cir.br ^bb13 loc(#loc223)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc223)
  ^bb14:  // pred: ^bb13
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc233)
    %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc234)
    cir.store %29, %1 : !u64i, !cir.ptr<!u64i> loc(#loc388)
    cir.br ^bb10 loc(#loc383)
  ^bb15:  // pred: ^bb10
    cir.br ^bb16 loc(#loc223)
  ^bb16:  // pred: ^bb15
    %30 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc235)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc236)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %31 : !s32i), !cir.ptr<!s32i> loc(#loc237)
    %33 = cir.load %32 : !cir.ptr<!s32i>, !s32i loc(#loc235)
    cir.call @printIntLine(%33) : (!s32i) -> () loc(#loc238)
    %34 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc239)
    cir.delete.array %34 : <!s32i> loc(#loc239)
    cir.br ^bb17 loc(#loc212)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc190)
  } loc(#loc369)
  cir.func internal private @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc390)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc391)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc392)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc393)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc249)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc250)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc394)
    cir.br ^bb1 loc(#loc395)
  ^bb1:  // pred: ^bb0
    %6 = cir.const #cir.int<6> : !s32i loc(#loc254)
    cir.br ^bb2 loc(#loc252)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %6 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc252)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc255)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %7 = cir.const #cir.int<20> : !s32i loc(#loc256)
    cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc396)
    cir.br ^bb6 loc(#loc258)
  ^bb5:  // pred: ^bb2
    %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc259)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc259)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc260)
    cir.br ^bb6 loc(#loc261)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc253)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc397)
  ^bb8:  // pred: ^bb7
    %10 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc264)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc264)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc398)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc399)
    cir.store %13, %0 : !u64i, !cir.ptr<!u64i> loc(#loc400)
    %14 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc268)
    %15 = cir.call @_Znam(%14) : (!u64i) -> !cir.ptr<!void> loc(#loc269)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc401)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc401)
    cir.store %17, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc402)
    cir.br ^bb9 loc(#loc403)
  ^bb9:  // pred: ^bb8
    %18 = cir.const #cir.int<0> : !s32i loc(#loc275)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc275)
    cir.store %19, %1 : !u64i, !cir.ptr<!u64i> loc(#loc404)
    cir.br ^bb10 loc(#loc403)
  ^bb10:  // 2 preds: ^bb9, ^bb14
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc277)
    %21 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc278)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc278)
    %23 = cir.cmp(lt, %20, %22) : !u64i, !cir.bool loc(#loc405)
    cir.brcond %23 ^bb11, ^bb15 loc(#loc405)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc406)
  ^bb12:  // pred: ^bb11
    %24 = cir.const #cir.int<0> : !s32i loc(#loc280)
    %25 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc281)
    %26 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc282)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !u64i), !cir.ptr<!s32i> loc(#loc283)
    cir.store %24, %27 : !s32i, !cir.ptr<!s32i> loc(#loc407)
    cir.br ^bb13 loc(#loc274)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc274)
  ^bb14:  // pred: ^bb13
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc284)
    %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc285)
    cir.store %29, %1 : !u64i, !cir.ptr<!u64i> loc(#loc408)
    cir.br ^bb10 loc(#loc403)
  ^bb15:  // pred: ^bb10
    cir.br ^bb16 loc(#loc274)
  ^bb16:  // pred: ^bb15
    %30 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc286)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc287)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %31 : !s32i), !cir.ptr<!s32i> loc(#loc288)
    %33 = cir.load %32 : !cir.ptr<!s32i>, !s32i loc(#loc286)
    cir.call @printIntLine(%33) : (!s32i) -> () loc(#loc289)
    %34 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc290)
    cir.delete.array %34 : <!s32i> loc(#loc290)
    cir.br ^bb17 loc(#loc263)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc241)
  } loc(#loc389)
  cir.func @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_154goodEv() extra(#fn_attr1) {
    cir.call @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15L8goodG2B1Ev() : () -> () loc(#loc293)
    cir.call @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15L8goodG2B2Ev() : () -> () loc(#loc294)
    cir.return loc(#loc292)
  } loc(#loc409)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc18 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":126:19)
#loc20 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc21 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc23 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":46:1)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":142:1)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":59:9)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":59:13)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":60:9)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":60:28)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":61:9)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":61:31)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":62:9)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":62:31)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":63:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":63:41)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":130:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":130:16)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":130:26)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":131:9)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":131:14)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":48:5)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":48:9)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":50:13)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":50:12)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":50:5)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":51:5)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":128:5)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":51:12)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":53:5)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":54:5)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":122:5)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":64:9)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":107:17)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":107:16)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":65:9)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":106:9)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":74:35)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":74:44)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":74:57)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":74:28)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":74:13)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":74:68)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":75:13)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":78:13)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":75:17)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":75:33)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":76:13)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":77:17)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":79:20)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":79:21)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":79:30)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":79:33)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":79:47)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":79:13)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":79:48)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":80:34)
#loc77 = loc("/usr/include/netinet/in.h":249:5)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":80:13)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":81:39)
#loc80 = loc("/usr/include/netinet/in.h":251:20)
#loc81 = loc("/usr/include/netinet/in.h":33:15)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":81:13)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":82:38)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":82:32)
#loc85 = loc("/usr/include/netinet/in.h":250:15)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":82:13)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":82:46)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":83:13)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":86:13)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":83:22)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":83:54)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":83:55)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":83:64)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":83:78)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":83:17)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":83:84)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":84:13)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":85:17)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":87:13)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":90:13)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":87:24)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":87:38)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":87:17)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":87:57)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":88:13)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":89:17)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":91:35)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":91:49)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":91:55)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":91:28)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":91:13)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":91:59)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":92:13)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":95:13)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":92:17)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":92:33)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":93:13)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":94:17)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":97:31)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":97:45)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":97:58)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":97:76)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":97:79)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":97:26)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":97:13)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":97:80)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":98:13)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":101:13)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":98:17)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":98:31)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":98:47)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":98:61)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":99:13)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":100:17)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":103:39)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":103:25)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":103:13)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":105:25)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":105:20)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":105:13)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":105:36)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":108:9)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":111:9)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":108:13)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":108:29)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":109:9)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":110:26)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":110:13)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":112:9)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":115:9)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":112:13)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":112:29)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":113:9)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":114:26)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":114:13)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":123:5)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":126:9)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":127:9)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":129:5)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":141:5)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":133:21)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":133:28)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":133:38)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":133:9)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":134:37)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":46:6)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":134:28)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":134:46)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":134:9)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":135:9)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":138:9)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":135:18)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":135:14)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":135:21)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":135:33)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":136:9)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":137:29)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":137:13)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":137:24)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":137:25)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":135:40)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":135:39)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":139:22)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":139:33)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":139:34)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":139:9)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":140:19)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":149:1)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":178:1)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":166:9)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":166:16)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":166:26)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":167:9)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":167:14)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":151:5)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":151:9)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":153:13)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":153:12)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":153:5)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":154:5)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":164:5)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":154:12)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":156:5)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":158:19)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":158:9)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":159:9)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":162:16)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":162:9)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":163:9)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":165:5)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":177:5)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":169:21)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":169:28)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":169:38)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":169:9)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":170:37)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":149:13)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":170:28)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":170:46)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":170:9)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":171:9)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":174:9)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":171:18)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":171:14)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":171:21)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":171:33)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":172:9)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":173:29)
#loc230 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":173:13)
#loc231 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":173:24)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":173:25)
#loc233 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":171:40)
#loc234 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":171:39)
#loc235 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":175:22)
#loc236 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":175:33)
#loc237 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":175:34)
#loc238 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":175:9)
#loc239 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":176:19)
#loc240 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":181:1)
#loc241 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":210:1)
#loc242 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":198:9)
#loc243 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":198:16)
#loc244 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":198:26)
#loc245 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":199:9)
#loc246 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":199:14)
#loc247 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":183:5)
#loc248 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":183:9)
#loc249 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":185:13)
#loc250 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":185:12)
#loc251 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":185:5)
#loc252 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":186:5)
#loc253 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":196:5)
#loc254 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":186:12)
#loc255 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":188:5)
#loc256 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":190:16)
#loc257 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":190:9)
#loc258 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":191:9)
#loc259 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":194:19)
#loc260 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":194:9)
#loc261 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":195:9)
#loc262 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":197:5)
#loc263 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":209:5)
#loc264 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":201:21)
#loc265 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":201:28)
#loc266 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":201:38)
#loc267 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":201:9)
#loc268 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":202:37)
#loc269 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":181:13)
#loc270 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":202:28)
#loc271 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":202:46)
#loc272 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":202:9)
#loc273 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":203:9)
#loc274 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":206:9)
#loc275 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":203:18)
#loc276 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":203:14)
#loc277 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":203:21)
#loc278 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":203:33)
#loc279 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":204:9)
#loc280 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":205:29)
#loc281 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":205:13)
#loc282 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":205:24)
#loc283 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":205:25)
#loc284 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":203:40)
#loc285 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":203:39)
#loc286 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":207:22)
#loc287 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":207:33)
#loc288 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":207:34)
#loc289 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":207:9)
#loc290 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":208:19)
#loc291 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":212:1)
#loc292 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":216:1)
#loc293 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":214:5)
#loc294 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_15.cpp":215:5)
#loc295 = loc(fused[#loc1, #loc2])
#loc296 = loc(fused[#loc3, #loc4])
#loc297 = loc(fused[#loc5, #loc6])
#loc298 = loc(fused[#loc7, #loc8])
#loc299 = loc(fused[#loc9, #loc10])
#loc300 = loc(fused[#loc11, #loc12])
#loc301 = loc(fused[#loc13, #loc14])
#loc302 = loc(fused[#loc15, #loc16])
#loc303 = loc(fused[#loc17, #loc18])
#loc304 = loc(fused[#loc20, #loc21])
#loc305 = loc(fused[#loc22, #loc23])
#loc306 = loc(fused[#loc24, #loc25])
#loc307 = loc(fused[#loc26, #loc27])
#loc308 = loc(fused[#loc28, #loc29])
#loc309 = loc(fused[#loc30, #loc31])
#loc310 = loc(fused[#loc32, #loc33])
#loc311 = loc(fused[#loc34, #loc35])
#loc312 = loc(fused[#loc36, #loc37])
#loc313 = loc(fused[#loc36, #loc38])
#loc314 = loc(fused[#loc39, #loc40])
#loc315 = loc(fused[#loc41, #loc42])
#loc316 = loc(fused[#loc45, #loc43])
#loc317 = loc(fused[#loc46, #loc47])
#loc318 = loc(fused[#loc50, #loc51])
#loc319 = loc(fused[#loc52, #loc53])
#loc320 = loc(fused[#loc55, #loc56])
#loc321 = loc(fused[#loc61, #loc62])
#loc322 = loc(fused[#loc63, #loc64])
#loc323 = loc(fused[#loc65, #loc66])
#loc324 = loc(fused[#loc67, #loc64])
#loc325 = loc(fused[#loc69, #loc70])
#loc326 = loc(fused[#loc72, #loc73])
#loc327 = loc(fused[#loc74, #loc75])
#loc328 = loc(fused[#loc78, #loc76])
#loc329 = loc(fused[#loc82, #loc79])
#loc330 = loc(fused[#loc86, #loc87])
#loc331 = loc(fused[#loc88, #loc89])
#loc332 = loc(fused[#loc91, #loc92])
#loc333 = loc(fused[#loc93, #loc94])
#loc334 = loc(fused[#loc95, #loc96])
#loc335 = loc(fused[#loc97, #loc89])
#loc336 = loc(fused[#loc99, #loc100])
#loc337 = loc(fused[#loc103, #loc104])
#loc338 = loc(fused[#loc105, #loc100])
#loc339 = loc(fused[#loc111, #loc112])
#loc340 = loc(fused[#loc113, #loc114])
#loc341 = loc(fused[#loc115, #loc116])
#loc342 = loc(fused[#loc117, #loc114])
#loc343 = loc(fused[#loc121, #loc122])
#loc344 = loc(fused[#loc125, #loc126])
#loc345 = loc(fused[#loc127, #loc128])
#loc346 = loc(fused[#loc129, #loc130])
#loc347 = loc(fused[#loc132, #loc133])
#loc348 = loc(fused[#loc134, #loc128])
#loc349 = loc(fused[#loc138, #loc136])
#loc350 = loc(fused[#loc141, #loc142])
#loc351 = loc(fused[#loc143, #loc144])
#loc352 = loc(fused[#loc145, #loc146])
#loc353 = loc(fused[#loc147, #loc144])
#loc354 = loc(fused[#loc150, #loc151])
#loc355 = loc(fused[#loc152, #loc153])
#loc356 = loc(fused[#loc154, #loc151])
#loc357 = loc(fused[#loc160, #loc161])
#loc358 = loc(fused[#loc163, #loc164])
#loc359 = loc(fused[#loc162, #loc164])
#loc360 = loc(fused[#loc165, #loc164])
#loc361 = loc(fused[#loc168, #loc169])
#loc362 = loc(fused[#loc170, #loc169])
#loc363 = loc(fused[#loc171, #loc172])
#loc364 = loc(fused[#loc174, #loc173])
#loc365 = loc(fused[#loc175, #loc176])
#loc366 = loc(fused[#loc177, #loc172])
#loc367 = loc(fused[#loc179, #loc178])
#loc368 = loc(fused[#loc183, #loc182])
#loc369 = loc(fused[#loc189, #loc190])
#loc370 = loc(fused[#loc191, #loc192])
#loc371 = loc(fused[#loc191, #loc193])
#loc372 = loc(fused[#loc194, #loc195])
#loc373 = loc(fused[#loc196, #loc197])
#loc374 = loc(fused[#loc200, #loc198])
#loc375 = loc(fused[#loc201, #loc202])
#loc376 = loc(fused[#loc209, #loc208])
#loc377 = loc(fused[#loc211, #loc212])
#loc378 = loc(fused[#loc214, #loc215])
#loc379 = loc(fused[#loc213, #loc215])
#loc380 = loc(fused[#loc216, #loc215])
#loc381 = loc(fused[#loc219, #loc220])
#loc382 = loc(fused[#loc221, #loc220])
#loc383 = loc(fused[#loc222, #loc223])
#loc384 = loc(fused[#loc225, #loc224])
#loc385 = loc(fused[#loc226, #loc227])
#loc386 = loc(fused[#loc228, #loc223])
#loc387 = loc(fused[#loc230, #loc229])
#loc388 = loc(fused[#loc234, #loc233])
#loc389 = loc(fused[#loc240, #loc241])
#loc390 = loc(fused[#loc242, #loc243])
#loc391 = loc(fused[#loc242, #loc244])
#loc392 = loc(fused[#loc245, #loc246])
#loc393 = loc(fused[#loc247, #loc248])
#loc394 = loc(fused[#loc251, #loc249])
#loc395 = loc(fused[#loc252, #loc253])
#loc396 = loc(fused[#loc257, #loc256])
#loc397 = loc(fused[#loc262, #loc263])
#loc398 = loc(fused[#loc265, #loc266])
#loc399 = loc(fused[#loc264, #loc266])
#loc400 = loc(fused[#loc267, #loc266])
#loc401 = loc(fused[#loc270, #loc271])
#loc402 = loc(fused[#loc272, #loc271])
#loc403 = loc(fused[#loc273, #loc274])
#loc404 = loc(fused[#loc276, #loc275])
#loc405 = loc(fused[#loc277, #loc278])
#loc406 = loc(fused[#loc279, #loc274])
#loc407 = loc(fused[#loc281, #loc280])
#loc408 = loc(fused[#loc285, #loc284])
#loc409 = loc(fused[#loc291, #loc292])
