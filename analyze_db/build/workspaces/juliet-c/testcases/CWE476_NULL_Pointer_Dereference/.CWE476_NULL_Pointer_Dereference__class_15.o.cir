!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc115 = loc("../../testcasesupport/std_testcase.h":61:7)
!ty_TwoIntsClass = !cir.record<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__class_15.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc199)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printIntLine(!s32i) loc(#loc200)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc201)
  cir.func @_ZN41CWE476_NULL_Pointer_Dereference__class_153badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc203)
    cir.scope {
      %1 = cir.const #cir.int<6> : !s32i loc(#loc14)
      cir.switch (%1 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc16)
          cir.store %2, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc205)
          cir.break loc(#loc18)
        } loc(#loc15)
        cir.case(default, []) {
          %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc3)
          %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc3)
          cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc20)
          cir.break loc(#loc21)
        } loc(#loc19)
        cir.yield loc(#loc12)
      } loc(#loc12)
    } loc(#loc204)
    cir.scope {
      %1 = cir.const #cir.int<7> : !s32i loc(#loc24)
      cir.switch (%1 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc26)
          %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc27)
          %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc28)
          cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc29)
          %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc30)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc30)
          cir.call @_ZdlPv(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc31)
          cir.break loc(#loc32)
        } loc(#loc25)
        cir.case(default, []) {
          %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc34)
          %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc34)
          cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc35)
          cir.break loc(#loc36)
        } loc(#loc33)
        cir.yield loc(#loc22)
      } loc(#loc22)
    } loc(#loc206)
    cir.return loc(#loc9)
  } loc(#loc202)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data is NULL\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc37)
  cir.func internal private @_ZN41CWE476_NULL_Pointer_Dereference__class_15L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc208)
    cir.scope {
      %1 = cir.const #cir.int<6> : !s32i loc(#loc44)
      cir.switch (%1 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc46)
          cir.store %2, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc210)
          cir.break loc(#loc48)
        } loc(#loc45)
        cir.case(default, []) {
          %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc50)
          %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc50)
          cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc51)
          cir.break loc(#loc52)
        } loc(#loc49)
        cir.yield loc(#loc42)
      } loc(#loc42)
    } loc(#loc209)
    cir.scope {
      %1 = cir.const #cir.int<8> : !s32i loc(#loc55)
      cir.switch (%1 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc57)
          %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc57)
          cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc58)
          cir.break loc(#loc59)
        } loc(#loc56)
        cir.case(default, []) {
          cir.scope {
            %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc63)
            %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc64)
            %4 = cir.cmp(ne, %2, %3) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc213)
            cir.if %4 {
              %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc68)
              %6 = cir.get_member %5[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc27)
              %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc69)
              cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc70)
              %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc71)
              %9 = cir.cast(bitcast, %8 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc71)
              cir.call @_ZdlPv(%9) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc72)
            } else {
              %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc37)
              %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc37)
              cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc73)
            } loc(#loc214)
          } loc(#loc212)
          cir.break loc(#loc74)
        } loc(#loc60)
        cir.yield loc(#loc53)
      } loc(#loc53)
    } loc(#loc211)
    cir.return loc(#loc39)
  } loc(#loc207)
  cir.func internal private @_ZN41CWE476_NULL_Pointer_Dereference__class_15L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc216)
    cir.scope {
      %1 = cir.const #cir.int<6> : !s32i loc(#loc81)
      cir.switch (%1 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc83)
          cir.store %2, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc218)
          cir.break loc(#loc85)
        } loc(#loc82)
        cir.case(default, []) {
          %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc87)
          %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc87)
          cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc88)
          cir.break loc(#loc89)
        } loc(#loc86)
        cir.yield loc(#loc79)
      } loc(#loc79)
    } loc(#loc217)
    cir.scope {
      %1 = cir.const #cir.int<7> : !s32i loc(#loc92)
      cir.switch (%1 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc96)
            %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc97)
            %4 = cir.cmp(ne, %2, %3) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc221)
            cir.if %4 {
              %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc101)
              %6 = cir.get_member %5[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc27)
              %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc102)
              cir.call @printIntLine(%7) : (!s32i) -> () loc(#loc103)
              %8 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc104)
              %9 = cir.cast(bitcast, %8 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc104)
              cir.call @_ZdlPv(%9) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc105)
            } else {
              %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc106)
              %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc106)
              cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc107)
            } loc(#loc222)
          } loc(#loc220)
          cir.break loc(#loc108)
        } loc(#loc93)
        cir.case(default, []) {
          %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc110)
          %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc110)
          cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc111)
          cir.break loc(#loc112)
        } loc(#loc109)
        cir.yield loc(#loc90)
      } loc(#loc90)
    } loc(#loc219)
    cir.return loc(#loc76)
  } loc(#loc215)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc223)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc115)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc115)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc115)
    cir.return loc(#loc115)
  } loc(#loc115)
  cir.func internal private @_ZN41CWE476_NULL_Pointer_Dereference__class_15L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc225)
    cir.scope {
      %1 = cir.const #cir.int<5> : !s32i loc(#loc122)
      cir.switch (%1 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc124)
          %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc124)
          cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc125)
          cir.break loc(#loc126)
        } loc(#loc123)
        cir.case(default, []) {
          cir.scope {
            %2 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["tmpData", init] {alignment = 8 : i64} loc(#loc228)
            %3 = cir.const #cir.int<8> : !u64i loc(#loc229)
            %4 = cir.call @_Znwm(%3) : (!u64i) -> !cir.ptr<!void> loc(#loc228)
            %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc229)
            cir.call @_ZN12TwoIntsClassC2Ev(%5) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc131)
            cir.store %5, %2 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc228)
            %6 = cir.const #cir.int<0> : !s32i loc(#loc133)
            %7 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc134)
            %8 = cir.get_member %7[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc27)
            cir.store %6, %8 : !s32i, !cir.ptr<!s32i> loc(#loc230)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc135)
            %10 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc136)
            %11 = cir.get_member %10[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc137)
            cir.store %9, %11 : !s32i, !cir.ptr<!s32i> loc(#loc231)
            %12 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc138)
            cir.store %12, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc232)
          } loc(#loc227)
          cir.break loc(#loc140)
        } loc(#loc127)
        cir.yield loc(#loc120)
      } loc(#loc120)
    } loc(#loc226)
    cir.scope {
      %1 = cir.const #cir.int<7> : !s32i loc(#loc143)
      cir.switch (%1 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc145)
          %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc27)
          %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc146)
          cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc147)
          %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc148)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc148)
          cir.call @_ZdlPv(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc149)
          cir.break loc(#loc150)
        } loc(#loc144)
        cir.case(default, []) {
          %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc152)
          %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc152)
          cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc153)
          cir.break loc(#loc154)
        } loc(#loc151)
        cir.yield loc(#loc141)
      } loc(#loc141)
    } loc(#loc233)
    cir.return loc(#loc117)
  } loc(#loc224)
  cir.func internal private @_ZN41CWE476_NULL_Pointer_Dereference__class_15L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc235)
    cir.scope {
      %1 = cir.const #cir.int<6> : !s32i loc(#loc161)
      cir.switch (%1 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %2 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["tmpData", init] {alignment = 8 : i64} loc(#loc238)
            %3 = cir.const #cir.int<8> : !u64i loc(#loc239)
            %4 = cir.call @_Znwm(%3) : (!u64i) -> !cir.ptr<!void> loc(#loc238)
            %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc239)
            cir.call @_ZN12TwoIntsClassC2Ev(%5) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc166)
            cir.store %5, %2 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc238)
            %6 = cir.const #cir.int<0> : !s32i loc(#loc168)
            %7 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc169)
            %8 = cir.get_member %7[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc27)
            cir.store %6, %8 : !s32i, !cir.ptr<!s32i> loc(#loc240)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc170)
            %10 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc171)
            %11 = cir.get_member %10[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc137)
            cir.store %9, %11 : !s32i, !cir.ptr<!s32i> loc(#loc241)
            %12 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc172)
            cir.store %12, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc242)
          } loc(#loc237)
          cir.break loc(#loc174)
        } loc(#loc162)
        cir.case(default, []) {
          %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc176)
          %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc176)
          cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc177)
          cir.break loc(#loc178)
        } loc(#loc175)
        cir.yield loc(#loc159)
      } loc(#loc159)
    } loc(#loc236)
    cir.scope {
      %1 = cir.const #cir.int<7> : !s32i loc(#loc181)
      cir.switch (%1 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc183)
          %3 = cir.get_member %2[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc27)
          %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc184)
          cir.call @printIntLine(%4) : (!s32i) -> () loc(#loc185)
          %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc186)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc186)
          cir.call @_ZdlPv(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc187)
          cir.break loc(#loc188)
        } loc(#loc182)
        cir.case(default, []) {
          %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc190)
          %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc190)
          cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc191)
          cir.break loc(#loc192)
        } loc(#loc189)
        cir.yield loc(#loc179)
      } loc(#loc179)
    } loc(#loc243)
    cir.return loc(#loc156)
  } loc(#loc234)
  cir.func @_ZN41CWE476_NULL_Pointer_Dereference__class_154goodEv() extra(#fn_attr1) {
    cir.call @_ZN41CWE476_NULL_Pointer_Dereference__class_15L8goodB2G1Ev() : () -> () loc(#loc195)
    cir.call @_ZN41CWE476_NULL_Pointer_Dereference__class_15L8goodB2G2Ev() : () -> () loc(#loc196)
    cir.call @_ZN41CWE476_NULL_Pointer_Dereference__class_15L8goodG2B1Ev() : () -> () loc(#loc197)
    cir.call @_ZN41CWE476_NULL_Pointer_Dereference__class_15L8goodG2B2Ev() : () -> () loc(#loc198)
    cir.return loc(#loc194)
  } loc(#loc244)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__class_15.cpp":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":35:19)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc6 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc7 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc8 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":24:1)
#loc9 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":51:1)
#loc10 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":26:5)
#loc11 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":26:20)
#loc12 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":27:5)
#loc13 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":37:5)
#loc14 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":27:12)
#loc15 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":29:5)
#loc16 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":31:16)
#loc17 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":31:9)
#loc18 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":32:9)
#loc19 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":33:5)
#loc20 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":35:9)
#loc21 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":36:9)
#loc22 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":38:5)
#loc23 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":50:5)
#loc24 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":38:12)
#loc25 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":40:5)
#loc26 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":42:22)
#loc27 = loc("../../testcasesupport/std_testcase.h":64:13)
#loc28 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":42:28)
#loc29 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":42:9)
#loc30 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":44:16)
#loc31 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":24:6)
#loc32 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":45:9)
#loc33 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":46:5)
#loc34 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":48:19)
#loc35 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":48:9)
#loc36 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":49:9)
#loc37 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":87:23)
#loc38 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":58:1)
#loc39 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":91:1)
#loc40 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":60:5)
#loc41 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":60:20)
#loc42 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":61:5)
#loc43 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":71:5)
#loc44 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":61:12)
#loc45 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":63:5)
#loc46 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":65:16)
#loc47 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":65:9)
#loc48 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":66:9)
#loc49 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":67:5)
#loc50 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":69:19)
#loc51 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":69:9)
#loc52 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":70:9)
#loc53 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":72:5)
#loc54 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":90:5)
#loc55 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":72:12)
#loc56 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":74:5)
#loc57 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":76:19)
#loc58 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":76:9)
#loc59 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":77:9)
#loc60 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":78:5)
#loc61 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":80:9)
#loc62 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":88:9)
#loc63 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":80:13)
#loc64 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":80:21)
#loc65 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":81:9)
#loc66 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":84:9)
#loc67 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":86:9)
#loc68 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":82:26)
#loc69 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":82:32)
#loc70 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":82:13)
#loc71 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":83:20)
#loc72 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":58:13)
#loc73 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":87:13)
#loc74 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":89:9)
#loc75 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":94:1)
#loc76 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":127:1)
#loc77 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":96:5)
#loc78 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":96:20)
#loc79 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":97:5)
#loc80 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":107:5)
#loc81 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":97:12)
#loc82 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":99:5)
#loc83 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":101:16)
#loc84 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":101:9)
#loc85 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":102:9)
#loc86 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":103:5)
#loc87 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":105:19)
#loc88 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":105:9)
#loc89 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":106:9)
#loc90 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":108:5)
#loc91 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":126:5)
#loc92 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":108:12)
#loc93 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":110:5)
#loc94 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":112:9)
#loc95 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":120:9)
#loc96 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":112:13)
#loc97 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":112:21)
#loc98 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":113:9)
#loc99 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":116:9)
#loc100 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":118:9)
#loc101 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":114:26)
#loc102 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":114:32)
#loc103 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":114:13)
#loc104 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":115:20)
#loc105 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":94:13)
#loc106 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":119:23)
#loc107 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":119:13)
#loc108 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":121:9)
#loc109 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":122:5)
#loc110 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":124:19)
#loc111 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":124:9)
#loc112 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":125:9)
#loc113 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc114 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc116 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":130:1)
#loc117 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":162:1)
#loc118 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":132:5)
#loc119 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":132:20)
#loc120 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":133:5)
#loc121 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":148:5)
#loc122 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":133:12)
#loc123 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":135:5)
#loc124 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":137:19)
#loc125 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":137:9)
#loc126 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":138:9)
#loc127 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":139:5)
#loc128 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":140:5)
#loc129 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":146:5)
#loc130 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":141:9)
#loc131 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":141:38)
#loc132 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":141:34)
#loc133 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":142:27)
#loc134 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":142:9)
#loc135 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":143:27)
#loc136 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":143:9)
#loc137 = loc("../../testcasesupport/std_testcase.h":65:13)
#loc138 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":145:16)
#loc139 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":145:9)
#loc140 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":147:5)
#loc141 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":149:5)
#loc142 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":161:5)
#loc143 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":149:12)
#loc144 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":151:5)
#loc145 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":153:22)
#loc146 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":153:28)
#loc147 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":153:9)
#loc148 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":155:16)
#loc149 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":130:13)
#loc150 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":156:9)
#loc151 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":157:5)
#loc152 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":159:19)
#loc153 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":159:9)
#loc154 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":160:9)
#loc155 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":165:1)
#loc156 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":197:1)
#loc157 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":167:5)
#loc158 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":167:20)
#loc159 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":168:5)
#loc160 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":183:5)
#loc161 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":168:12)
#loc162 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":170:5)
#loc163 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":171:5)
#loc164 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":177:5)
#loc165 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":172:9)
#loc166 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":172:38)
#loc167 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":172:34)
#loc168 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":173:27)
#loc169 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":173:9)
#loc170 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":174:27)
#loc171 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":174:9)
#loc172 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":176:16)
#loc173 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":176:9)
#loc174 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":178:5)
#loc175 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":179:5)
#loc176 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":181:19)
#loc177 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":181:9)
#loc178 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":182:9)
#loc179 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":184:5)
#loc180 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":196:5)
#loc181 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":184:12)
#loc182 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":186:5)
#loc183 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":188:22)
#loc184 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":188:28)
#loc185 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":188:9)
#loc186 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":190:16)
#loc187 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":165:13)
#loc188 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":191:9)
#loc189 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":192:5)
#loc190 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":194:19)
#loc191 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":194:9)
#loc192 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":195:9)
#loc193 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":199:1)
#loc194 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":205:1)
#loc195 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":201:5)
#loc196 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":202:5)
#loc197 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":203:5)
#loc198 = loc("CWE476_NULL_Pointer_Dereference__class_15.cpp":204:5)
#loc199 = loc(fused[#loc1, #loc2])
#loc200 = loc(fused[#loc4, #loc5])
#loc201 = loc(fused[#loc6, #loc7])
#loc202 = loc(fused[#loc8, #loc9])
#loc203 = loc(fused[#loc10, #loc11])
#loc204 = loc(fused[#loc12, #loc13])
#loc205 = loc(fused[#loc17, #loc16])
#loc206 = loc(fused[#loc22, #loc23])
#loc207 = loc(fused[#loc38, #loc39])
#loc208 = loc(fused[#loc40, #loc41])
#loc209 = loc(fused[#loc42, #loc43])
#loc210 = loc(fused[#loc47, #loc46])
#loc211 = loc(fused[#loc53, #loc54])
#loc212 = loc(fused[#loc61, #loc62])
#loc213 = loc(fused[#loc63, #loc64])
#loc214 = loc(fused[#loc65, #loc66, #loc67, #loc62])
#loc215 = loc(fused[#loc75, #loc76])
#loc216 = loc(fused[#loc77, #loc78])
#loc217 = loc(fused[#loc79, #loc80])
#loc218 = loc(fused[#loc84, #loc83])
#loc219 = loc(fused[#loc90, #loc91])
#loc220 = loc(fused[#loc94, #loc95])
#loc221 = loc(fused[#loc96, #loc97])
#loc222 = loc(fused[#loc98, #loc99, #loc100, #loc95])
#loc223 = loc(fused[#loc113, #loc114])
#loc224 = loc(fused[#loc116, #loc117])
#loc225 = loc(fused[#loc118, #loc119])
#loc226 = loc(fused[#loc120, #loc121])
#loc227 = loc(fused[#loc128, #loc129])
#loc228 = loc(fused[#loc130, #loc131])
#loc229 = loc(fused[#loc132, #loc131])
#loc230 = loc(fused[#loc134, #loc133])
#loc231 = loc(fused[#loc136, #loc135])
#loc232 = loc(fused[#loc139, #loc138])
#loc233 = loc(fused[#loc141, #loc142])
#loc234 = loc(fused[#loc155, #loc156])
#loc235 = loc(fused[#loc157, #loc158])
#loc236 = loc(fused[#loc159, #loc160])
#loc237 = loc(fused[#loc163, #loc164])
#loc238 = loc(fused[#loc165, #loc166])
#loc239 = loc(fused[#loc167, #loc166])
#loc240 = loc(fused[#loc169, #loc168])
#loc241 = loc(fused[#loc171, #loc170])
#loc242 = loc(fused[#loc173, #loc172])
#loc243 = loc(fused[#loc179, #loc180])
#loc244 = loc(fused[#loc193, #loc194])
