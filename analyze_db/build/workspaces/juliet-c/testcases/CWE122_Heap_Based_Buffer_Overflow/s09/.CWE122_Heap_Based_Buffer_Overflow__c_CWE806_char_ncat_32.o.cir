!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc143)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc144)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc145)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc146)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc147)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc148)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc150)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc151)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc152)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc151)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc152)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc21)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc22)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc22)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc153)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc154)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc21)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc155)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc156)
    cir.scope {
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
      %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc30)
      %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc158)
      cir.if %13 {
        %14 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc32)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc33)
        %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc34)
        cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc32)
      } loc(#loc159)
    } loc(#loc157)
    cir.scope {
      %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc161)
      %11 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc38)
      %12 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
      cir.store %12, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc161)
      %13 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc40)
      %15 = cir.const #cir.int<65> : !s32i loc(#loc41)
      %16 = cir.const #cir.int<100> : !s32i loc(#loc42)
      %17 = cir.const #cir.int<1> : !s32i loc(#loc43)
      %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc42)
      %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc42)
      cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc162)
      %20 = cir.const #cir.int<0> : !s32i loc(#loc46)
      %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc46)
      %22 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
      %23 = cir.const #cir.int<100> : !s32i loc(#loc48)
      %24 = cir.const #cir.int<1> : !s32i loc(#loc49)
      %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc48)
      %26 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc50)
      cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc163)
      %27 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
      %28 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc52)
      cir.store %27, %28 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
    } loc(#loc160)
    cir.scope {
      %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc166)
      %11 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc57)
      %12 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
      cir.store %12, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc166)
      cir.scope {
        %13 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc168)
        %14 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc168)
        cir.store %14, %13 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc168)
        %15 = cir.get_global @strncat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc63)
        %16 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc64)
        %17 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
        %18 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc66)
        %19 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
        %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc66)
        %21 = cir.call @strncat(%16, %17, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc63)
        %22 = cir.const #cir.int<0> : !s32i loc(#loc68)
        %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc68)
        %24 = cir.const #cir.int<50> : !s32i loc(#loc69)
        %25 = cir.const #cir.int<1> : !s32i loc(#loc70)
        %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc69)
        %27 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc71)
        %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc71)
        cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc169)
        %29 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
        cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc73)
        %30 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc74)
        %31 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
        %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc75)
        cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc74)
      } loc(#loc167)
    } loc(#loc165)
    cir.return loc(#loc14)
  } loc(#loc149)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc171)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc78)
    cir.return loc(#loc77)
  } loc(#loc170)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc173)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc174)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc175)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc174)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc175)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc88)
    %4 = cir.const #cir.int<100> : !s32i loc(#loc89)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc89)
    %6 = cir.const #cir.int<1> : !u64i loc(#loc176)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc177)
    %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc88)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc178)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc179)
    cir.scope {
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
      %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc97)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc97)
      %13 = cir.cmp(eq, %10, %12) : !cir.ptr<!s8i>, !cir.bool loc(#loc181)
      cir.if %13 {
        %14 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc99)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc100)
        %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc101)
        cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr) loc(#loc99)
      } loc(#loc182)
    } loc(#loc180)
    cir.scope {
      %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc184)
      %11 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc105)
      %12 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
      cir.store %12, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc184)
      %13 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc107)
      %15 = cir.const #cir.int<65> : !s32i loc(#loc108)
      %16 = cir.const #cir.int<50> : !s32i loc(#loc109)
      %17 = cir.const #cir.int<1> : !s32i loc(#loc110)
      %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc109)
      %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc109)
      cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc185)
      %20 = cir.const #cir.int<0> : !s32i loc(#loc113)
      %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc113)
      %22 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
      %23 = cir.const #cir.int<50> : !s32i loc(#loc115)
      %24 = cir.const #cir.int<1> : !s32i loc(#loc116)
      %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc115)
      %26 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc117)
      cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc186)
      %27 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
      %28 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc119)
      cir.store %27, %28 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc187)
    } loc(#loc183)
    cir.scope {
      %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc189)
      %11 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc124)
      %12 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
      cir.store %12, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc189)
      cir.scope {
        %13 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc191)
        %14 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc191)
        cir.store %14, %13 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc191)
        %15 = cir.get_global @strncat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc130)
        %16 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc131)
        %17 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
        %18 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc133)
        %19 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
        %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc133)
        %21 = cir.call @strncat(%16, %17, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc130)
        %22 = cir.const #cir.int<0> : !s32i loc(#loc135)
        %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc135)
        %24 = cir.const #cir.int<50> : !s32i loc(#loc136)
        %25 = cir.const #cir.int<1> : !s32i loc(#loc137)
        %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc136)
        %27 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc138)
        %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc138)
        cir.store %23, %28 : !s8i, !cir.ptr<!s8i> loc(#loc192)
        %29 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
        cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc140)
        %30 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc141)
        %31 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
        %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc142)
        cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc141)
      } loc(#loc190)
    } loc(#loc188)
    cir.return loc(#loc81)
  } loc(#loc172)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s09/CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":152:1)
#loc6 = loc("/usr/include/string.h":153:29)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("/usr/include/stdlib.h":687:1)
#loc12 = loc("/usr/include/stdlib.h":687:32)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":23:1)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":48:1)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":25:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":25:12)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":26:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":26:25)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":27:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":27:25)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":28:20)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":28:27)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":28:31)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":28:42)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":28:43)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":28:5)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":29:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":29:33)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":29:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":29:17)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":29:23)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":29:24)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":29:30)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":29:29)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":30:5)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":36:5)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":31:9)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":31:24)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":31:23)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":33:16)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":33:22)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":33:27)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":33:31)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":33:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":33:32)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":34:23)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":34:9)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":34:14)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":34:18)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":34:19)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":35:21)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":35:10)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":35:9)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":37:5)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":47:5)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":38:9)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":38:24)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":38:23)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":39:9)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":46:9)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":40:13)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":40:29)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":42:13)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":42:21)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":42:27)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":42:33)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":42:40)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":43:26)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":43:18)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":43:21)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":43:13)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":44:23)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":44:13)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":45:13)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":45:18)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":82:1)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":85:1)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":84:5)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":84:13)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":55:1)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":80:1)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":57:5)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":57:12)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":58:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":58:25)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":59:5)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":59:25)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":60:20)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":60:27)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":60:31)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":60:42)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":60:43)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":60:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":61:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":61:33)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":61:9)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":61:17)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":61:23)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":61:24)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":61:30)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":61:29)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":62:5)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":68:5)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":63:9)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":63:24)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":63:23)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":65:16)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":65:22)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":65:27)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":65:30)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":65:9)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":65:31)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":66:22)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":66:9)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":66:14)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":66:17)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":66:18)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":67:21)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":67:10)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":67:9)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":69:5)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":79:5)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":70:9)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":70:24)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":70:23)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":71:9)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":78:9)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":72:13)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":72:29)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":74:13)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":74:21)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":74:27)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":74:33)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":74:40)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":75:26)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":75:18)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":75:21)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":75:13)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":76:23)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":76:13)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":77:13)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE806_char_ncat_32.c":77:18)
#loc143 = loc(fused[#loc1, #loc2])
#loc144 = loc(fused[#loc3, #loc4])
#loc145 = loc(fused[#loc5, #loc6])
#loc146 = loc(fused[#loc7, #loc8])
#loc147 = loc(fused[#loc9, #loc10])
#loc148 = loc(fused[#loc11, #loc12])
#loc149 = loc(fused[#loc13, #loc14])
#loc150 = loc(fused[#loc15, #loc16])
#loc151 = loc(fused[#loc17, #loc18])
#loc152 = loc(fused[#loc19, #loc20])
#loc153 = loc(fused[#loc23, #loc24])
#loc154 = loc(fused[#loc22, #loc24])
#loc155 = loc(fused[#loc21, #loc25])
#loc156 = loc(fused[#loc26, #loc25])
#loc157 = loc(fused[#loc27, #loc28])
#loc158 = loc(fused[#loc29, #loc30])
#loc159 = loc(fused[#loc31, #loc28])
#loc160 = loc(fused[#loc35, #loc36])
#loc161 = loc(fused[#loc37, #loc38])
#loc162 = loc(fused[#loc44, #loc45])
#loc163 = loc(fused[#loc47, #loc46])
#loc164 = loc(fused[#loc53, #loc51])
#loc165 = loc(fused[#loc54, #loc55])
#loc166 = loc(fused[#loc56, #loc57])
#loc167 = loc(fused[#loc59, #loc60])
#loc168 = loc(fused[#loc61, #loc62])
#loc169 = loc(fused[#loc71, #loc68])
#loc170 = loc(fused[#loc76, #loc77])
#loc171 = loc(fused[#loc78, #loc79])
#loc172 = loc(fused[#loc80, #loc81])
#loc173 = loc(fused[#loc82, #loc83])
#loc174 = loc(fused[#loc84, #loc85])
#loc175 = loc(fused[#loc86, #loc87])
#loc176 = loc(fused[#loc90, #loc91])
#loc177 = loc(fused[#loc89, #loc91])
#loc178 = loc(fused[#loc88, #loc92])
#loc179 = loc(fused[#loc93, #loc92])
#loc180 = loc(fused[#loc94, #loc95])
#loc181 = loc(fused[#loc96, #loc97])
#loc182 = loc(fused[#loc98, #loc95])
#loc183 = loc(fused[#loc102, #loc103])
#loc184 = loc(fused[#loc104, #loc105])
#loc185 = loc(fused[#loc111, #loc112])
#loc186 = loc(fused[#loc114, #loc113])
#loc187 = loc(fused[#loc120, #loc118])
#loc188 = loc(fused[#loc121, #loc122])
#loc189 = loc(fused[#loc123, #loc124])
#loc190 = loc(fused[#loc126, #loc127])
#loc191 = loc(fused[#loc128, #loc129])
#loc192 = loc(fused[#loc138, #loc135])
