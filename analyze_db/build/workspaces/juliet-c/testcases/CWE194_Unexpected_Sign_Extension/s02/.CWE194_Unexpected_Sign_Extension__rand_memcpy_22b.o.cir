!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc7 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":24:66)
#loc8 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":24:72)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":43:71)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":43:77)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":59:71)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":59:77)
#loc59 = loc(fused[#loc7, #loc8])
#loc67 = loc(fused[#loc25, #loc26])
#loc74 = loc(fused[#loc44, #loc45])
module @"/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.global "private" external @CWE194_Unexpected_Sign_Extension__rand_memcpy_22_badGlobal : !s32i {alignment = 4 : i64} loc(#loc56)
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc57)
  cir.func @CWE194_Unexpected_Sign_Extension__rand_memcpy_22_badSource(%arg0: !s16i loc(fused[#loc7, #loc8])) -> !s16i extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc59)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["__retval"] {alignment = 2 : i64} loc(#loc6)
    cir.store %arg0, %0 : !s16i, !cir.ptr<!s16i> loc(#loc9)
    cir.scope {
      %4 = cir.get_global @CWE194_Unexpected_Sign_Extension__rand_memcpy_22_badGlobal : !cir.ptr<!s32i> loc(#loc56)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc12)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc12)
      cir.if %6 {
        %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc14)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc14)
        %9 = cir.binop(and, %7, %8) : !s32i loc(#loc14)
        %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc14)
        %11 = cir.ternary(%10, true {
          %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc14)
          %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc14)
          %16 = cir.const #cir.int<30> : !s32i loc(#loc14)
          %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc14)
          %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc14)
          %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc14)
          %20 = cir.const #cir.int<15> : !s32i loc(#loc14)
          %21 = cir.shift(left, %19 : !u32i, %20 : !s32i) -> !u32i loc(#loc14)
          %22 = cir.binop(xor, %17, %21) : !u32i loc(#loc14)
          %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc14)
          %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc14)
          %25 = cir.binop(xor, %22, %24) : !u32i loc(#loc14)
          cir.yield %25 : !u32i loc(#loc14)
        }, false {
          %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc14)
          %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc14)
          %16 = cir.const #cir.int<30> : !s32i loc(#loc14)
          %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc14)
          %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc14)
          %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc14)
          %20 = cir.const #cir.int<15> : !s32i loc(#loc14)
          %21 = cir.shift(left, %19 : !u32i, %20 : !s32i) -> !u32i loc(#loc14)
          %22 = cir.binop(xor, %17, %21) : !u32i loc(#loc14)
          %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc14)
          %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc14)
          %25 = cir.binop(xor, %22, %24) : !u32i loc(#loc14)
          %26 = cir.unary(minus, %25) : !u32i, !u32i loc(#loc14)
          %27 = cir.const #cir.int<1> : !s32i loc(#loc14)
          %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc14)
          %29 = cir.binop(sub, %26, %28) : !u32i loc(#loc14)
          cir.yield %29 : !u32i loc(#loc14)
        }) : (!cir.bool) -> !u32i loc(#loc14)
        %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc14)
        %13 = cir.cast(integral, %12 : !s32i), !s16i loc(#loc14)
        cir.store %13, %0 : !s16i, !cir.ptr<!s16i> loc(#loc62)
      } loc(#loc61)
    } loc(#loc60)
    %2 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc16)
    cir.store %2, %1 : !s16i, !cir.ptr<!s16i> loc(#loc63)
    %3 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc63)
    cir.return %3 : !s16i loc(#loc63)
  } loc(#loc58)
  cir.global "private" external @CWE194_Unexpected_Sign_Extension__rand_memcpy_22_goodG2B1Global : !s32i {alignment = 4 : i64} loc(#loc64)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc22)
  cir.func @CWE194_Unexpected_Sign_Extension__rand_memcpy_22_goodG2B1Source(%arg0: !s16i loc(fused[#loc25, #loc26])) -> !s16i extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc67)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["__retval"] {alignment = 2 : i64} loc(#loc24)
    cir.store %arg0, %0 : !s16i, !cir.ptr<!s16i> loc(#loc27)
    cir.scope {
      %4 = cir.get_global @CWE194_Unexpected_Sign_Extension__rand_memcpy_22_goodG2B1Global : !cir.ptr<!s32i> loc(#loc64)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc30)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc30)
      cir.if %6 {
        %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc22)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc22)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc34)
      } else {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc35)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc36)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc35)
        %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc35)
        cir.store %10, %0 : !s16i, !cir.ptr<!s16i> loc(#loc70)
      } loc(#loc69)
    } loc(#loc68)
    %2 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc38)
    cir.store %2, %1 : !s16i, !cir.ptr<!s16i> loc(#loc71)
    %3 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc71)
    cir.return %3 : !s16i loc(#loc71)
  } loc(#loc66)
  cir.global "private" external @CWE194_Unexpected_Sign_Extension__rand_memcpy_22_goodG2B2Global : !s32i {alignment = 4 : i64} loc(#loc72)
  cir.func @CWE194_Unexpected_Sign_Extension__rand_memcpy_22_goodG2B2Source(%arg0: !s16i loc(fused[#loc44, #loc45])) -> !s16i extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc74)
    %1 = cir.alloca !s16i, !cir.ptr<!s16i>, ["__retval"] {alignment = 2 : i64} loc(#loc43)
    cir.store %arg0, %0 : !s16i, !cir.ptr<!s16i> loc(#loc46)
    cir.scope {
      %4 = cir.get_global @CWE194_Unexpected_Sign_Extension__rand_memcpy_22_goodG2B2Global : !cir.ptr<!s32i> loc(#loc72)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc49)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc49)
      cir.if %6 {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc51)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc52)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc51)
        %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc51)
        cir.store %10, %0 : !s16i, !cir.ptr<!s16i> loc(#loc77)
      } loc(#loc76)
    } loc(#loc75)
    %2 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc54)
    cir.store %2, %1 : !s16i, !cir.ptr<!s16i> loc(#loc78)
    %3 = cir.load %1 : !cir.ptr<!s16i>, !s16i loc(#loc78)
    cir.return %3 : !s16i loc(#loc78)
  } loc(#loc73)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":0:0)
#loc1 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":22:1)
#loc2 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":22:12)
#loc3 = loc("/usr/include/stdlib.h":573:1)
#loc4 = loc("/usr/include/stdlib.h":573:24)
#loc5 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":24:1)
#loc6 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":32:1)
#loc9 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":25:1)
#loc10 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":26:5)
#loc11 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":30:5)
#loc12 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":26:8)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":27:5)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":29:23)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":29:9)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":31:12)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":31:5)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":39:1)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":39:12)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":48:19)
#loc23 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":43:1)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":56:1)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":44:1)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":45:5)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":54:5)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":45:8)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":46:5)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":49:5)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":51:5)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":48:9)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":53:16)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":53:20)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":53:9)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":55:12)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":55:5)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":40:1)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":40:12)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":59:1)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":67:1)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":60:1)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":61:5)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":65:5)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":61:8)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":62:5)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":64:16)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":64:20)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":64:9)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":66:12)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_22b.c":66:5)
#loc56 = loc(fused[#loc1, #loc2])
#loc57 = loc(fused[#loc3, #loc4])
#loc58 = loc(fused[#loc5, #loc6])
#loc60 = loc(fused[#loc10, #loc11])
#loc61 = loc(fused[#loc13, #loc11])
#loc62 = loc(fused[#loc15, #loc14])
#loc63 = loc(fused[#loc17, #loc16])
#loc64 = loc(fused[#loc18, #loc19])
#loc65 = loc(fused[#loc20, #loc21])
#loc66 = loc(fused[#loc23, #loc24])
#loc68 = loc(fused[#loc28, #loc29])
#loc69 = loc(fused[#loc31, #loc32, #loc33, #loc29])
#loc70 = loc(fused[#loc37, #loc36])
#loc71 = loc(fused[#loc39, #loc38])
#loc72 = loc(fused[#loc40, #loc41])
#loc73 = loc(fused[#loc42, #loc43])
#loc75 = loc(fused[#loc47, #loc48])
#loc76 = loc(fused[#loc50, #loc48])
#loc77 = loc(fused[#loc53, #loc52])
#loc78 = loc(fused[#loc55, #loc54])
