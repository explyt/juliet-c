!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @printDoubleLine(!cir.double) loc(#loc147)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc149)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc7)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc7)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc7)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc7)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc7)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc7)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc7)
    cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc150)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc11)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc11)
        cir.condition(%9) loc(#loc11)
      } do {
        cir.scope {
          cir.break loc(#loc13)
        } loc(#loc152)
        cir.yield loc(#loc10)
      } loc(#loc151)
    } loc(#loc151)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc16)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc16)
        cir.condition(%9) loc(#loc16)
      } do {
        cir.scope {
          cir.scope {
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc156)
            cir.scope {
              %9 = cir.const #cir.int<0> : !s32i loc(#loc24)
              cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc158)
              cir.for : cond {
                %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc26)
                %11 = cir.const #cir.int<10> : !s32i loc(#loc27)
                %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc159)
                cir.condition(%12) loc(#loc28)
              } body {
                cir.scope {
                  %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc30)
                  %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc31)
                  %12 = cir.ptr_stride(%10 : !cir.ptr<!cir.double>, %11 : !s32i), !cir.ptr<!cir.double> loc(#loc32)
                  %13 = cir.load %12 : !cir.ptr<!cir.double>, !cir.double loc(#loc30)
                  cir.call @printDoubleLine(%13) : (!cir.double) -> () loc(#loc33)
                } loc(#loc160)
                cir.yield loc(#loc23)
              } step {
                %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc34)
                %11 = cir.unary(inc, %10) nsw : !s32i, !s32i loc(#loc35)
                cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc161)
                cir.yield loc(#loc157)
              } loc(#loc157)
            } loc(#loc157)
          } loc(#loc155)
          cir.break loc(#loc36)
        } loc(#loc154)
        cir.yield loc(#loc15)
      } loc(#loc153)
    } loc(#loc153)
    cir.return loc(#loc4)
  } loc(#loc148)
  cir.func no_proto @CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc163)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc39)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc164)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc41)
    cir.return loc(#loc38)
  } loc(#loc162)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc166)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc47)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc47)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc47)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc47)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc47)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc47)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc47)
    cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc167)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc51)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc51)
        cir.condition(%9) loc(#loc51)
      } do {
        cir.scope {
          cir.break loc(#loc53)
        } loc(#loc169)
        cir.yield loc(#loc50)
      } loc(#loc168)
    } loc(#loc168)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc56)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc56)
        cir.condition(%9) loc(#loc56)
      } do {
        cir.scope {
          cir.scope {
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc173)
            cir.scope {
              %9 = cir.const #cir.int<0> : !s32i loc(#loc64)
              cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc175)
              cir.for : cond {
                %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc66)
                %11 = cir.const #cir.int<10> : !s32i loc(#loc67)
                %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc176)
                cir.condition(%12) loc(#loc68)
              } body {
                cir.scope {
                  %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc70)
                  %11 = cir.cast(int_to_float, %10 : !s32i), !cir.double loc(#loc70)
                  %12 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc71)
                  %13 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc72)
                  %14 = cir.ptr_stride(%12 : !cir.ptr<!cir.double>, %13 : !s32i), !cir.ptr<!cir.double> loc(#loc73)
                  cir.store %11, %14 : !cir.double, !cir.ptr<!cir.double> loc(#loc178)
                } loc(#loc177)
                cir.yield loc(#loc63)
              } step {
                %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc74)
                %11 = cir.unary(inc, %10) nsw : !s32i, !s32i loc(#loc75)
                cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc179)
                cir.yield loc(#loc174)
              } loc(#loc174)
            } loc(#loc174)
          } loc(#loc172)
          cir.scope {
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc181)
            cir.scope {
              %9 = cir.const #cir.int<0> : !s32i loc(#loc82)
              cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc183)
              cir.for : cond {
                %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc84)
                %11 = cir.const #cir.int<10> : !s32i loc(#loc85)
                %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc184)
                cir.condition(%12) loc(#loc86)
              } body {
                cir.scope {
                  %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc88)
                  %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc89)
                  %12 = cir.ptr_stride(%10 : !cir.ptr<!cir.double>, %11 : !s32i), !cir.ptr<!cir.double> loc(#loc90)
                  %13 = cir.load %12 : !cir.ptr<!cir.double>, !cir.double loc(#loc88)
                  cir.call @printDoubleLine(%13) : (!cir.double) -> () loc(#loc91)
                } loc(#loc185)
                cir.yield loc(#loc81)
              } step {
                %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc92)
                %11 = cir.unary(inc, %10) nsw : !s32i, !s32i loc(#loc93)
                cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc186)
                cir.yield loc(#loc182)
              } loc(#loc182)
            } loc(#loc182)
          } loc(#loc180)
          cir.break loc(#loc94)
        } loc(#loc171)
        cir.yield loc(#loc55)
      } loc(#loc170)
    } loc(#loc170)
    cir.return loc(#loc44)
  } loc(#loc165)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc188)
    %1 = cir.const #cir.int<10> : !s32i loc(#loc99)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc99)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc99)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc99)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc99)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc99)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc99)
    cir.store %7, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc189)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc103)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc103)
        cir.condition(%9) loc(#loc103)
      } do {
        cir.scope {
          cir.scope {
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc193)
            cir.scope {
              %9 = cir.const #cir.int<0> : !s32i loc(#loc111)
              cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc195)
              cir.for : cond {
                %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc113)
                %11 = cir.const #cir.int<10> : !s32i loc(#loc114)
                %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc196)
                cir.condition(%12) loc(#loc115)
              } body {
                cir.scope {
                  %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc117)
                  %11 = cir.cast(int_to_float, %10 : !s32i), !cir.double loc(#loc117)
                  %12 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc118)
                  %13 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc119)
                  %14 = cir.ptr_stride(%12 : !cir.ptr<!cir.double>, %13 : !s32i), !cir.ptr<!cir.double> loc(#loc120)
                  cir.store %11, %14 : !cir.double, !cir.ptr<!cir.double> loc(#loc198)
                } loc(#loc197)
                cir.yield loc(#loc110)
              } step {
                %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc121)
                %11 = cir.unary(inc, %10) nsw : !s32i, !s32i loc(#loc122)
                cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc199)
                cir.yield loc(#loc194)
              } loc(#loc194)
            } loc(#loc194)
          } loc(#loc192)
          cir.break loc(#loc123)
        } loc(#loc191)
        cir.yield loc(#loc102)
      } loc(#loc190)
    } loc(#loc190)
    cir.scope {
      cir.while {
        %8 = cir.const #cir.int<1> : !s32i loc(#loc126)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc126)
        cir.condition(%9) loc(#loc126)
      } do {
        cir.scope {
          cir.scope {
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc203)
            cir.scope {
              %9 = cir.const #cir.int<0> : !s32i loc(#loc134)
              cir.store %9, %8 : !s32i, !cir.ptr<!s32i> loc(#loc205)
              cir.for : cond {
                %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc136)
                %11 = cir.const #cir.int<10> : !s32i loc(#loc137)
                %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc206)
                cir.condition(%12) loc(#loc138)
              } body {
                cir.scope {
                  %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc140)
                  %11 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc141)
                  %12 = cir.ptr_stride(%10 : !cir.ptr<!cir.double>, %11 : !s32i), !cir.ptr<!cir.double> loc(#loc142)
                  %13 = cir.load %12 : !cir.ptr<!cir.double>, !cir.double loc(#loc140)
                  cir.call @printDoubleLine(%13) : (!cir.double) -> () loc(#loc143)
                } loc(#loc207)
                cir.yield loc(#loc133)
              } step {
                %10 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc144)
                %11 = cir.unary(inc, %10) nsw : !s32i, !s32i loc(#loc145)
                cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc208)
                cir.yield loc(#loc204)
              } loc(#loc204)
            } loc(#loc204)
          } loc(#loc202)
          cir.break loc(#loc146)
        } loc(#loc201)
        cir.yield loc(#loc125)
      } loc(#loc200)
    } loc(#loc200)
    cir.return loc(#loc96)
  } loc(#loc187)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":38:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":38:41)
#loc3 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":22:1)
#loc4 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":44:1)
#loc5 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":24:5)
#loc6 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":24:14)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":25:22)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":25:5)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":26:5)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":31:5)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":26:11)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":27:5)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":30:9)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":32:5)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":43:5)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":32:11)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":33:5)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":35:9)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":41:9)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":36:13)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":36:17)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":37:13)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":40:13)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":37:19)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":37:17)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":37:22)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":37:24)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":37:23)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":38:13)
#loc30 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":39:33)
#loc31 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":39:38)
#loc32 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":39:39)
#loc33 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":39:17)
#loc34 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":37:29)
#loc35 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":37:28)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":42:9)
#loc37 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":113:1)
#loc38 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":117:1)
#loc39 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":115:5)
#loc40 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":115:13)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":116:5)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":116:13)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":51:1)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":80:1)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":53:5)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":53:14)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":54:22)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":54:5)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":55:5)
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":60:5)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":55:11)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":56:5)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":59:9)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":61:5)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":79:5)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":61:11)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":62:5)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":64:9)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":70:9)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":65:13)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":65:17)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":66:13)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":69:13)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":66:19)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":66:17)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":66:22)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":66:24)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":66:23)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":67:13)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":68:35)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":68:17)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":68:22)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":68:23)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":66:29)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":66:28)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":71:9)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":77:9)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":72:13)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":72:17)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":73:13)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":76:13)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":73:19)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":73:17)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":73:22)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":73:24)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":73:23)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":74:13)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":75:33)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":75:38)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":75:39)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":75:17)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":73:29)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":73:28)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":78:9)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":83:1)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":111:1)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":85:5)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":85:14)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":86:22)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":86:5)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":87:5)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":98:5)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":87:11)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":88:5)
#loc105 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":90:9)
#loc106 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":96:9)
#loc107 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":91:13)
#loc108 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":91:17)
#loc109 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":92:13)
#loc110 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":95:13)
#loc111 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":92:19)
#loc112 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":92:17)
#loc113 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":92:22)
#loc114 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":92:24)
#loc115 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":92:23)
#loc116 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":93:13)
#loc117 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":94:35)
#loc118 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":94:17)
#loc119 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":94:22)
#loc120 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":94:23)
#loc121 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":92:29)
#loc122 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":92:28)
#loc123 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":97:9)
#loc124 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":99:5)
#loc125 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":110:5)
#loc126 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":99:11)
#loc127 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":100:5)
#loc128 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":102:9)
#loc129 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":108:9)
#loc130 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":103:13)
#loc131 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":103:17)
#loc132 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":104:13)
#loc133 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":107:13)
#loc134 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":104:19)
#loc135 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":104:17)
#loc136 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":104:22)
#loc137 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":104:24)
#loc138 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":104:23)
#loc139 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":105:13)
#loc140 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":106:33)
#loc141 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":106:38)
#loc142 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":106:39)
#loc143 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":106:17)
#loc144 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":104:29)
#loc145 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":104:28)
#loc146 = loc("CWE457_Use_of_Uninitialized_Variable__double_array_alloca_no_init_16.c":109:9)
#loc147 = loc(fused[#loc1, #loc2])
#loc148 = loc(fused[#loc3, #loc4])
#loc149 = loc(fused[#loc5, #loc6])
#loc150 = loc(fused[#loc8, #loc7])
#loc151 = loc(fused[#loc9, #loc10])
#loc152 = loc(fused[#loc12, #loc10])
#loc153 = loc(fused[#loc14, #loc15])
#loc154 = loc(fused[#loc17, #loc15])
#loc155 = loc(fused[#loc18, #loc19])
#loc156 = loc(fused[#loc20, #loc21])
#loc157 = loc(fused[#loc22, #loc23])
#loc158 = loc(fused[#loc25, #loc24])
#loc159 = loc(fused[#loc26, #loc27])
#loc160 = loc(fused[#loc29, #loc23])
#loc161 = loc(fused[#loc35, #loc34])
#loc162 = loc(fused[#loc37, #loc38])
#loc163 = loc(fused[#loc39, #loc40])
#loc164 = loc(fused[#loc41, #loc42])
#loc165 = loc(fused[#loc43, #loc44])
#loc166 = loc(fused[#loc45, #loc46])
#loc167 = loc(fused[#loc48, #loc47])
#loc168 = loc(fused[#loc49, #loc50])
#loc169 = loc(fused[#loc52, #loc50])
#loc170 = loc(fused[#loc54, #loc55])
#loc171 = loc(fused[#loc57, #loc55])
#loc172 = loc(fused[#loc58, #loc59])
#loc173 = loc(fused[#loc60, #loc61])
#loc174 = loc(fused[#loc62, #loc63])
#loc175 = loc(fused[#loc65, #loc64])
#loc176 = loc(fused[#loc66, #loc67])
#loc177 = loc(fused[#loc69, #loc63])
#loc178 = loc(fused[#loc71, #loc70])
#loc179 = loc(fused[#loc75, #loc74])
#loc180 = loc(fused[#loc76, #loc77])
#loc181 = loc(fused[#loc78, #loc79])
#loc182 = loc(fused[#loc80, #loc81])
#loc183 = loc(fused[#loc83, #loc82])
#loc184 = loc(fused[#loc84, #loc85])
#loc185 = loc(fused[#loc87, #loc81])
#loc186 = loc(fused[#loc93, #loc92])
#loc187 = loc(fused[#loc95, #loc96])
#loc188 = loc(fused[#loc97, #loc98])
#loc189 = loc(fused[#loc100, #loc99])
#loc190 = loc(fused[#loc101, #loc102])
#loc191 = loc(fused[#loc104, #loc102])
#loc192 = loc(fused[#loc105, #loc106])
#loc193 = loc(fused[#loc107, #loc108])
#loc194 = loc(fused[#loc109, #loc110])
#loc195 = loc(fused[#loc112, #loc111])
#loc196 = loc(fused[#loc113, #loc114])
#loc197 = loc(fused[#loc116, #loc110])
#loc198 = loc(fused[#loc118, #loc117])
#loc199 = loc(fused[#loc122, #loc121])
#loc200 = loc(fused[#loc124, #loc125])
#loc201 = loc(fused[#loc127, #loc125])
#loc202 = loc(fused[#loc128, #loc129])
#loc203 = loc(fused[#loc130, #loc131])
#loc204 = loc(fused[#loc132, #loc133])
#loc205 = loc(fused[#loc135, #loc134])
#loc206 = loc(fused[#loc136, #loc137])
#loc207 = loc(fused[#loc139, #loc133])
#loc208 = loc(fused[#loc145, #loc144])
