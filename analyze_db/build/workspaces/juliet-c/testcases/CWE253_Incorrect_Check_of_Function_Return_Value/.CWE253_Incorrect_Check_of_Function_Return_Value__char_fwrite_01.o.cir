!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @fwrite(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" external @stdout : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc45)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"fwrite failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc8)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01_bad() extra(#fn_attr) {
    cir.br ^bb1 loc(#loc48)
  ^bb1:  // pred: ^bb0
    %0 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc13)
    %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc3)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc3)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc49)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc50)
    %5 = cir.const #cir.int<6> : !u64i loc(#loc51)
    %6 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc45)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc19)
    %8 = cir.call @fwrite(%3, %4, %5, %7) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc13)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc20)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc20)
    %11 = cir.cmp(lt, %8, %10) : !u64i, !cir.bool loc(#loc52)
    cir.brcond %11 ^bb2, ^bb3 loc(#loc53)
  ^bb2:  // pred: ^bb1
    %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc8)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc8)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc22)
    cir.br ^bb3 loc(#loc12)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc12)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc10)
  } loc(#loc47)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc55)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc25)
    cir.return loc(#loc24)
  } loc(#loc54)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.br ^bb1 loc(#loc57)
  ^bb1:  // pred: ^bb0
    %0 = cir.get_global @fwrite : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc31)
    %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc32)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc32)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc58)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc59)
    %5 = cir.const #cir.int<6> : !u64i loc(#loc60)
    %6 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc45)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc38)
    %8 = cir.call @fwrite(%3, %4, %5, %7) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc31)
    %9 = cir.const #cir.int<6> : !u64i loc(#loc61)
    %10 = cir.cmp(ne, %8, %9) : !u64i, !cir.bool loc(#loc62)
    cir.brcond %10 ^bb2, ^bb3 loc(#loc63)
  ^bb2:  // pred: ^bb1
    %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc42)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    cir.br ^bb3 loc(#loc30)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc30)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc28)
  } loc(#loc56)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":0:0)
#loc1 = loc("/usr/include/stdio.h":745:1)
#loc2 = loc("/usr/include/stdio.h":746:43)
#loc3 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":28:24)
#loc4 = loc("/usr/include/stdio.h":150:1)
#loc5 = loc("/usr/include/stdio.h":150:14)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":30:19)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":24:1)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":32:1)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":28:5)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":31:5)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":28:9)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":28:16)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":28:34)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":28:45)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":28:48)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":28:63)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":28:66)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":28:76)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":29:5)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":30:9)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":47:1)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":50:1)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":49:5)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":49:11)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":38:1)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":45:1)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":41:5)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":44:5)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":41:9)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":41:24)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":41:16)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":41:34)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":41:45)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":41:48)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":41:63)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":41:66)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":41:77)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":41:92)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":42:5)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":43:19)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fwrite_01.c":43:9)
#loc44 = loc(fused[#loc1, #loc2])
#loc45 = loc(fused[#loc4, #loc5])
#loc46 = loc(fused[#loc6, #loc7])
#loc47 = loc(fused[#loc9, #loc10])
#loc48 = loc(fused[#loc11, #loc12])
#loc49 = loc(fused[#loc14, #loc3])
#loc50 = loc(fused[#loc15, #loc16])
#loc51 = loc(fused[#loc17, #loc18])
#loc52 = loc(fused[#loc13, #loc20])
#loc53 = loc(fused[#loc21, #loc12])
#loc54 = loc(fused[#loc23, #loc24])
#loc55 = loc(fused[#loc25, #loc26])
#loc56 = loc(fused[#loc27, #loc28])
#loc57 = loc(fused[#loc29, #loc30])
#loc58 = loc(fused[#loc33, #loc32])
#loc59 = loc(fused[#loc34, #loc35])
#loc60 = loc(fused[#loc36, #loc37])
#loc61 = loc(fused[#loc39, #loc40])
#loc62 = loc(fused[#loc31, #loc40])
#loc63 = loc(fused[#loc41, #loc30])
