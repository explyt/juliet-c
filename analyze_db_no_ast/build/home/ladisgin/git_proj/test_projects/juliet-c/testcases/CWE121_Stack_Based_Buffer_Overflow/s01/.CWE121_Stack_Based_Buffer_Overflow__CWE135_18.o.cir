!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<[#cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<65> : !s32i, #cir.int<0> : !s32i]> : !cir.array<!s32i x 43> {alignment = 4 : i64} loc(#loc1)
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc94)
  cir.func private  @wcscpy(!cir.ptr<!s32i>, !cir.ptr<!s32i>) -> !cir.ptr<!s32i> extra(#fn_attr) loc(#loc95)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc96)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__CWE135_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc98)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc99)
    %2 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dest", init] {alignment = 8 : i64} loc(#loc100)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc16)
    cir.store %3, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc101)
    cir.goto "source" loc(#loc102)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc20)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s32i x 43>> loc(#loc1)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 43>>), !cir.ptr<!s32i> loc(#loc1)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc1)
    cir.store %6, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc103)
    cir.goto "sink" loc(#loc104)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc24)
    %7 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc25)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc26)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc26)
    %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc25)
    cir.store %10, %1 : !u64i, !cir.ptr<!u64i> loc(#loc99)
    %11 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc15)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc15)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc15)
    %15 = cir.const #cir.int<4> : !u64i loc(#loc15)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc15)
    %17 = cir.alloca !u8i, !cir.ptr<!u8i>, %16 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc15)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc15)
    cir.store %18, %2 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc100)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc27)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc27)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc28)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc28)
    %23 = cir.call @wcscpy(%20, %22) : (!cir.ptr<!s32i>, !cir.ptr<!s32i>) -> !cir.ptr<!s32i> extra(#fn_attr) loc(#loc29)
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc30)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc30)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc31)
    cir.return loc(#loc9)
  } loc(#loc97)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__CWE135_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc106)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc107)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    cir.return loc(#loc33)
  } loc(#loc105)
  cir.func private  @wcslen(!cir.ptr<!s32i>) -> !u64i extra(#fn_attr) loc(#loc108)
  cir.func private  @printWLine(!cir.ptr<!s32i>) loc(#loc109)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc111)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc112)
    %2 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dest", init] {alignment = 8 : i64} loc(#loc113)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc50)
    cir.store %3, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc114)
    cir.goto "source" loc(#loc115)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc54)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s32i x 43>> loc(#loc55)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 43>>), !cir.ptr<!s32i> loc(#loc55)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc55)
    cir.store %6, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc116)
    cir.goto "sink" loc(#loc117)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc59)
    %7 = cir.get_global @wcslen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s32i>)>> loc(#loc60)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc61)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc61)
    %10 = cir.call @wcslen(%9) : (!cir.ptr<!s32i>) -> !u64i extra(#fn_attr) loc(#loc60)
    cir.store %10, %1 : !u64i, !cir.ptr<!u64i> loc(#loc112)
    %11 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc49)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc49)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc49)
    %15 = cir.const #cir.int<4> : !u64i loc(#loc49)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc49)
    %17 = cir.alloca !u8i, !cir.ptr<!u8i>, %16 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc49)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc49)
    cir.store %18, %2 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc113)
    %19 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc62)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc62)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc63)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc63)
    %23 = cir.call @wcscpy(%20, %22) : (!cir.ptr<!s32i>, !cir.ptr<!s32i>) -> !cir.ptr<!s32i> extra(#fn_attr) loc(#loc64)
    %24 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc65)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc65)
    cir.call @printWLine(%25) : (!cir.ptr<!s32i>) -> () loc(#loc66)
    cir.return loc(#loc43)
  } loc(#loc110)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\00" : !cir.array<!s8i x 43>> : !cir.array<!s8i x 43> {alignment = 1 : i64} loc(#loc67)
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc118)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc120)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc121)
    %2 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dest", init] {alignment = 8 : i64} loc(#loc122)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc78)
    cir.store %3, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc123)
    cir.goto "source" loc(#loc124)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc82)
    %4 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 43>> loc(#loc67)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 43>>), !cir.ptr<!s8i> loc(#loc67)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc67)
    cir.store %6, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc125)
    cir.goto "sink" loc(#loc126)
  ^bb2:  // no predecessors
    cir.label "sink" loc(#loc86)
    %7 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc87)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc88)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc88)
    %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc87)
    cir.store %10, %1 : !u64i, !cir.ptr<!u64i> loc(#loc121)
    %11 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc77)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc77)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc77)
    %14 = cir.binop(add, %11, %13) : !u64i loc(#loc77)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc77)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc77)
    %17 = cir.binop(mul, %14, %16) : !u64i loc(#loc77)
    %18 = cir.alloca !u8i, !cir.ptr<!u8i>, %17 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc77)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc77)
    cir.store %19, %2 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc122)
    %20 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc89)
    %21 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc90)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc90)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc91)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc91)
    %25 = cir.call @strcpy(%22, %24) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc89)
    %26 = cir.load %2 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc92)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc92)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    cir.return loc(#loc71)
  } loc(#loc119)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":34:20)
#loc2 = loc("/usr/include/string.h":407:1)
#loc3 = loc("/usr/include/string.h":408:33)
#loc4 = loc("/usr/include/wchar.h":98:1)
#loc5 = loc("/usr/include/wchar.h":100:14)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":27:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":44:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":29:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":29:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":39:9)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":39:45)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":40:9)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":40:31)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":30:12)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":30:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":31:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":31:10)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":32:1)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":34:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":35:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":35:10)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":36:1)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":39:26)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":39:41)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":41:22)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":41:28)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":41:15)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":42:27)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":42:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":90:1)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":94:1)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":92:5)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":92:13)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":93:5)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":93:13)
#loc38 = loc("/usr/include/wchar.h":247:1)
#loc39 = loc("/usr/include/wchar.h":247:51)
#loc40 = loc("../../../testcasesupport/std_testcase_io.h":16:1)
#loc41 = loc("../../../testcasesupport/std_testcase_io.h":16:37)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":51:1)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":68:1)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":53:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":53:12)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":63:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":63:48)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":64:9)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":64:31)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":54:12)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":54:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":55:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":55:10)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":56:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":58:20)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":58:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":59:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":59:10)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":60:1)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":63:26)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":63:44)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":65:22)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":65:28)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":65:15)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":66:31)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":66:9)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":78:20)
#loc68 = loc("/usr/include/string.h":141:1)
#loc69 = loc("/usr/include/string.h":142:14)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":71:1)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":88:1)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":73:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":73:12)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":83:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":83:45)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":84:9)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":84:31)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":74:12)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":74:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":75:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":75:10)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":76:1)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":78:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":79:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":79:10)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":80:1)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":83:26)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":83:41)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":85:15)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":85:22)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":85:28)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":86:27)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE135_18.c":86:9)
#loc94 = loc(fused[#loc2, #loc3])
#loc95 = loc(fused[#loc4, #loc5])
#loc96 = loc(fused[#loc6, #loc7])
#loc97 = loc(fused[#loc8, #loc9])
#loc98 = loc(fused[#loc10, #loc11])
#loc99 = loc(fused[#loc12, #loc13])
#loc100 = loc(fused[#loc14, #loc15])
#loc101 = loc(fused[#loc17, #loc16])
#loc102 = loc(fused[#loc18, #loc19])
#loc103 = loc(fused[#loc21, #loc1])
#loc104 = loc(fused[#loc22, #loc23])
#loc105 = loc(fused[#loc32, #loc33])
#loc106 = loc(fused[#loc34, #loc35])
#loc107 = loc(fused[#loc36, #loc37])
#loc108 = loc(fused[#loc38, #loc39])
#loc109 = loc(fused[#loc40, #loc41])
#loc110 = loc(fused[#loc42, #loc43])
#loc111 = loc(fused[#loc44, #loc45])
#loc112 = loc(fused[#loc46, #loc47])
#loc113 = loc(fused[#loc48, #loc49])
#loc114 = loc(fused[#loc51, #loc50])
#loc115 = loc(fused[#loc52, #loc53])
#loc116 = loc(fused[#loc56, #loc55])
#loc117 = loc(fused[#loc57, #loc58])
#loc118 = loc(fused[#loc68, #loc69])
#loc119 = loc(fused[#loc70, #loc71])
#loc120 = loc(fused[#loc72, #loc73])
#loc121 = loc(fused[#loc74, #loc75])
#loc122 = loc(fused[#loc76, #loc77])
#loc123 = loc(fused[#loc79, #loc78])
#loc124 = loc(fused[#loc80, #loc81])
#loc125 = loc(fused[#loc83, #loc67])
#loc126 = loc(fused[#loc84, #loc85])
