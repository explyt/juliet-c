!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc41 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":100:10)
#loc42 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":100:14)
#loc43 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":100:20)
#loc44 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":100:32)
#loc125 = loc(fused[#loc41, #loc42])
#loc126 = loc(fused[#loc43, #loc44])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__fopen_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc109)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc4)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc110)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__fopen_06_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc112)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc113)
    %2 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc13)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc3)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc3)
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc4)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc4)
    %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc13)
    cir.store %7, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc114)
    cir.br ^bb1 loc(#loc115)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.int<5> : !s32i loc(#loc18)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc19)
    %10 = cir.cmp(eq, %8, %9) : !s32i, !cir.bool loc(#loc116)
    cir.brcond %10 ^bb2, ^bb3 loc(#loc117)
  ^bb2:  // pred: ^bb1
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc21)
    %12 = cir.call @fclose(%11) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc22)
    cir.br ^bb3 loc(#loc17)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc17)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc8)
  } loc(#loc111)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__fopen_06_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc119)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc25)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc120)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc27)
    cir.return loc(#loc24)
  } loc(#loc118)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc121)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc122)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc123)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc35)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc36)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc37)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc38)
  cir.func @main(%arg0: !s32i loc(fused[#loc41, #loc42]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc43, #loc44])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc125)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc126)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc40)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc45)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc45)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc46)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc47)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc47)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc48)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc35)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc35)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    %8 = cir.get_global @CWE690_NULL_Deref_From_Return__fopen_06_good : !cir.ptr<!cir.func<!void ()>> loc(#loc127)
    cir.call @CWE690_NULL_Deref_From_Return__fopen_06_good() : () -> () loc(#loc50)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc36)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc37)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    %13 = cir.get_global @CWE690_NULL_Deref_From_Return__fopen_06_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc128)
    cir.call @CWE690_NULL_Deref_From_Return__fopen_06_bad() : () -> () loc(#loc54)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc38)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc57)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc129)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    cir.return %17 : !s32i loc(#loc129)
  } loc(#loc124)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc59)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc131)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc64)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc132)
    %2 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc66)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc67)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc67)
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc68)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc68)
    %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc66)
    cir.store %7, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc133)
    cir.br ^bb1 loc(#loc134)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.int<5> : !s32i loc(#loc73)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc74)
    %10 = cir.cmp(ne, %8, %9) : !s32i, !cir.bool loc(#loc135)
    cir.brcond %10 ^bb2, ^bb3 loc(#loc136)
  ^bb2:  // pred: ^bb1
    %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc59)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    cir.br ^bb8 loc(#loc76)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc137)
  ^bb4:  // pred: ^bb3
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc81)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc82)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc82)
    %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc138)
    cir.brcond %16 ^bb5, ^bb6 loc(#loc139)
  ^bb5:  // pred: ^bb4
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc84)
    %18 = cir.call @fclose(%17) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc85)
    cir.br ^bb6 loc(#loc80)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc80)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc72)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc72)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc61)
  } loc(#loc130)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc141)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc90)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc142)
    %2 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc92)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc93)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc93)
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc94)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc94)
    %7 = cir.call @fopen(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc92)
    cir.store %7, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc143)
    cir.br ^bb1 loc(#loc144)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.int<5> : !s32i loc(#loc99)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc100)
    %10 = cir.cmp(eq, %8, %9) : !s32i, !cir.bool loc(#loc145)
    cir.brcond %10 ^bb2, ^bb7 loc(#loc146)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc147)
  ^bb3:  // pred: ^bb2
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc104)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc105)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc105)
    %14 = cir.cmp(ne, %11, %13) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc148)
    cir.brcond %14 ^bb4, ^bb5 loc(#loc149)
  ^bb4:  // pred: ^bb3
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc107)
    %16 = cir.call @fclose(%15) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc108)
    cir.br ^bb5 loc(#loc103)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc103)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc98)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc98)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc87)
  } loc(#loc140)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__fopen_06.c":0:0)
#loc1 = loc("/usr/include/stdio.h":264:1)
#loc2 = loc("/usr/include/stdio.h":266:3)
#loc3 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":32:18)
#loc4 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":32:30)
#loc5 = loc("/usr/include/stdio.h":184:1)
#loc6 = loc("/usr/include/stdio.h":184:36)
#loc7 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":26:1)
#loc8 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":38:1)
#loc9 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":28:5)
#loc10 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":28:12)
#loc11 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":30:12)
#loc12 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":30:5)
#loc13 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":32:12)
#loc14 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":32:5)
#loc15 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":32:34)
#loc16 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":33:5)
#loc17 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":37:5)
#loc18 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":33:8)
#loc19 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":33:27)
#loc20 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":34:5)
#loc21 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":36:16)
#loc22 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":36:9)
#loc23 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":85:1)
#loc24 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":89:1)
#loc25 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":87:5)
#loc26 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":87:14)
#loc27 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":88:5)
#loc28 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":88:14)
#loc29 = loc("/usr/include/stdlib.h":575:1)
#loc30 = loc("/usr/include/stdlib.h":575:41)
#loc31 = loc("/usr/include/time.h":76:1)
#loc32 = loc("/usr/include/time.h":76:38)
#loc33 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc35 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":105:15)
#loc36 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":107:15)
#loc37 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":110:15)
#loc38 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":112:15)
#loc39 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":100:1)
#loc40 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":115:1)
#loc45 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":101:1)
#loc46 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":103:27)
#loc47 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":103:22)
#loc48 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":103:5)
#loc49 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":105:5)
#loc50 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":106:5)
#loc51 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":106:50)
#loc52 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":107:5)
#loc53 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":110:5)
#loc54 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":111:5)
#loc55 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":111:49)
#loc56 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":112:5)
#loc57 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":114:12)
#loc58 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":114:5)
#loc59 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":55:19)
#loc60 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":45:1)
#loc61 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":65:1)
#loc62 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":47:5)
#loc63 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":47:12)
#loc64 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":49:12)
#loc65 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":49:5)
#loc66 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":51:12)
#loc67 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":51:18)
#loc68 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":51:30)
#loc69 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":51:5)
#loc70 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":51:34)
#loc71 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":52:5)
#loc72 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":64:5)
#loc73 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":52:8)
#loc74 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":52:27)
#loc75 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":53:5)
#loc76 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":56:5)
#loc77 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":58:5)
#loc78 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":55:9)
#loc79 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":60:9)
#loc80 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":63:9)
#loc81 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":60:13)
#loc82 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":60:21)
#loc83 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":61:9)
#loc84 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":62:20)
#loc85 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":62:13)
#loc86 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":68:1)
#loc87 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":83:1)
#loc88 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":70:5)
#loc89 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":70:12)
#loc90 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":72:12)
#loc91 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":72:5)
#loc92 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":74:12)
#loc93 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":74:18)
#loc94 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":74:30)
#loc95 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":74:5)
#loc96 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":74:34)
#loc97 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":75:5)
#loc98 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":82:5)
#loc99 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":75:8)
#loc100 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":75:27)
#loc101 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":76:5)
#loc102 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":78:9)
#loc103 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":81:9)
#loc104 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":78:13)
#loc105 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":78:21)
#loc106 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":79:9)
#loc107 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":80:20)
#loc108 = loc("CWE690_NULL_Deref_From_Return__fopen_06.c":80:13)
#loc109 = loc(fused[#loc1, #loc2])
#loc110 = loc(fused[#loc5, #loc6])
#loc111 = loc(fused[#loc7, #loc8])
#loc112 = loc(fused[#loc9, #loc10])
#loc113 = loc(fused[#loc12, #loc11])
#loc114 = loc(fused[#loc14, #loc15])
#loc115 = loc(fused[#loc16, #loc17])
#loc116 = loc(fused[#loc18, #loc19])
#loc117 = loc(fused[#loc20, #loc17])
#loc118 = loc(fused[#loc23, #loc24])
#loc119 = loc(fused[#loc25, #loc26])
#loc120 = loc(fused[#loc27, #loc28])
#loc121 = loc(fused[#loc29, #loc30])
#loc122 = loc(fused[#loc31, #loc32])
#loc123 = loc(fused[#loc33, #loc34])
#loc124 = loc(fused[#loc39, #loc40])
#loc127 = loc(fused[#loc50, #loc51])
#loc128 = loc(fused[#loc54, #loc55])
#loc129 = loc(fused[#loc58, #loc57])
#loc130 = loc(fused[#loc60, #loc61])
#loc131 = loc(fused[#loc62, #loc63])
#loc132 = loc(fused[#loc65, #loc64])
#loc133 = loc(fused[#loc69, #loc70])
#loc134 = loc(fused[#loc71, #loc72])
#loc135 = loc(fused[#loc73, #loc74])
#loc136 = loc(fused[#loc75, #loc76, #loc77, #loc72])
#loc137 = loc(fused[#loc79, #loc80])
#loc138 = loc(fused[#loc81, #loc82])
#loc139 = loc(fused[#loc83, #loc80])
#loc140 = loc(fused[#loc86, #loc87])
#loc141 = loc(fused[#loc88, #loc89])
#loc142 = loc(fused[#loc91, #loc90])
#loc143 = loc(fused[#loc95, #loc96])
#loc144 = loc(fused[#loc97, #loc98])
#loc145 = loc(fused[#loc99, #loc100])
#loc146 = loc(fused[#loc101, #loc98])
#loc147 = loc(fused[#loc102, #loc103])
#loc148 = loc(fused[#loc104, #loc105])
#loc149 = loc(fused[#loc106, #loc103])
