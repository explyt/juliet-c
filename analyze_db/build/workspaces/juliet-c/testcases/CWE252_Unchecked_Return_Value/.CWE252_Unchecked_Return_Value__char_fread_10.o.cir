!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fread_10.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" external @globalTrue : !s32i {alignment = 4 : i64} loc(#loc95)
  cir.func private @fread(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc96)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc97)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fread_10_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc95)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc11)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc11)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc102)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc103)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc102)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc102)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc18)
          cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc103)
          %7 = cir.get_global @fread : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc19)
          %8 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc104)
          %10 = cir.const #cir.int<1> : !u64i loc(#loc105)
          %11 = cir.const #cir.int<100> : !s32i loc(#loc24)
          %12 = cir.const #cir.int<1> : !s32i loc(#loc25)
          %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc24)
          %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc24)
          %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc97)
          %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc26)
          %17 = cir.call @fread(%9, %10, %14, %16) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc19)
        } loc(#loc101)
      } loc(#loc100)
    } loc(#loc99)
    cir.return loc(#loc8)
  } loc(#loc98)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fread_10_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc107)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc29)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc108)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc31)
    cir.return loc(#loc28)
  } loc(#loc106)
  cir.global "private" external @globalFalse : !s32i {alignment = 4 : i64} loc(#loc109)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc110)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc37)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"fread failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc38)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc109)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc43)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc43)
      cir.if %2 {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc37)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc37)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc47)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc115)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc116)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc115)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc115)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc53)
          cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc116)
          cir.scope {
            %7 = cir.get_global @fread : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc56)
            %8 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
            %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc118)
            %10 = cir.const #cir.int<1> : !u64i loc(#loc119)
            %11 = cir.const #cir.int<100> : !s32i loc(#loc61)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc62)
            %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc61)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc61)
            %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc97)
            %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc63)
            %17 = cir.call @fread(%9, %10, %14, %16) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc56)
            %18 = cir.const #cir.int<100> : !s32i loc(#loc64)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc65)
            %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc64)
            %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc64)
            %22 = cir.cmp(ne, %17, %21) : !u64i, !cir.bool loc(#loc120)
            cir.if %22 {
              %23 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc38)
              %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc38)
              cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc67)
            } loc(#loc121)
          } loc(#loc117)
        } loc(#loc114)
      } loc(#loc113)
    } loc(#loc112)
    cir.return loc(#loc40)
  } loc(#loc111)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc95)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc72)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc72)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc126)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc127)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc126)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc126)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc79)
          cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
          cir.scope {
            %7 = cir.get_global @fread : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc82)
            %8 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
            %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc129)
            %10 = cir.const #cir.int<1> : !u64i loc(#loc130)
            %11 = cir.const #cir.int<100> : !s32i loc(#loc87)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc88)
            %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc87)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc87)
            %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc97)
            %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc89)
            %17 = cir.call @fread(%9, %10, %14, %16) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc82)
            %18 = cir.const #cir.int<100> : !s32i loc(#loc90)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc91)
            %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc90)
            %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc90)
            %22 = cir.cmp(ne, %17, %21) : !u64i, !cir.bool loc(#loc131)
            cir.if %22 {
              %23 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc93)
              %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc93)
              cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc94)
            } loc(#loc132)
          } loc(#loc128)
        } loc(#loc125)
      } loc(#loc124)
    } loc(#loc123)
    cir.return loc(#loc69)
  } loc(#loc122)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fread_10.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase.h":116:1)
#loc2 = loc("../../testcasesupport/std_testcase.h":116:12)
#loc3 = loc("/usr/include/stdio.h":738:1)
#loc4 = loc("/usr/include/stdio.h":740:3)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":24:1)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":37:1)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":26:5)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":36:5)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":26:8)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":27:5)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":28:9)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":35:9)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":31:13)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":31:36)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":32:13)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":32:27)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":34:13)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":34:27)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":34:19)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":34:33)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":34:44)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":34:56)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":34:60)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":34:64)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":86:1)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":90:1)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":88:5)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":88:11)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":89:5)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":89:11)
#loc33 = loc("../../testcasesupport/std_testcase.h":117:1)
#loc34 = loc("../../testcasesupport/std_testcase.h":117:12)
#loc35 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc36 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":49:19)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":61:27)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":44:1)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":65:1)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":46:5)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":64:5)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":46:8)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":47:5)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":50:5)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":52:5)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":49:9)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":53:9)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":63:9)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":56:13)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":56:36)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":57:13)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":57:27)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":59:13)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":62:13)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":59:17)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":59:31)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":59:23)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":59:37)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":59:48)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":59:60)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":59:64)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":59:68)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":59:78)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":59:82)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":60:13)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":61:17)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":68:1)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":84:1)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":70:5)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":83:5)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":70:8)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":71:5)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":72:9)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":82:9)
#loc76 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":75:13)
#loc77 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":75:36)
#loc78 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":76:13)
#loc79 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":76:27)
#loc80 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":78:13)
#loc81 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":81:13)
#loc82 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":78:17)
#loc83 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":78:31)
#loc84 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":78:23)
#loc85 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":78:37)
#loc86 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":78:48)
#loc87 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":78:60)
#loc88 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":78:64)
#loc89 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":78:68)
#loc90 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":78:78)
#loc91 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":78:82)
#loc92 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":79:13)
#loc93 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":80:27)
#loc94 = loc("CWE252_Unchecked_Return_Value__char_fread_10.c":80:17)
#loc95 = loc(fused[#loc1, #loc2])
#loc96 = loc(fused[#loc3, #loc4])
#loc97 = loc(fused[#loc5, #loc6])
#loc98 = loc(fused[#loc7, #loc8])
#loc99 = loc(fused[#loc9, #loc10])
#loc100 = loc(fused[#loc12, #loc10])
#loc101 = loc(fused[#loc13, #loc14])
#loc102 = loc(fused[#loc15, #loc16])
#loc103 = loc(fused[#loc17, #loc18])
#loc104 = loc(fused[#loc21, #loc20])
#loc105 = loc(fused[#loc22, #loc23])
#loc106 = loc(fused[#loc27, #loc28])
#loc107 = loc(fused[#loc29, #loc30])
#loc108 = loc(fused[#loc31, #loc32])
#loc109 = loc(fused[#loc33, #loc34])
#loc110 = loc(fused[#loc35, #loc36])
#loc111 = loc(fused[#loc39, #loc40])
#loc112 = loc(fused[#loc41, #loc42])
#loc113 = loc(fused[#loc44, #loc45, #loc46, #loc42])
#loc114 = loc(fused[#loc48, #loc49])
#loc115 = loc(fused[#loc50, #loc51])
#loc116 = loc(fused[#loc52, #loc53])
#loc117 = loc(fused[#loc54, #loc55])
#loc118 = loc(fused[#loc58, #loc57])
#loc119 = loc(fused[#loc59, #loc60])
#loc120 = loc(fused[#loc56, #loc65])
#loc121 = loc(fused[#loc66, #loc55])
#loc122 = loc(fused[#loc68, #loc69])
#loc123 = loc(fused[#loc70, #loc71])
#loc124 = loc(fused[#loc73, #loc71])
#loc125 = loc(fused[#loc74, #loc75])
#loc126 = loc(fused[#loc76, #loc77])
#loc127 = loc(fused[#loc78, #loc79])
#loc128 = loc(fused[#loc80, #loc81])
#loc129 = loc(fused[#loc84, #loc83])
#loc130 = loc(fused[#loc85, #loc86])
#loc131 = loc(fused[#loc82, #loc91])
#loc132 = loc(fused[#loc92, #loc81])
