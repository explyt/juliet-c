!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc75)
  cir.global "private" constant cir_private @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc76)
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc77)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc78)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc79)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc81)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc82)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc83)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc19)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc84)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc21)
    %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc21)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc23)
    %8 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc24)
    cir.store %5, %8 : !s8i, !cir.ptr<!s8i> loc(#loc85)
    cir.scope {
      %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc87)
      %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc88)
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
      cir.store %11, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc87)
      %12 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
      cir.store %12, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc88)
      cir.scope {
        %13 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc76)
        %14 = cir.get_global @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc76)
        cir.copy %14 to %13 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc76)
        %15 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc33)
        %16 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
        %17 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc35)
        %18 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc36)
        %19 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc37)
        %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc36)
        %21 = cir.const #cir.int<1> : !s32i loc(#loc38)
        %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc38)
        %23 = cir.binop(add, %20, %22) : !u64i loc(#loc90)
        %24 = cir.call @strncpy(%16, %17, %23) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc33)
        %25 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
        cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc40)
      } loc(#loc89)
    } loc(#loc86)
    cir.return loc(#loc12)
  } loc(#loc80)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc92)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc43)
    cir.return loc(#loc42)
  } loc(#loc91)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc94)
    %1 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc95)
    %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc96)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc53)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc97)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc55)
    %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc55)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %8 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc58)
    cir.store %5, %8 : !s8i, !cir.ptr<!s8i> loc(#loc98)
    cir.scope {
      %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc100)
      %10 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc101)
      %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
      cir.store %11, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc100)
      %12 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
      cir.store %12, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc101)
      cir.scope {
        %13 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc75)
        %14 = cir.get_global @__const.goodG2B.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc75)
        cir.copy %14 to %13 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc75)
        %15 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc67)
        %16 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
        %17 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc69)
        %18 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc70)
        %19 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc71)
        %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc70)
        %21 = cir.const #cir.int<1> : !s32i loc(#loc72)
        %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc72)
        %23 = cir.binop(add, %20, %22) : !u64i loc(#loc103)
        %24 = cir.call @strncpy(%16, %17, %23) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc67)
        %25 = cir.load %10 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
        cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc74)
      } loc(#loc102)
    } loc(#loc99)
    cir.return loc(#loc46)
  } loc(#loc93)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":68:13)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":68:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":41:13)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":41:33)
#loc5 = loc("/usr/include/string.h":144:1)
#loc6 = loc("/usr/include/string.h":146:14)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":28:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":48:1)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":30:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":30:12)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":31:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":31:26)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":32:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":32:29)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":35:12)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":35:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":36:15)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":36:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":36:10)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":36:11)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":37:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":47:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":38:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":38:27)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":39:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":39:23)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":40:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":46:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":44:13)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":44:21)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":44:27)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":44:35)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":44:42)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":44:52)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":45:23)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":45:13)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":77:1)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":80:1)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":79:5)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":79:13)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":55:1)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":75:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":57:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":57:12)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":58:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":58:26)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":59:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":59:29)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":62:12)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":62:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":63:15)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":63:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":63:10)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":63:11)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":64:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":74:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":65:9)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":65:27)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":66:9)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":66:23)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":67:9)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":73:9)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":71:13)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":71:21)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":71:27)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":71:35)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":71:42)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":71:52)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":72:23)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_declare_ncpy_31.c":72:13)
#loc75 = loc(fused[#loc1, #loc2])
#loc76 = loc(fused[#loc3, #loc4])
#loc77 = loc(fused[#loc5, #loc6])
#loc78 = loc(fused[#loc7, #loc8])
#loc79 = loc(fused[#loc9, #loc10])
#loc80 = loc(fused[#loc11, #loc12])
#loc81 = loc(fused[#loc13, #loc14])
#loc82 = loc(fused[#loc15, #loc16])
#loc83 = loc(fused[#loc17, #loc18])
#loc84 = loc(fused[#loc20, #loc19])
#loc85 = loc(fused[#loc22, #loc21])
#loc86 = loc(fused[#loc25, #loc26])
#loc87 = loc(fused[#loc27, #loc28])
#loc88 = loc(fused[#loc29, #loc30])
#loc89 = loc(fused[#loc31, #loc32])
#loc90 = loc(fused[#loc36, #loc38])
#loc91 = loc(fused[#loc41, #loc42])
#loc92 = loc(fused[#loc43, #loc44])
#loc93 = loc(fused[#loc45, #loc46])
#loc94 = loc(fused[#loc47, #loc48])
#loc95 = loc(fused[#loc49, #loc50])
#loc96 = loc(fused[#loc51, #loc52])
#loc97 = loc(fused[#loc54, #loc53])
#loc98 = loc(fused[#loc56, #loc55])
#loc99 = loc(fused[#loc59, #loc60])
#loc100 = loc(fused[#loc61, #loc62])
#loc101 = loc(fused[#loc63, #loc64])
#loc102 = loc(fused[#loc65, #loc66])
#loc103 = loc(fused[#loc70, #loc72])
