!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc77 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":102:10)
#loc78 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":102:14)
#loc79 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":102:20)
#loc80 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":102:32)
#loc175 = loc(fused[#loc77, #loc78])
#loc176 = loc(fused[#loc79, #loc80])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc146)
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc147)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc148)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc149)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc150)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc151)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__rand_malloc_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc153)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc17)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc17)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc154)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc156)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc156)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc21)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc21)
      cir.if %6 {
        %7 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc26)
        %9 = cir.binop(and, %7, %8) : !s32i loc(#loc26)
        %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc26)
        %11 = cir.ternary(%10, true {
          %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
          %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc26)
          %16 = cir.const #cir.int<30> : !s32i loc(#loc26)
          %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc26)
          %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
          %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc26)
          %20 = cir.const #cir.int<15> : !s32i loc(#loc26)
          %21 = cir.shift(left, %19 : !u32i, %20 : !s32i) -> !u32i loc(#loc26)
          %22 = cir.binop(xor, %17, %21) : !u32i loc(#loc26)
          %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
          %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc26)
          %25 = cir.binop(xor, %22, %24) : !u32i loc(#loc26)
          cir.yield %25 : !u32i loc(#loc26)
        }, false {
          %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
          %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc26)
          %16 = cir.const #cir.int<30> : !s32i loc(#loc26)
          %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc26)
          %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
          %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc26)
          %20 = cir.const #cir.int<15> : !s32i loc(#loc26)
          %21 = cir.shift(left, %19 : !u32i, %20 : !s32i) -> !u32i loc(#loc26)
          %22 = cir.binop(xor, %17, %21) : !u32i loc(#loc26)
          %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
          %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc26)
          %25 = cir.binop(xor, %22, %24) : !u32i loc(#loc26)
          %26 = cir.unary(minus, %25) : !u32i, !u32i loc(#loc26)
          %27 = cir.const #cir.int<1> : !s32i loc(#loc26)
          %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc26)
          %29 = cir.binop(sub, %26, %28) : !u32i loc(#loc26)
          cir.yield %29 : !u32i loc(#loc26)
        }) : (!cir.bool) -> !u32i loc(#loc26)
        %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc26)
        %13 = cir.cast(integral, %12 : !s32i), !s16i loc(#loc26)
        cir.store %13, %0 : !s16i, !cir.ptr<!s16i> loc(#loc158)
      } else {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc28)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc29)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc28)
        %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc28)
        cir.store %10, %0 : !s16i, !cir.ptr<!s16i> loc(#loc159)
      } loc(#loc157)
    } loc(#loc155)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc33)
      %4 = cir.cast(integral, %3 : !s16i), !s32i loc(#loc33)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc34)
      %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc161)
      cir.if %6 {
        %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc163)
        %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc38)
        %9 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc39)
        %10 = cir.cast(integral, %9 : !s16i), !u64i loc(#loc39)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc38)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc164)
        cir.store %12, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc163)
        cir.scope {
          %33 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc43)
          %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc43)
          %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s8i>, !cir.bool loc(#loc166)
          cir.if %36 {
            %37 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc45)
            %38 = cir.const #cir.int<1> : !s32i loc(#loc46)
            %39 = cir.unary(minus, %38) : !s32i, !s32i loc(#loc47)
            cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc45)
          } loc(#loc167)
        } loc(#loc165)
        %13 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc48)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc49)
        %16 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc50)
        %17 = cir.cast(integral, %16 : !s16i), !s32i loc(#loc50)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc51)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc50)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc50)
        cir.libc.memset %20 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc168)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc54)
        %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc54)
        %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
        %24 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc56)
        %25 = cir.cast(integral, %24 : !s16i), !s32i loc(#loc56)
        %26 = cir.const #cir.int<1> : !s32i loc(#loc57)
        %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc56)
        %28 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc58)
        cir.store %22, %28 : !s8i, !cir.ptr<!s8i> loc(#loc169)
        %29 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
        cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc60)
        %30 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc61)
        %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
        %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc62)
        cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc61)
      } loc(#loc162)
    } loc(#loc160)
    cir.return loc(#loc14)
  } loc(#loc152)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__rand_malloc_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc171)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc65)
    cir.return loc(#loc64)
  } loc(#loc170)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc172)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc173)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc71)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc72)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc73)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc74)
  cir.func @main(%arg0: !s32i loc(fused[#loc77, #loc78]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc79, #loc80])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc175)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc176)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc76)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc81)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc81)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc82)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc83)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc83)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc84)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc71)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %8 = cir.get_global @CWE194_Unexpected_Sign_Extension__rand_malloc_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc177)
    cir.call @CWE194_Unexpected_Sign_Extension__rand_malloc_12_good() : () -> () loc(#loc86)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc72)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc73)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %13 = cir.get_global @CWE194_Unexpected_Sign_Extension__rand_malloc_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc178)
    cir.call @CWE194_Unexpected_Sign_Extension__rand_malloc_12_bad() : () -> () loc(#loc90)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc74)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc93)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc179)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc179)
    cir.return %17 : !s32i loc(#loc179)
  } loc(#loc174)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc181)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc99)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc99)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc182)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc184)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc184)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc103)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc103)
      cir.if %6 {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc108)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc109)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc108)
        %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc108)
        cir.store %10, %0 : !s16i, !cir.ptr<!s16i> loc(#loc186)
      } else {
        %7 = cir.const #cir.int<100> : !s32i loc(#loc111)
        %8 = cir.const #cir.int<1> : !s32i loc(#loc112)
        %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc111)
        %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc111)
        cir.store %10, %0 : !s16i, !cir.ptr<!s16i> loc(#loc187)
      } loc(#loc185)
    } loc(#loc183)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc116)
      %4 = cir.cast(integral, %3 : !s16i), !s32i loc(#loc116)
      %5 = cir.const #cir.int<100> : !s32i loc(#loc117)
      %6 = cir.cmp(lt, %4, %5) : !s32i, !cir.bool loc(#loc189)
      cir.if %6 {
        %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc191)
        %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc121)
        %9 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc122)
        %10 = cir.cast(integral, %9 : !s16i), !u64i loc(#loc122)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc121)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc192)
        cir.store %12, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc191)
        cir.scope {
          %33 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc126)
          %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc126)
          %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!s8i>, !cir.bool loc(#loc194)
          cir.if %36 {
            %37 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc128)
            %38 = cir.const #cir.int<1> : !s32i loc(#loc129)
            %39 = cir.unary(minus, %38) : !s32i, !s32i loc(#loc130)
            cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc128)
          } loc(#loc195)
        } loc(#loc193)
        %13 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc131)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc132)
        %16 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc133)
        %17 = cir.cast(integral, %16 : !s16i), !s32i loc(#loc133)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc134)
        %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc133)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc133)
        cir.libc.memset %20 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc196)
        %21 = cir.const #cir.int<0> : !s32i loc(#loc137)
        %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc137)
        %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
        %24 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc139)
        %25 = cir.cast(integral, %24 : !s16i), !s32i loc(#loc139)
        %26 = cir.const #cir.int<1> : !s32i loc(#loc140)
        %27 = cir.binop(sub, %25, %26) nsw : !s32i loc(#loc139)
        %28 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc141)
        cir.store %22, %28 : !s8i, !cir.ptr<!s8i> loc(#loc197)
        %29 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
        cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc143)
        %30 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc144)
        %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
        %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc145)
        cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc144)
      } loc(#loc190)
    } loc(#loc188)
    cir.return loc(#loc96)
  } loc(#loc180)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":573:1)
#loc4 = loc("/usr/include/stdlib.h":573:24)
#loc5 = loc("/usr/include/stdlib.h":672:1)
#loc6 = loc("/usr/include/stdlib.h":672:45)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("/usr/include/stdlib.h":687:1)
#loc12 = loc("/usr/include/stdlib.h":687:32)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":21:1)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":49:1)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":23:5)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":23:11)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":25:12)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":25:5)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":26:5)
#loc20 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":35:5)
#loc21 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":26:8)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":26:33)
#loc23 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":27:5)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":30:5)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":32:5)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":29:23)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":29:9)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":34:16)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":34:20)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":34:9)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":37:5)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":48:5)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":37:9)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":37:16)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":38:5)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":41:9)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":41:48)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":41:37)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":41:44)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":42:9)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":42:43)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":42:13)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":42:27)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":42:33)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":42:34)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":42:40)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":42:39)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":44:16)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":44:28)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":44:33)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":44:38)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":44:9)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":44:39)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":45:30)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":45:9)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":45:20)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":45:25)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":45:26)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":46:19)
#loc60 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":46:9)
#loc61 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":47:9)
#loc62 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":47:14)
#loc63 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":87:1)
#loc64 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":90:1)
#loc65 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":89:5)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":89:13)
#loc67 = loc("/usr/include/stdlib.h":575:1)
#loc68 = loc("/usr/include/stdlib.h":575:41)
#loc69 = loc("/usr/include/time.h":76:1)
#loc70 = loc("/usr/include/time.h":76:38)
#loc71 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":107:15)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":109:15)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":112:15)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":114:15)
#loc75 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":102:1)
#loc76 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":117:1)
#loc81 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":103:1)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":105:27)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":105:22)
#loc84 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":105:5)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":107:5)
#loc86 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":108:5)
#loc87 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":108:59)
#loc88 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":109:5)
#loc89 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":112:5)
#loc90 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":113:5)
#loc91 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":113:58)
#loc92 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":114:5)
#loc93 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":116:12)
#loc94 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":116:5)
#loc95 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":57:1)
#loc96 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":85:1)
#loc97 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":59:5)
#loc98 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":59:11)
#loc99 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":61:12)
#loc100 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":61:5)
#loc101 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":62:5)
#loc102 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":71:5)
#loc103 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":62:8)
#loc104 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":62:33)
#loc105 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":63:5)
#loc106 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":66:5)
#loc107 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":68:5)
#loc108 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":65:16)
#loc109 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":65:20)
#loc110 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":65:9)
#loc111 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":70:16)
#loc112 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":70:20)
#loc113 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":70:9)
#loc114 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":73:5)
#loc115 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":84:5)
#loc116 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":73:9)
#loc117 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":73:16)
#loc118 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":74:5)
#loc119 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":77:9)
#loc120 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":77:48)
#loc121 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":77:37)
#loc122 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":77:44)
#loc123 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":78:9)
#loc124 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":78:43)
#loc125 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":78:13)
#loc126 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":78:27)
#loc127 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":78:33)
#loc128 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":78:34)
#loc129 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":78:40)
#loc130 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":78:39)
#loc131 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":80:16)
#loc132 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":80:28)
#loc133 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":80:33)
#loc134 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":80:38)
#loc135 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":80:9)
#loc136 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":80:39)
#loc137 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":81:30)
#loc138 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":81:9)
#loc139 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":81:20)
#loc140 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":81:25)
#loc141 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":81:26)
#loc142 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":82:19)
#loc143 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":82:9)
#loc144 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":83:9)
#loc145 = loc("CWE194_Unexpected_Sign_Extension__rand_malloc_12.c":83:14)
#loc146 = loc(fused[#loc1, #loc2])
#loc147 = loc(fused[#loc3, #loc4])
#loc148 = loc(fused[#loc5, #loc6])
#loc149 = loc(fused[#loc7, #loc8])
#loc150 = loc(fused[#loc9, #loc10])
#loc151 = loc(fused[#loc11, #loc12])
#loc152 = loc(fused[#loc13, #loc14])
#loc153 = loc(fused[#loc15, #loc16])
#loc154 = loc(fused[#loc18, #loc17])
#loc155 = loc(fused[#loc19, #loc20])
#loc156 = loc(fused[#loc21, #loc22])
#loc157 = loc(fused[#loc23, #loc24, #loc25, #loc20])
#loc158 = loc(fused[#loc27, #loc26])
#loc159 = loc(fused[#loc30, #loc29])
#loc160 = loc(fused[#loc31, #loc32])
#loc161 = loc(fused[#loc33, #loc34])
#loc162 = loc(fused[#loc35, #loc32])
#loc163 = loc(fused[#loc36, #loc37])
#loc164 = loc(fused[#loc38, #loc37])
#loc165 = loc(fused[#loc40, #loc41])
#loc166 = loc(fused[#loc42, #loc43])
#loc167 = loc(fused[#loc44, #loc41])
#loc168 = loc(fused[#loc52, #loc53])
#loc169 = loc(fused[#loc55, #loc54])
#loc170 = loc(fused[#loc63, #loc64])
#loc171 = loc(fused[#loc65, #loc66])
#loc172 = loc(fused[#loc67, #loc68])
#loc173 = loc(fused[#loc69, #loc70])
#loc174 = loc(fused[#loc75, #loc76])
#loc177 = loc(fused[#loc86, #loc87])
#loc178 = loc(fused[#loc90, #loc91])
#loc179 = loc(fused[#loc94, #loc93])
#loc180 = loc(fused[#loc95, #loc96])
#loc181 = loc(fused[#loc97, #loc98])
#loc182 = loc(fused[#loc100, #loc99])
#loc183 = loc(fused[#loc101, #loc102])
#loc184 = loc(fused[#loc103, #loc104])
#loc185 = loc(fused[#loc105, #loc106, #loc107, #loc102])
#loc186 = loc(fused[#loc110, #loc109])
#loc187 = loc(fused[#loc113, #loc112])
#loc188 = loc(fused[#loc114, #loc115])
#loc189 = loc(fused[#loc116, #loc117])
#loc190 = loc(fused[#loc118, #loc115])
#loc191 = loc(fused[#loc119, #loc120])
#loc192 = loc(fused[#loc121, #loc120])
#loc193 = loc(fused[#loc123, #loc124])
#loc194 = loc(fused[#loc125, #loc126])
#loc195 = loc(fused[#loc127, #loc124])
#loc196 = loc(fused[#loc135, #loc136])
#loc197 = loc(fused[#loc138, #loc137])
