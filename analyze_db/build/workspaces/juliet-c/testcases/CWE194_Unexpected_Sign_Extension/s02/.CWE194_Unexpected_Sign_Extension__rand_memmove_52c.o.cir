!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":23:65)
#loc6 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":23:71)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":46:69)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":46:75)
#loc77 = loc(fused[#loc5, #loc6])
#loc89 = loc(fused[#loc41, #loc42])
module @"/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc75)
  cir.func @CWE194_Unexpected_Sign_Extension__rand_memmove_52c_badSink(%arg0: !s16i loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc77)
    cir.store %arg0, %0 : !s16i, !cir.ptr<!s16i> loc(#loc7)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc79)
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc80)
      %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc80)
      cir.store %3, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc80)
      %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc14)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc14)
      %6 = cir.const #cir.int<65> : !s32i loc(#loc15)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc16)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc17)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc16)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc16)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc81)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc20)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc20)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc21)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc22)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc21)
      %16 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc23)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc82)
      cir.scope {
        %19 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc26)
        %20 = cir.cast(integral, %19 : !s16i), !s32i loc(#loc26)
        %21 = cir.const #cir.int<100> : !s32i loc(#loc27)
        %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc84)
        cir.if %22 {
          %23 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc29)
          %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc29)
          %25 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc30)
          %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc30)
          %27 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc31)
          %28 = cir.cast(integral, %27 : !s16i), !u64i loc(#loc31)
          cir.libc.memmove %28 bytes from %26 to %24 : !cir.ptr<!void>, !u64i loc(#loc86)
          %29 = cir.const #cir.int<0> : !s32i loc(#loc34)
          %30 = cir.cast(integral, %29 : !s32i), !s8i loc(#loc34)
          %31 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc35)
          %32 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
          %33 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %31 : !s16i), !cir.ptr<!s8i> loc(#loc36)
          cir.store %30, %33 : !s8i, !cir.ptr<!s8i> loc(#loc87)
        } loc(#loc85)
      } loc(#loc83)
      %18 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc37)
      cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc38)
    } loc(#loc78)
    cir.return loc(#loc4)
  } loc(#loc76)
  cir.func @CWE194_Unexpected_Sign_Extension__rand_memmove_52c_goodG2BSink(%arg0: !s16i loc(fused[#loc41, #loc42])) extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc89)
    cir.store %arg0, %0 : !s16i, !cir.ptr<!s16i> loc(#loc43)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc91)
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc92)
      %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc92)
      cir.store %3, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc92)
      %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc50)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc50)
      %6 = cir.const #cir.int<65> : !s32i loc(#loc51)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc52)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc53)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc52)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc52)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc93)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc56)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc56)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc57)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc58)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc57)
      %16 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc59)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc59)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc94)
      cir.scope {
        %19 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc62)
        %20 = cir.cast(integral, %19 : !s16i), !s32i loc(#loc62)
        %21 = cir.const #cir.int<100> : !s32i loc(#loc63)
        %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc96)
        cir.if %22 {
          %23 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc65)
          %24 = cir.cast(bitcast, %23 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc65)
          %25 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc66)
          %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc66)
          %27 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc67)
          %28 = cir.cast(integral, %27 : !s16i), !u64i loc(#loc67)
          cir.libc.memmove %28 bytes from %26 to %24 : !cir.ptr<!void>, !u64i loc(#loc98)
          %29 = cir.const #cir.int<0> : !s32i loc(#loc70)
          %30 = cir.cast(integral, %29 : !s32i), !s8i loc(#loc70)
          %31 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc71)
          %32 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc72)
          %33 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %31 : !s16i), !cir.ptr<!s8i> loc(#loc72)
          cir.store %30, %33 : !s8i, !cir.ptr<!s8i> loc(#loc99)
        } loc(#loc97)
      } loc(#loc95)
      %18 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc73)
      cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    } loc(#loc90)
    cir.return loc(#loc40)
  } loc(#loc88)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":23:1)
#loc4 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":39:1)
#loc7 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":24:1)
#loc8 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":25:5)
#loc9 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":38:5)
#loc10 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":26:9)
#loc11 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":26:24)
#loc12 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":27:9)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":27:26)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":28:16)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":28:24)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":28:29)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":28:33)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":28:9)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":28:34)
#loc20 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":29:25)
#loc21 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":29:16)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":29:20)
#loc23 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":29:9)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":30:9)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":36:9)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":30:13)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":30:20)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":31:9)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":34:21)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":34:27)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":34:35)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":34:13)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":34:39)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":35:26)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":35:18)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":35:13)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":37:19)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":37:9)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":46:1)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":62:1)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":47:1)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":48:5)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":61:5)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":49:9)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":49:24)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":50:9)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":50:26)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":51:16)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":51:24)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":51:29)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":51:33)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":51:9)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":51:34)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":52:25)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":52:16)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":52:20)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":52:9)
#loc60 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":53:9)
#loc61 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":59:9)
#loc62 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":53:13)
#loc63 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":53:20)
#loc64 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":54:9)
#loc65 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":57:21)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":57:27)
#loc67 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":57:35)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":57:13)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":57:39)
#loc70 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":58:26)
#loc71 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":58:18)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":58:13)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":60:19)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_52c.c":60:9)
#loc75 = loc(fused[#loc1, #loc2])
#loc76 = loc(fused[#loc3, #loc4])
#loc78 = loc(fused[#loc8, #loc9])
#loc79 = loc(fused[#loc10, #loc11])
#loc80 = loc(fused[#loc12, #loc13])
#loc81 = loc(fused[#loc18, #loc19])
#loc82 = loc(fused[#loc23, #loc20])
#loc83 = loc(fused[#loc24, #loc25])
#loc84 = loc(fused[#loc26, #loc27])
#loc85 = loc(fused[#loc28, #loc25])
#loc86 = loc(fused[#loc32, #loc33])
#loc87 = loc(fused[#loc36, #loc34])
#loc88 = loc(fused[#loc39, #loc40])
#loc90 = loc(fused[#loc44, #loc45])
#loc91 = loc(fused[#loc46, #loc47])
#loc92 = loc(fused[#loc48, #loc49])
#loc93 = loc(fused[#loc54, #loc55])
#loc94 = loc(fused[#loc59, #loc56])
#loc95 = loc(fused[#loc60, #loc61])
#loc96 = loc(fused[#loc62, #loc63])
#loc97 = loc(fused[#loc64, #loc61])
#loc98 = loc(fused[#loc68, #loc69])
#loc99 = loc(fused[#loc72, #loc70])
