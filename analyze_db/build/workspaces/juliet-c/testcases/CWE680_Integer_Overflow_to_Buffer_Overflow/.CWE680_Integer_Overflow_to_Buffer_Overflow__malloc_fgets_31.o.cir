!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc149)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc150)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc151)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc152)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc153)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc154)
  cir.func private @printIntLine(!s32i) loc(#loc155)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc156)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc158)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc23)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc159)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc161)
      %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc161)
      cir.store %4, %3 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc161)
      cir.scope {
        %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc31)
        %6 = cir.const #cir.int<3> : !s32i loc(#loc32)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc32)
        %8 = cir.const #cir.int<4> : !u64i loc(#loc32)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc32)
        %10 = cir.const #cir.int<2> : !s32i loc(#loc32)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc32)
        %12 = cir.binop(add, %9, %11) : !u64i loc(#loc32)
        %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc32)
        %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc150)
        %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc33)
        %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc34)
        %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc35)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc35)
        %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc163)
        cir.if %19 {
          %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc39)
          %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc40)
          cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc165)
        } else {
          %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc43)
        } loc(#loc164)
      } loc(#loc162)
    } loc(#loc160)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc167)
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc168)
      %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc47)
      cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc167)
      %6 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc49)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc168)
      cir.scope {
        %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc170)
        %8 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc171)
        %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc56)
        %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc57)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc57)
        %12 = cir.const #cir.int<4> : !u64i loc(#loc172)
        %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc173)
        %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc56)
        %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc174)
        cir.store %15, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc175)
        cir.scope {
          %23 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc64)
          %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc65)
          %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc65)
          %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s32i>, !cir.bool loc(#loc177)
          cir.if %26 {
            %27 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc67)
            %28 = cir.const #cir.int<1> : !s32i loc(#loc68)
            %29 = cir.unary(minus, %28) nsw : !s32i, !s32i loc(#loc69)
            cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc67)
          } loc(#loc178)
        } loc(#loc176)
        cir.scope {
          %23 = cir.const #cir.int<0> : !s32i loc(#loc72)
          %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc72)
          cir.store %24, %7 : !u64i, !cir.ptr<!u64i> loc(#loc180)
          cir.for : cond {
            %25 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc74)
            %26 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc75)
            %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc75)
            %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc181)
            cir.condition(%28) loc(#loc76)
          } body {
            cir.scope {
              %25 = cir.const #cir.int<0> : !s32i loc(#loc78)
              %26 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc79)
              %27 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc80)
              %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !u64i), !cir.ptr<!s32i> loc(#loc81)
              cir.store %25, %28 : !s32i, !cir.ptr<!s32i> loc(#loc183)
            } loc(#loc182)
            cir.yield loc(#loc71)
          } step {
            %25 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc82)
            %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc83)
            cir.store %26, %7 : !u64i, !cir.ptr<!u64i> loc(#loc184)
            cir.yield loc(#loc179)
          } loc(#loc179)
        } loc(#loc179)
        %16 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc84)
        %17 = cir.const #cir.int<0> : !s32i loc(#loc85)
        %18 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc86)
        %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc84)
        cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc87)
        %20 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc88)
        %21 = cir.load %8 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc89)
        %22 = cir.cast(bitcast, %21 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc89)
        cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc88)
      } loc(#loc169)
    } loc(#loc166)
    cir.return loc(#loc19)
  } loc(#loc157)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc186)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc92)
    cir.return loc(#loc91)
  } loc(#loc185)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc188)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc99)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc101)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc190)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc192)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc193)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc106)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc192)
      %7 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc108)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc193)
      cir.scope {
        %8 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc195)
        %9 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc196)
        %10 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc115)
        %11 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc116)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc116)
        %13 = cir.const #cir.int<4> : !u64i loc(#loc197)
        %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc198)
        %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc115)
        %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc199)
        cir.store %16, %9 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc200)
        cir.scope {
          %24 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc123)
          %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc124)
          %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc124)
          %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!s32i>, !cir.bool loc(#loc202)
          cir.if %27 {
            %28 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc126)
            %29 = cir.const #cir.int<1> : !s32i loc(#loc127)
            %30 = cir.unary(minus, %29) nsw : !s32i, !s32i loc(#loc128)
            cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc126)
          } loc(#loc203)
        } loc(#loc201)
        cir.scope {
          %24 = cir.const #cir.int<0> : !s32i loc(#loc131)
          %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc131)
          cir.store %25, %8 : !u64i, !cir.ptr<!u64i> loc(#loc205)
          cir.for : cond {
            %26 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc133)
            %27 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc134)
            %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc134)
            %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc206)
            cir.condition(%29) loc(#loc135)
          } body {
            cir.scope {
              %26 = cir.const #cir.int<0> : !s32i loc(#loc137)
              %27 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc138)
              %28 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc139)
              %29 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %28 : !u64i), !cir.ptr<!s32i> loc(#loc140)
              cir.store %26, %29 : !s32i, !cir.ptr<!s32i> loc(#loc208)
            } loc(#loc207)
            cir.yield loc(#loc130)
          } step {
            %26 = cir.load %8 : !cir.ptr<!u64i>, !u64i loc(#loc141)
            %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc142)
            cir.store %27, %8 : !u64i, !cir.ptr<!u64i> loc(#loc209)
            cir.yield loc(#loc204)
          } loc(#loc204)
        } loc(#loc204)
        %17 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc143)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc144)
        %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc145)
        %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc143)
        cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc146)
        %21 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc147)
        %22 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc148)
        %23 = cir.cast(bitcast, %22 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc148)
        cir.call @free(%23) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc147)
      } loc(#loc194)
    } loc(#loc191)
    cir.return loc(#loc95)
  } loc(#loc187)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":38:23)
#loc10 = loc("/usr/include/stdlib.h":672:1)
#loc11 = loc("/usr/include/stdlib.h":672:45)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc15 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc16 = loc("/usr/include/stdlib.h":687:1)
#loc17 = loc("/usr/include/stdlib.h":687:32)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":23:1)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":59:1)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":25:5)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":25:9)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":27:13)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":27:12)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":27:5)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":28:5)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":40:5)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":29:9)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":29:45)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":31:9)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":39:9)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":31:19)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":31:32)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":31:49)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":31:13)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":31:59)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":32:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":35:9)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":37:9)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":34:25)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":34:20)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":34:13)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":34:36)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":38:13)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":41:5)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":58:5)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":42:9)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":42:24)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":43:9)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":43:20)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":44:9)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":57:9)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":45:13)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":45:20)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":46:13)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":46:18)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":49:32)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":49:39)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":49:46)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":49:56)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":49:57)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":49:13)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":50:13)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":50:47)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":50:17)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":50:31)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":50:37)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":50:38)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":50:44)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":50:43)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":51:13)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":54:13)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":51:22)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":51:18)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":51:25)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":51:37)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":51:27)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":52:13)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":53:33)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":53:17)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":53:28)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":53:29)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":51:44)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":51:43)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":55:26)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":55:37)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":55:38)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":55:13)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":56:13)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":56:18)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":93:1)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":96:1)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":95:5)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":95:13)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":66:1)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":91:1)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":68:5)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":68:9)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":70:13)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":70:12)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":70:5)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":72:12)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":72:5)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":73:5)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":90:5)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":74:9)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":74:24)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":75:9)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":75:20)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":76:9)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":89:9)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":77:13)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":77:20)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":78:13)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":78:18)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":81:32)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":81:39)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":81:46)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":81:56)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":81:57)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":81:13)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":82:13)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":82:47)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":82:17)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":82:31)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":82:37)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":82:38)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":82:44)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":82:43)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":83:13)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":86:13)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":83:22)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":83:18)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":83:25)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":83:37)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":83:27)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":84:13)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":85:33)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":85:17)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":85:28)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":85:29)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":83:44)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":83:43)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":87:26)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":87:37)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":87:38)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":87:13)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":88:13)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_31.c":88:18)
#loc149 = loc(fused[#loc1, #loc2])
#loc150 = loc(fused[#loc3, #loc4])
#loc151 = loc(fused[#loc5, #loc6])
#loc152 = loc(fused[#loc7, #loc8])
#loc153 = loc(fused[#loc10, #loc11])
#loc154 = loc(fused[#loc12, #loc13])
#loc155 = loc(fused[#loc14, #loc15])
#loc156 = loc(fused[#loc16, #loc17])
#loc157 = loc(fused[#loc18, #loc19])
#loc158 = loc(fused[#loc20, #loc21])
#loc159 = loc(fused[#loc24, #loc22])
#loc160 = loc(fused[#loc25, #loc26])
#loc161 = loc(fused[#loc27, #loc28])
#loc162 = loc(fused[#loc29, #loc30])
#loc163 = loc(fused[#loc34, #loc35])
#loc164 = loc(fused[#loc36, #loc37, #loc38, #loc30])
#loc165 = loc(fused[#loc41, #loc42])
#loc166 = loc(fused[#loc44, #loc45])
#loc167 = loc(fused[#loc46, #loc47])
#loc168 = loc(fused[#loc48, #loc49])
#loc169 = loc(fused[#loc50, #loc51])
#loc170 = loc(fused[#loc52, #loc53])
#loc171 = loc(fused[#loc54, #loc55])
#loc172 = loc(fused[#loc58, #loc59])
#loc173 = loc(fused[#loc57, #loc59])
#loc174 = loc(fused[#loc56, #loc60])
#loc175 = loc(fused[#loc61, #loc60])
#loc176 = loc(fused[#loc62, #loc63])
#loc177 = loc(fused[#loc64, #loc65])
#loc178 = loc(fused[#loc66, #loc63])
#loc179 = loc(fused[#loc70, #loc71])
#loc180 = loc(fused[#loc73, #loc72])
#loc181 = loc(fused[#loc74, #loc75])
#loc182 = loc(fused[#loc77, #loc71])
#loc183 = loc(fused[#loc79, #loc78])
#loc184 = loc(fused[#loc83, #loc82])
#loc185 = loc(fused[#loc90, #loc91])
#loc186 = loc(fused[#loc92, #loc93])
#loc187 = loc(fused[#loc94, #loc95])
#loc188 = loc(fused[#loc96, #loc97])
#loc189 = loc(fused[#loc100, #loc98])
#loc190 = loc(fused[#loc102, #loc101])
#loc191 = loc(fused[#loc103, #loc104])
#loc192 = loc(fused[#loc105, #loc106])
#loc193 = loc(fused[#loc107, #loc108])
#loc194 = loc(fused[#loc109, #loc110])
#loc195 = loc(fused[#loc111, #loc112])
#loc196 = loc(fused[#loc113, #loc114])
#loc197 = loc(fused[#loc117, #loc118])
#loc198 = loc(fused[#loc116, #loc118])
#loc199 = loc(fused[#loc115, #loc119])
#loc200 = loc(fused[#loc120, #loc119])
#loc201 = loc(fused[#loc121, #loc122])
#loc202 = loc(fused[#loc123, #loc124])
#loc203 = loc(fused[#loc125, #loc122])
#loc204 = loc(fused[#loc129, #loc130])
#loc205 = loc(fused[#loc132, #loc131])
#loc206 = loc(fused[#loc133, #loc134])
#loc207 = loc(fused[#loc136, #loc130])
#loc208 = loc(fused[#loc138, #loc137])
#loc209 = loc(fused[#loc142, #loc141])
