!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc62 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":121:10)
#loc63 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":121:14)
#loc64 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":121:20)
#loc65 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":121:32)
#loc193 = loc(fused[#loc62, #loc63])
#loc194 = loc(fused[#loc64, #loc65])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE170_char_loop_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc172)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc3)
  cir.func no_proto @CWE126_Buffer_Overread__CWE170_char_loop_15_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc8)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 150>, !cir.ptr<!cir.array<!s8i x 150>>, ["src"] {alignment = 16 : i64} loc(#loc176)
            %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc177)
            %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc178)
            %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc17)
            %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc17)
            %6 = cir.const #cir.int<65> : !s32i loc(#loc18)
            %7 = cir.const #cir.int<149> : !s32i loc(#loc19)
            %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc19)
            cir.libc.memset %8 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc179)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc22)
            %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc22)
            %11 = cir.const #cir.int<149> : !s32i loc(#loc23)
            %12 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc24)
            %13 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc24)
            cir.store %10, %13 : !s8i, !cir.ptr<!s8i> loc(#loc180)
            cir.scope {
              %15 = cir.const #cir.int<0> : !s32i loc(#loc27)
              cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc182)
              cir.for : cond {
                %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc29)
                %17 = cir.const #cir.int<99> : !s32i loc(#loc30)
                %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc183)
                cir.condition(%18) loc(#loc31)
              } body {
                cir.scope {
                  %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc33)
                  %17 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc34)
                  %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc34)
                  %19 = cir.load %18 : !cir.ptr<!s8i>, !s8i loc(#loc34)
                  %20 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc35)
                  %21 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
                  %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc36)
                  cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc185)
                } loc(#loc184)
                cir.yield loc(#loc26)
              } step {
                %16 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc38)
                %17 = cir.unary(inc, %16) : !s32i, !s32i loc(#loc39)
                cir.store %17, %3 : !s32i, !cir.ptr<!s32i> loc(#loc186)
                cir.yield loc(#loc181)
              } loc(#loc181)
            } loc(#loc181)
            %14 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc40)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc41)
          } loc(#loc175)
          cir.break loc(#loc42)
        } loc(#loc9)
        cir.case(default, []) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc3)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc3)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc44)
          cir.break loc(#loc45)
        } loc(#loc43)
        cir.yield loc(#loc6)
      } loc(#loc6)
    } loc(#loc174)
    cir.return loc(#loc5)
  } loc(#loc173)
  cir.func no_proto @CWE126_Buffer_Overread__CWE170_char_loop_15_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc188)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc48)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc189)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    cir.return loc(#loc47)
  } loc(#loc187)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc190)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc191)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc59)
  cir.func @main(%arg0: !s32i loc(fused[#loc62, #loc63]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc64, #loc65])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc193)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc194)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc61)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc66)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc66)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc67)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc68)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc68)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc69)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc56)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %8 = cir.get_global @CWE126_Buffer_Overread__CWE170_char_loop_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc195)
    cir.call @CWE126_Buffer_Overread__CWE170_char_loop_15_good() : () -> () loc(#loc71)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc57)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc58)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %13 = cir.get_global @CWE126_Buffer_Overread__CWE170_char_loop_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc196)
    cir.call @CWE126_Buffer_Overread__CWE170_char_loop_15_bad() : () -> () loc(#loc75)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc59)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc78)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc197)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc197)
    cir.return %17 : !s32i loc(#loc197)
  } loc(#loc192)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc84)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc86)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc86)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc87)
          cir.break loc(#loc88)
        } loc(#loc85)
        cir.case(default, []) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 150>, !cir.ptr<!cir.array<!s8i x 150>>, ["src"] {alignment = 16 : i64} loc(#loc201)
            %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc202)
            %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc203)
            %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc97)
            %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc97)
            %6 = cir.const #cir.int<65> : !s32i loc(#loc98)
            %7 = cir.const #cir.int<149> : !s32i loc(#loc99)
            %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc99)
            cir.libc.memset %8 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc204)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc102)
            %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc102)
            %11 = cir.const #cir.int<149> : !s32i loc(#loc103)
            %12 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc104)
            %13 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc104)
            cir.store %10, %13 : !s8i, !cir.ptr<!s8i> loc(#loc205)
            cir.scope {
              %20 = cir.const #cir.int<0> : !s32i loc(#loc107)
              cir.store %20, %3 : !s32i, !cir.ptr<!s32i> loc(#loc207)
              cir.for : cond {
                %21 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc109)
                %22 = cir.const #cir.int<99> : !s32i loc(#loc110)
                %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc208)
                cir.condition(%23) loc(#loc111)
              } body {
                cir.scope {
                  %21 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc113)
                  %22 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc114)
                  %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc114)
                  %24 = cir.load %23 : !cir.ptr<!s8i>, !s8i loc(#loc114)
                  %25 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc115)
                  %26 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc116)
                  %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc116)
                  cir.store %24, %27 : !s8i, !cir.ptr<!s8i> loc(#loc210)
                } loc(#loc209)
                cir.yield loc(#loc106)
              } step {
                %21 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc118)
                %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc119)
                cir.store %22, %3 : !s32i, !cir.ptr<!s32i> loc(#loc211)
                cir.yield loc(#loc206)
              } loc(#loc206)
            } loc(#loc206)
            %14 = cir.const #cir.int<0> : !s32i loc(#loc120)
            %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc120)
            %16 = cir.const #cir.int<99> : !s32i loc(#loc121)
            %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc122)
            %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc122)
            cir.store %15, %18 : !s8i, !cir.ptr<!s8i> loc(#loc212)
            %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc123)
            cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc124)
          } loc(#loc200)
          cir.break loc(#loc125)
        } loc(#loc89)
        cir.yield loc(#loc82)
      } loc(#loc82)
    } loc(#loc199)
    cir.return loc(#loc81)
  } loc(#loc198)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc130)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.array<!s8i x 150>, !cir.ptr<!cir.array<!s8i x 150>>, ["src"] {alignment = 16 : i64} loc(#loc216)
            %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc217)
            %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc218)
            %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc139)
            %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc139)
            %6 = cir.const #cir.int<65> : !s32i loc(#loc140)
            %7 = cir.const #cir.int<149> : !s32i loc(#loc141)
            %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc141)
            cir.libc.memset %8 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc219)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc144)
            %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc144)
            %11 = cir.const #cir.int<149> : !s32i loc(#loc145)
            %12 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc146)
            %13 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %11 : !s32i), !cir.ptr<!s8i> loc(#loc146)
            cir.store %10, %13 : !s8i, !cir.ptr<!s8i> loc(#loc220)
            cir.scope {
              %20 = cir.const #cir.int<0> : !s32i loc(#loc149)
              cir.store %20, %3 : !s32i, !cir.ptr<!s32i> loc(#loc222)
              cir.for : cond {
                %21 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc151)
                %22 = cir.const #cir.int<99> : !s32i loc(#loc152)
                %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc223)
                cir.condition(%23) loc(#loc153)
              } body {
                cir.scope {
                  %21 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc155)
                  %22 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc156)
                  %23 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc156)
                  %24 = cir.load %23 : !cir.ptr<!s8i>, !s8i loc(#loc156)
                  %25 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc157)
                  %26 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc158)
                  %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc158)
                  cir.store %24, %27 : !s8i, !cir.ptr<!s8i> loc(#loc225)
                } loc(#loc224)
                cir.yield loc(#loc148)
              } step {
                %21 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc160)
                %22 = cir.unary(inc, %21) : !s32i, !s32i loc(#loc161)
                cir.store %22, %3 : !s32i, !cir.ptr<!s32i> loc(#loc226)
                cir.yield loc(#loc221)
              } loc(#loc221)
            } loc(#loc221)
            %14 = cir.const #cir.int<0> : !s32i loc(#loc162)
            %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc162)
            %16 = cir.const #cir.int<99> : !s32i loc(#loc163)
            %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc164)
            %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc164)
            cir.store %15, %18 : !s8i, !cir.ptr<!s8i> loc(#loc227)
            %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc165)
            cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc166)
          } loc(#loc215)
          cir.break loc(#loc167)
        } loc(#loc131)
        cir.case(default, []) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc169)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc169)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc170)
          cir.break loc(#loc171)
        } loc(#loc168)
        cir.yield loc(#loc128)
      } loc(#loc128)
    } loc(#loc214)
    cir.return loc(#loc127)
  } loc(#loc213)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE170_char_loop_15.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":43:19)
#loc4 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":22:1)
#loc5 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":46:1)
#loc6 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":24:5)
#loc7 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":45:5)
#loc8 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":24:12)
#loc9 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":26:5)
#loc10 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":27:5)
#loc11 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":39:5)
#loc12 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":28:9)
#loc13 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":28:21)
#loc14 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":28:32)
#loc15 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":29:9)
#loc16 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":29:13)
#loc17 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":31:16)
#loc18 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":31:21)
#loc19 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":31:26)
#loc20 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":31:9)
#loc21 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":31:29)
#loc22 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":32:20)
#loc23 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":32:13)
#loc24 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":32:9)
#loc25 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":33:9)
#loc26 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":36:9)
#loc27 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":33:15)
#loc28 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":33:13)
#loc29 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":33:18)
#loc30 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":33:22)
#loc31 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":33:20)
#loc32 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":34:9)
#loc33 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":35:27)
#loc34 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":35:23)
#loc35 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":35:18)
#loc36 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":35:13)
#loc37 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":35:28)
#loc38 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":33:27)
#loc39 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":33:26)
#loc40 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":38:19)
#loc41 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":38:9)
#loc42 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":40:5)
#loc43 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":41:5)
#loc44 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":43:9)
#loc45 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":44:9)
#loc46 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":106:1)
#loc47 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":110:1)
#loc48 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":108:5)
#loc49 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":108:11)
#loc50 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":109:5)
#loc51 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":109:11)
#loc52 = loc("/usr/include/stdlib.h":575:1)
#loc53 = loc("/usr/include/stdlib.h":575:41)
#loc54 = loc("/usr/include/time.h":76:1)
#loc55 = loc("/usr/include/time.h":76:38)
#loc56 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":126:15)
#loc57 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":128:15)
#loc58 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":131:15)
#loc59 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":133:15)
#loc60 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":121:1)
#loc61 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":136:1)
#loc66 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":122:1)
#loc67 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":124:27)
#loc68 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":124:22)
#loc69 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":124:5)
#loc70 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":126:5)
#loc71 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":127:5)
#loc72 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":127:54)
#loc73 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":128:5)
#loc74 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":131:5)
#loc75 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":132:5)
#loc76 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":132:53)
#loc77 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":133:5)
#loc78 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":135:12)
#loc79 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":135:5)
#loc80 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":53:1)
#loc81 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":77:1)
#loc82 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":55:5)
#loc83 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":76:5)
#loc84 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":55:12)
#loc85 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":57:5)
#loc86 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":59:19)
#loc87 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":59:9)
#loc88 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":60:9)
#loc89 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":61:5)
#loc90 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":62:5)
#loc91 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":74:5)
#loc92 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":63:9)
#loc93 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":63:21)
#loc94 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":63:32)
#loc95 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":64:9)
#loc96 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":64:13)
#loc97 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":66:16)
#loc98 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":66:21)
#loc99 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":66:26)
#loc100 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":66:9)
#loc101 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":66:29)
#loc102 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":67:20)
#loc103 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":67:13)
#loc104 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":67:9)
#loc105 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":68:9)
#loc106 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":71:9)
#loc107 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":68:15)
#loc108 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":68:13)
#loc109 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":68:18)
#loc110 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":68:22)
#loc111 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":68:20)
#loc112 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":69:9)
#loc113 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":70:27)
#loc114 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":70:23)
#loc115 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":70:18)
#loc116 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":70:13)
#loc117 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":70:28)
#loc118 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":68:27)
#loc119 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":68:26)
#loc120 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":72:20)
#loc121 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":72:14)
#loc122 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":72:9)
#loc123 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":73:19)
#loc124 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":73:9)
#loc125 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":75:5)
#loc126 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":80:1)
#loc127 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":104:1)
#loc128 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":82:5)
#loc129 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":103:5)
#loc130 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":82:12)
#loc131 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":84:5)
#loc132 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":85:5)
#loc133 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":97:5)
#loc134 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":86:9)
#loc135 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":86:21)
#loc136 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":86:32)
#loc137 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":87:9)
#loc138 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":87:13)
#loc139 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":89:16)
#loc140 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":89:21)
#loc141 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":89:26)
#loc142 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":89:9)
#loc143 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":89:29)
#loc144 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":90:20)
#loc145 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":90:13)
#loc146 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":90:9)
#loc147 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":91:9)
#loc148 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":94:9)
#loc149 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":91:15)
#loc150 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":91:13)
#loc151 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":91:18)
#loc152 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":91:22)
#loc153 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":91:20)
#loc154 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":92:9)
#loc155 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":93:27)
#loc156 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":93:23)
#loc157 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":93:18)
#loc158 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":93:13)
#loc159 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":93:28)
#loc160 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":91:27)
#loc161 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":91:26)
#loc162 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":95:20)
#loc163 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":95:14)
#loc164 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":95:9)
#loc165 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":96:19)
#loc166 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":96:9)
#loc167 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":98:5)
#loc168 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":99:5)
#loc169 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":101:19)
#loc170 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":101:9)
#loc171 = loc("CWE126_Buffer_Overread__CWE170_char_loop_15.c":102:9)
#loc172 = loc(fused[#loc1, #loc2])
#loc173 = loc(fused[#loc4, #loc5])
#loc174 = loc(fused[#loc6, #loc7])
#loc175 = loc(fused[#loc10, #loc11])
#loc176 = loc(fused[#loc12, #loc13])
#loc177 = loc(fused[#loc12, #loc14])
#loc178 = loc(fused[#loc15, #loc16])
#loc179 = loc(fused[#loc20, #loc21])
#loc180 = loc(fused[#loc24, #loc22])
#loc181 = loc(fused[#loc25, #loc26])
#loc182 = loc(fused[#loc28, #loc27])
#loc183 = loc(fused[#loc29, #loc30])
#loc184 = loc(fused[#loc32, #loc26])
#loc185 = loc(fused[#loc36, #loc37])
#loc186 = loc(fused[#loc39, #loc38])
#loc187 = loc(fused[#loc46, #loc47])
#loc188 = loc(fused[#loc48, #loc49])
#loc189 = loc(fused[#loc50, #loc51])
#loc190 = loc(fused[#loc52, #loc53])
#loc191 = loc(fused[#loc54, #loc55])
#loc192 = loc(fused[#loc60, #loc61])
#loc195 = loc(fused[#loc71, #loc72])
#loc196 = loc(fused[#loc75, #loc76])
#loc197 = loc(fused[#loc79, #loc78])
#loc198 = loc(fused[#loc80, #loc81])
#loc199 = loc(fused[#loc82, #loc83])
#loc200 = loc(fused[#loc90, #loc91])
#loc201 = loc(fused[#loc92, #loc93])
#loc202 = loc(fused[#loc92, #loc94])
#loc203 = loc(fused[#loc95, #loc96])
#loc204 = loc(fused[#loc100, #loc101])
#loc205 = loc(fused[#loc104, #loc102])
#loc206 = loc(fused[#loc105, #loc106])
#loc207 = loc(fused[#loc108, #loc107])
#loc208 = loc(fused[#loc109, #loc110])
#loc209 = loc(fused[#loc112, #loc106])
#loc210 = loc(fused[#loc116, #loc117])
#loc211 = loc(fused[#loc119, #loc118])
#loc212 = loc(fused[#loc122, #loc120])
#loc213 = loc(fused[#loc126, #loc127])
#loc214 = loc(fused[#loc128, #loc129])
#loc215 = loc(fused[#loc132, #loc133])
#loc216 = loc(fused[#loc134, #loc135])
#loc217 = loc(fused[#loc134, #loc136])
#loc218 = loc(fused[#loc137, #loc138])
#loc219 = loc(fused[#loc142, #loc143])
#loc220 = loc(fused[#loc146, #loc144])
#loc221 = loc(fused[#loc147, #loc148])
#loc222 = loc(fused[#loc150, #loc149])
#loc223 = loc(fused[#loc151, #loc152])
#loc224 = loc(fused[#loc154, #loc148])
#loc225 = loc(fused[#loc158, #loc159])
#loc226 = loc(fused[#loc161, #loc160])
#loc227 = loc(fused[#loc164, #loc162])
