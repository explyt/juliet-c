!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc161)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc162)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc163)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc164)
  cir.func private @printIntLine(!s32i) loc(#loc165)
  cir.func no_proto @CWE758_Undefined_Behavior__int_pointer_malloc_use_11_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc168)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc168)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc15)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc15)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc171)
          %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc172)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc24)
          %7 = cir.const #cir.int<8> : !u64i loc(#loc173)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc24)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc174)
          cir.store %9, %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc171)
          cir.scope {
            %17 = cir.load %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc29)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc30)
            %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!cir.ptr<!s32i>>, !cir.bool loc(#loc176)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc32)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc33)
              %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc34)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc32)
            } loc(#loc177)
          } loc(#loc175)
          %10 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc23)
          %11 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc35)
          cir.store %11, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc172)
          %12 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc36)
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc37)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!cir.ptr<!s32i>>), !cir.ptr<!void> loc(#loc37)
          cir.call @free(%14) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc36)
          %15 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc38)
          %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc39)
          cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc40)
        } loc(#loc170)
      } loc(#loc169)
    } loc(#loc167)
    cir.return loc(#loc12)
  } loc(#loc166)
  cir.func no_proto @CWE758_Undefined_Behavior__int_pointer_malloc_use_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc179)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc43)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc180)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc45)
    cir.return loc(#loc42)
  } loc(#loc178)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc181)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc182)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc51)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc185)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc185)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc56)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc56)
      cir.if %3 {
        %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc51)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc51)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc61)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc188)
          %5 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc189)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc68)
          %7 = cir.const #cir.int<8> : !u64i loc(#loc190)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc68)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc191)
          cir.store %9, %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc189)
          cir.scope {
            %21 = cir.load %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc73)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc74)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc74)
            %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!cir.ptr<!s32i>>, !cir.bool loc(#loc193)
            cir.if %24 {
              %25 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc76)
              %26 = cir.const #cir.int<1> : !s32i loc(#loc77)
              %27 = cir.unary(minus, %26) nsw : !s32i, !s32i loc(#loc78)
              cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc76)
            } loc(#loc194)
          } loc(#loc192)
          %10 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc79)
          %11 = cir.const #cir.int<4> : !u64i loc(#loc195)
          %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc79)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc196)
          cir.store %13, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc197)
          cir.scope {
            %21 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc86)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc87)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc87)
            %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!s32i>, !cir.bool loc(#loc199)
            cir.if %24 {
              %25 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc89)
              %26 = cir.const #cir.int<1> : !s32i loc(#loc90)
              %27 = cir.unary(minus, %26) nsw : !s32i, !s32i loc(#loc91)
              cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc89)
            } loc(#loc200)
          } loc(#loc198)
          %14 = cir.const #cir.int<5> : !s32i loc(#loc92)
          %15 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc93)
          cir.store %14, %15 : !s32i, !cir.ptr<!s32i> loc(#loc201)
          %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc95)
          %17 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc96)
          cir.store %16, %17 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc202)
          cir.scope {
            %21 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc204)
            %22 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc101)
            %23 = cir.load %22 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc102)
            cir.store %23, %21 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc204)
            %24 = cir.load deref %21 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc103)
            %25 = cir.load %24 : !cir.ptr<!s32i>, !s32i loc(#loc104)
            cir.call @printIntLine(%25) : (!s32i) -> () loc(#loc105)
          } loc(#loc203)
          %18 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc106)
          %19 = cir.load %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc107)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!cir.ptr<!s32i>>), !cir.ptr<!void> loc(#loc107)
          cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc106)
        } loc(#loc187)
      } loc(#loc186)
    } loc(#loc184)
    cir.return loc(#loc53)
  } loc(#loc183)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc207)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc207)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc112)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc112)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc210)
          %5 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc211)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc121)
          %7 = cir.const #cir.int<8> : !u64i loc(#loc212)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc121)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc213)
          cir.store %9, %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc211)
          cir.scope {
            %21 = cir.load %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc126)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc127)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc127)
            %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!cir.ptr<!s32i>>, !cir.bool loc(#loc215)
            cir.if %24 {
              %25 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc129)
              %26 = cir.const #cir.int<1> : !s32i loc(#loc130)
              %27 = cir.unary(minus, %26) nsw : !s32i, !s32i loc(#loc131)
              cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc129)
            } loc(#loc216)
          } loc(#loc214)
          %10 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc132)
          %11 = cir.const #cir.int<4> : !u64i loc(#loc217)
          %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc132)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc218)
          cir.store %13, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc219)
          cir.scope {
            %21 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc139)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc140)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc140)
            %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!s32i>, !cir.bool loc(#loc221)
            cir.if %24 {
              %25 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc142)
              %26 = cir.const #cir.int<1> : !s32i loc(#loc143)
              %27 = cir.unary(minus, %26) nsw : !s32i, !s32i loc(#loc144)
              cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc142)
            } loc(#loc222)
          } loc(#loc220)
          %14 = cir.const #cir.int<5> : !s32i loc(#loc145)
          %15 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc146)
          cir.store %14, %15 : !s32i, !cir.ptr<!s32i> loc(#loc223)
          %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc148)
          %17 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc149)
          cir.store %16, %17 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc224)
          cir.scope {
            %21 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc226)
            %22 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc154)
            %23 = cir.load %22 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc155)
            cir.store %23, %21 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc226)
            %24 = cir.load deref %21 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc156)
            %25 = cir.load %24 : !cir.ptr<!s32i>, !s32i loc(#loc157)
            cir.call @printIntLine(%25) : (!s32i) -> () loc(#loc158)
          } loc(#loc225)
          %18 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc159)
          %19 = cir.load %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc160)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!cir.ptr<!s32i>>), !cir.ptr<!void> loc(#loc160)
          cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc159)
        } loc(#loc209)
      } loc(#loc208)
    } loc(#loc206)
    cir.return loc(#loc109)
  } loc(#loc205)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc11 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":20:1)
#loc12 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":32:1)
#loc13 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":22:5)
#loc14 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":31:5)
#loc15 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":22:8)
#loc16 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":22:26)
#loc17 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":23:5)
#loc18 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":24:9)
#loc19 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":30:9)
#loc20 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":25:13)
#loc21 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":25:60)
#loc22 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":27:13)
#loc23 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":27:27)
#loc24 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":25:40)
#loc25 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":25:47)
#loc26 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":25:59)
#loc27 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":26:13)
#loc28 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":26:44)
#loc29 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":26:17)
#loc30 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":26:28)
#loc31 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":26:34)
#loc32 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":26:35)
#loc33 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":26:41)
#loc34 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":26:40)
#loc35 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":27:26)
#loc36 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":28:13)
#loc37 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":28:18)
#loc38 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":29:27)
#loc39 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":29:26)
#loc40 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":29:13)
#loc41 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":89:1)
#loc42 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":93:1)
#loc43 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":91:5)
#loc44 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":91:11)
#loc45 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":92:5)
#loc46 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":92:11)
#loc47 = loc("../../testcasesupport/std_testcase_io.h":50:1)
#loc48 = loc("../../testcasesupport/std_testcase_io.h":50:24)
#loc49 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc50 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc51 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":44:19)
#loc52 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":39:1)
#loc53 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":64:1)
#loc54 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":41:5)
#loc55 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":63:5)
#loc56 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":41:8)
#loc57 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":41:27)
#loc58 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":42:5)
#loc59 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":45:5)
#loc60 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":47:5)
#loc61 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":44:9)
#loc62 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":48:9)
#loc63 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":62:9)
#loc64 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":49:13)
#loc65 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":49:19)
#loc66 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":50:13)
#loc67 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":50:60)
#loc68 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":50:40)
#loc69 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":50:47)
#loc70 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":50:59)
#loc71 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":51:13)
#loc72 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":51:44)
#loc73 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":51:17)
#loc74 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":51:28)
#loc75 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":51:34)
#loc76 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":51:35)
#loc77 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":51:41)
#loc78 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":51:40)
#loc79 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":53:27)
#loc80 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":53:34)
#loc81 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":53:44)
#loc82 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":53:45)
#loc83 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":53:13)
#loc84 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":54:13)
#loc85 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":54:41)
#loc86 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":54:17)
#loc87 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":54:25)
#loc88 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":54:31)
#loc89 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":54:32)
#loc90 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":54:38)
#loc91 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":54:37)
#loc92 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":55:21)
#loc93 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":55:14)
#loc94 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":55:13)
#loc95 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":56:24)
#loc96 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":56:14)
#loc97 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":56:13)
#loc98 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":57:13)
#loc99 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":60:13)
#loc100 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":58:17)
#loc101 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":58:31)
#loc102 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":58:30)
#loc103 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":59:31)
#loc104 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":59:30)
#loc105 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":59:17)
#loc106 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":61:13)
#loc107 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":61:18)
#loc108 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":67:1)
#loc109 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":87:1)
#loc110 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":69:5)
#loc111 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":86:5)
#loc112 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":69:8)
#loc113 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":69:26)
#loc114 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":70:5)
#loc115 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":71:9)
#loc116 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":85:9)
#loc117 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":72:13)
#loc118 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":72:19)
#loc119 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":73:13)
#loc120 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":73:60)
#loc121 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":73:40)
#loc122 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":73:47)
#loc123 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":73:59)
#loc124 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":74:13)
#loc125 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":74:44)
#loc126 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":74:17)
#loc127 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":74:28)
#loc128 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":74:34)
#loc129 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":74:35)
#loc130 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":74:41)
#loc131 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":74:40)
#loc132 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":76:27)
#loc133 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":76:34)
#loc134 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":76:44)
#loc135 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":76:45)
#loc136 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":76:13)
#loc137 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":77:13)
#loc138 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":77:41)
#loc139 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":77:17)
#loc140 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":77:25)
#loc141 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":77:31)
#loc142 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":77:32)
#loc143 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":77:38)
#loc144 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":77:37)
#loc145 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":78:21)
#loc146 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":78:14)
#loc147 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":78:13)
#loc148 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":79:24)
#loc149 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":79:14)
#loc150 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":79:13)
#loc151 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":80:13)
#loc152 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":83:13)
#loc153 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":81:17)
#loc154 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":81:31)
#loc155 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":81:30)
#loc156 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":82:31)
#loc157 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":82:30)
#loc158 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":82:17)
#loc159 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":84:13)
#loc160 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_11.c":84:18)
#loc161 = loc(fused[#loc1, #loc2])
#loc162 = loc(fused[#loc3, #loc4])
#loc163 = loc(fused[#loc5, #loc6])
#loc164 = loc(fused[#loc7, #loc8])
#loc165 = loc(fused[#loc9, #loc10])
#loc166 = loc(fused[#loc11, #loc12])
#loc167 = loc(fused[#loc13, #loc14])
#loc168 = loc(fused[#loc15, #loc16])
#loc169 = loc(fused[#loc17, #loc14])
#loc170 = loc(fused[#loc18, #loc19])
#loc171 = loc(fused[#loc20, #loc21])
#loc172 = loc(fused[#loc22, #loc23])
#loc173 = loc(fused[#loc25, #loc26])
#loc174 = loc(fused[#loc24, #loc21])
#loc175 = loc(fused[#loc27, #loc28])
#loc176 = loc(fused[#loc29, #loc30])
#loc177 = loc(fused[#loc31, #loc28])
#loc178 = loc(fused[#loc41, #loc42])
#loc179 = loc(fused[#loc43, #loc44])
#loc180 = loc(fused[#loc45, #loc46])
#loc181 = loc(fused[#loc47, #loc48])
#loc182 = loc(fused[#loc49, #loc50])
#loc183 = loc(fused[#loc52, #loc53])
#loc184 = loc(fused[#loc54, #loc55])
#loc185 = loc(fused[#loc56, #loc57])
#loc186 = loc(fused[#loc58, #loc59, #loc60, #loc55])
#loc187 = loc(fused[#loc62, #loc63])
#loc188 = loc(fused[#loc64, #loc65])
#loc189 = loc(fused[#loc66, #loc67])
#loc190 = loc(fused[#loc69, #loc70])
#loc191 = loc(fused[#loc68, #loc67])
#loc192 = loc(fused[#loc71, #loc72])
#loc193 = loc(fused[#loc73, #loc74])
#loc194 = loc(fused[#loc75, #loc72])
#loc195 = loc(fused[#loc80, #loc81])
#loc196 = loc(fused[#loc79, #loc82])
#loc197 = loc(fused[#loc83, #loc82])
#loc198 = loc(fused[#loc84, #loc85])
#loc199 = loc(fused[#loc86, #loc87])
#loc200 = loc(fused[#loc88, #loc85])
#loc201 = loc(fused[#loc94, #loc92])
#loc202 = loc(fused[#loc97, #loc95])
#loc203 = loc(fused[#loc98, #loc99])
#loc204 = loc(fused[#loc100, #loc101])
#loc205 = loc(fused[#loc108, #loc109])
#loc206 = loc(fused[#loc110, #loc111])
#loc207 = loc(fused[#loc112, #loc113])
#loc208 = loc(fused[#loc114, #loc111])
#loc209 = loc(fused[#loc115, #loc116])
#loc210 = loc(fused[#loc117, #loc118])
#loc211 = loc(fused[#loc119, #loc120])
#loc212 = loc(fused[#loc122, #loc123])
#loc213 = loc(fused[#loc121, #loc120])
#loc214 = loc(fused[#loc124, #loc125])
#loc215 = loc(fused[#loc126, #loc127])
#loc216 = loc(fused[#loc128, #loc125])
#loc217 = loc(fused[#loc133, #loc134])
#loc218 = loc(fused[#loc132, #loc135])
#loc219 = loc(fused[#loc136, #loc135])
#loc220 = loc(fused[#loc137, #loc138])
#loc221 = loc(fused[#loc139, #loc140])
#loc222 = loc(fused[#loc141, #loc138])
#loc223 = loc(fused[#loc147, #loc145])
#loc224 = loc(fused[#loc150, #loc148])
#loc225 = loc(fused[#loc151, #loc152])
#loc226 = loc(fused[#loc153, #loc154])
