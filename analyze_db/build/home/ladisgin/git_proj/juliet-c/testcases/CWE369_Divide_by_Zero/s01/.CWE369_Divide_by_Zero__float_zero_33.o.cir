!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc49 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/cmath":238:8)
#loc50 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/cmath":238:14)
#loc113 = loc(fused[#loc49, #loc50])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_zero_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printIntLine(!s32i) loc(#loc91)
  cir.func @_ZN36CWE369_Divide_by_Zero__float_zero_333badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc93)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc94)
    %2 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc95)
    %3 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc96)
    cir.store %2, %3 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc12)
    %4 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc13)
    cir.store %4, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc97)
    %5 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc15)
    cir.store %5, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc98)
    cir.br ^bb1 loc(#loc99)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc6)
    %7 = cir.load %6 : !cir.ptr<!cir.float>, !cir.float loc(#loc6)
    cir.store %7, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc93)
    cir.br ^bb2 loc(#loc100)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc21)
    %9 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc22)
    %10 = cir.cast(floating, %9 : !cir.float), !cir.double loc(#loc22)
    %11 = cir.binop(div, %8, %10) : !cir.double loc(#loc101)
    %12 = cir.cast(float_to_int, %11 : !cir.double), !s32i loc(#loc101)
    cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc94)
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc23)
    cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc24)
    cir.br ^bb3 loc(#loc20)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc18)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc4)
  } loc(#loc92)
  cir.func internal private @_ZN36CWE369_Divide_by_Zero__float_zero_33L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc103)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc104)
    %2 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc105)
    %3 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc106)
    cir.store %2, %3 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc34)
    %4 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc35)
    cir.store %4, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc107)
    %5 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc37)
    cir.store %5, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc108)
    cir.br ^bb1 loc(#loc109)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc28)
    %7 = cir.load %6 : !cir.ptr<!cir.float>, !cir.float loc(#loc28)
    cir.store %7, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc103)
    cir.br ^bb2 loc(#loc110)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc43)
    %9 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc44)
    %10 = cir.cast(floating, %9 : !cir.float), !cir.double loc(#loc44)
    %11 = cir.binop(div, %8, %10) : !cir.double loc(#loc111)
    %12 = cir.cast(float_to_int, %11 : !cir.double), !s32i loc(#loc111)
    cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc104)
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc45)
    cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc46)
    cir.br ^bb3 loc(#loc42)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc40)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc26)
  } loc(#loc102)
  cir.func linkonce_odr @_ZSt4fabsf(%arg0: !cir.float loc(fused[#loc49, #loc50])) -> !cir.float extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["__x", init] {alignment = 4 : i64} loc(#loc113)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["__retval"] {alignment = 4 : i64} loc(#loc48)
    cir.store %arg0, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc51)
    %2 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc52)
    %3 = cir.fabs %2 : !cir.float loc(#loc52)
    cir.store %3, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc114)
    %4 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc114)
    cir.return %4 : !cir.float loc(#loc114)
  } loc(#loc112)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc115)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc57)
  cir.func internal private @_ZN36CWE369_Divide_by_Zero__float_zero_33L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc117)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc118)
    %2 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc119)
    %3 = cir.alloca !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc120)
    cir.store %2, %3 : !cir.ptr<!cir.float>, !cir.ptr<!cir.ptr<!cir.float>> loc(#loc67)
    %4 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc68)
    cir.store %4, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc121)
    %5 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc70)
    cir.store %5, %2 : !cir.float, !cir.ptr<!cir.float> loc(#loc122)
    cir.br ^bb1 loc(#loc123)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.float>>, !cir.ptr<!cir.float> loc(#loc61)
    %7 = cir.load %6 : !cir.ptr<!cir.float>, !cir.float loc(#loc61)
    cir.store %7, %0 : !cir.float, !cir.ptr<!cir.float> loc(#loc117)
    cir.br ^bb2 loc(#loc124)
  ^bb2:  // pred: ^bb1
    %8 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc76)
    %9 = cir.call @_ZSt4fabsf(%8) : (!cir.float) -> !cir.float loc(#loc77)
    %10 = cir.cast(floating, %9 : !cir.float), !cir.double loc(#loc77)
    %11 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc78)
    %12 = cir.cmp(gt, %10, %11) : !cir.double, !cir.bool loc(#loc125)
    cir.brcond %12 ^bb3, ^bb4 loc(#loc126)
  ^bb3:  // pred: ^bb2
    %13 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc82)
    %14 = cir.load %0 : !cir.ptr<!cir.float>, !cir.float loc(#loc83)
    %15 = cir.cast(floating, %14 : !cir.float), !cir.double loc(#loc83)
    %16 = cir.binop(div, %13, %15) : !cir.double loc(#loc127)
    %17 = cir.cast(float_to_int, %16 : !cir.double), !s32i loc(#loc127)
    cir.store %17, %1 : !s32i, !cir.ptr<!s32i> loc(#loc118)
    %18 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc85)
    cir.br ^bb5 loc(#loc80)
  ^bb4:  // pred: ^bb2
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc57)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    cir.br ^bb5 loc(#loc75)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc75)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc73)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc59)
  } loc(#loc116)
  cir.func @_ZN36CWE369_Divide_by_Zero__float_zero_334goodEv() extra(#fn_attr) {
    cir.call @_ZN36CWE369_Divide_by_Zero__float_zero_33L7goodG2BEv() : () -> () loc(#loc89)
    cir.call @_ZN36CWE369_Divide_by_Zero__float_zero_33L7goodB2GEv() : () -> () loc(#loc90)
    cir.return loc(#loc88)
  } loc(#loc128)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_zero_33.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":27:1)
#loc4 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":43:1)
#loc5 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":36:9)
#loc6 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":36:22)
#loc7 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":39:13)
#loc8 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":39:44)
#loc9 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":29:5)
#loc10 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":29:11)
#loc11 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":30:5)
#loc12 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":30:22)
#loc13 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":32:12)
#loc14 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":32:5)
#loc15 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":34:12)
#loc16 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":34:5)
#loc17 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":35:5)
#loc18 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":42:5)
#loc19 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":37:9)
#loc20 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":41:9)
#loc21 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":39:32)
#loc22 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":39:40)
#loc23 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":40:26)
#loc24 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":40:13)
#loc25 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":50:1)
#loc26 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":66:1)
#loc27 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":59:9)
#loc28 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":59:22)
#loc29 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":62:13)
#loc30 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":62:44)
#loc31 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":52:5)
#loc32 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":52:11)
#loc33 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":53:5)
#loc34 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":53:22)
#loc35 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":55:12)
#loc36 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":55:5)
#loc37 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":57:12)
#loc38 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":57:5)
#loc39 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":58:5)
#loc40 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":65:5)
#loc41 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":60:9)
#loc42 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":64:9)
#loc43 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":62:32)
#loc44 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":62:40)
#loc45 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":63:26)
#loc46 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":63:13)
#loc47 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/cmath":237:3)
#loc48 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/cmath":239:34)
#loc51 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/cmath":239:3)
#loc52 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/cmath":239:28)
#loc53 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/cmath":239:5)
#loc54 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/cmath":239:31)
#loc55 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc56 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc57 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":87:23)
#loc58 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":69:1)
#loc59 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":90:1)
#loc60 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":78:9)
#loc61 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":78:22)
#loc62 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":82:13)
#loc63 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":82:44)
#loc64 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":71:5)
#loc65 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":71:11)
#loc66 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":72:5)
#loc67 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":72:22)
#loc68 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":74:12)
#loc69 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":74:5)
#loc70 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":76:12)
#loc71 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":76:5)
#loc72 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":77:5)
#loc73 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":89:5)
#loc74 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":80:9)
#loc75 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":88:9)
#loc76 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":80:17)
#loc77 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":80:12)
#loc78 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":80:25)
#loc79 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":81:9)
#loc80 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":84:9)
#loc81 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":86:9)
#loc82 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":82:32)
#loc83 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":82:40)
#loc84 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":83:26)
#loc85 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":83:13)
#loc86 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":87:13)
#loc87 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":92:1)
#loc88 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":96:1)
#loc89 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":94:5)
#loc90 = loc("CWE369_Divide_by_Zero__float_zero_33.cpp":95:5)
#loc91 = loc(fused[#loc1, #loc2])
#loc92 = loc(fused[#loc3, #loc4])
#loc93 = loc(fused[#loc5, #loc6])
#loc94 = loc(fused[#loc7, #loc8])
#loc95 = loc(fused[#loc9, #loc10])
#loc96 = loc(fused[#loc11, #loc12])
#loc97 = loc(fused[#loc14, #loc13])
#loc98 = loc(fused[#loc16, #loc15])
#loc99 = loc(fused[#loc17, #loc18])
#loc100 = loc(fused[#loc19, #loc20])
#loc101 = loc(fused[#loc21, #loc22])
#loc102 = loc(fused[#loc25, #loc26])
#loc103 = loc(fused[#loc27, #loc28])
#loc104 = loc(fused[#loc29, #loc30])
#loc105 = loc(fused[#loc31, #loc32])
#loc106 = loc(fused[#loc33, #loc34])
#loc107 = loc(fused[#loc36, #loc35])
#loc108 = loc(fused[#loc38, #loc37])
#loc109 = loc(fused[#loc39, #loc40])
#loc110 = loc(fused[#loc41, #loc42])
#loc111 = loc(fused[#loc43, #loc44])
#loc112 = loc(fused[#loc47, #loc48])
#loc114 = loc(fused[#loc53, #loc54])
#loc115 = loc(fused[#loc55, #loc56])
#loc116 = loc(fused[#loc58, #loc59])
#loc117 = loc(fused[#loc60, #loc61])
#loc118 = loc(fused[#loc62, #loc63])
#loc119 = loc(fused[#loc64, #loc65])
#loc120 = loc(fused[#loc66, #loc67])
#loc121 = loc(fused[#loc69, #loc68])
#loc122 = loc(fused[#loc71, #loc70])
#loc123 = loc(fused[#loc72, #loc73])
#loc124 = loc(fused[#loc74, #loc75])
#loc125 = loc(fused[#loc77, #loc78])
#loc126 = loc(fused[#loc79, #loc80, #loc81, #loc75])
#loc127 = loc(fused[#loc82, #loc83])
#loc128 = loc(fused[#loc87, #loc88])
