!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__access_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc260)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc261)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc262)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc7)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc263)
  cir.func private @access(!cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc264)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc265)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc266)
  cir.func private @write(!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc267)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Bad Sink...\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc18)
  cir.func private @close(!s32i) -> !s32i loc(#loc268)
  cir.func no_proto @CWE367_TOC_TOU__access_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc270)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc271)
    cir.br ^bb1 loc(#loc272)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc273)
    %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc29)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc29)
    cir.brcond %4 ^bb2, ^bb29 loc(#loc274)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc275)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc270)
    cir.store %5, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc270)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc34)
    cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc271)
    cir.br ^bb4 loc(#loc276)
  ^bb4:  // pred: ^bb3
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc37)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc38)
    %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc261)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc39)
    %12 = cir.call @fgets(%8, %9, %11) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc40)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc41)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc41)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc277)
    cir.brcond %15 ^bb5, ^bb6 loc(#loc278)
  ^bb5:  // pred: ^bb4
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc7)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc44)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc45)
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
    %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc46)
    cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc279)
    cir.br ^bb6 loc(#loc36)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc36)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc280)
  ^bb8:  // pred: ^bb7
    %23 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc49)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc50)
    %25 = cir.call @strlen(%24) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc49)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc51)
    %28 = cir.cmp(gt, %25, %27) : !u64i, !cir.bool loc(#loc281)
    cir.brcond %28 ^bb9, ^bb10 loc(#loc282)
  ^bb9:  // pred: ^bb8
    %29 = cir.const #cir.int<0> : !s32i loc(#loc53)
    %30 = cir.cast(integral, %29 : !s32i), !s8i loc(#loc53)
    %31 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc54)
    %32 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc55)
    %33 = cir.call @strlen(%32) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc54)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc56)
    %36 = cir.binop(sub, %33, %35) : !u64i loc(#loc283)
    %37 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc57)
    %38 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %36 : !u64i), !cir.ptr<!s8i> loc(#loc57)
    cir.store %30, %38 : !s8i, !cir.ptr<!s8i> loc(#loc284)
    cir.br ^bb10 loc(#loc48)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc48)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc285)
  ^bb12:  // pred: ^bb11
    %39 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc60)
    %40 = cir.const #cir.int<2> : !s32i loc(#loc61)
    %41 = cir.call @access(%39, %40) : (!cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc62)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc63)
    %43 = cir.unary(minus, %42) : !s32i, !s32i loc(#loc64)
    %44 = cir.cmp(eq, %41, %43) : !s32i, !cir.bool loc(#loc286)
    cir.brcond %44 ^bb13, ^bb14 loc(#loc287)
  ^bb13:  // pred: ^bb12
    %45 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc66)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc67)
    cir.call @exit(%46) : (!s32i) -> () extra(#fn_attr) loc(#loc66)
    cir.br ^bb14 loc(#loc59)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc59)
  ^bb15:  // pred: ^bb14
    %47 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc68)
    %48 = cir.const #cir.int<2> : !s32i loc(#loc69)
    %49 = cir.call @open(%47, %48) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc70)
    cir.store %49, %1 : !s32i, !cir.ptr<!s32i> loc(#loc288)
    cir.br ^bb16 loc(#loc289)
  ^bb16:  // pred: ^bb15
    %50 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc75)
    %51 = cir.const #cir.int<1> : !s32i loc(#loc76)
    %52 = cir.unary(minus, %51) : !s32i, !s32i loc(#loc77)
    %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc290)
    cir.brcond %53 ^bb17, ^bb18 loc(#loc291)
  ^bb17:  // pred: ^bb16
    %54 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc79)
    %55 = cir.const #cir.int<1> : !s32i loc(#loc80)
    cir.call @exit(%55) : (!s32i) -> () extra(#fn_attr) loc(#loc79)
    cir.br ^bb18 loc(#loc74)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc74)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc292)
  ^bb20:  // pred: ^bb19
    %56 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    %57 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc18)
    %58 = cir.cast(array_to_ptrdecay, %57 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc18)
    %59 = cir.cast(bitcast, %58 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
    %60 = cir.const #cir.int<11> : !u64i loc(#loc293)
    %61 = cir.call @write(%56, %59, %60) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc86)
    %62 = cir.const #cir.int<1> : !s32i loc(#loc87)
    %63 = cir.unary(minus, %62) : !s32i, !s32i loc(#loc88)
    %64 = cir.cast(integral, %63 : !s32i), !s64i loc(#loc88)
    %65 = cir.cmp(eq, %61, %64) : !s64i, !cir.bool loc(#loc294)
    cir.brcond %65 ^bb21, ^bb22 loc(#loc295)
  ^bb21:  // pred: ^bb20
    %66 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc90)
    %67 = cir.const #cir.int<1> : !s32i loc(#loc91)
    cir.call @exit(%67) : (!s32i) -> () extra(#fn_attr) loc(#loc90)
    cir.br ^bb22 loc(#loc82)
  ^bb22:  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc82)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc296)
  ^bb24:  // pred: ^bb23
    %68 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    %69 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %70 = cir.unary(minus, %69) : !s32i, !s32i loc(#loc96)
    %71 = cir.cmp(ne, %68, %70) : !s32i, !cir.bool loc(#loc297)
    cir.brcond %71 ^bb25, ^bb26 loc(#loc298)
  ^bb25:  // pred: ^bb24
    %72 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    %73 = cir.call @close(%72) : (!s32i) -> !s32i loc(#loc99)
    cir.br ^bb26 loc(#loc93)
  ^bb26:  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc93)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28 loc(#loc33)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc28)
  ^bb29:  // 2 preds: ^bb1, ^bb28
    cir.br ^bb30 loc(#loc28)
  ^bb30:  // pred: ^bb29
    cir.return loc(#loc22)
  } loc(#loc269)
  cir.func no_proto @CWE367_TOC_TOU__access_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc300)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc102)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc301)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc104)
    cir.return loc(#loc101)
  } loc(#loc299)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc107)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc108)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc303)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc303)
    cir.return %2 : !s32i loc(#loc303)
  } loc(#loc302)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc110)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Good Sink...\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc111)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc305)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc306)
    cir.br ^bb1 loc(#loc307)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc308)
    %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc120)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc120)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc309)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc110)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc110)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc125)
    cir.br ^bb26 loc(#loc123)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc310)
  ^bb4:  // pred: ^bb3
    %7 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc305)
    cir.store %7, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc305)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc117)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc128)
    cir.store %9, %1 : !s32i, !cir.ptr<!s32i> loc(#loc306)
    cir.br ^bb5 loc(#loc311)
  ^bb5:  // pred: ^bb4
    %10 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc131)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc132)
    %12 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc261)
    %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc133)
    %14 = cir.call @fgets(%10, %11, %13) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc134)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc135)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc135)
    %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc312)
    cir.brcond %17 ^bb6, ^bb7 loc(#loc313)
  ^bb6:  // pred: ^bb5
    %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc137)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc137)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc138)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc139)
    %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc139)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc140)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc141)
    %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc141)
    cir.store %21, %24 : !s8i, !cir.ptr<!s8i> loc(#loc314)
    cir.br ^bb7 loc(#loc130)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc130)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc315)
  ^bb9:  // pred: ^bb8
    %25 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc144)
    %26 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc145)
    %27 = cir.call @strlen(%26) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc144)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc146)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc146)
    %30 = cir.cmp(gt, %27, %29) : !u64i, !cir.bool loc(#loc316)
    cir.brcond %30 ^bb10, ^bb11 loc(#loc317)
  ^bb10:  // pred: ^bb9
    %31 = cir.const #cir.int<0> : !s32i loc(#loc148)
    %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc148)
    %33 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc149)
    %34 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc150)
    %35 = cir.call @strlen(%34) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc149)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc151)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc151)
    %38 = cir.binop(sub, %35, %37) : !u64i loc(#loc318)
    %39 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc152)
    %40 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc152)
    cir.store %32, %40 : !s8i, !cir.ptr<!s8i> loc(#loc319)
    cir.br ^bb11 loc(#loc143)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc143)
  ^bb12:  // pred: ^bb11
    %41 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc153)
    %42 = cir.const #cir.int<2> : !s32i loc(#loc154)
    %43 = cir.call @open(%41, %42) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc155)
    cir.store %43, %1 : !s32i, !cir.ptr<!s32i> loc(#loc320)
    cir.br ^bb13 loc(#loc321)
  ^bb13:  // pred: ^bb12
    %44 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc160)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc161)
    %46 = cir.unary(minus, %45) : !s32i, !s32i loc(#loc162)
    %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc322)
    cir.brcond %47 ^bb14, ^bb15 loc(#loc323)
  ^bb14:  // pred: ^bb13
    %48 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc164)
    %49 = cir.const #cir.int<1> : !s32i loc(#loc165)
    cir.call @exit(%49) : (!s32i) -> () extra(#fn_attr) loc(#loc164)
    cir.br ^bb15 loc(#loc159)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc159)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc324)
  ^bb17:  // pred: ^bb16
    %50 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc168)
    %51 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc111)
    %52 = cir.cast(array_to_ptrdecay, %51 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc111)
    %53 = cir.cast(bitcast, %52 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc111)
    %54 = cir.const #cir.int<12> : !u64i loc(#loc325)
    %55 = cir.call @write(%50, %53, %54) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc171)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc172)
    %57 = cir.unary(minus, %56) : !s32i, !s32i loc(#loc173)
    %58 = cir.cast(integral, %57 : !s32i), !s64i loc(#loc173)
    %59 = cir.cmp(eq, %55, %58) : !s64i, !cir.bool loc(#loc326)
    cir.brcond %59 ^bb18, ^bb19 loc(#loc327)
  ^bb18:  // pred: ^bb17
    %60 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc175)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc176)
    cir.call @exit(%61) : (!s32i) -> () extra(#fn_attr) loc(#loc175)
    cir.br ^bb19 loc(#loc167)
  ^bb19:  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc167)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc328)
  ^bb21:  // pred: ^bb20
    %62 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc179)
    %63 = cir.const #cir.int<1> : !s32i loc(#loc180)
    %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc181)
    %65 = cir.cmp(ne, %62, %64) : !s32i, !cir.bool loc(#loc329)
    cir.brcond %65 ^bb22, ^bb23 loc(#loc330)
  ^bb22:  // pred: ^bb21
    %66 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc183)
    %67 = cir.call @close(%66) : (!s32i) -> !s32i loc(#loc184)
    cir.br ^bb23 loc(#loc178)
  ^bb23:  // 2 preds: ^bb21, ^bb22
    cir.br ^bb24 loc(#loc178)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc127)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc119)
  ^bb26:  // 2 preds: ^bb2, ^bb25
    cir.br ^bb27 loc(#loc119)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc113)
  } loc(#loc304)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc186)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc187)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc332)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc332)
    cir.return %2 : !s32i loc(#loc332)
  } loc(#loc331)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc334)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc335)
    cir.br ^bb1 loc(#loc336)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc337)
    %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc197)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc197)
    cir.brcond %4 ^bb2, ^bb25 loc(#loc338)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc339)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc334)
    cir.store %5, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc334)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc194)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc202)
    cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc335)
    cir.br ^bb4 loc(#loc340)
  ^bb4:  // pred: ^bb3
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc205)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc206)
    %10 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc261)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc207)
    %12 = cir.call @fgets(%8, %9, %11) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc208)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc209)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc209)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc341)
    cir.brcond %15 ^bb5, ^bb6 loc(#loc342)
  ^bb5:  // pred: ^bb4
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc211)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc211)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc212)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc213)
    %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc213)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc214)
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc215)
    %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc215)
    cir.store %19, %22 : !s8i, !cir.ptr<!s8i> loc(#loc343)
    cir.br ^bb6 loc(#loc204)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc204)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc344)
  ^bb8:  // pred: ^bb7
    %23 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc218)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc219)
    %25 = cir.call @strlen(%24) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc218)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc220)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc220)
    %28 = cir.cmp(gt, %25, %27) : !u64i, !cir.bool loc(#loc345)
    cir.brcond %28 ^bb9, ^bb10 loc(#loc346)
  ^bb9:  // pred: ^bb8
    %29 = cir.const #cir.int<0> : !s32i loc(#loc222)
    %30 = cir.cast(integral, %29 : !s32i), !s8i loc(#loc222)
    %31 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc223)
    %32 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc224)
    %33 = cir.call @strlen(%32) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc223)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc225)
    %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc225)
    %36 = cir.binop(sub, %33, %35) : !u64i loc(#loc347)
    %37 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc226)
    %38 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %36 : !u64i), !cir.ptr<!s8i> loc(#loc226)
    cir.store %30, %38 : !s8i, !cir.ptr<!s8i> loc(#loc348)
    cir.br ^bb10 loc(#loc217)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc217)
  ^bb11:  // pred: ^bb10
    %39 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc227)
    %40 = cir.const #cir.int<2> : !s32i loc(#loc228)
    %41 = cir.call @open(%39, %40) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc229)
    cir.store %41, %1 : !s32i, !cir.ptr<!s32i> loc(#loc349)
    cir.br ^bb12 loc(#loc350)
  ^bb12:  // pred: ^bb11
    %42 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc234)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc235)
    %44 = cir.unary(minus, %43) : !s32i, !s32i loc(#loc236)
    %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc351)
    cir.brcond %45 ^bb13, ^bb14 loc(#loc352)
  ^bb13:  // pred: ^bb12
    %46 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc238)
    %47 = cir.const #cir.int<1> : !s32i loc(#loc239)
    cir.call @exit(%47) : (!s32i) -> () extra(#fn_attr) loc(#loc238)
    cir.br ^bb14 loc(#loc233)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc233)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc353)
  ^bb16:  // pred: ^bb15
    %48 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc242)
    %49 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc243)
    %50 = cir.cast(array_to_ptrdecay, %49 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc243)
    %51 = cir.cast(bitcast, %50 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc243)
    %52 = cir.const #cir.int<12> : !u64i loc(#loc354)
    %53 = cir.call @write(%48, %51, %52) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc246)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc247)
    %55 = cir.unary(minus, %54) : !s32i, !s32i loc(#loc248)
    %56 = cir.cast(integral, %55 : !s32i), !s64i loc(#loc248)
    %57 = cir.cmp(eq, %53, %56) : !s64i, !cir.bool loc(#loc355)
    cir.brcond %57 ^bb17, ^bb18 loc(#loc356)
  ^bb17:  // pred: ^bb16
    %58 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc250)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc251)
    cir.call @exit(%59) : (!s32i) -> () extra(#fn_attr) loc(#loc250)
    cir.br ^bb18 loc(#loc241)
  ^bb18:  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc241)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc357)
  ^bb20:  // pred: ^bb19
    %60 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc254)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc255)
    %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc256)
    %63 = cir.cmp(ne, %60, %62) : !s32i, !cir.bool loc(#loc358)
    cir.brcond %63 ^bb21, ^bb22 loc(#loc359)
  ^bb21:  // pred: ^bb20
    %64 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc258)
    %65 = cir.call @close(%64) : (!s32i) -> !s32i loc(#loc259)
    cir.br ^bb22 loc(#loc253)
  ^bb22:  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc253)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc201)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc196)
  ^bb25:  // 2 preds: ^bb1, ^bb24
    cir.br ^bb26 loc(#loc196)
  ^bb26:  // pred: ^bb25
    cir.return loc(#loc190)
  } loc(#loc333)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__access_08.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE367_TOC_TOU__access_08.c":66:27)
#loc8 = loc("/usr/include/string.h":407:1)
#loc9 = loc("/usr/include/string.h":408:33)
#loc10 = loc("/usr/include/unistd.h":287:1)
#loc11 = loc("/usr/include/unistd.h":287:60)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("/usr/include/fcntl.h":209:1)
#loc15 = loc("/usr/include/fcntl.h":209:56)
#loc16 = loc("/usr/include/unistd.h":378:1)
#loc17 = loc("/usr/include/unistd.h":378:62)
#loc18 = loc("CWE367_TOC_TOU__access_08.c":84:33)
#loc19 = loc("/usr/include/unistd.h":358:1)
#loc20 = loc("/usr/include/unistd.h":358:27)
#loc21 = loc("CWE367_TOC_TOU__access_08.c":57:1)
#loc22 = loc("CWE367_TOC_TOU__access_08.c":94:1)
#loc23 = loc("CWE367_TOC_TOU__access_08.c":62:13)
#loc24 = loc("CWE367_TOC_TOU__access_08.c":62:34)
#loc25 = loc("CWE367_TOC_TOU__access_08.c":63:13)
#loc26 = loc("CWE367_TOC_TOU__access_08.c":63:29)
#loc27 = loc("CWE367_TOC_TOU__access_08.c":59:5)
#loc28 = loc("CWE367_TOC_TOU__access_08.c":93:5)
#loc29 = loc("CWE367_TOC_TOU__access_08.c":59:8)
#loc30 = loc("CWE367_TOC_TOU__access_08.c":59:26)
#loc31 = loc("CWE367_TOC_TOU__access_08.c":60:5)
#loc32 = loc("CWE367_TOC_TOU__access_08.c":61:9)
#loc33 = loc("CWE367_TOC_TOU__access_08.c":92:9)
#loc34 = loc("CWE367_TOC_TOU__access_08.c":63:28)
#loc35 = loc("CWE367_TOC_TOU__access_08.c":64:13)
#loc36 = loc("CWE367_TOC_TOU__access_08.c":69:13)
#loc37 = loc("CWE367_TOC_TOU__access_08.c":64:23)
#loc38 = loc("CWE367_TOC_TOU__access_08.c":64:33)
#loc39 = loc("CWE367_TOC_TOU__access_08.c":64:38)
#loc40 = loc("CWE367_TOC_TOU__access_08.c":64:17)
#loc41 = loc("CWE367_TOC_TOU__access_08.c":64:48)
#loc42 = loc("CWE367_TOC_TOU__access_08.c":65:13)
#loc43 = loc("CWE367_TOC_TOU__access_08.c":66:17)
#loc44 = loc("CWE367_TOC_TOU__access_08.c":68:31)
#loc45 = loc("CWE367_TOC_TOU__access_08.c":68:26)
#loc46 = loc("CWE367_TOC_TOU__access_08.c":68:17)
#loc47 = loc("CWE367_TOC_TOU__access_08.c":70:13)
#loc48 = loc("CWE367_TOC_TOU__access_08.c":73:13)
#loc49 = loc("CWE367_TOC_TOU__access_08.c":70:17)
#loc50 = loc("CWE367_TOC_TOU__access_08.c":70:24)
#loc51 = loc("CWE367_TOC_TOU__access_08.c":70:36)
#loc52 = loc("CWE367_TOC_TOU__access_08.c":71:13)
#loc53 = loc("CWE367_TOC_TOU__access_08.c":72:48)
#loc54 = loc("CWE367_TOC_TOU__access_08.c":72:26)
#loc55 = loc("CWE367_TOC_TOU__access_08.c":72:33)
#loc56 = loc("CWE367_TOC_TOU__access_08.c":72:43)
#loc57 = loc("CWE367_TOC_TOU__access_08.c":72:17)
#loc58 = loc("CWE367_TOC_TOU__access_08.c":75:13)
#loc59 = loc("CWE367_TOC_TOU__access_08.c":78:13)
#loc60 = loc("CWE367_TOC_TOU__access_08.c":75:24)
#loc61 = loc("CWE367_TOC_TOU__access_08.c":75:34)
#loc62 = loc("CWE367_TOC_TOU__access_08.c":75:17)
#loc63 = loc("CWE367_TOC_TOU__access_08.c":75:44)
#loc64 = loc("CWE367_TOC_TOU__access_08.c":75:43)
#loc65 = loc("CWE367_TOC_TOU__access_08.c":76:13)
#loc66 = loc("CWE367_TOC_TOU__access_08.c":77:17)
#loc67 = loc("CWE367_TOC_TOU__access_08.c":77:22)
#loc68 = loc("CWE367_TOC_TOU__access_08.c":79:30)
#loc69 = loc("CWE367_TOC_TOU__access_08.c":79:40)
#loc70 = loc("CWE367_TOC_TOU__access_08.c":79:25)
#loc71 = loc("CWE367_TOC_TOU__access_08.c":79:13)
#loc72 = loc("CWE367_TOC_TOU__access_08.c":79:46)
#loc73 = loc("CWE367_TOC_TOU__access_08.c":80:13)
#loc74 = loc("CWE367_TOC_TOU__access_08.c":83:13)
#loc75 = loc("CWE367_TOC_TOU__access_08.c":80:17)
#loc76 = loc("CWE367_TOC_TOU__access_08.c":80:30)
#loc77 = loc("CWE367_TOC_TOU__access_08.c":80:29)
#loc78 = loc("CWE367_TOC_TOU__access_08.c":81:13)
#loc79 = loc("CWE367_TOC_TOU__access_08.c":82:17)
#loc80 = loc("CWE367_TOC_TOU__access_08.c":82:22)
#loc81 = loc("CWE367_TOC_TOU__access_08.c":84:13)
#loc82 = loc("CWE367_TOC_TOU__access_08.c":87:13)
#loc83 = loc("CWE367_TOC_TOU__access_08.c":84:23)
#loc84 = loc("CWE367_TOC_TOU__access_08.c":84:50)
#loc85 = loc("CWE367_TOC_TOU__access_08.c":84:72)
#loc86 = loc("CWE367_TOC_TOU__access_08.c":84:17)
#loc87 = loc("CWE367_TOC_TOU__access_08.c":84:79)
#loc88 = loc("CWE367_TOC_TOU__access_08.c":84:78)
#loc89 = loc("CWE367_TOC_TOU__access_08.c":85:13)
#loc90 = loc("CWE367_TOC_TOU__access_08.c":86:17)
#loc91 = loc("CWE367_TOC_TOU__access_08.c":86:22)
#loc92 = loc("CWE367_TOC_TOU__access_08.c":88:13)
#loc93 = loc("CWE367_TOC_TOU__access_08.c":91:13)
#loc94 = loc("CWE367_TOC_TOU__access_08.c":88:17)
#loc95 = loc("CWE367_TOC_TOU__access_08.c":88:30)
#loc96 = loc("CWE367_TOC_TOU__access_08.c":88:29)
#loc97 = loc("CWE367_TOC_TOU__access_08.c":89:13)
#loc98 = loc("CWE367_TOC_TOU__access_08.c":90:23)
#loc99 = loc("CWE367_TOC_TOU__access_08.c":90:17)
#loc100 = loc("CWE367_TOC_TOU__access_08.c":177:1)
#loc101 = loc("CWE367_TOC_TOU__access_08.c":181:1)
#loc102 = loc("CWE367_TOC_TOU__access_08.c":179:5)
#loc103 = loc("CWE367_TOC_TOU__access_08.c":179:11)
#loc104 = loc("CWE367_TOC_TOU__access_08.c":180:5)
#loc105 = loc("CWE367_TOC_TOU__access_08.c":180:11)
#loc106 = loc("CWE367_TOC_TOU__access_08.c":45:1)
#loc107 = loc("CWE367_TOC_TOU__access_08.c":48:1)
#loc108 = loc("CWE367_TOC_TOU__access_08.c":47:12)
#loc109 = loc("CWE367_TOC_TOU__access_08.c":47:5)
#loc110 = loc("CWE367_TOC_TOU__access_08.c":106:19)
#loc111 = loc("CWE367_TOC_TOU__access_08.c":129:33)
#loc112 = loc("CWE367_TOC_TOU__access_08.c":101:1)
#loc113 = loc("CWE367_TOC_TOU__access_08.c":139:1)
#loc114 = loc("CWE367_TOC_TOU__access_08.c":111:13)
#loc115 = loc("CWE367_TOC_TOU__access_08.c":111:34)
#loc116 = loc("CWE367_TOC_TOU__access_08.c":112:13)
#loc117 = loc("CWE367_TOC_TOU__access_08.c":112:29)
#loc118 = loc("CWE367_TOC_TOU__access_08.c":103:5)
#loc119 = loc("CWE367_TOC_TOU__access_08.c":138:5)
#loc120 = loc("CWE367_TOC_TOU__access_08.c":103:8)
#loc121 = loc("CWE367_TOC_TOU__access_08.c":103:27)
#loc122 = loc("CWE367_TOC_TOU__access_08.c":104:5)
#loc123 = loc("CWE367_TOC_TOU__access_08.c":107:5)
#loc124 = loc("CWE367_TOC_TOU__access_08.c":109:5)
#loc125 = loc("CWE367_TOC_TOU__access_08.c":106:9)
#loc126 = loc("CWE367_TOC_TOU__access_08.c":110:9)
#loc127 = loc("CWE367_TOC_TOU__access_08.c":137:9)
#loc128 = loc("CWE367_TOC_TOU__access_08.c":112:28)
#loc129 = loc("CWE367_TOC_TOU__access_08.c":113:13)
#loc130 = loc("CWE367_TOC_TOU__access_08.c":118:13)
#loc131 = loc("CWE367_TOC_TOU__access_08.c":113:23)
#loc132 = loc("CWE367_TOC_TOU__access_08.c":113:33)
#loc133 = loc("CWE367_TOC_TOU__access_08.c":113:38)
#loc134 = loc("CWE367_TOC_TOU__access_08.c":113:17)
#loc135 = loc("CWE367_TOC_TOU__access_08.c":113:48)
#loc136 = loc("CWE367_TOC_TOU__access_08.c":114:13)
#loc137 = loc("CWE367_TOC_TOU__access_08.c":115:27)
#loc138 = loc("CWE367_TOC_TOU__access_08.c":115:17)
#loc139 = loc("CWE367_TOC_TOU__access_08.c":117:31)
#loc140 = loc("CWE367_TOC_TOU__access_08.c":117:26)
#loc141 = loc("CWE367_TOC_TOU__access_08.c":117:17)
#loc142 = loc("CWE367_TOC_TOU__access_08.c":119:13)
#loc143 = loc("CWE367_TOC_TOU__access_08.c":122:13)
#loc144 = loc("CWE367_TOC_TOU__access_08.c":119:17)
#loc145 = loc("CWE367_TOC_TOU__access_08.c":119:24)
#loc146 = loc("CWE367_TOC_TOU__access_08.c":119:36)
#loc147 = loc("CWE367_TOC_TOU__access_08.c":120:13)
#loc148 = loc("CWE367_TOC_TOU__access_08.c":121:48)
#loc149 = loc("CWE367_TOC_TOU__access_08.c":121:26)
#loc150 = loc("CWE367_TOC_TOU__access_08.c":121:33)
#loc151 = loc("CWE367_TOC_TOU__access_08.c":121:43)
#loc152 = loc("CWE367_TOC_TOU__access_08.c":121:17)
#loc153 = loc("CWE367_TOC_TOU__access_08.c":124:30)
#loc154 = loc("CWE367_TOC_TOU__access_08.c":124:40)
#loc155 = loc("CWE367_TOC_TOU__access_08.c":124:25)
#loc156 = loc("CWE367_TOC_TOU__access_08.c":124:13)
#loc157 = loc("CWE367_TOC_TOU__access_08.c":124:46)
#loc158 = loc("CWE367_TOC_TOU__access_08.c":125:13)
#loc159 = loc("CWE367_TOC_TOU__access_08.c":128:13)
#loc160 = loc("CWE367_TOC_TOU__access_08.c":125:17)
#loc161 = loc("CWE367_TOC_TOU__access_08.c":125:30)
#loc162 = loc("CWE367_TOC_TOU__access_08.c":125:29)
#loc163 = loc("CWE367_TOC_TOU__access_08.c":126:13)
#loc164 = loc("CWE367_TOC_TOU__access_08.c":127:17)
#loc165 = loc("CWE367_TOC_TOU__access_08.c":127:22)
#loc166 = loc("CWE367_TOC_TOU__access_08.c":129:13)
#loc167 = loc("CWE367_TOC_TOU__access_08.c":132:13)
#loc168 = loc("CWE367_TOC_TOU__access_08.c":129:23)
#loc169 = loc("CWE367_TOC_TOU__access_08.c":129:51)
#loc170 = loc("CWE367_TOC_TOU__access_08.c":129:74)
#loc171 = loc("CWE367_TOC_TOU__access_08.c":129:17)
#loc172 = loc("CWE367_TOC_TOU__access_08.c":129:81)
#loc173 = loc("CWE367_TOC_TOU__access_08.c":129:80)
#loc174 = loc("CWE367_TOC_TOU__access_08.c":130:13)
#loc175 = loc("CWE367_TOC_TOU__access_08.c":131:17)
#loc176 = loc("CWE367_TOC_TOU__access_08.c":131:22)
#loc177 = loc("CWE367_TOC_TOU__access_08.c":133:13)
#loc178 = loc("CWE367_TOC_TOU__access_08.c":136:13)
#loc179 = loc("CWE367_TOC_TOU__access_08.c":133:17)
#loc180 = loc("CWE367_TOC_TOU__access_08.c":133:30)
#loc181 = loc("CWE367_TOC_TOU__access_08.c":133:29)
#loc182 = loc("CWE367_TOC_TOU__access_08.c":134:13)
#loc183 = loc("CWE367_TOC_TOU__access_08.c":135:23)
#loc184 = loc("CWE367_TOC_TOU__access_08.c":135:17)
#loc185 = loc("CWE367_TOC_TOU__access_08.c":50:1)
#loc186 = loc("CWE367_TOC_TOU__access_08.c":53:1)
#loc187 = loc("CWE367_TOC_TOU__access_08.c":52:12)
#loc188 = loc("CWE367_TOC_TOU__access_08.c":52:5)
#loc189 = loc("CWE367_TOC_TOU__access_08.c":142:1)
#loc190 = loc("CWE367_TOC_TOU__access_08.c":175:1)
#loc191 = loc("CWE367_TOC_TOU__access_08.c":147:13)
#loc192 = loc("CWE367_TOC_TOU__access_08.c":147:34)
#loc193 = loc("CWE367_TOC_TOU__access_08.c":148:13)
#loc194 = loc("CWE367_TOC_TOU__access_08.c":148:29)
#loc195 = loc("CWE367_TOC_TOU__access_08.c":144:5)
#loc196 = loc("CWE367_TOC_TOU__access_08.c":174:5)
#loc197 = loc("CWE367_TOC_TOU__access_08.c":144:8)
#loc198 = loc("CWE367_TOC_TOU__access_08.c":144:26)
#loc199 = loc("CWE367_TOC_TOU__access_08.c":145:5)
#loc200 = loc("CWE367_TOC_TOU__access_08.c":146:9)
#loc201 = loc("CWE367_TOC_TOU__access_08.c":173:9)
#loc202 = loc("CWE367_TOC_TOU__access_08.c":148:28)
#loc203 = loc("CWE367_TOC_TOU__access_08.c":149:13)
#loc204 = loc("CWE367_TOC_TOU__access_08.c":154:13)
#loc205 = loc("CWE367_TOC_TOU__access_08.c":149:23)
#loc206 = loc("CWE367_TOC_TOU__access_08.c":149:33)
#loc207 = loc("CWE367_TOC_TOU__access_08.c":149:38)
#loc208 = loc("CWE367_TOC_TOU__access_08.c":149:17)
#loc209 = loc("CWE367_TOC_TOU__access_08.c":149:48)
#loc210 = loc("CWE367_TOC_TOU__access_08.c":150:13)
#loc211 = loc("CWE367_TOC_TOU__access_08.c":151:27)
#loc212 = loc("CWE367_TOC_TOU__access_08.c":151:17)
#loc213 = loc("CWE367_TOC_TOU__access_08.c":153:31)
#loc214 = loc("CWE367_TOC_TOU__access_08.c":153:26)
#loc215 = loc("CWE367_TOC_TOU__access_08.c":153:17)
#loc216 = loc("CWE367_TOC_TOU__access_08.c":155:13)
#loc217 = loc("CWE367_TOC_TOU__access_08.c":158:13)
#loc218 = loc("CWE367_TOC_TOU__access_08.c":155:17)
#loc219 = loc("CWE367_TOC_TOU__access_08.c":155:24)
#loc220 = loc("CWE367_TOC_TOU__access_08.c":155:36)
#loc221 = loc("CWE367_TOC_TOU__access_08.c":156:13)
#loc222 = loc("CWE367_TOC_TOU__access_08.c":157:48)
#loc223 = loc("CWE367_TOC_TOU__access_08.c":157:26)
#loc224 = loc("CWE367_TOC_TOU__access_08.c":157:33)
#loc225 = loc("CWE367_TOC_TOU__access_08.c":157:43)
#loc226 = loc("CWE367_TOC_TOU__access_08.c":157:17)
#loc227 = loc("CWE367_TOC_TOU__access_08.c":160:30)
#loc228 = loc("CWE367_TOC_TOU__access_08.c":160:40)
#loc229 = loc("CWE367_TOC_TOU__access_08.c":160:25)
#loc230 = loc("CWE367_TOC_TOU__access_08.c":160:13)
#loc231 = loc("CWE367_TOC_TOU__access_08.c":160:46)
#loc232 = loc("CWE367_TOC_TOU__access_08.c":161:13)
#loc233 = loc("CWE367_TOC_TOU__access_08.c":164:13)
#loc234 = loc("CWE367_TOC_TOU__access_08.c":161:17)
#loc235 = loc("CWE367_TOC_TOU__access_08.c":161:30)
#loc236 = loc("CWE367_TOC_TOU__access_08.c":161:29)
#loc237 = loc("CWE367_TOC_TOU__access_08.c":162:13)
#loc238 = loc("CWE367_TOC_TOU__access_08.c":163:17)
#loc239 = loc("CWE367_TOC_TOU__access_08.c":163:22)
#loc240 = loc("CWE367_TOC_TOU__access_08.c":165:13)
#loc241 = loc("CWE367_TOC_TOU__access_08.c":168:13)
#loc242 = loc("CWE367_TOC_TOU__access_08.c":165:23)
#loc243 = loc("CWE367_TOC_TOU__access_08.c":165:33)
#loc244 = loc("CWE367_TOC_TOU__access_08.c":165:51)
#loc245 = loc("CWE367_TOC_TOU__access_08.c":165:74)
#loc246 = loc("CWE367_TOC_TOU__access_08.c":165:17)
#loc247 = loc("CWE367_TOC_TOU__access_08.c":165:81)
#loc248 = loc("CWE367_TOC_TOU__access_08.c":165:80)
#loc249 = loc("CWE367_TOC_TOU__access_08.c":166:13)
#loc250 = loc("CWE367_TOC_TOU__access_08.c":167:17)
#loc251 = loc("CWE367_TOC_TOU__access_08.c":167:22)
#loc252 = loc("CWE367_TOC_TOU__access_08.c":169:13)
#loc253 = loc("CWE367_TOC_TOU__access_08.c":172:13)
#loc254 = loc("CWE367_TOC_TOU__access_08.c":169:17)
#loc255 = loc("CWE367_TOC_TOU__access_08.c":169:30)
#loc256 = loc("CWE367_TOC_TOU__access_08.c":169:29)
#loc257 = loc("CWE367_TOC_TOU__access_08.c":170:13)
#loc258 = loc("CWE367_TOC_TOU__access_08.c":171:23)
#loc259 = loc("CWE367_TOC_TOU__access_08.c":171:17)
#loc260 = loc(fused[#loc1, #loc2])
#loc261 = loc(fused[#loc3, #loc4])
#loc262 = loc(fused[#loc5, #loc6])
#loc263 = loc(fused[#loc8, #loc9])
#loc264 = loc(fused[#loc10, #loc11])
#loc265 = loc(fused[#loc12, #loc13])
#loc266 = loc(fused[#loc14, #loc15])
#loc267 = loc(fused[#loc16, #loc17])
#loc268 = loc(fused[#loc19, #loc20])
#loc269 = loc(fused[#loc21, #loc22])
#loc270 = loc(fused[#loc23, #loc24])
#loc271 = loc(fused[#loc25, #loc26])
#loc272 = loc(fused[#loc27, #loc28])
#loc273 = loc(fused[#loc29, #loc30])
#loc274 = loc(fused[#loc31, #loc28])
#loc275 = loc(fused[#loc32, #loc33])
#loc276 = loc(fused[#loc35, #loc36])
#loc277 = loc(fused[#loc40, #loc41])
#loc278 = loc(fused[#loc42, #loc36])
#loc279 = loc(fused[#loc46, #loc44])
#loc280 = loc(fused[#loc47, #loc48])
#loc281 = loc(fused[#loc49, #loc51])
#loc282 = loc(fused[#loc52, #loc48])
#loc283 = loc(fused[#loc54, #loc56])
#loc284 = loc(fused[#loc57, #loc53])
#loc285 = loc(fused[#loc58, #loc59])
#loc286 = loc(fused[#loc62, #loc63])
#loc287 = loc(fused[#loc65, #loc59])
#loc288 = loc(fused[#loc71, #loc72])
#loc289 = loc(fused[#loc73, #loc74])
#loc290 = loc(fused[#loc75, #loc76])
#loc291 = loc(fused[#loc78, #loc74])
#loc292 = loc(fused[#loc81, #loc82])
#loc293 = loc(fused[#loc84, #loc85])
#loc294 = loc(fused[#loc86, #loc87])
#loc295 = loc(fused[#loc89, #loc82])
#loc296 = loc(fused[#loc92, #loc93])
#loc297 = loc(fused[#loc94, #loc95])
#loc298 = loc(fused[#loc97, #loc93])
#loc299 = loc(fused[#loc100, #loc101])
#loc300 = loc(fused[#loc102, #loc103])
#loc301 = loc(fused[#loc104, #loc105])
#loc302 = loc(fused[#loc106, #loc107])
#loc303 = loc(fused[#loc109, #loc108])
#loc304 = loc(fused[#loc112, #loc113])
#loc305 = loc(fused[#loc114, #loc115])
#loc306 = loc(fused[#loc116, #loc117])
#loc307 = loc(fused[#loc118, #loc119])
#loc308 = loc(fused[#loc120, #loc121])
#loc309 = loc(fused[#loc122, #loc123, #loc124, #loc119])
#loc310 = loc(fused[#loc126, #loc127])
#loc311 = loc(fused[#loc129, #loc130])
#loc312 = loc(fused[#loc134, #loc135])
#loc313 = loc(fused[#loc136, #loc130])
#loc314 = loc(fused[#loc141, #loc139])
#loc315 = loc(fused[#loc142, #loc143])
#loc316 = loc(fused[#loc144, #loc146])
#loc317 = loc(fused[#loc147, #loc143])
#loc318 = loc(fused[#loc149, #loc151])
#loc319 = loc(fused[#loc152, #loc148])
#loc320 = loc(fused[#loc156, #loc157])
#loc321 = loc(fused[#loc158, #loc159])
#loc322 = loc(fused[#loc160, #loc161])
#loc323 = loc(fused[#loc163, #loc159])
#loc324 = loc(fused[#loc166, #loc167])
#loc325 = loc(fused[#loc169, #loc170])
#loc326 = loc(fused[#loc171, #loc172])
#loc327 = loc(fused[#loc174, #loc167])
#loc328 = loc(fused[#loc177, #loc178])
#loc329 = loc(fused[#loc179, #loc180])
#loc330 = loc(fused[#loc182, #loc178])
#loc331 = loc(fused[#loc185, #loc186])
#loc332 = loc(fused[#loc188, #loc187])
#loc333 = loc(fused[#loc189, #loc190])
#loc334 = loc(fused[#loc191, #loc192])
#loc335 = loc(fused[#loc193, #loc194])
#loc336 = loc(fused[#loc195, #loc196])
#loc337 = loc(fused[#loc197, #loc198])
#loc338 = loc(fused[#loc199, #loc196])
#loc339 = loc(fused[#loc200, #loc201])
#loc340 = loc(fused[#loc203, #loc204])
#loc341 = loc(fused[#loc208, #loc209])
#loc342 = loc(fused[#loc210, #loc204])
#loc343 = loc(fused[#loc215, #loc213])
#loc344 = loc(fused[#loc216, #loc217])
#loc345 = loc(fused[#loc218, #loc220])
#loc346 = loc(fused[#loc221, #loc217])
#loc347 = loc(fused[#loc223, #loc225])
#loc348 = loc(fused[#loc226, #loc222])
#loc349 = loc(fused[#loc230, #loc231])
#loc350 = loc(fused[#loc232, #loc233])
#loc351 = loc(fused[#loc234, #loc235])
#loc352 = loc(fused[#loc237, #loc233])
#loc353 = loc(fused[#loc240, #loc241])
#loc354 = loc(fused[#loc244, #loc245])
#loc355 = loc(fused[#loc246, #loc247])
#loc356 = loc(fused[#loc249, #loc241])
#loc357 = loc(fused[#loc252, #loc253])
#loc358 = loc(fused[#loc254, #loc255])
#loc359 = loc(fused[#loc257, #loc253])
