!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc3 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc198 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":203:10)
#loc199 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":203:14)
#loc200 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":203:20)
#loc201 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":203:32)
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
#loc269 = loc(fused[#loc198, #loc199])
#loc270 = loc(fused[#loc200, #loc201])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s06/CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc214)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc3)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc3)
    cir.return loc(#loc3)
  } loc(#loc3)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc215)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc6)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc216)
  cir.func @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_153badEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc218)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc219)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc17)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.const #cir.int<8> : !u64i loc(#loc221)
          %4 = cir.call @_Znwm(%3) : (!u64i) -> !cir.ptr<!void> loc(#loc21)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc221)
          cir.call @_ZN12TwoIntsClassC2Ev(%5) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc20)
          cir.store %5, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc222)
          cir.break loc(#loc23)
        } loc(#loc18)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc6)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc6)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc25)
          cir.break loc(#loc26)
        } loc(#loc24)
        cir.yield loc(#loc15)
      } loc(#loc15)
    } loc(#loc220)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc29)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc31)
          %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc32)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc32)
          cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc31)
          cir.break loc(#loc33)
        } loc(#loc30)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc35)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc35)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc36)
          cir.break loc(#loc37)
        } loc(#loc34)
        cir.yield loc(#loc27)
      } loc(#loc27)
    } loc(#loc223)
    cir.return loc(#loc10)
  } loc(#loc217)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc224)
  cir.func internal private @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_15L8goodB2G1Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc226)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc44)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc227)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc48)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.const #cir.int<8> : !u64i loc(#loc229)
          %4 = cir.call @_Znwm(%3) : (!u64i) -> !cir.ptr<!void> loc(#loc52)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc229)
          cir.call @_ZN12TwoIntsClassC2Ev(%5) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc51)
          cir.store %5, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc230)
          cir.break loc(#loc54)
        } loc(#loc49)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc56)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc56)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc57)
          cir.break loc(#loc58)
        } loc(#loc55)
        cir.yield loc(#loc46)
      } loc(#loc46)
    } loc(#loc228)
    cir.scope {
      %2 = cir.const #cir.int<8> : !s32i loc(#loc61)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc63)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc63)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc64)
          cir.break loc(#loc65)
        } loc(#loc62)
        cir.case(default, []) {
          %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc67)
          %4 = cir.cast(bitcast, %3 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc67)
          cir.call @_ZdlPv(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc52)
          cir.break loc(#loc68)
        } loc(#loc66)
        cir.yield loc(#loc59)
      } loc(#loc59)
    } loc(#loc231)
    cir.return loc(#loc41)
  } loc(#loc225)
  cir.func internal private @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_15L8goodB2G2Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc233)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc73)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc234)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc77)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.const #cir.int<8> : !u64i loc(#loc236)
          %4 = cir.call @_Znwm(%3) : (!u64i) -> !cir.ptr<!void> loc(#loc81)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc236)
          cir.call @_ZN12TwoIntsClassC2Ev(%5) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc80)
          cir.store %5, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc237)
          cir.break loc(#loc83)
        } loc(#loc78)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc85)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc85)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc86)
          cir.break loc(#loc87)
        } loc(#loc84)
        cir.yield loc(#loc75)
      } loc(#loc75)
    } loc(#loc235)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc90)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc92)
          %4 = cir.cast(bitcast, %3 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc92)
          cir.call @_ZdlPv(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc81)
          cir.break loc(#loc93)
        } loc(#loc91)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc95)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc95)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc96)
          cir.break loc(#loc97)
        } loc(#loc94)
        cir.yield loc(#loc88)
      } loc(#loc88)
    } loc(#loc238)
    cir.return loc(#loc70)
  } loc(#loc232)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc239)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc240)
  cir.func internal private @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_15L8goodG2B1Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc242)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc106)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc243)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc110)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc112)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc112)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc113)
          cir.break loc(#loc114)
        } loc(#loc111)
        cir.case(default, []) {
          %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc116)
          %4 = cir.const #cir.int<100> : !s32i loc(#loc117)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc117)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc245)
          %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc246)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc116)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc247)
          cir.store %9, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc248)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc124)
            %11 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc125)
            %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc250)
            cir.if %12 {
              %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc127)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc128)
              %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc129)
              cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr1) loc(#loc127)
            } loc(#loc251)
          } loc(#loc249)
          cir.break loc(#loc130)
        } loc(#loc115)
        cir.yield loc(#loc108)
      } loc(#loc108)
    } loc(#loc244)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc133)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc135)
          %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc136)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc136)
          cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc135)
          cir.break loc(#loc137)
        } loc(#loc134)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc139)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc139)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc140)
          cir.break loc(#loc141)
        } loc(#loc138)
        cir.yield loc(#loc131)
      } loc(#loc131)
    } loc(#loc252)
    cir.return loc(#loc103)
  } loc(#loc241)
  cir.func internal private @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_15L8goodG2B2Ev() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc254)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc146)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc255)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc150)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc152)
          %4 = cir.const #cir.int<100> : !s32i loc(#loc153)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc153)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc257)
          %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc258)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc152)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc259)
          cir.store %9, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc260)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc160)
            %11 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc161)
            %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc262)
            cir.if %12 {
              %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc163)
              %14 = cir.const #cir.int<1> : !s32i loc(#loc164)
              %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc165)
              cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr1) loc(#loc163)
            } loc(#loc263)
          } loc(#loc261)
          cir.break loc(#loc166)
        } loc(#loc151)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc168)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc168)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc169)
          cir.break loc(#loc170)
        } loc(#loc167)
        cir.yield loc(#loc148)
      } loc(#loc148)
    } loc(#loc256)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc173)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc175)
          %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc176)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc176)
          cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc175)
          cir.break loc(#loc177)
        } loc(#loc174)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc179)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc179)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc180)
          cir.break loc(#loc181)
        } loc(#loc178)
        cir.yield loc(#loc171)
      } loc(#loc171)
    } loc(#loc264)
    cir.return loc(#loc143)
  } loc(#loc253)
  cir.func @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_154goodEv() extra(#fn_attr2) {
    cir.call @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_15L8goodB2G1Ev() : () -> () loc(#loc184)
    cir.call @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_15L8goodB2G2Ev() : () -> () loc(#loc185)
    cir.call @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_15L8goodG2B1Ev() : () -> () loc(#loc186)
    cir.call @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_15L8goodG2B2Ev() : () -> () loc(#loc187)
    cir.return loc(#loc183)
  } loc(#loc265)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc266)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc267)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc192)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc193)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc194)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc195)
  cir.func @main(%arg0: !s32i loc(fused[#loc198, #loc199]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc200, #loc201])) -> !s32i extra(#fn_attr2) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc269)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc270)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc197)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc202)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc202)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc203)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc204)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc204)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc205)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc192)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc192)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc206)
    cir.call @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_154goodEv() : () -> () loc(#loc207)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc193)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc193)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc208)
    %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc194)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc194)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc209)
    cir.call @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_153badEv() : () -> () loc(#loc210)
    %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc195)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc195)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc211)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc212)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc271)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc271)
    cir.return %15 : !s32i loc(#loc271)
  } loc(#loc268)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s06/CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc2 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":37:19)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":24:1)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":52:1)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":26:5)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":26:20)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":28:12)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":28:5)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":29:5)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":39:5)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":29:12)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":31:5)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":33:16)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":33:20)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":24:6)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":33:9)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":34:9)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":35:5)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":37:9)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":38:9)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":40:5)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":51:5)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":40:12)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":42:5)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":45:9)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":45:14)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":46:9)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":47:5)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":49:19)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":49:9)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":50:9)
#loc38 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc39 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":59:1)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":86:1)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":61:5)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":61:20)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":63:12)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":63:5)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":64:5)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":74:5)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":64:12)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":66:5)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":68:16)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":68:20)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":59:13)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":68:9)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":69:9)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":70:5)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":72:19)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":72:9)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":73:9)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":75:5)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":85:5)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":75:12)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":77:5)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":79:19)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":79:9)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":80:9)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":81:5)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":83:16)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":84:9)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":89:1)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":116:1)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":91:5)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":91:20)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":93:12)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":93:5)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":94:5)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":104:5)
#loc77 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":94:12)
#loc78 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":96:5)
#loc79 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":98:16)
#loc80 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":98:20)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":89:13)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":98:9)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":99:9)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":100:5)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":102:19)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":102:9)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":103:9)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":105:5)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":115:5)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":105:12)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":107:5)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":109:16)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":110:9)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":111:5)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":113:19)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":113:9)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":114:9)
#loc98 = loc("/usr/include/stdlib.h":672:1)
#loc99 = loc("/usr/include/stdlib.h":672:45)
#loc100 = loc("/usr/include/stdlib.h":756:1)
#loc101 = loc("/usr/include/stdlib.h":756:70)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":119:1)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":148:1)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":121:5)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":121:20)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":123:12)
#loc107 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":123:5)
#loc108 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":124:5)
#loc109 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":135:5)
#loc110 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":124:12)
#loc111 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":126:5)
#loc112 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":128:19)
#loc113 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":128:9)
#loc114 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":129:9)
#loc115 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":130:5)
#loc116 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":132:32)
#loc117 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":132:39)
#loc118 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":132:43)
#loc119 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":132:62)
#loc120 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":132:63)
#loc121 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":132:9)
#loc122 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":133:9)
#loc123 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":133:37)
#loc124 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":133:13)
#loc125 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":133:21)
#loc126 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":133:27)
#loc127 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":133:28)
#loc128 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":133:34)
#loc129 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":133:33)
#loc130 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":134:9)
#loc131 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":136:5)
#loc132 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":147:5)
#loc133 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":136:12)
#loc134 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":138:5)
#loc135 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":141:9)
#loc136 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":141:14)
#loc137 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":142:9)
#loc138 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":143:5)
#loc139 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":145:19)
#loc140 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":145:9)
#loc141 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":146:9)
#loc142 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":151:1)
#loc143 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":180:1)
#loc144 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":153:5)
#loc145 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":153:20)
#loc146 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":155:12)
#loc147 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":155:5)
#loc148 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":156:5)
#loc149 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":167:5)
#loc150 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":156:12)
#loc151 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":158:5)
#loc152 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":160:32)
#loc153 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":160:39)
#loc154 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":160:43)
#loc155 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":160:62)
#loc156 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":160:63)
#loc157 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":160:9)
#loc158 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":161:9)
#loc159 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":161:37)
#loc160 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":161:13)
#loc161 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":161:21)
#loc162 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":161:27)
#loc163 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":161:28)
#loc164 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":161:34)
#loc165 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":161:33)
#loc166 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":162:9)
#loc167 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":163:5)
#loc168 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":165:19)
#loc169 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":165:9)
#loc170 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":166:9)
#loc171 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":168:5)
#loc172 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":179:5)
#loc173 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":168:12)
#loc174 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":170:5)
#loc175 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":173:9)
#loc176 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":173:14)
#loc177 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":174:9)
#loc178 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":175:5)
#loc179 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":177:19)
#loc180 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":177:9)
#loc181 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":178:9)
#loc182 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":182:1)
#loc183 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":188:1)
#loc184 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":184:5)
#loc185 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":185:5)
#loc186 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":186:5)
#loc187 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":187:5)
#loc188 = loc("/usr/include/stdlib.h":575:1)
#loc189 = loc("/usr/include/stdlib.h":575:41)
#loc190 = loc("/usr/include/time.h":76:1)
#loc191 = loc("/usr/include/time.h":76:38)
#loc192 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":208:15)
#loc193 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":210:15)
#loc194 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":213:15)
#loc195 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":215:15)
#loc196 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":203:1)
#loc197 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":218:1)
#loc202 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":204:1)
#loc203 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":206:27)
#loc204 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":206:22)
#loc205 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":206:5)
#loc206 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":208:5)
#loc207 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":209:5)
#loc208 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":210:5)
#loc209 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":213:5)
#loc210 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":214:5)
#loc211 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":215:5)
#loc212 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":217:12)
#loc213 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_15.cpp":217:5)
#loc214 = loc(fused[#loc1, #loc2])
#loc215 = loc(fused[#loc4, #loc5])
#loc216 = loc(fused[#loc7, #loc8])
#loc217 = loc(fused[#loc9, #loc10])
#loc218 = loc(fused[#loc11, #loc12])
#loc219 = loc(fused[#loc14, #loc13])
#loc220 = loc(fused[#loc15, #loc16])
#loc221 = loc(fused[#loc19, #loc20])
#loc222 = loc(fused[#loc22, #loc20])
#loc223 = loc(fused[#loc27, #loc28])
#loc224 = loc(fused[#loc38, #loc39])
#loc225 = loc(fused[#loc40, #loc41])
#loc226 = loc(fused[#loc42, #loc43])
#loc227 = loc(fused[#loc45, #loc44])
#loc228 = loc(fused[#loc46, #loc47])
#loc229 = loc(fused[#loc50, #loc51])
#loc230 = loc(fused[#loc53, #loc51])
#loc231 = loc(fused[#loc59, #loc60])
#loc232 = loc(fused[#loc69, #loc70])
#loc233 = loc(fused[#loc71, #loc72])
#loc234 = loc(fused[#loc74, #loc73])
#loc235 = loc(fused[#loc75, #loc76])
#loc236 = loc(fused[#loc79, #loc80])
#loc237 = loc(fused[#loc82, #loc80])
#loc238 = loc(fused[#loc88, #loc89])
#loc239 = loc(fused[#loc98, #loc99])
#loc240 = loc(fused[#loc100, #loc101])
#loc241 = loc(fused[#loc102, #loc103])
#loc242 = loc(fused[#loc104, #loc105])
#loc243 = loc(fused[#loc107, #loc106])
#loc244 = loc(fused[#loc108, #loc109])
#loc245 = loc(fused[#loc118, #loc119])
#loc246 = loc(fused[#loc117, #loc119])
#loc247 = loc(fused[#loc116, #loc120])
#loc248 = loc(fused[#loc121, #loc120])
#loc249 = loc(fused[#loc122, #loc123])
#loc250 = loc(fused[#loc124, #loc125])
#loc251 = loc(fused[#loc126, #loc123])
#loc252 = loc(fused[#loc131, #loc132])
#loc253 = loc(fused[#loc142, #loc143])
#loc254 = loc(fused[#loc144, #loc145])
#loc255 = loc(fused[#loc147, #loc146])
#loc256 = loc(fused[#loc148, #loc149])
#loc257 = loc(fused[#loc154, #loc155])
#loc258 = loc(fused[#loc153, #loc155])
#loc259 = loc(fused[#loc152, #loc156])
#loc260 = loc(fused[#loc157, #loc156])
#loc261 = loc(fused[#loc158, #loc159])
#loc262 = loc(fused[#loc160, #loc161])
#loc263 = loc(fused[#loc162, #loc159])
#loc264 = loc(fused[#loc171, #loc172])
#loc265 = loc(fused[#loc182, #loc183])
#loc266 = loc(fused[#loc188, #loc189])
#loc267 = loc(fused[#loc190, #loc191])
#loc268 = loc(fused[#loc196, #loc197])
#loc271 = loc(fused[#loc213, #loc212])
