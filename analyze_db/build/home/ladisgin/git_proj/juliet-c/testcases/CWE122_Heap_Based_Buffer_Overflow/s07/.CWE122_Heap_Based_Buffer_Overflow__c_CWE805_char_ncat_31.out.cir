!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":88:10)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":88:14)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":88:20)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":88:32)
#loc175 = loc(fused[#loc77, #loc78])
#loc176 = loc(fused[#loc79, #loc80])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc147)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc148)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc149)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc150)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc151)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc153)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc154)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc155)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc156)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc21)
    cir.store %4, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc157)
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc23)
    %6 = cir.const #cir.int<50> : !s32i loc(#loc24)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc24)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc158)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc159)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc23)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc160)
    cir.store %11, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc161)
    cir.br ^bb1 loc(#loc162)
  ^bb1:  // pred: ^bb0
    %12 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc32)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc32)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc163)
    cir.brcond %15 ^bb2, ^bb3 loc(#loc164)
  ^bb2:  // pred: ^bb1
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc34)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc36)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc34)
    cir.br ^bb3 loc(#loc30)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc30)
  ^bb4:  // pred: ^bb3
    %19 = cir.const #cir.int<0> : !s32i loc(#loc37)
    %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc37)
    %21 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc39)
    %23 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc40)
    cir.store %20, %23 : !s8i, !cir.ptr<!s8i> loc(#loc165)
    cir.br ^bb5 loc(#loc166)
  ^bb5:  // pred: ^bb4
    %24 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc14)
    cir.store %24, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc153)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc16)
    cir.store %25, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc154)
    cir.br ^bb6 loc(#loc167)
  ^bb6:  // pred: ^bb5
    %26 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc45)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc45)
    %28 = cir.const #cir.int<67> : !s32i loc(#loc46)
    %29 = cir.const #cir.int<100> : !s32i loc(#loc47)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc47)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc47)
    cir.libc.memset %32 bytes from %27 set to %28 : !cir.ptr<!void>, !s32i, !u64i loc(#loc168)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %34 = cir.cast(integral, %33 : !s32i), !s8i loc(#loc51)
    %35 = cir.const #cir.int<100> : !s32i loc(#loc52)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc53)
    %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc52)
    %38 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
    %39 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %37 : !s32i), !cir.ptr<!s8i> loc(#loc54)
    cir.store %34, %39 : !s8i, !cir.ptr<!s8i> loc(#loc169)
    %40 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc55)
    %41 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    %42 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc57)
    %43 = cir.const #cir.int<100> : !s32i loc(#loc58)
    %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc58)
    %45 = cir.call @strncat(%41, %42, %44) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc55)
    %46 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %47 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc61)
    %48 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
    %49 = cir.cast(bitcast, %48 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc62)
    cir.call @free(%49) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc61)
    cir.br ^bb7 loc(#loc44)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc42)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc12)
  } loc(#loc152)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc171)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc65)
    cir.return loc(#loc64)
  } loc(#loc170)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc172)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc173)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc71)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc72)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc73)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc74)
  cir.func @main(%arg0: !s32i loc(fused[#loc77, #loc78]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc79, #loc80])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc175)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc176)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc76)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc81)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc81)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc82)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc83)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc83)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc84)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc71)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31_good : !cir.ptr<!cir.func<!void ()>> loc(#loc177)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31_good() : () -> () loc(#loc86)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc72)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc73)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc178)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31_bad() : () -> () loc(#loc90)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc74)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc93)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc179)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc179)
    cir.return %17 : !s32i loc(#loc179)
  } loc(#loc174)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc181)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc182)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc183)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc184)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc105)
    cir.store %4, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc185)
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc107)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc108)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc108)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc186)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc187)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc107)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc188)
    cir.store %11, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc189)
    cir.br ^bb1 loc(#loc190)
  ^bb1:  // pred: ^bb0
    %12 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc116)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc116)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc191)
    cir.brcond %15 ^bb2, ^bb3 loc(#loc192)
  ^bb2:  // pred: ^bb1
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc118)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc120)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc118)
    cir.br ^bb3 loc(#loc114)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc114)
  ^bb4:  // pred: ^bb3
    %19 = cir.const #cir.int<0> : !s32i loc(#loc121)
    %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc121)
    %21 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc123)
    %23 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc124)
    cir.store %20, %23 : !s8i, !cir.ptr<!s8i> loc(#loc193)
    cir.br ^bb5 loc(#loc194)
  ^bb5:  // pred: ^bb4
    %24 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
    cir.store %24, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc181)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
    cir.store %25, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc182)
    cir.br ^bb6 loc(#loc195)
  ^bb6:  // pred: ^bb5
    %26 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc129)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc129)
    %28 = cir.const #cir.int<67> : !s32i loc(#loc130)
    %29 = cir.const #cir.int<100> : !s32i loc(#loc131)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc131)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc131)
    cir.libc.memset %32 bytes from %27 set to %28 : !cir.ptr<!void>, !s32i, !u64i loc(#loc196)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc135)
    %34 = cir.cast(integral, %33 : !s32i), !s8i loc(#loc135)
    %35 = cir.const #cir.int<100> : !s32i loc(#loc136)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc137)
    %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc136)
    %38 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc138)
    %39 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %37 : !s32i), !cir.ptr<!s8i> loc(#loc138)
    cir.store %34, %39 : !s8i, !cir.ptr<!s8i> loc(#loc197)
    %40 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc139)
    %41 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
    %42 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc141)
    %43 = cir.const #cir.int<100> : !s32i loc(#loc142)
    %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc142)
    %45 = cir.call @strncat(%41, %42, %44) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc139)
    %46 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
    cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc144)
    %47 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc145)
    %48 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
    %49 = cir.cast(bitcast, %48 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc146)
    cir.call @free(%49) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc145)
    cir.br ^bb7 loc(#loc128)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc126)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc96)
  } loc(#loc180)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":152:1)
#loc6 = loc("/usr/include/string.h":153:29)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":23:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":44:1)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":32:9)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":32:27)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":33:9)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":33:23)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":35:13)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":35:28)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":25:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":25:12)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":26:12)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":26:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":28:20)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":28:27)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":28:30)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":28:41)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":28:42)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":28:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":29:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":29:33)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":29:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":29:17)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":29:23)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":29:24)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":29:30)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":29:29)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":30:15)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":30:5)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":30:10)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":30:11)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":31:5)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":43:5)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":34:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":42:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":36:20)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":36:28)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":36:33)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":36:37)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":36:13)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":36:38)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":37:29)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":37:20)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":37:24)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":37:13)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":39:13)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":39:21)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":39:27)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":39:35)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":40:23)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":40:13)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":41:13)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":41:18)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":74:1)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":77:1)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":76:5)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":76:13)
#loc67 = loc("/usr/include/stdlib.h":575:1)
#loc68 = loc("/usr/include/stdlib.h":575:41)
#loc69 = loc("/usr/include/time.h":76:1)
#loc70 = loc("/usr/include/time.h":76:38)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":93:15)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":95:15)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":98:15)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":100:15)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":88:1)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":103:1)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":89:1)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":91:27)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":91:22)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":91:5)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":93:5)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":94:5)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":94:67)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":95:5)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":98:5)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":99:5)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":99:66)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":100:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":102:12)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":102:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":51:1)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":72:1)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":60:9)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":60:27)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":61:9)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":61:23)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":63:13)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":63:28)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":53:5)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":53:12)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":54:12)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":54:5)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":56:20)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":56:27)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":56:31)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":56:42)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":56:43)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":56:5)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":57:5)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":57:33)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":57:9)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":57:17)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":57:23)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":57:24)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":57:30)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":57:29)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":58:15)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":58:5)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":58:10)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":58:11)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":59:5)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":71:5)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":62:9)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":70:9)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":64:20)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":64:28)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":64:33)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":64:37)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":64:13)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":64:38)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":65:29)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":65:20)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":65:24)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":65:13)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":67:13)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":67:21)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":67:27)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":67:35)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":68:23)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":68:13)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":69:13)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_31.c":69:18)
#loc147 = loc(fused[#loc1, #loc2])
#loc148 = loc(fused[#loc3, #loc4])
#loc149 = loc(fused[#loc5, #loc6])
#loc150 = loc(fused[#loc7, #loc8])
#loc151 = loc(fused[#loc9, #loc10])
#loc152 = loc(fused[#loc11, #loc12])
#loc153 = loc(fused[#loc13, #loc14])
#loc154 = loc(fused[#loc15, #loc16])
#loc155 = loc(fused[#loc17, #loc18])
#loc156 = loc(fused[#loc19, #loc20])
#loc157 = loc(fused[#loc22, #loc21])
#loc158 = loc(fused[#loc25, #loc26])
#loc159 = loc(fused[#loc24, #loc26])
#loc160 = loc(fused[#loc23, #loc27])
#loc161 = loc(fused[#loc28, #loc27])
#loc162 = loc(fused[#loc29, #loc30])
#loc163 = loc(fused[#loc31, #loc32])
#loc164 = loc(fused[#loc33, #loc30])
#loc165 = loc(fused[#loc38, #loc37])
#loc166 = loc(fused[#loc41, #loc42])
#loc167 = loc(fused[#loc43, #loc44])
#loc168 = loc(fused[#loc49, #loc50])
#loc169 = loc(fused[#loc54, #loc51])
#loc170 = loc(fused[#loc63, #loc64])
#loc171 = loc(fused[#loc65, #loc66])
#loc172 = loc(fused[#loc67, #loc68])
#loc173 = loc(fused[#loc69, #loc70])
#loc174 = loc(fused[#loc75, #loc76])
#loc177 = loc(fused[#loc86, #loc87])
#loc178 = loc(fused[#loc90, #loc91])
#loc179 = loc(fused[#loc94, #loc93])
#loc180 = loc(fused[#loc95, #loc96])
#loc181 = loc(fused[#loc97, #loc98])
#loc182 = loc(fused[#loc99, #loc100])
#loc183 = loc(fused[#loc101, #loc102])
#loc184 = loc(fused[#loc103, #loc104])
#loc185 = loc(fused[#loc106, #loc105])
#loc186 = loc(fused[#loc109, #loc110])
#loc187 = loc(fused[#loc108, #loc110])
#loc188 = loc(fused[#loc107, #loc111])
#loc189 = loc(fused[#loc112, #loc111])
#loc190 = loc(fused[#loc113, #loc114])
#loc191 = loc(fused[#loc115, #loc116])
#loc192 = loc(fused[#loc117, #loc114])
#loc193 = loc(fused[#loc122, #loc121])
#loc194 = loc(fused[#loc125, #loc126])
#loc195 = loc(fused[#loc127, #loc128])
#loc196 = loc(fused[#loc133, #loc134])
#loc197 = loc(fused[#loc138, #loc135])
