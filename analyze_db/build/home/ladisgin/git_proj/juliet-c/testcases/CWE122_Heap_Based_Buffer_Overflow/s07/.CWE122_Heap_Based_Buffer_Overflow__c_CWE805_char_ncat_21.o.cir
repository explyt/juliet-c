!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":26:25)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":26:32)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":64:30)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":64:37)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":99:30)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":99:37)
#loc220 = loc(fused[#loc9, #loc10])
#loc249 = loc(fused[#loc87, #loc88])
#loc272 = loc(fused[#loc155, #loc156])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc216)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc217)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc218)
  cir.func internal private @badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc9, #loc10])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc220)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc8)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc11)
    cir.br ^bb1 loc(#loc221)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc216)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc14)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc14)
    cir.brcond %4 ^bb2, ^bb7 loc(#loc222)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc16)
    %6 = cir.const #cir.int<50> : !s32i loc(#loc17)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc17)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc223)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc224)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc16)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc225)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc226)
    cir.br ^bb3 loc(#loc227)
  ^bb3:  // pred: ^bb2
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc25)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc25)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc228)
    cir.brcond %15 ^bb4, ^bb5 loc(#loc229)
  ^bb4:  // pred: ^bb3
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc27)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc29)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc27)
    cir.br ^bb5 loc(#loc23)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc23)
  ^bb6:  // pred: ^bb5
    %19 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc30)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc32)
    %23 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc33)
    cir.store %20, %23 : !s8i, !cir.ptr<!s8i> loc(#loc230)
    cir.br ^bb7 loc(#loc13)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc13)
  ^bb8:  // pred: ^bb7
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    cir.store %24, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc231)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc231)
    cir.return %25 : !cir.ptr<!s8i> loc(#loc231)
  } loc(#loc219)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc232)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc233)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc234)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc236)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc237)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc48)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc238)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc216)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc239)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc52)
    %6 = cir.call @badSource(%5) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc53)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc240)
    cir.br ^bb1 loc(#loc241)
  ^bb1:  // pred: ^bb0
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc58)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc58)
    %9 = cir.const #cir.int<67> : !s32i loc(#loc59)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc60)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc61)
    %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc60)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc60)
    cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc242)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc64)
    %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc64)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc65)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc66)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc65)
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc67)
    %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc67)
    cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc243)
    %21 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc68)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc70)
    %24 = cir.const #cir.int<100> : !s32i loc(#loc71)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc71)
    %26 = cir.call @strncat(%22, %23, %25) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc68)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %28 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc74)
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc75)
    cir.call @free(%30) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc74)
    cir.br ^bb2 loc(#loc57)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc43)
  } loc(#loc235)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc245)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc78)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc246)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc80)
    cir.return loc(#loc77)
  } loc(#loc244)
  cir.global "private" internal dsolocal @goodG2B1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc247)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc84)
  cir.func internal private @goodG2B1Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc87, #loc88])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc249)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc86)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc89)
    cir.br ^bb1 loc(#loc250)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc247)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc92)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc251)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc84)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    cir.br ^bb8 loc(#loc94)
  ^bb3:  // pred: ^bb1
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc97)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc98)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc98)
    %10 = cir.const #cir.int<1> : !u64i loc(#loc252)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc253)
    %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc97)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc254)
    cir.store %13, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc255)
    cir.br ^bb4 loc(#loc256)
  ^bb4:  // pred: ^bb3
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc106)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc106)
    %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc257)
    cir.brcond %17 ^bb5, ^bb6 loc(#loc258)
  ^bb5:  // pred: ^bb4
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc108)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc110)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc108)
    cir.br ^bb6 loc(#loc104)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc104)
  ^bb7:  // pred: ^bb6
    %21 = cir.const #cir.int<0> : !s32i loc(#loc111)
    %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc111)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc113)
    %25 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc114)
    cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc259)
    cir.br ^bb8 loc(#loc91)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc91)
  ^bb9:  // pred: ^bb8
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
    cir.store %26, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc260)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc260)
    cir.return %27 : !cir.ptr<!s8i> loc(#loc260)
  } loc(#loc248)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc262)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc263)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc123)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc264)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc125)
    %4 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc247)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc265)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
    %6 = cir.call @goodG2B1Source(%5) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc128)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc266)
    cir.br ^bb1 loc(#loc267)
  ^bb1:  // pred: ^bb0
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc133)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc133)
    %9 = cir.const #cir.int<67> : !s32i loc(#loc134)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc135)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc136)
    %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc135)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc135)
    cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc268)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc139)
    %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc139)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc140)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc141)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc140)
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc142)
    %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc142)
    cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc269)
    %21 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc143)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc145)
    %24 = cir.const #cir.int<100> : !s32i loc(#loc146)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc146)
    %26 = cir.call @strncat(%22, %23, %25) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc143)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc148)
    %28 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc149)
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc150)
    cir.call @free(%30) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc149)
    cir.br ^bb2 loc(#loc132)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc118)
  } loc(#loc261)
  cir.global "private" internal dsolocal @goodG2B2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc270)
  cir.func internal private @goodG2B2Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc155, #loc156])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc272)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc154)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc157)
    cir.br ^bb1 loc(#loc273)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc270)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc160)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc160)
    cir.brcond %4 ^bb2, ^bb7 loc(#loc274)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc162)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc163)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc163)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc275)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc276)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc162)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc277)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc278)
    cir.br ^bb3 loc(#loc279)
  ^bb3:  // pred: ^bb2
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc171)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc171)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc280)
    cir.brcond %15 ^bb4, ^bb5 loc(#loc281)
  ^bb4:  // pred: ^bb3
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc173)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc174)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc175)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc173)
    cir.br ^bb5 loc(#loc169)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc169)
  ^bb6:  // pred: ^bb5
    %19 = cir.const #cir.int<0> : !s32i loc(#loc176)
    %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc176)
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc177)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc178)
    %23 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %22 : !s32i), !cir.ptr<!s8i> loc(#loc179)
    cir.store %20, %23 : !s8i, !cir.ptr<!s8i> loc(#loc282)
    cir.br ^bb7 loc(#loc159)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc159)
  ^bb8:  // pred: ^bb7
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc180)
    cir.store %24, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc283)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc283)
    cir.return %25 : !cir.ptr<!s8i> loc(#loc283)
  } loc(#loc271)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc285)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc286)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc188)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc287)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc190)
    %4 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc270)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc288)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc192)
    %6 = cir.call @goodG2B2Source(%5) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc193)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc289)
    cir.br ^bb1 loc(#loc290)
  ^bb1:  // pred: ^bb0
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc198)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc198)
    %9 = cir.const #cir.int<67> : !s32i loc(#loc199)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc200)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc201)
    %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc200)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc200)
    cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc291)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc204)
    %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc204)
    %16 = cir.const #cir.int<100> : !s32i loc(#loc205)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc206)
    %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc205)
    %19 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc207)
    %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc207)
    cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc292)
    %21 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc208)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc209)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc210)
    %24 = cir.const #cir.int<100> : !s32i loc(#loc211)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc211)
    %26 = cir.call @strncat(%22, %23, %25) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc208)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc212)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc213)
    %28 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc214)
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc215)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc215)
    cir.call @free(%30) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc214)
    cir.br ^bb2 loc(#loc197)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc183)
  } loc(#loc284)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":24:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":24:24)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":26:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":36:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":27:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":28:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":34:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":28:8)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":29:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":31:24)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":31:31)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":31:34)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":31:45)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":31:46)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":31:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":32:9)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":32:37)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":32:13)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":32:21)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":32:27)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":32:28)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":32:34)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":32:33)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":33:19)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":33:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":33:14)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":33:15)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":35:12)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":35:5)
#loc36 = loc("/usr/include/string.h":152:1)
#loc37 = loc("/usr/include/string.h":153:29)
#loc38 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc39 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc40 = loc("/usr/include/stdlib.h":687:1)
#loc41 = loc("/usr/include/stdlib.h":687:32)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":38:1)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":53:1)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":45:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":45:24)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":40:5)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":40:12)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":41:12)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":41:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":42:17)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":42:5)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":43:22)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":43:12)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":43:5)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":43:26)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":44:5)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":52:5)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":46:16)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":46:24)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":46:29)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":46:33)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":46:9)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":46:34)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":47:25)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":47:16)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":47:20)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":47:9)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":49:9)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":49:17)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":49:23)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":49:31)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":50:19)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":50:9)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":51:9)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":51:14)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":128:1)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":132:1)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":130:5)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":130:14)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":131:5)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":131:14)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":60:1)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":60:29)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":69:19)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":64:1)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":79:1)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":65:1)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":66:5)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":77:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":66:8)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":67:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":70:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":72:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":69:9)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":74:24)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":74:31)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":74:35)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":74:46)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":74:47)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":74:9)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":75:9)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":75:37)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":75:13)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":75:21)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":75:27)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":75:28)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":75:34)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":75:33)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":76:19)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":76:9)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":76:14)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":76:15)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":78:12)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":78:5)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":81:1)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":96:1)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":88:9)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":88:24)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":83:5)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":83:12)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":84:12)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":84:5)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":85:22)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":85:5)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":86:27)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":86:12)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":86:5)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":86:31)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":87:5)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":95:5)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":89:16)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":89:24)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":89:29)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":89:33)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":89:9)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":89:34)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":90:25)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":90:16)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":90:20)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":90:9)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":92:9)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":92:17)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":92:23)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":92:31)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":93:19)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":93:9)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":94:9)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":94:14)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":61:1)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":61:29)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":99:1)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":109:1)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":100:1)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":101:5)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":107:5)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":101:8)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":102:5)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":104:24)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":104:31)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":104:35)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":104:46)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":104:47)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":104:9)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":105:9)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":105:37)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":105:13)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":105:21)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":105:27)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":105:28)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":105:34)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":105:33)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":106:19)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":106:9)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":106:14)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":106:15)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":108:12)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":108:5)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":111:1)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":126:1)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":118:9)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":118:24)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":113:5)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":113:12)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":114:12)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":114:5)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":115:22)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":115:5)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":116:27)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":116:12)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":116:5)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":116:31)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":117:5)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":125:5)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":119:16)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":119:24)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":119:29)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":119:33)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":119:9)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":119:34)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":120:25)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":120:16)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":120:20)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":120:9)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":122:9)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":122:17)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":122:23)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":122:31)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":123:19)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":123:9)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":124:9)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncat_21.c":124:14)
#loc216 = loc(fused[#loc1, #loc2])
#loc217 = loc(fused[#loc3, #loc4])
#loc218 = loc(fused[#loc5, #loc6])
#loc219 = loc(fused[#loc7, #loc8])
#loc221 = loc(fused[#loc12, #loc13])
#loc222 = loc(fused[#loc15, #loc13])
#loc223 = loc(fused[#loc18, #loc19])
#loc224 = loc(fused[#loc17, #loc19])
#loc225 = loc(fused[#loc16, #loc20])
#loc226 = loc(fused[#loc21, #loc20])
#loc227 = loc(fused[#loc22, #loc23])
#loc228 = loc(fused[#loc24, #loc25])
#loc229 = loc(fused[#loc26, #loc23])
#loc230 = loc(fused[#loc31, #loc30])
#loc231 = loc(fused[#loc35, #loc34])
#loc232 = loc(fused[#loc36, #loc37])
#loc233 = loc(fused[#loc38, #loc39])
#loc234 = loc(fused[#loc40, #loc41])
#loc235 = loc(fused[#loc42, #loc43])
#loc236 = loc(fused[#loc44, #loc45])
#loc237 = loc(fused[#loc46, #loc47])
#loc238 = loc(fused[#loc49, #loc48])
#loc239 = loc(fused[#loc51, #loc50])
#loc240 = loc(fused[#loc54, #loc55])
#loc241 = loc(fused[#loc56, #loc57])
#loc242 = loc(fused[#loc62, #loc63])
#loc243 = loc(fused[#loc67, #loc64])
#loc244 = loc(fused[#loc76, #loc77])
#loc245 = loc(fused[#loc78, #loc79])
#loc246 = loc(fused[#loc80, #loc81])
#loc247 = loc(fused[#loc82, #loc83])
#loc248 = loc(fused[#loc85, #loc86])
#loc250 = loc(fused[#loc90, #loc91])
#loc251 = loc(fused[#loc93, #loc94, #loc95, #loc91])
#loc252 = loc(fused[#loc99, #loc100])
#loc253 = loc(fused[#loc98, #loc100])
#loc254 = loc(fused[#loc97, #loc101])
#loc255 = loc(fused[#loc102, #loc101])
#loc256 = loc(fused[#loc103, #loc104])
#loc257 = loc(fused[#loc105, #loc106])
#loc258 = loc(fused[#loc107, #loc104])
#loc259 = loc(fused[#loc112, #loc111])
#loc260 = loc(fused[#loc116, #loc115])
#loc261 = loc(fused[#loc117, #loc118])
#loc262 = loc(fused[#loc119, #loc120])
#loc263 = loc(fused[#loc121, #loc122])
#loc264 = loc(fused[#loc124, #loc123])
#loc265 = loc(fused[#loc126, #loc125])
#loc266 = loc(fused[#loc129, #loc130])
#loc267 = loc(fused[#loc131, #loc132])
#loc268 = loc(fused[#loc137, #loc138])
#loc269 = loc(fused[#loc142, #loc139])
#loc270 = loc(fused[#loc151, #loc152])
#loc271 = loc(fused[#loc153, #loc154])
#loc273 = loc(fused[#loc158, #loc159])
#loc274 = loc(fused[#loc161, #loc159])
#loc275 = loc(fused[#loc164, #loc165])
#loc276 = loc(fused[#loc163, #loc165])
#loc277 = loc(fused[#loc162, #loc166])
#loc278 = loc(fused[#loc167, #loc166])
#loc279 = loc(fused[#loc168, #loc169])
#loc280 = loc(fused[#loc170, #loc171])
#loc281 = loc(fused[#loc172, #loc169])
#loc282 = loc(fused[#loc177, #loc176])
#loc283 = loc(fused[#loc181, #loc180])
#loc284 = loc(fused[#loc182, #loc183])
#loc285 = loc(fused[#loc184, #loc185])
#loc286 = loc(fused[#loc186, #loc187])
#loc287 = loc(fused[#loc189, #loc188])
#loc288 = loc(fused[#loc191, #loc190])
#loc289 = loc(fused[#loc194, #loc195])
#loc290 = loc(fused[#loc196, #loc197])
#loc291 = loc(fused[#loc202, #loc203])
#loc292 = loc(fused[#loc207, #loc204])
