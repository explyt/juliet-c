!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @rand() -> !s32i extra(#fn_attr) loc(#loc417)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"output_bad.txt\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc3)
  cir.func private  @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc418)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc6)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc419)
  cir.func private  @fwrite(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc420)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"This is the sentence we are printing to the file. \00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc11)
  cir.func private  @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc421)
  cir.func no_proto  @CWE400_Resource_Exhaustion__rand_fwrite_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc423)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc19)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc424)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc426)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc23)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc23)
      cir.if %5 {
        %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc26)
        %8 = cir.binop(and, %6, %7) : !s32i loc(#loc26)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc26)
        %10 = cir.ternary(%9, true {
          %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
          %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc26)
          %14 = cir.const #cir.int<30> : !s32i loc(#loc26)
          %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc26)
          %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
          %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc26)
          %18 = cir.const #cir.int<15> : !s32i loc(#loc26)
          %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc26)
          %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc26)
          %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
          %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc26)
          %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc26)
          cir.yield %23 : !u32i loc(#loc26)
        }, false {
          %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
          %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc26)
          %14 = cir.const #cir.int<30> : !s32i loc(#loc26)
          %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc26)
          %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
          %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc26)
          %18 = cir.const #cir.int<15> : !s32i loc(#loc26)
          %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc26)
          %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc26)
          %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc26)
          %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc26)
          %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc26)
          %24 = cir.unary(minus, %23) : !u32i, !u32i loc(#loc26)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc26)
          %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc26)
          %27 = cir.binop(sub, %24, %26) : !u32i loc(#loc26)
          cir.yield %27 : !u32i loc(#loc26)
        }) : (!cir.bool) -> !u32i loc(#loc26)
        %11 = cir.cast(integral, %10 : !u32i), !s32i loc(#loc26)
        cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc428)
      } loc(#loc427)
    } loc(#loc425)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc430)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc30)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc30)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc433)
          %7 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc434)
          %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc435)
          %9 = cir.const #cir.int<0> : !s32i loc(#loc36)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc36)
          cir.store %10, %6 : !u64i, !cir.ptr<!u64i> loc(#loc433)
          %11 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc38)
          cir.store %11, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc434)
          %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc3)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc3)
          cir.store %13, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc435)
          %14 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc40)
          %15 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
          %16 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc6)
          %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc6)
          %18 = cir.call @fopen(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc40)
          cir.store %18, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc436)
          cir.scope {
            %19 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc46)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc47)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc47)
            %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc438)
            %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc48)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc50)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc51)
              cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc50)
            } loc(#loc439)
          } loc(#loc437)
          cir.scope {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc54)
            %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc54)
            cir.store %20, %6 : !u64i, !cir.ptr<!u64i> loc(#loc441)
            cir.for : cond {
              %21 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc56)
              %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc57)
              %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc57)
              %24 = cir.cmp(lt, %21, %23) : !u64i, !s32i loc(#loc442)
              %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc58)
              cir.condition(%25) loc(#loc58)
            } body {
              cir.scope {
                cir.scope {
                  %21 = cir.const #cir.int<50> : !u64i loc(#loc445)
                  %22 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc64)
                  %23 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc11)
                  %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc11)
                  %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc11)
                  %26 = cir.const #cir.int<1> : !u64i loc(#loc446)
                  %27 = cir.const #cir.int<50> : !u64i loc(#loc447)
                  %28 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc69)
                  %29 = cir.call @fwrite(%25, %26, %27, %28) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc64)
                  %30 = cir.cmp(ne, %21, %29) : !u64i, !s32i loc(#loc448)
                  %31 = cir.cast(int_to_bool, %30 : !s32i), !cir.bool loc(#loc71)
                  cir.if %31 {
                    %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc73)
                    %33 = cir.const #cir.int<1> : !s32i loc(#loc74)
                    cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc73)
                  } loc(#loc449)
                } loc(#loc444)
              } loc(#loc443)
              cir.yield loc(#loc53)
            } step {
              %21 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc75)
              %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc76)
              cir.store %22, %6 : !u64i, !cir.ptr<!u64i> loc(#loc450)
              cir.yield loc(#loc440)
            } loc(#loc440)
          } loc(#loc440)
          cir.scope {
            %19 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc79)
            %20 = cir.cast(ptr_to_bool, %19 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc79)
            cir.if %20 {
              %21 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc81)
              %22 = cir.call @fclose(%21) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc82)
            } loc(#loc452)
          } loc(#loc451)
        } loc(#loc432)
      } loc(#loc431)
    } loc(#loc429)
    cir.return loc(#loc15)
  } loc(#loc422)
  cir.func no_proto  @CWE400_Resource_Exhaustion__rand_fwrite_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc454)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc85)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc455)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc87)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc456)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc89)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc457)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc91)
    cir.return loc(#loc84)
  } loc(#loc453)
  cir.func no_proto internal private  @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc94)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc95)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc459)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc459)
    cir.return %2 : !s32i loc(#loc459)
  } loc(#loc458)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc460)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc99)
  cir.global "private"  constant internal dsolocal @".str4" = #cir.const_array<"output_good.txt\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc100)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc462)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc106)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc463)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc465)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc110)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc110)
      cir.if %5 {
        %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc113)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc113)
        %8 = cir.binop(and, %6, %7) : !s32i loc(#loc113)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc113)
        %10 = cir.ternary(%9, true {
          %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc113)
          %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc113)
          %14 = cir.const #cir.int<30> : !s32i loc(#loc113)
          %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc113)
          %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc113)
          %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc113)
          %18 = cir.const #cir.int<15> : !s32i loc(#loc113)
          %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc113)
          %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc113)
          %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc113)
          %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc113)
          %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc113)
          cir.yield %23 : !u32i loc(#loc113)
        }, false {
          %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc113)
          %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc113)
          %14 = cir.const #cir.int<30> : !s32i loc(#loc113)
          %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc113)
          %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc113)
          %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc113)
          %18 = cir.const #cir.int<15> : !s32i loc(#loc113)
          %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc113)
          %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc113)
          %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc113)
          %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc113)
          %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc113)
          %24 = cir.unary(minus, %23) : !u32i, !u32i loc(#loc113)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc113)
          %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc113)
          %27 = cir.binop(sub, %24, %26) : !u32i loc(#loc113)
          cir.yield %27 : !u32i loc(#loc113)
        }) : (!cir.bool) -> !u32i loc(#loc113)
        %11 = cir.cast(integral, %10 : !u32i), !s32i loc(#loc113)
        cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc467)
      } loc(#loc466)
    } loc(#loc464)
    cir.scope {
      %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc469)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc117)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc117)
      cir.if %5 {
        %6 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc99)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc99)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc122)
      } else {
        cir.scope {
          %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc472)
          %7 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc473)
          %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc474)
          %9 = cir.const #cir.int<0> : !s32i loc(#loc126)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc126)
          cir.store %10, %6 : !u64i, !cir.ptr<!u64i> loc(#loc472)
          %11 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc128)
          cir.store %11, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc473)
          %12 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc100)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc100)
          cir.store %13, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc474)
          cir.scope {
            %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc132)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc133)
            %16 = cir.cmp(gt, %14, %15) : !s32i, !s32i loc(#loc476)
            %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc134)
            %18 = cir.ternary(%17, true {
              %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc136)
              %20 = cir.const #cir.int<20> : !s32i loc(#loc137)
              %21 = cir.cmp(le, %19, %20) : !s32i, !s32i loc(#loc477)
              %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc138)
              %23 = cir.ternary(%22, true {
                %24 = cir.const #true loc(#loc135)
                cir.yield %24 : !cir.bool loc(#loc135)
              }, false {
                %24 = cir.const #false loc(#loc135)
                cir.yield %24 : !cir.bool loc(#loc135)
              }) : (!cir.bool) -> !cir.bool loc(#loc135)
              cir.yield %23 : !cir.bool loc(#loc135)
            }, false {
              %19 = cir.const #false loc(#loc135)
              cir.yield %19 : !cir.bool loc(#loc135)
            }) : (!cir.bool) -> !cir.bool loc(#loc135)
            cir.if %18 {
              %19 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc140)
              %20 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
              %21 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc142)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc142)
              %23 = cir.call @fopen(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc140)
              cir.store %23, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc479)
              cir.scope {
                %24 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc147)
                %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc148)
                %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc148)
                %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc481)
                %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc149)
                cir.if %28 {
                  %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc151)
                  %30 = cir.const #cir.int<1> : !s32i loc(#loc152)
                  cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc151)
                } loc(#loc482)
              } loc(#loc480)
              cir.scope {
                %24 = cir.const #cir.int<0> : !s32i loc(#loc155)
                %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc155)
                cir.store %25, %6 : !u64i, !cir.ptr<!u64i> loc(#loc484)
                cir.for : cond {
                  %26 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc157)
                  %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc158)
                  %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc158)
                  %29 = cir.cmp(lt, %26, %28) : !u64i, !s32i loc(#loc485)
                  %30 = cir.cast(int_to_bool, %29 : !s32i), !cir.bool loc(#loc159)
                  cir.condition(%30) loc(#loc159)
                } body {
                  cir.scope {
                    cir.scope {
                      %26 = cir.const #cir.int<50> : !u64i loc(#loc488)
                      %27 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc165)
                      %28 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc166)
                      %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc166)
                      %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc166)
                      %31 = cir.const #cir.int<1> : !u64i loc(#loc489)
                      %32 = cir.const #cir.int<50> : !u64i loc(#loc490)
                      %33 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc171)
                      %34 = cir.call @fwrite(%30, %31, %32, %33) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc165)
                      %35 = cir.cmp(ne, %26, %34) : !u64i, !s32i loc(#loc491)
                      %36 = cir.cast(int_to_bool, %35 : !s32i), !cir.bool loc(#loc173)
                      cir.if %36 {
                        %37 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc174)
                        %38 = cir.const #cir.int<1> : !s32i loc(#loc175)
                        cir.call @exit(%38) : (!s32i) -> () extra(#fn_attr) loc(#loc174)
                      } loc(#loc492)
                    } loc(#loc487)
                  } loc(#loc486)
                  cir.yield loc(#loc154)
                } step {
                  %26 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc176)
                  %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc177)
                  cir.store %27, %6 : !u64i, !cir.ptr<!u64i> loc(#loc493)
                  cir.yield loc(#loc483)
                } loc(#loc483)
              } loc(#loc483)
              cir.scope {
                %24 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc180)
                %25 = cir.cast(ptr_to_bool, %24 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc180)
                cir.if %25 {
                  %26 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc182)
                  %27 = cir.call @fclose(%26) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc183)
                } loc(#loc495)
              } loc(#loc494)
            } loc(#loc478)
          } loc(#loc475)
        } loc(#loc471)
      } loc(#loc470)
    } loc(#loc468)
    cir.return loc(#loc102)
  } loc(#loc461)
  cir.func no_proto internal private  @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc185)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc186)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc497)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc497)
    cir.return %2 : !s32i loc(#loc497)
  } loc(#loc496)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc499)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc192)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc193)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc500)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc502)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc197)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc197)
      cir.if %5 {
        %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc200)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc200)
        %8 = cir.binop(and, %6, %7) : !s32i loc(#loc200)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc200)
        %10 = cir.ternary(%9, true {
          %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc200)
          %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc200)
          %14 = cir.const #cir.int<30> : !s32i loc(#loc200)
          %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc200)
          %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc200)
          %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc200)
          %18 = cir.const #cir.int<15> : !s32i loc(#loc200)
          %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc200)
          %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc200)
          %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc200)
          %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc200)
          %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc200)
          cir.yield %23 : !u32i loc(#loc200)
        }, false {
          %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc200)
          %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc200)
          %14 = cir.const #cir.int<30> : !s32i loc(#loc200)
          %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc200)
          %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc200)
          %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc200)
          %18 = cir.const #cir.int<15> : !s32i loc(#loc200)
          %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc200)
          %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc200)
          %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc200)
          %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc200)
          %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc200)
          %24 = cir.unary(minus, %23) : !u32i, !u32i loc(#loc200)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc200)
          %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc200)
          %27 = cir.binop(sub, %24, %26) : !u32i loc(#loc200)
          cir.yield %27 : !u32i loc(#loc200)
        }) : (!cir.bool) -> !u32i loc(#loc200)
        %11 = cir.cast(integral, %10 : !u32i), !s32i loc(#loc200)
        cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc504)
      } loc(#loc503)
    } loc(#loc501)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc506)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc204)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc204)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc509)
          %7 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc510)
          %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc511)
          %9 = cir.const #cir.int<0> : !s32i loc(#loc210)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc210)
          cir.store %10, %6 : !u64i, !cir.ptr<!u64i> loc(#loc509)
          %11 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc212)
          cir.store %11, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc510)
          %12 = cir.get_global @".str4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc214)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc214)
          cir.store %13, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc511)
          cir.scope {
            %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc217)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc218)
            %16 = cir.cmp(gt, %14, %15) : !s32i, !s32i loc(#loc513)
            %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc219)
            %18 = cir.ternary(%17, true {
              %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc221)
              %20 = cir.const #cir.int<20> : !s32i loc(#loc222)
              %21 = cir.cmp(le, %19, %20) : !s32i, !s32i loc(#loc514)
              %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc223)
              %23 = cir.ternary(%22, true {
                %24 = cir.const #true loc(#loc220)
                cir.yield %24 : !cir.bool loc(#loc220)
              }, false {
                %24 = cir.const #false loc(#loc220)
                cir.yield %24 : !cir.bool loc(#loc220)
              }) : (!cir.bool) -> !cir.bool loc(#loc220)
              cir.yield %23 : !cir.bool loc(#loc220)
            }, false {
              %19 = cir.const #false loc(#loc220)
              cir.yield %19 : !cir.bool loc(#loc220)
            }) : (!cir.bool) -> !cir.bool loc(#loc220)
            cir.if %18 {
              %19 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc225)
              %20 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc226)
              %21 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc227)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc227)
              %23 = cir.call @fopen(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc225)
              cir.store %23, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc516)
              cir.scope {
                %24 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc232)
                %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc233)
                %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc233)
                %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc518)
                %28 = cir.cast(int_to_bool, %27 : !s32i), !cir.bool loc(#loc234)
                cir.if %28 {
                  %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc236)
                  %30 = cir.const #cir.int<1> : !s32i loc(#loc237)
                  cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc236)
                } loc(#loc519)
              } loc(#loc517)
              cir.scope {
                %24 = cir.const #cir.int<0> : !s32i loc(#loc240)
                %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc240)
                cir.store %25, %6 : !u64i, !cir.ptr<!u64i> loc(#loc521)
                cir.for : cond {
                  %26 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc242)
                  %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc243)
                  %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc243)
                  %29 = cir.cmp(lt, %26, %28) : !u64i, !s32i loc(#loc522)
                  %30 = cir.cast(int_to_bool, %29 : !s32i), !cir.bool loc(#loc244)
                  cir.condition(%30) loc(#loc244)
                } body {
                  cir.scope {
                    cir.scope {
                      %26 = cir.const #cir.int<50> : !u64i loc(#loc525)
                      %27 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc250)
                      %28 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc251)
                      %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc251)
                      %30 = cir.cast(bitcast, %29 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc251)
                      %31 = cir.const #cir.int<1> : !u64i loc(#loc526)
                      %32 = cir.const #cir.int<50> : !u64i loc(#loc527)
                      %33 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc256)
                      %34 = cir.call @fwrite(%30, %31, %32, %33) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc250)
                      %35 = cir.cmp(ne, %26, %34) : !u64i, !s32i loc(#loc528)
                      %36 = cir.cast(int_to_bool, %35 : !s32i), !cir.bool loc(#loc258)
                      cir.if %36 {
                        %37 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc259)
                        %38 = cir.const #cir.int<1> : !s32i loc(#loc260)
                        cir.call @exit(%38) : (!s32i) -> () extra(#fn_attr) loc(#loc259)
                      } loc(#loc529)
                    } loc(#loc524)
                  } loc(#loc523)
                  cir.yield loc(#loc239)
                } step {
                  %26 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc261)
                  %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc262)
                  cir.store %27, %6 : !u64i, !cir.ptr<!u64i> loc(#loc530)
                  cir.yield loc(#loc520)
                } loc(#loc520)
              } loc(#loc520)
              cir.scope {
                %24 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc265)
                %25 = cir.cast(ptr_to_bool, %24 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc265)
                cir.if %25 {
                  %26 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc267)
                  %27 = cir.call @fclose(%26) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc268)
                } loc(#loc532)
              } loc(#loc531)
            } loc(#loc515)
          } loc(#loc512)
        } loc(#loc508)
      } loc(#loc507)
    } loc(#loc505)
    cir.return loc(#loc189)
  } loc(#loc498)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc534)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc273)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc274)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc535)
    cir.scope {
      %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc537)
      %4 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc278)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc278)
      cir.if %5 {
        %6 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc283)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc283)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc284)
      } else {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc285)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc539)
      } loc(#loc538)
    } loc(#loc536)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc541)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc289)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc289)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc544)
          %7 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc545)
          %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc546)
          %9 = cir.const #cir.int<0> : !s32i loc(#loc295)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc295)
          cir.store %10, %6 : !u64i, !cir.ptr<!u64i> loc(#loc544)
          %11 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc297)
          cir.store %11, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc545)
          %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc299)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc299)
          cir.store %13, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc546)
          %14 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc300)
          %15 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc301)
          %16 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc302)
          %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc302)
          %18 = cir.call @fopen(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc300)
          cir.store %18, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc547)
          cir.scope {
            %19 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc307)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc308)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc308)
            %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc549)
            %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc309)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc311)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc312)
              cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc311)
            } loc(#loc550)
          } loc(#loc548)
          cir.scope {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc315)
            %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc315)
            cir.store %20, %6 : !u64i, !cir.ptr<!u64i> loc(#loc552)
            cir.for : cond {
              %21 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc317)
              %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc318)
              %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc318)
              %24 = cir.cmp(lt, %21, %23) : !u64i, !s32i loc(#loc553)
              %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc319)
              cir.condition(%25) loc(#loc319)
            } body {
              cir.scope {
                cir.scope {
                  %21 = cir.const #cir.int<50> : !u64i loc(#loc556)
                  %22 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc325)
                  %23 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc326)
                  %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc326)
                  %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc326)
                  %26 = cir.const #cir.int<1> : !u64i loc(#loc557)
                  %27 = cir.const #cir.int<50> : !u64i loc(#loc558)
                  %28 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc331)
                  %29 = cir.call @fwrite(%25, %26, %27, %28) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc325)
                  %30 = cir.cmp(ne, %21, %29) : !u64i, !s32i loc(#loc559)
                  %31 = cir.cast(int_to_bool, %30 : !s32i), !cir.bool loc(#loc333)
                  cir.if %31 {
                    %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc335)
                    %33 = cir.const #cir.int<1> : !s32i loc(#loc336)
                    cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc335)
                  } loc(#loc560)
                } loc(#loc555)
              } loc(#loc554)
              cir.yield loc(#loc314)
            } step {
              %21 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc337)
              %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc338)
              cir.store %22, %6 : !u64i, !cir.ptr<!u64i> loc(#loc561)
              cir.yield loc(#loc551)
            } loc(#loc551)
          } loc(#loc551)
          cir.scope {
            %19 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc341)
            %20 = cir.cast(ptr_to_bool, %19 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc341)
            cir.if %20 {
              %21 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc343)
              %22 = cir.call @fclose(%21) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc344)
            } loc(#loc563)
          } loc(#loc562)
        } loc(#loc543)
      } loc(#loc542)
    } loc(#loc540)
    cir.return loc(#loc270)
  } loc(#loc533)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc565)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc349)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc350)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc566)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc568)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc354)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc354)
      cir.if %5 {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc357)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc570)
      } loc(#loc569)
    } loc(#loc567)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc572)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc361)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc361)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc575)
          %7 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc576)
          %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc577)
          %9 = cir.const #cir.int<0> : !s32i loc(#loc367)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc367)
          cir.store %10, %6 : !u64i, !cir.ptr<!u64i> loc(#loc575)
          %11 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc369)
          cir.store %11, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc576)
          %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc371)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc371)
          cir.store %13, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc577)
          %14 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc372)
          %15 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc373)
          %16 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc374)
          %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc374)
          %18 = cir.call @fopen(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc372)
          cir.store %18, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc578)
          cir.scope {
            %19 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc379)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc380)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc380)
            %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc580)
            %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc381)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc383)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc384)
              cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc383)
            } loc(#loc581)
          } loc(#loc579)
          cir.scope {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc387)
            %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc387)
            cir.store %20, %6 : !u64i, !cir.ptr<!u64i> loc(#loc583)
            cir.for : cond {
              %21 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc389)
              %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc390)
              %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc390)
              %24 = cir.cmp(lt, %21, %23) : !u64i, !s32i loc(#loc584)
              %25 = cir.cast(int_to_bool, %24 : !s32i), !cir.bool loc(#loc391)
              cir.condition(%25) loc(#loc391)
            } body {
              cir.scope {
                cir.scope {
                  %21 = cir.const #cir.int<50> : !u64i loc(#loc587)
                  %22 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc397)
                  %23 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc398)
                  %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc398)
                  %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc398)
                  %26 = cir.const #cir.int<1> : !u64i loc(#loc588)
                  %27 = cir.const #cir.int<50> : !u64i loc(#loc589)
                  %28 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc403)
                  %29 = cir.call @fwrite(%25, %26, %27, %28) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc397)
                  %30 = cir.cmp(ne, %21, %29) : !u64i, !s32i loc(#loc590)
                  %31 = cir.cast(int_to_bool, %30 : !s32i), !cir.bool loc(#loc405)
                  cir.if %31 {
                    %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc407)
                    %33 = cir.const #cir.int<1> : !s32i loc(#loc408)
                    cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc407)
                  } loc(#loc591)
                } loc(#loc586)
              } loc(#loc585)
              cir.yield loc(#loc386)
            } step {
              %21 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc409)
              %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc410)
              cir.store %22, %6 : !u64i, !cir.ptr<!u64i> loc(#loc592)
              cir.yield loc(#loc582)
            } loc(#loc582)
          } loc(#loc582)
          cir.scope {
            %19 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc413)
            %20 = cir.cast(ptr_to_bool, %19 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc413)
            cir.if %20 {
              %21 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc415)
              %22 = cir.call @fclose(%21) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc416)
            } loc(#loc594)
          } loc(#loc593)
        } loc(#loc574)
      } loc(#loc573)
    } loc(#loc571)
    cir.return loc(#loc346)
  } loc(#loc564)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_08.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":52:36)
#loc4 = loc("/usr/include/stdio.h":264:1)
#loc5 = loc("/usr/include/stdio.h":266:3)
#loc6 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":53:37)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("/usr/include/stdio.h":745:1)
#loc10 = loc("/usr/include/stdio.h":746:43)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":62:48)
#loc12 = loc("/usr/include/stdio.h":184:1)
#loc13 = loc("/usr/include/stdio.h":184:36)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":37:1)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":73:1)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":39:5)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":39:9)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":41:14)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":41:13)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":41:5)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":42:5)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":46:5)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":42:8)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":42:26)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":43:5)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":45:17)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":45:9)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":47:5)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":72:5)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":47:8)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":47:26)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":48:5)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":49:9)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":71:9)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":50:13)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":50:24)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":51:13)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":51:27)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":52:13)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":53:21)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":53:27)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":53:13)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":53:41)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":54:13)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":57:13)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":54:17)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":54:26)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":54:23)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":55:13)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":56:17)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":56:22)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":60:13)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":66:13)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":60:22)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":60:18)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":60:25)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":60:37)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":60:27)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":61:13)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":62:17)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":65:17)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":62:21)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":62:36)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":62:41)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":62:58)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":62:69)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":62:72)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":62:87)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":62:90)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":62:95)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":62:38)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":63:17)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":64:21)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":64:26)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":60:45)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":60:44)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":67:13)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":70:13)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":67:17)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":68:13)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":69:24)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":69:17)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":243:1)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":249:1)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":245:5)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":245:14)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":246:5)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":246:14)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":247:5)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":247:14)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":248:5)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":248:14)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":25:1)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":28:1)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":27:12)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":27:5)
#loc97 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc98 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":93:19)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":100:36)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":80:1)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":120:1)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":82:5)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":82:9)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":84:14)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":84:13)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":84:5)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":85:5)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":89:5)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":85:8)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":85:26)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":86:5)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":88:17)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":88:9)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":90:5)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":119:5)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":90:8)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":90:27)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":91:5)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":94:5)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":96:5)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":93:9)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":97:9)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":118:9)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":98:13)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":98:24)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":99:13)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":99:27)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":100:13)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":102:13)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":117:13)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":102:17)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":102:25)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":102:23)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":102:27)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":102:30)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":102:39)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":102:36)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":103:13)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":104:25)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":104:31)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":104:41)
#loc143 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":104:17)
#loc144 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":104:45)
#loc145 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":105:17)
#loc146 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":108:17)
#loc147 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":105:21)
#loc148 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":105:30)
#loc149 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":105:27)
#loc150 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":106:17)
#loc151 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":107:21)
#loc152 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":107:26)
#loc153 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":109:17)
#loc154 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":112:17)
#loc155 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":109:26)
#loc156 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":109:22)
#loc157 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":109:29)
#loc158 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":109:41)
#loc159 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":109:31)
#loc160 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":110:17)
#loc161 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":111:21)
#loc162 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":111:108)
#loc163 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":111:25)
#loc164 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":111:40)
#loc165 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":111:45)
#loc166 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":111:52)
#loc167 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":111:62)
#loc168 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":111:73)
#loc169 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":111:76)
#loc170 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":111:91)
#loc171 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":111:94)
#loc172 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":111:99)
#loc173 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":111:42)
#loc174 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":111:102)
#loc175 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":111:107)
#loc176 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":109:49)
#loc177 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":109:48)
#loc178 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":113:17)
#loc179 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":116:17)
#loc180 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":113:21)
#loc181 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":114:17)
#loc182 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":115:28)
#loc183 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":115:21)
#loc184 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":30:1)
#loc185 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":33:1)
#loc186 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":32:12)
#loc187 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":32:5)
#loc188 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":123:1)
#loc189 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":158:1)
#loc190 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":125:5)
#loc191 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":125:9)
#loc192 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":127:14)
#loc193 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":127:13)
#loc194 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":127:5)
#loc195 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":128:5)
#loc196 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":132:5)
#loc197 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":128:8)
#loc198 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":128:26)
#loc199 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":129:5)
#loc200 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":131:17)
#loc201 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":131:9)
#loc202 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":133:5)
#loc203 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":157:5)
#loc204 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":133:8)
#loc205 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":133:26)
#loc206 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":134:5)
#loc207 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":135:9)
#loc208 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":156:9)
#loc209 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":136:13)
#loc210 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":136:24)
#loc211 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":137:13)
#loc212 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":137:27)
#loc213 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":138:13)
#loc214 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":138:36)
#loc215 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":140:13)
#loc216 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":155:13)
#loc217 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":140:17)
#loc218 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":140:25)
#loc219 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":140:23)
#loc220 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":140:27)
#loc221 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":140:30)
#loc222 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":140:39)
#loc223 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":140:36)
#loc224 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":141:13)
#loc225 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":142:25)
#loc226 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":142:31)
#loc227 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":142:41)
#loc228 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":142:17)
#loc229 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":142:45)
#loc230 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":143:17)
#loc231 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":146:17)
#loc232 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":143:21)
#loc233 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":143:30)
#loc234 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":143:27)
#loc235 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":144:17)
#loc236 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":145:21)
#loc237 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":145:26)
#loc238 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":147:17)
#loc239 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":150:17)
#loc240 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":147:26)
#loc241 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":147:22)
#loc242 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":147:29)
#loc243 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":147:41)
#loc244 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":147:31)
#loc245 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":148:17)
#loc246 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":149:21)
#loc247 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":149:108)
#loc248 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":149:25)
#loc249 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":149:40)
#loc250 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":149:45)
#loc251 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":149:52)
#loc252 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":149:62)
#loc253 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":149:73)
#loc254 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":149:76)
#loc255 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":149:91)
#loc256 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":149:94)
#loc257 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":149:99)
#loc258 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":149:42)
#loc259 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":149:102)
#loc260 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":149:107)
#loc261 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":147:49)
#loc262 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":147:48)
#loc263 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":151:17)
#loc264 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":154:17)
#loc265 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":151:21)
#loc266 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":152:17)
#loc267 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":153:28)
#loc268 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":153:21)
#loc269 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":161:1)
#loc270 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":202:1)
#loc271 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":163:5)
#loc272 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":163:9)
#loc273 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":165:14)
#loc274 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":165:13)
#loc275 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":165:5)
#loc276 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":166:5)
#loc277 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":175:5)
#loc278 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":166:8)
#loc279 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":166:27)
#loc280 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":167:5)
#loc281 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":170:5)
#loc282 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":172:5)
#loc283 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":169:19)
#loc284 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":169:9)
#loc285 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":174:17)
#loc286 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":174:9)
#loc287 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":176:5)
#loc288 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":201:5)
#loc289 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":176:8)
#loc290 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":176:26)
#loc291 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":177:5)
#loc292 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":178:9)
#loc293 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":200:9)
#loc294 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":179:13)
#loc295 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":179:24)
#loc296 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":180:13)
#loc297 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":180:27)
#loc298 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":181:13)
#loc299 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":181:36)
#loc300 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":182:21)
#loc301 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":182:27)
#loc302 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":182:37)
#loc303 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":182:13)
#loc304 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":182:41)
#loc305 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":183:13)
#loc306 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":186:13)
#loc307 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":183:17)
#loc308 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":183:26)
#loc309 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":183:23)
#loc310 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":184:13)
#loc311 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":185:17)
#loc312 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":185:22)
#loc313 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":189:13)
#loc314 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":195:13)
#loc315 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":189:22)
#loc316 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":189:18)
#loc317 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":189:25)
#loc318 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":189:37)
#loc319 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":189:27)
#loc320 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":190:13)
#loc321 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":191:17)
#loc322 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":194:17)
#loc323 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":191:21)
#loc324 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":191:36)
#loc325 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":191:41)
#loc326 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":191:48)
#loc327 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":191:58)
#loc328 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":191:69)
#loc329 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":191:72)
#loc330 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":191:87)
#loc331 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":191:90)
#loc332 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":191:95)
#loc333 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":191:38)
#loc334 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":192:17)
#loc335 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":193:21)
#loc336 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":193:26)
#loc337 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":189:45)
#loc338 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":189:44)
#loc339 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":196:13)
#loc340 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":199:13)
#loc341 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":196:17)
#loc342 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":197:13)
#loc343 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":198:24)
#loc344 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":198:17)
#loc345 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":205:1)
#loc346 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":241:1)
#loc347 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":207:5)
#loc348 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":207:9)
#loc349 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":209:14)
#loc350 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":209:13)
#loc351 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":209:5)
#loc352 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":210:5)
#loc353 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":214:5)
#loc354 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":210:8)
#loc355 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":210:26)
#loc356 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":211:5)
#loc357 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":213:17)
#loc358 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":213:9)
#loc359 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":215:5)
#loc360 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":240:5)
#loc361 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":215:8)
#loc362 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":215:26)
#loc363 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":216:5)
#loc364 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":217:9)
#loc365 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":239:9)
#loc366 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":218:13)
#loc367 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":218:24)
#loc368 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":219:13)
#loc369 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":219:27)
#loc370 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":220:13)
#loc371 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":220:36)
#loc372 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":221:21)
#loc373 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":221:27)
#loc374 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":221:37)
#loc375 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":221:13)
#loc376 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":221:41)
#loc377 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":222:13)
#loc378 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":225:13)
#loc379 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":222:17)
#loc380 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":222:26)
#loc381 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":222:23)
#loc382 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":223:13)
#loc383 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":224:17)
#loc384 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":224:22)
#loc385 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":228:13)
#loc386 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":234:13)
#loc387 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":228:22)
#loc388 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":228:18)
#loc389 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":228:25)
#loc390 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":228:37)
#loc391 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":228:27)
#loc392 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":229:13)
#loc393 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":230:17)
#loc394 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":233:17)
#loc395 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":230:21)
#loc396 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":230:36)
#loc397 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":230:41)
#loc398 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":230:48)
#loc399 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":230:58)
#loc400 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":230:69)
#loc401 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":230:72)
#loc402 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":230:87)
#loc403 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":230:90)
#loc404 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":230:95)
#loc405 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":230:38)
#loc406 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":231:17)
#loc407 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":232:21)
#loc408 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":232:26)
#loc409 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":228:45)
#loc410 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":228:44)
#loc411 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":235:13)
#loc412 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":238:13)
#loc413 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":235:17)
#loc414 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":236:13)
#loc415 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":237:24)
#loc416 = loc("CWE400_Resource_Exhaustion__rand_fwrite_08.c":237:17)
#loc417 = loc(fused[#loc1, #loc2])
#loc418 = loc(fused[#loc4, #loc5])
#loc419 = loc(fused[#loc7, #loc8])
#loc420 = loc(fused[#loc9, #loc10])
#loc421 = loc(fused[#loc12, #loc13])
#loc422 = loc(fused[#loc14, #loc15])
#loc423 = loc(fused[#loc16, #loc17])
#loc424 = loc(fused[#loc20, #loc18])
#loc425 = loc(fused[#loc21, #loc22])
#loc426 = loc(fused[#loc23, #loc24])
#loc427 = loc(fused[#loc25, #loc22])
#loc428 = loc(fused[#loc27, #loc26])
#loc429 = loc(fused[#loc28, #loc29])
#loc430 = loc(fused[#loc30, #loc31])
#loc431 = loc(fused[#loc32, #loc29])
#loc432 = loc(fused[#loc33, #loc34])
#loc433 = loc(fused[#loc35, #loc36])
#loc434 = loc(fused[#loc37, #loc38])
#loc435 = loc(fused[#loc39, #loc3])
#loc436 = loc(fused[#loc42, #loc43])
#loc437 = loc(fused[#loc44, #loc45])
#loc438 = loc(fused[#loc46, #loc47])
#loc439 = loc(fused[#loc49, #loc45])
#loc440 = loc(fused[#loc52, #loc53])
#loc441 = loc(fused[#loc55, #loc54])
#loc442 = loc(fused[#loc56, #loc57])
#loc443 = loc(fused[#loc59, #loc53])
#loc444 = loc(fused[#loc60, #loc61])
#loc445 = loc(fused[#loc62, #loc63])
#loc446 = loc(fused[#loc65, #loc66])
#loc447 = loc(fused[#loc67, #loc68])
#loc448 = loc(fused[#loc62, #loc70])
#loc449 = loc(fused[#loc72, #loc61])
#loc450 = loc(fused[#loc76, #loc75])
#loc451 = loc(fused[#loc77, #loc78])
#loc452 = loc(fused[#loc80, #loc78])
#loc453 = loc(fused[#loc83, #loc84])
#loc454 = loc(fused[#loc85, #loc86])
#loc455 = loc(fused[#loc87, #loc88])
#loc456 = loc(fused[#loc89, #loc90])
#loc457 = loc(fused[#loc91, #loc92])
#loc458 = loc(fused[#loc93, #loc94])
#loc459 = loc(fused[#loc96, #loc95])
#loc460 = loc(fused[#loc97, #loc98])
#loc461 = loc(fused[#loc101, #loc102])
#loc462 = loc(fused[#loc103, #loc104])
#loc463 = loc(fused[#loc107, #loc105])
#loc464 = loc(fused[#loc108, #loc109])
#loc465 = loc(fused[#loc110, #loc111])
#loc466 = loc(fused[#loc112, #loc109])
#loc467 = loc(fused[#loc114, #loc113])
#loc468 = loc(fused[#loc115, #loc116])
#loc469 = loc(fused[#loc117, #loc118])
#loc470 = loc(fused[#loc119, #loc120, #loc121, #loc116])
#loc471 = loc(fused[#loc123, #loc124])
#loc472 = loc(fused[#loc125, #loc126])
#loc473 = loc(fused[#loc127, #loc128])
#loc474 = loc(fused[#loc129, #loc100])
#loc475 = loc(fused[#loc130, #loc131])
#loc476 = loc(fused[#loc132, #loc133])
#loc477 = loc(fused[#loc136, #loc137])
#loc478 = loc(fused[#loc139, #loc131])
#loc479 = loc(fused[#loc143, #loc144])
#loc480 = loc(fused[#loc145, #loc146])
#loc481 = loc(fused[#loc147, #loc148])
#loc482 = loc(fused[#loc150, #loc146])
#loc483 = loc(fused[#loc153, #loc154])
#loc484 = loc(fused[#loc156, #loc155])
#loc485 = loc(fused[#loc157, #loc158])
#loc486 = loc(fused[#loc160, #loc154])
#loc487 = loc(fused[#loc161, #loc162])
#loc488 = loc(fused[#loc163, #loc164])
#loc489 = loc(fused[#loc167, #loc168])
#loc490 = loc(fused[#loc169, #loc170])
#loc491 = loc(fused[#loc163, #loc172])
#loc492 = loc(fused[#loc174, #loc162])
#loc493 = loc(fused[#loc177, #loc176])
#loc494 = loc(fused[#loc178, #loc179])
#loc495 = loc(fused[#loc181, #loc179])
#loc496 = loc(fused[#loc184, #loc185])
#loc497 = loc(fused[#loc187, #loc186])
#loc498 = loc(fused[#loc188, #loc189])
#loc499 = loc(fused[#loc190, #loc191])
#loc500 = loc(fused[#loc194, #loc192])
#loc501 = loc(fused[#loc195, #loc196])
#loc502 = loc(fused[#loc197, #loc198])
#loc503 = loc(fused[#loc199, #loc196])
#loc504 = loc(fused[#loc201, #loc200])
#loc505 = loc(fused[#loc202, #loc203])
#loc506 = loc(fused[#loc204, #loc205])
#loc507 = loc(fused[#loc206, #loc203])
#loc508 = loc(fused[#loc207, #loc208])
#loc509 = loc(fused[#loc209, #loc210])
#loc510 = loc(fused[#loc211, #loc212])
#loc511 = loc(fused[#loc213, #loc214])
#loc512 = loc(fused[#loc215, #loc216])
#loc513 = loc(fused[#loc217, #loc218])
#loc514 = loc(fused[#loc221, #loc222])
#loc515 = loc(fused[#loc224, #loc216])
#loc516 = loc(fused[#loc228, #loc229])
#loc517 = loc(fused[#loc230, #loc231])
#loc518 = loc(fused[#loc232, #loc233])
#loc519 = loc(fused[#loc235, #loc231])
#loc520 = loc(fused[#loc238, #loc239])
#loc521 = loc(fused[#loc241, #loc240])
#loc522 = loc(fused[#loc242, #loc243])
#loc523 = loc(fused[#loc245, #loc239])
#loc524 = loc(fused[#loc246, #loc247])
#loc525 = loc(fused[#loc248, #loc249])
#loc526 = loc(fused[#loc252, #loc253])
#loc527 = loc(fused[#loc254, #loc255])
#loc528 = loc(fused[#loc248, #loc257])
#loc529 = loc(fused[#loc259, #loc247])
#loc530 = loc(fused[#loc262, #loc261])
#loc531 = loc(fused[#loc263, #loc264])
#loc532 = loc(fused[#loc266, #loc264])
#loc533 = loc(fused[#loc269, #loc270])
#loc534 = loc(fused[#loc271, #loc272])
#loc535 = loc(fused[#loc275, #loc273])
#loc536 = loc(fused[#loc276, #loc277])
#loc537 = loc(fused[#loc278, #loc279])
#loc538 = loc(fused[#loc280, #loc281, #loc282, #loc277])
#loc539 = loc(fused[#loc286, #loc285])
#loc540 = loc(fused[#loc287, #loc288])
#loc541 = loc(fused[#loc289, #loc290])
#loc542 = loc(fused[#loc291, #loc288])
#loc543 = loc(fused[#loc292, #loc293])
#loc544 = loc(fused[#loc294, #loc295])
#loc545 = loc(fused[#loc296, #loc297])
#loc546 = loc(fused[#loc298, #loc299])
#loc547 = loc(fused[#loc303, #loc304])
#loc548 = loc(fused[#loc305, #loc306])
#loc549 = loc(fused[#loc307, #loc308])
#loc550 = loc(fused[#loc310, #loc306])
#loc551 = loc(fused[#loc313, #loc314])
#loc552 = loc(fused[#loc316, #loc315])
#loc553 = loc(fused[#loc317, #loc318])
#loc554 = loc(fused[#loc320, #loc314])
#loc555 = loc(fused[#loc321, #loc322])
#loc556 = loc(fused[#loc323, #loc324])
#loc557 = loc(fused[#loc327, #loc328])
#loc558 = loc(fused[#loc329, #loc330])
#loc559 = loc(fused[#loc323, #loc332])
#loc560 = loc(fused[#loc334, #loc322])
#loc561 = loc(fused[#loc338, #loc337])
#loc562 = loc(fused[#loc339, #loc340])
#loc563 = loc(fused[#loc342, #loc340])
#loc564 = loc(fused[#loc345, #loc346])
#loc565 = loc(fused[#loc347, #loc348])
#loc566 = loc(fused[#loc351, #loc349])
#loc567 = loc(fused[#loc352, #loc353])
#loc568 = loc(fused[#loc354, #loc355])
#loc569 = loc(fused[#loc356, #loc353])
#loc570 = loc(fused[#loc358, #loc357])
#loc571 = loc(fused[#loc359, #loc360])
#loc572 = loc(fused[#loc361, #loc362])
#loc573 = loc(fused[#loc363, #loc360])
#loc574 = loc(fused[#loc364, #loc365])
#loc575 = loc(fused[#loc366, #loc367])
#loc576 = loc(fused[#loc368, #loc369])
#loc577 = loc(fused[#loc370, #loc371])
#loc578 = loc(fused[#loc375, #loc376])
#loc579 = loc(fused[#loc377, #loc378])
#loc580 = loc(fused[#loc379, #loc380])
#loc581 = loc(fused[#loc382, #loc378])
#loc582 = loc(fused[#loc385, #loc386])
#loc583 = loc(fused[#loc388, #loc387])
#loc584 = loc(fused[#loc389, #loc390])
#loc585 = loc(fused[#loc392, #loc386])
#loc586 = loc(fused[#loc393, #loc394])
#loc587 = loc(fused[#loc395, #loc396])
#loc588 = loc(fused[#loc399, #loc400])
#loc589 = loc(fused[#loc401, #loc402])
#loc590 = loc(fused[#loc395, #loc404])
#loc591 = loc(fused[#loc406, #loc394])
#loc592 = loc(fused[#loc410, #loc409])
#loc593 = loc(fused[#loc411, #loc412])
#loc594 = loc(fused[#loc414, #loc412])
