!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc12 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":25:79)
#loc13 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":25:86)
#loc69 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":60:83)
#loc70 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":60:90)
#true = #cir.bool<true> : !cir.bool
#loc130 = loc(fused[#loc12, #loc13])
#loc152 = loc(fused[#loc69, #loc70])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE761_Free_Pointer_Not_at_Start_of_Buffer/CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc125)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc126)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc127)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc128)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.func @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b_badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc12, #loc13])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc130)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc11)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc14)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc132)
      %5 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc19)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
      %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc19)
      cir.store %7, %4 : !u64i, !cir.ptr<!u64i> loc(#loc132)
      cir.scope {
        %8 = cir.const #cir.int<100> : !s32i loc(#loc23)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc23)
        %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc24)
        %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc134)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc25)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc25)
        %14 = cir.cmp(gt, %11, %13) : !u64i, !cir.bool loc(#loc135)
        cir.if %14 {
          cir.scope {
            %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
            %16 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc30)
            %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc31)
            %18 = cir.const #cir.int<100> : !s32i loc(#loc32)
            %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc32)
            %20 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc33)
            %21 = cir.binop(sub, %19, %20) : !u64i loc(#loc138)
            %22 = cir.cast(integral, %21 : !u64i), !s32i loc(#loc138)
            %23 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc127)
            %24 = cir.load %23 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc34)
            %25 = cir.call @fgets(%17, %22, %24) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc35)
            %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc36)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc36)
            %28 = cir.cmp(ne, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc139)
            cir.if %28 {
              %29 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc40)
              %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
              %31 = cir.call @strlen(%30) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc40)
              cir.store %31, %4 : !u64i, !cir.ptr<!u64i> loc(#loc141)
              cir.scope {
                %32 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc46)
                %33 = cir.const #cir.int<0> : !s32i loc(#loc47)
                %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc47)
                %35 = cir.cmp(gt, %32, %34) : !u64i, !cir.bool loc(#loc143)
                %36 = cir.ternary(%35, true {
                  %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
                  %38 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc50)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc51)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc51)
                  %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc144)
                  %42 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc52)
                  %43 = cir.load %42 : !cir.ptr<!s8i>, !s8i loc(#loc49)
                  %44 = cir.cast(integral, %43 : !s8i), !s32i loc(#loc49)
                  %45 = cir.const #cir.int<10> : !s32i loc(#loc53)
                  %46 = cir.cmp(eq, %44, %45) : !s32i, !cir.bool loc(#loc145)
                  %47 = cir.ternary(%46, true {
                    %48 = cir.const #true loc(#loc48)
                    cir.yield %48 : !cir.bool loc(#loc48)
                  }, false {
                    %48 = cir.const #false loc(#loc48)
                    cir.yield %48 : !cir.bool loc(#loc48)
                  }) : (!cir.bool) -> !cir.bool loc(#loc48)
                  cir.yield %47 : !cir.bool loc(#loc48)
                }, false {
                  %37 = cir.const #false loc(#loc48)
                  cir.yield %37 : !cir.bool loc(#loc48)
                }) : (!cir.bool) -> !cir.bool loc(#loc48)
                cir.if %36 {
                  %37 = cir.const #cir.int<0> : !s32i loc(#loc55)
                  %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc55)
                  %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
                  %40 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc57)
                  %41 = cir.const #cir.int<1> : !s32i loc(#loc58)
                  %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc58)
                  %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc147)
                  %44 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc59)
                  cir.store %38, %44 : !s8i, !cir.ptr<!s8i> loc(#loc148)
                } loc(#loc146)
              } loc(#loc142)
            } else {
              %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
              %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc60)
              %31 = cir.const #cir.int<0> : !s32i loc(#loc61)
              %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc61)
              %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
              %34 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc63)
              %35 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %34 : !u64i), !cir.ptr<!s8i> loc(#loc64)
              cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc149)
            } loc(#loc140)
          } loc(#loc137)
        } loc(#loc136)
      } loc(#loc133)
    } loc(#loc131)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc150)
  } loc(#loc129)
  cir.func @CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b_goodB2GSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc69, #loc70])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc152)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc68)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc71)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc154)
      %5 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc76)
      %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
      %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc76)
      cir.store %7, %4 : !u64i, !cir.ptr<!u64i> loc(#loc154)
      cir.scope {
        %8 = cir.const #cir.int<100> : !s32i loc(#loc80)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc80)
        %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc81)
        %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc156)
        %12 = cir.const #cir.int<1> : !s32i loc(#loc82)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc82)
        %14 = cir.cmp(gt, %11, %13) : !u64i, !cir.bool loc(#loc157)
        cir.if %14 {
          cir.scope {
            %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
            %16 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc87)
            %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc88)
            %18 = cir.const #cir.int<100> : !s32i loc(#loc89)
            %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc89)
            %20 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc90)
            %21 = cir.binop(sub, %19, %20) : !u64i loc(#loc160)
            %22 = cir.cast(integral, %21 : !u64i), !s32i loc(#loc160)
            %23 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc127)
            %24 = cir.load %23 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc91)
            %25 = cir.call @fgets(%17, %22, %24) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc92)
            %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc93)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc93)
            %28 = cir.cmp(ne, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc161)
            cir.if %28 {
              %29 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc97)
              %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
              %31 = cir.call @strlen(%30) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc97)
              cir.store %31, %4 : !u64i, !cir.ptr<!u64i> loc(#loc163)
              cir.scope {
                %32 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc103)
                %33 = cir.const #cir.int<0> : !s32i loc(#loc104)
                %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc104)
                %35 = cir.cmp(gt, %32, %34) : !u64i, !cir.bool loc(#loc165)
                %36 = cir.ternary(%35, true {
                  %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
                  %38 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc107)
                  %39 = cir.const #cir.int<1> : !s32i loc(#loc108)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc108)
                  %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc166)
                  %42 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc109)
                  %43 = cir.load %42 : !cir.ptr<!s8i>, !s8i loc(#loc106)
                  %44 = cir.cast(integral, %43 : !s8i), !s32i loc(#loc106)
                  %45 = cir.const #cir.int<10> : !s32i loc(#loc110)
                  %46 = cir.cmp(eq, %44, %45) : !s32i, !cir.bool loc(#loc167)
                  %47 = cir.ternary(%46, true {
                    %48 = cir.const #true loc(#loc105)
                    cir.yield %48 : !cir.bool loc(#loc105)
                  }, false {
                    %48 = cir.const #false loc(#loc105)
                    cir.yield %48 : !cir.bool loc(#loc105)
                  }) : (!cir.bool) -> !cir.bool loc(#loc105)
                  cir.yield %47 : !cir.bool loc(#loc105)
                }, false {
                  %37 = cir.const #false loc(#loc105)
                  cir.yield %37 : !cir.bool loc(#loc105)
                }) : (!cir.bool) -> !cir.bool loc(#loc105)
                cir.if %36 {
                  %37 = cir.const #cir.int<0> : !s32i loc(#loc112)
                  %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc112)
                  %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
                  %40 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc114)
                  %41 = cir.const #cir.int<1> : !s32i loc(#loc115)
                  %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc115)
                  %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc169)
                  %44 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc116)
                  cir.store %38, %44 : !s8i, !cir.ptr<!s8i> loc(#loc170)
                } loc(#loc168)
              } loc(#loc164)
            } else {
              %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc117)
              %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc117)
              cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc118)
              %31 = cir.const #cir.int<0> : !s32i loc(#loc119)
              %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc119)
              %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
              %34 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc121)
              %35 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %34 : !u64i), !cir.ptr<!s8i> loc(#loc122)
              cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc171)
            } loc(#loc162)
          } loc(#loc159)
        } loc(#loc158)
      } loc(#loc155)
    } loc(#loc153)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc172)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc172)
  } loc(#loc151)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE761_Free_Pointer_Not_at_Start_of_Buffer/CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":46:27)
#loc10 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":25:1)
#loc11 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":53:1)
#loc14 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":26:1)
#loc15 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":27:5)
#loc16 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":51:5)
#loc17 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":29:9)
#loc18 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":29:37)
#loc19 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":29:26)
#loc20 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":29:33)
#loc21 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":31:9)
#loc22 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":50:9)
#loc23 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":31:13)
#loc24 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":31:17)
#loc25 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":31:27)
#loc26 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":32:9)
#loc27 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":34:13)
#loc28 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":49:13)
#loc29 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":34:23)
#loc30 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":34:28)
#loc31 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":34:27)
#loc32 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":34:43)
#loc33 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":34:47)
#loc34 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":34:57)
#loc35 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":34:17)
#loc36 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":34:67)
#loc37 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":35:13)
#loc38 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":43:13)
#loc39 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":45:13)
#loc40 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":38:27)
#loc41 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":38:34)
#loc42 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":38:17)
#loc43 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":38:38)
#loc44 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":39:17)
#loc45 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":42:17)
#loc46 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":39:21)
#loc47 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":39:31)
#loc48 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":39:33)
#loc49 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":39:36)
#loc50 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":39:41)
#loc51 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":39:49)
#loc52 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":39:50)
#loc53 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":39:55)
#loc54 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":40:17)
#loc55 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":41:39)
#loc56 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":41:21)
#loc57 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":41:26)
#loc58 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":41:34)
#loc59 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":41:35)
#loc60 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":46:17)
#loc61 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":48:33)
#loc62 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":48:17)
#loc63 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":48:22)
#loc64 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":48:29)
#loc65 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":52:12)
#loc66 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":52:5)
#loc67 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":60:1)
#loc68 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":88:1)
#loc71 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":61:1)
#loc72 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":62:5)
#loc73 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":86:5)
#loc74 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":64:9)
#loc75 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":64:37)
#loc76 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":64:26)
#loc77 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":64:33)
#loc78 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":66:9)
#loc79 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":85:9)
#loc80 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":66:13)
#loc81 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":66:17)
#loc82 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":66:27)
#loc83 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":67:9)
#loc84 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":69:13)
#loc85 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":84:13)
#loc86 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":69:23)
#loc87 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":69:28)
#loc88 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":69:27)
#loc89 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":69:43)
#loc90 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":69:47)
#loc91 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":69:57)
#loc92 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":69:17)
#loc93 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":69:67)
#loc94 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":70:13)
#loc95 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":78:13)
#loc96 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":80:13)
#loc97 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":73:27)
#loc98 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":73:34)
#loc99 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":73:17)
#loc100 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":73:38)
#loc101 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":74:17)
#loc102 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":77:17)
#loc103 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":74:21)
#loc104 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":74:31)
#loc105 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":74:33)
#loc106 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":74:36)
#loc107 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":74:41)
#loc108 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":74:49)
#loc109 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":74:50)
#loc110 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":74:55)
#loc111 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":75:17)
#loc112 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":76:39)
#loc113 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":76:21)
#loc114 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":76:26)
#loc115 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":76:34)
#loc116 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":76:35)
#loc117 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":81:27)
#loc118 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":81:17)
#loc119 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":83:33)
#loc120 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":83:17)
#loc121 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":83:22)
#loc122 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":83:29)
#loc123 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":87:12)
#loc124 = loc("CWE761_Free_Pointer_Not_at_Start_of_Buffer__char_console_61b.c":87:5)
#loc125 = loc(fused[#loc1, #loc2])
#loc126 = loc(fused[#loc3, #loc4])
#loc127 = loc(fused[#loc5, #loc6])
#loc128 = loc(fused[#loc7, #loc8])
#loc129 = loc(fused[#loc10, #loc11])
#loc131 = loc(fused[#loc15, #loc16])
#loc132 = loc(fused[#loc17, #loc18])
#loc133 = loc(fused[#loc21, #loc22])
#loc134 = loc(fused[#loc23, #loc24])
#loc135 = loc(fused[#loc23, #loc25])
#loc136 = loc(fused[#loc26, #loc22])
#loc137 = loc(fused[#loc27, #loc28])
#loc138 = loc(fused[#loc32, #loc33])
#loc139 = loc(fused[#loc35, #loc36])
#loc140 = loc(fused[#loc37, #loc38, #loc39, #loc28])
#loc141 = loc(fused[#loc42, #loc43])
#loc142 = loc(fused[#loc44, #loc45])
#loc143 = loc(fused[#loc46, #loc47])
#loc144 = loc(fused[#loc50, #loc51])
#loc145 = loc(fused[#loc49, #loc53])
#loc146 = loc(fused[#loc54, #loc45])
#loc147 = loc(fused[#loc57, #loc58])
#loc148 = loc(fused[#loc56, #loc55])
#loc149 = loc(fused[#loc62, #loc61])
#loc150 = loc(fused[#loc66, #loc65])
#loc151 = loc(fused[#loc67, #loc68])
#loc153 = loc(fused[#loc72, #loc73])
#loc154 = loc(fused[#loc74, #loc75])
#loc155 = loc(fused[#loc78, #loc79])
#loc156 = loc(fused[#loc80, #loc81])
#loc157 = loc(fused[#loc80, #loc82])
#loc158 = loc(fused[#loc83, #loc79])
#loc159 = loc(fused[#loc84, #loc85])
#loc160 = loc(fused[#loc89, #loc90])
#loc161 = loc(fused[#loc92, #loc93])
#loc162 = loc(fused[#loc94, #loc95, #loc96, #loc85])
#loc163 = loc(fused[#loc99, #loc100])
#loc164 = loc(fused[#loc101, #loc102])
#loc165 = loc(fused[#loc103, #loc104])
#loc166 = loc(fused[#loc107, #loc108])
#loc167 = loc(fused[#loc106, #loc110])
#loc168 = loc(fused[#loc111, #loc102])
#loc169 = loc(fused[#loc114, #loc115])
#loc170 = loc(fused[#loc113, #loc112])
#loc171 = loc(fused[#loc120, #loc119])
#loc172 = loc(fused[#loc124, #loc123])
