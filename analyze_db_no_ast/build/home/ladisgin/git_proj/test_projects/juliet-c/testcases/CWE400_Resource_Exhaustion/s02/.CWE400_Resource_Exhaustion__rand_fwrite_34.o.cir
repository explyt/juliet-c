!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty_CWE400_Resource_Exhaustion__rand_fwrite_34_unionType = !cir.struct<union "CWE400_Resource_Exhaustion__rand_fwrite_34_unionType" {!s32i, !s32i}>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @rand() -> !s32i extra(#fn_attr) loc(#loc238)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"output_bad.txt\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc3)
  cir.func private  @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc239)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc6)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc240)
  cir.func private  @fwrite(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc241)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"This is the sentence we are printing to the file. \00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc11)
  cir.func private  @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc242)
  cir.func no_proto  @CWE400_Resource_Exhaustion__rand_fwrite_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc244)
    %1 = cir.alloca !ty_CWE400_Resource_Exhaustion__rand_fwrite_34_unionType, !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_fwrite_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc245)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc21)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc246)
    %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %6 = cir.binop(and, %4, %5) : !s32i loc(#loc23)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc23)
    %8 = cir.ternary(%7, true {
      %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
      %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc23)
      %14 = cir.const #cir.int<30> : !s32i loc(#loc23)
      %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc23)
      %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
      %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc23)
      %18 = cir.const #cir.int<15> : !s32i loc(#loc23)
      %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc23)
      %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc23)
      %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
      %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc23)
      %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc23)
      cir.yield %23 : !u32i loc(#loc23)
    }, false {
      %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
      %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc23)
      %14 = cir.const #cir.int<30> : !s32i loc(#loc23)
      %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc23)
      %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
      %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc23)
      %18 = cir.const #cir.int<15> : !s32i loc(#loc23)
      %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc23)
      %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc23)
      %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc23)
      %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc23)
      %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc23)
      %24 = cir.unary(minus, %23) : !u32i, !u32i loc(#loc23)
      %25 = cir.const #cir.int<1> : !s32i loc(#loc23)
      %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc23)
      %27 = cir.binop(sub, %24, %26) : !u32i loc(#loc23)
      cir.yield %27 : !u32i loc(#loc23)
    }) : (!cir.bool) -> !u32i loc(#loc23)
    %9 = cir.cast(integral, %8 : !u32i), !s32i loc(#loc23)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc247)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc25)
    %11 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_fwrite_34_unionType> -> !cir.ptr<!s32i> loc(#loc26)
    cir.store %10, %11 : !s32i, !cir.ptr<!s32i> loc(#loc248)
    cir.scope {
      %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc250)
      %13 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_fwrite_34_unionType> -> !cir.ptr<!s32i> loc(#loc32)
      %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc31)
      cir.store %14, %12 : !s32i, !cir.ptr<!s32i> loc(#loc250)
      cir.scope {
        %15 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc252)
        %16 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc253)
        %17 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc254)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc36)
        %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc36)
        cir.store %19, %15 : !u64i, !cir.ptr<!u64i> loc(#loc252)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc38)
        cir.store %20, %16 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc253)
        %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc3)
        %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc3)
        cir.store %22, %17 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc254)
        %23 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc40)
        %24 = cir.load %17 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
        %25 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc6)
        %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc6)
        %27 = cir.call @fopen(%24, %26) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc40)
        cir.store %27, %16 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc255)
        cir.scope {
          %28 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc46)
          %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc47)
          %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc47)
          %31 = cir.cmp(eq, %28, %30) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc257)
          %32 = cir.cast(int_to_bool, %31 : !s32i), !cir.bool loc(#loc48)
          cir.if %32 {
            %33 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc50)
            %34 = cir.const #cir.int<1> : !s32i loc(#loc51)
            cir.call @exit(%34) : (!s32i) -> () extra(#fn_attr) loc(#loc50)
          } loc(#loc258)
        } loc(#loc256)
        cir.scope {
          %28 = cir.const #cir.int<0> : !s32i loc(#loc54)
          %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc54)
          cir.store %29, %15 : !u64i, !cir.ptr<!u64i> loc(#loc260)
          cir.for : cond {
            %30 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc56)
            %31 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc57)
            %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc57)
            %33 = cir.cmp(lt, %30, %32) : !u64i, !s32i loc(#loc261)
            %34 = cir.cast(int_to_bool, %33 : !s32i), !cir.bool loc(#loc58)
            cir.condition(%34) loc(#loc58)
          } body {
            cir.scope {
              cir.scope {
                %30 = cir.const #cir.int<50> : !u64i loc(#loc264)
                %31 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc64)
                %32 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc11)
                %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc11)
                %34 = cir.cast(bitcast, %33 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc11)
                %35 = cir.const #cir.int<1> : !u64i loc(#loc265)
                %36 = cir.const #cir.int<50> : !u64i loc(#loc266)
                %37 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc69)
                %38 = cir.call @fwrite(%34, %35, %36, %37) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc64)
                %39 = cir.cmp(ne, %30, %38) : !u64i, !s32i loc(#loc267)
                %40 = cir.cast(int_to_bool, %39 : !s32i), !cir.bool loc(#loc71)
                cir.if %40 {
                  %41 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc73)
                  %42 = cir.const #cir.int<1> : !s32i loc(#loc74)
                  cir.call @exit(%42) : (!s32i) -> () extra(#fn_attr) loc(#loc73)
                } loc(#loc268)
              } loc(#loc263)
            } loc(#loc262)
            cir.yield loc(#loc53)
          } step {
            %30 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc75)
            %31 = cir.unary(inc, %30) : !u64i, !u64i loc(#loc76)
            cir.store %31, %15 : !u64i, !cir.ptr<!u64i> loc(#loc269)
            cir.yield loc(#loc259)
          } loc(#loc259)
        } loc(#loc259)
        cir.scope {
          %28 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc79)
          %29 = cir.cast(ptr_to_bool, %28 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc79)
          cir.if %29 {
            %30 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc81)
            %31 = cir.call @fclose(%30) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc82)
          } loc(#loc271)
        } loc(#loc270)
      } loc(#loc251)
    } loc(#loc249)
    cir.return loc(#loc15)
  } loc(#loc243)
  cir.func no_proto  @CWE400_Resource_Exhaustion__rand_fwrite_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc273)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc85)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc274)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc87)
    cir.return loc(#loc84)
  } loc(#loc272)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc276)
    %1 = cir.alloca !ty_CWE400_Resource_Exhaustion__rand_fwrite_34_unionType, !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_fwrite_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc277)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc96)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc278)
    %4 = cir.const #cir.int<20> : !s32i loc(#loc98)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc279)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    %6 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_fwrite_34_unionType> -> !cir.ptr<!s32i> loc(#loc26)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc280)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc282)
      %8 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_fwrite_34_unionType> -> !cir.ptr<!s32i> loc(#loc32)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc105)
      cir.store %9, %7 : !s32i, !cir.ptr<!s32i> loc(#loc282)
      cir.scope {
        %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc284)
        %11 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc285)
        %12 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc286)
        %13 = cir.const #cir.int<0> : !s32i loc(#loc109)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc109)
        cir.store %14, %10 : !u64i, !cir.ptr<!u64i> loc(#loc284)
        %15 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc111)
        cir.store %15, %11 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc285)
        %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc113)
        %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc113)
        cir.store %17, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc286)
        %18 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc114)
        %19 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
        %20 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc116)
        %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc116)
        %22 = cir.call @fopen(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc114)
        cir.store %22, %11 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc287)
        cir.scope {
          %23 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc121)
          %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc122)
          %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc122)
          %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc289)
          %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc123)
          cir.if %27 {
            %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc125)
            %29 = cir.const #cir.int<1> : !s32i loc(#loc126)
            cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc125)
          } loc(#loc290)
        } loc(#loc288)
        cir.scope {
          %23 = cir.const #cir.int<0> : !s32i loc(#loc129)
          %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc129)
          cir.store %24, %10 : !u64i, !cir.ptr<!u64i> loc(#loc292)
          cir.for : cond {
            %25 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc131)
            %26 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc132)
            %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc132)
            %28 = cir.cmp(lt, %25, %27) : !u64i, !s32i loc(#loc293)
            %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc133)
            cir.condition(%29) loc(#loc133)
          } body {
            cir.scope {
              cir.scope {
                %25 = cir.const #cir.int<50> : !u64i loc(#loc296)
                %26 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc139)
                %27 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc140)
                %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc140)
                %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc140)
                %30 = cir.const #cir.int<1> : !u64i loc(#loc297)
                %31 = cir.const #cir.int<50> : !u64i loc(#loc298)
                %32 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc145)
                %33 = cir.call @fwrite(%29, %30, %31, %32) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc139)
                %34 = cir.cmp(ne, %25, %33) : !u64i, !s32i loc(#loc299)
                %35 = cir.cast(int_to_bool, %34 : !s32i), !cir.bool loc(#loc147)
                cir.if %35 {
                  %36 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc149)
                  %37 = cir.const #cir.int<1> : !s32i loc(#loc150)
                  cir.call @exit(%37) : (!s32i) -> () extra(#fn_attr) loc(#loc149)
                } loc(#loc300)
              } loc(#loc295)
            } loc(#loc294)
            cir.yield loc(#loc128)
          } step {
            %25 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc151)
            %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc152)
            cir.store %26, %10 : !u64i, !cir.ptr<!u64i> loc(#loc301)
            cir.yield loc(#loc291)
          } loc(#loc291)
        } loc(#loc291)
        cir.scope {
          %23 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc155)
          %24 = cir.cast(ptr_to_bool, %23 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc155)
          cir.if %24 {
            %25 = cir.load %11 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc157)
            %26 = cir.call @fclose(%25) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc158)
          } loc(#loc303)
        } loc(#loc302)
      } loc(#loc283)
    } loc(#loc281)
    cir.return loc(#loc90)
  } loc(#loc275)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"output_good.txt\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc159)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc305)
    %1 = cir.alloca !ty_CWE400_Resource_Exhaustion__rand_fwrite_34_unionType, !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_fwrite_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc306)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc166)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc167)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc307)
    %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc169)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc169)
    %6 = cir.binop(and, %4, %5) : !s32i loc(#loc169)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc169)
    %8 = cir.ternary(%7, true {
      %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc169)
      %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc169)
      %14 = cir.const #cir.int<30> : !s32i loc(#loc169)
      %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc169)
      %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc169)
      %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc169)
      %18 = cir.const #cir.int<15> : !s32i loc(#loc169)
      %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc169)
      %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc169)
      %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc169)
      %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc169)
      %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc169)
      cir.yield %23 : !u32i loc(#loc169)
    }, false {
      %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc169)
      %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc169)
      %14 = cir.const #cir.int<30> : !s32i loc(#loc169)
      %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc169)
      %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc169)
      %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc169)
      %18 = cir.const #cir.int<15> : !s32i loc(#loc169)
      %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc169)
      %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc169)
      %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc169)
      %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc169)
      %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc169)
      %24 = cir.unary(minus, %23) : !u32i, !u32i loc(#loc169)
      %25 = cir.const #cir.int<1> : !s32i loc(#loc169)
      %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc169)
      %27 = cir.binop(sub, %24, %26) : !u32i loc(#loc169)
      cir.yield %27 : !u32i loc(#loc169)
    }) : (!cir.bool) -> !u32i loc(#loc169)
    %9 = cir.cast(integral, %8 : !u32i), !s32i loc(#loc169)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc308)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc171)
    %11 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_fwrite_34_unionType> -> !cir.ptr<!s32i> loc(#loc26)
    cir.store %10, %11 : !s32i, !cir.ptr<!s32i> loc(#loc309)
    cir.scope {
      %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count", init] {alignment = 4 : i64} loc(#loc311)
      %13 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE400_Resource_Exhaustion__rand_fwrite_34_unionType> -> !cir.ptr<!s32i> loc(#loc32)
      %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc176)
      cir.store %14, %12 : !s32i, !cir.ptr<!s32i> loc(#loc311)
      cir.scope {
        %15 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc313)
        %16 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc314)
        %17 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc315)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc180)
        %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc180)
        cir.store %19, %15 : !u64i, !cir.ptr<!u64i> loc(#loc313)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc182)
        cir.store %20, %16 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc314)
        %21 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc159)
        %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc159)
        cir.store %22, %17 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc315)
        cir.scope {
          %23 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc186)
          %24 = cir.const #cir.int<0> : !s32i loc(#loc187)
          %25 = cir.cmp(gt, %23, %24) : !s32i, !s32i loc(#loc317)
          %26 = cir.cast(int_to_bool, %25 : !s32i), !cir.bool loc(#loc188)
          %27 = cir.ternary(%26, true {
            %28 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc190)
            %29 = cir.const #cir.int<20> : !s32i loc(#loc191)
            %30 = cir.cmp(le, %28, %29) : !s32i, !s32i loc(#loc318)
            %31 = cir.cast(int_to_bool, %30 : !s32i), !cir.bool loc(#loc192)
            %32 = cir.ternary(%31, true {
              %33 = cir.const #true loc(#loc189)
              cir.yield %33 : !cir.bool loc(#loc189)
            }, false {
              %33 = cir.const #false loc(#loc189)
              cir.yield %33 : !cir.bool loc(#loc189)
            }) : (!cir.bool) -> !cir.bool loc(#loc189)
            cir.yield %32 : !cir.bool loc(#loc189)
          }, false {
            %28 = cir.const #false loc(#loc189)
            cir.yield %28 : !cir.bool loc(#loc189)
          }) : (!cir.bool) -> !cir.bool loc(#loc189)
          cir.if %27 {
            %28 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc194)
            %29 = cir.load %17 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc195)
            %30 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc196)
            %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc196)
            %32 = cir.call @fopen(%29, %31) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc194)
            cir.store %32, %16 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc320)
            cir.scope {
              %33 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc201)
              %34 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc202)
              %35 = cir.cast(bitcast, %34 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc202)
              %36 = cir.cmp(eq, %33, %35) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc322)
              %37 = cir.cast(int_to_bool, %36 : !s32i), !cir.bool loc(#loc203)
              cir.if %37 {
                %38 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc205)
                %39 = cir.const #cir.int<1> : !s32i loc(#loc206)
                cir.call @exit(%39) : (!s32i) -> () extra(#fn_attr) loc(#loc205)
              } loc(#loc323)
            } loc(#loc321)
            cir.scope {
              %33 = cir.const #cir.int<0> : !s32i loc(#loc209)
              %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc209)
              cir.store %34, %15 : !u64i, !cir.ptr<!u64i> loc(#loc325)
              cir.for : cond {
                %35 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc211)
                %36 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc212)
                %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc212)
                %38 = cir.cmp(lt, %35, %37) : !u64i, !s32i loc(#loc326)
                %39 = cir.cast(int_to_bool, %38 : !s32i), !cir.bool loc(#loc213)
                cir.condition(%39) loc(#loc213)
              } body {
                cir.scope {
                  cir.scope {
                    %35 = cir.const #cir.int<50> : !u64i loc(#loc329)
                    %36 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc219)
                    %37 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc220)
                    %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc220)
                    %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc220)
                    %40 = cir.const #cir.int<1> : !u64i loc(#loc330)
                    %41 = cir.const #cir.int<50> : !u64i loc(#loc331)
                    %42 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc225)
                    %43 = cir.call @fwrite(%39, %40, %41, %42) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc219)
                    %44 = cir.cmp(ne, %35, %43) : !u64i, !s32i loc(#loc332)
                    %45 = cir.cast(int_to_bool, %44 : !s32i), !cir.bool loc(#loc227)
                    cir.if %45 {
                      %46 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc228)
                      %47 = cir.const #cir.int<1> : !s32i loc(#loc229)
                      cir.call @exit(%47) : (!s32i) -> () extra(#fn_attr) loc(#loc228)
                    } loc(#loc333)
                  } loc(#loc328)
                } loc(#loc327)
                cir.yield loc(#loc208)
              } step {
                %35 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc230)
                %36 = cir.unary(inc, %35) : !u64i, !u64i loc(#loc231)
                cir.store %36, %15 : !u64i, !cir.ptr<!u64i> loc(#loc334)
                cir.yield loc(#loc324)
              } loc(#loc324)
            } loc(#loc324)
            cir.scope {
              %33 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc234)
              %34 = cir.cast(ptr_to_bool, %33 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc234)
              cir.if %34 {
                %35 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc236)
                %36 = cir.call @fclose(%35) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc237)
              } loc(#loc336)
            } loc(#loc335)
          } loc(#loc319)
        } loc(#loc316)
      } loc(#loc312)
    } loc(#loc310)
    cir.return loc(#loc161)
  } loc(#loc304)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_34.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":44:36)
#loc4 = loc("/usr/include/stdio.h":264:1)
#loc5 = loc("/usr/include/stdio.h":266:3)
#loc6 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":45:37)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("/usr/include/stdio.h":745:1)
#loc10 = loc("/usr/include/stdio.h":746:43)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":54:48)
#loc12 = loc("/usr/include/stdio.h":184:1)
#loc13 = loc("/usr/include/stdio.h":184:36)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":30:1)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":65:1)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":32:5)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":32:9)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":33:5)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":33:58)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":35:14)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":35:13)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":35:5)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":37:13)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":37:5)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":38:26)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":24:9)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":38:5)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":39:5)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":64:5)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":40:9)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":40:29)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":25:9)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":41:9)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":63:9)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":42:13)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":42:24)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":43:13)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":43:27)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":44:13)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":45:21)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":45:27)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":45:13)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":45:41)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":46:13)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":49:13)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":46:17)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":46:26)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":46:23)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":47:13)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":48:17)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":48:22)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":52:13)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":58:13)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":52:22)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":52:18)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":52:25)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":52:37)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":52:27)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":53:13)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":54:17)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":57:17)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":54:21)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":54:36)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":54:41)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":54:58)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":54:69)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":54:72)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":54:87)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":54:90)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":54:95)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":54:38)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":55:17)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":56:21)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":56:26)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":52:45)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":52:44)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":59:13)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":62:13)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":59:17)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":60:13)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":61:24)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":61:17)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":146:1)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":150:1)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":148:5)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":148:13)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":149:5)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":149:13)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":72:1)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":107:1)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":74:5)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":74:9)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":75:5)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":75:58)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":77:14)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":77:13)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":77:5)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":79:13)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":79:5)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":80:26)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":80:5)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":81:5)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":106:5)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":82:9)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":82:29)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":83:9)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":105:9)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":84:13)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":84:24)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":85:13)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":85:27)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":86:13)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":86:36)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":87:21)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":87:27)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":87:37)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":87:13)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":87:41)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":88:13)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":91:13)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":88:17)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":88:26)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":88:23)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":89:13)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":90:17)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":90:22)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":94:13)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":100:13)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":94:22)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":94:18)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":94:25)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":94:37)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":94:27)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":95:13)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":96:17)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":99:17)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":96:21)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":96:36)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":96:41)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":96:48)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":96:58)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":96:69)
#loc143 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":96:72)
#loc144 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":96:87)
#loc145 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":96:90)
#loc146 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":96:95)
#loc147 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":96:38)
#loc148 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":97:17)
#loc149 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":98:21)
#loc150 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":98:26)
#loc151 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":94:45)
#loc152 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":94:44)
#loc153 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":101:13)
#loc154 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":104:13)
#loc155 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":101:17)
#loc156 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":102:13)
#loc157 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":103:24)
#loc158 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":103:17)
#loc159 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":124:36)
#loc160 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":110:1)
#loc161 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":144:1)
#loc162 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":112:5)
#loc163 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":112:9)
#loc164 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":113:5)
#loc165 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":113:58)
#loc166 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":115:14)
#loc167 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":115:13)
#loc168 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":115:5)
#loc169 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":117:13)
#loc170 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":117:5)
#loc171 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":118:26)
#loc172 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":118:5)
#loc173 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":119:5)
#loc174 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":143:5)
#loc175 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":120:9)
#loc176 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":120:29)
#loc177 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":121:9)
#loc178 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":142:9)
#loc179 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":122:13)
#loc180 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":122:24)
#loc181 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":123:13)
#loc182 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":123:27)
#loc183 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":124:13)
#loc184 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":126:13)
#loc185 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":141:13)
#loc186 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":126:17)
#loc187 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":126:25)
#loc188 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":126:23)
#loc189 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":126:27)
#loc190 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":126:30)
#loc191 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":126:39)
#loc192 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":126:36)
#loc193 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":127:13)
#loc194 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":128:25)
#loc195 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":128:31)
#loc196 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":128:41)
#loc197 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":128:17)
#loc198 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":128:45)
#loc199 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":129:17)
#loc200 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":132:17)
#loc201 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":129:21)
#loc202 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":129:30)
#loc203 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":129:27)
#loc204 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":130:17)
#loc205 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":131:21)
#loc206 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":131:26)
#loc207 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":133:17)
#loc208 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":136:17)
#loc209 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":133:26)
#loc210 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":133:22)
#loc211 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":133:29)
#loc212 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":133:41)
#loc213 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":133:31)
#loc214 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":134:17)
#loc215 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":135:21)
#loc216 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":135:108)
#loc217 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":135:25)
#loc218 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":135:40)
#loc219 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":135:45)
#loc220 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":135:52)
#loc221 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":135:62)
#loc222 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":135:73)
#loc223 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":135:76)
#loc224 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":135:91)
#loc225 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":135:94)
#loc226 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":135:99)
#loc227 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":135:42)
#loc228 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":135:102)
#loc229 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":135:107)
#loc230 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":133:49)
#loc231 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":133:48)
#loc232 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":137:17)
#loc233 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":140:17)
#loc234 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":137:21)
#loc235 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":138:17)
#loc236 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":139:28)
#loc237 = loc("CWE400_Resource_Exhaustion__rand_fwrite_34.c":139:21)
#loc238 = loc(fused[#loc1, #loc2])
#loc239 = loc(fused[#loc4, #loc5])
#loc240 = loc(fused[#loc7, #loc8])
#loc241 = loc(fused[#loc9, #loc10])
#loc242 = loc(fused[#loc12, #loc13])
#loc243 = loc(fused[#loc14, #loc15])
#loc244 = loc(fused[#loc16, #loc17])
#loc245 = loc(fused[#loc18, #loc19])
#loc246 = loc(fused[#loc22, #loc20])
#loc247 = loc(fused[#loc24, #loc23])
#loc248 = loc(fused[#loc27, #loc25])
#loc249 = loc(fused[#loc28, #loc29])
#loc250 = loc(fused[#loc30, #loc31])
#loc251 = loc(fused[#loc33, #loc34])
#loc252 = loc(fused[#loc35, #loc36])
#loc253 = loc(fused[#loc37, #loc38])
#loc254 = loc(fused[#loc39, #loc3])
#loc255 = loc(fused[#loc42, #loc43])
#loc256 = loc(fused[#loc44, #loc45])
#loc257 = loc(fused[#loc46, #loc47])
#loc258 = loc(fused[#loc49, #loc45])
#loc259 = loc(fused[#loc52, #loc53])
#loc260 = loc(fused[#loc55, #loc54])
#loc261 = loc(fused[#loc56, #loc57])
#loc262 = loc(fused[#loc59, #loc53])
#loc263 = loc(fused[#loc60, #loc61])
#loc264 = loc(fused[#loc62, #loc63])
#loc265 = loc(fused[#loc65, #loc66])
#loc266 = loc(fused[#loc67, #loc68])
#loc267 = loc(fused[#loc62, #loc70])
#loc268 = loc(fused[#loc72, #loc61])
#loc269 = loc(fused[#loc76, #loc75])
#loc270 = loc(fused[#loc77, #loc78])
#loc271 = loc(fused[#loc80, #loc78])
#loc272 = loc(fused[#loc83, #loc84])
#loc273 = loc(fused[#loc85, #loc86])
#loc274 = loc(fused[#loc87, #loc88])
#loc275 = loc(fused[#loc89, #loc90])
#loc276 = loc(fused[#loc91, #loc92])
#loc277 = loc(fused[#loc93, #loc94])
#loc278 = loc(fused[#loc97, #loc95])
#loc279 = loc(fused[#loc99, #loc98])
#loc280 = loc(fused[#loc101, #loc100])
#loc281 = loc(fused[#loc102, #loc103])
#loc282 = loc(fused[#loc104, #loc105])
#loc283 = loc(fused[#loc106, #loc107])
#loc284 = loc(fused[#loc108, #loc109])
#loc285 = loc(fused[#loc110, #loc111])
#loc286 = loc(fused[#loc112, #loc113])
#loc287 = loc(fused[#loc117, #loc118])
#loc288 = loc(fused[#loc119, #loc120])
#loc289 = loc(fused[#loc121, #loc122])
#loc290 = loc(fused[#loc124, #loc120])
#loc291 = loc(fused[#loc127, #loc128])
#loc292 = loc(fused[#loc130, #loc129])
#loc293 = loc(fused[#loc131, #loc132])
#loc294 = loc(fused[#loc134, #loc128])
#loc295 = loc(fused[#loc135, #loc136])
#loc296 = loc(fused[#loc137, #loc138])
#loc297 = loc(fused[#loc141, #loc142])
#loc298 = loc(fused[#loc143, #loc144])
#loc299 = loc(fused[#loc137, #loc146])
#loc300 = loc(fused[#loc148, #loc136])
#loc301 = loc(fused[#loc152, #loc151])
#loc302 = loc(fused[#loc153, #loc154])
#loc303 = loc(fused[#loc156, #loc154])
#loc304 = loc(fused[#loc160, #loc161])
#loc305 = loc(fused[#loc162, #loc163])
#loc306 = loc(fused[#loc164, #loc165])
#loc307 = loc(fused[#loc168, #loc166])
#loc308 = loc(fused[#loc170, #loc169])
#loc309 = loc(fused[#loc172, #loc171])
#loc310 = loc(fused[#loc173, #loc174])
#loc311 = loc(fused[#loc175, #loc176])
#loc312 = loc(fused[#loc177, #loc178])
#loc313 = loc(fused[#loc179, #loc180])
#loc314 = loc(fused[#loc181, #loc182])
#loc315 = loc(fused[#loc183, #loc159])
#loc316 = loc(fused[#loc184, #loc185])
#loc317 = loc(fused[#loc186, #loc187])
#loc318 = loc(fused[#loc190, #loc191])
#loc319 = loc(fused[#loc193, #loc185])
#loc320 = loc(fused[#loc197, #loc198])
#loc321 = loc(fused[#loc199, #loc200])
#loc322 = loc(fused[#loc201, #loc202])
#loc323 = loc(fused[#loc204, #loc200])
#loc324 = loc(fused[#loc207, #loc208])
#loc325 = loc(fused[#loc210, #loc209])
#loc326 = loc(fused[#loc211, #loc212])
#loc327 = loc(fused[#loc214, #loc208])
#loc328 = loc(fused[#loc215, #loc216])
#loc329 = loc(fused[#loc217, #loc218])
#loc330 = loc(fused[#loc221, #loc222])
#loc331 = loc(fused[#loc223, #loc224])
#loc332 = loc(fused[#loc217, #loc226])
#loc333 = loc(fused[#loc228, #loc216])
#loc334 = loc(fused[#loc231, #loc230])
#loc335 = loc(fused[#loc232, #loc233])
#loc336 = loc(fused[#loc235, #loc233])
