!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc216 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":192:10)
#loc217 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":192:14)
#loc218 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":192:20)
#loc219 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":192:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc347 = loc(fused[#loc216, #loc217])
#loc348 = loc(fused[#loc218, #loc219])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_popen_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc261)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_listen_socket_popen_01_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc262)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc263)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc264)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc265)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc266)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc267)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc268)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc269)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc270)
  cir.func private @close(!s32i) -> !s32i loc(#loc271)
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc272)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc25)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc273)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_popen_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc275)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc262)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_listen_socket_popen_01_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc262)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc262)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc32)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc276)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc278)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc279)
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc280)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc281)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc282)
      %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc283)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc43)
      %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc43)
      cir.store %11, %7 : !s32i, !cir.ptr<!s32i> loc(#loc281)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc45)
      %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc45)
      cir.store %13, %8 : !s32i, !cir.ptr<!s32i> loc(#loc282)
      %14 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc48)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
      %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc48)
      cir.store %16, %9 : !u64i, !cir.ptr<!u64i> loc(#loc283)
      cir.scope {
        cir.do {
          %17 = cir.const #cir.int<2> : !s32i loc(#loc52)
          %18 = cir.const #cir.int<1> : !s32i loc(#loc53)
          %19 = cir.const #cir.int<6> : !s32i loc(#loc54)
          %20 = cir.call @socket(%17, %18, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc55)
          cir.store %20, %7 : !s32i, !cir.ptr<!s32i> loc(#loc285)
          cir.scope {
            %74 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc60)
            %75 = cir.const #cir.int<1> : !s32i loc(#loc61)
            %76 = cir.unary(minus, %75) : !s32i, !s32i loc(#loc61)
            %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc287)
            cir.if %77 {
              cir.break loc(#loc63)
            } loc(#loc288)
          } loc(#loc286)
          %21 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc289)
          %22 = cir.const #cir.int<0> : !s32i loc(#loc66)
          %23 = cir.const #cir.int<16> : !u64i loc(#loc290)
          cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc291)
          %24 = cir.const #cir.int<2> : !s32i loc(#loc71)
          %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc71)
          %26 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc72)
          cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc292)
          %27 = cir.const #cir.int<0> : !s32i loc(#loc74)
          %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc74)
          %29 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc75)
          %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc76)
          cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc293)
          %31 = cir.const #cir.int<27015> : !s32i loc(#loc78)
          %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc78)
          %33 = cir.call @htons(%32) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc79)
          %34 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
          cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc294)
          cir.scope {
            %74 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc85)
            %75 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc296)
            %76 = cir.const #cir.int<16> : !u64i loc(#loc297)
            %77 = cir.cast(integral, %76 : !u64i), !u32i loc(#loc297)
            %78 = cir.call @bind(%74, %75, %77) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc90)
            %79 = cir.const #cir.int<1> : !s32i loc(#loc91)
            %80 = cir.unary(minus, %79) : !s32i, !s32i loc(#loc91)
            %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc298)
            cir.if %81 {
              cir.break loc(#loc93)
            } loc(#loc299)
          } loc(#loc295)
          cir.scope {
            %74 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc96)
            %75 = cir.const #cir.int<5> : !s32i loc(#loc97)
            %76 = cir.call @listen(%74, %75) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc98)
            %77 = cir.const #cir.int<1> : !s32i loc(#loc99)
            %78 = cir.unary(minus, %77) : !s32i, !s32i loc(#loc99)
            %79 = cir.cmp(eq, %76, %78) : !s32i, !cir.bool loc(#loc301)
            cir.if %79 {
              cir.break loc(#loc101)
            } loc(#loc302)
          } loc(#loc300)
          %35 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc102)
          %36 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc103)
          %37 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc104)
          %38 = cir.call @accept(%35, %36, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc105)
          cir.store %38, %8 : !s32i, !cir.ptr<!s32i> loc(#loc303)
          cir.scope {
            %74 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc110)
            %75 = cir.const #cir.int<1> : !s32i loc(#loc111)
            %76 = cir.unary(minus, %75) : !s32i, !s32i loc(#loc111)
            %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc305)
            cir.if %77 {
              cir.break loc(#loc113)
            } loc(#loc306)
          } loc(#loc304)
          %39 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc114)
          %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
          %41 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc116)
          %42 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc117)
          %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc307)
          %44 = cir.const #cir.int<1> : !u64i loc(#loc308)
          %45 = cir.const #cir.int<100> : !s32i loc(#loc122)
          %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc122)
          %47 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc123)
          %48 = cir.binop(sub, %46, %47) : !u64i loc(#loc309)
          %49 = cir.const #cir.int<1> : !s32i loc(#loc124)
          %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc124)
          %51 = cir.binop(sub, %48, %50) : !u64i loc(#loc310)
          %52 = cir.binop(mul, %44, %51) : !u64i loc(#loc311)
          %53 = cir.const #cir.int<0> : !s32i loc(#loc126)
          %54 = cir.call @recv(%39, %43, %52, %53) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc127)
          %55 = cir.cast(integral, %54 : !s64i), !s32i loc(#loc127)
          cir.store %55, %4 : !s32i, !cir.ptr<!s32i> loc(#loc312)
          cir.scope {
            %74 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc132)
            %75 = cir.const #cir.int<1> : !s32i loc(#loc133)
            %76 = cir.unary(minus, %75) : !s32i, !s32i loc(#loc133)
            %77 = cir.cmp(eq, %74, %76) : !s32i, !cir.bool loc(#loc314)
            %78 = cir.ternary(%77, true {
              %79 = cir.const #true loc(#loc134)
              cir.yield %79 : !cir.bool loc(#loc134)
            }, false {
              %79 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc135)
              %80 = cir.const #cir.int<0> : !s32i loc(#loc136)
              %81 = cir.cmp(eq, %79, %80) : !s32i, !cir.bool loc(#loc315)
              %82 = cir.ternary(%81, true {
                %83 = cir.const #true loc(#loc134)
                cir.yield %83 : !cir.bool loc(#loc134)
              }, false {
                %83 = cir.const #false loc(#loc134)
                cir.yield %83 : !cir.bool loc(#loc134)
              }) : (!cir.bool) -> !cir.bool loc(#loc134)
              cir.yield %82 : !cir.bool loc(#loc134)
            }) : (!cir.bool) -> !cir.bool loc(#loc134)
            cir.if %78 {
              cir.break loc(#loc138)
            } loc(#loc316)
          } loc(#loc313)
          %56 = cir.const #cir.int<0> : !s32i loc(#loc139)
          %57 = cir.cast(integral, %56 : !s32i), !s8i loc(#loc139)
          %58 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
          %59 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc141)
          %60 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc142)
          %61 = cir.cast(integral, %60 : !s32i), !u64i loc(#loc142)
          %62 = cir.const #cir.int<1> : !u64i loc(#loc317)
          %63 = cir.binop(div, %61, %62) : !u64i loc(#loc318)
          %64 = cir.binop(add, %59, %63) : !u64i loc(#loc319)
          %65 = cir.ptr_stride(%58 : !cir.ptr<!s8i>, %64 : !u64i), !cir.ptr<!s8i> loc(#loc145)
          cir.store %57, %65 : !s8i, !cir.ptr<!s8i> loc(#loc320)
          %66 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc146)
          %67 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
          %68 = cir.const #cir.int<13> : !s32i loc(#loc148)
          %69 = cir.call @strchr(%67, %68) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc146)
          cir.store %69, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc321)
          cir.scope {
            %74 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
            %75 = cir.cast(ptr_to_bool, %74 : !cir.ptr<!s8i>), !cir.bool loc(#loc153)
            cir.if %75 {
              %76 = cir.const #cir.int<0> : !s32i loc(#loc155)
              %77 = cir.cast(integral, %76 : !s32i), !s8i loc(#loc155)
              %78 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
              cir.store %77, %78 : !s8i, !cir.ptr<!s8i> loc(#loc324)
            } loc(#loc323)
          } loc(#loc322)
          %70 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc158)
          %71 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
          %72 = cir.const #cir.int<10> : !s32i loc(#loc160)
          %73 = cir.call @strchr(%71, %72) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc158)
          cir.store %73, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc325)
          cir.scope {
            %74 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
            %75 = cir.cast(ptr_to_bool, %74 : !cir.ptr<!s8i>), !cir.bool loc(#loc165)
            cir.if %75 {
              %76 = cir.const #cir.int<0> : !s32i loc(#loc167)
              %77 = cir.cast(integral, %76 : !s32i), !s8i loc(#loc167)
              %78 = cir.load deref %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
              cir.store %77, %78 : !s8i, !cir.ptr<!s8i> loc(#loc328)
            } loc(#loc327)
          } loc(#loc326)
          cir.yield loc(#loc51)
        } while {
          %17 = cir.const #cir.int<0> : !s32i loc(#loc170)
          %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc170)
          cir.condition(%18) loc(#loc170)
        } loc(#loc284)
      } loc(#loc284)
      cir.scope {
        %17 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc173)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc174)
        %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc174)
        %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc330)
        cir.if %20 {
          %21 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc176)
          %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc177)
        } loc(#loc331)
      } loc(#loc329)
      cir.scope {
        %17 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc180)
        %18 = cir.const #cir.int<1> : !s32i loc(#loc181)
        %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc181)
        %20 = cir.cmp(ne, %17, %19) : !s32i, !cir.bool loc(#loc333)
        cir.if %20 {
          %21 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc183)
          %22 = cir.call @close(%21) : (!s32i) -> !s32i loc(#loc184)
        } loc(#loc334)
      } loc(#loc332)
    } loc(#loc277)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc336)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc189)
      %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc25)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc25)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc190)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc337)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc195)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc196)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc196)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc339)
        cir.if %12 {
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc198)
          %14 = cir.call @pclose(%13) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc199)
        } loc(#loc340)
      } loc(#loc338)
    } loc(#loc335)
    cir.return loc(#loc29)
  } loc(#loc274)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_popen_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc342)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc202)
    cir.return loc(#loc201)
  } loc(#loc341)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc343)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc344)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc345)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc210)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc211)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc212)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc213)
  cir.func @main(%arg0: !s32i loc(fused[#loc216, #loc217]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc218, #loc219])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc347)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc348)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc215)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc220)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc220)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc221)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc222)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc222)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc223)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc210)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc210)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc224)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_listen_socket_popen_01_good : !cir.ptr<!cir.func<!void ()>> loc(#loc349)
    cir.call @CWE78_OS_Command_Injection__char_listen_socket_popen_01_good() : () -> () loc(#loc225)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc211)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc211)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc227)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc212)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc212)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc228)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_listen_socket_popen_01_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc350)
    cir.call @CWE78_OS_Command_Injection__char_listen_socket_popen_01_bad() : () -> () loc(#loc229)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc213)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc213)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc231)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc232)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc351)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc351)
    cir.return %17 : !s32i loc(#loc351)
  } loc(#loc346)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc352)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc236)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc354)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc261)
    %2 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc261)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc261)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc241)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc355)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc243)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc244)
    %6 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc236)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc236)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc243)
    cir.scope {
      %9 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc357)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc249)
      %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc250)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc250)
      %13 = cir.call @popen(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc251)
      cir.store %13, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc358)
      cir.scope {
        %14 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc256)
        %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc257)
        %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc257)
        %17 = cir.cmp(ne, %14, %16) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc360)
        cir.if %17 {
          %18 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc259)
          %19 = cir.call @pclose(%18) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc260)
        } loc(#loc361)
      } loc(#loc359)
    } loc(#loc356)
    cir.return loc(#loc238)
  } loc(#loc353)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":162:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":162:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":62:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":62:26)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/sys/socket.h":102:1)
#loc8 = loc("/usr/include/sys/socket.h":102:62)
#loc9 = loc("/usr/include/netinet/in.h":404:1)
#loc10 = loc("/usr/include/netinet/in.h":405:40)
#loc11 = loc("/usr/include/sys/socket.h":112:1)
#loc12 = loc("/usr/include/sys/socket.h":113:6)
#loc13 = loc("/usr/include/sys/socket.h":296:1)
#loc14 = loc("/usr/include/sys/socket.h":296:39)
#loc15 = loc("/usr/include/sys/socket.h":306:1)
#loc16 = loc("/usr/include/sys/socket.h":307:38)
#loc17 = loc("/usr/include/sys/socket.h":145:1)
#loc18 = loc("/usr/include/sys/socket.h":145:68)
#loc19 = loc("/usr/include/string.h":246:1)
#loc20 = loc("/usr/include/string.h":247:33)
#loc21 = loc("/usr/include/unistd.h":358:1)
#loc22 = loc("/usr/include/unistd.h":358:27)
#loc23 = loc("/usr/include/stdio.h":893:1)
#loc24 = loc("/usr/include/stdio.h":894:3)
#loc25 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":146:28)
#loc26 = loc("/usr/include/stdio.h":887:1)
#loc27 = loc("/usr/include/stdio.h":887:36)
#loc28 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":59:1)
#loc29 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":152:1)
#loc30 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":61:5)
#loc31 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":61:12)
#loc32 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":63:12)
#loc33 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":63:5)
#loc34 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":64:5)
#loc35 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":142:5)
#loc36 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":69:9)
#loc37 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":69:13)
#loc38 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":70:9)
#loc39 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":70:28)
#loc40 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":71:9)
#loc41 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":71:15)
#loc42 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":72:9)
#loc43 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":72:31)
#loc44 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":73:9)
#loc45 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":73:31)
#loc46 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":74:9)
#loc47 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":74:37)
#loc48 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":74:26)
#loc49 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":74:33)
#loc50 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":75:9)
#loc51 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":127:17)
#loc52 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":85:35)
#loc53 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":85:44)
#loc54 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":85:57)
#loc55 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":85:28)
#loc56 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":85:13)
#loc57 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":85:68)
#loc58 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":86:13)
#loc59 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":89:13)
#loc60 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":86:17)
#loc61 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":86:33)
#loc62 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":87:13)
#loc63 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":88:17)
#loc64 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":90:20)
#loc65 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":90:21)
#loc66 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":90:30)
#loc67 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":90:33)
#loc68 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":90:47)
#loc69 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":90:13)
#loc70 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":90:48)
#loc71 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":91:34)
#loc72 = loc("/usr/include/netinet/in.h":249:5)
#loc73 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":91:13)
#loc74 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":92:39)
#loc75 = loc("/usr/include/netinet/in.h":251:20)
#loc76 = loc("/usr/include/netinet/in.h":33:15)
#loc77 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":92:13)
#loc78 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":93:38)
#loc79 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":93:32)
#loc80 = loc("/usr/include/netinet/in.h":250:15)
#loc81 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":93:13)
#loc82 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":93:46)
#loc83 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":94:13)
#loc84 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":97:13)
#loc85 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":94:22)
#loc86 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":94:54)
#loc87 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":94:55)
#loc88 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":94:64)
#loc89 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":94:78)
#loc90 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":94:17)
#loc91 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":94:84)
#loc92 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":95:13)
#loc93 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":96:17)
#loc94 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":98:13)
#loc95 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":101:13)
#loc96 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":98:24)
#loc97 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":98:38)
#loc98 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":98:17)
#loc99 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":98:57)
#loc100 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":99:13)
#loc101 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":100:17)
#loc102 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":102:35)
#loc103 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":102:49)
#loc104 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":102:55)
#loc105 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":102:28)
#loc106 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":102:13)
#loc107 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":102:59)
#loc108 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":103:13)
#loc109 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":106:13)
#loc110 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":103:17)
#loc111 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":103:33)
#loc112 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":104:13)
#loc113 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":105:17)
#loc114 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":108:31)
#loc115 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":108:54)
#loc116 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":108:61)
#loc117 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":108:59)
#loc118 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":108:45)
#loc119 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":108:68)
#loc120 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":108:71)
#loc121 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":108:82)
#loc122 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":108:87)
#loc123 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":108:93)
#loc124 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":108:103)
#loc125 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":108:104)
#loc126 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":108:107)
#loc127 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":108:26)
#loc128 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":108:13)
#loc129 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":108:108)
#loc130 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":109:13)
#loc131 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":112:13)
#loc132 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":109:17)
#loc133 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":109:31)
#loc134 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":109:44)
#loc135 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":109:47)
#loc136 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":109:61)
#loc137 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":110:13)
#loc138 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":111:17)
#loc139 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":114:57)
#loc140 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":114:13)
#loc141 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":114:18)
#loc142 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":114:28)
#loc143 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":114:41)
#loc144 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":114:52)
#loc145 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":114:53)
#loc146 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":116:23)
#loc147 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":116:30)
#loc148 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":116:36)
#loc149 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":116:13)
#loc150 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":116:40)
#loc151 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":117:13)
#loc152 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":120:13)
#loc153 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":117:17)
#loc154 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":118:13)
#loc155 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":119:28)
#loc156 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":119:18)
#loc157 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":119:17)
#loc158 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":121:23)
#loc159 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":121:30)
#loc160 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":121:36)
#loc161 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":121:13)
#loc162 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":121:40)
#loc163 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":122:13)
#loc164 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":125:13)
#loc165 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":122:17)
#loc166 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":123:13)
#loc167 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":124:28)
#loc168 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":124:18)
#loc169 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":124:17)
#loc170 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":127:16)
#loc171 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":128:9)
#loc172 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":131:9)
#loc173 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":128:13)
#loc174 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":128:29)
#loc175 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":129:9)
#loc176 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":130:26)
#loc177 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":130:13)
#loc178 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":132:9)
#loc179 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":135:9)
#loc180 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":132:13)
#loc181 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":132:29)
#loc182 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":133:9)
#loc183 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":134:26)
#loc184 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":134:13)
#loc185 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":143:5)
#loc186 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":151:5)
#loc187 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":144:9)
#loc188 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":144:15)
#loc189 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":146:22)
#loc190 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":146:16)
#loc191 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":146:9)
#loc192 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":146:31)
#loc193 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":147:9)
#loc194 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":150:9)
#loc195 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":147:13)
#loc196 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":147:21)
#loc197 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":148:9)
#loc198 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":149:20)
#loc199 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":149:13)
#loc200 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":177:1)
#loc201 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":180:1)
#loc202 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":179:5)
#loc203 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":179:13)
#loc204 = loc("/usr/include/stdlib.h":575:1)
#loc205 = loc("/usr/include/stdlib.h":575:41)
#loc206 = loc("/usr/include/time.h":76:1)
#loc207 = loc("/usr/include/time.h":76:38)
#loc208 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc209 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc210 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":197:15)
#loc211 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":199:15)
#loc212 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":202:15)
#loc213 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":204:15)
#loc214 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":192:1)
#loc215 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":207:1)
#loc220 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":193:1)
#loc221 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":195:27)
#loc222 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":195:22)
#loc223 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":195:5)
#loc224 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":197:5)
#loc225 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":198:5)
#loc226 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":198:66)
#loc227 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":199:5)
#loc228 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":202:5)
#loc229 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":203:5)
#loc230 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":203:65)
#loc231 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":204:5)
#loc232 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":206:12)
#loc233 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":206:5)
#loc234 = loc("/usr/include/string.h":149:1)
#loc235 = loc("/usr/include/string.h":150:14)
#loc236 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":165:18)
#loc237 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":159:1)
#loc238 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":175:1)
#loc239 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":161:5)
#loc240 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":161:12)
#loc241 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":163:12)
#loc242 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":163:5)
#loc243 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":165:5)
#loc244 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":165:12)
#loc245 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":166:5)
#loc246 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":174:5)
#loc247 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":167:9)
#loc248 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":167:15)
#loc249 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":169:22)
#loc250 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":169:28)
#loc251 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":169:16)
#loc252 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":169:9)
#loc253 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":169:31)
#loc254 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":170:9)
#loc255 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":173:9)
#loc256 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":170:13)
#loc257 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":170:21)
#loc258 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":171:9)
#loc259 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":172:20)
#loc260 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_01.c":172:13)
#loc261 = loc(fused[#loc1, #loc2])
#loc262 = loc(fused[#loc3, #loc4])
#loc263 = loc(fused[#loc5, #loc6])
#loc264 = loc(fused[#loc7, #loc8])
#loc265 = loc(fused[#loc9, #loc10])
#loc266 = loc(fused[#loc11, #loc12])
#loc267 = loc(fused[#loc13, #loc14])
#loc268 = loc(fused[#loc15, #loc16])
#loc269 = loc(fused[#loc17, #loc18])
#loc270 = loc(fused[#loc19, #loc20])
#loc271 = loc(fused[#loc21, #loc22])
#loc272 = loc(fused[#loc23, #loc24])
#loc273 = loc(fused[#loc26, #loc27])
#loc274 = loc(fused[#loc28, #loc29])
#loc275 = loc(fused[#loc30, #loc31])
#loc276 = loc(fused[#loc33, #loc32])
#loc277 = loc(fused[#loc34, #loc35])
#loc278 = loc(fused[#loc36, #loc37])
#loc279 = loc(fused[#loc38, #loc39])
#loc280 = loc(fused[#loc40, #loc41])
#loc281 = loc(fused[#loc42, #loc43])
#loc282 = loc(fused[#loc44, #loc45])
#loc283 = loc(fused[#loc46, #loc47])
#loc284 = loc(fused[#loc50, #loc51])
#loc285 = loc(fused[#loc56, #loc57])
#loc286 = loc(fused[#loc58, #loc59])
#loc287 = loc(fused[#loc60, #loc61])
#loc288 = loc(fused[#loc62, #loc59])
#loc289 = loc(fused[#loc64, #loc65])
#loc290 = loc(fused[#loc67, #loc68])
#loc291 = loc(fused[#loc69, #loc70])
#loc292 = loc(fused[#loc73, #loc71])
#loc293 = loc(fused[#loc77, #loc74])
#loc294 = loc(fused[#loc81, #loc82])
#loc295 = loc(fused[#loc83, #loc84])
#loc296 = loc(fused[#loc86, #loc87])
#loc297 = loc(fused[#loc88, #loc89])
#loc298 = loc(fused[#loc90, #loc91])
#loc299 = loc(fused[#loc92, #loc84])
#loc300 = loc(fused[#loc94, #loc95])
#loc301 = loc(fused[#loc98, #loc99])
#loc302 = loc(fused[#loc100, #loc95])
#loc303 = loc(fused[#loc106, #loc107])
#loc304 = loc(fused[#loc108, #loc109])
#loc305 = loc(fused[#loc110, #loc111])
#loc306 = loc(fused[#loc112, #loc109])
#loc307 = loc(fused[#loc118, #loc119])
#loc308 = loc(fused[#loc120, #loc121])
#loc309 = loc(fused[#loc122, #loc123])
#loc310 = loc(fused[#loc122, #loc124])
#loc311 = loc(fused[#loc120, #loc125])
#loc312 = loc(fused[#loc128, #loc129])
#loc313 = loc(fused[#loc130, #loc131])
#loc314 = loc(fused[#loc132, #loc133])
#loc315 = loc(fused[#loc135, #loc136])
#loc316 = loc(fused[#loc137, #loc131])
#loc317 = loc(fused[#loc143, #loc144])
#loc318 = loc(fused[#loc142, #loc144])
#loc319 = loc(fused[#loc141, #loc144])
#loc320 = loc(fused[#loc140, #loc139])
#loc321 = loc(fused[#loc149, #loc150])
#loc322 = loc(fused[#loc151, #loc152])
#loc323 = loc(fused[#loc154, #loc152])
#loc324 = loc(fused[#loc157, #loc155])
#loc325 = loc(fused[#loc161, #loc162])
#loc326 = loc(fused[#loc163, #loc164])
#loc327 = loc(fused[#loc166, #loc164])
#loc328 = loc(fused[#loc169, #loc167])
#loc329 = loc(fused[#loc171, #loc172])
#loc330 = loc(fused[#loc173, #loc174])
#loc331 = loc(fused[#loc175, #loc172])
#loc332 = loc(fused[#loc178, #loc179])
#loc333 = loc(fused[#loc180, #loc181])
#loc334 = loc(fused[#loc182, #loc179])
#loc335 = loc(fused[#loc185, #loc186])
#loc336 = loc(fused[#loc187, #loc188])
#loc337 = loc(fused[#loc191, #loc192])
#loc338 = loc(fused[#loc193, #loc194])
#loc339 = loc(fused[#loc195, #loc196])
#loc340 = loc(fused[#loc197, #loc194])
#loc341 = loc(fused[#loc200, #loc201])
#loc342 = loc(fused[#loc202, #loc203])
#loc343 = loc(fused[#loc204, #loc205])
#loc344 = loc(fused[#loc206, #loc207])
#loc345 = loc(fused[#loc208, #loc209])
#loc346 = loc(fused[#loc214, #loc215])
#loc349 = loc(fused[#loc225, #loc226])
#loc350 = loc(fused[#loc229, #loc230])
#loc351 = loc(fused[#loc233, #loc232])
#loc352 = loc(fused[#loc234, #loc235])
#loc353 = loc(fused[#loc237, #loc238])
#loc354 = loc(fused[#loc239, #loc240])
#loc355 = loc(fused[#loc242, #loc241])
#loc356 = loc(fused[#loc245, #loc246])
#loc357 = loc(fused[#loc247, #loc248])
#loc358 = loc(fused[#loc252, #loc253])
#loc359 = loc(fused[#loc254, #loc255])
#loc360 = loc(fused[#loc256, #loc257])
#loc361 = loc(fused[#loc258, #loc255])
