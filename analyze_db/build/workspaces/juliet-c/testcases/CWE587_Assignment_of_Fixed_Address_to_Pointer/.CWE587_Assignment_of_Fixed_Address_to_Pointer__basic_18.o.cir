!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE587_Assignment_of_Fixed_Address_to_Pointer/CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @printHexCharLine(!s8i) loc(#loc29)
  cir.func no_proto @CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_18_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["charPointer", init] {alignment = 8 : i64} loc(#loc31)
    cir.goto "sink" loc(#loc32)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc9)
    %1 = cir.const #cir.int<4194304> : !s32i loc(#loc6)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc6)
    %3 = cir.cast(int_to_ptr, %2 : !u64i), !cir.ptr<!s8i> loc(#loc6)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc31)
    %4 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc10)
    %5 = cir.load %4 : !cir.ptr<!s8i>, !s8i loc(#loc11)
    cir.call @printHexCharLine(%5) : (!s8i) -> () loc(#loc12)
    cir.return loc(#loc4)
  } loc(#loc30)
  cir.func no_proto @CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_18_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc34)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc15)
    cir.return loc(#loc14)
  } loc(#loc33)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charStack", init] {alignment = 1 : i64} loc(#loc36)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["charPointer", init] {alignment = 8 : i64} loc(#loc37)
    cir.goto "sink" loc(#loc38)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc25)
    %2 = cir.const #cir.int<97> : !s32i loc(#loc20)
    %3 = cir.cast(integral, %2 : !s32i), !s8i loc(#loc20)
    cir.store %3, %0 : !s8i, !cir.ptr<!s8i> loc(#loc36)
    cir.store %0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc37)
    %4 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
    %5 = cir.load %4 : !cir.ptr<!s8i>, !s8i loc(#loc27)
    cir.call @printHexCharLine(%5) : (!s8i) -> () loc(#loc28)
    cir.return loc(#loc18)
  } loc(#loc35)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE587_Assignment_of_Fixed_Address_to_Pointer/CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_18.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":30:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":30:35)
#loc3 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_18.c":20:1)
#loc4 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_18.c":29:1)
#loc5 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_18.c":26:9)
#loc6 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_18.c":26:36)
#loc7 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_18.c":22:5)
#loc8 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_18.c":22:10)
#loc9 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_18.c":23:1)
#loc10 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_18.c":27:27)
#loc11 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_18.c":27:26)
#loc12 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_18.c":27:9)
#loc13 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_18.c":48:1)
#loc14 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_18.c":51:1)
#loc15 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_18.c":50:5)
#loc16 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_18.c":50:11)
#loc17 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_18.c":36:1)
#loc18 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_18.c":46:1)
#loc19 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_18.c":42:9)
#loc20 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_18.c":42:26)
#loc21 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_18.c":43:9)
#loc22 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_18.c":43:30)
#loc23 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_18.c":38:5)
#loc24 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_18.c":38:10)
#loc25 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_18.c":39:1)
#loc26 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_18.c":44:27)
#loc27 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_18.c":44:26)
#loc28 = loc("CWE587_Assignment_of_Fixed_Address_to_Pointer__basic_18.c":44:9)
#loc29 = loc(fused[#loc1, #loc2])
#loc30 = loc(fused[#loc3, #loc4])
#loc31 = loc(fused[#loc5, #loc6])
#loc32 = loc(fused[#loc7, #loc8])
#loc33 = loc(fused[#loc13, #loc14])
#loc34 = loc(fused[#loc15, #loc16])
#loc35 = loc(fused[#loc17, #loc18])
#loc36 = loc(fused[#loc19, #loc20])
#loc37 = loc(fused[#loc21, #loc22])
#loc38 = loc(fused[#loc23, #loc24])
