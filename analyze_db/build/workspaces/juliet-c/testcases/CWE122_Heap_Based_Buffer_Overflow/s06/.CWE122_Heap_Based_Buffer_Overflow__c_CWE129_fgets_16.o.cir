!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":117:27)
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc303)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc304)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc305)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc306)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc307)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc308)
  cir.func private @printIntLine(!s32i) loc(#loc309)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc16)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc310)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc312)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc313)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc314)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc315)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc30)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc316)
    cir.br ^bb1 loc(#loc317)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc317)
  ^bb2:  // 2 preds: ^bb1, ^bb12
    %6 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc34)
    cir.brcond %7 ^bb3, ^bb13 loc(#loc34)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc318)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc319)
  ^bb5:  // pred: ^bb4
    %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc312)
    cir.store %8, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc312)
    cir.br ^bb6 loc(#loc320)
  ^bb6:  // pred: ^bb5
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc40)
    %10 = cir.const #cir.int<3> : !s32i loc(#loc41)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc41)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc41)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc41)
    %14 = cir.const #cir.int<2> : !s32i loc(#loc41)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc41)
    %16 = cir.binop(add, %13, %15) : !u64i loc(#loc41)
    %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc41)
    %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc304)
    %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc42)
    %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc43)
    %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc44)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc44)
    %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc321)
    cir.brcond %23 ^bb7, ^bb8 loc(#loc322)
  ^bb7:  // pred: ^bb6
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc48)
    %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc49)
    cir.store %25, %3 : !s32i, !cir.ptr<!s32i> loc(#loc323)
    cir.br ^bb9 loc(#loc46)
  ^bb8:  // pred: ^bb6
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    cir.br ^bb9 loc(#loc39)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc39)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc37)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc53)
  ^bb12:  // no predecessors
    cir.br ^bb2 loc(#loc33)
  ^bb13:  // 2 preds: ^bb2, ^bb11
    cir.br ^bb14 loc(#loc33)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc324)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc324)
  ^bb16:  // 2 preds: ^bb15, ^bb46
    %28 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc56)
    cir.brcond %29 ^bb17, ^bb47 loc(#loc56)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc325)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc326)
  ^bb19:  // pred: ^bb18
    %30 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc60)
    %31 = cir.const #cir.int<10> : !s32i loc(#loc61)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc61)
    %33 = cir.const #cir.int<4> : !u64i loc(#loc327)
    %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc328)
    %35 = cir.call @malloc(%34) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc60)
    %36 = cir.cast(bitcast, %35 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc329)
    cir.store %36, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc314)
    cir.br ^bb20 loc(#loc330)
  ^bb20:  // pred: ^bb19
    %37 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc66)
    %38 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc67)
    %39 = cir.cast(bitcast, %38 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc67)
    %40 = cir.cmp(eq, %37, %39) : !cir.ptr<!s32i>, !cir.bool loc(#loc331)
    cir.brcond %40 ^bb21, ^bb22 loc(#loc332)
  ^bb21:  // pred: ^bb20
    %41 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc69)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc70)
    %43 = cir.unary(minus, %42) nsw : !s32i, !s32i loc(#loc71)
    cir.call @exit(%43) : (!s32i) -> () extra(#fn_attr) loc(#loc69)
    cir.br ^bb22 loc(#loc65)
  ^bb22:  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc65)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc333)
  ^bb24:  // pred: ^bb23
    %44 = cir.const #cir.int<0> : !s32i loc(#loc74)
    cir.store %44, %1 : !s32i, !cir.ptr<!s32i> loc(#loc334)
    cir.br ^bb25 loc(#loc333)
  ^bb25:  // 2 preds: ^bb24, ^bb29
    %45 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc76)
    %46 = cir.const #cir.int<10> : !s32i loc(#loc77)
    %47 = cir.cmp(lt, %45, %46) : !s32i, !cir.bool loc(#loc335)
    cir.brcond %47 ^bb26, ^bb30 loc(#loc78)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc336)
  ^bb27:  // pred: ^bb26
    %48 = cir.const #cir.int<0> : !s32i loc(#loc80)
    %49 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc81)
    %50 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc82)
    %51 = cir.ptr_stride(%49 : !cir.ptr<!s32i>, %50 : !s32i), !cir.ptr<!s32i> loc(#loc83)
    cir.store %48, %51 : !s32i, !cir.ptr<!s32i> loc(#loc337)
    cir.br ^bb28 loc(#loc73)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc73)
  ^bb29:  // pred: ^bb28
    %52 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    %53 = cir.unary(inc, %52) nsw : !s32i, !s32i loc(#loc85)
    cir.store %53, %1 : !s32i, !cir.ptr<!s32i> loc(#loc338)
    cir.br ^bb25 loc(#loc333)
  ^bb30:  // pred: ^bb25
    cir.br ^bb31 loc(#loc73)
  ^bb31:  // pred: ^bb30
    cir.br ^bb32 loc(#loc339)
  ^bb32:  // pred: ^bb31
    %54 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    %55 = cir.const #cir.int<0> : !s32i loc(#loc89)
    %56 = cir.cmp(ge, %54, %55) : !s32i, !cir.bool loc(#loc340)
    cir.brcond %56 ^bb33, ^bb42 loc(#loc341)
  ^bb33:  // pred: ^bb32
    %57 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %58 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc94)
    %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc95)
    %60 = cir.ptr_stride(%58 : !cir.ptr<!s32i>, %59 : !s32i), !cir.ptr<!s32i> loc(#loc96)
    cir.store %57, %60 : !s32i, !cir.ptr<!s32i> loc(#loc342)
    cir.br ^bb34 loc(#loc343)
  ^bb34:  // pred: ^bb33
    %61 = cir.const #cir.int<0> : !s32i loc(#loc99)
    cir.store %61, %1 : !s32i, !cir.ptr<!s32i> loc(#loc344)
    cir.br ^bb35 loc(#loc343)
  ^bb35:  // 2 preds: ^bb34, ^bb39
    %62 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    %63 = cir.const #cir.int<10> : !s32i loc(#loc102)
    %64 = cir.cmp(lt, %62, %63) : !s32i, !cir.bool loc(#loc345)
    cir.brcond %64 ^bb36, ^bb40 loc(#loc103)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc346)
  ^bb37:  // pred: ^bb36
    %65 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc105)
    %66 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %67 = cir.ptr_stride(%65 : !cir.ptr<!s32i>, %66 : !s32i), !cir.ptr<!s32i> loc(#loc107)
    %68 = cir.load %67 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    cir.call @printIntLine(%68) : (!s32i) -> () loc(#loc108)
    cir.br ^bb38 loc(#loc98)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc98)
  ^bb39:  // pred: ^bb38
    %69 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %70 = cir.unary(inc, %69) nsw : !s32i, !s32i loc(#loc110)
    cir.store %70, %1 : !s32i, !cir.ptr<!s32i> loc(#loc347)
    cir.br ^bb35 loc(#loc343)
  ^bb40:  // pred: ^bb35
    cir.br ^bb41 loc(#loc98)
  ^bb41:  // pred: ^bb40
    cir.br ^bb43 loc(#loc91)
  ^bb42:  // pred: ^bb32
    %71 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc16)
    %72 = cir.cast(array_to_ptrdecay, %71 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc16)
    cir.call @printLine(%72) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    cir.br ^bb43 loc(#loc87)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc87)
  ^bb44:  // pred: ^bb43
    %73 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc112)
    %74 = cir.cast(bitcast, %73 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc112)
    cir.call @free(%74) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc113)
    cir.br ^bb45 loc(#loc59)
  ^bb45:  // pred: ^bb44
    cir.br ^bb47 loc(#loc114)
  ^bb46:  // no predecessors
    cir.br ^bb16 loc(#loc55)
  ^bb47:  // 2 preds: ^bb16, ^bb45
    cir.br ^bb48 loc(#loc55)
  ^bb48:  // pred: ^bb47
    cir.return loc(#loc20)
  } loc(#loc311)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc349)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc117)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc350)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc119)
    cir.return loc(#loc116)
  } loc(#loc348)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc121)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc352)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc353)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc354)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc355)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc133)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc356)
    cir.br ^bb1 loc(#loc357)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc357)
  ^bb2:  // 2 preds: ^bb1, ^bb12
    %6 = cir.const #cir.int<1> : !s32i loc(#loc137)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc137)
    cir.brcond %7 ^bb3, ^bb13 loc(#loc137)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc358)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc359)
  ^bb5:  // pred: ^bb4
    %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc352)
    cir.store %8, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc352)
    cir.br ^bb6 loc(#loc360)
  ^bb6:  // pred: ^bb5
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc143)
    %10 = cir.const #cir.int<3> : !s32i loc(#loc144)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc144)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc144)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc144)
    %14 = cir.const #cir.int<2> : !s32i loc(#loc144)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc144)
    %16 = cir.binop(add, %13, %15) : !u64i loc(#loc144)
    %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc144)
    %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc304)
    %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc145)
    %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc146)
    %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc147)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc147)
    %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc361)
    cir.brcond %23 ^bb7, ^bb8 loc(#loc362)
  ^bb7:  // pred: ^bb6
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc151)
    %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc152)
    cir.store %25, %3 : !s32i, !cir.ptr<!s32i> loc(#loc363)
    cir.br ^bb9 loc(#loc149)
  ^bb8:  // pred: ^bb6
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc155)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc155)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc156)
    cir.br ^bb9 loc(#loc142)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc142)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc140)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc157)
  ^bb12:  // no predecessors
    cir.br ^bb2 loc(#loc136)
  ^bb13:  // 2 preds: ^bb2, ^bb11
    cir.br ^bb14 loc(#loc136)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc364)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc364)
  ^bb16:  // 2 preds: ^bb15, ^bb54
    %28 = cir.const #cir.int<1> : !s32i loc(#loc160)
    %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc160)
    cir.brcond %29 ^bb17, ^bb55 loc(#loc160)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc365)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc366)
  ^bb19:  // pred: ^bb18
    %30 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc164)
    %31 = cir.const #cir.int<10> : !s32i loc(#loc165)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc165)
    %33 = cir.const #cir.int<4> : !u64i loc(#loc367)
    %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc368)
    %35 = cir.call @malloc(%34) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc164)
    %36 = cir.cast(bitcast, %35 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc369)
    cir.store %36, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc354)
    cir.br ^bb20 loc(#loc370)
  ^bb20:  // pred: ^bb19
    %37 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc170)
    %38 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc171)
    %39 = cir.cast(bitcast, %38 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc171)
    %40 = cir.cmp(eq, %37, %39) : !cir.ptr<!s32i>, !cir.bool loc(#loc371)
    cir.brcond %40 ^bb21, ^bb22 loc(#loc372)
  ^bb21:  // pred: ^bb20
    %41 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc173)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc174)
    %43 = cir.unary(minus, %42) nsw : !s32i, !s32i loc(#loc175)
    cir.call @exit(%43) : (!s32i) -> () extra(#fn_attr) loc(#loc173)
    cir.br ^bb22 loc(#loc169)
  ^bb22:  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc169)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc373)
  ^bb24:  // pred: ^bb23
    %44 = cir.const #cir.int<0> : !s32i loc(#loc178)
    cir.store %44, %1 : !s32i, !cir.ptr<!s32i> loc(#loc374)
    cir.br ^bb25 loc(#loc373)
  ^bb25:  // 2 preds: ^bb24, ^bb29
    %45 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc180)
    %46 = cir.const #cir.int<10> : !s32i loc(#loc181)
    %47 = cir.cmp(lt, %45, %46) : !s32i, !cir.bool loc(#loc375)
    cir.brcond %47 ^bb26, ^bb30 loc(#loc182)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc376)
  ^bb27:  // pred: ^bb26
    %48 = cir.const #cir.int<0> : !s32i loc(#loc184)
    %49 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc185)
    %50 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc186)
    %51 = cir.ptr_stride(%49 : !cir.ptr<!s32i>, %50 : !s32i), !cir.ptr<!s32i> loc(#loc187)
    cir.store %48, %51 : !s32i, !cir.ptr<!s32i> loc(#loc377)
    cir.br ^bb28 loc(#loc177)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc177)
  ^bb29:  // pred: ^bb28
    %52 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc188)
    %53 = cir.unary(inc, %52) nsw : !s32i, !s32i loc(#loc189)
    cir.store %53, %1 : !s32i, !cir.ptr<!s32i> loc(#loc378)
    cir.br ^bb25 loc(#loc373)
  ^bb30:  // pred: ^bb25
    cir.br ^bb31 loc(#loc177)
  ^bb31:  // pred: ^bb30
    cir.br ^bb32 loc(#loc379)
  ^bb32:  // pred: ^bb31
    %54 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc192)
    %55 = cir.const #cir.int<0> : !s32i loc(#loc193)
    %56 = cir.cmp(ge, %54, %55) : !s32i, !cir.bool loc(#loc380)
    cir.brcond %56 ^bb33, ^bb38 loc(#loc194)
  ^bb33:  // pred: ^bb32
    %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc195)
    %58 = cir.const #cir.int<10> : !s32i loc(#loc196)
    %59 = cir.cmp(lt, %57, %58) : !s32i, !cir.bool loc(#loc381)
    cir.brcond %59 ^bb34, ^bb35 loc(#loc194)
  ^bb34:  // pred: ^bb33
    %60 = cir.const #true loc(#loc194)
    cir.br ^bb36(%60 : !cir.bool) loc(#loc194)
  ^bb35:  // pred: ^bb33
    %61 = cir.const #false loc(#loc194)
    cir.br ^bb36(%61 : !cir.bool) loc(#loc194)
  ^bb36(%62: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":117:27)):  // 2 preds: ^bb34, ^bb35
    cir.br ^bb37 loc(#loc194)
  ^bb37:  // pred: ^bb36
    cir.br ^bb39(%62 : !cir.bool) loc(#loc194)
  ^bb38:  // pred: ^bb32
    %63 = cir.const #false loc(#loc194)
    cir.br ^bb39(%63 : !cir.bool) loc(#loc194)
  ^bb39(%64: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":117:27)):  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc194)
  ^bb40:  // pred: ^bb39
    cir.brcond %64 ^bb41, ^bb50 loc(#loc382)
  ^bb41:  // pred: ^bb40
    %65 = cir.const #cir.int<1> : !s32i loc(#loc201)
    %66 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc202)
    %67 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc203)
    %68 = cir.ptr_stride(%66 : !cir.ptr<!s32i>, %67 : !s32i), !cir.ptr<!s32i> loc(#loc204)
    cir.store %65, %68 : !s32i, !cir.ptr<!s32i> loc(#loc383)
    cir.br ^bb42 loc(#loc384)
  ^bb42:  // pred: ^bb41
    %69 = cir.const #cir.int<0> : !s32i loc(#loc207)
    cir.store %69, %1 : !s32i, !cir.ptr<!s32i> loc(#loc385)
    cir.br ^bb43 loc(#loc384)
  ^bb43:  // 2 preds: ^bb42, ^bb47
    %70 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc209)
    %71 = cir.const #cir.int<10> : !s32i loc(#loc210)
    %72 = cir.cmp(lt, %70, %71) : !s32i, !cir.bool loc(#loc386)
    cir.brcond %72 ^bb44, ^bb48 loc(#loc211)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc387)
  ^bb45:  // pred: ^bb44
    %73 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc213)
    %74 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc214)
    %75 = cir.ptr_stride(%73 : !cir.ptr<!s32i>, %74 : !s32i), !cir.ptr<!s32i> loc(#loc215)
    %76 = cir.load %75 : !cir.ptr<!s32i>, !s32i loc(#loc213)
    cir.call @printIntLine(%76) : (!s32i) -> () loc(#loc216)
    cir.br ^bb46 loc(#loc206)
  ^bb46:  // pred: ^bb45
    cir.br ^bb47 loc(#loc206)
  ^bb47:  // pred: ^bb46
    %77 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc217)
    %78 = cir.unary(inc, %77) nsw : !s32i, !s32i loc(#loc218)
    cir.store %78, %1 : !s32i, !cir.ptr<!s32i> loc(#loc388)
    cir.br ^bb43 loc(#loc384)
  ^bb48:  // pred: ^bb43
    cir.br ^bb49 loc(#loc206)
  ^bb49:  // pred: ^bb48
    cir.br ^bb51 loc(#loc199)
  ^bb50:  // pred: ^bb40
    %79 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc121)
    %80 = cir.cast(array_to_ptrdecay, %79 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc121)
    cir.call @printLine(%80) : (!cir.ptr<!s8i>) -> () loc(#loc219)
    cir.br ^bb51 loc(#loc191)
  ^bb51:  // 2 preds: ^bb49, ^bb50
    cir.br ^bb52 loc(#loc191)
  ^bb52:  // pred: ^bb51
    %81 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc220)
    %82 = cir.cast(bitcast, %81 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc220)
    cir.call @free(%82) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc221)
    cir.br ^bb53 loc(#loc163)
  ^bb53:  // pred: ^bb52
    cir.br ^bb55 loc(#loc222)
  ^bb54:  // no predecessors
    cir.br ^bb16 loc(#loc159)
  ^bb55:  // 2 preds: ^bb16, ^bb53
    cir.br ^bb56 loc(#loc159)
  ^bb56:  // pred: ^bb55
    cir.return loc(#loc123)
  } loc(#loc351)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc390)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc391)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc392)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc231)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc232)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc393)
    cir.br ^bb1 loc(#loc394)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc394)
  ^bb2:  // 2 preds: ^bb1, ^bb5
    %5 = cir.const #cir.int<1> : !s32i loc(#loc236)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc236)
    cir.brcond %6 ^bb3, ^bb6 loc(#loc236)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc395)
  ^bb4:  // pred: ^bb3
    %7 = cir.const #cir.int<7> : !s32i loc(#loc238)
    cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc396)
    cir.br ^bb6 loc(#loc240)
  ^bb5:  // no predecessors
    cir.br ^bb2 loc(#loc235)
  ^bb6:  // 2 preds: ^bb2, ^bb4
    cir.br ^bb7 loc(#loc235)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc397)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc397)
  ^bb9:  // 2 preds: ^bb8, ^bb39
    %8 = cir.const #cir.int<1> : !s32i loc(#loc243)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc243)
    cir.brcond %9 ^bb10, ^bb40 loc(#loc243)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc398)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc399)
  ^bb12:  // pred: ^bb11
    %10 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc247)
    %11 = cir.const #cir.int<10> : !s32i loc(#loc248)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc248)
    %13 = cir.const #cir.int<4> : !u64i loc(#loc400)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc401)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc247)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc402)
    cir.store %16, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc391)
    cir.br ^bb13 loc(#loc403)
  ^bb13:  // pred: ^bb12
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc253)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc254)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc254)
    %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s32i>, !cir.bool loc(#loc404)
    cir.brcond %20 ^bb14, ^bb15 loc(#loc405)
  ^bb14:  // pred: ^bb13
    %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc256)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc257)
    %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc258)
    cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc256)
    cir.br ^bb15 loc(#loc252)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc252)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc406)
  ^bb17:  // pred: ^bb16
    %24 = cir.const #cir.int<0> : !s32i loc(#loc261)
    cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc407)
    cir.br ^bb18 loc(#loc406)
  ^bb18:  // 2 preds: ^bb17, ^bb22
    %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc263)
    %26 = cir.const #cir.int<10> : !s32i loc(#loc264)
    %27 = cir.cmp(lt, %25, %26) : !s32i, !cir.bool loc(#loc408)
    cir.brcond %27 ^bb19, ^bb23 loc(#loc265)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc409)
  ^bb20:  // pred: ^bb19
    %28 = cir.const #cir.int<0> : !s32i loc(#loc267)
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc268)
    %30 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc269)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %30 : !s32i), !cir.ptr<!s32i> loc(#loc270)
    cir.store %28, %31 : !s32i, !cir.ptr<!s32i> loc(#loc410)
    cir.br ^bb21 loc(#loc260)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc260)
  ^bb22:  // pred: ^bb21
    %32 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc271)
    %33 = cir.unary(inc, %32) nsw : !s32i, !s32i loc(#loc272)
    cir.store %33, %0 : !s32i, !cir.ptr<!s32i> loc(#loc411)
    cir.br ^bb18 loc(#loc406)
  ^bb23:  // pred: ^bb18
    cir.br ^bb24 loc(#loc260)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc412)
  ^bb25:  // pred: ^bb24
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc275)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc276)
    %36 = cir.cmp(ge, %34, %35) : !s32i, !cir.bool loc(#loc413)
    cir.brcond %36 ^bb26, ^bb35 loc(#loc414)
  ^bb26:  // pred: ^bb25
    %37 = cir.const #cir.int<1> : !s32i loc(#loc280)
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc281)
    %39 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc282)
    %40 = cir.ptr_stride(%38 : !cir.ptr<!s32i>, %39 : !s32i), !cir.ptr<!s32i> loc(#loc283)
    cir.store %37, %40 : !s32i, !cir.ptr<!s32i> loc(#loc415)
    cir.br ^bb27 loc(#loc416)
  ^bb27:  // pred: ^bb26
    %41 = cir.const #cir.int<0> : !s32i loc(#loc286)
    cir.store %41, %0 : !s32i, !cir.ptr<!s32i> loc(#loc417)
    cir.br ^bb28 loc(#loc416)
  ^bb28:  // 2 preds: ^bb27, ^bb32
    %42 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc288)
    %43 = cir.const #cir.int<10> : !s32i loc(#loc289)
    %44 = cir.cmp(lt, %42, %43) : !s32i, !cir.bool loc(#loc418)
    cir.brcond %44 ^bb29, ^bb33 loc(#loc290)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc419)
  ^bb30:  // pred: ^bb29
    %45 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc292)
    %46 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc293)
    %47 = cir.ptr_stride(%45 : !cir.ptr<!s32i>, %46 : !s32i), !cir.ptr<!s32i> loc(#loc294)
    %48 = cir.load %47 : !cir.ptr<!s32i>, !s32i loc(#loc292)
    cir.call @printIntLine(%48) : (!s32i) -> () loc(#loc295)
    cir.br ^bb31 loc(#loc285)
  ^bb31:  // pred: ^bb30
    cir.br ^bb32 loc(#loc285)
  ^bb32:  // pred: ^bb31
    %49 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc296)
    %50 = cir.unary(inc, %49) nsw : !s32i, !s32i loc(#loc297)
    cir.store %50, %0 : !s32i, !cir.ptr<!s32i> loc(#loc420)
    cir.br ^bb28 loc(#loc416)
  ^bb33:  // pred: ^bb28
    cir.br ^bb34 loc(#loc285)
  ^bb34:  // pred: ^bb33
    cir.br ^bb36 loc(#loc278)
  ^bb35:  // pred: ^bb25
    %51 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc298)
    %52 = cir.cast(array_to_ptrdecay, %51 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc298)
    cir.call @printLine(%52) : (!cir.ptr<!s8i>) -> () loc(#loc299)
    cir.br ^bb36 loc(#loc274)
  ^bb36:  // 2 preds: ^bb34, ^bb35
    cir.br ^bb37 loc(#loc274)
  ^bb37:  // pred: ^bb36
    %53 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc300)
    %54 = cir.cast(bitcast, %53 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc300)
    cir.call @free(%54) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc301)
    cir.br ^bb38 loc(#loc246)
  ^bb38:  // pred: ^bb37
    cir.br ^bb40 loc(#loc302)
  ^bb39:  // no predecessors
    cir.br ^bb9 loc(#loc242)
  ^bb40:  // 2 preds: ^bb9, ^bb38
    cir.br ^bb41 loc(#loc242)
  ^bb41:  // pred: ^bb40
    cir.return loc(#loc224)
  } loc(#loc389)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":41:27)
#loc10 = loc("/usr/include/stdlib.h":672:1)
#loc11 = loc("/usr/include/stdlib.h":672:45)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":70:27)
#loc17 = loc("/usr/include/stdlib.h":687:1)
#loc18 = loc("/usr/include/stdlib.h":687:32)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":24:1)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":76:1)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":32:13)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":32:49)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":49:13)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":49:17)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":50:13)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":50:58)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":26:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":26:9)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":28:13)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":28:12)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":28:5)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":29:5)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":45:5)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":29:11)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":30:5)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":31:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":43:9)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":34:13)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":42:13)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":34:23)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":34:36)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":34:53)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":34:17)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":34:63)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":35:13)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":38:13)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":40:13)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":37:29)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":37:24)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":37:17)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":37:40)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":41:17)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":44:9)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":46:5)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":75:5)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":46:11)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":47:5)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":48:9)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":73:9)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":50:35)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":50:42)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":50:47)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":50:57)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":51:13)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":51:43)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":51:17)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":51:27)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":51:33)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":51:34)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":51:40)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":51:39)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":53:13)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":56:13)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":53:22)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":53:18)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":53:25)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":53:29)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":53:27)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":54:13)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":55:29)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":55:17)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":55:24)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":55:25)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":53:34)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":53:33)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":59:13)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":71:13)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":59:17)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":59:25)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":60:13)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":67:13)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":69:13)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":61:32)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":61:17)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":61:24)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":61:28)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":63:17)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":66:17)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":63:25)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":63:21)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":63:28)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":63:32)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":63:30)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":64:17)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":65:34)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":65:41)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":65:42)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":65:21)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":63:37)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":63:36)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":70:17)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":72:18)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":72:13)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":74:9)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":181:1)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":185:1)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":183:5)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":183:13)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":184:5)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":184:13)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":128:27)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":83:1)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":134:1)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":91:13)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":91:49)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":108:13)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":108:17)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":109:13)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":109:58)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":85:5)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":85:9)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":87:13)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":87:12)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":87:5)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":88:5)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":104:5)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":88:11)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":89:5)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":90:9)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":102:9)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":93:13)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":101:13)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":93:23)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":93:36)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":93:53)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":93:17)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":93:63)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":94:13)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":97:13)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":99:13)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":96:29)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":96:24)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":96:17)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":96:40)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":100:27)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":100:17)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":103:9)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":105:5)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":133:5)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":105:11)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":106:5)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":107:9)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":131:9)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":109:35)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":109:42)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":109:47)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":109:57)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":110:13)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":110:43)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":110:17)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":110:27)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":110:33)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":110:34)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":110:40)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":110:39)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":112:13)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":115:13)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":112:22)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":112:18)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":112:25)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":112:29)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":112:27)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":113:13)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":114:29)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":114:17)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":114:24)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":114:25)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":112:34)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":112:33)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":117:13)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":129:13)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":117:17)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":117:25)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":117:30)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":117:38)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":117:40)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":118:13)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":125:13)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":127:13)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":119:32)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":119:17)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":119:24)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":119:28)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":121:17)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":124:17)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":121:25)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":121:21)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":121:28)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":121:32)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":121:30)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":122:17)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":123:34)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":123:41)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":123:42)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":123:21)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":121:37)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":121:36)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":128:17)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":130:18)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":130:13)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":132:9)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":137:1)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":179:1)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":152:13)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":152:17)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":153:13)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":153:58)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":139:5)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":139:9)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":141:13)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":141:12)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":141:5)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":142:5)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":148:5)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":142:11)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":143:5)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":146:16)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":146:9)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":147:9)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":149:5)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":178:5)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":149:11)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":150:5)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":151:9)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":176:9)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":153:35)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":153:42)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":153:47)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":153:57)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":154:13)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":154:43)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":154:17)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":154:27)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":154:33)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":154:34)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":154:40)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":154:39)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":156:13)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":159:13)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":156:22)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":156:18)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":156:25)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":156:29)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":156:27)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":157:13)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":158:29)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":158:17)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":158:24)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":158:25)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":156:34)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":156:33)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":162:13)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":174:13)
#loc275 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":162:17)
#loc276 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":162:25)
#loc277 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":163:13)
#loc278 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":170:13)
#loc279 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":172:13)
#loc280 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":164:32)
#loc281 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":164:17)
#loc282 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":164:24)
#loc283 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":164:28)
#loc284 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":166:17)
#loc285 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":169:17)
#loc286 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":166:25)
#loc287 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":166:21)
#loc288 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":166:28)
#loc289 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":166:32)
#loc290 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":166:30)
#loc291 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":167:17)
#loc292 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":168:34)
#loc293 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":168:41)
#loc294 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":168:42)
#loc295 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":168:21)
#loc296 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":166:37)
#loc297 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":166:36)
#loc298 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":173:27)
#loc299 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":173:17)
#loc300 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":175:18)
#loc301 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":175:13)
#loc302 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_fgets_16.c":177:9)
#loc303 = loc(fused[#loc1, #loc2])
#loc304 = loc(fused[#loc3, #loc4])
#loc305 = loc(fused[#loc5, #loc6])
#loc306 = loc(fused[#loc7, #loc8])
#loc307 = loc(fused[#loc10, #loc11])
#loc308 = loc(fused[#loc12, #loc13])
#loc309 = loc(fused[#loc14, #loc15])
#loc310 = loc(fused[#loc17, #loc18])
#loc311 = loc(fused[#loc19, #loc20])
#loc312 = loc(fused[#loc21, #loc22])
#loc313 = loc(fused[#loc23, #loc24])
#loc314 = loc(fused[#loc25, #loc26])
#loc315 = loc(fused[#loc27, #loc28])
#loc316 = loc(fused[#loc31, #loc29])
#loc317 = loc(fused[#loc32, #loc33])
#loc318 = loc(fused[#loc35, #loc33])
#loc319 = loc(fused[#loc36, #loc37])
#loc320 = loc(fused[#loc38, #loc39])
#loc321 = loc(fused[#loc43, #loc44])
#loc322 = loc(fused[#loc45, #loc46, #loc47, #loc39])
#loc323 = loc(fused[#loc50, #loc51])
#loc324 = loc(fused[#loc54, #loc55])
#loc325 = loc(fused[#loc57, #loc55])
#loc326 = loc(fused[#loc58, #loc59])
#loc327 = loc(fused[#loc62, #loc63])
#loc328 = loc(fused[#loc61, #loc63])
#loc329 = loc(fused[#loc60, #loc26])
#loc330 = loc(fused[#loc64, #loc65])
#loc331 = loc(fused[#loc66, #loc67])
#loc332 = loc(fused[#loc68, #loc65])
#loc333 = loc(fused[#loc72, #loc73])
#loc334 = loc(fused[#loc75, #loc74])
#loc335 = loc(fused[#loc76, #loc77])
#loc336 = loc(fused[#loc79, #loc73])
#loc337 = loc(fused[#loc81, #loc80])
#loc338 = loc(fused[#loc85, #loc84])
#loc339 = loc(fused[#loc86, #loc87])
#loc340 = loc(fused[#loc88, #loc89])
#loc341 = loc(fused[#loc90, #loc91, #loc92, #loc87])
#loc342 = loc(fused[#loc94, #loc93])
#loc343 = loc(fused[#loc97, #loc98])
#loc344 = loc(fused[#loc100, #loc99])
#loc345 = loc(fused[#loc101, #loc102])
#loc346 = loc(fused[#loc104, #loc98])
#loc347 = loc(fused[#loc110, #loc109])
#loc348 = loc(fused[#loc115, #loc116])
#loc349 = loc(fused[#loc117, #loc118])
#loc350 = loc(fused[#loc119, #loc120])
#loc351 = loc(fused[#loc122, #loc123])
#loc352 = loc(fused[#loc124, #loc125])
#loc353 = loc(fused[#loc126, #loc127])
#loc354 = loc(fused[#loc128, #loc129])
#loc355 = loc(fused[#loc130, #loc131])
#loc356 = loc(fused[#loc134, #loc132])
#loc357 = loc(fused[#loc135, #loc136])
#loc358 = loc(fused[#loc138, #loc136])
#loc359 = loc(fused[#loc139, #loc140])
#loc360 = loc(fused[#loc141, #loc142])
#loc361 = loc(fused[#loc146, #loc147])
#loc362 = loc(fused[#loc148, #loc149, #loc150, #loc142])
#loc363 = loc(fused[#loc153, #loc154])
#loc364 = loc(fused[#loc158, #loc159])
#loc365 = loc(fused[#loc161, #loc159])
#loc366 = loc(fused[#loc162, #loc163])
#loc367 = loc(fused[#loc166, #loc167])
#loc368 = loc(fused[#loc165, #loc167])
#loc369 = loc(fused[#loc164, #loc129])
#loc370 = loc(fused[#loc168, #loc169])
#loc371 = loc(fused[#loc170, #loc171])
#loc372 = loc(fused[#loc172, #loc169])
#loc373 = loc(fused[#loc176, #loc177])
#loc374 = loc(fused[#loc179, #loc178])
#loc375 = loc(fused[#loc180, #loc181])
#loc376 = loc(fused[#loc183, #loc177])
#loc377 = loc(fused[#loc185, #loc184])
#loc378 = loc(fused[#loc189, #loc188])
#loc379 = loc(fused[#loc190, #loc191])
#loc380 = loc(fused[#loc192, #loc193])
#loc381 = loc(fused[#loc195, #loc197])
#loc382 = loc(fused[#loc198, #loc199, #loc200, #loc191])
#loc383 = loc(fused[#loc202, #loc201])
#loc384 = loc(fused[#loc205, #loc206])
#loc385 = loc(fused[#loc208, #loc207])
#loc386 = loc(fused[#loc209, #loc210])
#loc387 = loc(fused[#loc212, #loc206])
#loc388 = loc(fused[#loc218, #loc217])
#loc389 = loc(fused[#loc223, #loc224])
#loc390 = loc(fused[#loc225, #loc226])
#loc391 = loc(fused[#loc227, #loc228])
#loc392 = loc(fused[#loc229, #loc230])
#loc393 = loc(fused[#loc233, #loc231])
#loc394 = loc(fused[#loc234, #loc235])
#loc395 = loc(fused[#loc237, #loc235])
#loc396 = loc(fused[#loc239, #loc238])
#loc397 = loc(fused[#loc241, #loc242])
#loc398 = loc(fused[#loc244, #loc242])
#loc399 = loc(fused[#loc245, #loc246])
#loc400 = loc(fused[#loc249, #loc250])
#loc401 = loc(fused[#loc248, #loc250])
#loc402 = loc(fused[#loc247, #loc228])
#loc403 = loc(fused[#loc251, #loc252])
#loc404 = loc(fused[#loc253, #loc254])
#loc405 = loc(fused[#loc255, #loc252])
#loc406 = loc(fused[#loc259, #loc260])
#loc407 = loc(fused[#loc262, #loc261])
#loc408 = loc(fused[#loc263, #loc264])
#loc409 = loc(fused[#loc266, #loc260])
#loc410 = loc(fused[#loc268, #loc267])
#loc411 = loc(fused[#loc272, #loc271])
#loc412 = loc(fused[#loc273, #loc274])
#loc413 = loc(fused[#loc275, #loc276])
#loc414 = loc(fused[#loc277, #loc278, #loc279, #loc274])
#loc415 = loc(fused[#loc281, #loc280])
#loc416 = loc(fused[#loc284, #loc285])
#loc417 = loc(fused[#loc287, #loc286])
#loc418 = loc(fused[#loc288, #loc289])
#loc419 = loc(fused[#loc291, #loc285])
#loc420 = loc(fused[#loc297, #loc296])
