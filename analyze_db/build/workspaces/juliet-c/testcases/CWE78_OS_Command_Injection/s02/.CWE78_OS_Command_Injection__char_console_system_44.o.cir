!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc12 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":36:21)
#loc13 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":36:28)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":65:33)
#loc99 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":87:25)
#loc100 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":87:32)
#true = #cir.bool<true> : !cir.bool
#loc132 = loc(fused[#loc12, #loc13])
#loc166 = loc(fused[#loc99, #loc100])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_system_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc127)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_console_system_44_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc128)
  cir.func private @system(!cir.ptr<!s8i>) -> !s32i loc(#loc129)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc7)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc130)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc12, #loc13])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc132)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc14)
    cir.br ^bb1 loc(#loc133)
  ^bb1:  // pred: ^bb0
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
    %2 = cir.call @system(%1) : (!cir.ptr<!s8i>) -> !s32i loc(#loc18)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc134)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc135)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc7)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc21)
    %7 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc22)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc23)
    cir.call @exit(%8) : (!s32i) -> () extra(#fn_attr) loc(#loc22)
    cir.br ^bb3 loc(#loc16)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc16)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc11)
  } loc(#loc131)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc136)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc137)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc138)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc139)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc32)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_system_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc141)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc142)
    %2 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc143)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc128)
    %4 = cir.get_global @badSink : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc40)
    cir.store %4, %2 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc143)
    %5 = cir.get_global @__const.CWE78_OS_Command_Injection__char_console_system_44_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc128)
    cir.copy %5 to %3 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc128)
    %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc41)
    cir.store %6, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc144)
    cir.br ^bb1 loc(#loc145)
  ^bb1:  // pred: ^bb0
    %7 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc45)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
    %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc45)
    cir.store %9, %0 : !u64i, !cir.ptr<!u64i> loc(#loc141)
    cir.br ^bb2 loc(#loc146)
  ^bb2:  // pred: ^bb1
    %10 = cir.const #cir.int<100> : !s32i loc(#loc49)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc49)
    %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc50)
    %13 = cir.binop(sub, %11, %12) : !u64i loc(#loc147)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc51)
    %16 = cir.cmp(gt, %13, %15) : !u64i, !cir.bool loc(#loc148)
    cir.brcond %16 ^bb3, ^bb21 loc(#loc149)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc150)
  ^bb4:  // pred: ^bb3
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    %18 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc56)
    %19 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %18 : !u64i), !cir.ptr<!s8i> loc(#loc57)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc58)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc58)
    %22 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc59)
    %23 = cir.binop(sub, %21, %22) : !u64i loc(#loc151)
    %24 = cir.cast(integral, %23 : !u64i), !s32i loc(#loc151)
    %25 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc138)
    %26 = cir.load %25 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc60)
    %27 = cir.call @fgets(%19, %24, %26) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc61)
    %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc62)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc62)
    %30 = cir.cmp(ne, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc152)
    cir.brcond %30 ^bb5, ^bb18 loc(#loc153)
  ^bb5:  // pred: ^bb4
    %31 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc66)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
    %33 = cir.call @strlen(%32) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc66)
    cir.store %33, %0 : !u64i, !cir.ptr<!u64i> loc(#loc154)
    cir.br ^bb6 loc(#loc155)
  ^bb6:  // pred: ^bb5
    %34 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc72)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc73)
    %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc73)
    %37 = cir.cmp(gt, %34, %36) : !u64i, !cir.bool loc(#loc156)
    cir.brcond %37 ^bb7, ^bb12 loc(#loc74)
  ^bb7:  // pred: ^bb6
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
    %39 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc76)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc77)
    %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc77)
    %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc157)
    %43 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc78)
    %44 = cir.load %43 : !cir.ptr<!s8i>, !s8i loc(#loc75)
    %45 = cir.cast(integral, %44 : !s8i), !s32i loc(#loc75)
    %46 = cir.const #cir.int<10> : !s32i loc(#loc79)
    %47 = cir.cmp(eq, %45, %46) : !s32i, !cir.bool loc(#loc158)
    cir.brcond %47 ^bb8, ^bb9 loc(#loc74)
  ^bb8:  // pred: ^bb7
    %48 = cir.const #true loc(#loc74)
    cir.br ^bb10(%48 : !cir.bool) loc(#loc74)
  ^bb9:  // pred: ^bb7
    %49 = cir.const #false loc(#loc74)
    cir.br ^bb10(%49 : !cir.bool) loc(#loc74)
  ^bb10(%50: !cir.bool loc("CWE78_OS_Command_Injection__char_console_system_44.c":65:33)):  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc74)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13(%50 : !cir.bool) loc(#loc74)
  ^bb12:  // pred: ^bb6
    %51 = cir.const #false loc(#loc74)
    cir.br ^bb13(%51 : !cir.bool) loc(#loc74)
  ^bb13(%52: !cir.bool loc("CWE78_OS_Command_Injection__char_console_system_44.c":65:33)):  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc74)
  ^bb14:  // pred: ^bb13
    cir.brcond %52 ^bb15, ^bb16 loc(#loc159)
  ^bb15:  // pred: ^bb14
    %53 = cir.const #cir.int<0> : !s32i loc(#loc81)
    %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc81)
    %55 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
    %56 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc83)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc84)
    %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc84)
    %59 = cir.binop(sub, %56, %58) : !u64i loc(#loc160)
    %60 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %59 : !u64i), !cir.ptr<!s8i> loc(#loc85)
    cir.store %54, %60 : !s8i, !cir.ptr<!s8i> loc(#loc161)
    cir.br ^bb16 loc(#loc71)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc71)
  ^bb17:  // pred: ^bb16
    cir.br ^bb19 loc(#loc64)
  ^bb18:  // pred: ^bb4
    %61 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc32)
    %62 = cir.cast(array_to_ptrdecay, %61 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc32)
    cir.call @printLine(%62) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %63 = cir.const #cir.int<0> : !s32i loc(#loc87)
    %64 = cir.cast(integral, %63 : !s32i), !s8i loc(#loc87)
    %65 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    %66 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc89)
    %67 = cir.ptr_stride(%65 : !cir.ptr<!s8i>, %66 : !u64i), !cir.ptr<!s8i> loc(#loc90)
    cir.store %64, %67 : !s8i, !cir.ptr<!s8i> loc(#loc162)
    cir.br ^bb19 loc(#loc54)
  ^bb19:  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc54)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc48)
  ^bb21:  // 2 preds: ^bb2, ^bb20
    cir.br ^bb22 loc(#loc48)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc44)
  ^bb23:  // pred: ^bb22
    %68 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc91)
    %69 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
    cir.call %68(%69) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc91)
    cir.return loc(#loc34)
  } loc(#loc140)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_system_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc164)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc95)
    cir.return loc(#loc94)
  } loc(#loc163)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc99, #loc100])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc166)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc101)
    cir.br ^bb1 loc(#loc167)
  ^bb1:  // pred: ^bb0
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
    %2 = cir.call @system(%1) : (!cir.ptr<!s8i>) -> !s32i loc(#loc105)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc106)
    %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc168)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc169)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc108)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc108)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc109)
    %7 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc110)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc111)
    cir.call @exit(%8) : (!s32i) -> () extra(#fn_attr) loc(#loc110)
    cir.br ^bb3 loc(#loc103)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc103)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc98)
  } loc(#loc165)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc170)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc114)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc172)
    %1 = cir.alloca !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc173)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc127)
    %3 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc120)
    cir.store %3, %1 : !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>> loc(#loc173)
    %4 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc127)
    cir.copy %4 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc127)
    %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc121)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc174)
    %6 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc123)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc114)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc114)
    %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc123)
    %11 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>>, !cir.ptr<!cir.func<(!cir.ptr<!s8i>)>> loc(#loc125)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
    cir.call %11(%12) : (!cir.ptr<!cir.func<(!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> () loc(#loc125)
    cir.return loc(#loc116)
  } loc(#loc171)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_system_44.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":101:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":101:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":51:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":51:26)
#loc5 = loc("/usr/include/stdlib.h":923:1)
#loc6 = loc("/usr/include/stdlib.h":923:41)
#loc7 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":41:19)
#loc8 = loc("/usr/include/stdlib.h":756:1)
#loc9 = loc("/usr/include/stdlib.h":756:70)
#loc10 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":36:1)
#loc11 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":44:1)
#loc14 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":37:1)
#loc15 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":39:5)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":43:5)
#loc17 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":39:16)
#loc18 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":39:9)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":39:25)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":40:5)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":41:9)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":42:9)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":42:14)
#loc24 = loc("/usr/include/string.h":407:1)
#loc25 = loc("/usr/include/string.h":408:33)
#loc26 = loc("/usr/include/stdio.h":654:1)
#loc27 = loc("/usr/include/stdio.h":655:59)
#loc28 = loc("/usr/include/stdio.h":149:1)
#loc29 = loc("/usr/include/stdio.h":149:14)
#loc30 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc31 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":72:27)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":46:1)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":80:1)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":55:9)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":55:37)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":48:5)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":48:12)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":50:5)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":50:32)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":52:12)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":52:5)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":53:5)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":77:5)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":55:26)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":55:33)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":57:9)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":76:9)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":57:13)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":57:17)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":57:27)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":58:9)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":60:13)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":75:13)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":60:23)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":60:28)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":60:27)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":60:43)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":60:47)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":60:57)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":60:17)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":60:67)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":61:13)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":69:13)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":71:13)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":64:27)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":64:34)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":64:17)
#loc69 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":64:38)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":65:17)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":68:17)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":65:21)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":65:31)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":65:36)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":65:41)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":65:49)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":65:50)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":65:55)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":66:17)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":67:39)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":67:21)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":67:26)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":67:34)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":67:35)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":72:17)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":74:33)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":74:17)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":74:22)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":74:29)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":79:5)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":79:13)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":108:1)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":111:1)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":110:5)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":110:13)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":87:1)
#loc98 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":95:1)
#loc101 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":88:1)
#loc102 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":90:5)
#loc103 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":94:5)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":90:16)
#loc105 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":90:9)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":90:25)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":91:5)
#loc108 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":92:19)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":92:9)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":93:9)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":93:14)
#loc112 = loc("/usr/include/string.h":149:1)
#loc113 = loc("/usr/include/string.h":150:14)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":104:18)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":97:1)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":106:1)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":99:5)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":99:12)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":100:5)
#loc120 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":100:32)
#loc121 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":102:12)
#loc122 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":102:5)
#loc123 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":104:5)
#loc124 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":104:12)
#loc125 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":105:5)
#loc126 = loc("CWE78_OS_Command_Injection__char_console_system_44.c":105:13)
#loc127 = loc(fused[#loc1, #loc2])
#loc128 = loc(fused[#loc3, #loc4])
#loc129 = loc(fused[#loc5, #loc6])
#loc130 = loc(fused[#loc8, #loc9])
#loc131 = loc(fused[#loc10, #loc11])
#loc133 = loc(fused[#loc15, #loc16])
#loc134 = loc(fused[#loc18, #loc19])
#loc135 = loc(fused[#loc20, #loc16])
#loc136 = loc(fused[#loc24, #loc25])
#loc137 = loc(fused[#loc26, #loc27])
#loc138 = loc(fused[#loc28, #loc29])
#loc139 = loc(fused[#loc30, #loc31])
#loc140 = loc(fused[#loc33, #loc34])
#loc141 = loc(fused[#loc35, #loc36])
#loc142 = loc(fused[#loc37, #loc38])
#loc143 = loc(fused[#loc39, #loc40])
#loc144 = loc(fused[#loc42, #loc41])
#loc145 = loc(fused[#loc43, #loc44])
#loc146 = loc(fused[#loc47, #loc48])
#loc147 = loc(fused[#loc49, #loc50])
#loc148 = loc(fused[#loc49, #loc51])
#loc149 = loc(fused[#loc52, #loc48])
#loc150 = loc(fused[#loc53, #loc54])
#loc151 = loc(fused[#loc58, #loc59])
#loc152 = loc(fused[#loc61, #loc62])
#loc153 = loc(fused[#loc63, #loc64, #loc65, #loc54])
#loc154 = loc(fused[#loc68, #loc69])
#loc155 = loc(fused[#loc70, #loc71])
#loc156 = loc(fused[#loc72, #loc73])
#loc157 = loc(fused[#loc76, #loc77])
#loc158 = loc(fused[#loc75, #loc79])
#loc159 = loc(fused[#loc80, #loc71])
#loc160 = loc(fused[#loc83, #loc84])
#loc161 = loc(fused[#loc82, #loc81])
#loc162 = loc(fused[#loc88, #loc87])
#loc163 = loc(fused[#loc93, #loc94])
#loc164 = loc(fused[#loc95, #loc96])
#loc165 = loc(fused[#loc97, #loc98])
#loc167 = loc(fused[#loc102, #loc103])
#loc168 = loc(fused[#loc105, #loc106])
#loc169 = loc(fused[#loc107, #loc103])
#loc170 = loc(fused[#loc112, #loc113])
#loc171 = loc(fused[#loc115, #loc116])
#loc172 = loc(fused[#loc117, #loc118])
#loc173 = loc(fused[#loc119, #loc120])
#loc174 = loc(fused[#loc122, #loc121])
