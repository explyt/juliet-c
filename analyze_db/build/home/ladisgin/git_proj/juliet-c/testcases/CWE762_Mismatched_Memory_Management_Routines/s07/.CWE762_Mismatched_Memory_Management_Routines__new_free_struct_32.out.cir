!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc3 = loc("../../../testcasesupport/std_testcase.h":96:16)
#loc124 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":112:10)
#loc125 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":112:14)
#loc126 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":112:20)
#loc127 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":112:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc191 = loc(fused[#loc124, #loc125])
#loc192 = loc(fused[#loc126, #loc127])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc140)
  cir.func linkonce_odr @_ZN14_twoIntsStructC2Ev(%arg0: !cir.ptr<!ty__twoIntsStruct> loc("../../../testcasesupport/std_testcase.h":96:16)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc3)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc3)
    cir.return loc(#loc3)
  } loc(#loc3)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc141)
  cir.func @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_323badEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc143)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc144)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc145)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc146)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc147)
    cir.store %2, %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc146)
    cir.store %2, %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc147)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc18)
    cir.store %5, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc148)
    cir.br ^bb1 loc(#loc149)
  ^bb1:  // pred: ^bb0
    %6 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc9)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc22)
    cir.store %7, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc143)
    %8 = cir.const #cir.int<8> : !u64i loc(#loc150)
    %9 = cir.call @_Znwm(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc25)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc150)
    cir.call @_ZN14_twoIntsStructC2Ev(%10) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr1) loc(#loc24)
    cir.store %10, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc151)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc27)
    %12 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc28)
    cir.store %11, %12 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc152)
    cir.br ^bb2 loc(#loc21)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc153)
  ^bb3:  // pred: ^bb2
    %13 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc11)
    %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
    cir.store %14, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc144)
    %15 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc33)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc34)
    cir.call @free(%17) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc33)
    cir.br ^bb4 loc(#loc31)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc7)
  } loc(#loc142)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc154)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc155)
  cir.func internal private @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32L7goodG2BEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc157)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc158)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc159)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc160)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc161)
    cir.store %2, %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc160)
    cir.store %2, %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc161)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc51)
    cir.store %5, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc162)
    cir.br ^bb1 loc(#loc163)
  ^bb1:  // pred: ^bb0
    %6 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc42)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc55)
    cir.store %7, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc157)
    %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc56)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc57)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc57)
    %11 = cir.const #cir.int<8> : !u64i loc(#loc164)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc165)
    %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc56)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc166)
    cir.store %14, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc167)
    cir.br ^bb2 loc(#loc168)
  ^bb2:  // pred: ^bb1
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc64)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc65)
    %17 = cir.cmp(eq, %15, %16) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc169)
    cir.brcond %17 ^bb3, ^bb4 loc(#loc170)
  ^bb3:  // pred: ^bb2
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc67)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc69)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr1) loc(#loc67)
    cir.br ^bb4 loc(#loc63)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc63)
  ^bb5:  // pred: ^bb4
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc70)
    %22 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc71)
    cir.store %21, %22 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc171)
    cir.br ^bb6 loc(#loc54)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc172)
  ^bb7:  // pred: ^bb6
    %23 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc44)
    %24 = cir.load %23 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc75)
    cir.store %24, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc158)
    %25 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc76)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc77)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc77)
    cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc76)
    cir.br ^bb8 loc(#loc74)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc40)
  } loc(#loc156)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc173)
  cir.func internal private @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32L7goodB2GEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc175)
    %1 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc176)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc177)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc178)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc179)
    cir.store %2, %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc178)
    cir.store %2, %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc179)
    %5 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc92)
    cir.store %5, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc180)
    cir.br ^bb1 loc(#loc181)
  ^bb1:  // pred: ^bb0
    %6 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc83)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc96)
    cir.store %7, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc175)
    %8 = cir.const #cir.int<8> : !u64i loc(#loc182)
    %9 = cir.call @_Znwm(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc99)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc182)
    cir.call @_ZN14_twoIntsStructC2Ev(%10) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr1) loc(#loc98)
    cir.store %10, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc183)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc101)
    %12 = cir.load deref %3 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc102)
    cir.store %11, %12 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc184)
    cir.br ^bb2 loc(#loc95)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc185)
  ^bb3:  // pred: ^bb2
    %13 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc85)
    %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc106)
    cir.store %14, %1 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc176)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc107)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc107)
    cir.call @_ZdlPv(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc99)
    cir.br ^bb4 loc(#loc105)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc81)
  } loc(#loc174)
  cir.func @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_324goodEv() extra(#fn_attr2) {
    cir.call @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32L7goodG2BEv() : () -> () loc(#loc110)
    cir.call @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32L7goodB2GEv() : () -> () loc(#loc111)
    cir.return loc(#loc109)
  } loc(#loc186)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc187)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc188)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc189)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc118)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc119)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc120)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc121)
  cir.func @main(%arg0: !s32i loc(fused[#loc124, #loc125]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc126, #loc127])) -> !s32i extra(#fn_attr2) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc191)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc192)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc123)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc128)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc128)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc129)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc130)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc130)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc131)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc118)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc118)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc132)
    cir.call @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_324goodEv() : () -> () loc(#loc133)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc119)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc119)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc134)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc120)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc120)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc135)
    cir.call @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_323badEv() : () -> () loc(#loc136)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc121)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc121)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc137)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc138)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc193)
    cir.return %15 : !s32i loc(#loc193)
  } loc(#loc190)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc2 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc4 = loc("/usr/include/stdlib.h":687:1)
#loc5 = loc("/usr/include/stdlib.h":687:32)
#loc6 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":25:1)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":44:1)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":33:9)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":33:33)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":39:9)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":39:33)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":27:5)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":27:21)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":28:5)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":28:34)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":29:5)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":29:34)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":31:12)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":31:5)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":32:5)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":37:5)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":33:32)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":35:16)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":35:20)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":25:6)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":35:9)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":36:21)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":36:10)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":36:9)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":38:5)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":43:5)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":39:32)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":42:9)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":42:14)
#loc35 = loc("/usr/include/stdlib.h":672:1)
#loc36 = loc("/usr/include/stdlib.h":672:45)
#loc37 = loc("/usr/include/stdlib.h":756:1)
#loc38 = loc("/usr/include/stdlib.h":756:70)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":51:1)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":71:1)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":59:9)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":59:33)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":66:9)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":66:33)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":53:5)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":53:21)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":54:5)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":54:34)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":55:5)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":55:34)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":57:12)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":57:5)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":58:5)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":64:5)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":59:32)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":61:33)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":61:40)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":61:44)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":61:64)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":61:65)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":61:9)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":62:9)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":62:37)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":62:13)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":62:21)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":62:27)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":62:28)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":62:34)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":62:33)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":63:21)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":63:10)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":63:9)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":65:5)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":70:5)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":66:32)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":69:9)
#loc77 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":69:14)
#loc78 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":135:1)
#loc79 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":136:41)
#loc80 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":74:1)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":92:1)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":82:9)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":82:33)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":88:9)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":88:33)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":76:5)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":76:21)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":77:5)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":77:34)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":78:5)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":78:34)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":80:12)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":80:5)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":81:5)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":86:5)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":82:32)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":84:16)
#loc98 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":84:20)
#loc99 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":74:13)
#loc100 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":84:9)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":85:21)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":85:10)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":85:9)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":87:5)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":91:5)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":88:32)
#loc107 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":90:16)
#loc108 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":94:1)
#loc109 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":98:1)
#loc110 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":96:5)
#loc111 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":97:5)
#loc112 = loc("/usr/include/stdlib.h":575:1)
#loc113 = loc("/usr/include/stdlib.h":575:41)
#loc114 = loc("/usr/include/time.h":76:1)
#loc115 = loc("/usr/include/time.h":76:38)
#loc116 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc117 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc118 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":117:15)
#loc119 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":119:15)
#loc120 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":122:15)
#loc121 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":124:15)
#loc122 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":112:1)
#loc123 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":127:1)
#loc128 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":113:1)
#loc129 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":115:27)
#loc130 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":115:22)
#loc131 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":115:5)
#loc132 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":117:5)
#loc133 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":118:5)
#loc134 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":119:5)
#loc135 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":122:5)
#loc136 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":123:5)
#loc137 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":124:5)
#loc138 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":126:12)
#loc139 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":126:5)
#loc140 = loc(fused[#loc1, #loc2])
#loc141 = loc(fused[#loc4, #loc5])
#loc142 = loc(fused[#loc6, #loc7])
#loc143 = loc(fused[#loc8, #loc9])
#loc144 = loc(fused[#loc10, #loc11])
#loc145 = loc(fused[#loc12, #loc13])
#loc146 = loc(fused[#loc14, #loc15])
#loc147 = loc(fused[#loc16, #loc17])
#loc148 = loc(fused[#loc19, #loc18])
#loc149 = loc(fused[#loc20, #loc21])
#loc150 = loc(fused[#loc23, #loc24])
#loc151 = loc(fused[#loc26, #loc24])
#loc152 = loc(fused[#loc29, #loc27])
#loc153 = loc(fused[#loc30, #loc31])
#loc154 = loc(fused[#loc35, #loc36])
#loc155 = loc(fused[#loc37, #loc38])
#loc156 = loc(fused[#loc39, #loc40])
#loc157 = loc(fused[#loc41, #loc42])
#loc158 = loc(fused[#loc43, #loc44])
#loc159 = loc(fused[#loc45, #loc46])
#loc160 = loc(fused[#loc47, #loc48])
#loc161 = loc(fused[#loc49, #loc50])
#loc162 = loc(fused[#loc52, #loc51])
#loc163 = loc(fused[#loc53, #loc54])
#loc164 = loc(fused[#loc58, #loc59])
#loc165 = loc(fused[#loc57, #loc59])
#loc166 = loc(fused[#loc56, #loc60])
#loc167 = loc(fused[#loc61, #loc60])
#loc168 = loc(fused[#loc62, #loc63])
#loc169 = loc(fused[#loc64, #loc65])
#loc170 = loc(fused[#loc66, #loc63])
#loc171 = loc(fused[#loc72, #loc70])
#loc172 = loc(fused[#loc73, #loc74])
#loc173 = loc(fused[#loc78, #loc79])
#loc174 = loc(fused[#loc80, #loc81])
#loc175 = loc(fused[#loc82, #loc83])
#loc176 = loc(fused[#loc84, #loc85])
#loc177 = loc(fused[#loc86, #loc87])
#loc178 = loc(fused[#loc88, #loc89])
#loc179 = loc(fused[#loc90, #loc91])
#loc180 = loc(fused[#loc93, #loc92])
#loc181 = loc(fused[#loc94, #loc95])
#loc182 = loc(fused[#loc97, #loc98])
#loc183 = loc(fused[#loc100, #loc98])
#loc184 = loc(fused[#loc103, #loc101])
#loc185 = loc(fused[#loc104, #loc105])
#loc186 = loc(fused[#loc108, #loc109])
#loc187 = loc(fused[#loc112, #loc113])
#loc188 = loc(fused[#loc114, #loc115])
#loc189 = loc(fused[#loc116, #loc117])
#loc190 = loc(fused[#loc122, #loc123])
#loc193 = loc(fused[#loc139, #loc138])
