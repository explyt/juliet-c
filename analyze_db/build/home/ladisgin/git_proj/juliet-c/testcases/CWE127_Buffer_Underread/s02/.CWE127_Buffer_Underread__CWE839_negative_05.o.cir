!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc84 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":81:27)
#loc121 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":109:27)
#true = #cir.bool<true> : !cir.bool
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s02/CWE127_Buffer_Underread__CWE839_negative_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc203)
  cir.func private @printIntLine(!s32i) loc(#loc204)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc205)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is too big.\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_negative_05_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc207)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc208)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc15)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc209)
    cir.br ^bb1 loc(#loc210)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc203)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc211)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<5> : !s32i loc(#loc21)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc22)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc212)
    cir.br ^bb3 loc(#loc18)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc18)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc213)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc203)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc26)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc26)
    cir.brcond %11 ^bb6, ^bb14 loc(#loc214)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc215)
  ^bb7:  // pred: ^bb6
    %12 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc207)
    cir.store %12, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc207)
    cir.br ^bb8 loc(#loc216)
  ^bb8:  // pred: ^bb7
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    %14 = cir.const #cir.int<10> : !s32i loc(#loc33)
    %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc217)
    cir.brcond %15 ^bb9, ^bb10 loc(#loc218)
  ^bb9:  // pred: ^bb8
    %16 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    %17 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc38)
    %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc38)
    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc39)
    cir.br ^bb11 loc(#loc35)
  ^bb10:  // pred: ^bb8
    %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc7)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc40)
    cir.br ^bb11 loc(#loc31)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc31)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc29)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc25)
  ^bb14:  // 2 preds: ^bb5, ^bb13
    cir.br ^bb15 loc(#loc25)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc9)
  } loc(#loc206)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_negative_05_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc220)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc221)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc222)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc223)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    cir.return loc(#loc42)
  } loc(#loc219)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc224)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc54)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc226)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc227)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc61)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc62)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc228)
    cir.br ^bb1 loc(#loc229)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc203)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc66)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc66)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc230)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<5> : !s32i loc(#loc68)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc69)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc231)
    cir.br ^bb3 loc(#loc65)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc65)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc232)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc224)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc73)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc73)
    cir.brcond %11 ^bb6, ^bb7 loc(#loc233)
  ^bb6:  // pred: ^bb5
    %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc53)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    cir.br ^bb23 loc(#loc75)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc234)
  ^bb8:  // pred: ^bb7
    %14 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc226)
    cir.store %14, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc226)
    cir.br ^bb9 loc(#loc235)
  ^bb9:  // pred: ^bb8
    %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc82)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc83)
    %17 = cir.cmp(ge, %15, %16) : !s32i, !cir.bool loc(#loc236)
    cir.brcond %17 ^bb10, ^bb15 loc(#loc84)
  ^bb10:  // pred: ^bb9
    %18 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc85)
    %19 = cir.const #cir.int<10> : !s32i loc(#loc86)
    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc237)
    cir.brcond %20 ^bb11, ^bb12 loc(#loc84)
  ^bb11:  // pred: ^bb10
    %21 = cir.const #true loc(#loc84)
    cir.br ^bb13(%21 : !cir.bool) loc(#loc84)
  ^bb12:  // pred: ^bb10
    %22 = cir.const #false loc(#loc84)
    cir.br ^bb13(%22 : !cir.bool) loc(#loc84)
  ^bb13(%23: !cir.bool loc("CWE127_Buffer_Underread__CWE839_negative_05.c":81:27)):  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc84)
  ^bb14:  // pred: ^bb13
    cir.br ^bb16(%23 : !cir.bool) loc(#loc84)
  ^bb15:  // pred: ^bb9
    %24 = cir.const #false loc(#loc84)
    cir.br ^bb16(%24 : !cir.bool) loc(#loc84)
  ^bb16(%25: !cir.bool loc("CWE127_Buffer_Underread__CWE839_negative_05.c":81:27)):  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc84)
  ^bb17:  // pred: ^bb16
    cir.brcond %25 ^bb18, ^bb19 loc(#loc238)
  ^bb18:  // pred: ^bb17
    %26 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc92)
    %28 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc92)
    %29 = cir.load %28 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    cir.call @printIntLine(%29) : (!s32i) -> () loc(#loc93)
    cir.br ^bb20 loc(#loc89)
  ^bb19:  // pred: ^bb17
    %30 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc54)
    %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    cir.br ^bb20 loc(#loc81)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc81)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc79)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc72)
  ^bb23:  // 2 preds: ^bb6, ^bb22
    cir.br ^bb24 loc(#loc72)
  ^bb24:  // pred: ^bb23
    cir.return loc(#loc56)
  } loc(#loc225)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc240)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc241)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc101)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc102)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc242)
    cir.br ^bb1 loc(#loc243)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc203)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc106)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc244)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<5> : !s32i loc(#loc108)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc109)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc245)
    cir.br ^bb3 loc(#loc105)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc105)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc246)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc203)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc113)
    cir.brcond %11 ^bb6, ^bb22 loc(#loc247)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc248)
  ^bb7:  // pred: ^bb6
    %12 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc240)
    cir.store %12, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc240)
    cir.br ^bb8 loc(#loc249)
  ^bb8:  // pred: ^bb7
    %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc120)
    %15 = cir.cmp(ge, %13, %14) : !s32i, !cir.bool loc(#loc250)
    cir.brcond %15 ^bb9, ^bb14 loc(#loc121)
  ^bb9:  // pred: ^bb8
    %16 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    %17 = cir.const #cir.int<10> : !s32i loc(#loc123)
    %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc251)
    cir.brcond %18 ^bb10, ^bb11 loc(#loc121)
  ^bb10:  // pred: ^bb9
    %19 = cir.const #true loc(#loc121)
    cir.br ^bb12(%19 : !cir.bool) loc(#loc121)
  ^bb11:  // pred: ^bb9
    %20 = cir.const #false loc(#loc121)
    cir.br ^bb12(%20 : !cir.bool) loc(#loc121)
  ^bb12(%21: !cir.bool loc("CWE127_Buffer_Underread__CWE839_negative_05.c":109:27)):  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc121)
  ^bb13:  // pred: ^bb12
    cir.br ^bb15(%21 : !cir.bool) loc(#loc121)
  ^bb14:  // pred: ^bb8
    %22 = cir.const #false loc(#loc121)
    cir.br ^bb15(%22 : !cir.bool) loc(#loc121)
  ^bb15(%23: !cir.bool loc("CWE127_Buffer_Underread__CWE839_negative_05.c":109:27)):  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc121)
  ^bb16:  // pred: ^bb15
    cir.brcond %23 ^bb17, ^bb18 loc(#loc252)
  ^bb17:  // pred: ^bb16
    %24 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc129)
    %26 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %24 : !s32i), !cir.ptr<!s32i> loc(#loc129)
    %27 = cir.load %26 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    cir.call @printIntLine(%27) : (!s32i) -> () loc(#loc130)
    cir.br ^bb19 loc(#loc126)
  ^bb18:  // pred: ^bb16
    %28 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc131)
    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc131)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc132)
    cir.br ^bb19 loc(#loc118)
  ^bb19:  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc118)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc116)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc112)
  ^bb22:  // 2 preds: ^bb5, ^bb21
    cir.br ^bb23 loc(#loc112)
  ^bb23:  // pred: ^bb22
    cir.return loc(#loc96)
  } loc(#loc239)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc254)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc255)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc139)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc140)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc256)
    cir.br ^bb1 loc(#loc257)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc224)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc144)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc258)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc148)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc148)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc149)
    cir.br ^bb4 loc(#loc146)
  ^bb3:  // pred: ^bb1
    %9 = cir.const #cir.int<7> : !s32i loc(#loc150)
    cir.store %9, %1 : !s32i, !cir.ptr<!s32i> loc(#loc259)
    cir.br ^bb4 loc(#loc143)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc143)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc260)
  ^bb6:  // pred: ^bb5
    %10 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc203)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc154)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc154)
    cir.brcond %12 ^bb7, ^bb15 loc(#loc261)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc262)
  ^bb8:  // pred: ^bb7
    %13 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc254)
    cir.store %13, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc254)
    cir.br ^bb9 loc(#loc263)
  ^bb9:  // pred: ^bb8
    %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc160)
    %15 = cir.const #cir.int<10> : !s32i loc(#loc161)
    %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc264)
    cir.brcond %16 ^bb10, ^bb11 loc(#loc265)
  ^bb10:  // pred: ^bb9
    %17 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc165)
    %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc166)
    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc166)
    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc167)
    cir.br ^bb12 loc(#loc163)
  ^bb11:  // pred: ^bb9
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc168)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc168)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc169)
    cir.br ^bb12 loc(#loc159)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc159)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc157)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc153)
  ^bb15:  // 2 preds: ^bb6, ^bb14
    cir.br ^bb16 loc(#loc153)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc134)
  } loc(#loc253)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc267)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc268)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc176)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc177)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc269)
    cir.br ^bb1 loc(#loc270)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc203)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc181)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc181)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc271)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<7> : !s32i loc(#loc183)
    cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc272)
    cir.br ^bb3 loc(#loc180)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc180)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc273)
  ^bb5:  // pred: ^bb4
    %8 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc203)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc187)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc187)
    cir.brcond %10 ^bb6, ^bb14 loc(#loc274)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc275)
  ^bb7:  // pred: ^bb6
    %11 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc267)
    cir.store %11, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc267)
    cir.br ^bb8 loc(#loc276)
  ^bb8:  // pred: ^bb7
    %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc193)
    %13 = cir.const #cir.int<10> : !s32i loc(#loc194)
    %14 = cir.cmp(lt, %12, %13) : !s32i, !cir.bool loc(#loc277)
    cir.brcond %14 ^bb9, ^bb10 loc(#loc278)
  ^bb9:  // pred: ^bb8
    %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc198)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc199)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc199)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc199)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc200)
    cir.br ^bb11 loc(#loc196)
  ^bb10:  // pred: ^bb8
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc201)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc201)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc202)
    cir.br ^bb11 loc(#loc192)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc192)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc190)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc186)
  ^bb14:  // 2 preds: ^bb5, ^bb13
    cir.br ^bb15 loc(#loc186)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc171)
  } loc(#loc266)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s02/CWE127_Buffer_Underread__CWE839_negative_05.c":0:0)
#loc1 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":23:1)
#loc2 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":23:25)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":50:27)
#loc8 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":28:1)
#loc9 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":54:1)
#loc10 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":41:13)
#loc11 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":41:34)
#loc12 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":30:5)
#loc13 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":30:9)
#loc14 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":32:13)
#loc15 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":32:12)
#loc16 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":32:5)
#loc17 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":33:5)
#loc18 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":37:5)
#loc19 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":33:8)
#loc20 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":34:5)
#loc21 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":36:17)
#loc22 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":36:16)
#loc23 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":36:9)
#loc24 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":38:5)
#loc25 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":53:5)
#loc26 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":38:8)
#loc27 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":39:5)
#loc28 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":40:9)
#loc29 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":52:9)
#loc30 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":44:13)
#loc31 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":51:13)
#loc32 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":44:17)
#loc33 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":44:24)
#loc34 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":45:13)
#loc35 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":47:13)
#loc36 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":49:13)
#loc37 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":46:37)
#loc38 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":46:30)
#loc39 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":46:17)
#loc40 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":50:17)
#loc41 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":186:1)
#loc42 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":192:1)
#loc43 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":188:5)
#loc44 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":188:14)
#loc45 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":189:5)
#loc46 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":189:14)
#loc47 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":190:5)
#loc48 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":190:14)
#loc49 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":191:5)
#loc50 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":191:14)
#loc51 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":24:1)
#loc52 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":24:26)
#loc53 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":74:19)
#loc54 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":87:27)
#loc55 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":61:1)
#loc56 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":91:1)
#loc57 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":79:13)
#loc58 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":79:34)
#loc59 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":63:5)
#loc60 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":63:9)
#loc61 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":65:13)
#loc62 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":65:12)
#loc63 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":65:5)
#loc64 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":66:5)
#loc65 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":70:5)
#loc66 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":66:8)
#loc67 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":67:5)
#loc68 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":69:17)
#loc69 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":69:16)
#loc70 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":69:9)
#loc71 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":71:5)
#loc72 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":90:5)
#loc73 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":71:8)
#loc74 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":72:5)
#loc75 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":75:5)
#loc76 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":77:5)
#loc77 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":74:9)
#loc78 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":78:9)
#loc79 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":89:9)
#loc80 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":81:13)
#loc81 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":88:13)
#loc82 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":81:17)
#loc83 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":81:25)
#loc85 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":81:30)
#loc86 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":81:38)
#loc87 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":81:40)
#loc88 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":82:13)
#loc89 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":84:13)
#loc90 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":86:13)
#loc91 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":83:37)
#loc92 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":83:30)
#loc93 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":83:17)
#loc94 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":87:17)
#loc95 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":94:1)
#loc96 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":119:1)
#loc97 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":107:13)
#loc98 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":107:34)
#loc99 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":96:5)
#loc100 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":96:9)
#loc101 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":98:13)
#loc102 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":98:12)
#loc103 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":98:5)
#loc104 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":99:5)
#loc105 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":103:5)
#loc106 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":99:8)
#loc107 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":100:5)
#loc108 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":102:17)
#loc109 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":102:16)
#loc110 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":102:9)
#loc111 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":104:5)
#loc112 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":118:5)
#loc113 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":104:8)
#loc114 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":105:5)
#loc115 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":106:9)
#loc116 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":117:9)
#loc117 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":109:13)
#loc118 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":116:13)
#loc119 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":109:17)
#loc120 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":109:25)
#loc122 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":109:30)
#loc123 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":109:38)
#loc124 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":109:40)
#loc125 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":110:13)
#loc126 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":112:13)
#loc127 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":114:13)
#loc128 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":111:37)
#loc129 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":111:30)
#loc130 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":111:17)
#loc131 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":115:27)
#loc132 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":115:17)
#loc133 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":122:1)
#loc134 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":154:1)
#loc135 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":141:13)
#loc136 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":141:34)
#loc137 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":124:5)
#loc138 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":124:9)
#loc139 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":126:13)
#loc140 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":126:12)
#loc141 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":126:5)
#loc142 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":127:5)
#loc143 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":137:5)
#loc144 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":127:8)
#loc145 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":128:5)
#loc146 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":131:5)
#loc147 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":133:5)
#loc148 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":130:19)
#loc149 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":130:9)
#loc150 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":136:16)
#loc151 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":136:9)
#loc152 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":138:5)
#loc153 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":153:5)
#loc154 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":138:8)
#loc155 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":139:5)
#loc156 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":140:9)
#loc157 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":152:9)
#loc158 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":144:13)
#loc159 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":151:13)
#loc160 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":144:17)
#loc161 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":144:24)
#loc162 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":145:13)
#loc163 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":147:13)
#loc164 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":149:13)
#loc165 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":146:37)
#loc166 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":146:30)
#loc167 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":146:17)
#loc168 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":150:27)
#loc169 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":150:17)
#loc170 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":157:1)
#loc171 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":184:1)
#loc172 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":171:13)
#loc173 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":171:34)
#loc174 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":159:5)
#loc175 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":159:9)
#loc176 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":161:13)
#loc177 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":161:12)
#loc178 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":161:5)
#loc179 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":162:5)
#loc180 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":167:5)
#loc181 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":162:8)
#loc182 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":163:5)
#loc183 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":166:16)
#loc184 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":166:9)
#loc185 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":168:5)
#loc186 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":183:5)
#loc187 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":168:8)
#loc188 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":169:5)
#loc189 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":170:9)
#loc190 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":182:9)
#loc191 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":174:13)
#loc192 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":181:13)
#loc193 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":174:17)
#loc194 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":174:24)
#loc195 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":175:13)
#loc196 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":177:13)
#loc197 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":179:13)
#loc198 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":176:37)
#loc199 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":176:30)
#loc200 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":176:17)
#loc201 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":180:27)
#loc202 = loc("CWE127_Buffer_Underread__CWE839_negative_05.c":180:17)
#loc203 = loc(fused[#loc1, #loc2])
#loc204 = loc(fused[#loc3, #loc4])
#loc205 = loc(fused[#loc5, #loc6])
#loc206 = loc(fused[#loc8, #loc9])
#loc207 = loc(fused[#loc10, #loc11])
#loc208 = loc(fused[#loc12, #loc13])
#loc209 = loc(fused[#loc16, #loc14])
#loc210 = loc(fused[#loc17, #loc18])
#loc211 = loc(fused[#loc20, #loc18])
#loc212 = loc(fused[#loc23, #loc21])
#loc213 = loc(fused[#loc24, #loc25])
#loc214 = loc(fused[#loc27, #loc25])
#loc215 = loc(fused[#loc28, #loc29])
#loc216 = loc(fused[#loc30, #loc31])
#loc217 = loc(fused[#loc32, #loc33])
#loc218 = loc(fused[#loc34, #loc35, #loc36, #loc31])
#loc219 = loc(fused[#loc41, #loc42])
#loc220 = loc(fused[#loc43, #loc44])
#loc221 = loc(fused[#loc45, #loc46])
#loc222 = loc(fused[#loc47, #loc48])
#loc223 = loc(fused[#loc49, #loc50])
#loc224 = loc(fused[#loc51, #loc52])
#loc225 = loc(fused[#loc55, #loc56])
#loc226 = loc(fused[#loc57, #loc58])
#loc227 = loc(fused[#loc59, #loc60])
#loc228 = loc(fused[#loc63, #loc61])
#loc229 = loc(fused[#loc64, #loc65])
#loc230 = loc(fused[#loc67, #loc65])
#loc231 = loc(fused[#loc70, #loc68])
#loc232 = loc(fused[#loc71, #loc72])
#loc233 = loc(fused[#loc74, #loc75, #loc76, #loc72])
#loc234 = loc(fused[#loc78, #loc79])
#loc235 = loc(fused[#loc80, #loc81])
#loc236 = loc(fused[#loc82, #loc83])
#loc237 = loc(fused[#loc85, #loc87])
#loc238 = loc(fused[#loc88, #loc89, #loc90, #loc81])
#loc239 = loc(fused[#loc95, #loc96])
#loc240 = loc(fused[#loc97, #loc98])
#loc241 = loc(fused[#loc99, #loc100])
#loc242 = loc(fused[#loc103, #loc101])
#loc243 = loc(fused[#loc104, #loc105])
#loc244 = loc(fused[#loc107, #loc105])
#loc245 = loc(fused[#loc110, #loc108])
#loc246 = loc(fused[#loc111, #loc112])
#loc247 = loc(fused[#loc114, #loc112])
#loc248 = loc(fused[#loc115, #loc116])
#loc249 = loc(fused[#loc117, #loc118])
#loc250 = loc(fused[#loc119, #loc120])
#loc251 = loc(fused[#loc122, #loc124])
#loc252 = loc(fused[#loc125, #loc126, #loc127, #loc118])
#loc253 = loc(fused[#loc133, #loc134])
#loc254 = loc(fused[#loc135, #loc136])
#loc255 = loc(fused[#loc137, #loc138])
#loc256 = loc(fused[#loc141, #loc139])
#loc257 = loc(fused[#loc142, #loc143])
#loc258 = loc(fused[#loc145, #loc146, #loc147, #loc143])
#loc259 = loc(fused[#loc151, #loc150])
#loc260 = loc(fused[#loc152, #loc153])
#loc261 = loc(fused[#loc155, #loc153])
#loc262 = loc(fused[#loc156, #loc157])
#loc263 = loc(fused[#loc158, #loc159])
#loc264 = loc(fused[#loc160, #loc161])
#loc265 = loc(fused[#loc162, #loc163, #loc164, #loc159])
#loc266 = loc(fused[#loc170, #loc171])
#loc267 = loc(fused[#loc172, #loc173])
#loc268 = loc(fused[#loc174, #loc175])
#loc269 = loc(fused[#loc178, #loc176])
#loc270 = loc(fused[#loc179, #loc180])
#loc271 = loc(fused[#loc182, #loc180])
#loc272 = loc(fused[#loc184, #loc183])
#loc273 = loc(fused[#loc185, #loc186])
#loc274 = loc(fused[#loc188, #loc186])
#loc275 = loc(fused[#loc189, #loc190])
#loc276 = loc(fused[#loc191, #loc192])
#loc277 = loc(fused[#loc193, #loc194])
#loc278 = loc(fused[#loc195, #loc196, #loc197, #loc192])
