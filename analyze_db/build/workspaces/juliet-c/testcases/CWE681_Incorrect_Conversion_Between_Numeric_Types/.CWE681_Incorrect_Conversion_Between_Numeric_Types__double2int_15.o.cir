!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc87 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":83:36)
#loc129 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":120:36)
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE681_Incorrect_Conversion_Between_Numeric_Types/CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc143)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc144)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc145)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc146)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @printIntLine(!s32i) loc(#loc147)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc12)
  cir.func no_proto @CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 256>, !cir.ptr<!cir.array<!s8i x 256>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc149)
    %1 = cir.alloca !cir.double, !cir.ptr<!cir.double>, ["doubleNumber", init] {alignment = 8 : i64} loc(#loc150)
    cir.br ^bb1 loc(#loc151)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<6> : !s32i loc(#loc21)
    cir.br ^bb2 loc(#loc19)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %2 : !s32i, ^bb12 [
      6: ^bb4
    ] loc(#loc19)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc22)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc152)
  ^bb5:  // pred: ^bb4
    %3 = cir.const #cir.int<0> : !s32i loc(#loc18)
    %4 = cir.cast(int_to_float, %3 : !s32i), !cir.double loc(#loc18)
    cir.store %4, %1 : !cir.double, !cir.ptr<!cir.double> loc(#loc150)
    cir.br ^bb6 loc(#loc153)
  ^bb6:  // pred: ^bb5
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 256>>), !cir.ptr<!s8i> loc(#loc27)
    %6 = cir.const #cir.int<256> : !s32i loc(#loc28)
    %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc144)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc29)
    %9 = cir.call @fgets(%5, %6, %8) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc30)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc31)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc31)
    %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc154)
    cir.brcond %12 ^bb7, ^bb8 loc(#loc155)
  ^bb7:  // pred: ^bb6
    %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 256>>), !cir.ptr<!s8i> loc(#loc35)
    %14 = cir.call @atof(%13) : (!cir.ptr<!s8i>) -> !cir.double side_effect(pure) extra(#fn_attr) loc(#loc36)
    cir.store %14, %1 : !cir.double, !cir.ptr<!cir.double> loc(#loc156)
    cir.br ^bb9 loc(#loc33)
  ^bb8:  // pred: ^bb6
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc39)
    cir.br ^bb9 loc(#loc26)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc26)
  ^bb10:  // pred: ^bb9
    %17 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc40)
    %18 = cir.cast(float_to_int, %17 : !cir.double), !s32i loc(#loc40)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc41)
    cir.br ^bb11 loc(#loc24)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc42)
  ^bb12:  // pred: ^bb2
    %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc12)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc12)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    cir.br ^bb13 loc(#loc44)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc20)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc14)
  } loc(#loc148)
  cir.func no_proto @CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc158)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc47)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc159)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc49)
    cir.return loc(#loc46)
  } loc(#loc157)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Value is too small or large to be represented as an int\00" : !cir.array<!s8i x 56>> : !cir.array<!s8i x 56> {alignment = 1 : i64} loc(#loc51)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 256>, !cir.ptr<!cir.array<!s8i x 256>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc161)
    %1 = cir.alloca !cir.double, !cir.ptr<!cir.double>, ["doubleNumber", init] {alignment = 8 : i64} loc(#loc162)
    cir.br ^bb1 loc(#loc163)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<5> : !s32i loc(#loc60)
    cir.br ^bb2 loc(#loc58)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %2 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc58)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc61)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc62)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    cir.br ^bb26 loc(#loc64)
  ^bb5:  // pred: ^bb2
    cir.br ^bb6 loc(#loc164)
  ^bb6:  // pred: ^bb5
    %5 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %6 = cir.cast(int_to_float, %5 : !s32i), !cir.double loc(#loc57)
    cir.store %6, %1 : !cir.double, !cir.ptr<!cir.double> loc(#loc162)
    cir.br ^bb7 loc(#loc165)
  ^bb7:  // pred: ^bb6
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 256>>), !cir.ptr<!s8i> loc(#loc69)
    %8 = cir.const #cir.int<256> : !s32i loc(#loc70)
    %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc144)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc71)
    %11 = cir.call @fgets(%7, %8, %10) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc72)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc73)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc73)
    %14 = cir.cmp(ne, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc166)
    cir.brcond %14 ^bb8, ^bb9 loc(#loc167)
  ^bb8:  // pred: ^bb7
    %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 256>>), !cir.ptr<!s8i> loc(#loc77)
    %16 = cir.call @atof(%15) : (!cir.ptr<!s8i>) -> !cir.double side_effect(pure) extra(#fn_attr) loc(#loc78)
    cir.store %16, %1 : !cir.double, !cir.ptr<!cir.double> loc(#loc168)
    cir.br ^bb10 loc(#loc75)
  ^bb9:  // pred: ^bb7
    %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc81)
    %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    cir.br ^bb10 loc(#loc68)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc68)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc169)
  ^bb12:  // pred: ^bb11
    %19 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc85)
    %20 = cir.const #cir.int<2147483647> : !s32i loc(#loc86)
    %21 = cir.cast(int_to_float, %20 : !s32i), !cir.double loc(#loc86)
    %22 = cir.cmp(gt, %19, %21) : !cir.double, !cir.bool loc(#loc170)
    cir.brcond %22 ^bb13, ^bb14 loc(#loc87)
  ^bb13:  // pred: ^bb12
    %23 = cir.const #true loc(#loc87)
    cir.br ^bb19(%23 : !cir.bool) loc(#loc87)
  ^bb14:  // pred: ^bb12
    %24 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc88)
    %25 = cir.const #cir.int<2147483647> : !s32i loc(#loc89)
    %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc89)
    %27 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc89)
    %29 = cir.cast(int_to_float, %28 : !s32i), !cir.double loc(#loc89)
    %30 = cir.cmp(lt, %24, %29) : !cir.double, !cir.bool loc(#loc171)
    cir.brcond %30 ^bb15, ^bb16 loc(#loc87)
  ^bb15:  // pred: ^bb14
    %31 = cir.const #true loc(#loc87)
    cir.br ^bb17(%31 : !cir.bool) loc(#loc87)
  ^bb16:  // pred: ^bb14
    %32 = cir.const #false loc(#loc87)
    cir.br ^bb17(%32 : !cir.bool) loc(#loc87)
  ^bb17(%33: !cir.bool loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":83:36)):  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc87)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19(%33 : !cir.bool) loc(#loc87)
  ^bb19(%34: !cir.bool loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":83:36)):  // 2 preds: ^bb13, ^bb18
    cir.br ^bb20 loc(#loc87)
  ^bb20:  // pred: ^bb19
    cir.brcond %34 ^bb21, ^bb22 loc(#loc172)
  ^bb21:  // pred: ^bb20
    %35 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 56>> loc(#loc51)
    %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 56>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    cir.br ^bb23 loc(#loc91)
  ^bb22:  // pred: ^bb20
    %37 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc94)
    %38 = cir.cast(float_to_int, %37 : !cir.double), !s32i loc(#loc94)
    cir.call @printIntLine(%38) : (!s32i) -> () loc(#loc95)
    cir.br ^bb23 loc(#loc84)
  ^bb23:  // 2 preds: ^bb21, ^bb22
    cir.br ^bb24 loc(#loc84)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc66)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc96)
  ^bb26:  // 2 preds: ^bb4, ^bb25
    cir.br ^bb27 loc(#loc59)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc53)
  } loc(#loc160)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 256>, !cir.ptr<!cir.array<!s8i x 256>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc174)
    %1 = cir.alloca !cir.double, !cir.ptr<!cir.double>, ["doubleNumber", init] {alignment = 8 : i64} loc(#loc175)
    cir.br ^bb1 loc(#loc176)
  ^bb1:  // pred: ^bb0
    %2 = cir.const #cir.int<6> : !s32i loc(#loc105)
    cir.br ^bb2 loc(#loc103)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %2 : !s32i, ^bb25 [
      6: ^bb4
    ] loc(#loc103)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc106)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc177)
  ^bb5:  // pred: ^bb4
    %3 = cir.const #cir.int<0> : !s32i loc(#loc102)
    %4 = cir.cast(int_to_float, %3 : !s32i), !cir.double loc(#loc102)
    cir.store %4, %1 : !cir.double, !cir.ptr<!cir.double> loc(#loc175)
    cir.br ^bb6 loc(#loc178)
  ^bb6:  // pred: ^bb5
    %5 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 256>>), !cir.ptr<!s8i> loc(#loc111)
    %6 = cir.const #cir.int<256> : !s32i loc(#loc112)
    %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc144)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc113)
    %9 = cir.call @fgets(%5, %6, %8) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc114)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc115)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc115)
    %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc179)
    cir.brcond %12 ^bb7, ^bb8 loc(#loc180)
  ^bb7:  // pred: ^bb6
    %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 256>>), !cir.ptr<!s8i> loc(#loc119)
    %14 = cir.call @atof(%13) : (!cir.ptr<!s8i>) -> !cir.double side_effect(pure) extra(#fn_attr) loc(#loc120)
    cir.store %14, %1 : !cir.double, !cir.ptr<!cir.double> loc(#loc181)
    cir.br ^bb9 loc(#loc117)
  ^bb8:  // pred: ^bb6
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc123)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc123)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    cir.br ^bb9 loc(#loc110)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc110)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc182)
  ^bb11:  // pred: ^bb10
    %17 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc127)
    %18 = cir.const #cir.int<2147483647> : !s32i loc(#loc128)
    %19 = cir.cast(int_to_float, %18 : !s32i), !cir.double loc(#loc128)
    %20 = cir.cmp(gt, %17, %19) : !cir.double, !cir.bool loc(#loc183)
    cir.brcond %20 ^bb12, ^bb13 loc(#loc129)
  ^bb12:  // pred: ^bb11
    %21 = cir.const #true loc(#loc129)
    cir.br ^bb18(%21 : !cir.bool) loc(#loc129)
  ^bb13:  // pred: ^bb11
    %22 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc130)
    %23 = cir.const #cir.int<2147483647> : !s32i loc(#loc131)
    %24 = cir.unary(minus, %23) nsw : !s32i, !s32i loc(#loc131)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc131)
    %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc131)
    %27 = cir.cast(int_to_float, %26 : !s32i), !cir.double loc(#loc131)
    %28 = cir.cmp(lt, %22, %27) : !cir.double, !cir.bool loc(#loc184)
    cir.brcond %28 ^bb14, ^bb15 loc(#loc129)
  ^bb14:  // pred: ^bb13
    %29 = cir.const #true loc(#loc129)
    cir.br ^bb16(%29 : !cir.bool) loc(#loc129)
  ^bb15:  // pred: ^bb13
    %30 = cir.const #false loc(#loc129)
    cir.br ^bb16(%30 : !cir.bool) loc(#loc129)
  ^bb16(%31: !cir.bool loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":120:36)):  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc129)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18(%31 : !cir.bool) loc(#loc129)
  ^bb18(%32: !cir.bool loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":120:36)):  // 2 preds: ^bb12, ^bb17
    cir.br ^bb19 loc(#loc129)
  ^bb19:  // pred: ^bb18
    cir.brcond %32 ^bb20, ^bb21 loc(#loc185)
  ^bb20:  // pred: ^bb19
    %33 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 56>> loc(#loc135)
    %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 56>>), !cir.ptr<!s8i> loc(#loc135)
    cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc136)
    cir.br ^bb22 loc(#loc133)
  ^bb21:  // pred: ^bb19
    %35 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc137)
    %36 = cir.cast(float_to_int, %35 : !cir.double), !s32i loc(#loc137)
    cir.call @printIntLine(%36) : (!s32i) -> () loc(#loc138)
    cir.br ^bb22 loc(#loc126)
  ^bb22:  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc126)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc108)
  ^bb24:  // pred: ^bb23
    cir.br ^bb26 loc(#loc139)
  ^bb25:  // pred: ^bb2
    %37 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc140)
    %38 = cir.cast(array_to_ptrdecay, %37 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc140)
    cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc141)
    cir.br ^bb26 loc(#loc142)
  ^bb26:  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc104)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc98)
  } loc(#loc173)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE681_Incorrect_Conversion_Between_Numeric_Types/CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":102:1)
#loc6 = loc("/usr/include/stdlib.h":103:33)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":38:23)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":46:19)
#loc13 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":22:1)
#loc14 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":49:1)
#loc15 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":28:9)
#loc16 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":28:41)
#loc17 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":29:9)
#loc18 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":29:31)
#loc19 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":24:5)
#loc20 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":48:5)
#loc21 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":24:12)
#loc22 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":26:5)
#loc23 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":27:5)
#loc24 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":42:5)
#loc25 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":31:9)
#loc26 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":39:9)
#loc27 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":31:19)
#loc28 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":31:32)
#loc29 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":31:49)
#loc30 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":31:13)
#loc31 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":31:59)
#loc32 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":32:9)
#loc33 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":35:9)
#loc34 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":37:9)
#loc35 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":34:33)
#loc36 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":34:28)
#loc37 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":34:13)
#loc38 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":34:44)
#loc39 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":38:13)
#loc40 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":41:27)
#loc41 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":41:9)
#loc42 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":43:5)
#loc43 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":46:9)
#loc44 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":47:9)
#loc45 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":137:1)
#loc46 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":141:1)
#loc47 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":139:5)
#loc48 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":139:11)
#loc49 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":140:5)
#loc50 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":140:11)
#loc51 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":85:23)
#loc52 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":56:1)
#loc53 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":94:1)
#loc54 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":66:9)
#loc55 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":66:41)
#loc56 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":67:9)
#loc57 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":67:31)
#loc58 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":58:5)
#loc59 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":93:5)
#loc60 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":58:12)
#loc61 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":60:5)
#loc62 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":62:19)
#loc63 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":62:9)
#loc64 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":63:9)
#loc65 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":65:5)
#loc66 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":91:5)
#loc67 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":73:9)
#loc68 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":81:9)
#loc69 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":73:19)
#loc70 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":73:32)
#loc71 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":73:49)
#loc72 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":73:13)
#loc73 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":73:59)
#loc74 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":74:9)
#loc75 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":77:9)
#loc76 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":79:9)
#loc77 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":76:33)
#loc78 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":76:28)
#loc79 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":76:13)
#loc80 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":76:44)
#loc81 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":80:23)
#loc82 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":80:13)
#loc83 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":83:9)
#loc84 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":90:9)
#loc85 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":83:13)
#loc86 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":83:28)
#loc88 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":83:39)
#loc89 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":83:54)
#loc90 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":84:9)
#loc91 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":86:9)
#loc92 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":88:9)
#loc93 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":85:13)
#loc94 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":89:31)
#loc95 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":89:13)
#loc96 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":92:5)
#loc97 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":97:1)
#loc98 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":135:1)
#loc99 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":103:9)
#loc100 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":103:41)
#loc101 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":104:9)
#loc102 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":104:31)
#loc103 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":99:5)
#loc104 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":134:5)
#loc105 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":99:12)
#loc106 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":101:5)
#loc107 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":102:5)
#loc108 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":128:5)
#loc109 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":110:9)
#loc110 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":118:9)
#loc111 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":110:19)
#loc112 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":110:32)
#loc113 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":110:49)
#loc114 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":110:13)
#loc115 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":110:59)
#loc116 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":111:9)
#loc117 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":114:9)
#loc118 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":116:9)
#loc119 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":113:33)
#loc120 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":113:28)
#loc121 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":113:13)
#loc122 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":113:44)
#loc123 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":117:23)
#loc124 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":117:13)
#loc125 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":120:9)
#loc126 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":127:9)
#loc127 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":120:13)
#loc128 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":120:28)
#loc130 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":120:39)
#loc131 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":120:54)
#loc132 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":121:9)
#loc133 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":123:9)
#loc134 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":125:9)
#loc135 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":122:23)
#loc136 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":122:13)
#loc137 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":126:31)
#loc138 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":126:13)
#loc139 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":129:5)
#loc140 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":132:19)
#loc141 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":132:9)
#loc142 = loc("CWE681_Incorrect_Conversion_Between_Numeric_Types__double2int_15.c":133:9)
#loc143 = loc(fused[#loc1, #loc2])
#loc144 = loc(fused[#loc3, #loc4])
#loc145 = loc(fused[#loc5, #loc6])
#loc146 = loc(fused[#loc7, #loc8])
#loc147 = loc(fused[#loc10, #loc11])
#loc148 = loc(fused[#loc13, #loc14])
#loc149 = loc(fused[#loc15, #loc16])
#loc150 = loc(fused[#loc17, #loc18])
#loc151 = loc(fused[#loc19, #loc20])
#loc152 = loc(fused[#loc23, #loc24])
#loc153 = loc(fused[#loc25, #loc26])
#loc154 = loc(fused[#loc30, #loc31])
#loc155 = loc(fused[#loc32, #loc33, #loc34, #loc26])
#loc156 = loc(fused[#loc37, #loc38])
#loc157 = loc(fused[#loc45, #loc46])
#loc158 = loc(fused[#loc47, #loc48])
#loc159 = loc(fused[#loc49, #loc50])
#loc160 = loc(fused[#loc52, #loc53])
#loc161 = loc(fused[#loc54, #loc55])
#loc162 = loc(fused[#loc56, #loc57])
#loc163 = loc(fused[#loc58, #loc59])
#loc164 = loc(fused[#loc65, #loc66])
#loc165 = loc(fused[#loc67, #loc68])
#loc166 = loc(fused[#loc72, #loc73])
#loc167 = loc(fused[#loc74, #loc75, #loc76, #loc68])
#loc168 = loc(fused[#loc79, #loc80])
#loc169 = loc(fused[#loc83, #loc84])
#loc170 = loc(fused[#loc85, #loc86])
#loc171 = loc(fused[#loc88, #loc89])
#loc172 = loc(fused[#loc90, #loc91, #loc92, #loc84])
#loc173 = loc(fused[#loc97, #loc98])
#loc174 = loc(fused[#loc99, #loc100])
#loc175 = loc(fused[#loc101, #loc102])
#loc176 = loc(fused[#loc103, #loc104])
#loc177 = loc(fused[#loc107, #loc108])
#loc178 = loc(fused[#loc109, #loc110])
#loc179 = loc(fused[#loc114, #loc115])
#loc180 = loc(fused[#loc116, #loc117, #loc118, #loc110])
#loc181 = loc(fused[#loc121, #loc122])
#loc182 = loc(fused[#loc125, #loc126])
#loc183 = loc(fused[#loc127, #loc128])
#loc184 = loc(fused[#loc130, #loc131])
#loc185 = loc(fused[#loc132, #loc133, #loc134, #loc126])
