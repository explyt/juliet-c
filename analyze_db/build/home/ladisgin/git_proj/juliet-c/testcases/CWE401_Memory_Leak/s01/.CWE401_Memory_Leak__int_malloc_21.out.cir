!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc11 = loc("CWE401_Memory_Leak__int_malloc_21.c":27:21)
#loc12 = loc("CWE401_Memory_Leak__int_malloc_21.c":27:27)
#loc70 = loc("CWE401_Memory_Leak__int_malloc_21.c":151:10)
#loc71 = loc("CWE401_Memory_Leak__int_malloc_21.c":151:14)
#loc72 = loc("CWE401_Memory_Leak__int_malloc_21.c":151:20)
#loc73 = loc("CWE401_Memory_Leak__int_malloc_21.c":151:32)
#loc95 = loc("CWE401_Memory_Leak__int_malloc_21.c":60:26)
#loc96 = loc("CWE401_Memory_Leak__int_malloc_21.c":60:32)
#loc143 = loc("CWE401_Memory_Leak__int_malloc_21.c":89:26)
#loc144 = loc("CWE401_Memory_Leak__int_malloc_21.c":89:32)
#loc188 = loc("CWE401_Memory_Leak__int_malloc_21.c":113:25)
#loc189 = loc("CWE401_Memory_Leak__int_malloc_21.c":113:31)
#loc220 = loc(fused[#loc11, #loc12])
#loc243 = loc(fused[#loc70, #loc71])
#loc244 = loc(fused[#loc72, #loc73])
#loc251 = loc(fused[#loc95, #loc96])
#loc268 = loc(fused[#loc143, #loc144])
#loc285 = loc(fused[#loc188, #loc189])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc215)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc216)
  cir.func private @printIntLine(!s32i) loc(#loc217)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc218)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc11, #loc12])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc220)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc13)
    cir.br ^bb1 loc(#loc221)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc218)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc16)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc16)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc222)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc15)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc15)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc10)
  } loc(#loc219)
  cir.func no_proto @CWE401_Memory_Leak__int_malloc_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc224)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc22)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc225)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc24)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc25)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc25)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc226)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc227)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc24)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc228)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc229)
    cir.br ^bb1 loc(#loc230)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc32)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc33)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc33)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s32i>, !cir.bool loc(#loc231)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc232)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc35)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc37)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc35)
    cir.br ^bb3 loc(#loc31)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc31)
  ^bb4:  // pred: ^bb3
    %16 = cir.const #cir.int<5> : !s32i loc(#loc38)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc39)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc41)
    cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc233)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc42)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc43)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc44)
    %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc42)
    cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc45)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc46)
    %25 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc218)
    cir.store %24, %25 : !s32i, !cir.ptr<!s32i> loc(#loc234)
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc48)
    cir.call @badSink(%26) : (!cir.ptr<!s32i>) -> () loc(#loc49)
    cir.return loc(#loc19)
  } loc(#loc223)
  cir.func no_proto @CWE401_Memory_Leak__int_malloc_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc236)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc52)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc237)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc238)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc56)
    cir.return loc(#loc51)
  } loc(#loc235)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc239)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc240)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc241)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc67)
  cir.func @main(%arg0: !s32i loc(fused[#loc70, #loc71]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc72, #loc73])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc243)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc244)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc69)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc74)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc74)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc75)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc76)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc76)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc77)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc64)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %8 = cir.get_global @CWE401_Memory_Leak__int_malloc_21_good : !cir.ptr<!cir.func<!void ()>> loc(#loc245)
    cir.call @CWE401_Memory_Leak__int_malloc_21_good() : () -> () loc(#loc79)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc65)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc66)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %13 = cir.get_global @CWE401_Memory_Leak__int_malloc_21_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc246)
    cir.call @CWE401_Memory_Leak__int_malloc_21_bad() : () -> () loc(#loc83)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc67)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc86)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc247)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc247)
    cir.return %17 : !s32i loc(#loc247)
  } loc(#loc242)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc248)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc90)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc249)
  cir.func internal private @goodB2G1Sink(%arg0: !cir.ptr<!s32i> loc(fused[#loc95, #loc96])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc251)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc97)
    cir.br ^bb1 loc(#loc252)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc248)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc100)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc253)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc90)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc90)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    cir.br ^bb4 loc(#loc102)
  ^bb3:  // pred: ^bb1
    %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc105)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc106)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc106)
    cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc105)
    cir.br ^bb4 loc(#loc99)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc99)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc94)
  } loc(#loc250)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc255)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc111)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc256)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc113)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc114)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc114)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc257)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc258)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc113)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc259)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc260)
    cir.br ^bb1 loc(#loc261)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc121)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc122)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc122)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s32i>, !cir.bool loc(#loc262)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc263)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc124)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc125)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc126)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc124)
    cir.br ^bb3 loc(#loc120)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc120)
  ^bb4:  // pred: ^bb3
    %16 = cir.const #cir.int<5> : !s32i loc(#loc127)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc128)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc129)
    %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc130)
    cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc264)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc131)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc132)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc133)
    %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc131)
    cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc134)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc135)
    %25 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc248)
    cir.store %24, %25 : !s32i, !cir.ptr<!s32i> loc(#loc265)
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc137)
    cir.call @goodB2G1Sink(%26) : (!cir.ptr<!s32i>) -> () loc(#loc138)
    cir.return loc(#loc108)
  } loc(#loc254)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc266)
  cir.func internal private @goodB2G2Sink(%arg0: !cir.ptr<!s32i> loc(fused[#loc143, #loc144])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc268)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc145)
    cir.br ^bb1 loc(#loc269)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc266)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc148)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc148)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc270)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc150)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc151)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc151)
    cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc150)
    cir.br ^bb3 loc(#loc147)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc147)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc142)
  } loc(#loc267)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc272)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc156)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc273)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc158)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc159)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc159)
    %5 = cir.const #cir.int<4> : !u64i loc(#loc274)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc275)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc158)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc276)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc277)
    cir.br ^bb1 loc(#loc278)
  ^bb1:  // pred: ^bb0
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc166)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc167)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc167)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s32i>, !cir.bool loc(#loc279)
    cir.brcond %12 ^bb2, ^bb3 loc(#loc280)
  ^bb2:  // pred: ^bb1
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc169)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc170)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc171)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc169)
    cir.br ^bb3 loc(#loc165)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc165)
  ^bb4:  // pred: ^bb3
    %16 = cir.const #cir.int<5> : !s32i loc(#loc172)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc173)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc174)
    %19 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc175)
    cir.store %16, %19 : !s32i, !cir.ptr<!s32i> loc(#loc281)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc176)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc177)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !s32i), !cir.ptr<!s32i> loc(#loc178)
    %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc176)
    cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc179)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc180)
    %25 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc266)
    cir.store %24, %25 : !s32i, !cir.ptr<!s32i> loc(#loc282)
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc182)
    cir.call @goodB2G2Sink(%26) : (!cir.ptr<!s32i>) -> () loc(#loc183)
    cir.return loc(#loc153)
  } loc(#loc271)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc283)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc188, #loc189])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc285)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc190)
    cir.br ^bb1 loc(#loc286)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc283)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc193)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc193)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc287)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc192)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc192)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc187)
  } loc(#loc284)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc289)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc199)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc290)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc201)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc201)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc201)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc201)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc201)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc201)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc201)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc291)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc203)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc204)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc205)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc206)
    cir.store %9, %12 : !s32i, !cir.ptr<!s32i> loc(#loc292)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc207)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc208)
    %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc209)
    %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc207)
    cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc210)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc211)
    %18 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc283)
    cir.store %17, %18 : !s32i, !cir.ptr<!s32i> loc(#loc293)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc213)
    cir.call @goodG2BSink(%19) : (!cir.ptr<!s32i>) -> () loc(#loc214)
    cir.return loc(#loc196)
  } loc(#loc288)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_malloc_21.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("CWE401_Memory_Leak__int_malloc_21.c":25:1)
#loc8 = loc("CWE401_Memory_Leak__int_malloc_21.c":25:24)
#loc9 = loc("CWE401_Memory_Leak__int_malloc_21.c":27:1)
#loc10 = loc("CWE401_Memory_Leak__int_malloc_21.c":34:1)
#loc13 = loc("CWE401_Memory_Leak__int_malloc_21.c":28:1)
#loc14 = loc("CWE401_Memory_Leak__int_malloc_21.c":29:5)
#loc15 = loc("CWE401_Memory_Leak__int_malloc_21.c":33:5)
#loc16 = loc("CWE401_Memory_Leak__int_malloc_21.c":29:8)
#loc17 = loc("CWE401_Memory_Leak__int_malloc_21.c":30:5)
#loc18 = loc("CWE401_Memory_Leak__int_malloc_21.c":36:1)
#loc19 = loc("CWE401_Memory_Leak__int_malloc_21.c":48:1)
#loc20 = loc("CWE401_Memory_Leak__int_malloc_21.c":38:5)
#loc21 = loc("CWE401_Memory_Leak__int_malloc_21.c":38:11)
#loc22 = loc("CWE401_Memory_Leak__int_malloc_21.c":39:12)
#loc23 = loc("CWE401_Memory_Leak__int_malloc_21.c":39:5)
#loc24 = loc("CWE401_Memory_Leak__int_malloc_21.c":41:19)
#loc25 = loc("CWE401_Memory_Leak__int_malloc_21.c":41:26)
#loc26 = loc("CWE401_Memory_Leak__int_malloc_21.c":41:30)
#loc27 = loc("CWE401_Memory_Leak__int_malloc_21.c":41:40)
#loc28 = loc("CWE401_Memory_Leak__int_malloc_21.c":41:41)
#loc29 = loc("CWE401_Memory_Leak__int_malloc_21.c":41:5)
#loc30 = loc("CWE401_Memory_Leak__int_malloc_21.c":42:5)
#loc31 = loc("CWE401_Memory_Leak__int_malloc_21.c":42:33)
#loc32 = loc("CWE401_Memory_Leak__int_malloc_21.c":42:9)
#loc33 = loc("CWE401_Memory_Leak__int_malloc_21.c":42:17)
#loc34 = loc("CWE401_Memory_Leak__int_malloc_21.c":42:23)
#loc35 = loc("CWE401_Memory_Leak__int_malloc_21.c":42:24)
#loc36 = loc("CWE401_Memory_Leak__int_malloc_21.c":42:30)
#loc37 = loc("CWE401_Memory_Leak__int_malloc_21.c":42:29)
#loc38 = loc("CWE401_Memory_Leak__int_malloc_21.c":44:15)
#loc39 = loc("CWE401_Memory_Leak__int_malloc_21.c":44:5)
#loc40 = loc("CWE401_Memory_Leak__int_malloc_21.c":44:10)
#loc41 = loc("CWE401_Memory_Leak__int_malloc_21.c":44:11)
#loc42 = loc("CWE401_Memory_Leak__int_malloc_21.c":45:18)
#loc43 = loc("CWE401_Memory_Leak__int_malloc_21.c":45:23)
#loc44 = loc("CWE401_Memory_Leak__int_malloc_21.c":45:24)
#loc45 = loc("CWE401_Memory_Leak__int_malloc_21.c":45:5)
#loc46 = loc("CWE401_Memory_Leak__int_malloc_21.c":46:17)
#loc47 = loc("CWE401_Memory_Leak__int_malloc_21.c":46:5)
#loc48 = loc("CWE401_Memory_Leak__int_malloc_21.c":47:13)
#loc49 = loc("CWE401_Memory_Leak__int_malloc_21.c":47:5)
#loc50 = loc("CWE401_Memory_Leak__int_malloc_21.c":135:1)
#loc51 = loc("CWE401_Memory_Leak__int_malloc_21.c":140:1)
#loc52 = loc("CWE401_Memory_Leak__int_malloc_21.c":137:5)
#loc53 = loc("CWE401_Memory_Leak__int_malloc_21.c":137:14)
#loc54 = loc("CWE401_Memory_Leak__int_malloc_21.c":138:5)
#loc55 = loc("CWE401_Memory_Leak__int_malloc_21.c":138:14)
#loc56 = loc("CWE401_Memory_Leak__int_malloc_21.c":139:5)
#loc57 = loc("CWE401_Memory_Leak__int_malloc_21.c":139:13)
#loc58 = loc("/usr/include/stdlib.h":575:1)
#loc59 = loc("/usr/include/stdlib.h":575:41)
#loc60 = loc("/usr/include/time.h":76:1)
#loc61 = loc("/usr/include/time.h":76:38)
#loc62 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc63 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc64 = loc("CWE401_Memory_Leak__int_malloc_21.c":156:15)
#loc65 = loc("CWE401_Memory_Leak__int_malloc_21.c":158:15)
#loc66 = loc("CWE401_Memory_Leak__int_malloc_21.c":161:15)
#loc67 = loc("CWE401_Memory_Leak__int_malloc_21.c":163:15)
#loc68 = loc("CWE401_Memory_Leak__int_malloc_21.c":151:1)
#loc69 = loc("CWE401_Memory_Leak__int_malloc_21.c":166:1)
#loc74 = loc("CWE401_Memory_Leak__int_malloc_21.c":152:1)
#loc75 = loc("CWE401_Memory_Leak__int_malloc_21.c":154:27)
#loc76 = loc("CWE401_Memory_Leak__int_malloc_21.c":154:22)
#loc77 = loc("CWE401_Memory_Leak__int_malloc_21.c":154:5)
#loc78 = loc("CWE401_Memory_Leak__int_malloc_21.c":156:5)
#loc79 = loc("CWE401_Memory_Leak__int_malloc_21.c":157:5)
#loc80 = loc("CWE401_Memory_Leak__int_malloc_21.c":157:44)
#loc81 = loc("CWE401_Memory_Leak__int_malloc_21.c":158:5)
#loc82 = loc("CWE401_Memory_Leak__int_malloc_21.c":161:5)
#loc83 = loc("CWE401_Memory_Leak__int_malloc_21.c":162:5)
#loc84 = loc("CWE401_Memory_Leak__int_malloc_21.c":162:43)
#loc85 = loc("CWE401_Memory_Leak__int_malloc_21.c":163:5)
#loc86 = loc("CWE401_Memory_Leak__int_malloc_21.c":165:12)
#loc87 = loc("CWE401_Memory_Leak__int_malloc_21.c":165:5)
#loc88 = loc("CWE401_Memory_Leak__int_malloc_21.c":55:1)
#loc89 = loc("CWE401_Memory_Leak__int_malloc_21.c":55:29)
#loc90 = loc("CWE401_Memory_Leak__int_malloc_21.c":65:19)
#loc91 = loc("/usr/include/stdlib.h":687:1)
#loc92 = loc("/usr/include/stdlib.h":687:32)
#loc93 = loc("CWE401_Memory_Leak__int_malloc_21.c":60:1)
#loc94 = loc("CWE401_Memory_Leak__int_malloc_21.c":72:1)
#loc97 = loc("CWE401_Memory_Leak__int_malloc_21.c":61:1)
#loc98 = loc("CWE401_Memory_Leak__int_malloc_21.c":62:5)
#loc99 = loc("CWE401_Memory_Leak__int_malloc_21.c":71:5)
#loc100 = loc("CWE401_Memory_Leak__int_malloc_21.c":62:8)
#loc101 = loc("CWE401_Memory_Leak__int_malloc_21.c":63:5)
#loc102 = loc("CWE401_Memory_Leak__int_malloc_21.c":66:5)
#loc103 = loc("CWE401_Memory_Leak__int_malloc_21.c":68:5)
#loc104 = loc("CWE401_Memory_Leak__int_malloc_21.c":65:9)
#loc105 = loc("CWE401_Memory_Leak__int_malloc_21.c":70:9)
#loc106 = loc("CWE401_Memory_Leak__int_malloc_21.c":70:14)
#loc107 = loc("CWE401_Memory_Leak__int_malloc_21.c":74:1)
#loc108 = loc("CWE401_Memory_Leak__int_malloc_21.c":86:1)
#loc109 = loc("CWE401_Memory_Leak__int_malloc_21.c":76:5)
#loc110 = loc("CWE401_Memory_Leak__int_malloc_21.c":76:11)
#loc111 = loc("CWE401_Memory_Leak__int_malloc_21.c":77:12)
#loc112 = loc("CWE401_Memory_Leak__int_malloc_21.c":77:5)
#loc113 = loc("CWE401_Memory_Leak__int_malloc_21.c":79:19)
#loc114 = loc("CWE401_Memory_Leak__int_malloc_21.c":79:26)
#loc115 = loc("CWE401_Memory_Leak__int_malloc_21.c":79:30)
#loc116 = loc("CWE401_Memory_Leak__int_malloc_21.c":79:40)
#loc117 = loc("CWE401_Memory_Leak__int_malloc_21.c":79:41)
#loc118 = loc("CWE401_Memory_Leak__int_malloc_21.c":79:5)
#loc119 = loc("CWE401_Memory_Leak__int_malloc_21.c":80:5)
#loc120 = loc("CWE401_Memory_Leak__int_malloc_21.c":80:33)
#loc121 = loc("CWE401_Memory_Leak__int_malloc_21.c":80:9)
#loc122 = loc("CWE401_Memory_Leak__int_malloc_21.c":80:17)
#loc123 = loc("CWE401_Memory_Leak__int_malloc_21.c":80:23)
#loc124 = loc("CWE401_Memory_Leak__int_malloc_21.c":80:24)
#loc125 = loc("CWE401_Memory_Leak__int_malloc_21.c":80:30)
#loc126 = loc("CWE401_Memory_Leak__int_malloc_21.c":80:29)
#loc127 = loc("CWE401_Memory_Leak__int_malloc_21.c":82:15)
#loc128 = loc("CWE401_Memory_Leak__int_malloc_21.c":82:5)
#loc129 = loc("CWE401_Memory_Leak__int_malloc_21.c":82:10)
#loc130 = loc("CWE401_Memory_Leak__int_malloc_21.c":82:11)
#loc131 = loc("CWE401_Memory_Leak__int_malloc_21.c":83:18)
#loc132 = loc("CWE401_Memory_Leak__int_malloc_21.c":83:23)
#loc133 = loc("CWE401_Memory_Leak__int_malloc_21.c":83:24)
#loc134 = loc("CWE401_Memory_Leak__int_malloc_21.c":83:5)
#loc135 = loc("CWE401_Memory_Leak__int_malloc_21.c":84:22)
#loc136 = loc("CWE401_Memory_Leak__int_malloc_21.c":84:5)
#loc137 = loc("CWE401_Memory_Leak__int_malloc_21.c":85:18)
#loc138 = loc("CWE401_Memory_Leak__int_malloc_21.c":85:5)
#loc139 = loc("CWE401_Memory_Leak__int_malloc_21.c":56:1)
#loc140 = loc("CWE401_Memory_Leak__int_malloc_21.c":56:29)
#loc141 = loc("CWE401_Memory_Leak__int_malloc_21.c":89:1)
#loc142 = loc("CWE401_Memory_Leak__int_malloc_21.c":96:1)
#loc145 = loc("CWE401_Memory_Leak__int_malloc_21.c":90:1)
#loc146 = loc("CWE401_Memory_Leak__int_malloc_21.c":91:5)
#loc147 = loc("CWE401_Memory_Leak__int_malloc_21.c":95:5)
#loc148 = loc("CWE401_Memory_Leak__int_malloc_21.c":91:8)
#loc149 = loc("CWE401_Memory_Leak__int_malloc_21.c":92:5)
#loc150 = loc("CWE401_Memory_Leak__int_malloc_21.c":94:9)
#loc151 = loc("CWE401_Memory_Leak__int_malloc_21.c":94:14)
#loc152 = loc("CWE401_Memory_Leak__int_malloc_21.c":98:1)
#loc153 = loc("CWE401_Memory_Leak__int_malloc_21.c":110:1)
#loc154 = loc("CWE401_Memory_Leak__int_malloc_21.c":100:5)
#loc155 = loc("CWE401_Memory_Leak__int_malloc_21.c":100:11)
#loc156 = loc("CWE401_Memory_Leak__int_malloc_21.c":101:12)
#loc157 = loc("CWE401_Memory_Leak__int_malloc_21.c":101:5)
#loc158 = loc("CWE401_Memory_Leak__int_malloc_21.c":103:19)
#loc159 = loc("CWE401_Memory_Leak__int_malloc_21.c":103:26)
#loc160 = loc("CWE401_Memory_Leak__int_malloc_21.c":103:30)
#loc161 = loc("CWE401_Memory_Leak__int_malloc_21.c":103:40)
#loc162 = loc("CWE401_Memory_Leak__int_malloc_21.c":103:41)
#loc163 = loc("CWE401_Memory_Leak__int_malloc_21.c":103:5)
#loc164 = loc("CWE401_Memory_Leak__int_malloc_21.c":104:5)
#loc165 = loc("CWE401_Memory_Leak__int_malloc_21.c":104:33)
#loc166 = loc("CWE401_Memory_Leak__int_malloc_21.c":104:9)
#loc167 = loc("CWE401_Memory_Leak__int_malloc_21.c":104:17)
#loc168 = loc("CWE401_Memory_Leak__int_malloc_21.c":104:23)
#loc169 = loc("CWE401_Memory_Leak__int_malloc_21.c":104:24)
#loc170 = loc("CWE401_Memory_Leak__int_malloc_21.c":104:30)
#loc171 = loc("CWE401_Memory_Leak__int_malloc_21.c":104:29)
#loc172 = loc("CWE401_Memory_Leak__int_malloc_21.c":106:15)
#loc173 = loc("CWE401_Memory_Leak__int_malloc_21.c":106:5)
#loc174 = loc("CWE401_Memory_Leak__int_malloc_21.c":106:10)
#loc175 = loc("CWE401_Memory_Leak__int_malloc_21.c":106:11)
#loc176 = loc("CWE401_Memory_Leak__int_malloc_21.c":107:18)
#loc177 = loc("CWE401_Memory_Leak__int_malloc_21.c":107:23)
#loc178 = loc("CWE401_Memory_Leak__int_malloc_21.c":107:24)
#loc179 = loc("CWE401_Memory_Leak__int_malloc_21.c":107:5)
#loc180 = loc("CWE401_Memory_Leak__int_malloc_21.c":108:22)
#loc181 = loc("CWE401_Memory_Leak__int_malloc_21.c":108:5)
#loc182 = loc("CWE401_Memory_Leak__int_malloc_21.c":109:18)
#loc183 = loc("CWE401_Memory_Leak__int_malloc_21.c":109:5)
#loc184 = loc("CWE401_Memory_Leak__int_malloc_21.c":57:1)
#loc185 = loc("CWE401_Memory_Leak__int_malloc_21.c":57:28)
#loc186 = loc("CWE401_Memory_Leak__int_malloc_21.c":113:1)
#loc187 = loc("CWE401_Memory_Leak__int_malloc_21.c":120:1)
#loc190 = loc("CWE401_Memory_Leak__int_malloc_21.c":114:1)
#loc191 = loc("CWE401_Memory_Leak__int_malloc_21.c":115:5)
#loc192 = loc("CWE401_Memory_Leak__int_malloc_21.c":119:5)
#loc193 = loc("CWE401_Memory_Leak__int_malloc_21.c":115:8)
#loc194 = loc("CWE401_Memory_Leak__int_malloc_21.c":116:5)
#loc195 = loc("CWE401_Memory_Leak__int_malloc_21.c":122:1)
#loc196 = loc("CWE401_Memory_Leak__int_malloc_21.c":133:1)
#loc197 = loc("CWE401_Memory_Leak__int_malloc_21.c":124:5)
#loc198 = loc("CWE401_Memory_Leak__int_malloc_21.c":124:11)
#loc199 = loc("CWE401_Memory_Leak__int_malloc_21.c":125:12)
#loc200 = loc("CWE401_Memory_Leak__int_malloc_21.c":125:5)
#loc201 = loc("CWE401_Memory_Leak__int_malloc_21.c":127:19)
#loc202 = loc("CWE401_Memory_Leak__int_malloc_21.c":127:5)
#loc203 = loc("CWE401_Memory_Leak__int_malloc_21.c":129:15)
#loc204 = loc("CWE401_Memory_Leak__int_malloc_21.c":129:5)
#loc205 = loc("CWE401_Memory_Leak__int_malloc_21.c":129:10)
#loc206 = loc("CWE401_Memory_Leak__int_malloc_21.c":129:11)
#loc207 = loc("CWE401_Memory_Leak__int_malloc_21.c":130:18)
#loc208 = loc("CWE401_Memory_Leak__int_malloc_21.c":130:23)
#loc209 = loc("CWE401_Memory_Leak__int_malloc_21.c":130:24)
#loc210 = loc("CWE401_Memory_Leak__int_malloc_21.c":130:5)
#loc211 = loc("CWE401_Memory_Leak__int_malloc_21.c":131:21)
#loc212 = loc("CWE401_Memory_Leak__int_malloc_21.c":131:5)
#loc213 = loc("CWE401_Memory_Leak__int_malloc_21.c":132:17)
#loc214 = loc("CWE401_Memory_Leak__int_malloc_21.c":132:5)
#loc215 = loc(fused[#loc1, #loc2])
#loc216 = loc(fused[#loc3, #loc4])
#loc217 = loc(fused[#loc5, #loc6])
#loc218 = loc(fused[#loc7, #loc8])
#loc219 = loc(fused[#loc9, #loc10])
#loc221 = loc(fused[#loc14, #loc15])
#loc222 = loc(fused[#loc17, #loc15])
#loc223 = loc(fused[#loc18, #loc19])
#loc224 = loc(fused[#loc20, #loc21])
#loc225 = loc(fused[#loc23, #loc22])
#loc226 = loc(fused[#loc26, #loc27])
#loc227 = loc(fused[#loc25, #loc27])
#loc228 = loc(fused[#loc24, #loc28])
#loc229 = loc(fused[#loc29, #loc28])
#loc230 = loc(fused[#loc30, #loc31])
#loc231 = loc(fused[#loc32, #loc33])
#loc232 = loc(fused[#loc34, #loc31])
#loc233 = loc(fused[#loc39, #loc38])
#loc234 = loc(fused[#loc47, #loc46])
#loc235 = loc(fused[#loc50, #loc51])
#loc236 = loc(fused[#loc52, #loc53])
#loc237 = loc(fused[#loc54, #loc55])
#loc238 = loc(fused[#loc56, #loc57])
#loc239 = loc(fused[#loc58, #loc59])
#loc240 = loc(fused[#loc60, #loc61])
#loc241 = loc(fused[#loc62, #loc63])
#loc242 = loc(fused[#loc68, #loc69])
#loc245 = loc(fused[#loc79, #loc80])
#loc246 = loc(fused[#loc83, #loc84])
#loc247 = loc(fused[#loc87, #loc86])
#loc248 = loc(fused[#loc88, #loc89])
#loc249 = loc(fused[#loc91, #loc92])
#loc250 = loc(fused[#loc93, #loc94])
#loc252 = loc(fused[#loc98, #loc99])
#loc253 = loc(fused[#loc101, #loc102, #loc103, #loc99])
#loc254 = loc(fused[#loc107, #loc108])
#loc255 = loc(fused[#loc109, #loc110])
#loc256 = loc(fused[#loc112, #loc111])
#loc257 = loc(fused[#loc115, #loc116])
#loc258 = loc(fused[#loc114, #loc116])
#loc259 = loc(fused[#loc113, #loc117])
#loc260 = loc(fused[#loc118, #loc117])
#loc261 = loc(fused[#loc119, #loc120])
#loc262 = loc(fused[#loc121, #loc122])
#loc263 = loc(fused[#loc123, #loc120])
#loc264 = loc(fused[#loc128, #loc127])
#loc265 = loc(fused[#loc136, #loc135])
#loc266 = loc(fused[#loc139, #loc140])
#loc267 = loc(fused[#loc141, #loc142])
#loc269 = loc(fused[#loc146, #loc147])
#loc270 = loc(fused[#loc149, #loc147])
#loc271 = loc(fused[#loc152, #loc153])
#loc272 = loc(fused[#loc154, #loc155])
#loc273 = loc(fused[#loc157, #loc156])
#loc274 = loc(fused[#loc160, #loc161])
#loc275 = loc(fused[#loc159, #loc161])
#loc276 = loc(fused[#loc158, #loc162])
#loc277 = loc(fused[#loc163, #loc162])
#loc278 = loc(fused[#loc164, #loc165])
#loc279 = loc(fused[#loc166, #loc167])
#loc280 = loc(fused[#loc168, #loc165])
#loc281 = loc(fused[#loc173, #loc172])
#loc282 = loc(fused[#loc181, #loc180])
#loc283 = loc(fused[#loc184, #loc185])
#loc284 = loc(fused[#loc186, #loc187])
#loc286 = loc(fused[#loc191, #loc192])
#loc287 = loc(fused[#loc194, #loc192])
#loc288 = loc(fused[#loc195, #loc196])
#loc289 = loc(fused[#loc197, #loc198])
#loc290 = loc(fused[#loc200, #loc199])
#loc291 = loc(fused[#loc202, #loc201])
#loc292 = loc(fused[#loc204, #loc203])
#loc293 = loc(fused[#loc212, #loc211])
