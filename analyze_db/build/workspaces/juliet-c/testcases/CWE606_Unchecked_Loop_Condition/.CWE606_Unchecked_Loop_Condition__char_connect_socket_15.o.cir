!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc696)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc697)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc698)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc699)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc700)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc701)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc702)
  cir.func private @close(!s32i) -> !s32i loc(#loc703)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc704)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc20)
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc705)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc23)
  cir.func private @printIntLine(!s32i) loc(#loc706)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_connect_socket_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc708)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc709)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc709)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc709)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc32)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc710)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc36)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc713)
            %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc714)
            %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc715)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc716)
            %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc717)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc47)
            %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc47)
            cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc716)
            %12 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc50)
            %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
            %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc50)
            cir.store %14, %9 : !u64i, !cir.ptr<!u64i> loc(#loc717)
            cir.scope {
              cir.do {
                cir.scope {
                  %15 = cir.const #cir.int<2> : !s32i loc(#loc56)
                  %16 = cir.const #cir.int<1> : !s32i loc(#loc57)
                  %17 = cir.const #cir.int<6> : !s32i loc(#loc58)
                  %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc59)
                  cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc720)
                  cir.scope {
                    %69 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc64)
                    %70 = cir.const #cir.int<1> : !s32i loc(#loc65)
                    %71 = cir.unary(minus, %70) nsw : !s32i, !s32i loc(#loc65)
                    %72 = cir.cmp(eq, %69, %71) : !s32i, !cir.bool loc(#loc722)
                    cir.if %72 {
                      cir.break loc(#loc67)
                    } loc(#loc723)
                  } loc(#loc721)
                  %19 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc724)
                  %20 = cir.const #cir.int<0> : !s32i loc(#loc70)
                  %21 = cir.const #cir.int<16> : !u64i loc(#loc725)
                  cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc726)
                  %22 = cir.const #cir.int<2> : !s32i loc(#loc75)
                  %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc75)
                  %24 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
                  cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc727)
                  %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
                  %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
                  %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc78)
                  %28 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc79)
                  %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc80)
                  cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc728)
                  %30 = cir.const #cir.int<27015> : !s32i loc(#loc83)
                  %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc83)
                  %32 = cir.call @htons(%31) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc84)
                  %33 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
                  cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc729)
                  cir.scope {
                    %69 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc90)
                    %70 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc731)
                    %71 = cir.const #cir.int<16> : !u64i loc(#loc732)
                    %72 = cir.cast(integral, %71 : !u64i), !u32i loc(#loc732)
                    %73 = cir.call @connect(%69, %70, %72) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc95)
                    %74 = cir.const #cir.int<1> : !s32i loc(#loc96)
                    %75 = cir.unary(minus, %74) nsw : !s32i, !s32i loc(#loc96)
                    %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc733)
                    cir.if %76 {
                      cir.break loc(#loc98)
                    } loc(#loc734)
                  } loc(#loc730)
                  %34 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc99)
                  %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
                  %36 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc101)
                  %37 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %36 : !u64i), !cir.ptr<!s8i> loc(#loc102)
                  %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc735)
                  %39 = cir.const #cir.int<1> : !u64i loc(#loc736)
                  %40 = cir.const #cir.int<100> : !s32i loc(#loc107)
                  %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc107)
                  %42 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc108)
                  %43 = cir.binop(sub, %41, %42) : !u64i loc(#loc737)
                  %44 = cir.const #cir.int<1> : !s32i loc(#loc109)
                  %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc109)
                  %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc738)
                  %47 = cir.binop(mul, %39, %46) : !u64i loc(#loc739)
                  %48 = cir.const #cir.int<0> : !s32i loc(#loc111)
                  %49 = cir.call @recv(%34, %38, %47, %48) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc112)
                  %50 = cir.cast(integral, %49 : !s64i), !s32i loc(#loc112)
                  cir.store %50, %5 : !s32i, !cir.ptr<!s32i> loc(#loc740)
                  cir.scope {
                    %69 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc117)
                    %70 = cir.const #cir.int<1> : !s32i loc(#loc118)
                    %71 = cir.unary(minus, %70) nsw : !s32i, !s32i loc(#loc118)
                    %72 = cir.cmp(eq, %69, %71) : !s32i, !cir.bool loc(#loc742)
                    %73 = cir.ternary(%72, true {
                      %74 = cir.const #true loc(#loc119)
                      cir.yield %74 : !cir.bool loc(#loc119)
                    }, false {
                      %74 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc120)
                      %75 = cir.const #cir.int<0> : !s32i loc(#loc121)
                      %76 = cir.cmp(eq, %74, %75) : !s32i, !cir.bool loc(#loc743)
                      %77 = cir.ternary(%76, true {
                        %78 = cir.const #true loc(#loc119)
                        cir.yield %78 : !cir.bool loc(#loc119)
                      }, false {
                        %78 = cir.const #false loc(#loc119)
                        cir.yield %78 : !cir.bool loc(#loc119)
                      }) : (!cir.bool) -> !cir.bool loc(#loc119)
                      cir.yield %77 : !cir.bool loc(#loc119)
                    }) : (!cir.bool) -> !cir.bool loc(#loc119)
                    cir.if %73 {
                      cir.break loc(#loc123)
                    } loc(#loc744)
                  } loc(#loc741)
                  %51 = cir.const #cir.int<0> : !s32i loc(#loc124)
                  %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc124)
                  %53 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc125)
                  %54 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc126)
                  %55 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc127)
                  %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc127)
                  %57 = cir.const #cir.int<1> : !u64i loc(#loc745)
                  %58 = cir.binop(div, %56, %57) : !u64i loc(#loc746)
                  %59 = cir.binop(add, %54, %58) : !u64i loc(#loc747)
                  %60 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %59 : !u64i), !cir.ptr<!s8i> loc(#loc130)
                  cir.store %52, %60 : !s8i, !cir.ptr<!s8i> loc(#loc748)
                  %61 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc131)
                  %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
                  %63 = cir.const #cir.int<13> : !s32i loc(#loc133)
                  %64 = cir.call @strchr(%62, %63) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc131)
                  cir.store %64, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc749)
                  cir.scope {
                    %69 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
                    %70 = cir.cast(ptr_to_bool, %69 : !cir.ptr<!s8i>), !cir.bool loc(#loc138)
                    cir.if %70 {
                      %71 = cir.const #cir.int<0> : !s32i loc(#loc140)
                      %72 = cir.cast(integral, %71 : !s32i), !s8i loc(#loc140)
                      %73 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
                      cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc752)
                    } loc(#loc751)
                  } loc(#loc750)
                  %65 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc143)
                  %66 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
                  %67 = cir.const #cir.int<10> : !s32i loc(#loc145)
                  %68 = cir.call @strchr(%66, %67) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc143)
                  cir.store %68, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc753)
                  cir.scope {
                    %69 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
                    %70 = cir.cast(ptr_to_bool, %69 : !cir.ptr<!s8i>), !cir.bool loc(#loc150)
                    cir.if %70 {
                      %71 = cir.const #cir.int<0> : !s32i loc(#loc152)
                      %72 = cir.cast(integral, %71 : !s32i), !s8i loc(#loc152)
                      %73 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
                      cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc756)
                    } loc(#loc755)
                  } loc(#loc754)
                } loc(#loc719)
                cir.yield loc(#loc53)
              } while {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc155)
                %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc155)
                cir.condition(%16) loc(#loc155)
              } loc(#loc718)
            } loc(#loc718)
            cir.scope {
              %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc158)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc159)
              %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc159)
              %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc758)
              cir.if %18 {
                %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc161)
                %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc162)
              } loc(#loc759)
            } loc(#loc757)
          } loc(#loc712)
          cir.break loc(#loc163)
        } loc(#loc37)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc20)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc20)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc165)
          cir.break loc(#loc166)
        } loc(#loc164)
        cir.yield loc(#loc34)
      } loc(#loc34)
    } loc(#loc711)
    cir.scope {
      %4 = cir.const #cir.int<7> : !s32i loc(#loc169)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc762)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc763)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc764)
            cir.scope {
              %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc179)
              %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc180)
              %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc23)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc23)
              %12 = cir.call @__isoc99_sscanf(%9, %11, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc179)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc181)
              %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc766)
              cir.if %14 {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc183)
                cir.store %15, %7 : !s32i, !cir.ptr<!s32i> loc(#loc768)
                cir.scope {
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc187)
                  cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc770)
                  cir.for : cond {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc189)
                    %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc190)
                    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc771)
                    cir.condition(%20) loc(#loc191)
                  } body {
                    cir.scope {
                      %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc193)
                      %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc194)
                      cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc773)
                    } loc(#loc772)
                    cir.yield loc(#loc186)
                  } step {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc195)
                    %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc196)
                    cir.store %19, %5 : !s32i, !cir.ptr<!s32i> loc(#loc774)
                    cir.yield loc(#loc769)
                  } loc(#loc769)
                } loc(#loc769)
                %16 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc197)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc198)
              } loc(#loc767)
            } loc(#loc765)
          } loc(#loc761)
          cir.break loc(#loc199)
        } loc(#loc170)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc201)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc201)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc202)
          cir.break loc(#loc203)
        } loc(#loc200)
        cir.yield loc(#loc167)
      } loc(#loc167)
    } loc(#loc760)
    cir.return loc(#loc27)
  } loc(#loc707)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_connect_socket_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc776)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc206)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc777)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc208)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc778)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc210)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc779)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc212)
    cir.return loc(#loc205)
  } loc(#loc775)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc781)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc782)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc782)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc782)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc220)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc783)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc224)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc786)
            %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc787)
            %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc788)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc789)
            %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc790)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc235)
            %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc235)
            cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc789)
            %12 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc238)
            %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc239)
            %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc238)
            cir.store %14, %9 : !u64i, !cir.ptr<!u64i> loc(#loc790)
            cir.scope {
              cir.do {
                cir.scope {
                  %15 = cir.const #cir.int<2> : !s32i loc(#loc244)
                  %16 = cir.const #cir.int<1> : !s32i loc(#loc245)
                  %17 = cir.const #cir.int<6> : !s32i loc(#loc246)
                  %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc247)
                  cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc793)
                  cir.scope {
                    %69 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc252)
                    %70 = cir.const #cir.int<1> : !s32i loc(#loc253)
                    %71 = cir.unary(minus, %70) nsw : !s32i, !s32i loc(#loc253)
                    %72 = cir.cmp(eq, %69, %71) : !s32i, !cir.bool loc(#loc795)
                    cir.if %72 {
                      cir.break loc(#loc255)
                    } loc(#loc796)
                  } loc(#loc794)
                  %19 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc797)
                  %20 = cir.const #cir.int<0> : !s32i loc(#loc258)
                  %21 = cir.const #cir.int<16> : !u64i loc(#loc798)
                  cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc799)
                  %22 = cir.const #cir.int<2> : !s32i loc(#loc263)
                  %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc263)
                  %24 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
                  cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc800)
                  %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc265)
                  %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc265)
                  %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc266)
                  %28 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc79)
                  %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc80)
                  cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc801)
                  %30 = cir.const #cir.int<27015> : !s32i loc(#loc269)
                  %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc269)
                  %32 = cir.call @htons(%31) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc270)
                  %33 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
                  cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc802)
                  cir.scope {
                    %69 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc275)
                    %70 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc804)
                    %71 = cir.const #cir.int<16> : !u64i loc(#loc805)
                    %72 = cir.cast(integral, %71 : !u64i), !u32i loc(#loc805)
                    %73 = cir.call @connect(%69, %70, %72) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc280)
                    %74 = cir.const #cir.int<1> : !s32i loc(#loc281)
                    %75 = cir.unary(minus, %74) nsw : !s32i, !s32i loc(#loc281)
                    %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc806)
                    cir.if %76 {
                      cir.break loc(#loc283)
                    } loc(#loc807)
                  } loc(#loc803)
                  %34 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc284)
                  %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc285)
                  %36 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc286)
                  %37 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %36 : !u64i), !cir.ptr<!s8i> loc(#loc287)
                  %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc808)
                  %39 = cir.const #cir.int<1> : !u64i loc(#loc809)
                  %40 = cir.const #cir.int<100> : !s32i loc(#loc292)
                  %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc292)
                  %42 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc293)
                  %43 = cir.binop(sub, %41, %42) : !u64i loc(#loc810)
                  %44 = cir.const #cir.int<1> : !s32i loc(#loc294)
                  %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc294)
                  %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc811)
                  %47 = cir.binop(mul, %39, %46) : !u64i loc(#loc812)
                  %48 = cir.const #cir.int<0> : !s32i loc(#loc296)
                  %49 = cir.call @recv(%34, %38, %47, %48) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc297)
                  %50 = cir.cast(integral, %49 : !s64i), !s32i loc(#loc297)
                  cir.store %50, %5 : !s32i, !cir.ptr<!s32i> loc(#loc813)
                  cir.scope {
                    %69 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc302)
                    %70 = cir.const #cir.int<1> : !s32i loc(#loc303)
                    %71 = cir.unary(minus, %70) nsw : !s32i, !s32i loc(#loc303)
                    %72 = cir.cmp(eq, %69, %71) : !s32i, !cir.bool loc(#loc815)
                    %73 = cir.ternary(%72, true {
                      %74 = cir.const #true loc(#loc304)
                      cir.yield %74 : !cir.bool loc(#loc304)
                    }, false {
                      %74 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc305)
                      %75 = cir.const #cir.int<0> : !s32i loc(#loc306)
                      %76 = cir.cmp(eq, %74, %75) : !s32i, !cir.bool loc(#loc816)
                      %77 = cir.ternary(%76, true {
                        %78 = cir.const #true loc(#loc304)
                        cir.yield %78 : !cir.bool loc(#loc304)
                      }, false {
                        %78 = cir.const #false loc(#loc304)
                        cir.yield %78 : !cir.bool loc(#loc304)
                      }) : (!cir.bool) -> !cir.bool loc(#loc304)
                      cir.yield %77 : !cir.bool loc(#loc304)
                    }) : (!cir.bool) -> !cir.bool loc(#loc304)
                    cir.if %73 {
                      cir.break loc(#loc308)
                    } loc(#loc817)
                  } loc(#loc814)
                  %51 = cir.const #cir.int<0> : !s32i loc(#loc309)
                  %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc309)
                  %53 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc310)
                  %54 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc311)
                  %55 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc312)
                  %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc312)
                  %57 = cir.const #cir.int<1> : !u64i loc(#loc818)
                  %58 = cir.binop(div, %56, %57) : !u64i loc(#loc819)
                  %59 = cir.binop(add, %54, %58) : !u64i loc(#loc820)
                  %60 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %59 : !u64i), !cir.ptr<!s8i> loc(#loc315)
                  cir.store %52, %60 : !s8i, !cir.ptr<!s8i> loc(#loc821)
                  %61 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc316)
                  %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc317)
                  %63 = cir.const #cir.int<13> : !s32i loc(#loc318)
                  %64 = cir.call @strchr(%62, %63) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc316)
                  cir.store %64, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc822)
                  cir.scope {
                    %69 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc323)
                    %70 = cir.cast(ptr_to_bool, %69 : !cir.ptr<!s8i>), !cir.bool loc(#loc323)
                    cir.if %70 {
                      %71 = cir.const #cir.int<0> : !s32i loc(#loc325)
                      %72 = cir.cast(integral, %71 : !s32i), !s8i loc(#loc325)
                      %73 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc326)
                      cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc825)
                    } loc(#loc824)
                  } loc(#loc823)
                  %65 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc328)
                  %66 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc329)
                  %67 = cir.const #cir.int<10> : !s32i loc(#loc330)
                  %68 = cir.call @strchr(%66, %67) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc328)
                  cir.store %68, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc826)
                  cir.scope {
                    %69 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc335)
                    %70 = cir.cast(ptr_to_bool, %69 : !cir.ptr<!s8i>), !cir.bool loc(#loc335)
                    cir.if %70 {
                      %71 = cir.const #cir.int<0> : !s32i loc(#loc337)
                      %72 = cir.cast(integral, %71 : !s32i), !s8i loc(#loc337)
                      %73 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc338)
                      cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc829)
                    } loc(#loc828)
                  } loc(#loc827)
                } loc(#loc792)
                cir.yield loc(#loc241)
              } while {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc340)
                %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc340)
                cir.condition(%16) loc(#loc340)
              } loc(#loc791)
            } loc(#loc791)
            cir.scope {
              %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc343)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc344)
              %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc344)
              %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc831)
              cir.if %18 {
                %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc346)
                %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc347)
              } loc(#loc832)
            } loc(#loc830)
          } loc(#loc785)
          cir.break loc(#loc348)
        } loc(#loc225)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc350)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc350)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc351)
          cir.break loc(#loc352)
        } loc(#loc349)
        cir.yield loc(#loc222)
      } loc(#loc222)
    } loc(#loc784)
    cir.scope {
      %4 = cir.const #cir.int<8> : !s32i loc(#loc355)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc357)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc357)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc358)
          cir.break loc(#loc359)
        } loc(#loc356)
        cir.case(default, []) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc835)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc836)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc837)
            cir.scope {
              %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc369)
              %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc370)
              %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc371)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc371)
              %12 = cir.call @__isoc99_sscanf(%9, %11, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc369)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc372)
              %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc839)
              cir.if %14 {
                cir.scope {
                  %15 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc376)
                  %16 = cir.const #cir.int<10000> : !s32i loc(#loc377)
                  %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc842)
                  cir.if %17 {
                    %18 = cir.const #cir.int<0> : !s32i loc(#loc379)
                    cir.store %18, %7 : !s32i, !cir.ptr<!s32i> loc(#loc844)
                    cir.scope {
                      %20 = cir.const #cir.int<0> : !s32i loc(#loc383)
                      cir.store %20, %5 : !s32i, !cir.ptr<!s32i> loc(#loc846)
                      cir.for : cond {
                        %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc385)
                        %22 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc386)
                        %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc847)
                        cir.condition(%23) loc(#loc387)
                      } body {
                        cir.scope {
                          %21 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc389)
                          %22 = cir.unary(inc, %21) nsw : !s32i, !s32i loc(#loc390)
                          cir.store %22, %7 : !s32i, !cir.ptr<!s32i> loc(#loc849)
                        } loc(#loc848)
                        cir.yield loc(#loc382)
                      } step {
                        %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc391)
                        %22 = cir.unary(inc, %21) nsw : !s32i, !s32i loc(#loc392)
                        cir.store %22, %5 : !s32i, !cir.ptr<!s32i> loc(#loc850)
                        cir.yield loc(#loc845)
                      } loc(#loc845)
                    } loc(#loc845)
                    %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc393)
                    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc394)
                  } loc(#loc843)
                } loc(#loc841)
              } loc(#loc840)
            } loc(#loc838)
          } loc(#loc834)
          cir.break loc(#loc395)
        } loc(#loc360)
        cir.yield loc(#loc353)
      } loc(#loc353)
    } loc(#loc833)
    cir.return loc(#loc215)
  } loc(#loc780)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc852)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc853)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc853)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc853)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc402)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc854)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc406)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc857)
            %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc858)
            %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc859)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc860)
            %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc861)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc417)
            %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc417)
            cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc860)
            %12 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc420)
            %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc421)
            %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc420)
            cir.store %14, %9 : !u64i, !cir.ptr<!u64i> loc(#loc861)
            cir.scope {
              cir.do {
                cir.scope {
                  %15 = cir.const #cir.int<2> : !s32i loc(#loc426)
                  %16 = cir.const #cir.int<1> : !s32i loc(#loc427)
                  %17 = cir.const #cir.int<6> : !s32i loc(#loc428)
                  %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc429)
                  cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc864)
                  cir.scope {
                    %69 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc434)
                    %70 = cir.const #cir.int<1> : !s32i loc(#loc435)
                    %71 = cir.unary(minus, %70) nsw : !s32i, !s32i loc(#loc435)
                    %72 = cir.cmp(eq, %69, %71) : !s32i, !cir.bool loc(#loc866)
                    cir.if %72 {
                      cir.break loc(#loc437)
                    } loc(#loc867)
                  } loc(#loc865)
                  %19 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc868)
                  %20 = cir.const #cir.int<0> : !s32i loc(#loc440)
                  %21 = cir.const #cir.int<16> : !u64i loc(#loc869)
                  cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc870)
                  %22 = cir.const #cir.int<2> : !s32i loc(#loc445)
                  %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc445)
                  %24 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
                  cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc871)
                  %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc447)
                  %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc447)
                  %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc448)
                  %28 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc79)
                  %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc80)
                  cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc872)
                  %30 = cir.const #cir.int<27015> : !s32i loc(#loc451)
                  %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc451)
                  %32 = cir.call @htons(%31) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc452)
                  %33 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc85)
                  cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc873)
                  cir.scope {
                    %69 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc457)
                    %70 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc875)
                    %71 = cir.const #cir.int<16> : !u64i loc(#loc876)
                    %72 = cir.cast(integral, %71 : !u64i), !u32i loc(#loc876)
                    %73 = cir.call @connect(%69, %70, %72) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc462)
                    %74 = cir.const #cir.int<1> : !s32i loc(#loc463)
                    %75 = cir.unary(minus, %74) nsw : !s32i, !s32i loc(#loc463)
                    %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc877)
                    cir.if %76 {
                      cir.break loc(#loc465)
                    } loc(#loc878)
                  } loc(#loc874)
                  %34 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc466)
                  %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc467)
                  %36 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc468)
                  %37 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %36 : !u64i), !cir.ptr<!s8i> loc(#loc469)
                  %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc879)
                  %39 = cir.const #cir.int<1> : !u64i loc(#loc880)
                  %40 = cir.const #cir.int<100> : !s32i loc(#loc474)
                  %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc474)
                  %42 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc475)
                  %43 = cir.binop(sub, %41, %42) : !u64i loc(#loc881)
                  %44 = cir.const #cir.int<1> : !s32i loc(#loc476)
                  %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc476)
                  %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc882)
                  %47 = cir.binop(mul, %39, %46) : !u64i loc(#loc883)
                  %48 = cir.const #cir.int<0> : !s32i loc(#loc478)
                  %49 = cir.call @recv(%34, %38, %47, %48) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc479)
                  %50 = cir.cast(integral, %49 : !s64i), !s32i loc(#loc479)
                  cir.store %50, %5 : !s32i, !cir.ptr<!s32i> loc(#loc884)
                  cir.scope {
                    %69 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc484)
                    %70 = cir.const #cir.int<1> : !s32i loc(#loc485)
                    %71 = cir.unary(minus, %70) nsw : !s32i, !s32i loc(#loc485)
                    %72 = cir.cmp(eq, %69, %71) : !s32i, !cir.bool loc(#loc886)
                    %73 = cir.ternary(%72, true {
                      %74 = cir.const #true loc(#loc486)
                      cir.yield %74 : !cir.bool loc(#loc486)
                    }, false {
                      %74 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc487)
                      %75 = cir.const #cir.int<0> : !s32i loc(#loc488)
                      %76 = cir.cmp(eq, %74, %75) : !s32i, !cir.bool loc(#loc887)
                      %77 = cir.ternary(%76, true {
                        %78 = cir.const #true loc(#loc486)
                        cir.yield %78 : !cir.bool loc(#loc486)
                      }, false {
                        %78 = cir.const #false loc(#loc486)
                        cir.yield %78 : !cir.bool loc(#loc486)
                      }) : (!cir.bool) -> !cir.bool loc(#loc486)
                      cir.yield %77 : !cir.bool loc(#loc486)
                    }) : (!cir.bool) -> !cir.bool loc(#loc486)
                    cir.if %73 {
                      cir.break loc(#loc490)
                    } loc(#loc888)
                  } loc(#loc885)
                  %51 = cir.const #cir.int<0> : !s32i loc(#loc491)
                  %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc491)
                  %53 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc492)
                  %54 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc493)
                  %55 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc494)
                  %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc494)
                  %57 = cir.const #cir.int<1> : !u64i loc(#loc889)
                  %58 = cir.binop(div, %56, %57) : !u64i loc(#loc890)
                  %59 = cir.binop(add, %54, %58) : !u64i loc(#loc891)
                  %60 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %59 : !u64i), !cir.ptr<!s8i> loc(#loc497)
                  cir.store %52, %60 : !s8i, !cir.ptr<!s8i> loc(#loc892)
                  %61 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc498)
                  %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc499)
                  %63 = cir.const #cir.int<13> : !s32i loc(#loc500)
                  %64 = cir.call @strchr(%62, %63) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc498)
                  cir.store %64, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc893)
                  cir.scope {
                    %69 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc505)
                    %70 = cir.cast(ptr_to_bool, %69 : !cir.ptr<!s8i>), !cir.bool loc(#loc505)
                    cir.if %70 {
                      %71 = cir.const #cir.int<0> : !s32i loc(#loc507)
                      %72 = cir.cast(integral, %71 : !s32i), !s8i loc(#loc507)
                      %73 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc508)
                      cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc896)
                    } loc(#loc895)
                  } loc(#loc894)
                  %65 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc510)
                  %66 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc511)
                  %67 = cir.const #cir.int<10> : !s32i loc(#loc512)
                  %68 = cir.call @strchr(%66, %67) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc510)
                  cir.store %68, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc897)
                  cir.scope {
                    %69 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc517)
                    %70 = cir.cast(ptr_to_bool, %69 : !cir.ptr<!s8i>), !cir.bool loc(#loc517)
                    cir.if %70 {
                      %71 = cir.const #cir.int<0> : !s32i loc(#loc519)
                      %72 = cir.cast(integral, %71 : !s32i), !s8i loc(#loc519)
                      %73 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc520)
                      cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc900)
                    } loc(#loc899)
                  } loc(#loc898)
                } loc(#loc863)
                cir.yield loc(#loc423)
              } while {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc522)
                %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc522)
                cir.condition(%16) loc(#loc522)
              } loc(#loc862)
            } loc(#loc862)
            cir.scope {
              %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc525)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc526)
              %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc526)
              %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc902)
              cir.if %18 {
                %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc528)
                %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc529)
              } loc(#loc903)
            } loc(#loc901)
          } loc(#loc856)
          cir.break loc(#loc530)
        } loc(#loc407)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc532)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc532)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc533)
          cir.break loc(#loc534)
        } loc(#loc531)
        cir.yield loc(#loc404)
      } loc(#loc404)
    } loc(#loc855)
    cir.scope {
      %4 = cir.const #cir.int<7> : !s32i loc(#loc537)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc906)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc907)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc908)
            cir.scope {
              %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc547)
              %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc548)
              %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc549)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc549)
              %12 = cir.call @__isoc99_sscanf(%9, %11, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc547)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc550)
              %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc910)
              cir.if %14 {
                cir.scope {
                  %15 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc554)
                  %16 = cir.const #cir.int<10000> : !s32i loc(#loc555)
                  %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc913)
                  cir.if %17 {
                    %18 = cir.const #cir.int<0> : !s32i loc(#loc557)
                    cir.store %18, %7 : !s32i, !cir.ptr<!s32i> loc(#loc915)
                    cir.scope {
                      %20 = cir.const #cir.int<0> : !s32i loc(#loc561)
                      cir.store %20, %5 : !s32i, !cir.ptr<!s32i> loc(#loc917)
                      cir.for : cond {
                        %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc563)
                        %22 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc564)
                        %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc918)
                        cir.condition(%23) loc(#loc565)
                      } body {
                        cir.scope {
                          %21 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc567)
                          %22 = cir.unary(inc, %21) nsw : !s32i, !s32i loc(#loc568)
                          cir.store %22, %7 : !s32i, !cir.ptr<!s32i> loc(#loc920)
                        } loc(#loc919)
                        cir.yield loc(#loc560)
                      } step {
                        %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc569)
                        %22 = cir.unary(inc, %21) nsw : !s32i, !s32i loc(#loc570)
                        cir.store %22, %5 : !s32i, !cir.ptr<!s32i> loc(#loc921)
                        cir.yield loc(#loc916)
                      } loc(#loc916)
                    } loc(#loc916)
                    %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc571)
                    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc572)
                  } loc(#loc914)
                } loc(#loc912)
              } loc(#loc911)
            } loc(#loc909)
          } loc(#loc905)
          cir.break loc(#loc573)
        } loc(#loc538)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc575)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc575)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc576)
          cir.break loc(#loc577)
        } loc(#loc574)
        cir.yield loc(#loc535)
      } loc(#loc535)
    } loc(#loc904)
    cir.return loc(#loc397)
  } loc(#loc851)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc922)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc580)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc924)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc925)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc925)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc925)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc587)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc926)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc591)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc593)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc593)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc594)
          cir.break loc(#loc595)
        } loc(#loc592)
        cir.case(default, []) {
          %5 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc597)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc598)
          %7 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc580)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc580)
          %9 = cir.call @strcpy(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc597)
          cir.break loc(#loc599)
        } loc(#loc596)
        cir.yield loc(#loc589)
      } loc(#loc589)
    } loc(#loc927)
    cir.scope {
      %4 = cir.const #cir.int<7> : !s32i loc(#loc602)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc930)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc931)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc932)
            cir.scope {
              %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc612)
              %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc613)
              %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc614)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc614)
              %12 = cir.call @__isoc99_sscanf(%9, %11, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc612)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc615)
              %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc934)
              cir.if %14 {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc617)
                cir.store %15, %7 : !s32i, !cir.ptr<!s32i> loc(#loc936)
                cir.scope {
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc621)
                  cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc938)
                  cir.for : cond {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc623)
                    %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc624)
                    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc939)
                    cir.condition(%20) loc(#loc625)
                  } body {
                    cir.scope {
                      %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc627)
                      %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc628)
                      cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc941)
                    } loc(#loc940)
                    cir.yield loc(#loc620)
                  } step {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc629)
                    %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc630)
                    cir.store %19, %5 : !s32i, !cir.ptr<!s32i> loc(#loc942)
                    cir.yield loc(#loc937)
                  } loc(#loc937)
                } loc(#loc937)
                %16 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc631)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc632)
              } loc(#loc935)
            } loc(#loc933)
          } loc(#loc929)
          cir.break loc(#loc633)
        } loc(#loc603)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc635)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc635)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc636)
          cir.break loc(#loc637)
        } loc(#loc634)
        cir.yield loc(#loc600)
      } loc(#loc600)
    } loc(#loc928)
    cir.return loc(#loc582)
  } loc(#loc923)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc944)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc945)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc945)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc945)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc644)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc946)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc648)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %5 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc650)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc651)
          %7 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc652)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc652)
          %9 = cir.call @strcpy(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc650)
          cir.break loc(#loc653)
        } loc(#loc649)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc655)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc655)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc656)
          cir.break loc(#loc657)
        } loc(#loc654)
        cir.yield loc(#loc646)
      } loc(#loc646)
    } loc(#loc947)
    cir.scope {
      %4 = cir.const #cir.int<7> : !s32i loc(#loc660)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc950)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc951)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc952)
            cir.scope {
              %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc670)
              %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc671)
              %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc672)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc672)
              %12 = cir.call @__isoc99_sscanf(%9, %11, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc670)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc673)
              %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc954)
              cir.if %14 {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc675)
                cir.store %15, %7 : !s32i, !cir.ptr<!s32i> loc(#loc956)
                cir.scope {
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc679)
                  cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc958)
                  cir.for : cond {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc681)
                    %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc682)
                    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc959)
                    cir.condition(%20) loc(#loc683)
                  } body {
                    cir.scope {
                      %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc685)
                      %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc686)
                      cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc961)
                    } loc(#loc960)
                    cir.yield loc(#loc678)
                  } step {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc687)
                    %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc688)
                    cir.store %19, %5 : !s32i, !cir.ptr<!s32i> loc(#loc962)
                    cir.yield loc(#loc957)
                  } loc(#loc957)
                } loc(#loc957)
                %16 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc689)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc690)
              } loc(#loc955)
            } loc(#loc953)
          } loc(#loc949)
          cir.break loc(#loc691)
        } loc(#loc661)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc693)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc693)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc694)
          cir.break loc(#loc695)
        } loc(#loc692)
        cir.yield loc(#loc658)
      } loc(#loc658)
    } loc(#loc948)
    cir.return loc(#loc639)
  } loc(#loc943)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":84:49)
#loc8 = loc("/usr/include/netinet/in.h":402:1)
#loc9 = loc("/usr/include/netinet/in.h":403:40)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc14 = loc("/usr/include/string.h":246:1)
#loc15 = loc("/usr/include/string.h":247:33)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":127:19)
#loc21 = loc("/usr/include/stdio.h":468:1)
#loc22 = loc("/usr/include/stdio.h":468:12)
#loc23 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":135:26)
#loc24 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc25 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":49:1)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":153:1)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":51:5)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":51:12)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":52:5)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":52:28)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":53:12)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":53:5)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":54:5)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":129:5)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":54:12)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":56:5)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":57:5)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":123:5)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":62:9)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":62:13)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":63:9)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":63:28)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":64:9)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":64:15)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":65:9)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":65:32)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":66:9)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":66:37)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":66:26)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":66:33)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":67:9)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":112:17)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":68:9)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":111:9)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":77:36)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":77:45)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":77:58)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":77:29)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":77:13)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":77:69)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":78:13)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":81:13)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":78:17)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":78:34)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":79:13)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":80:17)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":82:20)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":82:21)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":82:30)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":82:33)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":82:47)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":82:13)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":82:48)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":83:34)
#loc76 = loc("/usr/include/netinet/in.h":249:5)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":83:13)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":84:39)
#loc79 = loc("/usr/include/netinet/in.h":251:20)
#loc80 = loc("/usr/include/netinet/in.h":33:15)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":84:13)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":84:59)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":85:38)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":85:32)
#loc85 = loc("/usr/include/netinet/in.h":250:15)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":85:13)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":85:46)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":86:13)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":89:13)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":86:25)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":86:58)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":86:59)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":86:68)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":86:82)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":86:17)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":86:88)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":87:13)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":88:17)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":93:31)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":93:55)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":93:62)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":93:60)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":93:46)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":93:69)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":93:72)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":93:83)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":93:88)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":93:94)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":93:104)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":93:105)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":93:108)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":93:26)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":93:13)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":93:109)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":94:13)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":97:13)
#loc117 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":94:17)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":94:31)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":94:44)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":94:47)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":94:61)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":95:13)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":96:17)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":99:57)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":99:13)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":99:18)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":99:28)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":99:41)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":99:52)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":99:53)
#loc131 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":101:23)
#loc132 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":101:30)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":101:36)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":101:13)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":101:40)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":102:13)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":105:13)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":102:17)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":103:13)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":104:28)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":104:18)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":104:17)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":106:23)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":106:30)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":106:36)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":106:13)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":106:40)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":107:13)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":110:13)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":107:17)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":108:13)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":109:28)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":109:18)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":109:17)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":112:16)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":113:9)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":116:9)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":113:13)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":113:30)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":114:9)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":115:26)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":115:13)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":124:5)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":125:5)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":127:9)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":128:9)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":130:5)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":152:5)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":130:12)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":132:5)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":133:5)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":146:5)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":134:9)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":134:13)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":134:16)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":134:19)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":135:9)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":145:9)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":135:13)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":135:20)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":135:39)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":136:9)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":138:27)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":138:13)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":139:13)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":143:13)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":139:22)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":139:18)
#loc189 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":139:25)
#loc190 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":139:29)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":139:27)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":140:13)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":142:28)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":142:17)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":139:33)
#loc196 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":139:32)
#loc197 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":144:26)
#loc198 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":144:13)
#loc199 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":147:5)
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":148:5)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":150:19)
#loc202 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":150:9)
#loc203 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":151:9)
#loc204 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":463:1)
#loc205 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":469:1)
#loc206 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":465:5)
#loc207 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":465:14)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":466:5)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":466:14)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":467:5)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":467:14)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":468:5)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":468:14)
#loc214 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":160:1)
#loc215 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":267:1)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":162:5)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":162:12)
#loc218 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":163:5)
#loc219 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":163:28)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":164:12)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":164:5)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":165:5)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":240:5)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":165:12)
#loc225 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":167:5)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":168:5)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":234:5)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":173:9)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":173:13)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":174:9)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":174:28)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":175:9)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":175:15)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":176:9)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":176:32)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":177:9)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":177:37)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":177:26)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":177:33)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":178:9)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":223:17)
#loc242 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":179:9)
#loc243 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":222:9)
#loc244 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":188:36)
#loc245 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":188:45)
#loc246 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":188:58)
#loc247 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":188:29)
#loc248 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":188:13)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":188:69)
#loc250 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":189:13)
#loc251 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":192:13)
#loc252 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":189:17)
#loc253 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":189:34)
#loc254 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":190:13)
#loc255 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":191:17)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":193:20)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":193:21)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":193:30)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":193:33)
#loc260 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":193:47)
#loc261 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":193:13)
#loc262 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":193:48)
#loc263 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":194:34)
#loc264 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":194:13)
#loc265 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":195:49)
#loc266 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":195:39)
#loc267 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":195:13)
#loc268 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":195:59)
#loc269 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":196:38)
#loc270 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":196:32)
#loc271 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":196:13)
#loc272 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":196:46)
#loc273 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":197:13)
#loc274 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":200:13)
#loc275 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":197:25)
#loc276 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":197:58)
#loc277 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":197:59)
#loc278 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":197:68)
#loc279 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":197:82)
#loc280 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":197:17)
#loc281 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":197:88)
#loc282 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":198:13)
#loc283 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":199:17)
#loc284 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":204:31)
#loc285 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":204:55)
#loc286 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":204:62)
#loc287 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":204:60)
#loc288 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":204:46)
#loc289 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":204:69)
#loc290 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":204:72)
#loc291 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":204:83)
#loc292 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":204:88)
#loc293 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":204:94)
#loc294 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":204:104)
#loc295 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":204:105)
#loc296 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":204:108)
#loc297 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":204:26)
#loc298 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":204:13)
#loc299 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":204:109)
#loc300 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":205:13)
#loc301 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":208:13)
#loc302 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":205:17)
#loc303 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":205:31)
#loc304 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":205:44)
#loc305 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":205:47)
#loc306 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":205:61)
#loc307 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":206:13)
#loc308 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":207:17)
#loc309 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":210:57)
#loc310 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":210:13)
#loc311 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":210:18)
#loc312 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":210:28)
#loc313 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":210:41)
#loc314 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":210:52)
#loc315 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":210:53)
#loc316 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":212:23)
#loc317 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":212:30)
#loc318 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":212:36)
#loc319 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":212:13)
#loc320 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":212:40)
#loc321 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":213:13)
#loc322 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":216:13)
#loc323 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":213:17)
#loc324 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":214:13)
#loc325 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":215:28)
#loc326 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":215:18)
#loc327 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":215:17)
#loc328 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":217:23)
#loc329 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":217:30)
#loc330 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":217:36)
#loc331 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":217:13)
#loc332 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":217:40)
#loc333 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":218:13)
#loc334 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":221:13)
#loc335 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":218:17)
#loc336 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":219:13)
#loc337 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":220:28)
#loc338 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":220:18)
#loc339 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":220:17)
#loc340 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":223:16)
#loc341 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":224:9)
#loc342 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":227:9)
#loc343 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":224:13)
#loc344 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":224:30)
#loc345 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":225:9)
#loc346 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":226:26)
#loc347 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":226:13)
#loc348 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":235:5)
#loc349 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":236:5)
#loc350 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":238:19)
#loc351 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":238:9)
#loc352 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":239:9)
#loc353 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":241:5)
#loc354 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":266:5)
#loc355 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":241:12)
#loc356 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":243:5)
#loc357 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":245:19)
#loc358 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":245:9)
#loc359 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":246:9)
#loc360 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":247:5)
#loc361 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":248:5)
#loc362 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":264:5)
#loc363 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":249:9)
#loc364 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":249:13)
#loc365 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":249:16)
#loc366 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":249:19)
#loc367 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":250:9)
#loc368 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":263:9)
#loc369 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":250:13)
#loc370 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":250:20)
#loc371 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":250:26)
#loc372 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":250:39)
#loc373 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":251:9)
#loc374 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":253:13)
#loc375 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":262:13)
#loc376 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":253:17)
#loc377 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":253:21)
#loc378 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":254:13)
#loc379 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":255:31)
#loc380 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":255:17)
#loc381 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":256:17)
#loc382 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":260:17)
#loc383 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":256:26)
#loc384 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":256:22)
#loc385 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":256:29)
#loc386 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":256:33)
#loc387 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":256:31)
#loc388 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":257:17)
#loc389 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":259:32)
#loc390 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":259:21)
#loc391 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":256:37)
#loc392 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":256:36)
#loc393 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":261:30)
#loc394 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":261:17)
#loc395 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":265:5)
#loc396 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":270:1)
#loc397 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":377:1)
#loc398 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":272:5)
#loc399 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":272:12)
#loc400 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":273:5)
#loc401 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":273:28)
#loc402 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":274:12)
#loc403 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":274:5)
#loc404 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":275:5)
#loc405 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":350:5)
#loc406 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":275:12)
#loc407 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":277:5)
#loc408 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":278:5)
#loc409 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":344:5)
#loc410 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":283:9)
#loc411 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":283:13)
#loc412 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":284:9)
#loc413 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":284:28)
#loc414 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":285:9)
#loc415 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":285:15)
#loc416 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":286:9)
#loc417 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":286:32)
#loc418 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":287:9)
#loc419 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":287:37)
#loc420 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":287:26)
#loc421 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":287:33)
#loc422 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":288:9)
#loc423 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":333:17)
#loc424 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":289:9)
#loc425 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":332:9)
#loc426 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":298:36)
#loc427 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":298:45)
#loc428 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":298:58)
#loc429 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":298:29)
#loc430 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":298:13)
#loc431 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":298:69)
#loc432 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":299:13)
#loc433 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":302:13)
#loc434 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":299:17)
#loc435 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":299:34)
#loc436 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":300:13)
#loc437 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":301:17)
#loc438 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":303:20)
#loc439 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":303:21)
#loc440 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":303:30)
#loc441 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":303:33)
#loc442 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":303:47)
#loc443 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":303:13)
#loc444 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":303:48)
#loc445 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":304:34)
#loc446 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":304:13)
#loc447 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":305:49)
#loc448 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":305:39)
#loc449 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":305:13)
#loc450 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":305:59)
#loc451 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":306:38)
#loc452 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":306:32)
#loc453 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":306:13)
#loc454 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":306:46)
#loc455 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":307:13)
#loc456 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":310:13)
#loc457 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":307:25)
#loc458 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":307:58)
#loc459 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":307:59)
#loc460 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":307:68)
#loc461 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":307:82)
#loc462 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":307:17)
#loc463 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":307:88)
#loc464 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":308:13)
#loc465 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":309:17)
#loc466 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":314:31)
#loc467 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":314:55)
#loc468 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":314:62)
#loc469 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":314:60)
#loc470 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":314:46)
#loc471 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":314:69)
#loc472 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":314:72)
#loc473 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":314:83)
#loc474 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":314:88)
#loc475 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":314:94)
#loc476 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":314:104)
#loc477 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":314:105)
#loc478 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":314:108)
#loc479 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":314:26)
#loc480 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":314:13)
#loc481 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":314:109)
#loc482 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":315:13)
#loc483 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":318:13)
#loc484 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":315:17)
#loc485 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":315:31)
#loc486 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":315:44)
#loc487 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":315:47)
#loc488 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":315:61)
#loc489 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":316:13)
#loc490 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":317:17)
#loc491 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":320:57)
#loc492 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":320:13)
#loc493 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":320:18)
#loc494 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":320:28)
#loc495 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":320:41)
#loc496 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":320:52)
#loc497 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":320:53)
#loc498 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":322:23)
#loc499 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":322:30)
#loc500 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":322:36)
#loc501 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":322:13)
#loc502 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":322:40)
#loc503 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":323:13)
#loc504 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":326:13)
#loc505 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":323:17)
#loc506 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":324:13)
#loc507 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":325:28)
#loc508 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":325:18)
#loc509 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":325:17)
#loc510 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":327:23)
#loc511 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":327:30)
#loc512 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":327:36)
#loc513 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":327:13)
#loc514 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":327:40)
#loc515 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":328:13)
#loc516 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":331:13)
#loc517 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":328:17)
#loc518 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":329:13)
#loc519 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":330:28)
#loc520 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":330:18)
#loc521 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":330:17)
#loc522 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":333:16)
#loc523 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":334:9)
#loc524 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":337:9)
#loc525 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":334:13)
#loc526 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":334:30)
#loc527 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":335:9)
#loc528 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":336:26)
#loc529 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":336:13)
#loc530 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":345:5)
#loc531 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":346:5)
#loc532 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":348:19)
#loc533 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":348:9)
#loc534 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":349:9)
#loc535 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":351:5)
#loc536 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":376:5)
#loc537 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":351:12)
#loc538 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":353:5)
#loc539 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":354:5)
#loc540 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":370:5)
#loc541 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":355:9)
#loc542 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":355:13)
#loc543 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":355:16)
#loc544 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":355:19)
#loc545 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":356:9)
#loc546 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":369:9)
#loc547 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":356:13)
#loc548 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":356:20)
#loc549 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":356:26)
#loc550 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":356:39)
#loc551 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":357:9)
#loc552 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":359:13)
#loc553 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":368:13)
#loc554 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":359:17)
#loc555 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":359:21)
#loc556 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":360:13)
#loc557 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":361:31)
#loc558 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":361:17)
#loc559 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":362:17)
#loc560 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":366:17)
#loc561 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":362:26)
#loc562 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":362:22)
#loc563 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":362:29)
#loc564 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":362:33)
#loc565 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":362:31)
#loc566 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":363:17)
#loc567 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":365:32)
#loc568 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":365:21)
#loc569 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":362:37)
#loc570 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":362:36)
#loc571 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":367:30)
#loc572 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":367:17)
#loc573 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":371:5)
#loc574 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":372:5)
#loc575 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":374:19)
#loc576 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":374:9)
#loc577 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":375:9)
#loc578 = loc("/usr/include/string.h":141:1)
#loc579 = loc("/usr/include/string.h":142:14)
#loc580 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":393:22)
#loc581 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":380:1)
#loc582 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":419:1)
#loc583 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":382:5)
#loc584 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":382:12)
#loc585 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":383:5)
#loc586 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":383:28)
#loc587 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":384:12)
#loc588 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":384:5)
#loc589 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":385:5)
#loc590 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":395:5)
#loc591 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":385:12)
#loc592 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":387:5)
#loc593 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":389:19)
#loc594 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":389:9)
#loc595 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":390:9)
#loc596 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":391:5)
#loc597 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":393:9)
#loc598 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":393:16)
#loc599 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":394:9)
#loc600 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":396:5)
#loc601 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":418:5)
#loc602 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":396:12)
#loc603 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":398:5)
#loc604 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":399:5)
#loc605 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":412:5)
#loc606 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":400:9)
#loc607 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":400:13)
#loc608 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":400:16)
#loc609 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":400:19)
#loc610 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":401:9)
#loc611 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":411:9)
#loc612 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":401:13)
#loc613 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":401:20)
#loc614 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":401:26)
#loc615 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":401:39)
#loc616 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":402:9)
#loc617 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":404:27)
#loc618 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":404:13)
#loc619 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":405:13)
#loc620 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":409:13)
#loc621 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":405:22)
#loc622 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":405:18)
#loc623 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":405:25)
#loc624 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":405:29)
#loc625 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":405:27)
#loc626 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":406:13)
#loc627 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":408:28)
#loc628 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":408:17)
#loc629 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":405:33)
#loc630 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":405:32)
#loc631 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":410:26)
#loc632 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":410:13)
#loc633 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":413:5)
#loc634 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":414:5)
#loc635 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":416:19)
#loc636 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":416:9)
#loc637 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":417:9)
#loc638 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":422:1)
#loc639 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":461:1)
#loc640 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":424:5)
#loc641 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":424:12)
#loc642 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":425:5)
#loc643 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":425:28)
#loc644 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":426:12)
#loc645 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":426:5)
#loc646 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":427:5)
#loc647 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":437:5)
#loc648 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":427:12)
#loc649 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":429:5)
#loc650 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":431:9)
#loc651 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":431:16)
#loc652 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":431:22)
#loc653 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":432:9)
#loc654 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":433:5)
#loc655 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":435:19)
#loc656 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":435:9)
#loc657 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":436:9)
#loc658 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":438:5)
#loc659 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":460:5)
#loc660 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":438:12)
#loc661 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":440:5)
#loc662 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":441:5)
#loc663 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":454:5)
#loc664 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":442:9)
#loc665 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":442:13)
#loc666 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":442:16)
#loc667 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":442:19)
#loc668 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":443:9)
#loc669 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":453:9)
#loc670 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":443:13)
#loc671 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":443:20)
#loc672 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":443:26)
#loc673 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":443:39)
#loc674 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":444:9)
#loc675 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":446:27)
#loc676 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":446:13)
#loc677 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":447:13)
#loc678 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":451:13)
#loc679 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":447:22)
#loc680 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":447:18)
#loc681 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":447:25)
#loc682 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":447:29)
#loc683 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":447:27)
#loc684 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":448:13)
#loc685 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":450:28)
#loc686 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":450:17)
#loc687 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":447:33)
#loc688 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":447:32)
#loc689 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":452:26)
#loc690 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":452:13)
#loc691 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":455:5)
#loc692 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":456:5)
#loc693 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":458:19)
#loc694 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":458:9)
#loc695 = loc("CWE606_Unchecked_Loop_Condition__char_connect_socket_15.c":459:9)
#loc696 = loc(fused[#loc1, #loc2])
#loc697 = loc(fused[#loc3, #loc4])
#loc698 = loc(fused[#loc5, #loc6])
#loc699 = loc(fused[#loc8, #loc9])
#loc700 = loc(fused[#loc10, #loc11])
#loc701 = loc(fused[#loc12, #loc13])
#loc702 = loc(fused[#loc14, #loc15])
#loc703 = loc(fused[#loc16, #loc17])
#loc704 = loc(fused[#loc18, #loc19])
#loc705 = loc(fused[#loc21, #loc22])
#loc706 = loc(fused[#loc24, #loc25])
#loc707 = loc(fused[#loc26, #loc27])
#loc708 = loc(fused[#loc28, #loc29])
#loc709 = loc(fused[#loc30, #loc31])
#loc710 = loc(fused[#loc33, #loc32])
#loc711 = loc(fused[#loc34, #loc35])
#loc712 = loc(fused[#loc38, #loc39])
#loc713 = loc(fused[#loc40, #loc41])
#loc714 = loc(fused[#loc42, #loc43])
#loc715 = loc(fused[#loc44, #loc45])
#loc716 = loc(fused[#loc46, #loc47])
#loc717 = loc(fused[#loc48, #loc49])
#loc718 = loc(fused[#loc52, #loc53])
#loc719 = loc(fused[#loc54, #loc55])
#loc720 = loc(fused[#loc60, #loc61])
#loc721 = loc(fused[#loc62, #loc63])
#loc722 = loc(fused[#loc64, #loc65])
#loc723 = loc(fused[#loc66, #loc63])
#loc724 = loc(fused[#loc68, #loc69])
#loc725 = loc(fused[#loc71, #loc72])
#loc726 = loc(fused[#loc73, #loc74])
#loc727 = loc(fused[#loc77, #loc75])
#loc728 = loc(fused[#loc81, #loc82])
#loc729 = loc(fused[#loc86, #loc87])
#loc730 = loc(fused[#loc88, #loc89])
#loc731 = loc(fused[#loc91, #loc92])
#loc732 = loc(fused[#loc93, #loc94])
#loc733 = loc(fused[#loc95, #loc96])
#loc734 = loc(fused[#loc97, #loc89])
#loc735 = loc(fused[#loc103, #loc104])
#loc736 = loc(fused[#loc105, #loc106])
#loc737 = loc(fused[#loc107, #loc108])
#loc738 = loc(fused[#loc107, #loc109])
#loc739 = loc(fused[#loc105, #loc110])
#loc740 = loc(fused[#loc113, #loc114])
#loc741 = loc(fused[#loc115, #loc116])
#loc742 = loc(fused[#loc117, #loc118])
#loc743 = loc(fused[#loc120, #loc121])
#loc744 = loc(fused[#loc122, #loc116])
#loc745 = loc(fused[#loc128, #loc129])
#loc746 = loc(fused[#loc127, #loc129])
#loc747 = loc(fused[#loc126, #loc129])
#loc748 = loc(fused[#loc125, #loc124])
#loc749 = loc(fused[#loc134, #loc135])
#loc750 = loc(fused[#loc136, #loc137])
#loc751 = loc(fused[#loc139, #loc137])
#loc752 = loc(fused[#loc142, #loc140])
#loc753 = loc(fused[#loc146, #loc147])
#loc754 = loc(fused[#loc148, #loc149])
#loc755 = loc(fused[#loc151, #loc149])
#loc756 = loc(fused[#loc154, #loc152])
#loc757 = loc(fused[#loc156, #loc157])
#loc758 = loc(fused[#loc158, #loc159])
#loc759 = loc(fused[#loc160, #loc157])
#loc760 = loc(fused[#loc167, #loc168])
#loc761 = loc(fused[#loc171, #loc172])
#loc762 = loc(fused[#loc173, #loc174])
#loc763 = loc(fused[#loc173, #loc175])
#loc764 = loc(fused[#loc173, #loc176])
#loc765 = loc(fused[#loc177, #loc178])
#loc766 = loc(fused[#loc179, #loc181])
#loc767 = loc(fused[#loc182, #loc178])
#loc768 = loc(fused[#loc184, #loc183])
#loc769 = loc(fused[#loc185, #loc186])
#loc770 = loc(fused[#loc188, #loc187])
#loc771 = loc(fused[#loc189, #loc190])
#loc772 = loc(fused[#loc192, #loc186])
#loc773 = loc(fused[#loc194, #loc193])
#loc774 = loc(fused[#loc196, #loc195])
#loc775 = loc(fused[#loc204, #loc205])
#loc776 = loc(fused[#loc206, #loc207])
#loc777 = loc(fused[#loc208, #loc209])
#loc778 = loc(fused[#loc210, #loc211])
#loc779 = loc(fused[#loc212, #loc213])
#loc780 = loc(fused[#loc214, #loc215])
#loc781 = loc(fused[#loc216, #loc217])
#loc782 = loc(fused[#loc218, #loc219])
#loc783 = loc(fused[#loc221, #loc220])
#loc784 = loc(fused[#loc222, #loc223])
#loc785 = loc(fused[#loc226, #loc227])
#loc786 = loc(fused[#loc228, #loc229])
#loc787 = loc(fused[#loc230, #loc231])
#loc788 = loc(fused[#loc232, #loc233])
#loc789 = loc(fused[#loc234, #loc235])
#loc790 = loc(fused[#loc236, #loc237])
#loc791 = loc(fused[#loc240, #loc241])
#loc792 = loc(fused[#loc242, #loc243])
#loc793 = loc(fused[#loc248, #loc249])
#loc794 = loc(fused[#loc250, #loc251])
#loc795 = loc(fused[#loc252, #loc253])
#loc796 = loc(fused[#loc254, #loc251])
#loc797 = loc(fused[#loc256, #loc257])
#loc798 = loc(fused[#loc259, #loc260])
#loc799 = loc(fused[#loc261, #loc262])
#loc800 = loc(fused[#loc264, #loc263])
#loc801 = loc(fused[#loc267, #loc268])
#loc802 = loc(fused[#loc271, #loc272])
#loc803 = loc(fused[#loc273, #loc274])
#loc804 = loc(fused[#loc276, #loc277])
#loc805 = loc(fused[#loc278, #loc279])
#loc806 = loc(fused[#loc280, #loc281])
#loc807 = loc(fused[#loc282, #loc274])
#loc808 = loc(fused[#loc288, #loc289])
#loc809 = loc(fused[#loc290, #loc291])
#loc810 = loc(fused[#loc292, #loc293])
#loc811 = loc(fused[#loc292, #loc294])
#loc812 = loc(fused[#loc290, #loc295])
#loc813 = loc(fused[#loc298, #loc299])
#loc814 = loc(fused[#loc300, #loc301])
#loc815 = loc(fused[#loc302, #loc303])
#loc816 = loc(fused[#loc305, #loc306])
#loc817 = loc(fused[#loc307, #loc301])
#loc818 = loc(fused[#loc313, #loc314])
#loc819 = loc(fused[#loc312, #loc314])
#loc820 = loc(fused[#loc311, #loc314])
#loc821 = loc(fused[#loc310, #loc309])
#loc822 = loc(fused[#loc319, #loc320])
#loc823 = loc(fused[#loc321, #loc322])
#loc824 = loc(fused[#loc324, #loc322])
#loc825 = loc(fused[#loc327, #loc325])
#loc826 = loc(fused[#loc331, #loc332])
#loc827 = loc(fused[#loc333, #loc334])
#loc828 = loc(fused[#loc336, #loc334])
#loc829 = loc(fused[#loc339, #loc337])
#loc830 = loc(fused[#loc341, #loc342])
#loc831 = loc(fused[#loc343, #loc344])
#loc832 = loc(fused[#loc345, #loc342])
#loc833 = loc(fused[#loc353, #loc354])
#loc834 = loc(fused[#loc361, #loc362])
#loc835 = loc(fused[#loc363, #loc364])
#loc836 = loc(fused[#loc363, #loc365])
#loc837 = loc(fused[#loc363, #loc366])
#loc838 = loc(fused[#loc367, #loc368])
#loc839 = loc(fused[#loc369, #loc372])
#loc840 = loc(fused[#loc373, #loc368])
#loc841 = loc(fused[#loc374, #loc375])
#loc842 = loc(fused[#loc376, #loc377])
#loc843 = loc(fused[#loc378, #loc375])
#loc844 = loc(fused[#loc380, #loc379])
#loc845 = loc(fused[#loc381, #loc382])
#loc846 = loc(fused[#loc384, #loc383])
#loc847 = loc(fused[#loc385, #loc386])
#loc848 = loc(fused[#loc388, #loc382])
#loc849 = loc(fused[#loc390, #loc389])
#loc850 = loc(fused[#loc392, #loc391])
#loc851 = loc(fused[#loc396, #loc397])
#loc852 = loc(fused[#loc398, #loc399])
#loc853 = loc(fused[#loc400, #loc401])
#loc854 = loc(fused[#loc403, #loc402])
#loc855 = loc(fused[#loc404, #loc405])
#loc856 = loc(fused[#loc408, #loc409])
#loc857 = loc(fused[#loc410, #loc411])
#loc858 = loc(fused[#loc412, #loc413])
#loc859 = loc(fused[#loc414, #loc415])
#loc860 = loc(fused[#loc416, #loc417])
#loc861 = loc(fused[#loc418, #loc419])
#loc862 = loc(fused[#loc422, #loc423])
#loc863 = loc(fused[#loc424, #loc425])
#loc864 = loc(fused[#loc430, #loc431])
#loc865 = loc(fused[#loc432, #loc433])
#loc866 = loc(fused[#loc434, #loc435])
#loc867 = loc(fused[#loc436, #loc433])
#loc868 = loc(fused[#loc438, #loc439])
#loc869 = loc(fused[#loc441, #loc442])
#loc870 = loc(fused[#loc443, #loc444])
#loc871 = loc(fused[#loc446, #loc445])
#loc872 = loc(fused[#loc449, #loc450])
#loc873 = loc(fused[#loc453, #loc454])
#loc874 = loc(fused[#loc455, #loc456])
#loc875 = loc(fused[#loc458, #loc459])
#loc876 = loc(fused[#loc460, #loc461])
#loc877 = loc(fused[#loc462, #loc463])
#loc878 = loc(fused[#loc464, #loc456])
#loc879 = loc(fused[#loc470, #loc471])
#loc880 = loc(fused[#loc472, #loc473])
#loc881 = loc(fused[#loc474, #loc475])
#loc882 = loc(fused[#loc474, #loc476])
#loc883 = loc(fused[#loc472, #loc477])
#loc884 = loc(fused[#loc480, #loc481])
#loc885 = loc(fused[#loc482, #loc483])
#loc886 = loc(fused[#loc484, #loc485])
#loc887 = loc(fused[#loc487, #loc488])
#loc888 = loc(fused[#loc489, #loc483])
#loc889 = loc(fused[#loc495, #loc496])
#loc890 = loc(fused[#loc494, #loc496])
#loc891 = loc(fused[#loc493, #loc496])
#loc892 = loc(fused[#loc492, #loc491])
#loc893 = loc(fused[#loc501, #loc502])
#loc894 = loc(fused[#loc503, #loc504])
#loc895 = loc(fused[#loc506, #loc504])
#loc896 = loc(fused[#loc509, #loc507])
#loc897 = loc(fused[#loc513, #loc514])
#loc898 = loc(fused[#loc515, #loc516])
#loc899 = loc(fused[#loc518, #loc516])
#loc900 = loc(fused[#loc521, #loc519])
#loc901 = loc(fused[#loc523, #loc524])
#loc902 = loc(fused[#loc525, #loc526])
#loc903 = loc(fused[#loc527, #loc524])
#loc904 = loc(fused[#loc535, #loc536])
#loc905 = loc(fused[#loc539, #loc540])
#loc906 = loc(fused[#loc541, #loc542])
#loc907 = loc(fused[#loc541, #loc543])
#loc908 = loc(fused[#loc541, #loc544])
#loc909 = loc(fused[#loc545, #loc546])
#loc910 = loc(fused[#loc547, #loc550])
#loc911 = loc(fused[#loc551, #loc546])
#loc912 = loc(fused[#loc552, #loc553])
#loc913 = loc(fused[#loc554, #loc555])
#loc914 = loc(fused[#loc556, #loc553])
#loc915 = loc(fused[#loc558, #loc557])
#loc916 = loc(fused[#loc559, #loc560])
#loc917 = loc(fused[#loc562, #loc561])
#loc918 = loc(fused[#loc563, #loc564])
#loc919 = loc(fused[#loc566, #loc560])
#loc920 = loc(fused[#loc568, #loc567])
#loc921 = loc(fused[#loc570, #loc569])
#loc922 = loc(fused[#loc578, #loc579])
#loc923 = loc(fused[#loc581, #loc582])
#loc924 = loc(fused[#loc583, #loc584])
#loc925 = loc(fused[#loc585, #loc586])
#loc926 = loc(fused[#loc588, #loc587])
#loc927 = loc(fused[#loc589, #loc590])
#loc928 = loc(fused[#loc600, #loc601])
#loc929 = loc(fused[#loc604, #loc605])
#loc930 = loc(fused[#loc606, #loc607])
#loc931 = loc(fused[#loc606, #loc608])
#loc932 = loc(fused[#loc606, #loc609])
#loc933 = loc(fused[#loc610, #loc611])
#loc934 = loc(fused[#loc612, #loc615])
#loc935 = loc(fused[#loc616, #loc611])
#loc936 = loc(fused[#loc618, #loc617])
#loc937 = loc(fused[#loc619, #loc620])
#loc938 = loc(fused[#loc622, #loc621])
#loc939 = loc(fused[#loc623, #loc624])
#loc940 = loc(fused[#loc626, #loc620])
#loc941 = loc(fused[#loc628, #loc627])
#loc942 = loc(fused[#loc630, #loc629])
#loc943 = loc(fused[#loc638, #loc639])
#loc944 = loc(fused[#loc640, #loc641])
#loc945 = loc(fused[#loc642, #loc643])
#loc946 = loc(fused[#loc645, #loc644])
#loc947 = loc(fused[#loc646, #loc647])
#loc948 = loc(fused[#loc658, #loc659])
#loc949 = loc(fused[#loc662, #loc663])
#loc950 = loc(fused[#loc664, #loc665])
#loc951 = loc(fused[#loc664, #loc666])
#loc952 = loc(fused[#loc664, #loc667])
#loc953 = loc(fused[#loc668, #loc669])
#loc954 = loc(fused[#loc670, #loc673])
#loc955 = loc(fused[#loc674, #loc669])
#loc956 = loc(fused[#loc676, #loc675])
#loc957 = loc(fused[#loc677, #loc678])
#loc958 = loc(fused[#loc680, #loc679])
#loc959 = loc(fused[#loc681, #loc682])
#loc960 = loc(fused[#loc684, #loc678])
#loc961 = loc(fused[#loc686, #loc685])
#loc962 = loc(fused[#loc688, #loc687])
