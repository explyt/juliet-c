!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE398_Poor_Code_Quality/CWE398_Poor_Code_Quality__empty_block_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Hello from bad()\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc4)
  cir.func no_proto @CWE398_Poor_Code_Quality__empty_block_15_bad() extra(#fn_attr) {
    cir.br ^bb1 loc(#loc55)
  ^bb1:  // pred: ^bb0
    %0 = cir.const #cir.int<6> : !s32i loc(#loc9)
    cir.br ^bb2 loc(#loc7)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %0 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc7)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc10)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc3)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc3)
    cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc11)
    cir.br ^bb6 loc(#loc12)
  ^bb5:  // pred: ^bb2
    %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc4)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc4)
    cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc13)
    cir.br ^bb6 loc(#loc14)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc8)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc6)
  } loc(#loc54)
  cir.func no_proto @CWE398_Poor_Code_Quality__empty_block_15_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc57)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc17)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc58)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc19)
    cir.return loc(#loc16)
  } loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Inside the block\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc21)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Hello from good()\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc22)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.br ^bb1 loc(#loc60)
  ^bb1:  // pred: ^bb0
    %0 = cir.const #cir.int<5> : !s32i loc(#loc27)
    cir.br ^bb2 loc(#loc25)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %0 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc25)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc28)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %1 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc29)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc29)
    cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc30)
    cir.br ^bb8 loc(#loc31)
  ^bb5:  // pred: ^bb2
    cir.br ^bb6 loc(#loc61)
  ^bb6:  // pred: ^bb5
    %3 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc21)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc21)
    cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc34)
    cir.br ^bb7 loc(#loc33)
  ^bb7:  // pred: ^bb6
    %5 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc22)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc22)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc35)
    cir.br ^bb8 loc(#loc36)
  ^bb8:  // 2 preds: ^bb4, ^bb7
    cir.br ^bb9 loc(#loc26)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc24)
  } loc(#loc59)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.br ^bb1 loc(#loc63)
  ^bb1:  // pred: ^bb0
    %0 = cir.const #cir.int<6> : !s32i loc(#loc41)
    cir.br ^bb2 loc(#loc39)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %0 : !s32i, ^bb7 [
      6: ^bb4
    ] loc(#loc39)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc42)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc64)
  ^bb5:  // pred: ^bb4
    %1 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc45)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    cir.br ^bb6 loc(#loc44)
  ^bb6:  // pred: ^bb5
    %3 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc47)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    cir.br ^bb8 loc(#loc49)
  ^bb7:  // pred: ^bb2
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc50)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    cir.br ^bb8 loc(#loc52)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc40)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc38)
  } loc(#loc62)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE398_Poor_Code_Quality/CWE398_Poor_Code_Quality__empty_block_15.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":28:15)
#loc4 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":32:19)
#loc5 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":20:1)
#loc6 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":35:1)
#loc7 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":22:5)
#loc8 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":34:5)
#loc9 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":22:12)
#loc10 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":24:5)
#loc11 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":28:5)
#loc12 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":29:5)
#loc13 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":32:9)
#loc14 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":33:9)
#loc15 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":79:1)
#loc16 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":83:1)
#loc17 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":81:5)
#loc18 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":81:11)
#loc19 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":82:5)
#loc20 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":82:11)
#loc21 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":53:19)
#loc22 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":55:15)
#loc23 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":42:1)
#loc24 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":58:1)
#loc25 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":44:5)
#loc26 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":57:5)
#loc27 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":44:12)
#loc28 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":46:5)
#loc29 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":48:19)
#loc30 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":48:9)
#loc31 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":49:9)
#loc32 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":52:5)
#loc33 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":54:5)
#loc34 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":53:9)
#loc35 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":55:5)
#loc36 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":56:5)
#loc37 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":61:1)
#loc38 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":77:1)
#loc39 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":63:5)
#loc40 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":76:5)
#loc41 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":63:12)
#loc42 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":65:5)
#loc43 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":67:5)
#loc44 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":69:5)
#loc45 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":68:19)
#loc46 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":68:9)
#loc47 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":70:15)
#loc48 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":70:5)
#loc49 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":71:5)
#loc50 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":74:19)
#loc51 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":74:9)
#loc52 = loc("CWE398_Poor_Code_Quality__empty_block_15.c":75:9)
#loc53 = loc(fused[#loc1, #loc2])
#loc54 = loc(fused[#loc5, #loc6])
#loc55 = loc(fused[#loc7, #loc8])
#loc56 = loc(fused[#loc15, #loc16])
#loc57 = loc(fused[#loc17, #loc18])
#loc58 = loc(fused[#loc19, #loc20])
#loc59 = loc(fused[#loc23, #loc24])
#loc60 = loc(fused[#loc25, #loc26])
#loc61 = loc(fused[#loc32, #loc33])
#loc62 = loc(fused[#loc37, #loc38])
#loc63 = loc(fused[#loc39, #loc40])
#loc64 = loc(fused[#loc43, #loc44])
