!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_listen_socket_63a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc285)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc286)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc287)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc288)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc289)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc290)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc291)
  cir.func private @close(!s32i) -> !s32i loc(#loc292)
  cir.func private @CWE126_Buffer_Overread__CWE129_listen_socket_63b_badSink(!cir.ptr<!s32i>) loc(#loc293)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_listen_socket_63_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc295)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc23)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc24)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc296)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc298)
      %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc299)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc300)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc301)
      %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc302)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc33)
      %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc33)
      cir.store %9, %5 : !s32i, !cir.ptr<!s32i> loc(#loc300)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc35)
      %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc35)
      cir.store %11, %6 : !s32i, !cir.ptr<!s32i> loc(#loc301)
      cir.scope {
        cir.do {
          cir.scope {
            %12 = cir.const #cir.int<2> : !s32i loc(#loc42)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc43)
            %14 = cir.const #cir.int<6> : !s32i loc(#loc44)
            %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc45)
            cir.store %15, %5 : !s32i, !cir.ptr<!s32i> loc(#loc305)
            cir.scope {
              %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc50)
              %58 = cir.const #cir.int<1> : !s32i loc(#loc51)
              %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc51)
              %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc307)
              cir.if %60 {
                cir.break loc(#loc53)
              } loc(#loc308)
            } loc(#loc306)
            %16 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc309)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc56)
            %18 = cir.const #cir.int<16> : !u64i loc(#loc310)
            cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc311)
            %19 = cir.const #cir.int<2> : !s32i loc(#loc61)
            %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc61)
            %21 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
            cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc312)
            %22 = cir.const #cir.int<0> : !s32i loc(#loc64)
            %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc64)
            %24 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc65)
            %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc66)
            cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc313)
            %26 = cir.const #cir.int<27015> : !s32i loc(#loc68)
            %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc68)
            %28 = cir.call @htons(%27) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc69)
            %29 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
            cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc314)
            cir.scope {
              %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc75)
              %58 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc316)
              %59 = cir.const #cir.int<16> : !u64i loc(#loc317)
              %60 = cir.cast(integral, %59 : !u64i), !u32i loc(#loc317)
              %61 = cir.call @bind(%57, %58, %60) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc80)
              %62 = cir.const #cir.int<1> : !s32i loc(#loc81)
              %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc81)
              %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc318)
              cir.if %64 {
                cir.break loc(#loc83)
              } loc(#loc319)
            } loc(#loc315)
            cir.scope {
              %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc86)
              %58 = cir.const #cir.int<5> : !s32i loc(#loc87)
              %59 = cir.call @listen(%57, %58) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc88)
              %60 = cir.const #cir.int<1> : !s32i loc(#loc89)
              %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc89)
              %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc321)
              cir.if %62 {
                cir.break loc(#loc91)
              } loc(#loc322)
            } loc(#loc320)
            %30 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc92)
            %31 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc93)
            %32 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc94)
            %33 = cir.call @accept(%30, %31, %32) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc95)
            cir.store %33, %6 : !s32i, !cir.ptr<!s32i> loc(#loc323)
            cir.scope {
              %57 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc100)
              %58 = cir.const #cir.int<1> : !s32i loc(#loc101)
              %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc101)
              %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc325)
              cir.if %60 {
                cir.break loc(#loc103)
              } loc(#loc326)
            } loc(#loc324)
            %34 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc104)
            %35 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc105)
            %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc105)
            %37 = cir.const #cir.int<3> : !s32i loc(#loc106)
            %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc106)
            %39 = cir.const #cir.int<4> : !u64i loc(#loc106)
            %40 = cir.binop(mul, %38, %39) : !u64i loc(#loc106)
            %41 = cir.const #cir.int<2> : !s32i loc(#loc106)
            %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc106)
            %43 = cir.binop(add, %40, %42) : !u64i loc(#loc106)
            %44 = cir.const #cir.int<1> : !s32i loc(#loc107)
            %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc107)
            %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc327)
            %47 = cir.const #cir.int<0> : !s32i loc(#loc108)
            %48 = cir.call @recv(%34, %36, %46, %47) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc109)
            %49 = cir.cast(integral, %48 : !s64i), !s32i loc(#loc109)
            cir.store %49, %3 : !s32i, !cir.ptr<!s32i> loc(#loc328)
            cir.scope {
              %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc114)
              %58 = cir.const #cir.int<1> : !s32i loc(#loc115)
              %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc115)
              %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc330)
              %61 = cir.ternary(%60, true {
                %62 = cir.const #true loc(#loc116)
                cir.yield %62 : !cir.bool loc(#loc116)
              }, false {
                %62 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc117)
                %63 = cir.const #cir.int<0> : !s32i loc(#loc118)
                %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc331)
                %65 = cir.ternary(%64, true {
                  %66 = cir.const #true loc(#loc116)
                  cir.yield %66 : !cir.bool loc(#loc116)
                }, false {
                  %66 = cir.const #false loc(#loc116)
                  cir.yield %66 : !cir.bool loc(#loc116)
                }) : (!cir.bool) -> !cir.bool loc(#loc116)
                cir.yield %65 : !cir.bool loc(#loc116)
              }) : (!cir.bool) -> !cir.bool loc(#loc116)
              cir.if %61 {
                cir.break loc(#loc120)
              } loc(#loc332)
            } loc(#loc329)
            %50 = cir.const #cir.int<0> : !s32i loc(#loc121)
            %51 = cir.cast(integral, %50 : !s32i), !s8i loc(#loc121)
            %52 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc122)
            %53 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc123)
            %54 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %52 : !s32i), !cir.ptr<!s8i> loc(#loc123)
            cir.store %51, %54 : !s8i, !cir.ptr<!s8i> loc(#loc333)
            %55 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc124)
            %56 = cir.call @atoi(%55) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc125)
            cir.store %56, %0 : !s32i, !cir.ptr<!s32i> loc(#loc334)
          } loc(#loc304)
          cir.yield loc(#loc39)
        } while {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc128)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc128)
          cir.condition(%13) loc(#loc128)
        } loc(#loc303)
      } loc(#loc303)
      cir.scope {
        %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc131)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc132)
        %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc132)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc336)
        cir.if %15 {
          %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc134)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc135)
        } loc(#loc337)
      } loc(#loc335)
      cir.scope {
        %12 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc138)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc139)
        %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc139)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc339)
        cir.if %15 {
          %16 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc141)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc142)
        } loc(#loc340)
      } loc(#loc338)
    } loc(#loc297)
    cir.call @CWE126_Buffer_Overread__CWE129_listen_socket_63b_badSink(%0) : (!cir.ptr<!s32i>) -> () loc(#loc143)
    cir.return loc(#loc20)
  } loc(#loc294)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_listen_socket_63_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc342)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc146)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc343)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc148)
    cir.return loc(#loc145)
  } loc(#loc341)
  cir.func private @CWE126_Buffer_Overread__CWE129_listen_socket_63b_goodG2BSink(!cir.ptr<!s32i>) loc(#loc344)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc346)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc156)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc157)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc347)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc159)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc348)
    cir.call @CWE126_Buffer_Overread__CWE129_listen_socket_63b_goodG2BSink(%0) : (!cir.ptr<!s32i>) -> () loc(#loc161)
    cir.return loc(#loc153)
  } loc(#loc345)
  cir.func private @CWE126_Buffer_Overread__CWE129_listen_socket_63b_goodB2GSink(!cir.ptr<!s32i>) loc(#loc349)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc351)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc168)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc169)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc352)
    cir.scope {
      %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc354)
      %4 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc355)
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc356)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc357)
      %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc358)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc178)
      %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc178)
      cir.store %9, %5 : !s32i, !cir.ptr<!s32i> loc(#loc356)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc180)
      %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc180)
      cir.store %11, %6 : !s32i, !cir.ptr<!s32i> loc(#loc357)
      cir.scope {
        cir.do {
          cir.scope {
            %12 = cir.const #cir.int<2> : !s32i loc(#loc187)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc188)
            %14 = cir.const #cir.int<6> : !s32i loc(#loc189)
            %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc190)
            cir.store %15, %5 : !s32i, !cir.ptr<!s32i> loc(#loc361)
            cir.scope {
              %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc195)
              %58 = cir.const #cir.int<1> : !s32i loc(#loc196)
              %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc196)
              %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc363)
              cir.if %60 {
                cir.break loc(#loc198)
              } loc(#loc364)
            } loc(#loc362)
            %16 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc365)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc201)
            %18 = cir.const #cir.int<16> : !u64i loc(#loc366)
            cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc367)
            %19 = cir.const #cir.int<2> : !s32i loc(#loc206)
            %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc206)
            %21 = cir.get_member %4[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc62)
            cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc368)
            %22 = cir.const #cir.int<0> : !s32i loc(#loc208)
            %23 = cir.cast(integral, %22 : !s32i), !u32i loc(#loc208)
            %24 = cir.get_member %4[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc65)
            %25 = cir.get_member %24[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc66)
            cir.store %23, %25 : !u32i, !cir.ptr<!u32i> loc(#loc369)
            %26 = cir.const #cir.int<27015> : !s32i loc(#loc210)
            %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc210)
            %28 = cir.call @htons(%27) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc211)
            %29 = cir.get_member %4[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
            cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc370)
            cir.scope {
              %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc216)
              %58 = cir.cast(bitcast, %4 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc372)
              %59 = cir.const #cir.int<16> : !u64i loc(#loc373)
              %60 = cir.cast(integral, %59 : !u64i), !u32i loc(#loc373)
              %61 = cir.call @bind(%57, %58, %60) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc221)
              %62 = cir.const #cir.int<1> : !s32i loc(#loc222)
              %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc222)
              %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc374)
              cir.if %64 {
                cir.break loc(#loc224)
              } loc(#loc375)
            } loc(#loc371)
            cir.scope {
              %57 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc227)
              %58 = cir.const #cir.int<5> : !s32i loc(#loc228)
              %59 = cir.call @listen(%57, %58) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc229)
              %60 = cir.const #cir.int<1> : !s32i loc(#loc230)
              %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc230)
              %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc377)
              cir.if %62 {
                cir.break loc(#loc232)
              } loc(#loc378)
            } loc(#loc376)
            %30 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc233)
            %31 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc234)
            %32 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc235)
            %33 = cir.call @accept(%30, %31, %32) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc236)
            cir.store %33, %6 : !s32i, !cir.ptr<!s32i> loc(#loc379)
            cir.scope {
              %57 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc241)
              %58 = cir.const #cir.int<1> : !s32i loc(#loc242)
              %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc242)
              %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc381)
              cir.if %60 {
                cir.break loc(#loc244)
              } loc(#loc382)
            } loc(#loc380)
            %34 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc245)
            %35 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc246)
            %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc246)
            %37 = cir.const #cir.int<3> : !s32i loc(#loc247)
            %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc247)
            %39 = cir.const #cir.int<4> : !u64i loc(#loc247)
            %40 = cir.binop(mul, %38, %39) : !u64i loc(#loc247)
            %41 = cir.const #cir.int<2> : !s32i loc(#loc247)
            %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc247)
            %43 = cir.binop(add, %40, %42) : !u64i loc(#loc247)
            %44 = cir.const #cir.int<1> : !s32i loc(#loc248)
            %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc248)
            %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc383)
            %47 = cir.const #cir.int<0> : !s32i loc(#loc249)
            %48 = cir.call @recv(%34, %36, %46, %47) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc250)
            %49 = cir.cast(integral, %48 : !s64i), !s32i loc(#loc250)
            cir.store %49, %3 : !s32i, !cir.ptr<!s32i> loc(#loc384)
            cir.scope {
              %57 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc255)
              %58 = cir.const #cir.int<1> : !s32i loc(#loc256)
              %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc256)
              %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc386)
              %61 = cir.ternary(%60, true {
                %62 = cir.const #true loc(#loc257)
                cir.yield %62 : !cir.bool loc(#loc257)
              }, false {
                %62 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc258)
                %63 = cir.const #cir.int<0> : !s32i loc(#loc259)
                %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc387)
                %65 = cir.ternary(%64, true {
                  %66 = cir.const #true loc(#loc257)
                  cir.yield %66 : !cir.bool loc(#loc257)
                }, false {
                  %66 = cir.const #false loc(#loc257)
                  cir.yield %66 : !cir.bool loc(#loc257)
                }) : (!cir.bool) -> !cir.bool loc(#loc257)
                cir.yield %65 : !cir.bool loc(#loc257)
              }) : (!cir.bool) -> !cir.bool loc(#loc257)
              cir.if %61 {
                cir.break loc(#loc261)
              } loc(#loc388)
            } loc(#loc385)
            %50 = cir.const #cir.int<0> : !s32i loc(#loc262)
            %51 = cir.cast(integral, %50 : !s32i), !s8i loc(#loc262)
            %52 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc263)
            %53 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc264)
            %54 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %52 : !s32i), !cir.ptr<!s8i> loc(#loc264)
            cir.store %51, %54 : !s8i, !cir.ptr<!s8i> loc(#loc389)
            %55 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc265)
            %56 = cir.call @atoi(%55) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc266)
            cir.store %56, %0 : !s32i, !cir.ptr<!s32i> loc(#loc390)
          } loc(#loc360)
          cir.yield loc(#loc184)
        } while {
          %12 = cir.const #cir.int<0> : !s32i loc(#loc269)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc269)
          cir.condition(%13) loc(#loc269)
        } loc(#loc359)
      } loc(#loc359)
      cir.scope {
        %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc272)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc273)
        %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc273)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc392)
        cir.if %15 {
          %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc275)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc276)
        } loc(#loc393)
      } loc(#loc391)
      cir.scope {
        %12 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc279)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc280)
        %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc280)
        %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc395)
        cir.if %15 {
          %16 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc282)
          %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc283)
        } loc(#loc396)
      } loc(#loc394)
    } loc(#loc353)
    cir.call @CWE126_Buffer_Overread__CWE129_listen_socket_63b_goodB2GSink(%0) : (!cir.ptr<!s32i>) -> () loc(#loc284)
    cir.return loc(#loc165)
  } loc(#loc350)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":45:1)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":45:76)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":47:1)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":122:1)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":49:5)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":49:9)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":51:13)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":51:12)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":51:5)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":52:5)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":120:5)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":57:9)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":57:13)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":58:9)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":58:28)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":59:9)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":59:31)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":60:9)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":60:31)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":61:9)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":61:41)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":62:9)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":105:17)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":63:9)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":104:9)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":72:35)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":72:44)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":72:57)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":72:28)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":72:13)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":72:68)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":73:13)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":76:13)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":73:17)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":73:33)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":74:13)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":75:17)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":77:20)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":77:21)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":77:30)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":77:33)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":77:47)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":77:13)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":77:48)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":78:34)
#loc62 = loc("/usr/include/netinet/in.h":249:5)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":78:13)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":79:39)
#loc65 = loc("/usr/include/netinet/in.h":251:20)
#loc66 = loc("/usr/include/netinet/in.h":33:15)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":79:13)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":80:38)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":80:32)
#loc70 = loc("/usr/include/netinet/in.h":250:15)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":80:13)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":80:46)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":81:13)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":84:13)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":81:22)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":81:54)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":81:55)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":81:64)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":81:78)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":81:17)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":81:84)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":82:13)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":83:17)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":85:13)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":88:13)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":85:24)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":85:38)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":85:17)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":85:57)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":86:13)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":87:17)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":89:35)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":89:49)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":89:55)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":89:28)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":89:13)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":89:59)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":90:13)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":93:13)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":90:17)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":90:33)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":91:13)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":92:17)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":95:31)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":95:45)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":95:58)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":95:76)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":95:79)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":95:26)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":95:13)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":95:80)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":96:13)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":99:13)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":96:17)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":96:31)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":96:44)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":96:47)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":96:61)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":97:13)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":98:17)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":101:39)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":101:25)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":101:13)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":103:25)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":103:20)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":103:13)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":103:36)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":105:16)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":106:9)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":109:9)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":106:13)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":106:29)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":107:9)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":108:26)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":108:13)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":110:9)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":113:9)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":110:13)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":110:29)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":111:9)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":112:26)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":112:13)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":121:5)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":222:1)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":226:1)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":224:5)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":224:13)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":225:5)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":225:13)
#loc150 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":129:1)
#loc151 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":129:77)
#loc152 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":131:1)
#loc153 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":140:1)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":133:5)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":133:9)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":135:13)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":135:12)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":135:5)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":138:12)
#loc160 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":138:5)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":139:5)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":143:1)
#loc163 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":143:77)
#loc164 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":145:1)
#loc165 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":220:1)
#loc166 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":147:5)
#loc167 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":147:9)
#loc168 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":149:13)
#loc169 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":149:12)
#loc170 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":149:5)
#loc171 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":150:5)
#loc172 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":218:5)
#loc173 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":155:9)
#loc174 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":155:13)
#loc175 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":156:9)
#loc176 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":156:28)
#loc177 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":157:9)
#loc178 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":157:31)
#loc179 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":158:9)
#loc180 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":158:31)
#loc181 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":159:9)
#loc182 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":159:41)
#loc183 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":160:9)
#loc184 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":203:17)
#loc185 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":161:9)
#loc186 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":202:9)
#loc187 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":170:35)
#loc188 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":170:44)
#loc189 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":170:57)
#loc190 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":170:28)
#loc191 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":170:13)
#loc192 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":170:68)
#loc193 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":171:13)
#loc194 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":174:13)
#loc195 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":171:17)
#loc196 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":171:33)
#loc197 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":172:13)
#loc198 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":173:17)
#loc199 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":175:20)
#loc200 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":175:21)
#loc201 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":175:30)
#loc202 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":175:33)
#loc203 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":175:47)
#loc204 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":175:13)
#loc205 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":175:48)
#loc206 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":176:34)
#loc207 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":176:13)
#loc208 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":177:39)
#loc209 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":177:13)
#loc210 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":178:38)
#loc211 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":178:32)
#loc212 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":178:13)
#loc213 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":178:46)
#loc214 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":179:13)
#loc215 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":182:13)
#loc216 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":179:22)
#loc217 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":179:54)
#loc218 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":179:55)
#loc219 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":179:64)
#loc220 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":179:78)
#loc221 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":179:17)
#loc222 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":179:84)
#loc223 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":180:13)
#loc224 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":181:17)
#loc225 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":183:13)
#loc226 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":186:13)
#loc227 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":183:24)
#loc228 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":183:38)
#loc229 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":183:17)
#loc230 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":183:57)
#loc231 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":184:13)
#loc232 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":185:17)
#loc233 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":187:35)
#loc234 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":187:49)
#loc235 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":187:55)
#loc236 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":187:28)
#loc237 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":187:13)
#loc238 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":187:59)
#loc239 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":188:13)
#loc240 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":191:13)
#loc241 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":188:17)
#loc242 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":188:33)
#loc243 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":189:13)
#loc244 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":190:17)
#loc245 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":193:31)
#loc246 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":193:45)
#loc247 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":193:58)
#loc248 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":193:76)
#loc249 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":193:79)
#loc250 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":193:26)
#loc251 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":193:13)
#loc252 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":193:80)
#loc253 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":194:13)
#loc254 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":197:13)
#loc255 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":194:17)
#loc256 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":194:31)
#loc257 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":194:44)
#loc258 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":194:47)
#loc259 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":194:61)
#loc260 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":195:13)
#loc261 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":196:17)
#loc262 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":199:39)
#loc263 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":199:25)
#loc264 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":199:13)
#loc265 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":201:25)
#loc266 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":201:20)
#loc267 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":201:13)
#loc268 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":201:36)
#loc269 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":203:16)
#loc270 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":204:9)
#loc271 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":207:9)
#loc272 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":204:13)
#loc273 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":204:29)
#loc274 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":205:9)
#loc275 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":206:26)
#loc276 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":206:13)
#loc277 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":208:9)
#loc278 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":211:9)
#loc279 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":208:13)
#loc280 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":208:29)
#loc281 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":209:9)
#loc282 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":210:26)
#loc283 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":210:13)
#loc284 = loc("CWE126_Buffer_Overread__CWE129_listen_socket_63a.c":219:5)
#loc285 = loc(fused[#loc1, #loc2])
#loc286 = loc(fused[#loc3, #loc4])
#loc287 = loc(fused[#loc5, #loc6])
#loc288 = loc(fused[#loc7, #loc8])
#loc289 = loc(fused[#loc9, #loc10])
#loc290 = loc(fused[#loc11, #loc12])
#loc291 = loc(fused[#loc13, #loc14])
#loc292 = loc(fused[#loc15, #loc16])
#loc293 = loc(fused[#loc17, #loc18])
#loc294 = loc(fused[#loc19, #loc20])
#loc295 = loc(fused[#loc21, #loc22])
#loc296 = loc(fused[#loc25, #loc23])
#loc297 = loc(fused[#loc26, #loc27])
#loc298 = loc(fused[#loc28, #loc29])
#loc299 = loc(fused[#loc30, #loc31])
#loc300 = loc(fused[#loc32, #loc33])
#loc301 = loc(fused[#loc34, #loc35])
#loc302 = loc(fused[#loc36, #loc37])
#loc303 = loc(fused[#loc38, #loc39])
#loc304 = loc(fused[#loc40, #loc41])
#loc305 = loc(fused[#loc46, #loc47])
#loc306 = loc(fused[#loc48, #loc49])
#loc307 = loc(fused[#loc50, #loc51])
#loc308 = loc(fused[#loc52, #loc49])
#loc309 = loc(fused[#loc54, #loc55])
#loc310 = loc(fused[#loc57, #loc58])
#loc311 = loc(fused[#loc59, #loc60])
#loc312 = loc(fused[#loc63, #loc61])
#loc313 = loc(fused[#loc67, #loc64])
#loc314 = loc(fused[#loc71, #loc72])
#loc315 = loc(fused[#loc73, #loc74])
#loc316 = loc(fused[#loc76, #loc77])
#loc317 = loc(fused[#loc78, #loc79])
#loc318 = loc(fused[#loc80, #loc81])
#loc319 = loc(fused[#loc82, #loc74])
#loc320 = loc(fused[#loc84, #loc85])
#loc321 = loc(fused[#loc88, #loc89])
#loc322 = loc(fused[#loc90, #loc85])
#loc323 = loc(fused[#loc96, #loc97])
#loc324 = loc(fused[#loc98, #loc99])
#loc325 = loc(fused[#loc100, #loc101])
#loc326 = loc(fused[#loc102, #loc99])
#loc327 = loc(fused[#loc106, #loc107])
#loc328 = loc(fused[#loc110, #loc111])
#loc329 = loc(fused[#loc112, #loc113])
#loc330 = loc(fused[#loc114, #loc115])
#loc331 = loc(fused[#loc117, #loc118])
#loc332 = loc(fused[#loc119, #loc113])
#loc333 = loc(fused[#loc123, #loc121])
#loc334 = loc(fused[#loc126, #loc127])
#loc335 = loc(fused[#loc129, #loc130])
#loc336 = loc(fused[#loc131, #loc132])
#loc337 = loc(fused[#loc133, #loc130])
#loc338 = loc(fused[#loc136, #loc137])
#loc339 = loc(fused[#loc138, #loc139])
#loc340 = loc(fused[#loc140, #loc137])
#loc341 = loc(fused[#loc144, #loc145])
#loc342 = loc(fused[#loc146, #loc147])
#loc343 = loc(fused[#loc148, #loc149])
#loc344 = loc(fused[#loc150, #loc151])
#loc345 = loc(fused[#loc152, #loc153])
#loc346 = loc(fused[#loc154, #loc155])
#loc347 = loc(fused[#loc158, #loc156])
#loc348 = loc(fused[#loc160, #loc159])
#loc349 = loc(fused[#loc162, #loc163])
#loc350 = loc(fused[#loc164, #loc165])
#loc351 = loc(fused[#loc166, #loc167])
#loc352 = loc(fused[#loc170, #loc168])
#loc353 = loc(fused[#loc171, #loc172])
#loc354 = loc(fused[#loc173, #loc174])
#loc355 = loc(fused[#loc175, #loc176])
#loc356 = loc(fused[#loc177, #loc178])
#loc357 = loc(fused[#loc179, #loc180])
#loc358 = loc(fused[#loc181, #loc182])
#loc359 = loc(fused[#loc183, #loc184])
#loc360 = loc(fused[#loc185, #loc186])
#loc361 = loc(fused[#loc191, #loc192])
#loc362 = loc(fused[#loc193, #loc194])
#loc363 = loc(fused[#loc195, #loc196])
#loc364 = loc(fused[#loc197, #loc194])
#loc365 = loc(fused[#loc199, #loc200])
#loc366 = loc(fused[#loc202, #loc203])
#loc367 = loc(fused[#loc204, #loc205])
#loc368 = loc(fused[#loc207, #loc206])
#loc369 = loc(fused[#loc209, #loc208])
#loc370 = loc(fused[#loc212, #loc213])
#loc371 = loc(fused[#loc214, #loc215])
#loc372 = loc(fused[#loc217, #loc218])
#loc373 = loc(fused[#loc219, #loc220])
#loc374 = loc(fused[#loc221, #loc222])
#loc375 = loc(fused[#loc223, #loc215])
#loc376 = loc(fused[#loc225, #loc226])
#loc377 = loc(fused[#loc229, #loc230])
#loc378 = loc(fused[#loc231, #loc226])
#loc379 = loc(fused[#loc237, #loc238])
#loc380 = loc(fused[#loc239, #loc240])
#loc381 = loc(fused[#loc241, #loc242])
#loc382 = loc(fused[#loc243, #loc240])
#loc383 = loc(fused[#loc247, #loc248])
#loc384 = loc(fused[#loc251, #loc252])
#loc385 = loc(fused[#loc253, #loc254])
#loc386 = loc(fused[#loc255, #loc256])
#loc387 = loc(fused[#loc258, #loc259])
#loc388 = loc(fused[#loc260, #loc254])
#loc389 = loc(fused[#loc264, #loc262])
#loc390 = loc(fused[#loc267, #loc268])
#loc391 = loc(fused[#loc270, #loc271])
#loc392 = loc(fused[#loc272, #loc273])
#loc393 = loc(fused[#loc274, #loc271])
#loc394 = loc(fused[#loc277, #loc278])
#loc395 = loc(fused[#loc279, #loc280])
#loc396 = loc(fused[#loc281, #loc278])
