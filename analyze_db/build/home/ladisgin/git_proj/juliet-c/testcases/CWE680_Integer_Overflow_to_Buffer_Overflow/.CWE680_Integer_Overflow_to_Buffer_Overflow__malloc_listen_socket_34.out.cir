!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":191:10)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":191:14)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":191:20)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":191:32)
#true = #cir.bool<true> : !cir.bool
!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34_unionType = !cir.struct<union "CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34_unionType" {!s32i, !s32i}>
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc372 = loc(fused[#loc213, #loc214])
#loc373 = loc(fused[#loc215, #loc216])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc288)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc289)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc290)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc291)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc292)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc293)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc294)
  cir.func private @close(!s32i) -> !s32i loc(#loc295)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc296)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc297)
  cir.func private @printIntLine(!s32i) loc(#loc298)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc299)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc301)
    %1 = cir.alloca !ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34_unionType, !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc302)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc32)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc303)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc305)
      %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc306)
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc307)
      %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc308)
      %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc309)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc41)
      %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc41)
      cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc307)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc43)
      %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc43)
      cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc308)
      cir.scope {
        cir.do {
          %15 = cir.const #cir.int<2> : !s32i loc(#loc48)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc49)
          %17 = cir.const #cir.int<6> : !s32i loc(#loc50)
          %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc51)
          cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc311)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc56)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc57)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc57)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc313)
            cir.if %63 {
              cir.break loc(#loc59)
            } loc(#loc314)
          } loc(#loc312)
          %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc315)
          %20 = cir.const #cir.int<0> : !s32i loc(#loc62)
          %21 = cir.const #cir.int<16> : !u64i loc(#loc316)
          cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc317)
          %22 = cir.const #cir.int<2> : !s32i loc(#loc67)
          %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc67)
          %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
          cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc318)
          %25 = cir.const #cir.int<0> : !s32i loc(#loc70)
          %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc70)
          %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
          %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
          cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc319)
          %29 = cir.const #cir.int<27015> : !s32i loc(#loc74)
          %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc74)
          %31 = cir.call @htons(%30) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc75)
          %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
          cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc320)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc81)
            %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc322)
            %62 = cir.const #cir.int<16> : !u64i loc(#loc323)
            %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc323)
            %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc86)
            %65 = cir.const #cir.int<1> : !s32i loc(#loc87)
            %66 = cir.unary(minus, %65) : !s32i, !s32i loc(#loc87)
            %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc324)
            cir.if %67 {
              cir.break loc(#loc89)
            } loc(#loc325)
          } loc(#loc321)
          cir.scope {
            %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc92)
            %61 = cir.const #cir.int<5> : !s32i loc(#loc93)
            %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc94)
            %63 = cir.const #cir.int<1> : !s32i loc(#loc95)
            %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc95)
            %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc327)
            cir.if %65 {
              cir.break loc(#loc97)
            } loc(#loc328)
          } loc(#loc326)
          %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc98)
          %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc99)
          %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc100)
          %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc101)
          cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc329)
          cir.scope {
            %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc106)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc107)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc107)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc331)
            cir.if %63 {
              cir.break loc(#loc109)
            } loc(#loc332)
          } loc(#loc330)
          %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc110)
          %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc111)
          %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc111)
          %40 = cir.const #cir.int<3> : !s32i loc(#loc112)
          %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc112)
          %42 = cir.const #cir.int<4> : !u64i loc(#loc112)
          %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc112)
          %44 = cir.const #cir.int<2> : !s32i loc(#loc112)
          %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc112)
          %46 = cir.binop(add, %43, %45) : !u64i loc(#loc112)
          %47 = cir.const #cir.int<1> : !s32i loc(#loc113)
          %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc113)
          %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc333)
          %50 = cir.const #cir.int<0> : !s32i loc(#loc114)
          %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc115)
          %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc115)
          cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc334)
          cir.scope {
            %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc120)
            %61 = cir.const #cir.int<1> : !s32i loc(#loc121)
            %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc121)
            %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc336)
            %64 = cir.ternary(%63, true {
              %65 = cir.const #true loc(#loc122)
              cir.yield %65 : !cir.bool loc(#loc122)
            }, false {
              %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc123)
              %66 = cir.const #cir.int<0> : !s32i loc(#loc124)
              %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc337)
              %68 = cir.ternary(%67, true {
                %69 = cir.const #true loc(#loc122)
                cir.yield %69 : !cir.bool loc(#loc122)
              }, false {
                %69 = cir.const #false loc(#loc122)
                cir.yield %69 : !cir.bool loc(#loc122)
              }) : (!cir.bool) -> !cir.bool loc(#loc122)
              cir.yield %68 : !cir.bool loc(#loc122)
            }) : (!cir.bool) -> !cir.bool loc(#loc122)
            cir.if %64 {
              cir.break loc(#loc126)
            } loc(#loc338)
          } loc(#loc335)
          %53 = cir.const #cir.int<0> : !s32i loc(#loc127)
          %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc127)
          %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc128)
          %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc129)
          %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc129)
          cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc339)
          %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc130)
          %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc131)
          cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc340)
          cir.yield loc(#loc47)
        } while {
          %15 = cir.const #cir.int<0> : !s32i loc(#loc134)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc134)
          cir.condition(%16) loc(#loc134)
        } loc(#loc310)
      } loc(#loc310)
      cir.scope {
        %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc137)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc138)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc138)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc342)
        cir.if %18 {
          %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc140)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc141)
        } loc(#loc343)
      } loc(#loc341)
      cir.scope {
        %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc144)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc145)
        %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc145)
        %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc345)
        cir.if %18 {
          %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc147)
          %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc148)
        } loc(#loc346)
      } loc(#loc344)
    } loc(#loc304)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    %5 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34_unionType> -> !cir.ptr<!s32i> loc(#loc150)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc347)
    cir.scope {
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc349)
      %7 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34_unionType> -> !cir.ptr<!s32i> loc(#loc156)
      %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc155)
      cir.store %8, %6 : !s32i, !cir.ptr<!s32i> loc(#loc349)
      cir.scope {
        %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc351)
        %10 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc352)
        %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc163)
        %12 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc164)
        %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc164)
        %14 = cir.const #cir.int<4> : !u64i loc(#loc353)
        %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc354)
        %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc163)
        %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc355)
        cir.store %17, %10 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc356)
        cir.scope {
          %25 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc171)
          %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc172)
          %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc172)
          %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s32i>, !cir.bool loc(#loc358)
          cir.if %28 {
            %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc174)
            %30 = cir.const #cir.int<1> : !s32i loc(#loc175)
            %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc176)
            cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc174)
          } loc(#loc359)
        } loc(#loc357)
        cir.scope {
          %25 = cir.const #cir.int<0> : !s32i loc(#loc179)
          %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc179)
          cir.store %26, %9 : !u64i, !cir.ptr<!u64i> loc(#loc361)
          cir.for : cond {
            %27 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc181)
            %28 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc182)
            %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc182)
            %30 = cir.cmp(lt, %27, %29) : !u64i, !cir.bool loc(#loc362)
            cir.condition(%30) loc(#loc183)
          } body {
            cir.scope {
              %27 = cir.const #cir.int<0> : !s32i loc(#loc185)
              %28 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc186)
              %29 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc187)
              %30 = cir.ptr_stride(%28 : !cir.ptr<!s32i>, %29 : !u64i), !cir.ptr<!s32i> loc(#loc188)
              cir.store %27, %30 : !s32i, !cir.ptr<!s32i> loc(#loc364)
            } loc(#loc363)
            cir.yield loc(#loc178)
          } step {
            %27 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc189)
            %28 = cir.unary(inc, %27) : !u64i, !u64i loc(#loc190)
            cir.store %28, %9 : !u64i, !cir.ptr<!u64i> loc(#loc365)
            cir.yield loc(#loc360)
          } loc(#loc360)
        } loc(#loc360)
        %18 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc191)
        %19 = cir.const #cir.int<0> : !s32i loc(#loc192)
        %20 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc193)
        %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc191)
        cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc194)
        %22 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc195)
        %23 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc196)
        %24 = cir.cast(bitcast, %23 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc196)
        cir.call @free(%24) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc195)
      } loc(#loc350)
    } loc(#loc348)
    cir.return loc(#loc26)
  } loc(#loc300)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc367)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc199)
    cir.return loc(#loc198)
  } loc(#loc366)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc368)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc369)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc370)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc207)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc208)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc209)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc210)
  cir.func @main(%arg0: !s32i loc(fused[#loc213, #loc214]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc215, #loc216])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc372)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc373)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc212)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc217)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc217)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc218)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc219)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc219)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc220)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc207)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc207)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc221)
    %8 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34_good : !cir.ptr<!cir.func<!void ()>> loc(#loc374)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34_good() : () -> () loc(#loc222)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc208)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc208)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc224)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc209)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc209)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc225)
    %13 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc375)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34_bad() : () -> () loc(#loc226)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc210)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc210)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc228)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc229)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc376)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc376)
    cir.return %17 : !s32i loc(#loc376)
  } loc(#loc371)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc378)
    %1 = cir.alloca !ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34_unionType, !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34_unionType>, ["myUnion"] {alignment = 4 : i64} loc(#loc379)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc237)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc238)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc380)
    %4 = cir.const #cir.int<20> : !s32i loc(#loc240)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc381)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc242)
    %6 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34_unionType> -> !cir.ptr<!s32i> loc(#loc150)
    cir.store %5, %6 : !s32i, !cir.ptr<!s32i> loc(#loc382)
    cir.scope {
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc384)
      %8 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34_unionType> -> !cir.ptr<!s32i> loc(#loc156)
      %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc247)
      cir.store %9, %7 : !s32i, !cir.ptr<!s32i> loc(#loc384)
      cir.scope {
        %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc386)
        %11 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc387)
        %12 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc254)
        %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc255)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc255)
        %15 = cir.const #cir.int<4> : !u64i loc(#loc388)
        %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc389)
        %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc254)
        %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc390)
        cir.store %18, %11 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc391)
        cir.scope {
          %26 = cir.load %11 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc262)
          %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc263)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc263)
          %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s32i>, !cir.bool loc(#loc393)
          cir.if %29 {
            %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc265)
            %31 = cir.const #cir.int<1> : !s32i loc(#loc266)
            %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc267)
            cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc265)
          } loc(#loc394)
        } loc(#loc392)
        cir.scope {
          %26 = cir.const #cir.int<0> : !s32i loc(#loc270)
          %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc270)
          cir.store %27, %10 : !u64i, !cir.ptr<!u64i> loc(#loc396)
          cir.for : cond {
            %28 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc272)
            %29 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc273)
            %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc273)
            %31 = cir.cmp(lt, %28, %30) : !u64i, !cir.bool loc(#loc397)
            cir.condition(%31) loc(#loc274)
          } body {
            cir.scope {
              %28 = cir.const #cir.int<0> : !s32i loc(#loc276)
              %29 = cir.load %11 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc277)
              %30 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc278)
              %31 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %30 : !u64i), !cir.ptr<!s32i> loc(#loc279)
              cir.store %28, %31 : !s32i, !cir.ptr<!s32i> loc(#loc399)
            } loc(#loc398)
            cir.yield loc(#loc269)
          } step {
            %28 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc280)
            %29 = cir.unary(inc, %28) : !u64i, !u64i loc(#loc281)
            cir.store %29, %10 : !u64i, !cir.ptr<!u64i> loc(#loc400)
            cir.yield loc(#loc395)
          } loc(#loc395)
        } loc(#loc395)
        %19 = cir.load %11 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc282)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc283)
        %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc284)
        %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc282)
        cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc285)
        %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc286)
        %24 = cir.load %11 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc287)
        %25 = cir.cast(bitcast, %24 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc287)
        cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc286)
      } loc(#loc385)
    } loc(#loc383)
    cir.return loc(#loc232)
  } loc(#loc377)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("/usr/include/stdlib.h":672:1)
#loc18 = loc("/usr/include/stdlib.h":672:45)
#loc19 = loc("/usr/include/stdlib.h":756:1)
#loc20 = loc("/usr/include/stdlib.h":756:70)
#loc21 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc23 = loc("/usr/include/stdlib.h":687:1)
#loc24 = loc("/usr/include/stdlib.h":687:32)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":49:1)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":142:1)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":51:5)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":51:9)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":52:5)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":52:83)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":54:13)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":54:12)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":54:5)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":55:5)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":123:5)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":60:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":60:13)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":61:9)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":61:28)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":62:9)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":62:31)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":63:9)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":63:31)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":64:9)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":64:41)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":65:9)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":108:17)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":75:35)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":75:44)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":75:57)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":75:28)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":75:13)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":75:68)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":76:13)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":79:13)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":76:17)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":76:33)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":77:13)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":78:17)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":80:20)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":80:21)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":80:30)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":80:33)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":80:47)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":80:13)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":80:48)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":81:34)
#loc68 = loc("/usr/include/netinet/in.h":249:5)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":81:13)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":82:39)
#loc71 = loc("/usr/include/netinet/in.h":251:20)
#loc72 = loc("/usr/include/netinet/in.h":33:15)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":82:13)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":83:38)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":83:32)
#loc76 = loc("/usr/include/netinet/in.h":250:15)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":83:13)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":83:46)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":84:13)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":87:13)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":84:22)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":84:54)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":84:55)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":84:64)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":84:78)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":84:17)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":84:84)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":85:13)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":86:17)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":88:13)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":91:13)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":88:24)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":88:38)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":88:17)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":88:57)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":89:13)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":90:17)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":92:35)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":92:49)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":92:55)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":92:28)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":92:13)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":92:59)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":93:13)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":96:13)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":93:17)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":93:33)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":94:13)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":95:17)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":98:31)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":98:45)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":98:58)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":98:76)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":98:79)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":98:26)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":98:13)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":98:80)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":99:13)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":102:13)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":99:17)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":99:31)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":99:44)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":99:47)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":99:61)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":100:13)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":101:17)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":104:39)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":104:25)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":104:13)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":106:25)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":106:20)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":106:13)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":106:36)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":108:16)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":109:9)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":112:9)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":109:13)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":109:29)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":110:9)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":111:26)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":111:13)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":113:9)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":116:9)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":113:13)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":113:29)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":114:9)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":115:26)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":115:13)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":124:26)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":43:9)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":124:5)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":125:5)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":141:5)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":126:9)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":126:28)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":44:9)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":127:9)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":140:9)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":128:13)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":128:20)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":129:13)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":129:18)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":132:32)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":132:39)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":132:46)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":132:56)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":132:57)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":132:13)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":133:13)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":133:47)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":133:17)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":133:31)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":133:37)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":133:38)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":133:44)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":133:43)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":134:13)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":137:13)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":134:22)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":134:18)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":134:25)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":134:37)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":134:27)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":135:13)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":136:33)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":136:17)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":136:28)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":136:29)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":134:44)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":134:43)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":138:26)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":138:37)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":138:38)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":138:13)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":139:13)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":139:18)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":177:1)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":180:1)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":179:5)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":179:13)
#loc201 = loc("/usr/include/stdlib.h":575:1)
#loc202 = loc("/usr/include/stdlib.h":575:41)
#loc203 = loc("/usr/include/time.h":76:1)
#loc204 = loc("/usr/include/time.h":76:38)
#loc205 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc206 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":196:15)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":198:15)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":201:15)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":203:15)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":191:1)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":206:1)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":192:1)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":194:27)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":194:22)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":194:5)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":196:5)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":197:5)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":197:78)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":198:5)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":201:5)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":202:5)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":202:77)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":203:5)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":205:12)
#loc230 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":205:5)
#loc231 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":149:1)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":175:1)
#loc233 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":151:5)
#loc234 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":151:9)
#loc235 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":152:5)
#loc236 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":152:83)
#loc237 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":154:13)
#loc238 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":154:12)
#loc239 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":154:5)
#loc240 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":156:12)
#loc241 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":156:5)
#loc242 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":157:26)
#loc243 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":157:5)
#loc244 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":158:5)
#loc245 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":174:5)
#loc246 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":159:9)
#loc247 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":159:28)
#loc248 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":160:9)
#loc249 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":173:9)
#loc250 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":161:13)
#loc251 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":161:20)
#loc252 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":162:13)
#loc253 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":162:18)
#loc254 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":165:32)
#loc255 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":165:39)
#loc256 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":165:46)
#loc257 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":165:56)
#loc258 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":165:57)
#loc259 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":165:13)
#loc260 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":166:13)
#loc261 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":166:47)
#loc262 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":166:17)
#loc263 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":166:31)
#loc264 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":166:37)
#loc265 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":166:38)
#loc266 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":166:44)
#loc267 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":166:43)
#loc268 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":167:13)
#loc269 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":170:13)
#loc270 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":167:22)
#loc271 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":167:18)
#loc272 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":167:25)
#loc273 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":167:37)
#loc274 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":167:27)
#loc275 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":168:13)
#loc276 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":169:33)
#loc277 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":169:17)
#loc278 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":169:28)
#loc279 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":169:29)
#loc280 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":167:44)
#loc281 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":167:43)
#loc282 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":171:26)
#loc283 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":171:37)
#loc284 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":171:38)
#loc285 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":171:13)
#loc286 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":172:13)
#loc287 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_34.c":172:18)
#loc288 = loc(fused[#loc1, #loc2])
#loc289 = loc(fused[#loc3, #loc4])
#loc290 = loc(fused[#loc5, #loc6])
#loc291 = loc(fused[#loc7, #loc8])
#loc292 = loc(fused[#loc9, #loc10])
#loc293 = loc(fused[#loc11, #loc12])
#loc294 = loc(fused[#loc13, #loc14])
#loc295 = loc(fused[#loc15, #loc16])
#loc296 = loc(fused[#loc17, #loc18])
#loc297 = loc(fused[#loc19, #loc20])
#loc298 = loc(fused[#loc21, #loc22])
#loc299 = loc(fused[#loc23, #loc24])
#loc300 = loc(fused[#loc25, #loc26])
#loc301 = loc(fused[#loc27, #loc28])
#loc302 = loc(fused[#loc29, #loc30])
#loc303 = loc(fused[#loc33, #loc31])
#loc304 = loc(fused[#loc34, #loc35])
#loc305 = loc(fused[#loc36, #loc37])
#loc306 = loc(fused[#loc38, #loc39])
#loc307 = loc(fused[#loc40, #loc41])
#loc308 = loc(fused[#loc42, #loc43])
#loc309 = loc(fused[#loc44, #loc45])
#loc310 = loc(fused[#loc46, #loc47])
#loc311 = loc(fused[#loc52, #loc53])
#loc312 = loc(fused[#loc54, #loc55])
#loc313 = loc(fused[#loc56, #loc57])
#loc314 = loc(fused[#loc58, #loc55])
#loc315 = loc(fused[#loc60, #loc61])
#loc316 = loc(fused[#loc63, #loc64])
#loc317 = loc(fused[#loc65, #loc66])
#loc318 = loc(fused[#loc69, #loc67])
#loc319 = loc(fused[#loc73, #loc70])
#loc320 = loc(fused[#loc77, #loc78])
#loc321 = loc(fused[#loc79, #loc80])
#loc322 = loc(fused[#loc82, #loc83])
#loc323 = loc(fused[#loc84, #loc85])
#loc324 = loc(fused[#loc86, #loc87])
#loc325 = loc(fused[#loc88, #loc80])
#loc326 = loc(fused[#loc90, #loc91])
#loc327 = loc(fused[#loc94, #loc95])
#loc328 = loc(fused[#loc96, #loc91])
#loc329 = loc(fused[#loc102, #loc103])
#loc330 = loc(fused[#loc104, #loc105])
#loc331 = loc(fused[#loc106, #loc107])
#loc332 = loc(fused[#loc108, #loc105])
#loc333 = loc(fused[#loc112, #loc113])
#loc334 = loc(fused[#loc116, #loc117])
#loc335 = loc(fused[#loc118, #loc119])
#loc336 = loc(fused[#loc120, #loc121])
#loc337 = loc(fused[#loc123, #loc124])
#loc338 = loc(fused[#loc125, #loc119])
#loc339 = loc(fused[#loc129, #loc127])
#loc340 = loc(fused[#loc132, #loc133])
#loc341 = loc(fused[#loc135, #loc136])
#loc342 = loc(fused[#loc137, #loc138])
#loc343 = loc(fused[#loc139, #loc136])
#loc344 = loc(fused[#loc142, #loc143])
#loc345 = loc(fused[#loc144, #loc145])
#loc346 = loc(fused[#loc146, #loc143])
#loc347 = loc(fused[#loc151, #loc149])
#loc348 = loc(fused[#loc152, #loc153])
#loc349 = loc(fused[#loc154, #loc155])
#loc350 = loc(fused[#loc157, #loc158])
#loc351 = loc(fused[#loc159, #loc160])
#loc352 = loc(fused[#loc161, #loc162])
#loc353 = loc(fused[#loc165, #loc166])
#loc354 = loc(fused[#loc164, #loc166])
#loc355 = loc(fused[#loc163, #loc167])
#loc356 = loc(fused[#loc168, #loc167])
#loc357 = loc(fused[#loc169, #loc170])
#loc358 = loc(fused[#loc171, #loc172])
#loc359 = loc(fused[#loc173, #loc170])
#loc360 = loc(fused[#loc177, #loc178])
#loc361 = loc(fused[#loc180, #loc179])
#loc362 = loc(fused[#loc181, #loc182])
#loc363 = loc(fused[#loc184, #loc178])
#loc364 = loc(fused[#loc186, #loc185])
#loc365 = loc(fused[#loc190, #loc189])
#loc366 = loc(fused[#loc197, #loc198])
#loc367 = loc(fused[#loc199, #loc200])
#loc368 = loc(fused[#loc201, #loc202])
#loc369 = loc(fused[#loc203, #loc204])
#loc370 = loc(fused[#loc205, #loc206])
#loc371 = loc(fused[#loc211, #loc212])
#loc374 = loc(fused[#loc222, #loc223])
#loc375 = loc(fused[#loc226, #loc227])
#loc376 = loc(fused[#loc230, #loc229])
#loc377 = loc(fused[#loc231, #loc232])
#loc378 = loc(fused[#loc233, #loc234])
#loc379 = loc(fused[#loc235, #loc236])
#loc380 = loc(fused[#loc239, #loc237])
#loc381 = loc(fused[#loc241, #loc240])
#loc382 = loc(fused[#loc243, #loc242])
#loc383 = loc(fused[#loc244, #loc245])
#loc384 = loc(fused[#loc246, #loc247])
#loc385 = loc(fused[#loc248, #loc249])
#loc386 = loc(fused[#loc250, #loc251])
#loc387 = loc(fused[#loc252, #loc253])
#loc388 = loc(fused[#loc256, #loc257])
#loc389 = loc(fused[#loc255, #loc257])
#loc390 = loc(fused[#loc254, #loc258])
#loc391 = loc(fused[#loc259, #loc258])
#loc392 = loc(fused[#loc260, #loc261])
#loc393 = loc(fused[#loc262, #loc263])
#loc394 = loc(fused[#loc264, #loc261])
#loc395 = loc(fused[#loc268, #loc269])
#loc396 = loc(fused[#loc271, #loc270])
#loc397 = loc(fused[#loc272, #loc273])
#loc398 = loc(fused[#loc275, #loc269])
#loc399 = loc(fused[#loc277, #loc276])
#loc400 = loc(fused[#loc281, #loc280])
