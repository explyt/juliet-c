!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc31 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":31:16)
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc132)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc133)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc134)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc135)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc136)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc138)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc139)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc140)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc141)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc142)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc143)
    cir.store %3, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc142)
    cir.store %3, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc143)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc26)
    cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    cir.br ^bb1 loc(#loc145)
  ^bb1:  // pred: ^bb0
    %8 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc14)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc31)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %12 = cir.binop(and, %10, %11) : !s32i loc(#loc31)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc31)
    cir.brcond %13 ^bb2, ^bb3 loc(#loc31)
  ^bb2:  // pred: ^bb1
    %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc31)
    %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc31)
    %16 = cir.const #cir.int<30> : !s32i loc(#loc31)
    %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc31)
    %18 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc31)
    %19 = cir.cast(integral, %18 : !s32i), !u32i loc(#loc31)
    %20 = cir.const #cir.int<15> : !s32i loc(#loc31)
    %21 = cir.shift(left, %19 : !u32i, %20 : !s32i) -> !u32i loc(#loc31)
    %22 = cir.binop(xor, %17, %21) : !u32i loc(#loc31)
    %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc31)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc31)
    %25 = cir.binop(xor, %22, %24) : !u32i loc(#loc31)
    cir.br ^bb4(%25 : !u32i) loc(#loc31)
  ^bb3:  // pred: ^bb1
    %26 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc31)
    %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc31)
    %28 = cir.const #cir.int<30> : !s32i loc(#loc31)
    %29 = cir.shift(left, %27 : !u32i, %28 : !s32i) -> !u32i loc(#loc31)
    %30 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc31)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc31)
    %32 = cir.const #cir.int<15> : !s32i loc(#loc31)
    %33 = cir.shift(left, %31 : !u32i, %32 : !s32i) -> !u32i loc(#loc31)
    %34 = cir.binop(xor, %29, %33) : !u32i loc(#loc31)
    %35 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc31)
    %36 = cir.cast(integral, %35 : !s32i), !u32i loc(#loc31)
    %37 = cir.binop(xor, %34, %36) : !u32i loc(#loc31)
    %38 = cir.unary(minus, %37) : !u32i, !u32i loc(#loc31)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %40 = cir.cast(integral, %39 : !s32i), !u32i loc(#loc31)
    %41 = cir.binop(sub, %38, %40) : !u32i loc(#loc31)
    cir.br ^bb4(%41 : !u32i) loc(#loc31)
  ^bb4(%42: !u32i loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":31:16)):  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc31)
  ^bb5:  // pred: ^bb4
    %43 = cir.cast(integral, %42 : !u32i), !s32i loc(#loc31)
    cir.store %43, %0 : !s32i, !cir.ptr<!s32i> loc(#loc146)
    %44 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    %45 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc34)
    cir.store %44, %45 : !s32i, !cir.ptr<!s32i> loc(#loc147)
    cir.br ^bb6 loc(#loc29)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc148)
  ^bb7:  // pred: ^bb6
    %46 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc16)
    %47 = cir.load %46 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    cir.store %47, %1 : !s32i, !cir.ptr<!s32i> loc(#loc139)
    cir.br ^bb8 loc(#loc149)
  ^bb8:  // pred: ^bb7
    %48 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc41)
    %49 = cir.const #cir.int<100> : !s32i loc(#loc42)
    %50 = cir.cmp(lt, %48, %49) : !s32i, !cir.bool loc(#loc150)
    cir.brcond %50 ^bb9, ^bb14 loc(#loc151)
  ^bb9:  // pred: ^bb8
    %51 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc44)
    %52 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc45)
    %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc45)
    %54 = cir.call @malloc(%53) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc44)
    %55 = cir.cast(bitcast, %54 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc152)
    cir.store %55, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc140)
    cir.br ^bb10 loc(#loc153)
  ^bb10:  // pred: ^bb9
    %56 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    %57 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc49)
    %58 = cir.cast(bitcast, %57 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc49)
    %59 = cir.cmp(eq, %56, %58) : !cir.ptr<!s8i>, !cir.bool loc(#loc154)
    cir.brcond %59 ^bb11, ^bb12 loc(#loc155)
  ^bb11:  // pred: ^bb10
    %60 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc51)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc52)
    %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc53)
    cir.call @exit(%62) : (!s32i) -> () extra(#fn_attr) loc(#loc51)
    cir.br ^bb12 loc(#loc47)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc47)
  ^bb13:  // pred: ^bb12
    %63 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
    %64 = cir.cast(bitcast, %63 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc54)
    %65 = cir.const #cir.int<65> : !s32i loc(#loc55)
    %66 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    %67 = cir.const #cir.int<1> : !s32i loc(#loc57)
    %68 = cir.binop(sub, %66, %67) nsw : !s32i loc(#loc56)
    %69 = cir.cast(integral, %68 : !s32i), !u64i loc(#loc56)
    cir.libc.memset %69 bytes from %64 set to %65 : !cir.ptr<!void>, !s32i, !u64i loc(#loc156)
    %70 = cir.const #cir.int<0> : !s32i loc(#loc60)
    %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc60)
    %72 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
    %73 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    %74 = cir.const #cir.int<1> : !s32i loc(#loc63)
    %75 = cir.binop(sub, %73, %74) nsw : !s32i loc(#loc62)
    %76 = cir.ptr_stride(%72 : !cir.ptr<!s8i>, %75 : !s32i), !cir.ptr<!s8i> loc(#loc64)
    cir.store %71, %76 : !s8i, !cir.ptr<!s8i> loc(#loc157)
    %77 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%77) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %78 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
    %79 = cir.cast(bitcast, %78 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc67)
    cir.call @free(%79) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc68)
    cir.br ^bb14 loc(#loc40)
  ^bb14:  // 2 preds: ^bb8, ^bb13
    cir.br ^bb15 loc(#loc40)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc37)
  ^bb16:  // pred: ^bb15
    cir.return loc(#loc12)
  } loc(#loc137)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc159)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc71)
    cir.return loc(#loc70)
  } loc(#loc158)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc161)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc162)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc163)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc164)
    %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc165)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc166)
    cir.store %3, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc165)
    cir.store %3, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc166)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc87)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc88)
    cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc167)
    cir.br ^bb1 loc(#loc168)
  ^bb1:  // pred: ^bb0
    %8 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc76)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc93)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc93)
    cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    %14 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc97)
    cir.store %13, %14 : !s32i, !cir.ptr<!s32i> loc(#loc170)
    cir.br ^bb2 loc(#loc91)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc171)
  ^bb3:  // pred: ^bb2
    %15 = cir.load deref %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc78)
    %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    cir.store %16, %1 : !s32i, !cir.ptr<!s32i> loc(#loc162)
    cir.br ^bb4 loc(#loc172)
  ^bb4:  // pred: ^bb3
    %17 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    %18 = cir.const #cir.int<100> : !s32i loc(#loc105)
    %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc173)
    cir.brcond %19 ^bb5, ^bb10 loc(#loc174)
  ^bb5:  // pred: ^bb4
    %20 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc107)
    %21 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc108)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc108)
    %23 = cir.call @malloc(%22) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc107)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc175)
    cir.store %24, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc163)
    cir.br ^bb6 loc(#loc176)
  ^bb6:  // pred: ^bb5
    %25 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
    %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc112)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc112)
    %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc177)
    cir.brcond %28 ^bb7, ^bb8 loc(#loc178)
  ^bb7:  // pred: ^bb6
    %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc114)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc116)
    cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc114)
    cir.br ^bb8 loc(#loc110)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc110)
  ^bb9:  // pred: ^bb8
    %32 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc117)
    %34 = cir.const #cir.int<65> : !s32i loc(#loc118)
    %35 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc119)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc119)
    cir.libc.memset %38 bytes from %33 set to %34 : !cir.ptr<!void>, !s32i, !u64i loc(#loc179)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc123)
    %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc123)
    %41 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
    %42 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc126)
    %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc125)
    %45 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc127)
    cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc180)
    %46 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
    cir.call @printLine(%46) : (!cir.ptr<!s8i>) -> () loc(#loc129)
    %47 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc130)
    cir.call @free(%48) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc131)
    cir.br ^bb10 loc(#loc103)
  ^bb10:  // 2 preds: ^bb4, ^bb9
    cir.br ^bb11 loc(#loc103)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc100)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc74)
  } loc(#loc160)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":21:1)
#loc12 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":50:1)
#loc13 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":29:9)
#loc14 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":29:21)
#loc15 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":35:9)
#loc16 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":35:21)
#loc17 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":41:13)
#loc18 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":41:52)
#loc19 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":23:5)
#loc20 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":23:9)
#loc21 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":24:5)
#loc22 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":24:22)
#loc23 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":25:5)
#loc24 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":25:22)
#loc25 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":27:13)
#loc26 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":27:12)
#loc27 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":27:5)
#loc28 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":28:5)
#loc29 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":33:5)
#loc30 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":29:20)
#loc32 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":31:9)
#loc33 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":32:21)
#loc34 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":32:10)
#loc35 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":32:9)
#loc36 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":34:5)
#loc37 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":49:5)
#loc38 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":35:20)
#loc39 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":37:9)
#loc40 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":48:9)
#loc41 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":37:13)
#loc42 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":37:20)
#loc43 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":38:9)
#loc44 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":41:41)
#loc45 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":41:48)
#loc46 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":42:13)
#loc47 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":42:47)
#loc48 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":42:17)
#loc49 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":42:31)
#loc50 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":42:37)
#loc51 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":42:38)
#loc52 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":42:44)
#loc53 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":42:43)
#loc54 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":44:20)
#loc55 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":44:32)
#loc56 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":44:37)
#loc57 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":44:42)
#loc58 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":44:13)
#loc59 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":44:43)
#loc60 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":45:34)
#loc61 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":45:13)
#loc62 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":45:24)
#loc63 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":45:29)
#loc64 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":45:30)
#loc65 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":46:23)
#loc66 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":46:13)
#loc67 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":47:18)
#loc68 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":47:13)
#loc69 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":88:1)
#loc70 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":91:1)
#loc71 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":90:5)
#loc72 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":90:13)
#loc73 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":57:1)
#loc74 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":86:1)
#loc75 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":65:9)
#loc76 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":65:21)
#loc77 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":71:9)
#loc78 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":71:21)
#loc79 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":77:13)
#loc80 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":77:52)
#loc81 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":59:5)
#loc82 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":59:9)
#loc83 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":60:5)
#loc84 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":60:22)
#loc85 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":61:5)
#loc86 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":61:22)
#loc87 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":63:13)
#loc88 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":63:12)
#loc89 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":63:5)
#loc90 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":64:5)
#loc91 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":69:5)
#loc92 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":65:20)
#loc93 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":67:16)
#loc94 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":67:20)
#loc95 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":67:9)
#loc96 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":68:21)
#loc97 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":68:10)
#loc98 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":68:9)
#loc99 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":70:5)
#loc100 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":85:5)
#loc101 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":71:20)
#loc102 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":73:9)
#loc103 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":84:9)
#loc104 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":73:13)
#loc105 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":73:20)
#loc106 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":74:9)
#loc107 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":77:41)
#loc108 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":77:48)
#loc109 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":78:13)
#loc110 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":78:47)
#loc111 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":78:17)
#loc112 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":78:31)
#loc113 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":78:37)
#loc114 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":78:38)
#loc115 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":78:44)
#loc116 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":78:43)
#loc117 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":80:20)
#loc118 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":80:32)
#loc119 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":80:37)
#loc120 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":80:42)
#loc121 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":80:13)
#loc122 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":80:43)
#loc123 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":81:34)
#loc124 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":81:13)
#loc125 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":81:24)
#loc126 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":81:29)
#loc127 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":81:30)
#loc128 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":82:23)
#loc129 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":82:13)
#loc130 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":83:18)
#loc131 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_malloc_32.c":83:13)
#loc132 = loc(fused[#loc1, #loc2])
#loc133 = loc(fused[#loc3, #loc4])
#loc134 = loc(fused[#loc5, #loc6])
#loc135 = loc(fused[#loc7, #loc8])
#loc136 = loc(fused[#loc9, #loc10])
#loc137 = loc(fused[#loc11, #loc12])
#loc138 = loc(fused[#loc13, #loc14])
#loc139 = loc(fused[#loc15, #loc16])
#loc140 = loc(fused[#loc17, #loc18])
#loc141 = loc(fused[#loc19, #loc20])
#loc142 = loc(fused[#loc21, #loc22])
#loc143 = loc(fused[#loc23, #loc24])
#loc144 = loc(fused[#loc27, #loc25])
#loc145 = loc(fused[#loc28, #loc29])
#loc146 = loc(fused[#loc32, #loc31])
#loc147 = loc(fused[#loc35, #loc33])
#loc148 = loc(fused[#loc36, #loc37])
#loc149 = loc(fused[#loc39, #loc40])
#loc150 = loc(fused[#loc41, #loc42])
#loc151 = loc(fused[#loc43, #loc40])
#loc152 = loc(fused[#loc44, #loc18])
#loc153 = loc(fused[#loc46, #loc47])
#loc154 = loc(fused[#loc48, #loc49])
#loc155 = loc(fused[#loc50, #loc47])
#loc156 = loc(fused[#loc58, #loc59])
#loc157 = loc(fused[#loc61, #loc60])
#loc158 = loc(fused[#loc69, #loc70])
#loc159 = loc(fused[#loc71, #loc72])
#loc160 = loc(fused[#loc73, #loc74])
#loc161 = loc(fused[#loc75, #loc76])
#loc162 = loc(fused[#loc77, #loc78])
#loc163 = loc(fused[#loc79, #loc80])
#loc164 = loc(fused[#loc81, #loc82])
#loc165 = loc(fused[#loc83, #loc84])
#loc166 = loc(fused[#loc85, #loc86])
#loc167 = loc(fused[#loc89, #loc87])
#loc168 = loc(fused[#loc90, #loc91])
#loc169 = loc(fused[#loc95, #loc94])
#loc170 = loc(fused[#loc98, #loc96])
#loc171 = loc(fused[#loc99, #loc100])
#loc172 = loc(fused[#loc102, #loc103])
#loc173 = loc(fused[#loc104, #loc105])
#loc174 = loc(fused[#loc106, #loc103])
#loc175 = loc(fused[#loc107, #loc80])
#loc176 = loc(fused[#loc109, #loc110])
#loc177 = loc(fused[#loc111, #loc112])
#loc178 = loc(fused[#loc113, #loc110])
#loc179 = loc(fused[#loc121, #loc122])
#loc180 = loc(fused[#loc124, #loc123])
