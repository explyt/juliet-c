!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc145)
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc146)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc147)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__rand_strncpy_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc149)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc11)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc11)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc150)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc15)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc15)
      cir.if %4 {
        %5 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc17)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc17)
        %7 = cir.binop(and, %5, %6) : !s32i loc(#loc17)
        %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc17)
        %9 = cir.ternary(%8, true {
          %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc17)
          %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc17)
          %14 = cir.const #cir.int<30> : !s32i loc(#loc17)
          %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc17)
          %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc17)
          %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc17)
          %18 = cir.const #cir.int<15> : !s32i loc(#loc17)
          %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc17)
          %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc17)
          %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc17)
          %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc17)
          %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc17)
          cir.yield %23 : !u32i loc(#loc17)
        }, false {
          %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc17)
          %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc17)
          %14 = cir.const #cir.int<30> : !s32i loc(#loc17)
          %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc17)
          %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc17)
          %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc17)
          %18 = cir.const #cir.int<15> : !s32i loc(#loc17)
          %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc17)
          %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc17)
          %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc17)
          %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc17)
          %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc17)
          %24 = cir.unary(minus, %23) : !u32i, !u32i loc(#loc17)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc17)
          %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc17)
          %27 = cir.binop(sub, %24, %26) : !u32i loc(#loc17)
          cir.yield %27 : !u32i loc(#loc17)
        }) : (!cir.bool) -> !u32i loc(#loc17)
        %10 = cir.cast(integral, %9 : !u32i), !s32i loc(#loc17)
        %11 = cir.cast(integral, %10 : !s32i), !s16i loc(#loc17)
        cir.store %11, %0 : !s16i, !cir.ptr<!s16i> loc(#loc153)
      } loc(#loc152)
    } loc(#loc151)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc155)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc156)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc156)
      cir.store %5, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc156)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc25)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc25)
      %8 = cir.const #cir.int<65> : !s32i loc(#loc26)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc27)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc28)
      %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc27)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc27)
      cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc157)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc31)
      %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc31)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc32)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc33)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc32)
      %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc34)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc34)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc158)
      cir.scope {
        %21 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc37)
        %22 = cir.cast(integral, %21 : !s16i), !s32i loc(#loc37)
        %23 = cir.const #cir.int<100> : !s32i loc(#loc38)
        %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc160)
        cir.if %24 {
          %25 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc40)
          %26 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc41)
          %27 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc42)
          %28 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc43)
          %29 = cir.cast(integral, %28 : !s16i), !u64i loc(#loc43)
          %30 = cir.call @strncpy(%26, %27, %29) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc40)
          %31 = cir.const #cir.int<0> : !s32i loc(#loc44)
          %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc44)
          %33 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc45)
          %34 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
          %35 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %33 : !s16i), !cir.ptr<!s8i> loc(#loc46)
          cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc162)
        } loc(#loc161)
      } loc(#loc159)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    } loc(#loc154)
    cir.return loc(#loc8)
  } loc(#loc148)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__rand_strncpy_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc164)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc51)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc165)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc53)
    cir.return loc(#loc50)
  } loc(#loc163)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc55)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc167)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc60)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc60)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc168)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc64)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc64)
      cir.if %4 {
        %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc55)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc55)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc68)
      } else {
        %5 = cir.const #cir.int<100> : !s32i loc(#loc69)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc70)
        %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc69)
        %8 = cir.cast(integral, %7 : !s32i), !s16i loc(#loc69)
        cir.store %8, %0 : !s16i, !cir.ptr<!s16i> loc(#loc171)
      } loc(#loc170)
    } loc(#loc169)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc173)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc174)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc174)
      cir.store %5, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc174)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc78)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc78)
      %8 = cir.const #cir.int<65> : !s32i loc(#loc79)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc80)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc81)
      %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc80)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc80)
      cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc175)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc84)
      %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc84)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc85)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc86)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc85)
      %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc87)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc87)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc176)
      cir.scope {
        %21 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc90)
        %22 = cir.cast(integral, %21 : !s16i), !s32i loc(#loc90)
        %23 = cir.const #cir.int<100> : !s32i loc(#loc91)
        %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc178)
        cir.if %24 {
          %25 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc93)
          %26 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc94)
          %27 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc95)
          %28 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc96)
          %29 = cir.cast(integral, %28 : !s16i), !u64i loc(#loc96)
          %30 = cir.call @strncpy(%26, %27, %29) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc93)
          %31 = cir.const #cir.int<0> : !s32i loc(#loc97)
          %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc97)
          %33 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc98)
          %34 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc99)
          %35 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %33 : !s16i), !cir.ptr<!s8i> loc(#loc99)
          cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc180)
        } loc(#loc179)
      } loc(#loc177)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc100)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    } loc(#loc172)
    cir.return loc(#loc57)
  } loc(#loc166)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc182)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc106)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc106)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc183)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc110)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc110)
      cir.if %4 {
        %5 = cir.const #cir.int<100> : !s32i loc(#loc112)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc113)
        %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc112)
        %8 = cir.cast(integral, %7 : !s32i), !s16i loc(#loc112)
        cir.store %8, %0 : !s16i, !cir.ptr<!s16i> loc(#loc186)
      } loc(#loc185)
    } loc(#loc184)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc188)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc189)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc189)
      cir.store %5, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc189)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc121)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc121)
      %8 = cir.const #cir.int<65> : !s32i loc(#loc122)
      %9 = cir.const #cir.int<100> : !s32i loc(#loc123)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc124)
      %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc123)
      %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc123)
      cir.libc.memset %12 bytes from %7 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc190)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc127)
      %14 = cir.cast(integral, %13 : !s32i), !s8i loc(#loc127)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc128)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc129)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc128)
      %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc130)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc130)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc191)
      cir.scope {
        %21 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc133)
        %22 = cir.cast(integral, %21 : !s16i), !s32i loc(#loc133)
        %23 = cir.const #cir.int<100> : !s32i loc(#loc134)
        %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc193)
        cir.if %24 {
          %25 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc136)
          %26 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc137)
          %27 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc138)
          %28 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc139)
          %29 = cir.cast(integral, %28 : !s16i), !u64i loc(#loc139)
          %30 = cir.call @strncpy(%26, %27, %29) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc136)
          %31 = cir.const #cir.int<0> : !s32i loc(#loc140)
          %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc140)
          %33 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc141)
          %34 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc142)
          %35 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %33 : !s16i), !cir.ptr<!s8i> loc(#loc142)
          cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc195)
        } loc(#loc194)
      } loc(#loc192)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc143)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc144)
    } loc(#loc187)
    cir.return loc(#loc103)
  } loc(#loc181)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("/usr/include/string.h":144:1)
#loc4 = loc("/usr/include/string.h":146:14)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":28:1)
#loc8 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":52:1)
#loc9 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":30:5)
#loc10 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":30:11)
#loc11 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":32:12)
#loc12 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":32:5)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":33:5)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":37:5)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":33:8)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":34:5)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":36:23)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":36:9)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":38:5)
#loc20 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":51:5)
#loc21 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":39:9)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":39:24)
#loc23 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":40:9)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":40:26)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":41:16)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":41:24)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":41:29)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":41:33)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":41:9)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":41:34)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":42:25)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":42:16)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":42:20)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":42:9)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":43:9)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":49:9)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":43:13)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":43:20)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":44:9)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":47:13)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":47:21)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":47:27)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":47:35)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":48:26)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":48:18)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":48:13)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":50:19)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":50:9)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":117:1)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":121:1)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":119:5)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":119:14)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":120:5)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":120:14)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":67:19)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":59:1)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":88:1)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":61:5)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":61:11)
#loc60 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":63:12)
#loc61 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":63:5)
#loc62 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":64:5)
#loc63 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":73:5)
#loc64 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":64:8)
#loc65 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":65:5)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":68:5)
#loc67 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":70:5)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":67:9)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":72:16)
#loc70 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":72:20)
#loc71 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":72:9)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":74:5)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":87:5)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":75:9)
#loc75 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":75:24)
#loc76 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":76:9)
#loc77 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":76:26)
#loc78 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":77:16)
#loc79 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":77:24)
#loc80 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":77:29)
#loc81 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":77:33)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":77:9)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":77:34)
#loc84 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":78:25)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":78:16)
#loc86 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":78:20)
#loc87 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":78:9)
#loc88 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":79:9)
#loc89 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":85:9)
#loc90 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":79:13)
#loc91 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":79:20)
#loc92 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":80:9)
#loc93 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":83:13)
#loc94 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":83:21)
#loc95 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":83:27)
#loc96 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":83:35)
#loc97 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":84:26)
#loc98 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":84:18)
#loc99 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":84:13)
#loc100 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":86:19)
#loc101 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":86:9)
#loc102 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":91:1)
#loc103 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":115:1)
#loc104 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":93:5)
#loc105 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":93:11)
#loc106 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":95:12)
#loc107 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":95:5)
#loc108 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":96:5)
#loc109 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":100:5)
#loc110 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":96:8)
#loc111 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":97:5)
#loc112 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":99:16)
#loc113 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":99:20)
#loc114 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":99:9)
#loc115 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":101:5)
#loc116 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":114:5)
#loc117 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":102:9)
#loc118 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":102:24)
#loc119 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":103:9)
#loc120 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":103:26)
#loc121 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":104:16)
#loc122 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":104:24)
#loc123 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":104:29)
#loc124 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":104:33)
#loc125 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":104:9)
#loc126 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":104:34)
#loc127 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":105:25)
#loc128 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":105:16)
#loc129 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":105:20)
#loc130 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":105:9)
#loc131 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":106:9)
#loc132 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":112:9)
#loc133 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":106:13)
#loc134 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":106:20)
#loc135 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":107:9)
#loc136 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":110:13)
#loc137 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":110:21)
#loc138 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":110:27)
#loc139 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":110:35)
#loc140 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":111:26)
#loc141 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":111:18)
#loc142 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":111:13)
#loc143 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":113:19)
#loc144 = loc("CWE194_Unexpected_Sign_Extension__rand_strncpy_04.c":113:9)
#loc145 = loc(fused[#loc1, #loc2])
#loc146 = loc(fused[#loc3, #loc4])
#loc147 = loc(fused[#loc5, #loc6])
#loc148 = loc(fused[#loc7, #loc8])
#loc149 = loc(fused[#loc9, #loc10])
#loc150 = loc(fused[#loc12, #loc11])
#loc151 = loc(fused[#loc13, #loc14])
#loc152 = loc(fused[#loc16, #loc14])
#loc153 = loc(fused[#loc18, #loc17])
#loc154 = loc(fused[#loc19, #loc20])
#loc155 = loc(fused[#loc21, #loc22])
#loc156 = loc(fused[#loc23, #loc24])
#loc157 = loc(fused[#loc29, #loc30])
#loc158 = loc(fused[#loc34, #loc31])
#loc159 = loc(fused[#loc35, #loc36])
#loc160 = loc(fused[#loc37, #loc38])
#loc161 = loc(fused[#loc39, #loc36])
#loc162 = loc(fused[#loc46, #loc44])
#loc163 = loc(fused[#loc49, #loc50])
#loc164 = loc(fused[#loc51, #loc52])
#loc165 = loc(fused[#loc53, #loc54])
#loc166 = loc(fused[#loc56, #loc57])
#loc167 = loc(fused[#loc58, #loc59])
#loc168 = loc(fused[#loc61, #loc60])
#loc169 = loc(fused[#loc62, #loc63])
#loc170 = loc(fused[#loc65, #loc66, #loc67, #loc63])
#loc171 = loc(fused[#loc71, #loc70])
#loc172 = loc(fused[#loc72, #loc73])
#loc173 = loc(fused[#loc74, #loc75])
#loc174 = loc(fused[#loc76, #loc77])
#loc175 = loc(fused[#loc82, #loc83])
#loc176 = loc(fused[#loc87, #loc84])
#loc177 = loc(fused[#loc88, #loc89])
#loc178 = loc(fused[#loc90, #loc91])
#loc179 = loc(fused[#loc92, #loc89])
#loc180 = loc(fused[#loc99, #loc97])
#loc181 = loc(fused[#loc102, #loc103])
#loc182 = loc(fused[#loc104, #loc105])
#loc183 = loc(fused[#loc107, #loc106])
#loc184 = loc(fused[#loc108, #loc109])
#loc185 = loc(fused[#loc111, #loc109])
#loc186 = loc(fused[#loc114, #loc113])
#loc187 = loc(fused[#loc115, #loc116])
#loc188 = loc(fused[#loc117, #loc118])
#loc189 = loc(fused[#loc119, #loc120])
#loc190 = loc(fused[#loc125, #loc126])
#loc191 = loc(fused[#loc130, #loc127])
#loc192 = loc(fused[#loc131, #loc132])
#loc193 = loc(fused[#loc133, #loc134])
#loc194 = loc(fused[#loc135, #loc132])
#loc195 = loc(fused[#loc142, #loc140])
