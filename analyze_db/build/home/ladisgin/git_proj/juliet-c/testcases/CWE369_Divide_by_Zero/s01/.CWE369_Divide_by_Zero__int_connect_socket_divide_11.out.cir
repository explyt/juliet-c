!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc100 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":86:48)
#loc149 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":340:10)
#loc150 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":340:14)
#loc151 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":340:20)
#loc152 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":340:32)
#loc248 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":162:48)
#loc363 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":246:48)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc507 = loc(fused[#loc149, #loc150])
#loc508 = loc(fused[#loc151, #loc152])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_connect_socket_divide_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc447)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc448)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc449)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc7)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc450)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc451)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc452)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc453)
  cir.func private @close(!s32i) -> !s32i loc(#loc454)
  cir.func private @printIntLine(!s32i) loc(#loc455)
  cir.func no_proto @CWE369_Divide_by_Zero__int_connect_socket_divide_11_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc457)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc458)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc459)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc460)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc461)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc33)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc462)
    cir.br ^bb1 loc(#loc463)
  ^bb1:  // pred: ^bb0
    %7 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc464)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc464)
    %9 = cir.call %8() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc37)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc37)
    cir.brcond %10 ^bb2, ^bb34 loc(#loc465)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc466)
  ^bb3:  // pred: ^bb2
    %11 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc27)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc459)
    cir.br ^bb4 loc(#loc467)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc467)
  ^bb5:  // pred: ^bb26
    %13 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc44)
    cir.brcond %14 ^bb6, ^bb27 loc(#loc44)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %15 = cir.const #cir.int<2> : !s32i loc(#loc45)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc46)
    %17 = cir.const #cir.int<6> : !s32i loc(#loc47)
    %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc48)
    cir.store %18, %2 : !s32i, !cir.ptr<!s32i> loc(#loc468)
    cir.br ^bb7 loc(#loc469)
  ^bb7:  // pred: ^bb6
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc53)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc54)
    %22 = cir.cmp(eq, %19, %21) : !s32i, !cir.bool loc(#loc470)
    cir.brcond %22 ^bb8, ^bb9 loc(#loc471)
  ^bb8:  // pred: ^bb7
    cir.br ^bb27 loc(#loc56)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc52)
  ^bb10:  // pred: ^bb9
    %23 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc472)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc59)
    %25 = cir.const #cir.int<16> : !u64i loc(#loc473)
    cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc474)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc64)
    %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc64)
    %28 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
    cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc475)
    %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc7)
    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc7)
    %31 = cir.call @inet_addr(%30) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc67)
    %32 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
    %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
    cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc476)
    %34 = cir.const #cir.int<27015> : !s32i loc(#loc72)
    %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc72)
    %36 = cir.call @htons(%35) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc73)
    %37 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
    cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc477)
    cir.br ^bb11 loc(#loc478)
  ^bb11:  // pred: ^bb10
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    %39 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc479)
    %40 = cir.const #cir.int<16> : !u64i loc(#loc480)
    %41 = cir.cast(integral, %40 : !u64i), !u32i loc(#loc480)
    %42 = cir.call @connect(%38, %39, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc84)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc85)
    %44 = cir.unary(minus, %43) : !s32i, !s32i loc(#loc85)
    %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc481)
    cir.brcond %45 ^bb12, ^bb13 loc(#loc482)
  ^bb12:  // pred: ^bb11
    cir.br ^bb27 loc(#loc87)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc78)
  ^bb14:  // pred: ^bb13
    %46 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    %47 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc89)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc89)
    %49 = cir.const #cir.int<3> : !s32i loc(#loc90)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc90)
    %51 = cir.const #cir.int<4> : !u64i loc(#loc90)
    %52 = cir.binop(mul, %50, %51) : !u64i loc(#loc90)
    %53 = cir.const #cir.int<2> : !s32i loc(#loc90)
    %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc90)
    %55 = cir.binop(add, %52, %54) : !u64i loc(#loc90)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc91)
    %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc91)
    %58 = cir.binop(sub, %55, %57) : !u64i loc(#loc483)
    %59 = cir.const #cir.int<0> : !s32i loc(#loc92)
    %60 = cir.call @recv(%46, %48, %58, %59) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc93)
    %61 = cir.cast(integral, %60 : !s64i), !s32i loc(#loc93)
    cir.store %61, %0 : !s32i, !cir.ptr<!s32i> loc(#loc484)
    cir.br ^bb15 loc(#loc485)
  ^bb15:  // pred: ^bb14
    %62 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    %63 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc99)
    %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc486)
    cir.brcond %65 ^bb16, ^bb17 loc(#loc100)
  ^bb16:  // pred: ^bb15
    %66 = cir.const #true loc(#loc100)
    cir.br ^bb22(%66 : !cir.bool) loc(#loc100)
  ^bb17:  // pred: ^bb15
    %67 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    %68 = cir.const #cir.int<0> : !s32i loc(#loc102)
    %69 = cir.cmp(eq, %67, %68) : !s32i, !cir.bool loc(#loc487)
    cir.brcond %69 ^bb18, ^bb19 loc(#loc100)
  ^bb18:  // pred: ^bb17
    %70 = cir.const #true loc(#loc100)
    cir.br ^bb20(%70 : !cir.bool) loc(#loc100)
  ^bb19:  // pred: ^bb17
    %71 = cir.const #false loc(#loc100)
    cir.br ^bb20(%71 : !cir.bool) loc(#loc100)
  ^bb20(%72: !cir.bool loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":86:48)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc100)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22(%72 : !cir.bool) loc(#loc100)
  ^bb22(%73: !cir.bool loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":86:48)):  // 2 preds: ^bb16, ^bb21
    cir.br ^bb23 loc(#loc100)
  ^bb23:  // pred: ^bb22
    cir.brcond %73 ^bb24, ^bb25 loc(#loc488)
  ^bb24:  // pred: ^bb23
    cir.br ^bb27 loc(#loc104)
  ^bb25:  // pred: ^bb23
    cir.br ^bb26 loc(#loc97)
  ^bb26:  // pred: ^bb25
    %74 = cir.const #cir.int<0> : !s32i loc(#loc105)
    %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc105)
    %76 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %77 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc107)
    %78 = cir.ptr_stride(%77 : !cir.ptr<!s8i>, %76 : !s32i), !cir.ptr<!s8i> loc(#loc107)
    cir.store %75, %78 : !s8i, !cir.ptr<!s8i> loc(#loc489)
    %79 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc108)
    %80 = cir.call @atoi(%79) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc109)
    cir.store %80, %4 : !s32i, !cir.ptr<!s32i> loc(#loc490)
    cir.br ^bb5 loc(#loc43)
  ^bb27:  // 4 preds: ^bb5, ^bb8, ^bb12, ^bb24
    cir.br ^bb28 loc(#loc43)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc491)
  ^bb29:  // pred: ^bb28
    %81 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    %82 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %83 = cir.unary(minus, %82) : !s32i, !s32i loc(#loc115)
    %84 = cir.cmp(ne, %81, %83) : !s32i, !cir.bool loc(#loc492)
    cir.brcond %84 ^bb30, ^bb31 loc(#loc493)
  ^bb30:  // pred: ^bb29
    %85 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %86 = cir.call @close(%85) : (!s32i) -> !s32i loc(#loc118)
    cir.br ^bb31 loc(#loc113)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc113)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc41)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc36)
  ^bb34:  // 2 preds: ^bb1, ^bb33
    cir.br ^bb35 loc(#loc36)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc494)
  ^bb36:  // pred: ^bb35
    %87 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc495)
    %88 = cir.cast(bitcast, %87 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc495)
    %89 = cir.call %88() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc121)
    %90 = cir.cast(int_to_bool, %89 : !s32i), !cir.bool loc(#loc121)
    cir.brcond %90 ^bb37, ^bb38 loc(#loc496)
  ^bb37:  // pred: ^bb36
    %91 = cir.const #cir.int<100> : !s32i loc(#loc124)
    %92 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    %93 = cir.binop(div, %91, %92) : !s32i loc(#loc497)
    cir.call @printIntLine(%93) : (!s32i) -> () loc(#loc126)
    cir.br ^bb38 loc(#loc120)
  ^bb38:  // 2 preds: ^bb36, ^bb37
    cir.br ^bb39 loc(#loc120)
  ^bb39:  // pred: ^bb38
    cir.return loc(#loc21)
  } loc(#loc456)
  cir.func no_proto @CWE369_Divide_by_Zero__int_connect_socket_divide_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc499)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc129)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc500)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc131)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc501)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc133)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc502)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc135)
    cir.return loc(#loc128)
  } loc(#loc498)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc503)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc504)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc505)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc143)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc144)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc145)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc146)
  cir.func @main(%arg0: !s32i loc(fused[#loc149, #loc150]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc151, #loc152])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc507)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc508)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc148)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc153)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc153)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc154)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc155)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc155)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc156)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc143)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc143)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc157)
    %8 = cir.get_global @CWE369_Divide_by_Zero__int_connect_socket_divide_11_good : !cir.ptr<!cir.func<!void ()>> loc(#loc509)
    cir.call @CWE369_Divide_by_Zero__int_connect_socket_divide_11_good() : () -> () loc(#loc158)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc144)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc144)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc160)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc145)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc145)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc161)
    %13 = cir.get_global @CWE369_Divide_by_Zero__int_connect_socket_divide_11_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc510)
    cir.call @CWE369_Divide_by_Zero__int_connect_socket_divide_11_bad() : () -> () loc(#loc162)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc146)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc146)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc164)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc165)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc511)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc511)
    cir.return %17 : !s32i loc(#loc511)
  } loc(#loc506)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc512)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc169)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc170)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc514)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc515)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc516)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc517)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc518)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc183)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc184)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc519)
    cir.br ^bb1 loc(#loc520)
  ^bb1:  // pred: ^bb0
    %7 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc521)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc521)
    %9 = cir.call %8() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc188)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc188)
    cir.brcond %10 ^bb2, ^bb34 loc(#loc522)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc523)
  ^bb3:  // pred: ^bb2
    %11 = cir.const #cir.int<1> : !s32i loc(#loc178)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc178)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc516)
    cir.br ^bb4 loc(#loc524)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc524)
  ^bb5:  // pred: ^bb26
    %13 = cir.const #cir.int<0> : !s32i loc(#loc195)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc195)
    cir.brcond %14 ^bb6, ^bb27 loc(#loc195)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %15 = cir.const #cir.int<2> : !s32i loc(#loc196)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc197)
    %17 = cir.const #cir.int<6> : !s32i loc(#loc198)
    %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc199)
    cir.store %18, %2 : !s32i, !cir.ptr<!s32i> loc(#loc525)
    cir.br ^bb7 loc(#loc526)
  ^bb7:  // pred: ^bb6
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc204)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc205)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc205)
    %22 = cir.cmp(eq, %19, %21) : !s32i, !cir.bool loc(#loc527)
    cir.brcond %22 ^bb8, ^bb9 loc(#loc528)
  ^bb8:  // pred: ^bb7
    cir.br ^bb27 loc(#loc207)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc203)
  ^bb10:  // pred: ^bb9
    %23 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc529)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc210)
    %25 = cir.const #cir.int<16> : !u64i loc(#loc530)
    cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc531)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc215)
    %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc215)
    %28 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
    cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc532)
    %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc217)
    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc217)
    %31 = cir.call @inet_addr(%30) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc218)
    %32 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
    %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
    cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc533)
    %34 = cir.const #cir.int<27015> : !s32i loc(#loc221)
    %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc221)
    %36 = cir.call @htons(%35) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc222)
    %37 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
    cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc534)
    cir.br ^bb11 loc(#loc535)
  ^bb11:  // pred: ^bb10
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc227)
    %39 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc536)
    %40 = cir.const #cir.int<16> : !u64i loc(#loc537)
    %41 = cir.cast(integral, %40 : !u64i), !u32i loc(#loc537)
    %42 = cir.call @connect(%38, %39, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc232)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc233)
    %44 = cir.unary(minus, %43) : !s32i, !s32i loc(#loc233)
    %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc538)
    cir.brcond %45 ^bb12, ^bb13 loc(#loc539)
  ^bb12:  // pred: ^bb11
    cir.br ^bb27 loc(#loc235)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc226)
  ^bb14:  // pred: ^bb13
    %46 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc236)
    %47 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc237)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc237)
    %49 = cir.const #cir.int<3> : !s32i loc(#loc238)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc238)
    %51 = cir.const #cir.int<4> : !u64i loc(#loc238)
    %52 = cir.binop(mul, %50, %51) : !u64i loc(#loc238)
    %53 = cir.const #cir.int<2> : !s32i loc(#loc238)
    %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc238)
    %55 = cir.binop(add, %52, %54) : !u64i loc(#loc238)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc239)
    %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc239)
    %58 = cir.binop(sub, %55, %57) : !u64i loc(#loc540)
    %59 = cir.const #cir.int<0> : !s32i loc(#loc240)
    %60 = cir.call @recv(%46, %48, %58, %59) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc241)
    %61 = cir.cast(integral, %60 : !s64i), !s32i loc(#loc241)
    cir.store %61, %0 : !s32i, !cir.ptr<!s32i> loc(#loc541)
    cir.br ^bb15 loc(#loc542)
  ^bb15:  // pred: ^bb14
    %62 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc246)
    %63 = cir.const #cir.int<1> : !s32i loc(#loc247)
    %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc247)
    %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc543)
    cir.brcond %65 ^bb16, ^bb17 loc(#loc248)
  ^bb16:  // pred: ^bb15
    %66 = cir.const #true loc(#loc248)
    cir.br ^bb22(%66 : !cir.bool) loc(#loc248)
  ^bb17:  // pred: ^bb15
    %67 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc249)
    %68 = cir.const #cir.int<0> : !s32i loc(#loc250)
    %69 = cir.cmp(eq, %67, %68) : !s32i, !cir.bool loc(#loc544)
    cir.brcond %69 ^bb18, ^bb19 loc(#loc248)
  ^bb18:  // pred: ^bb17
    %70 = cir.const #true loc(#loc248)
    cir.br ^bb20(%70 : !cir.bool) loc(#loc248)
  ^bb19:  // pred: ^bb17
    %71 = cir.const #false loc(#loc248)
    cir.br ^bb20(%71 : !cir.bool) loc(#loc248)
  ^bb20(%72: !cir.bool loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":162:48)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc248)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22(%72 : !cir.bool) loc(#loc248)
  ^bb22(%73: !cir.bool loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":162:48)):  // 2 preds: ^bb16, ^bb21
    cir.br ^bb23 loc(#loc248)
  ^bb23:  // pred: ^bb22
    cir.brcond %73 ^bb24, ^bb25 loc(#loc545)
  ^bb24:  // pred: ^bb23
    cir.br ^bb27 loc(#loc252)
  ^bb25:  // pred: ^bb23
    cir.br ^bb26 loc(#loc245)
  ^bb26:  // pred: ^bb25
    %74 = cir.const #cir.int<0> : !s32i loc(#loc253)
    %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc253)
    %76 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc254)
    %77 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc255)
    %78 = cir.ptr_stride(%77 : !cir.ptr<!s8i>, %76 : !s32i), !cir.ptr<!s8i> loc(#loc255)
    cir.store %75, %78 : !s8i, !cir.ptr<!s8i> loc(#loc546)
    %79 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc256)
    %80 = cir.call @atoi(%79) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc257)
    cir.store %80, %4 : !s32i, !cir.ptr<!s32i> loc(#loc547)
    cir.br ^bb5 loc(#loc194)
  ^bb27:  // 4 preds: ^bb5, ^bb8, ^bb12, ^bb24
    cir.br ^bb28 loc(#loc194)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc548)
  ^bb29:  // pred: ^bb28
    %81 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc262)
    %82 = cir.const #cir.int<1> : !s32i loc(#loc263)
    %83 = cir.unary(minus, %82) : !s32i, !s32i loc(#loc263)
    %84 = cir.cmp(ne, %81, %83) : !s32i, !cir.bool loc(#loc549)
    cir.brcond %84 ^bb30, ^bb31 loc(#loc550)
  ^bb30:  // pred: ^bb29
    %85 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc265)
    %86 = cir.call @close(%85) : (!s32i) -> !s32i loc(#loc266)
    cir.br ^bb31 loc(#loc261)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc261)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc192)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc187)
  ^bb34:  // 2 preds: ^bb1, ^bb33
    cir.br ^bb35 loc(#loc187)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc551)
  ^bb36:  // pred: ^bb35
    %87 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc552)
    %88 = cir.cast(bitcast, %87 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc552)
    %89 = cir.call %88() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc269)
    %90 = cir.cast(int_to_bool, %89 : !s32i), !cir.bool loc(#loc269)
    cir.brcond %90 ^bb37, ^bb38 loc(#loc553)
  ^bb37:  // pred: ^bb36
    %91 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc169)
    %92 = cir.cast(array_to_ptrdecay, %91 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc169)
    cir.call @printLine(%92) : (!cir.ptr<!s8i>) -> () loc(#loc274)
    cir.br ^bb44 loc(#loc272)
  ^bb38:  // pred: ^bb36
    cir.br ^bb39 loc(#loc554)
  ^bb39:  // pred: ^bb38
    %93 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc277)
    %94 = cir.const #cir.int<0> : !s32i loc(#loc278)
    %95 = cir.cmp(ne, %93, %94) : !s32i, !cir.bool loc(#loc555)
    cir.brcond %95 ^bb40, ^bb41 loc(#loc556)
  ^bb40:  // pred: ^bb39
    %96 = cir.const #cir.int<100> : !s32i loc(#loc282)
    %97 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc283)
    %98 = cir.binop(div, %96, %97) : !s32i loc(#loc557)
    cir.call @printIntLine(%98) : (!s32i) -> () loc(#loc284)
    cir.br ^bb42 loc(#loc280)
  ^bb41:  // pred: ^bb39
    %99 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc170)
    %100 = cir.cast(array_to_ptrdecay, %99 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc170)
    cir.call @printLine(%100) : (!cir.ptr<!s8i>) -> () loc(#loc285)
    cir.br ^bb42 loc(#loc276)
  ^bb42:  // 2 preds: ^bb40, ^bb41
    cir.br ^bb43 loc(#loc276)
  ^bb43:  // pred: ^bb42
    cir.br ^bb44 loc(#loc268)
  ^bb44:  // 2 preds: ^bb37, ^bb43
    cir.br ^bb45 loc(#loc268)
  ^bb45:  // pred: ^bb44
    cir.return loc(#loc172)
  } loc(#loc513)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc559)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc560)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc561)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc562)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc563)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc298)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc299)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc564)
    cir.br ^bb1 loc(#loc565)
  ^bb1:  // pred: ^bb0
    %7 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc566)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc566)
    %9 = cir.call %8() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc303)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc303)
    cir.brcond %10 ^bb2, ^bb34 loc(#loc567)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc568)
  ^bb3:  // pred: ^bb2
    %11 = cir.const #cir.int<1> : !s32i loc(#loc293)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc293)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc561)
    cir.br ^bb4 loc(#loc569)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc569)
  ^bb5:  // pred: ^bb26
    %13 = cir.const #cir.int<0> : !s32i loc(#loc310)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc310)
    cir.brcond %14 ^bb6, ^bb27 loc(#loc310)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %15 = cir.const #cir.int<2> : !s32i loc(#loc311)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc312)
    %17 = cir.const #cir.int<6> : !s32i loc(#loc313)
    %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc314)
    cir.store %18, %2 : !s32i, !cir.ptr<!s32i> loc(#loc570)
    cir.br ^bb7 loc(#loc571)
  ^bb7:  // pred: ^bb6
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc319)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc320)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc320)
    %22 = cir.cmp(eq, %19, %21) : !s32i, !cir.bool loc(#loc572)
    cir.brcond %22 ^bb8, ^bb9 loc(#loc573)
  ^bb8:  // pred: ^bb7
    cir.br ^bb27 loc(#loc322)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc318)
  ^bb10:  // pred: ^bb9
    %23 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc574)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc325)
    %25 = cir.const #cir.int<16> : !u64i loc(#loc575)
    cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc576)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc330)
    %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc330)
    %28 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
    cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc577)
    %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc332)
    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc332)
    %31 = cir.call @inet_addr(%30) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc333)
    %32 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
    %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
    cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc578)
    %34 = cir.const #cir.int<27015> : !s32i loc(#loc336)
    %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc336)
    %36 = cir.call @htons(%35) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc337)
    %37 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
    cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc579)
    cir.br ^bb11 loc(#loc580)
  ^bb11:  // pred: ^bb10
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc342)
    %39 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc581)
    %40 = cir.const #cir.int<16> : !u64i loc(#loc582)
    %41 = cir.cast(integral, %40 : !u64i), !u32i loc(#loc582)
    %42 = cir.call @connect(%38, %39, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc347)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc348)
    %44 = cir.unary(minus, %43) : !s32i, !s32i loc(#loc348)
    %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc583)
    cir.brcond %45 ^bb12, ^bb13 loc(#loc584)
  ^bb12:  // pred: ^bb11
    cir.br ^bb27 loc(#loc350)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc341)
  ^bb14:  // pred: ^bb13
    %46 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc351)
    %47 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc352)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc352)
    %49 = cir.const #cir.int<3> : !s32i loc(#loc353)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc353)
    %51 = cir.const #cir.int<4> : !u64i loc(#loc353)
    %52 = cir.binop(mul, %50, %51) : !u64i loc(#loc353)
    %53 = cir.const #cir.int<2> : !s32i loc(#loc353)
    %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc353)
    %55 = cir.binop(add, %52, %54) : !u64i loc(#loc353)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc354)
    %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc354)
    %58 = cir.binop(sub, %55, %57) : !u64i loc(#loc585)
    %59 = cir.const #cir.int<0> : !s32i loc(#loc355)
    %60 = cir.call @recv(%46, %48, %58, %59) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc356)
    %61 = cir.cast(integral, %60 : !s64i), !s32i loc(#loc356)
    cir.store %61, %0 : !s32i, !cir.ptr<!s32i> loc(#loc586)
    cir.br ^bb15 loc(#loc587)
  ^bb15:  // pred: ^bb14
    %62 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc361)
    %63 = cir.const #cir.int<1> : !s32i loc(#loc362)
    %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc362)
    %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc588)
    cir.brcond %65 ^bb16, ^bb17 loc(#loc363)
  ^bb16:  // pred: ^bb15
    %66 = cir.const #true loc(#loc363)
    cir.br ^bb22(%66 : !cir.bool) loc(#loc363)
  ^bb17:  // pred: ^bb15
    %67 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc364)
    %68 = cir.const #cir.int<0> : !s32i loc(#loc365)
    %69 = cir.cmp(eq, %67, %68) : !s32i, !cir.bool loc(#loc589)
    cir.brcond %69 ^bb18, ^bb19 loc(#loc363)
  ^bb18:  // pred: ^bb17
    %70 = cir.const #true loc(#loc363)
    cir.br ^bb20(%70 : !cir.bool) loc(#loc363)
  ^bb19:  // pred: ^bb17
    %71 = cir.const #false loc(#loc363)
    cir.br ^bb20(%71 : !cir.bool) loc(#loc363)
  ^bb20(%72: !cir.bool loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":246:48)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc363)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22(%72 : !cir.bool) loc(#loc363)
  ^bb22(%73: !cir.bool loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":246:48)):  // 2 preds: ^bb16, ^bb21
    cir.br ^bb23 loc(#loc363)
  ^bb23:  // pred: ^bb22
    cir.brcond %73 ^bb24, ^bb25 loc(#loc590)
  ^bb24:  // pred: ^bb23
    cir.br ^bb27 loc(#loc367)
  ^bb25:  // pred: ^bb23
    cir.br ^bb26 loc(#loc360)
  ^bb26:  // pred: ^bb25
    %74 = cir.const #cir.int<0> : !s32i loc(#loc368)
    %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc368)
    %76 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc369)
    %77 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc370)
    %78 = cir.ptr_stride(%77 : !cir.ptr<!s8i>, %76 : !s32i), !cir.ptr<!s8i> loc(#loc370)
    cir.store %75, %78 : !s8i, !cir.ptr<!s8i> loc(#loc591)
    %79 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc371)
    %80 = cir.call @atoi(%79) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc372)
    cir.store %80, %4 : !s32i, !cir.ptr<!s32i> loc(#loc592)
    cir.br ^bb5 loc(#loc309)
  ^bb27:  // 4 preds: ^bb5, ^bb8, ^bb12, ^bb24
    cir.br ^bb28 loc(#loc309)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc593)
  ^bb29:  // pred: ^bb28
    %81 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc377)
    %82 = cir.const #cir.int<1> : !s32i loc(#loc378)
    %83 = cir.unary(minus, %82) : !s32i, !s32i loc(#loc378)
    %84 = cir.cmp(ne, %81, %83) : !s32i, !cir.bool loc(#loc594)
    cir.brcond %84 ^bb30, ^bb31 loc(#loc595)
  ^bb30:  // pred: ^bb29
    %85 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc380)
    %86 = cir.call @close(%85) : (!s32i) -> !s32i loc(#loc381)
    cir.br ^bb31 loc(#loc376)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc376)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc307)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc302)
  ^bb34:  // 2 preds: ^bb1, ^bb33
    cir.br ^bb35 loc(#loc302)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc596)
  ^bb36:  // pred: ^bb35
    %87 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc597)
    %88 = cir.cast(bitcast, %87 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc597)
    %89 = cir.call %88() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc384)
    %90 = cir.cast(int_to_bool, %89 : !s32i), !cir.bool loc(#loc384)
    cir.brcond %90 ^bb37, ^bb43 loc(#loc598)
  ^bb37:  // pred: ^bb36
    cir.br ^bb38 loc(#loc599)
  ^bb38:  // pred: ^bb37
    %91 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc389)
    %92 = cir.const #cir.int<0> : !s32i loc(#loc390)
    %93 = cir.cmp(ne, %91, %92) : !s32i, !cir.bool loc(#loc600)
    cir.brcond %93 ^bb39, ^bb40 loc(#loc601)
  ^bb39:  // pred: ^bb38
    %94 = cir.const #cir.int<100> : !s32i loc(#loc394)
    %95 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc395)
    %96 = cir.binop(div, %94, %95) : !s32i loc(#loc602)
    cir.call @printIntLine(%96) : (!s32i) -> () loc(#loc396)
    cir.br ^bb41 loc(#loc392)
  ^bb40:  // pred: ^bb38
    %97 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc397)
    %98 = cir.cast(array_to_ptrdecay, %97 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc397)
    cir.call @printLine(%98) : (!cir.ptr<!s8i>) -> () loc(#loc398)
    cir.br ^bb41 loc(#loc388)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc388)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc383)
  ^bb43:  // 2 preds: ^bb36, ^bb42
    cir.br ^bb44 loc(#loc383)
  ^bb44:  // pred: ^bb43
    cir.return loc(#loc287)
  } loc(#loc558)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc604)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc403)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc404)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc605)
    cir.br ^bb1 loc(#loc606)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc607)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc607)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc408)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc408)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc608)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc413)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc413)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc414)
    cir.br ^bb4 loc(#loc411)
  ^bb3:  // pred: ^bb1
    %9 = cir.const #cir.int<7> : !s32i loc(#loc415)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc609)
    cir.br ^bb4 loc(#loc407)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc407)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc610)
  ^bb6:  // pred: ^bb5
    %10 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc611)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc611)
    %12 = cir.call %11() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc419)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc419)
    cir.brcond %13 ^bb7, ^bb8 loc(#loc612)
  ^bb7:  // pred: ^bb6
    %14 = cir.const #cir.int<100> : !s32i loc(#loc422)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc423)
    %16 = cir.binop(div, %14, %15) : !s32i loc(#loc613)
    cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc424)
    cir.br ^bb8 loc(#loc418)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc418)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc400)
  } loc(#loc603)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc615)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc429)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc430)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc616)
    cir.br ^bb1 loc(#loc617)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc618)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc618)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc434)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc434)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc619)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<7> : !s32i loc(#loc437)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc620)
    cir.br ^bb3 loc(#loc433)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc433)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc621)
  ^bb5:  // pred: ^bb4
    %8 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc622)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc622)
    %10 = cir.call %9() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc441)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc441)
    cir.brcond %11 ^bb6, ^bb7 loc(#loc623)
  ^bb6:  // pred: ^bb5
    %12 = cir.const #cir.int<100> : !s32i loc(#loc444)
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc445)
    %14 = cir.binop(div, %12, %13) : !s32i loc(#loc624)
    cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc446)
    cir.br ^bb7 loc(#loc440)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc440)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc426)
  } loc(#loc614)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/sys/socket.h":102:1)
#loc4 = loc("/usr/include/sys/socket.h":102:62)
#loc5 = loc("/usr/include/arpa/inet.h":34:1)
#loc6 = loc("/usr/include/arpa/inet.h":34:47)
#loc7 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":77:53)
#loc8 = loc("/usr/include/netinet/in.h":404:1)
#loc9 = loc("/usr/include/netinet/in.h":405:40)
#loc10 = loc("/usr/include/sys/socket.h":126:1)
#loc11 = loc("/usr/include/sys/socket.h":126:75)
#loc12 = loc("/usr/include/sys/socket.h":145:1)
#loc13 = loc("/usr/include/sys/socket.h":145:68)
#loc14 = loc("/usr/include/stdlib.h":105:1)
#loc15 = loc("/usr/include/stdlib.h":106:33)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc20 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":44:1)
#loc21 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":113:1)
#loc22 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":56:13)
#loc23 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":56:17)
#loc24 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":57:13)
#loc25 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":57:32)
#loc26 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":58:13)
#loc27 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":58:36)
#loc28 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":59:13)
#loc29 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":59:45)
#loc30 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":46:5)
#loc31 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":46:9)
#loc32 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":48:13)
#loc33 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":48:12)
#loc34 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":48:5)
#loc35 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":49:5)
#loc36 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":107:5)
#loc37 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":49:8)
#loc38 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":49:26)
#loc39 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":50:5)
#loc40 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":51:9)
#loc41 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":106:9)
#loc42 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":60:13)
#loc43 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":95:21)
#loc44 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":95:20)
#loc45 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":70:40)
#loc46 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":70:49)
#loc47 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":70:62)
#loc48 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":70:33)
#loc49 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":70:17)
#loc50 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":70:73)
#loc51 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":71:17)
#loc52 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":74:17)
#loc53 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":71:21)
#loc54 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":71:38)
#loc55 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":72:17)
#loc56 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":73:21)
#loc57 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":75:24)
#loc58 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":75:25)
#loc59 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":75:34)
#loc60 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":75:37)
#loc61 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":75:51)
#loc62 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":75:17)
#loc63 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":75:52)
#loc64 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":76:38)
#loc65 = loc("/usr/include/netinet/in.h":249:5)
#loc66 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":76:17)
#loc67 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":77:43)
#loc68 = loc("/usr/include/netinet/in.h":251:20)
#loc69 = loc("/usr/include/netinet/in.h":33:15)
#loc70 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":77:17)
#loc71 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":77:63)
#loc72 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":78:42)
#loc73 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":78:36)
#loc74 = loc("/usr/include/netinet/in.h":250:15)
#loc75 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":78:17)
#loc76 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":78:50)
#loc77 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":79:17)
#loc78 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":82:17)
#loc79 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":79:29)
#loc80 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":79:62)
#loc81 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":79:63)
#loc82 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":79:72)
#loc83 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":79:86)
#loc84 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":79:21)
#loc85 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":79:92)
#loc86 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":80:17)
#loc87 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":81:21)
#loc88 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":85:35)
#loc89 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":85:50)
#loc90 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":85:63)
#loc91 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":85:81)
#loc92 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":85:84)
#loc93 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":85:30)
#loc94 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":85:17)
#loc95 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":85:85)
#loc96 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":86:17)
#loc97 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":89:17)
#loc98 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":86:21)
#loc99 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":86:35)
#loc101 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":86:51)
#loc102 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":86:65)
#loc103 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":87:17)
#loc104 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":88:21)
#loc105 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":91:43)
#loc106 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":91:29)
#loc107 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":91:17)
#loc108 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":93:29)
#loc109 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":93:24)
#loc110 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":93:17)
#loc111 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":93:40)
#loc112 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":96:13)
#loc113 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":99:13)
#loc114 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":96:17)
#loc115 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":96:34)
#loc116 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":97:13)
#loc117 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":98:30)
#loc118 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":98:17)
#loc119 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":108:5)
#loc120 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":112:5)
#loc121 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":108:8)
#loc122 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":108:26)
#loc123 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":109:5)
#loc124 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":111:22)
#loc125 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":111:28)
#loc126 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":111:9)
#loc127 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":323:1)
#loc128 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":329:1)
#loc129 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":325:5)
#loc130 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":325:14)
#loc131 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":326:5)
#loc132 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":326:14)
#loc133 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":327:5)
#loc134 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":327:14)
#loc135 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":328:5)
#loc136 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":328:14)
#loc137 = loc("/usr/include/stdlib.h":575:1)
#loc138 = loc("/usr/include/stdlib.h":575:41)
#loc139 = loc("/usr/include/time.h":76:1)
#loc140 = loc("/usr/include/time.h":76:38)
#loc141 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc142 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc143 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":345:15)
#loc144 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":347:15)
#loc145 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":350:15)
#loc146 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":352:15)
#loc147 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":340:1)
#loc148 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":355:1)
#loc153 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":341:1)
#loc154 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":343:27)
#loc155 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":343:22)
#loc156 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":343:5)
#loc157 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":345:5)
#loc158 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":346:5)
#loc159 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":346:62)
#loc160 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":347:5)
#loc161 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":350:5)
#loc162 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":351:5)
#loc163 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":351:61)
#loc164 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":352:5)
#loc165 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":354:12)
#loc166 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":354:5)
#loc167 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc168 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc169 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":187:19)
#loc170 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":198:23)
#loc171 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":120:1)
#loc172 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":201:1)
#loc173 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":132:13)
#loc174 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":132:17)
#loc175 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":133:13)
#loc176 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":133:32)
#loc177 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":134:13)
#loc178 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":134:36)
#loc179 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":135:13)
#loc180 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":135:45)
#loc181 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":122:5)
#loc182 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":122:9)
#loc183 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":124:13)
#loc184 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":124:12)
#loc185 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":124:5)
#loc186 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":125:5)
#loc187 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":183:5)
#loc188 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":125:8)
#loc189 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":125:26)
#loc190 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":126:5)
#loc191 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":127:9)
#loc192 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":182:9)
#loc193 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":136:13)
#loc194 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":171:21)
#loc195 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":171:20)
#loc196 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":146:40)
#loc197 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":146:49)
#loc198 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":146:62)
#loc199 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":146:33)
#loc200 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":146:17)
#loc201 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":146:73)
#loc202 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":147:17)
#loc203 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":150:17)
#loc204 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":147:21)
#loc205 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":147:38)
#loc206 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":148:17)
#loc207 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":149:21)
#loc208 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":151:24)
#loc209 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":151:25)
#loc210 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":151:34)
#loc211 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":151:37)
#loc212 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":151:51)
#loc213 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":151:17)
#loc214 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":151:52)
#loc215 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":152:38)
#loc216 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":152:17)
#loc217 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":153:53)
#loc218 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":153:43)
#loc219 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":153:17)
#loc220 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":153:63)
#loc221 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":154:42)
#loc222 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":154:36)
#loc223 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":154:17)
#loc224 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":154:50)
#loc225 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":155:17)
#loc226 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":158:17)
#loc227 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":155:29)
#loc228 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":155:62)
#loc229 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":155:63)
#loc230 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":155:72)
#loc231 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":155:86)
#loc232 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":155:21)
#loc233 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":155:92)
#loc234 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":156:17)
#loc235 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":157:21)
#loc236 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":161:35)
#loc237 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":161:50)
#loc238 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":161:63)
#loc239 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":161:81)
#loc240 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":161:84)
#loc241 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":161:30)
#loc242 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":161:17)
#loc243 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":161:85)
#loc244 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":162:17)
#loc245 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":165:17)
#loc246 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":162:21)
#loc247 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":162:35)
#loc249 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":162:51)
#loc250 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":162:65)
#loc251 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":163:17)
#loc252 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":164:21)
#loc253 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":167:43)
#loc254 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":167:29)
#loc255 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":167:17)
#loc256 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":169:29)
#loc257 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":169:24)
#loc258 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":169:17)
#loc259 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":169:40)
#loc260 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":172:13)
#loc261 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":175:13)
#loc262 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":172:17)
#loc263 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":172:34)
#loc264 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":173:13)
#loc265 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":174:30)
#loc266 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":174:17)
#loc267 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":184:5)
#loc268 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":200:5)
#loc269 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":184:8)
#loc270 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":184:27)
#loc271 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":185:5)
#loc272 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":188:5)
#loc273 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":190:5)
#loc274 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":187:9)
#loc275 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":192:9)
#loc276 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":199:9)
#loc277 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":192:13)
#loc278 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":192:21)
#loc279 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":193:9)
#loc280 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":195:9)
#loc281 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":197:9)
#loc282 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":194:26)
#loc283 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":194:32)
#loc284 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":194:13)
#loc285 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":198:13)
#loc286 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":204:1)
#loc287 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":280:1)
#loc288 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":216:13)
#loc289 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":216:17)
#loc290 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":217:13)
#loc291 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":217:32)
#loc292 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":218:13)
#loc293 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":218:36)
#loc294 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":219:13)
#loc295 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":219:45)
#loc296 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":206:5)
#loc297 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":206:9)
#loc298 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":208:13)
#loc299 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":208:12)
#loc300 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":208:5)
#loc301 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":209:5)
#loc302 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":267:5)
#loc303 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":209:8)
#loc304 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":209:26)
#loc305 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":210:5)
#loc306 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":211:9)
#loc307 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":266:9)
#loc308 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":220:13)
#loc309 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":255:21)
#loc310 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":255:20)
#loc311 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":230:40)
#loc312 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":230:49)
#loc313 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":230:62)
#loc314 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":230:33)
#loc315 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":230:17)
#loc316 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":230:73)
#loc317 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":231:17)
#loc318 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":234:17)
#loc319 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":231:21)
#loc320 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":231:38)
#loc321 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":232:17)
#loc322 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":233:21)
#loc323 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":235:24)
#loc324 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":235:25)
#loc325 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":235:34)
#loc326 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":235:37)
#loc327 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":235:51)
#loc328 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":235:17)
#loc329 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":235:52)
#loc330 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":236:38)
#loc331 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":236:17)
#loc332 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":237:53)
#loc333 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":237:43)
#loc334 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":237:17)
#loc335 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":237:63)
#loc336 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":238:42)
#loc337 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":238:36)
#loc338 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":238:17)
#loc339 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":238:50)
#loc340 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":239:17)
#loc341 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":242:17)
#loc342 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":239:29)
#loc343 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":239:62)
#loc344 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":239:63)
#loc345 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":239:72)
#loc346 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":239:86)
#loc347 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":239:21)
#loc348 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":239:92)
#loc349 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":240:17)
#loc350 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":241:21)
#loc351 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":245:35)
#loc352 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":245:50)
#loc353 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":245:63)
#loc354 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":245:81)
#loc355 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":245:84)
#loc356 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":245:30)
#loc357 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":245:17)
#loc358 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":245:85)
#loc359 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":246:17)
#loc360 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":249:17)
#loc361 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":246:21)
#loc362 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":246:35)
#loc364 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":246:51)
#loc365 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":246:65)
#loc366 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":247:17)
#loc367 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":248:21)
#loc368 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":251:43)
#loc369 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":251:29)
#loc370 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":251:17)
#loc371 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":253:29)
#loc372 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":253:24)
#loc373 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":253:17)
#loc374 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":253:40)
#loc375 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":256:13)
#loc376 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":259:13)
#loc377 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":256:17)
#loc378 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":256:34)
#loc379 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":257:13)
#loc380 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":258:30)
#loc381 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":258:17)
#loc382 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":268:5)
#loc383 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":279:5)
#loc384 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":268:8)
#loc385 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":268:26)
#loc386 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":269:5)
#loc387 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":271:9)
#loc388 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":278:9)
#loc389 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":271:13)
#loc390 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":271:21)
#loc391 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":272:9)
#loc392 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":274:9)
#loc393 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":276:9)
#loc394 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":273:26)
#loc395 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":273:32)
#loc396 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":273:13)
#loc397 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":277:23)
#loc398 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":277:13)
#loc399 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":283:1)
#loc400 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":303:1)
#loc401 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":285:5)
#loc402 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":285:9)
#loc403 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":287:13)
#loc404 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":287:12)
#loc405 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":287:5)
#loc406 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":288:5)
#loc407 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":297:5)
#loc408 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":288:8)
#loc409 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":288:27)
#loc410 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":289:5)
#loc411 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":292:5)
#loc412 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":294:5)
#loc413 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":291:19)
#loc414 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":291:9)
#loc415 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":296:16)
#loc416 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":296:9)
#loc417 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":298:5)
#loc418 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":302:5)
#loc419 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":298:8)
#loc420 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":298:26)
#loc421 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":299:5)
#loc422 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":301:22)
#loc423 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":301:28)
#loc424 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":301:9)
#loc425 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":306:1)
#loc426 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":321:1)
#loc427 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":308:5)
#loc428 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":308:9)
#loc429 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":310:13)
#loc430 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":310:12)
#loc431 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":310:5)
#loc432 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":311:5)
#loc433 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":315:5)
#loc434 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":311:8)
#loc435 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":311:26)
#loc436 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":312:5)
#loc437 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":314:16)
#loc438 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":314:9)
#loc439 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":316:5)
#loc440 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":320:5)
#loc441 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":316:8)
#loc442 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":316:26)
#loc443 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":317:5)
#loc444 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":319:22)
#loc445 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":319:28)
#loc446 = loc("CWE369_Divide_by_Zero__int_connect_socket_divide_11.c":319:9)
#loc447 = loc(fused[#loc1, #loc2])
#loc448 = loc(fused[#loc3, #loc4])
#loc449 = loc(fused[#loc5, #loc6])
#loc450 = loc(fused[#loc8, #loc9])
#loc451 = loc(fused[#loc10, #loc11])
#loc452 = loc(fused[#loc12, #loc13])
#loc453 = loc(fused[#loc14, #loc15])
#loc454 = loc(fused[#loc16, #loc17])
#loc455 = loc(fused[#loc18, #loc19])
#loc456 = loc(fused[#loc20, #loc21])
#loc457 = loc(fused[#loc22, #loc23])
#loc458 = loc(fused[#loc24, #loc25])
#loc459 = loc(fused[#loc26, #loc27])
#loc460 = loc(fused[#loc28, #loc29])
#loc461 = loc(fused[#loc30, #loc31])
#loc462 = loc(fused[#loc34, #loc32])
#loc463 = loc(fused[#loc35, #loc36])
#loc464 = loc(fused[#loc37, #loc38])
#loc465 = loc(fused[#loc39, #loc36])
#loc466 = loc(fused[#loc40, #loc41])
#loc467 = loc(fused[#loc42, #loc43])
#loc468 = loc(fused[#loc49, #loc50])
#loc469 = loc(fused[#loc51, #loc52])
#loc470 = loc(fused[#loc53, #loc54])
#loc471 = loc(fused[#loc55, #loc52])
#loc472 = loc(fused[#loc57, #loc58])
#loc473 = loc(fused[#loc60, #loc61])
#loc474 = loc(fused[#loc62, #loc63])
#loc475 = loc(fused[#loc66, #loc64])
#loc476 = loc(fused[#loc70, #loc71])
#loc477 = loc(fused[#loc75, #loc76])
#loc478 = loc(fused[#loc77, #loc78])
#loc479 = loc(fused[#loc80, #loc81])
#loc480 = loc(fused[#loc82, #loc83])
#loc481 = loc(fused[#loc84, #loc85])
#loc482 = loc(fused[#loc86, #loc78])
#loc483 = loc(fused[#loc90, #loc91])
#loc484 = loc(fused[#loc94, #loc95])
#loc485 = loc(fused[#loc96, #loc97])
#loc486 = loc(fused[#loc98, #loc99])
#loc487 = loc(fused[#loc101, #loc102])
#loc488 = loc(fused[#loc103, #loc97])
#loc489 = loc(fused[#loc107, #loc105])
#loc490 = loc(fused[#loc110, #loc111])
#loc491 = loc(fused[#loc112, #loc113])
#loc492 = loc(fused[#loc114, #loc115])
#loc493 = loc(fused[#loc116, #loc113])
#loc494 = loc(fused[#loc119, #loc120])
#loc495 = loc(fused[#loc121, #loc122])
#loc496 = loc(fused[#loc123, #loc120])
#loc497 = loc(fused[#loc124, #loc125])
#loc498 = loc(fused[#loc127, #loc128])
#loc499 = loc(fused[#loc129, #loc130])
#loc500 = loc(fused[#loc131, #loc132])
#loc501 = loc(fused[#loc133, #loc134])
#loc502 = loc(fused[#loc135, #loc136])
#loc503 = loc(fused[#loc137, #loc138])
#loc504 = loc(fused[#loc139, #loc140])
#loc505 = loc(fused[#loc141, #loc142])
#loc506 = loc(fused[#loc147, #loc148])
#loc509 = loc(fused[#loc158, #loc159])
#loc510 = loc(fused[#loc162, #loc163])
#loc511 = loc(fused[#loc166, #loc165])
#loc512 = loc(fused[#loc167, #loc168])
#loc513 = loc(fused[#loc171, #loc172])
#loc514 = loc(fused[#loc173, #loc174])
#loc515 = loc(fused[#loc175, #loc176])
#loc516 = loc(fused[#loc177, #loc178])
#loc517 = loc(fused[#loc179, #loc180])
#loc518 = loc(fused[#loc181, #loc182])
#loc519 = loc(fused[#loc185, #loc183])
#loc520 = loc(fused[#loc186, #loc187])
#loc521 = loc(fused[#loc188, #loc189])
#loc522 = loc(fused[#loc190, #loc187])
#loc523 = loc(fused[#loc191, #loc192])
#loc524 = loc(fused[#loc193, #loc194])
#loc525 = loc(fused[#loc200, #loc201])
#loc526 = loc(fused[#loc202, #loc203])
#loc527 = loc(fused[#loc204, #loc205])
#loc528 = loc(fused[#loc206, #loc203])
#loc529 = loc(fused[#loc208, #loc209])
#loc530 = loc(fused[#loc211, #loc212])
#loc531 = loc(fused[#loc213, #loc214])
#loc532 = loc(fused[#loc216, #loc215])
#loc533 = loc(fused[#loc219, #loc220])
#loc534 = loc(fused[#loc223, #loc224])
#loc535 = loc(fused[#loc225, #loc226])
#loc536 = loc(fused[#loc228, #loc229])
#loc537 = loc(fused[#loc230, #loc231])
#loc538 = loc(fused[#loc232, #loc233])
#loc539 = loc(fused[#loc234, #loc226])
#loc540 = loc(fused[#loc238, #loc239])
#loc541 = loc(fused[#loc242, #loc243])
#loc542 = loc(fused[#loc244, #loc245])
#loc543 = loc(fused[#loc246, #loc247])
#loc544 = loc(fused[#loc249, #loc250])
#loc545 = loc(fused[#loc251, #loc245])
#loc546 = loc(fused[#loc255, #loc253])
#loc547 = loc(fused[#loc258, #loc259])
#loc548 = loc(fused[#loc260, #loc261])
#loc549 = loc(fused[#loc262, #loc263])
#loc550 = loc(fused[#loc264, #loc261])
#loc551 = loc(fused[#loc267, #loc268])
#loc552 = loc(fused[#loc269, #loc270])
#loc553 = loc(fused[#loc271, #loc272, #loc273, #loc268])
#loc554 = loc(fused[#loc275, #loc276])
#loc555 = loc(fused[#loc277, #loc278])
#loc556 = loc(fused[#loc279, #loc280, #loc281, #loc276])
#loc557 = loc(fused[#loc282, #loc283])
#loc558 = loc(fused[#loc286, #loc287])
#loc559 = loc(fused[#loc288, #loc289])
#loc560 = loc(fused[#loc290, #loc291])
#loc561 = loc(fused[#loc292, #loc293])
#loc562 = loc(fused[#loc294, #loc295])
#loc563 = loc(fused[#loc296, #loc297])
#loc564 = loc(fused[#loc300, #loc298])
#loc565 = loc(fused[#loc301, #loc302])
#loc566 = loc(fused[#loc303, #loc304])
#loc567 = loc(fused[#loc305, #loc302])
#loc568 = loc(fused[#loc306, #loc307])
#loc569 = loc(fused[#loc308, #loc309])
#loc570 = loc(fused[#loc315, #loc316])
#loc571 = loc(fused[#loc317, #loc318])
#loc572 = loc(fused[#loc319, #loc320])
#loc573 = loc(fused[#loc321, #loc318])
#loc574 = loc(fused[#loc323, #loc324])
#loc575 = loc(fused[#loc326, #loc327])
#loc576 = loc(fused[#loc328, #loc329])
#loc577 = loc(fused[#loc331, #loc330])
#loc578 = loc(fused[#loc334, #loc335])
#loc579 = loc(fused[#loc338, #loc339])
#loc580 = loc(fused[#loc340, #loc341])
#loc581 = loc(fused[#loc343, #loc344])
#loc582 = loc(fused[#loc345, #loc346])
#loc583 = loc(fused[#loc347, #loc348])
#loc584 = loc(fused[#loc349, #loc341])
#loc585 = loc(fused[#loc353, #loc354])
#loc586 = loc(fused[#loc357, #loc358])
#loc587 = loc(fused[#loc359, #loc360])
#loc588 = loc(fused[#loc361, #loc362])
#loc589 = loc(fused[#loc364, #loc365])
#loc590 = loc(fused[#loc366, #loc360])
#loc591 = loc(fused[#loc370, #loc368])
#loc592 = loc(fused[#loc373, #loc374])
#loc593 = loc(fused[#loc375, #loc376])
#loc594 = loc(fused[#loc377, #loc378])
#loc595 = loc(fused[#loc379, #loc376])
#loc596 = loc(fused[#loc382, #loc383])
#loc597 = loc(fused[#loc384, #loc385])
#loc598 = loc(fused[#loc386, #loc383])
#loc599 = loc(fused[#loc387, #loc388])
#loc600 = loc(fused[#loc389, #loc390])
#loc601 = loc(fused[#loc391, #loc392, #loc393, #loc388])
#loc602 = loc(fused[#loc394, #loc395])
#loc603 = loc(fused[#loc399, #loc400])
#loc604 = loc(fused[#loc401, #loc402])
#loc605 = loc(fused[#loc405, #loc403])
#loc606 = loc(fused[#loc406, #loc407])
#loc607 = loc(fused[#loc408, #loc409])
#loc608 = loc(fused[#loc410, #loc411, #loc412, #loc407])
#loc609 = loc(fused[#loc416, #loc415])
#loc610 = loc(fused[#loc417, #loc418])
#loc611 = loc(fused[#loc419, #loc420])
#loc612 = loc(fused[#loc421, #loc418])
#loc613 = loc(fused[#loc422, #loc423])
#loc614 = loc(fused[#loc425, #loc426])
#loc615 = loc(fused[#loc427, #loc428])
#loc616 = loc(fused[#loc431, #loc429])
#loc617 = loc(fused[#loc432, #loc433])
#loc618 = loc(fused[#loc434, #loc435])
#loc619 = loc(fused[#loc436, #loc433])
#loc620 = loc(fused[#loc438, #loc437])
#loc621 = loc(fused[#loc439, #loc440])
#loc622 = loc(fused[#loc441, #loc442])
#loc623 = loc(fused[#loc443, #loc440])
#loc624 = loc(fused[#loc444, #loc445])
