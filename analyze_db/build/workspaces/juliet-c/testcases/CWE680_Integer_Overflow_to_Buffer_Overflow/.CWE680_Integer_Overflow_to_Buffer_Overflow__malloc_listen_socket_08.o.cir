!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc322)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc323)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc324)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc325)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc326)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc327)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc328)
  cir.func private @close(!s32i) -> !s32i loc(#loc329)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc330)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc331)
  cir.func private @printIntLine(!s32i) loc(#loc332)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc333)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc335)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc30)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc336)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc338)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc34)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc34)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc341)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc342)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc343)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc344)
          %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc345)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc44)
          %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc44)
          cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc343)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc46)
          %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc46)
          cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc344)
          cir.scope {
            cir.do {
              cir.scope {
                %15 = cir.const #cir.int<2> : !s32i loc(#loc53)
                %16 = cir.const #cir.int<1> : !s32i loc(#loc54)
                %17 = cir.const #cir.int<6> : !s32i loc(#loc55)
                %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc56)
                cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc348)
                cir.scope {
                  %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc61)
                  %61 = cir.const #cir.int<1> : !s32i loc(#loc62)
                  %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc62)
                  %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc350)
                  cir.if %63 {
                    cir.break loc(#loc64)
                  } loc(#loc351)
                } loc(#loc349)
                %19 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc352)
                %20 = cir.const #cir.int<0> : !s32i loc(#loc67)
                %21 = cir.const #cir.int<16> : !u64i loc(#loc353)
                cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc354)
                %22 = cir.const #cir.int<2> : !s32i loc(#loc72)
                %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc72)
                %24 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
                cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc355)
                %25 = cir.const #cir.int<0> : !s32i loc(#loc75)
                %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc75)
                %27 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
                %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
                cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc356)
                %29 = cir.const #cir.int<27015> : !s32i loc(#loc79)
                %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc79)
                %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc80)
                %32 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc81)
                cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc357)
                cir.scope {
                  %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc86)
                  %61 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc359)
                  %62 = cir.const #cir.int<16> : !u64i loc(#loc360)
                  %63 = cir.cast(integral, %62 : !u64i), !u32i loc(#loc360)
                  %64 = cir.call @bind(%60, %61, %63) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc91)
                  %65 = cir.const #cir.int<1> : !s32i loc(#loc92)
                  %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc92)
                  %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc361)
                  cir.if %67 {
                    cir.break loc(#loc94)
                  } loc(#loc362)
                } loc(#loc358)
                cir.scope {
                  %60 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc97)
                  %61 = cir.const #cir.int<5> : !s32i loc(#loc98)
                  %62 = cir.call @listen(%60, %61) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc99)
                  %63 = cir.const #cir.int<1> : !s32i loc(#loc100)
                  %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc100)
                  %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc364)
                  cir.if %65 {
                    cir.break loc(#loc102)
                  } loc(#loc365)
                } loc(#loc363)
                %33 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc103)
                %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc104)
                %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc105)
                %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc106)
                cir.store %36, %9 : !s32i, !cir.ptr<!s32i> loc(#loc366)
                cir.scope {
                  %60 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc111)
                  %61 = cir.const #cir.int<1> : !s32i loc(#loc112)
                  %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc112)
                  %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc368)
                  cir.if %63 {
                    cir.break loc(#loc114)
                  } loc(#loc369)
                } loc(#loc367)
                %37 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc115)
                %38 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc116)
                %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc116)
                %40 = cir.const #cir.int<3> : !s32i loc(#loc117)
                %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc117)
                %42 = cir.const #cir.int<4> : !u64i loc(#loc117)
                %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc117)
                %44 = cir.const #cir.int<2> : !s32i loc(#loc117)
                %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc117)
                %46 = cir.binop(add, %43, %45) : !u64i loc(#loc117)
                %47 = cir.const #cir.int<1> : !s32i loc(#loc118)
                %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc118)
                %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc370)
                %50 = cir.const #cir.int<0> : !s32i loc(#loc119)
                %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc120)
                %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc120)
                cir.store %52, %6 : !s32i, !cir.ptr<!s32i> loc(#loc371)
                cir.scope {
                  %60 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc125)
                  %61 = cir.const #cir.int<1> : !s32i loc(#loc126)
                  %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc126)
                  %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc373)
                  %64 = cir.ternary(%63, true {
                    %65 = cir.const #true loc(#loc127)
                    cir.yield %65 : !cir.bool loc(#loc127)
                  }, false {
                    %65 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc128)
                    %66 = cir.const #cir.int<0> : !s32i loc(#loc129)
                    %67 = cir.cmp(eq, %65, %66) : !s32i, !cir.bool loc(#loc374)
                    %68 = cir.ternary(%67, true {
                      %69 = cir.const #true loc(#loc127)
                      cir.yield %69 : !cir.bool loc(#loc127)
                    }, false {
                      %69 = cir.const #false loc(#loc127)
                      cir.yield %69 : !cir.bool loc(#loc127)
                    }) : (!cir.bool) -> !cir.bool loc(#loc127)
                    cir.yield %68 : !cir.bool loc(#loc127)
                  }) : (!cir.bool) -> !cir.bool loc(#loc127)
                  cir.if %64 {
                    cir.break loc(#loc131)
                  } loc(#loc375)
                } loc(#loc372)
                %53 = cir.const #cir.int<0> : !s32i loc(#loc132)
                %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc132)
                %55 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc133)
                %56 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc134)
                %57 = cir.ptr_stride(%56 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc134)
                cir.store %54, %57 : !s8i, !cir.ptr<!s8i> loc(#loc376)
                %58 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc135)
                %59 = cir.call @atoi(%58) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc136)
                cir.store %59, %0 : !s32i, !cir.ptr<!s32i> loc(#loc377)
              } loc(#loc347)
              cir.yield loc(#loc50)
            } while {
              %15 = cir.const #cir.int<0> : !s32i loc(#loc139)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc139)
              cir.condition(%16) loc(#loc139)
            } loc(#loc346)
          } loc(#loc346)
          cir.scope {
            %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc142)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc143)
            %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc143)
            %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc379)
            cir.if %18 {
              %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc145)
              %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc146)
            } loc(#loc380)
          } loc(#loc378)
          cir.scope {
            %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc149)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc150)
            %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc150)
            %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc382)
            cir.if %18 {
              %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc152)
              %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc153)
            } loc(#loc383)
          } loc(#loc381)
        } loc(#loc340)
      } loc(#loc339)
    } loc(#loc337)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc385)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc386)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc160)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc161)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc161)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc387)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc388)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc160)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc389)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc390)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc168)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc169)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc169)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc392)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc171)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc172)
          %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc173)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc171)
        } loc(#loc393)
      } loc(#loc391)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc176)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc176)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc395)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc178)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc179)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc179)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc396)
          cir.condition(%24) loc(#loc180)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc182)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc183)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc184)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc185)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc398)
          } loc(#loc397)
          cir.yield loc(#loc175)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc186)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc187)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc399)
          cir.yield loc(#loc394)
        } loc(#loc394)
      } loc(#loc394)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc188)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc189)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc190)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc188)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc191)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc192)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc193)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc193)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc192)
    } loc(#loc384)
    cir.return loc(#loc26)
  } loc(#loc334)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc401)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc196)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc402)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc198)
    cir.return loc(#loc195)
  } loc(#loc400)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc201)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc202)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc404)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc404)
    cir.return %2 : !s32i loc(#loc404)
  } loc(#loc403)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc405)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc206)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc407)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc211)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc212)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc408)
    cir.scope {
      %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc410)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc216)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc216)
      cir.if %5 {
        %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc206)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc206)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc221)
      } else {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc222)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc412)
      } loc(#loc411)
    } loc(#loc409)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc414)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc415)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc230)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc231)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc231)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc416)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc417)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc230)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc418)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc419)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc238)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc239)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc239)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc421)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc241)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc242)
          %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc243)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc241)
        } loc(#loc422)
      } loc(#loc420)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc246)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc246)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc424)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc248)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc249)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc249)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc425)
          cir.condition(%24) loc(#loc250)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc252)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc253)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc254)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc255)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc427)
          } loc(#loc426)
          cir.yield loc(#loc245)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc256)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc257)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc428)
          cir.yield loc(#loc423)
        } loc(#loc423)
      } loc(#loc423)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc258)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc259)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc260)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc258)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc261)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc262)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc263)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc263)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc262)
    } loc(#loc413)
    cir.return loc(#loc208)
  } loc(#loc406)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc265)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc266)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc430)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc430)
    cir.return %2 : !s32i loc(#loc430)
  } loc(#loc429)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc432)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc272)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc273)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc433)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc435)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc277)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc277)
      cir.if %5 {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc280)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc437)
      } loc(#loc436)
    } loc(#loc434)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc439)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc440)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc288)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc289)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc289)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc441)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc442)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc288)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc443)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc444)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc296)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc297)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc297)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc446)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc299)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc300)
          %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc301)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc299)
        } loc(#loc447)
      } loc(#loc445)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc304)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc304)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc449)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc306)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc307)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc307)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc450)
          cir.condition(%24) loc(#loc308)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc310)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc311)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc312)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc313)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc452)
          } loc(#loc451)
          cir.yield loc(#loc303)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc314)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc315)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc453)
          cir.yield loc(#loc448)
        } loc(#loc448)
      } loc(#loc448)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc316)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc317)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc318)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc316)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc319)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc320)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc321)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc321)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc320)
    } loc(#loc438)
    cir.return loc(#loc269)
  } loc(#loc431)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("/usr/include/stdlib.h":672:1)
#loc18 = loc("/usr/include/stdlib.h":672:45)
#loc19 = loc("/usr/include/stdlib.h":756:1)
#loc20 = loc("/usr/include/stdlib.h":756:70)
#loc21 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc23 = loc("/usr/include/stdlib.h":687:1)
#loc24 = loc("/usr/include/stdlib.h":687:32)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":57:1)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":148:1)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":59:5)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":59:9)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":61:13)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":61:12)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":61:5)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":62:5)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":133:5)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":62:8)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":62:26)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":63:5)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":64:9)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":132:9)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":69:13)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":69:17)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":70:13)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":70:32)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":71:13)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":71:35)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":72:13)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":72:35)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":73:13)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":73:45)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":74:13)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":117:21)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":75:13)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":116:13)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":84:39)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":84:48)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":84:61)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":84:32)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":84:17)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":84:72)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":85:17)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":88:17)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":85:21)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":85:37)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":86:17)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":87:21)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":89:24)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":89:25)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":89:34)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":89:37)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":89:51)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":89:17)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":89:52)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":90:38)
#loc73 = loc("/usr/include/netinet/in.h":249:5)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":90:17)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":91:43)
#loc76 = loc("/usr/include/netinet/in.h":251:20)
#loc77 = loc("/usr/include/netinet/in.h":33:15)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":91:17)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":92:42)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":92:36)
#loc81 = loc("/usr/include/netinet/in.h":250:15)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":92:17)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":92:50)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":93:17)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":96:17)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":93:26)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":93:58)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":93:59)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":93:68)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":93:82)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":93:21)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":93:88)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":94:17)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":95:21)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":97:17)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":100:17)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":97:28)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":97:42)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":97:21)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":97:61)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":98:17)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":99:21)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":101:39)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":101:53)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":101:59)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":101:32)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":101:17)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":101:63)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":102:17)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":105:17)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":102:21)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":102:37)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":103:17)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":104:21)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":107:35)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":107:49)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":107:62)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":107:80)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":107:83)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":107:30)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":107:17)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":107:84)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":108:17)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":111:17)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":108:21)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":108:35)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":108:48)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":108:51)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":108:65)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":109:17)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":110:21)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":113:43)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":113:29)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":113:17)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":115:29)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":115:24)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":115:17)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":115:40)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":117:20)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":118:13)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":121:13)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":118:17)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":118:33)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":119:13)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":120:30)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":120:17)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":122:13)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":125:13)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":122:17)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":122:33)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":123:13)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":124:30)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":124:17)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":134:5)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":147:5)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":135:9)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":135:16)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":136:9)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":136:14)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":139:28)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":139:35)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":139:42)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":139:52)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":139:53)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":139:9)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":140:9)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":140:43)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":140:13)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":140:27)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":140:33)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":140:34)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":140:40)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":140:39)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":141:9)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":144:9)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":141:18)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":141:14)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":141:21)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":141:33)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":141:23)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":142:9)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":143:29)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":143:13)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":143:24)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":143:25)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":141:40)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":141:39)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":145:22)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":145:33)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":145:34)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":145:9)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":146:9)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":146:14)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":213:1)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":217:1)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":215:5)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":215:14)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":216:5)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":216:14)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":45:1)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":48:1)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":47:12)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":47:5)
#loc204 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc205 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":163:19)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":155:1)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":184:1)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":157:5)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":157:9)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":159:13)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":159:12)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":159:5)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":160:5)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":169:5)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":160:8)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":160:27)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":161:5)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":164:5)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":166:5)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":163:9)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":168:16)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":168:9)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":170:5)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":183:5)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":171:9)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":171:16)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":172:9)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":172:14)
#loc230 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":175:28)
#loc231 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":175:35)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":175:42)
#loc233 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":175:52)
#loc234 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":175:53)
#loc235 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":175:9)
#loc236 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":176:9)
#loc237 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":176:43)
#loc238 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":176:13)
#loc239 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":176:27)
#loc240 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":176:33)
#loc241 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":176:34)
#loc242 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":176:40)
#loc243 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":176:39)
#loc244 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":177:9)
#loc245 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":180:9)
#loc246 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":177:18)
#loc247 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":177:14)
#loc248 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":177:21)
#loc249 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":177:33)
#loc250 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":177:23)
#loc251 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":178:9)
#loc252 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":179:29)
#loc253 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":179:13)
#loc254 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":179:24)
#loc255 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":179:25)
#loc256 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":177:40)
#loc257 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":177:39)
#loc258 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":181:22)
#loc259 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":181:33)
#loc260 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":181:34)
#loc261 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":181:9)
#loc262 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":182:9)
#loc263 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":182:14)
#loc264 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":50:1)
#loc265 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":53:1)
#loc266 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":52:12)
#loc267 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":52:5)
#loc268 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":187:1)
#loc269 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":211:1)
#loc270 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":189:5)
#loc271 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":189:9)
#loc272 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":191:13)
#loc273 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":191:12)
#loc274 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":191:5)
#loc275 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":192:5)
#loc276 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":196:5)
#loc277 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":192:8)
#loc278 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":192:26)
#loc279 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":193:5)
#loc280 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":195:16)
#loc281 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":195:9)
#loc282 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":197:5)
#loc283 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":210:5)
#loc284 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":198:9)
#loc285 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":198:16)
#loc286 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":199:9)
#loc287 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":199:14)
#loc288 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":202:28)
#loc289 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":202:35)
#loc290 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":202:42)
#loc291 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":202:52)
#loc292 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":202:53)
#loc293 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":202:9)
#loc294 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":203:9)
#loc295 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":203:43)
#loc296 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":203:13)
#loc297 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":203:27)
#loc298 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":203:33)
#loc299 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":203:34)
#loc300 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":203:40)
#loc301 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":203:39)
#loc302 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":204:9)
#loc303 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":207:9)
#loc304 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":204:18)
#loc305 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":204:14)
#loc306 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":204:21)
#loc307 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":204:33)
#loc308 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":204:23)
#loc309 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":205:9)
#loc310 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":206:29)
#loc311 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":206:13)
#loc312 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":206:24)
#loc313 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":206:25)
#loc314 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":204:40)
#loc315 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":204:39)
#loc316 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":208:22)
#loc317 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":208:33)
#loc318 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":208:34)
#loc319 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":208:9)
#loc320 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":209:9)
#loc321 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_listen_socket_08.c":209:14)
#loc322 = loc(fused[#loc1, #loc2])
#loc323 = loc(fused[#loc3, #loc4])
#loc324 = loc(fused[#loc5, #loc6])
#loc325 = loc(fused[#loc7, #loc8])
#loc326 = loc(fused[#loc9, #loc10])
#loc327 = loc(fused[#loc11, #loc12])
#loc328 = loc(fused[#loc13, #loc14])
#loc329 = loc(fused[#loc15, #loc16])
#loc330 = loc(fused[#loc17, #loc18])
#loc331 = loc(fused[#loc19, #loc20])
#loc332 = loc(fused[#loc21, #loc22])
#loc333 = loc(fused[#loc23, #loc24])
#loc334 = loc(fused[#loc25, #loc26])
#loc335 = loc(fused[#loc27, #loc28])
#loc336 = loc(fused[#loc31, #loc29])
#loc337 = loc(fused[#loc32, #loc33])
#loc338 = loc(fused[#loc34, #loc35])
#loc339 = loc(fused[#loc36, #loc33])
#loc340 = loc(fused[#loc37, #loc38])
#loc341 = loc(fused[#loc39, #loc40])
#loc342 = loc(fused[#loc41, #loc42])
#loc343 = loc(fused[#loc43, #loc44])
#loc344 = loc(fused[#loc45, #loc46])
#loc345 = loc(fused[#loc47, #loc48])
#loc346 = loc(fused[#loc49, #loc50])
#loc347 = loc(fused[#loc51, #loc52])
#loc348 = loc(fused[#loc57, #loc58])
#loc349 = loc(fused[#loc59, #loc60])
#loc350 = loc(fused[#loc61, #loc62])
#loc351 = loc(fused[#loc63, #loc60])
#loc352 = loc(fused[#loc65, #loc66])
#loc353 = loc(fused[#loc68, #loc69])
#loc354 = loc(fused[#loc70, #loc71])
#loc355 = loc(fused[#loc74, #loc72])
#loc356 = loc(fused[#loc78, #loc75])
#loc357 = loc(fused[#loc82, #loc83])
#loc358 = loc(fused[#loc84, #loc85])
#loc359 = loc(fused[#loc87, #loc88])
#loc360 = loc(fused[#loc89, #loc90])
#loc361 = loc(fused[#loc91, #loc92])
#loc362 = loc(fused[#loc93, #loc85])
#loc363 = loc(fused[#loc95, #loc96])
#loc364 = loc(fused[#loc99, #loc100])
#loc365 = loc(fused[#loc101, #loc96])
#loc366 = loc(fused[#loc107, #loc108])
#loc367 = loc(fused[#loc109, #loc110])
#loc368 = loc(fused[#loc111, #loc112])
#loc369 = loc(fused[#loc113, #loc110])
#loc370 = loc(fused[#loc117, #loc118])
#loc371 = loc(fused[#loc121, #loc122])
#loc372 = loc(fused[#loc123, #loc124])
#loc373 = loc(fused[#loc125, #loc126])
#loc374 = loc(fused[#loc128, #loc129])
#loc375 = loc(fused[#loc130, #loc124])
#loc376 = loc(fused[#loc134, #loc132])
#loc377 = loc(fused[#loc137, #loc138])
#loc378 = loc(fused[#loc140, #loc141])
#loc379 = loc(fused[#loc142, #loc143])
#loc380 = loc(fused[#loc144, #loc141])
#loc381 = loc(fused[#loc147, #loc148])
#loc382 = loc(fused[#loc149, #loc150])
#loc383 = loc(fused[#loc151, #loc148])
#loc384 = loc(fused[#loc154, #loc155])
#loc385 = loc(fused[#loc156, #loc157])
#loc386 = loc(fused[#loc158, #loc159])
#loc387 = loc(fused[#loc162, #loc163])
#loc388 = loc(fused[#loc161, #loc163])
#loc389 = loc(fused[#loc160, #loc164])
#loc390 = loc(fused[#loc165, #loc164])
#loc391 = loc(fused[#loc166, #loc167])
#loc392 = loc(fused[#loc168, #loc169])
#loc393 = loc(fused[#loc170, #loc167])
#loc394 = loc(fused[#loc174, #loc175])
#loc395 = loc(fused[#loc177, #loc176])
#loc396 = loc(fused[#loc178, #loc179])
#loc397 = loc(fused[#loc181, #loc175])
#loc398 = loc(fused[#loc183, #loc182])
#loc399 = loc(fused[#loc187, #loc186])
#loc400 = loc(fused[#loc194, #loc195])
#loc401 = loc(fused[#loc196, #loc197])
#loc402 = loc(fused[#loc198, #loc199])
#loc403 = loc(fused[#loc200, #loc201])
#loc404 = loc(fused[#loc203, #loc202])
#loc405 = loc(fused[#loc204, #loc205])
#loc406 = loc(fused[#loc207, #loc208])
#loc407 = loc(fused[#loc209, #loc210])
#loc408 = loc(fused[#loc213, #loc211])
#loc409 = loc(fused[#loc214, #loc215])
#loc410 = loc(fused[#loc216, #loc217])
#loc411 = loc(fused[#loc218, #loc219, #loc220, #loc215])
#loc412 = loc(fused[#loc223, #loc222])
#loc413 = loc(fused[#loc224, #loc225])
#loc414 = loc(fused[#loc226, #loc227])
#loc415 = loc(fused[#loc228, #loc229])
#loc416 = loc(fused[#loc232, #loc233])
#loc417 = loc(fused[#loc231, #loc233])
#loc418 = loc(fused[#loc230, #loc234])
#loc419 = loc(fused[#loc235, #loc234])
#loc420 = loc(fused[#loc236, #loc237])
#loc421 = loc(fused[#loc238, #loc239])
#loc422 = loc(fused[#loc240, #loc237])
#loc423 = loc(fused[#loc244, #loc245])
#loc424 = loc(fused[#loc247, #loc246])
#loc425 = loc(fused[#loc248, #loc249])
#loc426 = loc(fused[#loc251, #loc245])
#loc427 = loc(fused[#loc253, #loc252])
#loc428 = loc(fused[#loc257, #loc256])
#loc429 = loc(fused[#loc264, #loc265])
#loc430 = loc(fused[#loc267, #loc266])
#loc431 = loc(fused[#loc268, #loc269])
#loc432 = loc(fused[#loc270, #loc271])
#loc433 = loc(fused[#loc274, #loc272])
#loc434 = loc(fused[#loc275, #loc276])
#loc435 = loc(fused[#loc277, #loc278])
#loc436 = loc(fused[#loc279, #loc276])
#loc437 = loc(fused[#loc281, #loc280])
#loc438 = loc(fused[#loc282, #loc283])
#loc439 = loc(fused[#loc284, #loc285])
#loc440 = loc(fused[#loc286, #loc287])
#loc441 = loc(fused[#loc290, #loc291])
#loc442 = loc(fused[#loc289, #loc291])
#loc443 = loc(fused[#loc288, #loc292])
#loc444 = loc(fused[#loc293, #loc292])
#loc445 = loc(fused[#loc294, #loc295])
#loc446 = loc(fused[#loc296, #loc297])
#loc447 = loc(fused[#loc298, #loc295])
#loc448 = loc(fused[#loc302, #loc303])
#loc449 = loc(fused[#loc305, #loc304])
#loc450 = loc(fused[#loc306, #loc307])
#loc451 = loc(fused[#loc309, #loc303])
#loc452 = loc(fused[#loc311, #loc310])
#loc453 = loc(fused[#loc315, #loc314])
