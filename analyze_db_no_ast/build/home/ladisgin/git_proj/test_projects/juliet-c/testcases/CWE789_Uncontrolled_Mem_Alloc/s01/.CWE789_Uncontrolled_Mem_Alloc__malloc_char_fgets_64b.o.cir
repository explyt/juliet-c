!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":30:67)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":30:74)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":62:71)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":62:78)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":90:71)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":90:78)
#true = #cir.bool<true> : !cir.bool
#loc165 = loc(fused[#loc15, #loc16])
#loc182 = loc(fused[#loc61, #loc62])
#loc199 = loc(fused[#loc110, #loc111])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc159)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc160)
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc161)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc7)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc162)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc163)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc12)
  cir.func  @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b_badSink(%arg0: !cir.ptr<!void> loc(fused[#loc15, #loc16])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc165)
    %1 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc166)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc167)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc21)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc18)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!u64i> loc(#loc18)
    cir.store %4, %1 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc166)
    %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc22)
    %6 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc23)
    cir.store %6, %2 : !u64i, !cir.ptr<!u64i> loc(#loc167)
    cir.scope {
      %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc169)
      cir.scope {
        %8 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc30)
        %9 = cir.const #cir.int<5> : !u64i loc(#loc171)
        %10 = cir.cmp(gt, %8, %9) : !u64i, !s32i loc(#loc172)
        %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc33)
        cir.if %11 {
          %12 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc37)
          %13 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc38)
          %14 = cir.const #cir.int<1> : !u64i loc(#loc174)
          %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc175)
          %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc37)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc176)
          cir.store %17, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc177)
          cir.scope {
            %27 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc46)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc46)
            %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !s32i loc(#loc179)
            %31 = cir.cast(int_to_bool, %30 : !s32i), !cir.bool loc(#loc47)
            cir.if %31 {
              %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc49)
              %33 = cir.const #cir.int<1> : !s32i loc(#loc50)
              %34 = cir.unary(minus, %33) : !s32i, !s32i loc(#loc51)
              cir.call @exit(%34) : (!s32i) -> () extra(#fn_attr) loc(#loc49)
            } loc(#loc180)
          } loc(#loc178)
          %18 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc52)
          %19 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
          %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc7)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc7)
          %22 = cir.call @strcpy(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc52)
          %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
          cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc55)
          %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc56)
          %25 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
          %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc57)
          cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc56)
        } else {
          %12 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc12)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc12)
          cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc58)
        } loc(#loc173)
      } loc(#loc170)
    } loc(#loc168)
    cir.return loc(#loc14)
  } loc(#loc164)
  cir.func  @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b_goodG2BSink(%arg0: !cir.ptr<!void> loc(fused[#loc61, #loc62])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc182)
    %1 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc183)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc184)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc67)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc64)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!u64i> loc(#loc64)
    cir.store %4, %1 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc183)
    %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc68)
    %6 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc69)
    cir.store %6, %2 : !u64i, !cir.ptr<!u64i> loc(#loc184)
    cir.scope {
      %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc186)
      cir.scope {
        %8 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc76)
        %9 = cir.const #cir.int<5> : !u64i loc(#loc188)
        %10 = cir.cmp(gt, %8, %9) : !u64i, !s32i loc(#loc189)
        %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc79)
        cir.if %11 {
          %12 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc83)
          %13 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc84)
          %14 = cir.const #cir.int<1> : !u64i loc(#loc191)
          %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc192)
          %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc83)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc193)
          cir.store %17, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc194)
          cir.scope {
            %27 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
            %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc92)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc92)
            %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !s32i loc(#loc196)
            %31 = cir.cast(int_to_bool, %30 : !s32i), !cir.bool loc(#loc93)
            cir.if %31 {
              %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc95)
              %33 = cir.const #cir.int<1> : !s32i loc(#loc96)
              %34 = cir.unary(minus, %33) : !s32i, !s32i loc(#loc97)
              cir.call @exit(%34) : (!s32i) -> () extra(#fn_attr) loc(#loc95)
            } loc(#loc197)
          } loc(#loc195)
          %18 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc98)
          %19 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
          %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc100)
          %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc100)
          %22 = cir.call @strcpy(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc98)
          %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
          cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc102)
          %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc103)
          %25 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
          %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc104)
          cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc103)
        } else {
          %12 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc105)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc105)
          cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc106)
        } loc(#loc190)
      } loc(#loc187)
    } loc(#loc185)
    cir.return loc(#loc60)
  } loc(#loc181)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc107)
  cir.func  @CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b_goodB2GSink(%arg0: !cir.ptr<!void> loc(fused[#loc110, #loc111])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["dataVoidPtr", init] {alignment = 8 : i64} loc(#loc199)
    %1 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc200)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc201)
    cir.store %arg0, %0 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc116)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc113)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!u64i> loc(#loc113)
    cir.store %4, %1 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc200)
    %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc117)
    %6 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc118)
    cir.store %6, %2 : !u64i, !cir.ptr<!u64i> loc(#loc201)
    cir.scope {
      %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc203)
      cir.scope {
        %8 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc125)
        %9 = cir.const #cir.int<5> : !u64i loc(#loc205)
        %10 = cir.cmp(gt, %8, %9) : !u64i, !s32i loc(#loc206)
        %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc128)
        %12 = cir.ternary(%11, true {
          %13 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc130)
          %14 = cir.const #cir.int<100> : !s32i loc(#loc131)
          %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc131)
          %16 = cir.cmp(lt, %13, %15) : !u64i, !s32i loc(#loc207)
          %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc132)
          %18 = cir.ternary(%17, true {
            %19 = cir.const #true loc(#loc129)
            cir.yield %19 : !cir.bool loc(#loc129)
          }, false {
            %19 = cir.const #false loc(#loc129)
            cir.yield %19 : !cir.bool loc(#loc129)
          }) : (!cir.bool) -> !cir.bool loc(#loc129)
          cir.yield %18 : !cir.bool loc(#loc129)
        }, false {
          %13 = cir.const #false loc(#loc129)
          cir.yield %13 : !cir.bool loc(#loc129)
        }) : (!cir.bool) -> !cir.bool loc(#loc129)
        cir.if %12 {
          %13 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc136)
          %14 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc137)
          %15 = cir.const #cir.int<1> : !u64i loc(#loc209)
          %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc210)
          %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc136)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc211)
          cir.store %18, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc212)
          cir.scope {
            %28 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
            %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc145)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc145)
            %31 = cir.cmp(eq, %28, %30) : !cir.ptr<!s8i>, !s32i loc(#loc214)
            %32 = cir.cast(int_to_bool, %31 : !s32i), !cir.bool loc(#loc146)
            cir.if %32 {
              %33 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc148)
              %34 = cir.const #cir.int<1> : !s32i loc(#loc149)
              %35 = cir.unary(minus, %34) : !s32i, !s32i loc(#loc150)
              cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc148)
            } loc(#loc215)
          } loc(#loc213)
          %19 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc151)
          %20 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
          %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc153)
          %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc153)
          %23 = cir.call @strcpy(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc151)
          %24 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
          cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc155)
          %25 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc156)
          %26 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
          %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc157)
          cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc156)
        } else {
          %13 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc107)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc107)
          cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc158)
        } loc(#loc208)
      } loc(#loc204)
    } loc(#loc202)
    cir.return loc(#loc109)
  } loc(#loc198)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":46:30)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("/usr/include/stdlib.h":687:1)
#loc11 = loc("/usr/include/stdlib.h":687:32)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":52:23)
#loc13 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":30:1)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":55:1)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":33:5)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":33:34)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":35:5)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":35:28)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":31:1)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":35:21)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":35:20)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":36:5)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":54:5)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":37:9)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":37:16)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":41:9)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":53:9)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":41:13)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":41:20)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":41:39)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":41:18)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":42:9)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":49:9)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":51:9)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":43:32)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":43:39)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":43:44)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":43:55)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":43:56)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":43:13)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":44:13)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":44:45)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":44:17)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":44:29)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":44:26)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":44:35)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":44:36)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":44:42)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":44:41)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":46:13)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":46:20)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":47:23)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":47:13)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":48:13)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":48:18)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":52:13)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":62:1)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":87:1)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":65:5)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":65:34)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":67:5)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":67:28)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":63:1)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":67:21)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":67:20)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":68:5)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":86:5)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":69:9)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":69:16)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":73:9)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":85:9)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":73:13)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":73:20)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":73:39)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":73:18)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":74:9)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":81:9)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":83:9)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":75:32)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":75:39)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":75:44)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":75:55)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":75:56)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":75:13)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":76:13)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":76:45)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":76:17)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":76:29)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":76:26)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":76:35)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":76:36)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":76:42)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":76:41)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":78:13)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":78:20)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":78:30)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":79:23)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":79:13)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":80:13)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":80:18)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":84:23)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":84:13)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":112:23)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":90:1)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":115:1)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":93:5)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":93:34)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":95:5)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":95:28)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":91:1)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":95:21)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":95:20)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":96:5)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":114:5)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":97:9)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":97:16)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":101:9)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":113:9)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":101:13)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":101:20)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":101:39)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":101:18)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":101:41)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":101:44)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":101:51)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":101:49)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":102:9)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":109:9)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":111:9)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":103:32)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":103:39)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":103:44)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":103:55)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":103:56)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":103:13)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":104:13)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":104:45)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":104:17)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":104:29)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":104:26)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":104:35)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":104:36)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":104:42)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":104:41)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":106:13)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":106:20)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":106:30)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":107:23)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":107:13)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":108:13)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":108:18)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_fgets_64b.c":112:13)
#loc159 = loc(fused[#loc1, #loc2])
#loc160 = loc(fused[#loc3, #loc4])
#loc161 = loc(fused[#loc5, #loc6])
#loc162 = loc(fused[#loc8, #loc9])
#loc163 = loc(fused[#loc10, #loc11])
#loc164 = loc(fused[#loc13, #loc14])
#loc166 = loc(fused[#loc17, #loc18])
#loc167 = loc(fused[#loc19, #loc20])
#loc168 = loc(fused[#loc24, #loc25])
#loc169 = loc(fused[#loc26, #loc27])
#loc170 = loc(fused[#loc28, #loc29])
#loc171 = loc(fused[#loc31, #loc32])
#loc172 = loc(fused[#loc30, #loc32])
#loc173 = loc(fused[#loc34, #loc35, #loc36, #loc29])
#loc174 = loc(fused[#loc39, #loc40])
#loc175 = loc(fused[#loc38, #loc40])
#loc176 = loc(fused[#loc37, #loc41])
#loc177 = loc(fused[#loc42, #loc41])
#loc178 = loc(fused[#loc43, #loc44])
#loc179 = loc(fused[#loc45, #loc46])
#loc180 = loc(fused[#loc48, #loc44])
#loc181 = loc(fused[#loc59, #loc60])
#loc183 = loc(fused[#loc63, #loc64])
#loc184 = loc(fused[#loc65, #loc66])
#loc185 = loc(fused[#loc70, #loc71])
#loc186 = loc(fused[#loc72, #loc73])
#loc187 = loc(fused[#loc74, #loc75])
#loc188 = loc(fused[#loc77, #loc78])
#loc189 = loc(fused[#loc76, #loc78])
#loc190 = loc(fused[#loc80, #loc81, #loc82, #loc75])
#loc191 = loc(fused[#loc85, #loc86])
#loc192 = loc(fused[#loc84, #loc86])
#loc193 = loc(fused[#loc83, #loc87])
#loc194 = loc(fused[#loc88, #loc87])
#loc195 = loc(fused[#loc89, #loc90])
#loc196 = loc(fused[#loc91, #loc92])
#loc197 = loc(fused[#loc94, #loc90])
#loc198 = loc(fused[#loc108, #loc109])
#loc200 = loc(fused[#loc112, #loc113])
#loc201 = loc(fused[#loc114, #loc115])
#loc202 = loc(fused[#loc119, #loc120])
#loc203 = loc(fused[#loc121, #loc122])
#loc204 = loc(fused[#loc123, #loc124])
#loc205 = loc(fused[#loc126, #loc127])
#loc206 = loc(fused[#loc125, #loc127])
#loc207 = loc(fused[#loc130, #loc131])
#loc208 = loc(fused[#loc133, #loc134, #loc135, #loc124])
#loc209 = loc(fused[#loc138, #loc139])
#loc210 = loc(fused[#loc137, #loc139])
#loc211 = loc(fused[#loc136, #loc140])
#loc212 = loc(fused[#loc141, #loc140])
#loc213 = loc(fused[#loc142, #loc143])
#loc214 = loc(fused[#loc144, #loc145])
#loc215 = loc(fused[#loc147, #loc143])
