!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":119:10)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":119:14)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":119:20)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":119:32)
#loc190 = loc(fused[#loc68, #loc69])
#loc191 = loc(fused[#loc70, #loc71])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B2.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc162)
  cir.global "private" constant cir_private @__const.goodG2B1.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc163)
  cir.global "private" constant cir_private @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc164)
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc165)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc166)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc167)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc168)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc169)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc170)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc172)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc23)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc173)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc165)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc27)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc27)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc29)
        %6 = cir.const #cir.int<10> : !s32i loc(#loc30)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc30)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc176)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc177)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc29)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc178)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc179)
        cir.scope {
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
          %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc38)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc38)
          %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc181)
          cir.if %15 {
            %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc40)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc41)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc42)
            cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc40)
          } loc(#loc182)
        } loc(#loc180)
      } loc(#loc175)
    } loc(#loc174)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc164)
      %3 = cir.get_global @__const.CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc164)
      cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc164)
      %4 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc45)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
      %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc47)
      %7 = cir.call @strcpy(%5, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc45)
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
      cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc49)
      %9 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc50)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc51)
      cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc50)
    } loc(#loc183)
    cir.return loc(#loc20)
  } loc(#loc171)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc185)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc186)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc56)
    cir.return loc(#loc53)
  } loc(#loc184)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc187)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc188)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc62)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc63)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc65)
  cir.func @main(%arg0: !s32i loc(fused[#loc68, #loc69]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc70, #loc71])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc190)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc191)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc67)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc72)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc72)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc73)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc74)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc74)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc75)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc62)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05_good : !cir.ptr<!cir.func<!void ()>> loc(#loc192)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05_good() : () -> () loc(#loc77)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc63)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc64)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc193)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05_bad() : () -> () loc(#loc81)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc65)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc84)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc194)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc194)
    cir.return %17 : !s32i loc(#loc194)
  } loc(#loc189)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc195)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc88)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc197)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc93)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc198)
    cir.scope {
      %2 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc195)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc97)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc97)
      cir.if %4 {
        %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc88)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc88)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc101)
      } else {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc102)
        %6 = cir.const #cir.int<10> : !s32i loc(#loc103)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc104)
        %8 = cir.binop(add, %6, %7) nsw : !s32i loc(#loc103)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc103)
        %10 = cir.const #cir.int<1> : !u64i loc(#loc201)
        %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc202)
        %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc102)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc203)
        cir.store %13, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc204)
        cir.scope {
          %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
          %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc113)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc113)
          %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc206)
          cir.if %17 {
            %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc115)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc116)
            %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc117)
            cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc115)
          } loc(#loc207)
        } loc(#loc205)
      } loc(#loc200)
    } loc(#loc199)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc163)
      %3 = cir.get_global @__const.goodG2B1.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc163)
      cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc163)
      %4 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc120)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
      %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc122)
      %7 = cir.call @strcpy(%5, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc120)
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
      cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc124)
      %9 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc125)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc126)
      cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc125)
    } loc(#loc208)
    cir.return loc(#loc90)
  } loc(#loc196)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc210)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc131)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc211)
    cir.scope {
      %2 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc165)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc135)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc135)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc137)
        %6 = cir.const #cir.int<10> : !s32i loc(#loc138)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc139)
        %8 = cir.binop(add, %6, %7) nsw : !s32i loc(#loc138)
        %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc138)
        %10 = cir.const #cir.int<1> : !u64i loc(#loc214)
        %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc215)
        %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc137)
        %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc216)
        cir.store %13, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc217)
        cir.scope {
          %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
          %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc148)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc148)
          %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s8i>, !cir.bool loc(#loc219)
          cir.if %17 {
            %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc150)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc151)
            %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc152)
            cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc150)
          } loc(#loc220)
        } loc(#loc218)
      } loc(#loc213)
    } loc(#loc212)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc162)
      %3 = cir.get_global @__const.goodG2B2.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc162)
      cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc162)
      %4 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc155)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
      %6 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc157)
      %7 = cir.call @strcpy(%5, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc155)
      %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
      cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc159)
      %9 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc160)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc161)
      cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc160)
    } loc(#loc221)
    cir.return loc(#loc128)
  } loc(#loc209)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":95:9)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":95:29)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":75:9)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":75:29)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":46:9)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":46:29)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":30:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":30:25)
#loc9 = loc("/usr/include/stdlib.h":672:1)
#loc10 = loc("/usr/include/stdlib.h":672:45)
#loc11 = loc("/usr/include/stdlib.h":756:1)
#loc12 = loc("/usr/include/stdlib.h":756:70)
#loc13 = loc("/usr/include/string.h":141:1)
#loc14 = loc("/usr/include/string.h":142:14)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc17 = loc("/usr/include/stdlib.h":687:1)
#loc18 = loc("/usr/include/stdlib.h":687:32)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":35:1)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":52:1)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":37:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":37:12)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":38:12)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":38:5)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":39:5)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":44:5)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":39:8)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":40:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":42:24)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":42:31)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":42:34)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":42:45)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":42:46)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":42:9)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":43:9)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":43:37)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":43:13)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":43:21)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":43:27)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":43:28)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":43:34)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":43:33)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":45:5)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":51:5)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":48:9)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":48:16)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":48:22)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":49:19)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":49:9)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":50:9)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":50:14)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":103:1)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":107:1)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":105:5)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":105:14)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":106:5)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":106:14)
#loc58 = loc("/usr/include/stdlib.h":575:1)
#loc59 = loc("/usr/include/stdlib.h":575:41)
#loc60 = loc("/usr/include/time.h":76:1)
#loc61 = loc("/usr/include/time.h":76:38)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":124:15)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":126:15)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":129:15)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":131:15)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":119:1)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":134:1)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":120:1)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":122:27)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":122:22)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":122:5)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":124:5)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":125:5)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":125:66)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":126:5)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":129:5)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":130:5)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":130:65)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":131:5)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":133:12)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":133:5)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":31:1)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":31:26)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":66:19)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":59:1)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":81:1)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":61:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":61:12)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":62:12)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":62:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":63:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":73:5)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":63:8)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":64:5)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":67:5)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":69:5)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":66:9)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":71:24)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":71:32)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":71:35)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":71:38)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":71:49)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":71:31)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":71:50)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":71:9)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":72:9)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":72:37)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":72:13)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":72:21)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":72:27)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":72:28)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":72:34)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":72:33)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":74:5)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":80:5)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":77:9)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":77:16)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":77:22)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":78:19)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":78:9)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":79:9)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":79:14)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":84:1)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":101:1)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":86:5)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":86:12)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":87:12)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":87:5)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":88:5)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":93:5)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":88:8)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":89:5)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":91:24)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":91:32)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":91:35)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":91:38)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":91:49)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":91:31)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":91:50)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":91:9)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":92:9)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":92:37)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":92:13)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":92:21)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":92:27)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":92:28)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":92:34)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":92:33)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":94:5)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":100:5)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":97:9)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":97:16)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":97:22)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":98:19)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":98:9)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":99:9)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE193_char_cpy_05.c":99:14)
#loc162 = loc(fused[#loc1, #loc2])
#loc163 = loc(fused[#loc3, #loc4])
#loc164 = loc(fused[#loc5, #loc6])
#loc165 = loc(fused[#loc7, #loc8])
#loc166 = loc(fused[#loc9, #loc10])
#loc167 = loc(fused[#loc11, #loc12])
#loc168 = loc(fused[#loc13, #loc14])
#loc169 = loc(fused[#loc15, #loc16])
#loc170 = loc(fused[#loc17, #loc18])
#loc171 = loc(fused[#loc19, #loc20])
#loc172 = loc(fused[#loc21, #loc22])
#loc173 = loc(fused[#loc24, #loc23])
#loc174 = loc(fused[#loc25, #loc26])
#loc175 = loc(fused[#loc28, #loc26])
#loc176 = loc(fused[#loc31, #loc32])
#loc177 = loc(fused[#loc30, #loc32])
#loc178 = loc(fused[#loc29, #loc33])
#loc179 = loc(fused[#loc34, #loc33])
#loc180 = loc(fused[#loc35, #loc36])
#loc181 = loc(fused[#loc37, #loc38])
#loc182 = loc(fused[#loc39, #loc36])
#loc183 = loc(fused[#loc43, #loc44])
#loc184 = loc(fused[#loc52, #loc53])
#loc185 = loc(fused[#loc54, #loc55])
#loc186 = loc(fused[#loc56, #loc57])
#loc187 = loc(fused[#loc58, #loc59])
#loc188 = loc(fused[#loc60, #loc61])
#loc189 = loc(fused[#loc66, #loc67])
#loc192 = loc(fused[#loc77, #loc78])
#loc193 = loc(fused[#loc81, #loc82])
#loc194 = loc(fused[#loc85, #loc84])
#loc195 = loc(fused[#loc86, #loc87])
#loc196 = loc(fused[#loc89, #loc90])
#loc197 = loc(fused[#loc91, #loc92])
#loc198 = loc(fused[#loc94, #loc93])
#loc199 = loc(fused[#loc95, #loc96])
#loc200 = loc(fused[#loc98, #loc99, #loc100, #loc96])
#loc201 = loc(fused[#loc105, #loc106])
#loc202 = loc(fused[#loc107, #loc106])
#loc203 = loc(fused[#loc102, #loc108])
#loc204 = loc(fused[#loc109, #loc108])
#loc205 = loc(fused[#loc110, #loc111])
#loc206 = loc(fused[#loc112, #loc113])
#loc207 = loc(fused[#loc114, #loc111])
#loc208 = loc(fused[#loc118, #loc119])
#loc209 = loc(fused[#loc127, #loc128])
#loc210 = loc(fused[#loc129, #loc130])
#loc211 = loc(fused[#loc132, #loc131])
#loc212 = loc(fused[#loc133, #loc134])
#loc213 = loc(fused[#loc136, #loc134])
#loc214 = loc(fused[#loc140, #loc141])
#loc215 = loc(fused[#loc142, #loc141])
#loc216 = loc(fused[#loc137, #loc143])
#loc217 = loc(fused[#loc144, #loc143])
#loc218 = loc(fused[#loc145, #loc146])
#loc219 = loc(fused[#loc147, #loc148])
#loc220 = loc(fused[#loc149, #loc146])
#loc221 = loc(fused[#loc153, #loc154])
