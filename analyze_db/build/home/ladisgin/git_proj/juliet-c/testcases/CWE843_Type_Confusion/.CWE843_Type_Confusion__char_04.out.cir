!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc41 = loc("CWE843_Type_Confusion__char_04.c":106:10)
#loc42 = loc("CWE843_Type_Confusion__char_04.c":106:14)
#loc43 = loc("CWE843_Type_Confusion__char_04.c":106:20)
#loc44 = loc("CWE843_Type_Confusion__char_04.c":106:32)
#loc120 = loc(fused[#loc41, #loc42])
#loc121 = loc(fused[#loc43, #loc44])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__char_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printIntLine(!s32i) loc(#loc103)
  cir.func no_proto @CWE843_Type_Confusion__char_04_bad() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["charBuffer", init] {alignment = 1 : i64} loc(#loc105)
    %1 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc106)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc9)
    cir.store %2, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc107)
    cir.br ^bb1 loc(#loc108)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<1> : !s32i loc(#loc13)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc13)
    cir.brcond %4 ^bb2, ^bb5 loc(#loc109)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc110)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.int<97> : !s32i loc(#loc6)
    %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc6)
    cir.store %6, %0 : !s8i, !cir.ptr<!s8i> loc(#loc105)
    %7 = cir.cast(bitcast, %0 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc111)
    cir.store %7, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc112)
    cir.br ^bb4 loc(#loc16)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc12)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc12)
  ^bb6:  // pred: ^bb5
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc20)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc20)
    %10 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc22)
    cir.return loc(#loc4)
  } loc(#loc104)
  cir.func no_proto @CWE843_Type_Confusion__char_04_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc114)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc25)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc115)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc27)
    cir.return loc(#loc24)
  } loc(#loc113)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc116)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc117)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc118)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc35)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc36)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc37)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc38)
  cir.func @main(%arg0: !s32i loc(fused[#loc41, #loc42]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc43, #loc44])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc120)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc121)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc40)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc45)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc45)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc46)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc47)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc47)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc48)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc35)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc35)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    %8 = cir.get_global @CWE843_Type_Confusion__char_04_good : !cir.ptr<!cir.func<!void ()>> loc(#loc122)
    cir.call @CWE843_Type_Confusion__char_04_good() : () -> () loc(#loc50)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc36)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc37)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    %13 = cir.get_global @CWE843_Type_Confusion__char_04_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc123)
    cir.call @CWE843_Type_Confusion__char_04_bad() : () -> () loc(#loc54)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc38)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc57)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc124)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    cir.return %17 : !s32i loc(#loc124)
  } loc(#loc119)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc59)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intBuffer", init] {alignment = 4 : i64} loc(#loc126)
    %1 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc127)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc66)
    cir.store %2, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc128)
    cir.br ^bb1 loc(#loc129)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc70)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc130)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc59)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    cir.br ^bb6 loc(#loc72)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc131)
  ^bb4:  // pred: ^bb3
    %7 = cir.const #cir.int<8> : !s32i loc(#loc63)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc126)
    %8 = cir.cast(bitcast, %0 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc132)
    cir.store %8, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc133)
    cir.br ^bb5 loc(#loc76)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc69)
  ^bb6:  // 2 preds: ^bb2, ^bb5
    cir.br ^bb7 loc(#loc69)
  ^bb7:  // pred: ^bb6
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc80)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc80)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc82)
    cir.return loc(#loc61)
  } loc(#loc125)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intBuffer", init] {alignment = 4 : i64} loc(#loc135)
    %1 = cir.alloca !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>>, ["data"] {alignment = 8 : i64} loc(#loc136)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc89)
    cir.store %2, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc137)
    cir.br ^bb1 loc(#loc138)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc93)
    cir.brcond %4 ^bb2, ^bb5 loc(#loc139)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc140)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.int<8> : !s32i loc(#loc86)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc135)
    %6 = cir.cast(bitcast, %0 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc141)
    cir.store %6, %1 : !cir.ptr<!void>, !cir.ptr<!cir.ptr<!void>> loc(#loc142)
    cir.br ^bb4 loc(#loc96)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc92)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc92)
  ^bb6:  // pred: ^bb5
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!void>>, !cir.ptr<!void> loc(#loc100)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc100)
    %9 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    cir.call @printIntLine(%9) : (!s32i) -> () loc(#loc102)
    cir.return loc(#loc84)
  } loc(#loc134)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE843_Type_Confusion/CWE843_Type_Confusion__char_04.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE843_Type_Confusion__char_04.c":28:1)
#loc4 = loc("CWE843_Type_Confusion__char_04.c":43:1)
#loc5 = loc("CWE843_Type_Confusion__char_04.c":37:13)
#loc6 = loc("CWE843_Type_Confusion__char_04.c":37:31)
#loc7 = loc("CWE843_Type_Confusion__char_04.c":30:5)
#loc8 = loc("CWE843_Type_Confusion__char_04.c":30:12)
#loc9 = loc("CWE843_Type_Confusion__char_04.c":32:12)
#loc10 = loc("CWE843_Type_Confusion__char_04.c":32:5)
#loc11 = loc("CWE843_Type_Confusion__char_04.c":33:5)
#loc12 = loc("CWE843_Type_Confusion__char_04.c":40:5)
#loc13 = loc("CWE843_Type_Confusion__char_04.c":33:8)
#loc14 = loc("CWE843_Type_Confusion__char_04.c":34:5)
#loc15 = loc("CWE843_Type_Confusion__char_04.c":35:9)
#loc16 = loc("CWE843_Type_Confusion__char_04.c":39:9)
#loc17 = loc("CWE843_Type_Confusion__char_04.c":38:20)
#loc18 = loc("CWE843_Type_Confusion__char_04.c":38:21)
#loc19 = loc("CWE843_Type_Confusion__char_04.c":38:13)
#loc20 = loc("CWE843_Type_Confusion__char_04.c":42:26)
#loc21 = loc("CWE843_Type_Confusion__char_04.c":42:18)
#loc22 = loc("CWE843_Type_Confusion__char_04.c":42:5)
#loc23 = loc("CWE843_Type_Confusion__char_04.c":90:1)
#loc24 = loc("CWE843_Type_Confusion__char_04.c":94:1)
#loc25 = loc("CWE843_Type_Confusion__char_04.c":92:5)
#loc26 = loc("CWE843_Type_Confusion__char_04.c":92:14)
#loc27 = loc("CWE843_Type_Confusion__char_04.c":93:5)
#loc28 = loc("CWE843_Type_Confusion__char_04.c":93:14)
#loc29 = loc("/usr/include/stdlib.h":575:1)
#loc30 = loc("/usr/include/stdlib.h":575:41)
#loc31 = loc("/usr/include/time.h":76:1)
#loc32 = loc("/usr/include/time.h":76:38)
#loc33 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc34 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc35 = loc("CWE843_Type_Confusion__char_04.c":111:15)
#loc36 = loc("CWE843_Type_Confusion__char_04.c":113:15)
#loc37 = loc("CWE843_Type_Confusion__char_04.c":116:15)
#loc38 = loc("CWE843_Type_Confusion__char_04.c":118:15)
#loc39 = loc("CWE843_Type_Confusion__char_04.c":106:1)
#loc40 = loc("CWE843_Type_Confusion__char_04.c":121:1)
#loc45 = loc("CWE843_Type_Confusion__char_04.c":107:1)
#loc46 = loc("CWE843_Type_Confusion__char_04.c":109:27)
#loc47 = loc("CWE843_Type_Confusion__char_04.c":109:22)
#loc48 = loc("CWE843_Type_Confusion__char_04.c":109:5)
#loc49 = loc("CWE843_Type_Confusion__char_04.c":111:5)
#loc50 = loc("CWE843_Type_Confusion__char_04.c":112:5)
#loc51 = loc("CWE843_Type_Confusion__char_04.c":112:41)
#loc52 = loc("CWE843_Type_Confusion__char_04.c":113:5)
#loc53 = loc("CWE843_Type_Confusion__char_04.c":116:5)
#loc54 = loc("CWE843_Type_Confusion__char_04.c":117:5)
#loc55 = loc("CWE843_Type_Confusion__char_04.c":117:40)
#loc56 = loc("CWE843_Type_Confusion__char_04.c":118:5)
#loc57 = loc("CWE843_Type_Confusion__char_04.c":120:12)
#loc58 = loc("CWE843_Type_Confusion__char_04.c":120:5)
#loc59 = loc("CWE843_Type_Confusion__char_04.c":58:19)
#loc60 = loc("CWE843_Type_Confusion__char_04.c":50:1)
#loc61 = loc("CWE843_Type_Confusion__char_04.c":70:1)
#loc62 = loc("CWE843_Type_Confusion__char_04.c":64:13)
#loc63 = loc("CWE843_Type_Confusion__char_04.c":64:29)
#loc64 = loc("CWE843_Type_Confusion__char_04.c":52:5)
#loc65 = loc("CWE843_Type_Confusion__char_04.c":52:12)
#loc66 = loc("CWE843_Type_Confusion__char_04.c":54:12)
#loc67 = loc("CWE843_Type_Confusion__char_04.c":54:5)
#loc68 = loc("CWE843_Type_Confusion__char_04.c":55:5)
#loc69 = loc("CWE843_Type_Confusion__char_04.c":67:5)
#loc70 = loc("CWE843_Type_Confusion__char_04.c":55:8)
#loc71 = loc("CWE843_Type_Confusion__char_04.c":56:5)
#loc72 = loc("CWE843_Type_Confusion__char_04.c":59:5)
#loc73 = loc("CWE843_Type_Confusion__char_04.c":61:5)
#loc74 = loc("CWE843_Type_Confusion__char_04.c":58:9)
#loc75 = loc("CWE843_Type_Confusion__char_04.c":62:9)
#loc76 = loc("CWE843_Type_Confusion__char_04.c":66:9)
#loc77 = loc("CWE843_Type_Confusion__char_04.c":65:20)
#loc78 = loc("CWE843_Type_Confusion__char_04.c":65:21)
#loc79 = loc("CWE843_Type_Confusion__char_04.c":65:13)
#loc80 = loc("CWE843_Type_Confusion__char_04.c":69:26)
#loc81 = loc("CWE843_Type_Confusion__char_04.c":69:18)
#loc82 = loc("CWE843_Type_Confusion__char_04.c":69:5)
#loc83 = loc("CWE843_Type_Confusion__char_04.c":73:1)
#loc84 = loc("CWE843_Type_Confusion__char_04.c":88:1)
#loc85 = loc("CWE843_Type_Confusion__char_04.c":82:13)
#loc86 = loc("CWE843_Type_Confusion__char_04.c":82:29)
#loc87 = loc("CWE843_Type_Confusion__char_04.c":75:5)
#loc88 = loc("CWE843_Type_Confusion__char_04.c":75:12)
#loc89 = loc("CWE843_Type_Confusion__char_04.c":77:12)
#loc90 = loc("CWE843_Type_Confusion__char_04.c":77:5)
#loc91 = loc("CWE843_Type_Confusion__char_04.c":78:5)
#loc92 = loc("CWE843_Type_Confusion__char_04.c":85:5)
#loc93 = loc("CWE843_Type_Confusion__char_04.c":78:8)
#loc94 = loc("CWE843_Type_Confusion__char_04.c":79:5)
#loc95 = loc("CWE843_Type_Confusion__char_04.c":80:9)
#loc96 = loc("CWE843_Type_Confusion__char_04.c":84:9)
#loc97 = loc("CWE843_Type_Confusion__char_04.c":83:20)
#loc98 = loc("CWE843_Type_Confusion__char_04.c":83:21)
#loc99 = loc("CWE843_Type_Confusion__char_04.c":83:13)
#loc100 = loc("CWE843_Type_Confusion__char_04.c":87:26)
#loc101 = loc("CWE843_Type_Confusion__char_04.c":87:18)
#loc102 = loc("CWE843_Type_Confusion__char_04.c":87:5)
#loc103 = loc(fused[#loc1, #loc2])
#loc104 = loc(fused[#loc3, #loc4])
#loc105 = loc(fused[#loc5, #loc6])
#loc106 = loc(fused[#loc7, #loc8])
#loc107 = loc(fused[#loc10, #loc9])
#loc108 = loc(fused[#loc11, #loc12])
#loc109 = loc(fused[#loc14, #loc12])
#loc110 = loc(fused[#loc15, #loc16])
#loc111 = loc(fused[#loc17, #loc18])
#loc112 = loc(fused[#loc19, #loc18])
#loc113 = loc(fused[#loc23, #loc24])
#loc114 = loc(fused[#loc25, #loc26])
#loc115 = loc(fused[#loc27, #loc28])
#loc116 = loc(fused[#loc29, #loc30])
#loc117 = loc(fused[#loc31, #loc32])
#loc118 = loc(fused[#loc33, #loc34])
#loc119 = loc(fused[#loc39, #loc40])
#loc122 = loc(fused[#loc50, #loc51])
#loc123 = loc(fused[#loc54, #loc55])
#loc124 = loc(fused[#loc58, #loc57])
#loc125 = loc(fused[#loc60, #loc61])
#loc126 = loc(fused[#loc62, #loc63])
#loc127 = loc(fused[#loc64, #loc65])
#loc128 = loc(fused[#loc67, #loc66])
#loc129 = loc(fused[#loc68, #loc69])
#loc130 = loc(fused[#loc71, #loc72, #loc73, #loc69])
#loc131 = loc(fused[#loc75, #loc76])
#loc132 = loc(fused[#loc77, #loc78])
#loc133 = loc(fused[#loc79, #loc78])
#loc134 = loc(fused[#loc83, #loc84])
#loc135 = loc(fused[#loc85, #loc86])
#loc136 = loc(fused[#loc87, #loc88])
#loc137 = loc(fused[#loc90, #loc89])
#loc138 = loc(fused[#loc91, #loc92])
#loc139 = loc(fused[#loc94, #loc92])
#loc140 = loc(fused[#loc95, #loc96])
#loc141 = loc(fused[#loc97, #loc98])
#loc142 = loc(fused[#loc99, #loc98])
