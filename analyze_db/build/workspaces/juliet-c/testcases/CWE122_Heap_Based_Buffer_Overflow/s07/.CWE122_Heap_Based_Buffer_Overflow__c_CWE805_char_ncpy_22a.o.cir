!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.global external dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22_badGlobal = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc145)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22_badSource(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc146)
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc147)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc148)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc149)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc151)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc15)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %3 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22_badGlobal : !cir.ptr<!s32i> loc(#loc145)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc153)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
    %5 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22_badSource(%4) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc20)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc154)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc156)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc27)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc27)
      %9 = cir.const #cir.int<67> : !s32i loc(#loc28)
      %10 = cir.const #cir.int<100> : !s32i loc(#loc29)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc30)
      %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc29)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc29)
      cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc157)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc33)
      %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc33)
      %16 = cir.const #cir.int<100> : !s32i loc(#loc34)
      %17 = cir.const #cir.int<1> : !s32i loc(#loc35)
      %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc34)
      %19 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
      %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc36)
      cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc158)
      %21 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc37)
      %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
      %23 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc39)
      %24 = cir.const #cir.int<100> : !s32i loc(#loc40)
      %25 = cir.const #cir.int<1> : !s32i loc(#loc41)
      %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc40)
      %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc40)
      %28 = cir.call @strncpy(%22, %23, %27) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc37)
      %29 = cir.const #cir.int<0> : !s32i loc(#loc42)
      %30 = cir.cast(integral, %29 : !s32i), !s8i loc(#loc42)
      %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
      %32 = cir.const #cir.int<100> : !s32i loc(#loc44)
      %33 = cir.const #cir.int<1> : !s32i loc(#loc45)
      %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc44)
      %35 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %34 : !s32i), !cir.ptr<!s8i> loc(#loc46)
      cir.store %30, %35 : !s8i, !cir.ptr<!s8i> loc(#loc159)
      %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
      cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc48)
      %37 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc49)
      %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
      %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc50)
      cir.call @free(%39) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc49)
    } loc(#loc155)
    cir.return loc(#loc12)
  } loc(#loc150)
  cir.global external dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22_goodG2B1Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc160)
  cir.global external dsolocal @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22_goodG2B2Global = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc161)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc163)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc57)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc164)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc59)
    cir.return loc(#loc56)
  } loc(#loc162)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22_goodG2B1Source(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc165)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc167)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc67)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc168)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc69)
    %3 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22_goodG2B1Global : !cir.ptr<!s32i> loc(#loc160)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
    %5 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22_goodG2B1Source(%4) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc72)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc170)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc172)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc79)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc79)
      %9 = cir.const #cir.int<67> : !s32i loc(#loc80)
      %10 = cir.const #cir.int<100> : !s32i loc(#loc81)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc82)
      %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc81)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc81)
      cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc173)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc85)
      %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc85)
      %16 = cir.const #cir.int<100> : !s32i loc(#loc86)
      %17 = cir.const #cir.int<1> : !s32i loc(#loc87)
      %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc86)
      %19 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc88)
      %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc88)
      cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc174)
      %21 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc89)
      %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
      %23 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc91)
      %24 = cir.const #cir.int<100> : !s32i loc(#loc92)
      %25 = cir.const #cir.int<1> : !s32i loc(#loc93)
      %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc92)
      %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc92)
      %28 = cir.call @strncpy(%22, %23, %27) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc89)
      %29 = cir.const #cir.int<0> : !s32i loc(#loc94)
      %30 = cir.cast(integral, %29 : !s32i), !s8i loc(#loc94)
      %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
      %32 = cir.const #cir.int<100> : !s32i loc(#loc96)
      %33 = cir.const #cir.int<1> : !s32i loc(#loc97)
      %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc96)
      %35 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %34 : !s32i), !cir.ptr<!s8i> loc(#loc98)
      cir.store %30, %35 : !s8i, !cir.ptr<!s8i> loc(#loc175)
      %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
      cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc100)
      %37 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc101)
      %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
      %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc102)
      cir.call @free(%39) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc101)
    } loc(#loc171)
    cir.return loc(#loc64)
  } loc(#loc166)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22_goodG2B2Source(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc176)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc178)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc109)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc179)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %3 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22_goodG2B2Global : !cir.ptr<!s32i> loc(#loc161)
    cir.store %2, %3 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
    %5 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22_goodG2B2Source(%4) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc114)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc181)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc183)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc121)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc121)
      %9 = cir.const #cir.int<67> : !s32i loc(#loc122)
      %10 = cir.const #cir.int<100> : !s32i loc(#loc123)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc124)
      %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc123)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc123)
      cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc184)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc127)
      %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc127)
      %16 = cir.const #cir.int<100> : !s32i loc(#loc128)
      %17 = cir.const #cir.int<1> : !s32i loc(#loc129)
      %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc128)
      %19 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc130)
      %20 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %18 : !s32i), !cir.ptr<!s8i> loc(#loc130)
      cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc185)
      %21 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc131)
      %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
      %23 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc133)
      %24 = cir.const #cir.int<100> : !s32i loc(#loc134)
      %25 = cir.const #cir.int<1> : !s32i loc(#loc135)
      %26 = cir.binop(sub, %24, %25) nsw : !s32i loc(#loc134)
      %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc134)
      %28 = cir.call @strncpy(%22, %23, %27) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc131)
      %29 = cir.const #cir.int<0> : !s32i loc(#loc136)
      %30 = cir.cast(integral, %29 : !s32i), !s8i loc(#loc136)
      %31 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
      %32 = cir.const #cir.int<100> : !s32i loc(#loc138)
      %33 = cir.const #cir.int<1> : !s32i loc(#loc139)
      %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc138)
      %35 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %34 : !s32i), !cir.ptr<!s8i> loc(#loc140)
      cir.store %30, %35 : !s8i, !cir.ptr<!s8i> loc(#loc186)
      %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
      cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc142)
      %37 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc143)
      %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
      %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc144)
      cir.call @free(%39) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc143)
    } loc(#loc182)
    cir.return loc(#loc106)
  } loc(#loc177)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s07/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":24:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":24:74)
#loc3 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":26:1)
#loc4 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":26:86)
#loc5 = loc("/usr/include/string.h":144:1)
#loc6 = loc("/usr/include/string.h":146:14)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":28:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":44:1)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":30:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":30:12)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":31:12)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":31:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":32:74)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":32:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":33:79)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":33:12)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":33:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":33:83)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":34:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":43:5)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":35:9)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":35:24)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":36:16)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":36:24)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":36:29)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":36:33)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":36:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":36:34)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":37:25)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":37:16)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":37:20)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":37:9)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":39:9)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":39:17)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":39:23)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":39:31)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":39:35)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":40:23)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":40:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":40:14)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":40:18)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":40:19)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":41:19)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":41:9)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":42:9)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":42:14)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":51:1)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":51:79)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":52:1)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":52:79)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":96:1)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":100:1)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":98:5)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":98:14)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":99:5)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":99:14)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":55:1)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":55:91)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":57:1)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":73:1)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":59:5)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":59:12)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":60:12)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":60:5)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":61:79)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":61:5)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":62:84)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":62:12)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":62:5)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":62:88)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":63:5)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":72:5)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":64:9)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":64:24)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":65:16)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":65:24)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":65:29)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":65:33)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":65:9)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":65:34)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":66:25)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":66:16)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":66:20)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":66:9)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":68:9)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":68:17)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":68:23)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":68:31)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":68:35)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":69:23)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":69:9)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":69:14)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":69:18)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":69:19)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":70:19)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":70:9)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":71:9)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":71:14)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":76:1)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":76:91)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":78:1)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":94:1)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":80:5)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":80:12)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":81:12)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":81:5)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":82:79)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":82:5)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":83:84)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":83:12)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":83:5)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":83:88)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":84:5)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":93:5)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":85:9)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":85:24)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":86:16)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":86:24)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":86:29)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":86:33)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":86:9)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":86:34)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":87:25)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":87:16)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":87:20)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":87:9)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":89:9)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":89:17)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":89:23)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":89:31)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":89:35)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":90:23)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":90:9)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":90:14)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":90:18)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":90:19)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":91:19)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":91:9)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":92:9)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_ncpy_22a.c":92:14)
#loc145 = loc(fused[#loc1, #loc2])
#loc146 = loc(fused[#loc3, #loc4])
#loc147 = loc(fused[#loc5, #loc6])
#loc148 = loc(fused[#loc7, #loc8])
#loc149 = loc(fused[#loc9, #loc10])
#loc150 = loc(fused[#loc11, #loc12])
#loc151 = loc(fused[#loc13, #loc14])
#loc152 = loc(fused[#loc16, #loc15])
#loc153 = loc(fused[#loc18, #loc17])
#loc154 = loc(fused[#loc21, #loc22])
#loc155 = loc(fused[#loc23, #loc24])
#loc156 = loc(fused[#loc25, #loc26])
#loc157 = loc(fused[#loc31, #loc32])
#loc158 = loc(fused[#loc36, #loc33])
#loc159 = loc(fused[#loc43, #loc42])
#loc160 = loc(fused[#loc51, #loc52])
#loc161 = loc(fused[#loc53, #loc54])
#loc162 = loc(fused[#loc55, #loc56])
#loc163 = loc(fused[#loc57, #loc58])
#loc164 = loc(fused[#loc59, #loc60])
#loc165 = loc(fused[#loc61, #loc62])
#loc166 = loc(fused[#loc63, #loc64])
#loc167 = loc(fused[#loc65, #loc66])
#loc168 = loc(fused[#loc68, #loc67])
#loc169 = loc(fused[#loc70, #loc69])
#loc170 = loc(fused[#loc73, #loc74])
#loc171 = loc(fused[#loc75, #loc76])
#loc172 = loc(fused[#loc77, #loc78])
#loc173 = loc(fused[#loc83, #loc84])
#loc174 = loc(fused[#loc88, #loc85])
#loc175 = loc(fused[#loc95, #loc94])
#loc176 = loc(fused[#loc103, #loc104])
#loc177 = loc(fused[#loc105, #loc106])
#loc178 = loc(fused[#loc107, #loc108])
#loc179 = loc(fused[#loc110, #loc109])
#loc180 = loc(fused[#loc112, #loc111])
#loc181 = loc(fused[#loc115, #loc116])
#loc182 = loc(fused[#loc117, #loc118])
#loc183 = loc(fused[#loc119, #loc120])
#loc184 = loc(fused[#loc125, #loc126])
#loc185 = loc(fused[#loc130, #loc127])
#loc186 = loc(fused[#loc137, #loc136])
