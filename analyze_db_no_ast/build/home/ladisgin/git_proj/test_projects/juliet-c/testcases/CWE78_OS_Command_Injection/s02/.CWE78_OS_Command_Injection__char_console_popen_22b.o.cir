!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc14 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":33:68)
#loc15 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":33:75)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":75:73)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":75:80)
#loc103 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":91:73)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":91:80)
#true = #cir.bool<true> : !cir.bool
#loc121 = loc(fused[#loc14, #loc15])
#loc147 = loc(fused[#loc85, #loc86])
#loc153 = loc(fused[#loc103, #loc104])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_22b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  external @CWE78_OS_Command_Injection__char_console_popen_22_badGlobal : !s32i {alignment = 4 : i64} loc(#loc115)
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc116)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc117)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc118)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc119)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc11)
  cir.func  @CWE78_OS_Command_Injection__char_console_popen_22_badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc14, #loc15])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc121)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc13)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc16)
    cir.scope {
      %4 = cir.get_global @CWE78_OS_Command_Injection__char_console_popen_22_badGlobal : !cir.ptr<!s32i> loc(#loc115)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc19)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc19)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc125)
          %8 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc25)
          %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
          %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc25)
          cir.store %10, %7 : !u64i, !cir.ptr<!u64i> loc(#loc125)
          cir.scope {
            %11 = cir.const #cir.int<100> : !s32i loc(#loc29)
            %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc29)
            %13 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc30)
            %14 = cir.binop(sub, %12, %13) : !u64i loc(#loc127)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc31)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc31)
            %17 = cir.cmp(gt, %14, %16) : !u64i, !s32i loc(#loc128)
            %18 = cir.cast(int_to_bool, %17 : !s32i), !cir.bool loc(#loc32)
            cir.if %18 {
              cir.scope {
                %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
                %20 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc37)
                %21 = cir.ptr_stride(%19 : !cir.ptr<!s8i>, %20 : !u64i), !cir.ptr<!s8i> loc(#loc38)
                %22 = cir.const #cir.int<100> : !s32i loc(#loc39)
                %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc39)
                %24 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc40)
                %25 = cir.binop(sub, %23, %24) : !u64i loc(#loc131)
                %26 = cir.cast(integral, %25 : !u64i), !s32i loc(#loc131)
                %27 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc118)
                %28 = cir.load %27 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc41)
                %29 = cir.call @fgets(%21, %26, %28) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc42)
                %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc43)
                %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc43)
                %32 = cir.cmp(ne, %29, %31) : !cir.ptr<!s8i>, !s32i loc(#loc132)
                %33 = cir.cast(int_to_bool, %32 : !s32i), !cir.bool loc(#loc44)
                cir.if %33 {
                  %34 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc48)
                  %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
                  %36 = cir.call @strlen(%35) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc48)
                  cir.store %36, %7 : !u64i, !cir.ptr<!u64i> loc(#loc134)
                  cir.scope {
                    %37 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc54)
                    %38 = cir.const #cir.int<0> : !s32i loc(#loc55)
                    %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc55)
                    %40 = cir.cmp(gt, %37, %39) : !u64i, !s32i loc(#loc136)
                    %41 = cir.cast(int_to_bool, %40 : !s32i), !cir.bool loc(#loc56)
                    %42 = cir.ternary(%41, true {
                      %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
                      %44 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc59)
                      %45 = cir.const #cir.int<1> : !s32i loc(#loc60)
                      %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc60)
                      %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc137)
                      %48 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %47 : !u64i), !cir.ptr<!s8i> loc(#loc61)
                      %49 = cir.load %48 : !cir.ptr<!s8i>, !s8i loc(#loc58)
                      %50 = cir.cast(integral, %49 : !s8i), !s32i loc(#loc58)
                      %51 = cir.const #cir.int<10> : !s32i loc(#loc62)
                      %52 = cir.cmp(eq, %50, %51) : !s32i, !s32i loc(#loc138)
                      %53 = cir.cast(int_to_bool, %52 : !s32i), !cir.bool loc(#loc63)
                      %54 = cir.ternary(%53, true {
                        %55 = cir.const #true loc(#loc57)
                        cir.yield %55 : !cir.bool loc(#loc57)
                      }, false {
                        %55 = cir.const #false loc(#loc57)
                        cir.yield %55 : !cir.bool loc(#loc57)
                      }) : (!cir.bool) -> !cir.bool loc(#loc57)
                      cir.yield %54 : !cir.bool loc(#loc57)
                    }, false {
                      %43 = cir.const #false loc(#loc57)
                      cir.yield %43 : !cir.bool loc(#loc57)
                    }) : (!cir.bool) -> !cir.bool loc(#loc57)
                    cir.if %42 {
                      %43 = cir.const #cir.int<0> : !s32i loc(#loc65)
                      %44 = cir.cast(integral, %43 : !s32i), !s8i loc(#loc65)
                      %45 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
                      %46 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc67)
                      %47 = cir.const #cir.int<1> : !s32i loc(#loc68)
                      %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc68)
                      %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc140)
                      %50 = cir.ptr_stride(%45 : !cir.ptr<!s8i>, %49 : !u64i), !cir.ptr<!s8i> loc(#loc69)
                      cir.store %44, %50 : !s8i, !cir.ptr<!s8i> loc(#loc141)
                    } loc(#loc139)
                  } loc(#loc135)
                } else {
                  %34 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc11)
                  %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc11)
                  cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc70)
                  %36 = cir.const #cir.int<0> : !s32i loc(#loc71)
                  %37 = cir.cast(integral, %36 : !s32i), !s8i loc(#loc71)
                  %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
                  %39 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc73)
                  %40 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc74)
                  cir.store %37, %40 : !s8i, !cir.ptr<!s8i> loc(#loc142)
                } loc(#loc133)
              } loc(#loc130)
            } loc(#loc129)
          } loc(#loc126)
        } loc(#loc124)
      } loc(#loc123)
    } loc(#loc122)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc143)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc143)
  } loc(#loc120)
  cir.global "private"  external @CWE78_OS_Command_Injection__char_console_popen_22_goodG2B1Global : !s32i {alignment = 4 : i64} loc(#loc144)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc79)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc145)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc82)
  cir.func  @CWE78_OS_Command_Injection__char_console_popen_22_goodG2B1Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc85, #loc86])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc147)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc84)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc87)
    cir.scope {
      %4 = cir.get_global @CWE78_OS_Command_Injection__char_console_popen_22_goodG2B1Global : !cir.ptr<!s32i> loc(#loc144)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc90)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc90)
      cir.if %6 {
        %7 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc79)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc79)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc94)
      } else {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc95)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
        %9 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc82)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc82)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc95)
      } loc(#loc149)
    } loc(#loc148)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc150)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc150)
  } loc(#loc146)
  cir.global "private"  external @CWE78_OS_Command_Injection__char_console_popen_22_goodG2B2Global : !s32i {alignment = 4 : i64} loc(#loc151)
  cir.func  @CWE78_OS_Command_Injection__char_console_popen_22_goodG2B2Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc103, #loc104])) -> !cir.ptr<!s8i> extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc153)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc102)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc105)
    cir.scope {
      %4 = cir.get_global @CWE78_OS_Command_Injection__char_console_popen_22_goodG2B2Global : !cir.ptr<!s32i> loc(#loc151)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc108)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc108)
      cir.if %6 {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc110)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
        %9 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc112)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc112)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc110)
      } loc(#loc155)
    } loc(#loc154)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
    cir.store %2, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc156)
    %3 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
    cir.return %3 : !cir.ptr<!s8i> loc(#loc156)
  } loc(#loc152)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_22b.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":31:1)
#loc2 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":31:12)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("/usr/include/stdio.h":654:1)
#loc6 = loc("/usr/include/stdio.h":655:59)
#loc7 = loc("/usr/include/stdio.h":149:1)
#loc8 = loc("/usr/include/stdio.h":149:14)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":56:31)
#loc12 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":33:1)
#loc13 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":64:1)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":34:1)
#loc17 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":35:5)
#loc18 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":62:5)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":35:8)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":36:5)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":37:9)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":61:9)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":39:13)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":39:41)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":39:30)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":39:37)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":41:13)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":60:13)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":41:17)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":41:21)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":41:31)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":41:29)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":42:13)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":44:17)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":59:17)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":44:27)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":44:32)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":44:31)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":44:47)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":44:51)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":44:61)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":44:21)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":44:71)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":44:68)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":45:17)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":53:17)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":55:17)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":48:31)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":48:38)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":48:21)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":48:42)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":49:21)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":52:21)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":49:25)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":49:35)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":49:33)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":49:37)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":49:40)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":49:45)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":49:53)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":49:54)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":49:59)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":49:56)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":50:21)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":51:43)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":51:25)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":51:30)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":51:38)
#loc69 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":51:39)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":56:21)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":58:37)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":58:21)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":58:26)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":58:33)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":63:12)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":63:5)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":71:1)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":71:12)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":80:19)
#loc80 = loc("/usr/include/string.h":149:1)
#loc81 = loc("/usr/include/string.h":150:14)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":85:22)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":75:1)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":88:1)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":76:1)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":77:5)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":86:5)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":77:8)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":78:5)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":81:5)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":83:5)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":80:9)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":85:9)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":85:16)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":87:12)
#loc98 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":87:5)
#loc99 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":72:1)
#loc100 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":72:12)
#loc101 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":91:1)
#loc102 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":99:1)
#loc105 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":92:1)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":93:5)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":97:5)
#loc108 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":93:8)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":94:5)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":96:9)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":96:16)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":96:22)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":98:12)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_popen_22b.c":98:5)
#loc115 = loc(fused[#loc1, #loc2])
#loc116 = loc(fused[#loc3, #loc4])
#loc117 = loc(fused[#loc5, #loc6])
#loc118 = loc(fused[#loc7, #loc8])
#loc119 = loc(fused[#loc9, #loc10])
#loc120 = loc(fused[#loc12, #loc13])
#loc122 = loc(fused[#loc17, #loc18])
#loc123 = loc(fused[#loc20, #loc18])
#loc124 = loc(fused[#loc21, #loc22])
#loc125 = loc(fused[#loc23, #loc24])
#loc126 = loc(fused[#loc27, #loc28])
#loc127 = loc(fused[#loc29, #loc30])
#loc128 = loc(fused[#loc29, #loc31])
#loc129 = loc(fused[#loc33, #loc28])
#loc130 = loc(fused[#loc34, #loc35])
#loc131 = loc(fused[#loc39, #loc40])
#loc132 = loc(fused[#loc42, #loc43])
#loc133 = loc(fused[#loc45, #loc46, #loc47, #loc35])
#loc134 = loc(fused[#loc50, #loc51])
#loc135 = loc(fused[#loc52, #loc53])
#loc136 = loc(fused[#loc54, #loc55])
#loc137 = loc(fused[#loc59, #loc60])
#loc138 = loc(fused[#loc58, #loc62])
#loc139 = loc(fused[#loc64, #loc53])
#loc140 = loc(fused[#loc67, #loc68])
#loc141 = loc(fused[#loc66, #loc65])
#loc142 = loc(fused[#loc72, #loc71])
#loc143 = loc(fused[#loc76, #loc75])
#loc144 = loc(fused[#loc77, #loc78])
#loc145 = loc(fused[#loc80, #loc81])
#loc146 = loc(fused[#loc83, #loc84])
#loc148 = loc(fused[#loc88, #loc89])
#loc149 = loc(fused[#loc91, #loc92, #loc93, #loc89])
#loc150 = loc(fused[#loc98, #loc97])
#loc151 = loc(fused[#loc99, #loc100])
#loc152 = loc(fused[#loc101, #loc102])
#loc154 = loc(fused[#loc106, #loc107])
#loc155 = loc(fused[#loc109, #loc107])
#loc156 = loc(fused[#loc114, #loc113])
