!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc15 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":28:23)
#loc16 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":28:27)
#loc90 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":145:10)
#loc91 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":145:14)
#loc92 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":145:20)
#loc93 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":145:32)
#loc110 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":36:24)
#loc111 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":36:28)
!ty__structSigAtomic = !cir.struct<struct "_structSigAtomic" {!s32i} #cir.record.decl.ast>
#loc181 = loc(fused[#loc15, #loc16])
#loc211 = loc(fused[#loc90, #loc91])
#loc212 = loc(fused[#loc92, #loc93])
#loc217 = loc(fused[#loc110, #loc111])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE364_Signal_Handler_Race_Condition/CWE364_Signal_Handler_Race_Condition__basic_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global external dsolocal @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicBad = #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> {alignment = 8 : i64} loc(#loc174)
  cir.global external dsolocal @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicGood = #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> {alignment = 8 : i64} loc(#loc175)
  cir.func private @signal(!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc176)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc177)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc178)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc179)
  cir.func internal private @helperBad(%arg0: !s32i loc(fused[#loc15, #loc16])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["sig", init] {alignment = 4 : i64} loc(#loc181)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc17)
    cir.scope {
      %1 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc174)
      %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc20)
      %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc21)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc21)
      %5 = cir.cmp(ne, %2, %4) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc183)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc23)
        %7 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc174)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc24)
        %9 = cir.get_member %8[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
        cir.store %6, %9 : !s32i, !cir.ptr<!s32i> loc(#loc185)
      } loc(#loc184)
    } loc(#loc182)
    cir.return loc(#loc14)
  } loc(#loc180)
  cir.func no_proto @CWE364_Signal_Handler_Race_Condition__basic_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc187)
    cir.goto "sink" loc(#loc188)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc32)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc29)
    cir.store %1, %0 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc187)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc33)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc34)
    %4 = cir.call @signal(%2, %3) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc35)
    cir.scope {
      %18 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc174)
      %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc38)
      %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc39)
      %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc39)
      %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc190)
      cir.if %22 {
        %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc41)
        %24 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc174)
        %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc42)
        %26 = cir.cast(bitcast, %25 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc42)
        cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc41)
        %27 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc43)
        %28 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc174)
        cir.store %27, %28 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc192)
      } loc(#loc191)
    } loc(#loc189)
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc45)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc193)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc45)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc194)
    cir.store %8, %0 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc195)
    cir.scope {
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc52)
      %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc53)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc53)
      %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc197)
      cir.if %21 {
        %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc55)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc56)
        %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc57)
        cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc55)
      } loc(#loc198)
    } loc(#loc196)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc58)
    %10 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc174)
    cir.store %9, %10 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc199)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc60)
    %12 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc174)
    %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc61)
    %14 = cir.get_member %13[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
    cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc200)
    %15 = cir.const #cir.int<2> : !s32i loc(#loc62)
    %16 = cir.get_global @helperBad : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc63)
    %17 = cir.call @signal(%15, %16) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc64)
    cir.scope {
      %18 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc174)
      %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc67)
      %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc68)
      %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc68)
      %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc202)
      cir.if %22 {
        %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc70)
        %24 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc174)
        %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc71)
        %26 = cir.cast(bitcast, %25 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc71)
        cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc70)
        %27 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc72)
        %28 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc174)
        cir.store %27, %28 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc204)
      } loc(#loc203)
    } loc(#loc201)
    cir.return loc(#loc27)
  } loc(#loc186)
  cir.func no_proto @CWE364_Signal_Handler_Race_Condition__basic_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc206)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc76)
    cir.return loc(#loc75)
  } loc(#loc205)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc207)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc208)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc209)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc84)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc85)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc86)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc87)
  cir.func @main(%arg0: !s32i loc(fused[#loc90, #loc91]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc92, #loc93])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc211)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc212)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc89)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc94)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc94)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc95)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc96)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc96)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc97)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc84)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc84)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    %8 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc213)
    cir.call @CWE364_Signal_Handler_Race_Condition__basic_18_good() : () -> () loc(#loc99)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc85)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc86)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc86)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc102)
    %13 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc214)
    cir.call @CWE364_Signal_Handler_Race_Condition__basic_18_bad() : () -> () loc(#loc103)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc87)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc105)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc106)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc215)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc215)
    cir.return %17 : !s32i loc(#loc215)
  } loc(#loc210)
  cir.func internal private @helperGood(%arg0: !s32i loc(fused[#loc110, #loc111])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["sig", init] {alignment = 4 : i64} loc(#loc217)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc112)
    cir.scope {
      %1 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc175)
      %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc115)
      %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc116)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc116)
      %5 = cir.cmp(ne, %2, %4) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc219)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc118)
        %7 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc175)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc119)
        %9 = cir.get_member %8[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
        cir.store %6, %9 : !s32i, !cir.ptr<!s32i> loc(#loc221)
      } loc(#loc220)
    } loc(#loc218)
    cir.return loc(#loc109)
  } loc(#loc216)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc223)
    cir.goto "sink" loc(#loc224)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc126)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc123)
    cir.store %1, %0 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc223)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc127)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc128)
    %4 = cir.call @signal(%2, %3) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc129)
    cir.scope {
      %24 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc175)
      %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc132)
      %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc133)
      %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc133)
      %28 = cir.cmp(ne, %25, %27) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc226)
      cir.if %28 {
        %29 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc135)
        %30 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc175)
        %31 = cir.load %30 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc136)
        %32 = cir.cast(bitcast, %31 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc136)
        cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc135)
        %33 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc137)
        %34 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc175)
        cir.store %33, %34 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc228)
      } loc(#loc227)
    } loc(#loc225)
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc139)
    %6 = cir.const #cir.int<4> : !u64i loc(#loc229)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc139)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc230)
    cir.store %8, %0 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc231)
    cir.scope {
      %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc146)
      %25 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc147)
      %26 = cir.cast(bitcast, %25 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc147)
      %27 = cir.cmp(eq, %24, %26) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc233)
      cir.if %27 {
        %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc149)
        %29 = cir.const #cir.int<1> : !s32i loc(#loc150)
        %30 = cir.unary(minus, %29) : !s32i, !s32i loc(#loc151)
        cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc149)
      } loc(#loc234)
    } loc(#loc232)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc152)
    %10 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc175)
    cir.store %9, %10 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc235)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc154)
    %12 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc175)
    %13 = cir.load %12 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc155)
    %14 = cir.get_member %13[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
    cir.store %11, %14 : !s32i, !cir.ptr<!s32i> loc(#loc236)
    %15 = cir.const #cir.int<2> : !s32i loc(#loc156)
    %16 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc157)
    %17 = cir.call @signal(%15, %16) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc158)
    %18 = cir.const #cir.int<2> : !s32i loc(#loc159)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc160)
    %20 = cir.call @signal(%18, %19) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc161)
    cir.scope {
      %24 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc175)
      %25 = cir.load %24 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc164)
      %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc165)
      %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc165)
      %28 = cir.cmp(ne, %25, %27) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc238)
      cir.if %28 {
        %29 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc167)
        %30 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc175)
        %31 = cir.load %30 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc168)
        %32 = cir.cast(bitcast, %31 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc168)
        cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc167)
        %33 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc169)
        %34 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_18StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc175)
        cir.store %33, %34 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc240)
      } loc(#loc239)
    } loc(#loc237)
    %21 = cir.const #cir.int<2> : !s32i loc(#loc171)
    %22 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc172)
    %23 = cir.call @signal(%21, %22) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc173)
    cir.return loc(#loc121)
  } loc(#loc222)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE364_Signal_Handler_Race_Condition/CWE364_Signal_Handler_Race_Condition__basic_18.c":0:0)
#loc1 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":25:1)
#loc2 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":25:85)
#loc3 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":26:1)
#loc4 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":26:86)
#loc5 = loc("/usr/include/signal.h":88:1)
#loc6 = loc("/usr/include/signal.h":89:6)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("/usr/include/stdlib.h":672:1)
#loc10 = loc("/usr/include/stdlib.h":672:45)
#loc11 = loc("/usr/include/stdlib.h":756:1)
#loc12 = loc("/usr/include/stdlib.h":756:70)
#loc13 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":28:1)
#loc14 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":34:1)
#loc17 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":29:1)
#loc18 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":30:5)
#loc19 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":33:5)
#loc20 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":30:9)
#loc21 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":30:77)
#loc22 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":31:5)
#loc23 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":32:81)
#loc24 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":32:9)
#loc25 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":22:18)
#loc26 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":46:1)
#loc27 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":85:1)
#loc28 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":51:9)
#loc29 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":51:45)
#loc30 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":48:5)
#loc31 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":48:10)
#loc32 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":49:1)
#loc33 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":52:16)
#loc34 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":52:24)
#loc35 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":52:9)
#loc36 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":53:9)
#loc37 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":57:9)
#loc38 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":53:13)
#loc39 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":53:81)
#loc40 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":54:9)
#loc41 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":55:13)
#loc42 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":55:18)
#loc43 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":56:80)
#loc44 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":56:13)
#loc45 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":58:46)
#loc46 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":58:53)
#loc47 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":58:75)
#loc48 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":58:76)
#loc49 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":58:9)
#loc50 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":59:9)
#loc51 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":59:49)
#loc52 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":59:13)
#loc53 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":59:33)
#loc54 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":59:39)
#loc55 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":59:40)
#loc56 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":59:46)
#loc57 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":59:45)
#loc58 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":60:76)
#loc59 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":60:9)
#loc60 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":61:81)
#loc61 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":61:9)
#loc62 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":69:16)
#loc63 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":69:24)
#loc64 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":69:9)
#loc65 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":79:9)
#loc66 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":83:9)
#loc67 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":79:13)
#loc68 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":79:81)
#loc69 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":80:9)
#loc70 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":81:13)
#loc71 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":81:18)
#loc72 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":82:80)
#loc73 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":82:13)
#loc74 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":131:1)
#loc75 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":134:1)
#loc76 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":133:5)
#loc77 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":133:11)
#loc78 = loc("/usr/include/stdlib.h":575:1)
#loc79 = loc("/usr/include/stdlib.h":575:41)
#loc80 = loc("/usr/include/time.h":76:1)
#loc81 = loc("/usr/include/time.h":76:38)
#loc82 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc83 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc84 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":150:15)
#loc85 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":152:15)
#loc86 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":155:15)
#loc87 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":157:15)
#loc88 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":145:1)
#loc89 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":160:1)
#loc94 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":146:1)
#loc95 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":148:27)
#loc96 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":148:22)
#loc97 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":148:5)
#loc98 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":150:5)
#loc99 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":151:5)
#loc100 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":151:57)
#loc101 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":152:5)
#loc102 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":155:5)
#loc103 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":156:5)
#loc104 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":156:56)
#loc105 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":157:5)
#loc106 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":159:12)
#loc107 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":159:5)
#loc108 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":36:1)
#loc109 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":42:1)
#loc112 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":37:1)
#loc113 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":38:5)
#loc114 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":41:5)
#loc115 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":38:9)
#loc116 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":38:78)
#loc117 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":39:5)
#loc118 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":40:82)
#loc119 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":40:9)
#loc120 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":92:1)
#loc121 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":129:1)
#loc122 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":97:9)
#loc123 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":97:45)
#loc124 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":94:5)
#loc125 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":94:10)
#loc126 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":95:1)
#loc127 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":98:16)
#loc128 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":98:24)
#loc129 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":98:9)
#loc130 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":99:9)
#loc131 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":103:9)
#loc132 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":99:13)
#loc133 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":99:82)
#loc134 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":100:9)
#loc135 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":101:13)
#loc136 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":101:18)
#loc137 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":102:81)
#loc138 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":102:13)
#loc139 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":104:46)
#loc140 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":104:53)
#loc141 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":104:75)
#loc142 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":104:76)
#loc143 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":104:9)
#loc144 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":105:9)
#loc145 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":105:49)
#loc146 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":105:13)
#loc147 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":105:33)
#loc148 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":105:39)
#loc149 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":105:40)
#loc150 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":105:46)
#loc151 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":105:45)
#loc152 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":106:77)
#loc153 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":106:9)
#loc154 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":107:82)
#loc155 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":107:9)
#loc156 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":115:16)
#loc157 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":115:24)
#loc158 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":115:9)
#loc159 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":121:16)
#loc160 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":121:24)
#loc161 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":121:9)
#loc162 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":122:9)
#loc163 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":126:9)
#loc164 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":122:13)
#loc165 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":122:82)
#loc166 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":123:9)
#loc167 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":124:13)
#loc168 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":124:18)
#loc169 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":125:81)
#loc170 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":125:13)
#loc171 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":127:16)
#loc172 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":127:24)
#loc173 = loc("CWE364_Signal_Handler_Race_Condition__basic_18.c":127:9)
#loc174 = loc(fused[#loc1, #loc2])
#loc175 = loc(fused[#loc3, #loc4])
#loc176 = loc(fused[#loc5, #loc6])
#loc177 = loc(fused[#loc7, #loc8])
#loc178 = loc(fused[#loc9, #loc10])
#loc179 = loc(fused[#loc11, #loc12])
#loc180 = loc(fused[#loc13, #loc14])
#loc182 = loc(fused[#loc18, #loc19])
#loc183 = loc(fused[#loc20, #loc21])
#loc184 = loc(fused[#loc22, #loc19])
#loc185 = loc(fused[#loc24, #loc23])
#loc186 = loc(fused[#loc26, #loc27])
#loc187 = loc(fused[#loc28, #loc29])
#loc188 = loc(fused[#loc30, #loc31])
#loc189 = loc(fused[#loc36, #loc37])
#loc190 = loc(fused[#loc38, #loc39])
#loc191 = loc(fused[#loc40, #loc37])
#loc192 = loc(fused[#loc44, #loc43])
#loc193 = loc(fused[#loc46, #loc47])
#loc194 = loc(fused[#loc45, #loc48])
#loc195 = loc(fused[#loc49, #loc48])
#loc196 = loc(fused[#loc50, #loc51])
#loc197 = loc(fused[#loc52, #loc53])
#loc198 = loc(fused[#loc54, #loc51])
#loc199 = loc(fused[#loc59, #loc58])
#loc200 = loc(fused[#loc61, #loc60])
#loc201 = loc(fused[#loc65, #loc66])
#loc202 = loc(fused[#loc67, #loc68])
#loc203 = loc(fused[#loc69, #loc66])
#loc204 = loc(fused[#loc73, #loc72])
#loc205 = loc(fused[#loc74, #loc75])
#loc206 = loc(fused[#loc76, #loc77])
#loc207 = loc(fused[#loc78, #loc79])
#loc208 = loc(fused[#loc80, #loc81])
#loc209 = loc(fused[#loc82, #loc83])
#loc210 = loc(fused[#loc88, #loc89])
#loc213 = loc(fused[#loc99, #loc100])
#loc214 = loc(fused[#loc103, #loc104])
#loc215 = loc(fused[#loc107, #loc106])
#loc216 = loc(fused[#loc108, #loc109])
#loc218 = loc(fused[#loc113, #loc114])
#loc219 = loc(fused[#loc115, #loc116])
#loc220 = loc(fused[#loc117, #loc114])
#loc221 = loc(fused[#loc119, #loc118])
#loc222 = loc(fused[#loc120, #loc121])
#loc223 = loc(fused[#loc122, #loc123])
#loc224 = loc(fused[#loc124, #loc125])
#loc225 = loc(fused[#loc130, #loc131])
#loc226 = loc(fused[#loc132, #loc133])
#loc227 = loc(fused[#loc134, #loc131])
#loc228 = loc(fused[#loc138, #loc137])
#loc229 = loc(fused[#loc140, #loc141])
#loc230 = loc(fused[#loc139, #loc142])
#loc231 = loc(fused[#loc143, #loc142])
#loc232 = loc(fused[#loc144, #loc145])
#loc233 = loc(fused[#loc146, #loc147])
#loc234 = loc(fused[#loc148, #loc145])
#loc235 = loc(fused[#loc153, #loc152])
#loc236 = loc(fused[#loc155, #loc154])
#loc237 = loc(fused[#loc162, #loc163])
#loc238 = loc(fused[#loc164, #loc165])
#loc239 = loc(fused[#loc166, #loc163])
#loc240 = loc(fused[#loc170, #loc169])
