!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":81:10)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":81:14)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":81:20)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":81:32)
#loc172 = loc(fused[#loc74, #loc75])
#loc173 = loc(fused[#loc76, #loc77])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc141)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc142)
  cir.func private @printIntLine(!s32i) loc(#loc143)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc144)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc146)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc147)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc148)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc17)
    cir.store %3, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc149)
    cir.br ^bb1 loc(#loc150)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc21)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc151)
    cir.br ^bb2 loc(#loc150)
  ^bb2:  // 2 preds: ^bb1, ^bb10
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc23)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc152)
    cir.brcond %7 ^bb3, ^bb11 loc(#loc25)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc153)
  ^bb4:  // pred: ^bb3
    %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc27)
    %9 = cir.const #cir.int<50> : !s32i loc(#loc28)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc28)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc154)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc155)
    %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc27)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc156)
    cir.store %14, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc157)
    cir.br ^bb5 loc(#loc158)
  ^bb5:  // pred: ^bb4
    %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc35)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc36)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc36)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s32i>, !cir.bool loc(#loc159)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc160)
  ^bb6:  // pred: ^bb5
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc38)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc40)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc38)
    cir.br ^bb7 loc(#loc34)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc34)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc20)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc20)
  ^bb10:  // pred: ^bb9
    %22 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc41)
    %23 = cir.unary(inc, %22) : !s32i, !s32i loc(#loc42)
    cir.store %23, %1 : !s32i, !cir.ptr<!s32i> loc(#loc161)
    cir.br ^bb2 loc(#loc150)
  ^bb11:  // pred: ^bb2
    cir.br ^bb12 loc(#loc20)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc162)
  ^bb13:  // pred: ^bb12
    %24 = cir.const #cir.zero : !cir.array<!s32i x 100> loc(#loc146)
    cir.store %24, %0 : !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>> loc(#loc146)
    %25 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc45)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc45)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc46)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc46)
    %29 = cir.const #cir.int<100> : !s32i loc(#loc47)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc47)
    %31 = cir.const #cir.int<4> : !u64i loc(#loc163)
    %32 = cir.binop(mul, %30, %31) : !u64i loc(#loc164)
    cir.libc.memcpy %32 bytes from %28 to %26 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc165)
    %33 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc52)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc53)
    %35 = cir.ptr_stride(%33 : !cir.ptr<!s32i>, %34 : !s32i), !cir.ptr<!s32i> loc(#loc54)
    %36 = cir.load %35 : !cir.ptr<!s32i>, !s32i loc(#loc52)
    cir.call @printIntLine(%36) : (!s32i) -> () loc(#loc55)
    %37 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc56)
    %38 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc57)
    %39 = cir.cast(bitcast, %38 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc57)
    cir.call @free(%39) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc56)
    cir.br ^bb14 loc(#loc44)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc10)
  } loc(#loc145)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc167)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    cir.return loc(#loc59)
  } loc(#loc166)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc168)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc169)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc170)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc70)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc71)
  cir.func @main(%arg0: !s32i loc(fused[#loc74, #loc75]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc76, #loc77])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc172)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc173)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc73)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc78)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc78)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc79)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc80)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc80)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc81)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc68)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc174)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17_good() : () -> () loc(#loc83)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc69)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc70)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc175)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17_bad() : () -> () loc(#loc87)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc71)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc90)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc176)
    cir.return %17 : !s32i loc(#loc176)
  } loc(#loc171)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc178)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc179)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc180)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc100)
    cir.store %3, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc181)
    cir.br ^bb1 loc(#loc182)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<0> : !s32i loc(#loc104)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc183)
    cir.br ^bb2 loc(#loc182)
  ^bb2:  // 2 preds: ^bb1, ^bb10
    %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc184)
    cir.brcond %7 ^bb3, ^bb11 loc(#loc108)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc185)
  ^bb4:  // pred: ^bb3
    %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc110)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc111)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc111)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc186)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc187)
    %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc110)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc188)
    cir.store %14, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc189)
    cir.br ^bb5 loc(#loc190)
  ^bb5:  // pred: ^bb4
    %15 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc118)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc119)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc119)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s32i>, !cir.bool loc(#loc191)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc192)
  ^bb6:  // pred: ^bb5
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc121)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc122)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc123)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc121)
    cir.br ^bb7 loc(#loc117)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc117)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc103)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc103)
  ^bb10:  // pred: ^bb9
    %22 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    %23 = cir.unary(inc, %22) : !s32i, !s32i loc(#loc125)
    cir.store %23, %1 : !s32i, !cir.ptr<!s32i> loc(#loc193)
    cir.br ^bb2 loc(#loc182)
  ^bb11:  // pred: ^bb2
    cir.br ^bb12 loc(#loc103)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc194)
  ^bb13:  // pred: ^bb12
    %24 = cir.const #cir.zero : !cir.array<!s32i x 100> loc(#loc178)
    cir.store %24, %0 : !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>> loc(#loc178)
    %25 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc128)
    %26 = cir.cast(bitcast, %25 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc128)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc129)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc129)
    %29 = cir.const #cir.int<100> : !s32i loc(#loc130)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc130)
    %31 = cir.const #cir.int<4> : !u64i loc(#loc195)
    %32 = cir.binop(mul, %30, %31) : !u64i loc(#loc196)
    cir.libc.memcpy %32 bytes from %28 to %26 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc197)
    %33 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc135)
    %34 = cir.const #cir.int<0> : !s32i loc(#loc136)
    %35 = cir.ptr_stride(%33 : !cir.ptr<!s32i>, %34 : !s32i), !cir.ptr<!s32i> loc(#loc137)
    %36 = cir.load %35 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    cir.call @printIntLine(%36) : (!s32i) -> () loc(#loc138)
    %37 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc139)
    %38 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc140)
    %39 = cir.cast(bitcast, %38 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc140)
    cir.call @free(%39) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc139)
    cir.br ^bb14 loc(#loc127)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc93)
  } loc(#loc177)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":21:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":39:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":33:9)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":33:29)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":23:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":23:9)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":24:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":24:11)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":25:12)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":25:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":26:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":31:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":26:13)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":26:9)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":26:16)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":26:20)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":26:18)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":27:5)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":29:23)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":29:30)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":29:33)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":29:43)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":29:44)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":29:9)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":30:9)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":30:37)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":30:13)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":30:21)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":30:27)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":30:28)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":30:34)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":30:33)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":26:24)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":26:23)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":32:5)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":38:5)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":35:16)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":35:22)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":35:30)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":35:34)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":35:44)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":35:9)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":35:45)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":36:22)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":36:27)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":36:28)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":36:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":37:9)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":37:14)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":66:1)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":69:1)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":68:5)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":68:13)
#loc62 = loc("/usr/include/stdlib.h":575:1)
#loc63 = loc("/usr/include/stdlib.h":575:41)
#loc64 = loc("/usr/include/time.h":76:1)
#loc65 = loc("/usr/include/time.h":76:38)
#loc66 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc67 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":86:15)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":88:15)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":91:15)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":93:15)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":81:1)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":96:1)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":82:1)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":84:27)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":84:22)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":84:5)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":86:5)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":87:5)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":87:68)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":88:5)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":91:5)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":92:5)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":92:67)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":93:5)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":95:12)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":95:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":46:1)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":64:1)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":58:9)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":58:29)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":48:5)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":48:9)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":49:5)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":49:11)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":50:12)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":50:5)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":51:5)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":56:5)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":51:13)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":51:9)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":51:16)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":51:20)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":51:18)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":52:5)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":54:23)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":54:30)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":54:34)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":54:44)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":54:45)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":54:9)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":55:9)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":55:37)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":55:13)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":55:21)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":55:27)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":55:28)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":55:34)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":55:33)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":51:24)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":51:23)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":57:5)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":63:5)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":60:16)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":60:22)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":60:30)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":60:34)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":60:44)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":60:9)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":60:45)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":61:22)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":61:27)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":61:28)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":61:9)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":62:9)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_int_memcpy_17.c":62:14)
#loc141 = loc(fused[#loc1, #loc2])
#loc142 = loc(fused[#loc3, #loc4])
#loc143 = loc(fused[#loc5, #loc6])
#loc144 = loc(fused[#loc7, #loc8])
#loc145 = loc(fused[#loc9, #loc10])
#loc146 = loc(fused[#loc11, #loc12])
#loc147 = loc(fused[#loc13, #loc14])
#loc148 = loc(fused[#loc15, #loc16])
#loc149 = loc(fused[#loc18, #loc17])
#loc150 = loc(fused[#loc19, #loc20])
#loc151 = loc(fused[#loc22, #loc21])
#loc152 = loc(fused[#loc23, #loc24])
#loc153 = loc(fused[#loc26, #loc20])
#loc154 = loc(fused[#loc29, #loc30])
#loc155 = loc(fused[#loc28, #loc30])
#loc156 = loc(fused[#loc27, #loc31])
#loc157 = loc(fused[#loc32, #loc31])
#loc158 = loc(fused[#loc33, #loc34])
#loc159 = loc(fused[#loc35, #loc36])
#loc160 = loc(fused[#loc37, #loc34])
#loc161 = loc(fused[#loc42, #loc41])
#loc162 = loc(fused[#loc43, #loc44])
#loc163 = loc(fused[#loc48, #loc49])
#loc164 = loc(fused[#loc47, #loc49])
#loc165 = loc(fused[#loc50, #loc51])
#loc166 = loc(fused[#loc58, #loc59])
#loc167 = loc(fused[#loc60, #loc61])
#loc168 = loc(fused[#loc62, #loc63])
#loc169 = loc(fused[#loc64, #loc65])
#loc170 = loc(fused[#loc66, #loc67])
#loc171 = loc(fused[#loc72, #loc73])
#loc174 = loc(fused[#loc83, #loc84])
#loc175 = loc(fused[#loc87, #loc88])
#loc176 = loc(fused[#loc91, #loc90])
#loc177 = loc(fused[#loc92, #loc93])
#loc178 = loc(fused[#loc94, #loc95])
#loc179 = loc(fused[#loc96, #loc97])
#loc180 = loc(fused[#loc98, #loc99])
#loc181 = loc(fused[#loc101, #loc100])
#loc182 = loc(fused[#loc102, #loc103])
#loc183 = loc(fused[#loc105, #loc104])
#loc184 = loc(fused[#loc106, #loc107])
#loc185 = loc(fused[#loc109, #loc103])
#loc186 = loc(fused[#loc112, #loc113])
#loc187 = loc(fused[#loc111, #loc113])
#loc188 = loc(fused[#loc110, #loc114])
#loc189 = loc(fused[#loc115, #loc114])
#loc190 = loc(fused[#loc116, #loc117])
#loc191 = loc(fused[#loc118, #loc119])
#loc192 = loc(fused[#loc120, #loc117])
#loc193 = loc(fused[#loc125, #loc124])
#loc194 = loc(fused[#loc126, #loc127])
#loc195 = loc(fused[#loc131, #loc132])
#loc196 = loc(fused[#loc130, #loc132])
#loc197 = loc(fused[#loc133, #loc134])
