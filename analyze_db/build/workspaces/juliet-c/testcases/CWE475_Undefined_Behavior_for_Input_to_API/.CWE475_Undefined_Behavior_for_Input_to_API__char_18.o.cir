!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE475_Undefined_Behavior_for_Input_to_API/CWE475_Undefined_Behavior_for_Input_to_API__char_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"abcdefghijklmnopqrstuvwxyz\00" : !cir.array<!s8i x 27>> : !cir.array<!s8i x 27> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc60)
  cir.func no_proto @CWE475_Undefined_Behavior_for_Input_to_API__char_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc62)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc63)
    cir.goto "sink" loc(#loc64)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc14)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc62)
    cir.store %2, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc62)
    %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc11)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc63)
    %4 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc15)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc16)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 27>> loc(#loc3)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 27>>), !cir.ptr<!s8i> loc(#loc3)
    %8 = cir.call @strcpy(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc15)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
    %10 = cir.const #cir.int<6> : !s32i loc(#loc18)
    %11 = cir.ptr_stride(%9 : !cir.ptr<!s8i>, %10 : !s32i), !cir.ptr<!s8i> loc(#loc19)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc65)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %14 = cir.const #cir.int<4> : !s32i loc(#loc21)
    %15 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc22)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc66)
    %17 = cir.const #cir.int<10> : !s32i loc(#loc23)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc23)
    %19 = cir.const #cir.int<1> : !u64i loc(#loc67)
    %20 = cir.binop(mul, %18, %19) : !u64i loc(#loc68)
    cir.libc.memcpy %20 bytes from %16 to %12 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc69)
    %21 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc29)
    cir.return loc(#loc7)
  } loc(#loc61)
  cir.func no_proto @CWE475_Undefined_Behavior_for_Input_to_API__char_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc71)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc32)
    cir.return loc(#loc31)
  } loc(#loc70)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc73)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc74)
    cir.goto "sink" loc(#loc75)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc42)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc73)
    cir.store %2, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc73)
    %3 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc39)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc74)
    %4 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc43)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 27>> loc(#loc45)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 27>>), !cir.ptr<!s8i> loc(#loc45)
    %8 = cir.call @strcpy(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc43)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
    %10 = cir.const #cir.int<6> : !s32i loc(#loc47)
    %11 = cir.ptr_stride(%9 : !cir.ptr<!s8i>, %10 : !s32i), !cir.ptr<!s8i> loc(#loc48)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc76)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
    %14 = cir.const #cir.int<4> : !s32i loc(#loc50)
    %15 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc51)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc77)
    %17 = cir.const #cir.int<10> : !s32i loc(#loc52)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc52)
    %19 = cir.const #cir.int<1> : !u64i loc(#loc78)
    %20 = cir.binop(mul, %18, %19) : !u64i loc(#loc79)
    cir.libc.memmove %20 bytes from %16 to %12 : !cir.ptr<!void>, !u64i loc(#loc80)
    %21 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    cir.return loc(#loc35)
  } loc(#loc72)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE475_Undefined_Behavior_for_Input_to_API/CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":0:0)
#loc1 = loc("/usr/include/string.h":141:1)
#loc2 = loc("/usr/include/string.h":142:14)
#loc3 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":29:22)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":22:1)
#loc7 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":34:1)
#loc8 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":27:9)
#loc9 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":27:32)
#loc10 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":28:9)
#loc11 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":28:23)
#loc12 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":24:5)
#loc13 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":24:10)
#loc14 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":25:1)
#loc15 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":29:9)
#loc16 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":29:16)
#loc17 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":31:16)
#loc18 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":31:23)
#loc19 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":31:21)
#loc20 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":31:26)
#loc21 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":31:33)
#loc22 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":31:31)
#loc23 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":31:36)
#loc24 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":31:39)
#loc25 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":31:50)
#loc26 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":31:9)
#loc27 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":31:51)
#loc28 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":32:19)
#loc29 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":32:9)
#loc30 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":55:1)
#loc31 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":58:1)
#loc32 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":57:5)
#loc33 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":57:11)
#loc34 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":41:1)
#loc35 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":53:1)
#loc36 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":46:9)
#loc37 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":46:32)
#loc38 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":47:9)
#loc39 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":47:23)
#loc40 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":43:5)
#loc41 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":43:10)
#loc42 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":44:1)
#loc43 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":48:9)
#loc44 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":48:16)
#loc45 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":48:22)
#loc46 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":50:17)
#loc47 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":50:24)
#loc48 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":50:22)
#loc49 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":50:27)
#loc50 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":50:34)
#loc51 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":50:32)
#loc52 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":50:37)
#loc53 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":50:40)
#loc54 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":50:51)
#loc55 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":50:9)
#loc56 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":50:52)
#loc57 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":51:19)
#loc58 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_18.c":51:9)
#loc59 = loc(fused[#loc1, #loc2])
#loc60 = loc(fused[#loc4, #loc5])
#loc61 = loc(fused[#loc6, #loc7])
#loc62 = loc(fused[#loc8, #loc9])
#loc63 = loc(fused[#loc10, #loc11])
#loc64 = loc(fused[#loc12, #loc13])
#loc65 = loc(fused[#loc17, #loc18])
#loc66 = loc(fused[#loc20, #loc21])
#loc67 = loc(fused[#loc24, #loc25])
#loc68 = loc(fused[#loc23, #loc25])
#loc69 = loc(fused[#loc26, #loc27])
#loc70 = loc(fused[#loc30, #loc31])
#loc71 = loc(fused[#loc32, #loc33])
#loc72 = loc(fused[#loc34, #loc35])
#loc73 = loc(fused[#loc36, #loc37])
#loc74 = loc(fused[#loc38, #loc39])
#loc75 = loc(fused[#loc40, #loc41])
#loc76 = loc(fused[#loc46, #loc47])
#loc77 = loc(fused[#loc49, #loc50])
#loc78 = loc(fused[#loc53, #loc54])
#loc79 = loc(fused[#loc52, #loc54])
#loc80 = loc(fused[#loc55, #loc56])
