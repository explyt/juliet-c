!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":50:76)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":50:83)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":78:80)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":78:87)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":102:80)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":102:87)
#true = #cir.bool<true> : !cir.bool
#loc140 = loc(fused[#loc15, #loc16])
#loc155 = loc(fused[#loc53, #loc54])
#loc170 = loc(fused[#loc94, #loc95])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc134)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc135)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc136)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc137)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc12)
  cir.func @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e_badSink(%arg0: !u64i loc(fused[#loc15, #loc16])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc140)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc17)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc142)
      cir.scope {
        %2 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc24)
        %3 = cir.const #cir.int<5> : !u64i loc(#loc144)
        %4 = cir.cmp(gt, %2, %3) : !u64i, !cir.bool loc(#loc145)
        cir.if %4 {
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc30)
          %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc31)
          %7 = cir.const #cir.int<1> : !u64i loc(#loc147)
          %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc148)
          %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc30)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc149)
          cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
          cir.scope {
            %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc39)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc39)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc152)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc41)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc42)
              %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc43)
              cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc41)
            } loc(#loc153)
          } loc(#loc151)
          %11 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc44)
          %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
          %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc7)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc7)
          %15 = cir.call @strcpy(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc44)
          %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
          cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc47)
          %17 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc48)
          %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc49)
          cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc48)
        } else {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc12)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc12)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc50)
        } loc(#loc146)
      } loc(#loc143)
    } loc(#loc141)
    cir.return loc(#loc14)
  } loc(#loc139)
  cir.func @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e_goodG2BSink(%arg0: !u64i loc(fused[#loc53, #loc54])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc155)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc55)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc157)
      cir.scope {
        %2 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc62)
        %3 = cir.const #cir.int<5> : !u64i loc(#loc159)
        %4 = cir.cmp(gt, %2, %3) : !u64i, !cir.bool loc(#loc160)
        cir.if %4 {
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc68)
          %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc69)
          %7 = cir.const #cir.int<1> : !u64i loc(#loc162)
          %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc163)
          %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc68)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc164)
          cir.store %10, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc165)
          cir.scope {
            %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc77)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc77)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc167)
            cir.if %23 {
              %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc79)
              %25 = cir.const #cir.int<1> : !s32i loc(#loc80)
              %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc81)
              cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc79)
            } loc(#loc168)
          } loc(#loc166)
          %11 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc82)
          %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
          %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc84)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc84)
          %15 = cir.call @strcpy(%12, %14) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc82)
          %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
          cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc86)
          %17 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc87)
          %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc88)
          cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc87)
        } else {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc89)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc89)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc90)
        } loc(#loc161)
      } loc(#loc158)
    } loc(#loc156)
    cir.return loc(#loc52)
  } loc(#loc154)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc91)
  cir.func @CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e_goodB2GSink(%arg0: !u64i loc(fused[#loc94, #loc95])) extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc170)
    cir.store %arg0, %0 : !u64i, !cir.ptr<!u64i> loc(#loc96)
    cir.scope {
      %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc172)
      cir.scope {
        %2 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc103)
        %3 = cir.const #cir.int<5> : !u64i loc(#loc174)
        %4 = cir.cmp(gt, %2, %3) : !u64i, !cir.bool loc(#loc175)
        %5 = cir.ternary(%4, true {
          %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc107)
          %7 = cir.const #cir.int<100> : !s32i loc(#loc108)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc108)
          %9 = cir.cmp(lt, %6, %8) : !u64i, !cir.bool loc(#loc176)
          %10 = cir.ternary(%9, true {
            %11 = cir.const #true loc(#loc106)
            cir.yield %11 : !cir.bool loc(#loc106)
          }, false {
            %11 = cir.const #false loc(#loc106)
            cir.yield %11 : !cir.bool loc(#loc106)
          }) : (!cir.bool) -> !cir.bool loc(#loc106)
          cir.yield %10 : !cir.bool loc(#loc106)
        }, false {
          %6 = cir.const #false loc(#loc106)
          cir.yield %6 : !cir.bool loc(#loc106)
        }) : (!cir.bool) -> !cir.bool loc(#loc106)
        cir.if %5 {
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc112)
          %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc113)
          %8 = cir.const #cir.int<1> : !u64i loc(#loc178)
          %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc179)
          %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc112)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc180)
          cir.store %11, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc181)
          cir.scope {
            %21 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
            %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc121)
            %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc121)
            %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!s8i>, !cir.bool loc(#loc183)
            cir.if %24 {
              %25 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc123)
              %26 = cir.const #cir.int<1> : !s32i loc(#loc124)
              %27 = cir.unary(minus, %26) : !s32i, !s32i loc(#loc125)
              cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc123)
            } loc(#loc184)
          } loc(#loc182)
          %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc126)
          %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
          %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc128)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc128)
          %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc126)
          %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc130)
          %18 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc131)
          %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
          %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc132)
          cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc131)
        } else {
          %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc91)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc91)
          cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc133)
        } loc(#loc177)
      } loc(#loc173)
    } loc(#loc171)
    cir.return loc(#loc93)
  } loc(#loc169)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":62:30)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("/usr/include/stdlib.h":687:1)
#loc11 = loc("/usr/include/stdlib.h":687:32)
#loc12 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":68:23)
#loc13 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":50:1)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":71:1)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":51:1)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":52:5)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":70:5)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":53:9)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":53:16)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":57:9)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":69:9)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":57:13)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":57:20)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":57:39)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":58:9)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":65:9)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":67:9)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":59:32)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":59:39)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":59:44)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":59:55)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":59:56)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":59:13)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":60:13)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":60:45)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":60:17)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":60:29)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":60:35)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":60:36)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":60:42)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":60:41)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":62:13)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":62:20)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":63:23)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":63:13)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":64:13)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":64:18)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":68:13)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":78:1)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":99:1)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":79:1)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":80:5)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":98:5)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":81:9)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":81:16)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":85:9)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":97:9)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":85:13)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":85:20)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":85:39)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":86:9)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":93:9)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":95:9)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":87:32)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":87:39)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":87:44)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":87:55)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":87:56)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":87:13)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":88:13)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":88:45)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":88:17)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":88:29)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":88:35)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":88:36)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":88:42)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":88:41)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":90:13)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":90:20)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":90:30)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":91:23)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":91:13)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":92:13)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":92:18)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":96:23)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":96:13)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":120:23)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":102:1)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":123:1)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":103:1)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":104:5)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":122:5)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":105:9)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":105:16)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":109:9)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":121:9)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":109:13)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":109:20)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":109:39)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":109:41)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":109:44)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":109:51)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":110:9)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":117:9)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":119:9)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":111:32)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":111:39)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":111:44)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":111:55)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":111:56)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":111:13)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":112:13)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":112:45)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":112:17)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":112:29)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":112:35)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":112:36)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":112:42)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":112:41)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":114:13)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":114:20)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":114:30)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":115:23)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":115:13)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":116:13)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":116:18)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_54e.c":120:13)
#loc134 = loc(fused[#loc1, #loc2])
#loc135 = loc(fused[#loc3, #loc4])
#loc136 = loc(fused[#loc5, #loc6])
#loc137 = loc(fused[#loc8, #loc9])
#loc138 = loc(fused[#loc10, #loc11])
#loc139 = loc(fused[#loc13, #loc14])
#loc141 = loc(fused[#loc18, #loc19])
#loc142 = loc(fused[#loc20, #loc21])
#loc143 = loc(fused[#loc22, #loc23])
#loc144 = loc(fused[#loc25, #loc26])
#loc145 = loc(fused[#loc24, #loc26])
#loc146 = loc(fused[#loc27, #loc28, #loc29, #loc23])
#loc147 = loc(fused[#loc32, #loc33])
#loc148 = loc(fused[#loc31, #loc33])
#loc149 = loc(fused[#loc30, #loc34])
#loc150 = loc(fused[#loc35, #loc34])
#loc151 = loc(fused[#loc36, #loc37])
#loc152 = loc(fused[#loc38, #loc39])
#loc153 = loc(fused[#loc40, #loc37])
#loc154 = loc(fused[#loc51, #loc52])
#loc156 = loc(fused[#loc56, #loc57])
#loc157 = loc(fused[#loc58, #loc59])
#loc158 = loc(fused[#loc60, #loc61])
#loc159 = loc(fused[#loc63, #loc64])
#loc160 = loc(fused[#loc62, #loc64])
#loc161 = loc(fused[#loc65, #loc66, #loc67, #loc61])
#loc162 = loc(fused[#loc70, #loc71])
#loc163 = loc(fused[#loc69, #loc71])
#loc164 = loc(fused[#loc68, #loc72])
#loc165 = loc(fused[#loc73, #loc72])
#loc166 = loc(fused[#loc74, #loc75])
#loc167 = loc(fused[#loc76, #loc77])
#loc168 = loc(fused[#loc78, #loc75])
#loc169 = loc(fused[#loc92, #loc93])
#loc171 = loc(fused[#loc97, #loc98])
#loc172 = loc(fused[#loc99, #loc100])
#loc173 = loc(fused[#loc101, #loc102])
#loc174 = loc(fused[#loc104, #loc105])
#loc175 = loc(fused[#loc103, #loc105])
#loc176 = loc(fused[#loc107, #loc108])
#loc177 = loc(fused[#loc109, #loc110, #loc111, #loc102])
#loc178 = loc(fused[#loc114, #loc115])
#loc179 = loc(fused[#loc113, #loc115])
#loc180 = loc(fused[#loc112, #loc116])
#loc181 = loc(fused[#loc117, #loc116])
#loc182 = loc(fused[#loc118, #loc119])
#loc183 = loc(fused[#loc120, #loc121])
#loc184 = loc(fused[#loc122, #loc119])
