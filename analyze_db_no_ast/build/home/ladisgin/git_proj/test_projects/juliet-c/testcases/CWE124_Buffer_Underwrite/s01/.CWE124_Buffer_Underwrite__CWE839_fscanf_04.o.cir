!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_fscanf_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc285)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc286)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private  @printIntLine(!s32i) loc(#loc287)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc288)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc10)
  cir.func no_proto  @CWE124_Buffer_Underwrite__CWE839_fscanf_04_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc290)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc16)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc291)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc20)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc20)
      cir.if %4 {
        %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc22)
        %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc286)
        %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc23)
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
        %10 = cir.call @__isoc99_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc22)
      } loc(#loc293)
    } loc(#loc292)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc26)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc26)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc297)
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc298)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc298)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc298)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc36)
            %9 = cir.const #cir.int<10> : !s32i loc(#loc37)
            %10 = cir.cmp(lt, %8, %9) : !s32i, !s32i loc(#loc300)
            %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc38)
            cir.if %11 {
              %12 = cir.const #cir.int<1> : !s32i loc(#loc42)
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc43)
              %14 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc44)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc44)
              cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc302)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc47)
                cir.store %16, %5 : !s32i, !cir.ptr<!s32i> loc(#loc304)
                cir.for : cond {
                  %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc49)
                  %18 = cir.const #cir.int<10> : !s32i loc(#loc50)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !s32i loc(#loc305)
                  %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc51)
                  cir.condition(%20) loc(#loc51)
                } body {
                  cir.scope {
                    %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc53)
                    %18 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc54)
                    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc54)
                    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc54)
                    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc55)
                  } loc(#loc306)
                  cir.yield loc(#loc46)
                } step {
                  %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc56)
                  %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc57)
                  cir.store %18, %5 : !s32i, !cir.ptr<!s32i> loc(#loc307)
                  cir.yield loc(#loc303)
                } loc(#loc303)
              } loc(#loc303)
            } else {
              %12 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc10)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc10)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc58)
            } loc(#loc301)
          } loc(#loc299)
        } loc(#loc296)
      } loc(#loc295)
    } loc(#loc294)
    cir.return loc(#loc12)
  } loc(#loc289)
  cir.func no_proto  @CWE124_Buffer_Underwrite__CWE839_fscanf_04_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc309)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc61)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc310)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc63)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc311)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc65)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc312)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc67)
    cir.return loc(#loc60)
  } loc(#loc308)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc69)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc70)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc314)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc75)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc76)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc315)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc80)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc80)
      cir.if %4 {
        %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc82)
        %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc286)
        %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc83)
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc84)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc84)
        %10 = cir.call @__isoc99_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc82)
      } loc(#loc317)
    } loc(#loc316)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc87)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc87)
      cir.if %4 {
        %5 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc69)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc69)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc91)
      } else {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc321)
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc322)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc322)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc322)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc100)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc101)
            %10 = cir.cmp(ge, %8, %9) : !s32i, !s32i loc(#loc324)
            %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc102)
            %12 = cir.ternary(%11, true {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc104)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc105)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !s32i loc(#loc325)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc107)
              %17 = cir.ternary(%16, true {
                %18 = cir.const #true loc(#loc103)
                cir.yield %18 : !cir.bool loc(#loc103)
              }, false {
                %18 = cir.const #false loc(#loc103)
                cir.yield %18 : !cir.bool loc(#loc103)
              }) : (!cir.bool) -> !cir.bool loc(#loc103)
              cir.yield %17 : !cir.bool loc(#loc103)
            }, false {
              %13 = cir.const #false loc(#loc103)
              cir.yield %13 : !cir.bool loc(#loc103)
            }) : (!cir.bool) -> !cir.bool loc(#loc103)
            cir.if %12 {
              %13 = cir.const #cir.int<1> : !s32i loc(#loc111)
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc112)
              %15 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc113)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc113)
              cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc327)
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc116)
                cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc329)
                cir.for : cond {
                  %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc118)
                  %19 = cir.const #cir.int<10> : !s32i loc(#loc119)
                  %20 = cir.cmp(lt, %18, %19) : !s32i, !s32i loc(#loc330)
                  %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc120)
                  cir.condition(%21) loc(#loc120)
                } body {
                  cir.scope {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc122)
                    %19 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc123)
                    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc123)
                    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc123)
                    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc124)
                  } loc(#loc331)
                  cir.yield loc(#loc115)
                } step {
                  %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc125)
                  %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc126)
                  cir.store %19, %5 : !s32i, !cir.ptr<!s32i> loc(#loc332)
                  cir.yield loc(#loc328)
                } loc(#loc328)
              } loc(#loc328)
            } else {
              %13 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc70)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc70)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc127)
            } loc(#loc326)
          } loc(#loc323)
        } loc(#loc320)
      } loc(#loc319)
    } loc(#loc318)
    cir.return loc(#loc72)
  } loc(#loc313)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc334)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc133)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc335)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc137)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc137)
      cir.if %4 {
        %5 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc139)
        %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc286)
        %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc140)
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc141)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc141)
        %10 = cir.call @__isoc99_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc139)
      } loc(#loc337)
    } loc(#loc336)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc144)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc144)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc341)
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc342)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc342)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc342)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc154)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc155)
            %10 = cir.cmp(ge, %8, %9) : !s32i, !s32i loc(#loc344)
            %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc156)
            %12 = cir.ternary(%11, true {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc158)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc159)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !s32i loc(#loc345)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc161)
              %17 = cir.ternary(%16, true {
                %18 = cir.const #true loc(#loc157)
                cir.yield %18 : !cir.bool loc(#loc157)
              }, false {
                %18 = cir.const #false loc(#loc157)
                cir.yield %18 : !cir.bool loc(#loc157)
              }) : (!cir.bool) -> !cir.bool loc(#loc157)
              cir.yield %17 : !cir.bool loc(#loc157)
            }, false {
              %13 = cir.const #false loc(#loc157)
              cir.yield %13 : !cir.bool loc(#loc157)
            }) : (!cir.bool) -> !cir.bool loc(#loc157)
            cir.if %12 {
              %13 = cir.const #cir.int<1> : !s32i loc(#loc165)
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc166)
              %15 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc167)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc167)
              cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc347)
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc170)
                cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc349)
                cir.for : cond {
                  %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc172)
                  %19 = cir.const #cir.int<10> : !s32i loc(#loc173)
                  %20 = cir.cmp(lt, %18, %19) : !s32i, !s32i loc(#loc350)
                  %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc174)
                  cir.condition(%21) loc(#loc174)
                } body {
                  cir.scope {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc176)
                    %19 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc177)
                    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc177)
                    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc177)
                    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc178)
                  } loc(#loc351)
                  cir.yield loc(#loc169)
                } step {
                  %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc179)
                  %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc180)
                  cir.store %19, %5 : !s32i, !cir.ptr<!s32i> loc(#loc352)
                  cir.yield loc(#loc348)
                } loc(#loc348)
              } loc(#loc348)
            } else {
              %13 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc181)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc181)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc182)
            } loc(#loc346)
          } loc(#loc343)
        } loc(#loc340)
      } loc(#loc339)
    } loc(#loc338)
    cir.return loc(#loc129)
  } loc(#loc333)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc354)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc187)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc188)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc355)
    cir.scope {
      %3 = cir.const #cir.int<0> : !s32i loc(#loc192)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc192)
      cir.if %4 {
        %5 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc196)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc196)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc197)
      } else {
        %5 = cir.const #cir.int<7> : !s32i loc(#loc198)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc358)
      } loc(#loc357)
    } loc(#loc356)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc202)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc202)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc362)
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc363)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc363)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc363)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc212)
            %9 = cir.const #cir.int<10> : !s32i loc(#loc213)
            %10 = cir.cmp(lt, %8, %9) : !s32i, !s32i loc(#loc365)
            %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc214)
            cir.if %11 {
              %12 = cir.const #cir.int<1> : !s32i loc(#loc218)
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc219)
              %14 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc220)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc220)
              cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc367)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc223)
                cir.store %16, %5 : !s32i, !cir.ptr<!s32i> loc(#loc369)
                cir.for : cond {
                  %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc225)
                  %18 = cir.const #cir.int<10> : !s32i loc(#loc226)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !s32i loc(#loc370)
                  %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc227)
                  cir.condition(%20) loc(#loc227)
                } body {
                  cir.scope {
                    %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc229)
                    %18 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc230)
                    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc230)
                    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc230)
                    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc231)
                  } loc(#loc371)
                  cir.yield loc(#loc222)
                } step {
                  %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc232)
                  %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc233)
                  cir.store %18, %5 : !s32i, !cir.ptr<!s32i> loc(#loc372)
                  cir.yield loc(#loc368)
                } loc(#loc368)
              } loc(#loc368)
            } else {
              %12 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc234)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc234)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc235)
            } loc(#loc366)
          } loc(#loc364)
        } loc(#loc361)
      } loc(#loc360)
    } loc(#loc359)
    cir.return loc(#loc184)
  } loc(#loc353)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc374)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc240)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc241)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc375)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc245)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc245)
      cir.if %4 {
        %5 = cir.const #cir.int<7> : !s32i loc(#loc247)
        cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc378)
      } loc(#loc377)
    } loc(#loc376)
    cir.scope {
      %3 = cir.const #cir.int<1> : !s32i loc(#loc251)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc251)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc382)
          %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc383)
          %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc383)
          cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc383)
          cir.scope {
            %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc261)
            %9 = cir.const #cir.int<10> : !s32i loc(#loc262)
            %10 = cir.cmp(lt, %8, %9) : !s32i, !s32i loc(#loc385)
            %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc263)
            cir.if %11 {
              %12 = cir.const #cir.int<1> : !s32i loc(#loc267)
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc268)
              %14 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc269)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc269)
              cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc387)
              cir.scope {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc272)
                cir.store %16, %5 : !s32i, !cir.ptr<!s32i> loc(#loc389)
                cir.for : cond {
                  %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc274)
                  %18 = cir.const #cir.int<10> : !s32i loc(#loc275)
                  %19 = cir.cmp(lt, %17, %18) : !s32i, !s32i loc(#loc390)
                  %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc276)
                  cir.condition(%20) loc(#loc276)
                } body {
                  cir.scope {
                    %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc278)
                    %18 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc279)
                    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc279)
                    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc279)
                    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc280)
                  } loc(#loc391)
                  cir.yield loc(#loc271)
                } step {
                  %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc281)
                  %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc282)
                  cir.store %18, %5 : !s32i, !cir.ptr<!s32i> loc(#loc392)
                  cir.yield loc(#loc388)
                } loc(#loc388)
              } loc(#loc388)
            } else {
              %12 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc283)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc283)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc284)
            } loc(#loc386)
          } loc(#loc384)
        } loc(#loc381)
      } loc(#loc380)
    } loc(#loc379)
    cir.return loc(#loc237)
  } loc(#loc373)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":36:23)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":56:27)
#loc11 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":28:1)
#loc12 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":60:1)
#loc13 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":30:5)
#loc14 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":30:9)
#loc15 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":32:13)
#loc16 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":32:12)
#loc17 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":32:5)
#loc18 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":33:5)
#loc19 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":37:5)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":33:8)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":34:5)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":36:9)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":36:16)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":38:5)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":59:5)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":38:8)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":39:5)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":40:9)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":58:9)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":41:13)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":41:17)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":42:13)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":42:34)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":45:13)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":57:13)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":45:17)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":45:24)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":45:22)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":46:13)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":53:13)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":55:13)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":47:32)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":47:24)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":47:17)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":49:17)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":52:17)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":49:25)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":49:21)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":49:28)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":49:32)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":49:30)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":50:17)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":51:41)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":51:34)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":51:21)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":49:37)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":49:36)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":56:17)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":216:1)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":222:1)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":218:5)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":218:14)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":219:5)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":219:14)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":220:5)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":220:14)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":221:5)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":221:14)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":80:19)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":99:27)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":67:1)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":103:1)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":69:5)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":69:9)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":71:13)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":71:12)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":71:5)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":72:5)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":76:5)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":72:8)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":73:5)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":75:9)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":75:16)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":75:23)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":77:5)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":102:5)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":77:8)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":78:5)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":81:5)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":83:5)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":80:9)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":84:9)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":101:9)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":85:13)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":85:17)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":86:13)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":86:34)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":88:13)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":100:13)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":88:17)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":88:25)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":88:22)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":88:27)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":88:30)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":88:38)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":88:40)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":88:35)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":89:13)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":96:13)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":98:13)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":90:32)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":90:24)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":90:17)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":92:17)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":95:17)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":92:25)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":92:21)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":92:28)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":92:32)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":92:30)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":93:17)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":94:41)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":94:34)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":94:21)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":92:37)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":92:36)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":99:17)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":106:1)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":137:1)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":108:5)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":108:9)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":110:13)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":110:12)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":110:5)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":111:5)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":115:5)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":111:8)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":112:5)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":114:9)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":114:16)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":114:23)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":116:5)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":136:5)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":116:8)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":117:5)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":118:9)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":135:9)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":119:13)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":119:17)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":120:13)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":120:34)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":122:13)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":134:13)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":122:17)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":122:25)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":122:22)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":122:27)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":122:30)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":122:38)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":122:40)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":122:35)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":123:13)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":130:13)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":132:13)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":124:32)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":124:24)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":124:17)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":126:17)
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":129:17)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":126:25)
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":126:21)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":126:28)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":126:32)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":126:30)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":127:17)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":128:41)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":128:34)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":128:21)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":126:37)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":126:36)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":133:27)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":133:17)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":140:1)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":178:1)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":142:5)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":142:9)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":144:13)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":144:12)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":144:5)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":145:5)
#loc191 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":155:5)
#loc192 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":145:8)
#loc193 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":146:5)
#loc194 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":149:5)
#loc195 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":151:5)
#loc196 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":148:19)
#loc197 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":148:9)
#loc198 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":154:16)
#loc199 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":154:9)
#loc200 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":156:5)
#loc201 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":177:5)
#loc202 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":156:8)
#loc203 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":157:5)
#loc204 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":158:9)
#loc205 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":176:9)
#loc206 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":159:13)
#loc207 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":159:17)
#loc208 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":160:13)
#loc209 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":160:34)
#loc210 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":163:13)
#loc211 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":175:13)
#loc212 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":163:17)
#loc213 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":163:24)
#loc214 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":163:22)
#loc215 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":164:13)
#loc216 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":171:13)
#loc217 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":173:13)
#loc218 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":165:32)
#loc219 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":165:24)
#loc220 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":165:17)
#loc221 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":167:17)
#loc222 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":170:17)
#loc223 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":167:25)
#loc224 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":167:21)
#loc225 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":167:28)
#loc226 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":167:32)
#loc227 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":167:30)
#loc228 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":168:17)
#loc229 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":169:41)
#loc230 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":169:34)
#loc231 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":169:21)
#loc232 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":167:37)
#loc233 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":167:36)
#loc234 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":174:27)
#loc235 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":174:17)
#loc236 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":181:1)
#loc237 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":214:1)
#loc238 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":183:5)
#loc239 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":183:9)
#loc240 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":185:13)
#loc241 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":185:12)
#loc242 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":185:5)
#loc243 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":186:5)
#loc244 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":191:5)
#loc245 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":186:8)
#loc246 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":187:5)
#loc247 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":190:16)
#loc248 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":190:9)
#loc249 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":192:5)
#loc250 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":213:5)
#loc251 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":192:8)
#loc252 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":193:5)
#loc253 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":194:9)
#loc254 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":212:9)
#loc255 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":195:13)
#loc256 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":195:17)
#loc257 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":196:13)
#loc258 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":196:34)
#loc259 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":199:13)
#loc260 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":211:13)
#loc261 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":199:17)
#loc262 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":199:24)
#loc263 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":199:22)
#loc264 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":200:13)
#loc265 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":207:13)
#loc266 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":209:13)
#loc267 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":201:32)
#loc268 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":201:24)
#loc269 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":201:17)
#loc270 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":203:17)
#loc271 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":206:17)
#loc272 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":203:25)
#loc273 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":203:21)
#loc274 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":203:28)
#loc275 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":203:32)
#loc276 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":203:30)
#loc277 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":204:17)
#loc278 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":205:41)
#loc279 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":205:34)
#loc280 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":205:21)
#loc281 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":203:37)
#loc282 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":203:36)
#loc283 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":210:27)
#loc284 = loc("CWE124_Buffer_Underwrite__CWE839_fscanf_04.c":210:17)
#loc285 = loc(fused[#loc1, #loc2])
#loc286 = loc(fused[#loc3, #loc4])
#loc287 = loc(fused[#loc6, #loc7])
#loc288 = loc(fused[#loc8, #loc9])
#loc289 = loc(fused[#loc11, #loc12])
#loc290 = loc(fused[#loc13, #loc14])
#loc291 = loc(fused[#loc17, #loc15])
#loc292 = loc(fused[#loc18, #loc19])
#loc293 = loc(fused[#loc21, #loc19])
#loc294 = loc(fused[#loc24, #loc25])
#loc295 = loc(fused[#loc27, #loc25])
#loc296 = loc(fused[#loc28, #loc29])
#loc297 = loc(fused[#loc30, #loc31])
#loc298 = loc(fused[#loc32, #loc33])
#loc299 = loc(fused[#loc34, #loc35])
#loc300 = loc(fused[#loc36, #loc37])
#loc301 = loc(fused[#loc39, #loc40, #loc41, #loc35])
#loc302 = loc(fused[#loc44, #loc42])
#loc303 = loc(fused[#loc45, #loc46])
#loc304 = loc(fused[#loc48, #loc47])
#loc305 = loc(fused[#loc49, #loc50])
#loc306 = loc(fused[#loc52, #loc46])
#loc307 = loc(fused[#loc57, #loc56])
#loc308 = loc(fused[#loc59, #loc60])
#loc309 = loc(fused[#loc61, #loc62])
#loc310 = loc(fused[#loc63, #loc64])
#loc311 = loc(fused[#loc65, #loc66])
#loc312 = loc(fused[#loc67, #loc68])
#loc313 = loc(fused[#loc71, #loc72])
#loc314 = loc(fused[#loc73, #loc74])
#loc315 = loc(fused[#loc77, #loc75])
#loc316 = loc(fused[#loc78, #loc79])
#loc317 = loc(fused[#loc81, #loc79])
#loc318 = loc(fused[#loc85, #loc86])
#loc319 = loc(fused[#loc88, #loc89, #loc90, #loc86])
#loc320 = loc(fused[#loc92, #loc93])
#loc321 = loc(fused[#loc94, #loc95])
#loc322 = loc(fused[#loc96, #loc97])
#loc323 = loc(fused[#loc98, #loc99])
#loc324 = loc(fused[#loc100, #loc101])
#loc325 = loc(fused[#loc104, #loc106])
#loc326 = loc(fused[#loc108, #loc109, #loc110, #loc99])
#loc327 = loc(fused[#loc113, #loc111])
#loc328 = loc(fused[#loc114, #loc115])
#loc329 = loc(fused[#loc117, #loc116])
#loc330 = loc(fused[#loc118, #loc119])
#loc331 = loc(fused[#loc121, #loc115])
#loc332 = loc(fused[#loc126, #loc125])
#loc333 = loc(fused[#loc128, #loc129])
#loc334 = loc(fused[#loc130, #loc131])
#loc335 = loc(fused[#loc134, #loc132])
#loc336 = loc(fused[#loc135, #loc136])
#loc337 = loc(fused[#loc138, #loc136])
#loc338 = loc(fused[#loc142, #loc143])
#loc339 = loc(fused[#loc145, #loc143])
#loc340 = loc(fused[#loc146, #loc147])
#loc341 = loc(fused[#loc148, #loc149])
#loc342 = loc(fused[#loc150, #loc151])
#loc343 = loc(fused[#loc152, #loc153])
#loc344 = loc(fused[#loc154, #loc155])
#loc345 = loc(fused[#loc158, #loc160])
#loc346 = loc(fused[#loc162, #loc163, #loc164, #loc153])
#loc347 = loc(fused[#loc167, #loc165])
#loc348 = loc(fused[#loc168, #loc169])
#loc349 = loc(fused[#loc171, #loc170])
#loc350 = loc(fused[#loc172, #loc173])
#loc351 = loc(fused[#loc175, #loc169])
#loc352 = loc(fused[#loc180, #loc179])
#loc353 = loc(fused[#loc183, #loc184])
#loc354 = loc(fused[#loc185, #loc186])
#loc355 = loc(fused[#loc189, #loc187])
#loc356 = loc(fused[#loc190, #loc191])
#loc357 = loc(fused[#loc193, #loc194, #loc195, #loc191])
#loc358 = loc(fused[#loc199, #loc198])
#loc359 = loc(fused[#loc200, #loc201])
#loc360 = loc(fused[#loc203, #loc201])
#loc361 = loc(fused[#loc204, #loc205])
#loc362 = loc(fused[#loc206, #loc207])
#loc363 = loc(fused[#loc208, #loc209])
#loc364 = loc(fused[#loc210, #loc211])
#loc365 = loc(fused[#loc212, #loc213])
#loc366 = loc(fused[#loc215, #loc216, #loc217, #loc211])
#loc367 = loc(fused[#loc220, #loc218])
#loc368 = loc(fused[#loc221, #loc222])
#loc369 = loc(fused[#loc224, #loc223])
#loc370 = loc(fused[#loc225, #loc226])
#loc371 = loc(fused[#loc228, #loc222])
#loc372 = loc(fused[#loc233, #loc232])
#loc373 = loc(fused[#loc236, #loc237])
#loc374 = loc(fused[#loc238, #loc239])
#loc375 = loc(fused[#loc242, #loc240])
#loc376 = loc(fused[#loc243, #loc244])
#loc377 = loc(fused[#loc246, #loc244])
#loc378 = loc(fused[#loc248, #loc247])
#loc379 = loc(fused[#loc249, #loc250])
#loc380 = loc(fused[#loc252, #loc250])
#loc381 = loc(fused[#loc253, #loc254])
#loc382 = loc(fused[#loc255, #loc256])
#loc383 = loc(fused[#loc257, #loc258])
#loc384 = loc(fused[#loc259, #loc260])
#loc385 = loc(fused[#loc261, #loc262])
#loc386 = loc(fused[#loc264, #loc265, #loc266, #loc260])
#loc387 = loc(fused[#loc269, #loc267])
#loc388 = loc(fused[#loc270, #loc271])
#loc389 = loc(fused[#loc273, #loc272])
#loc390 = loc(fused[#loc274, #loc275])
#loc391 = loc(fused[#loc277, #loc271])
#loc392 = loc(fused[#loc282, #loc281])
