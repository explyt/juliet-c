!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_53d.c":22:59)
#loc6 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_53d.c":22:63)
#loc13 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_53d.c":33:63)
#loc14 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_53d.c":33:67)
#loc24 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_53d.c":40:63)
#loc25 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_53d.c":40:67)
#loc40 = loc(fused[#loc5, #loc6])
#loc43 = loc(fused[#loc13, #loc14])
#loc47 = loc(fused[#loc24, #loc25])
module @"/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_fscanf_modulo_53d.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @printIntLine(!s32i) loc(#loc38)
  cir.func @CWE369_Divide_by_Zero__int_fscanf_modulo_53d_badSink(%arg0: !s32i loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc40)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc7)
    %1 = cir.const #cir.int<100> : !s32i loc(#loc8)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc9)
    %3 = cir.binop(rem, %1, %2) : !s32i loc(#loc41)
    cir.call @printIntLine(%3) : (!s32i) -> () loc(#loc10)
    cir.return loc(#loc4)
  } loc(#loc39)
  cir.func @CWE369_Divide_by_Zero__int_fscanf_modulo_53d_goodG2BSink(%arg0: !s32i loc(fused[#loc13, #loc14])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc43)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc15)
    %1 = cir.const #cir.int<100> : !s32i loc(#loc16)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc17)
    %3 = cir.binop(rem, %1, %2) : !s32i loc(#loc44)
    cir.call @printIntLine(%3) : (!s32i) -> () loc(#loc18)
    cir.return loc(#loc12)
  } loc(#loc42)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc21)
  cir.func @CWE369_Divide_by_Zero__int_fscanf_modulo_53d_goodB2GSink(%arg0: !s32i loc(fused[#loc24, #loc25])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc47)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc26)
    cir.br ^bb1 loc(#loc48)
  ^bb1:  // pred: ^bb0
    %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc29)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %3 = cir.cmp(ne, %1, %2) : !s32i, !cir.bool loc(#loc49)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc50)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<100> : !s32i loc(#loc34)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc35)
    %6 = cir.binop(rem, %4, %5) : !s32i loc(#loc51)
    cir.call @printIntLine(%6) : (!s32i) -> () loc(#loc36)
    cir.br ^bb4 loc(#loc32)
  ^bb3:  // pred: ^bb1
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc21)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc21)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc37)
    cir.br ^bb4 loc(#loc28)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc28)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc23)
  } loc(#loc46)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_fscanf_modulo_53d.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_53d.c":22:1)
#loc4 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_53d.c":26:1)
#loc7 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_53d.c":23:1)
#loc8 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_53d.c":25:18)
#loc9 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_53d.c":25:24)
#loc10 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_53d.c":25:5)
#loc11 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_53d.c":33:1)
#loc12 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_53d.c":37:1)
#loc15 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_53d.c":34:1)
#loc16 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_53d.c":36:18)
#loc17 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_53d.c":36:24)
#loc18 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_53d.c":36:5)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc21 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_53d.c":49:19)
#loc22 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_53d.c":40:1)
#loc23 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_53d.c":51:1)
#loc26 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_53d.c":41:1)
#loc27 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_53d.c":43:5)
#loc28 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_53d.c":50:5)
#loc29 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_53d.c":43:9)
#loc30 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_53d.c":43:17)
#loc31 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_53d.c":44:5)
#loc32 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_53d.c":46:5)
#loc33 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_53d.c":48:5)
#loc34 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_53d.c":45:22)
#loc35 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_53d.c":45:28)
#loc36 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_53d.c":45:9)
#loc37 = loc("CWE369_Divide_by_Zero__int_fscanf_modulo_53d.c":49:9)
#loc38 = loc(fused[#loc1, #loc2])
#loc39 = loc(fused[#loc3, #loc4])
#loc41 = loc(fused[#loc8, #loc9])
#loc42 = loc(fused[#loc11, #loc12])
#loc44 = loc(fused[#loc16, #loc17])
#loc45 = loc(fused[#loc19, #loc20])
#loc46 = loc(fused[#loc22, #loc23])
#loc48 = loc(fused[#loc27, #loc28])
#loc49 = loc(fused[#loc29, #loc30])
#loc50 = loc(fused[#loc31, #loc32, #loc33, #loc28])
#loc51 = loc(fused[#loc34, #loc35])
