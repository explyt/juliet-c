!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc41 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":71:10)
#loc42 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":71:14)
#loc43 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":71:20)
#loc44 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":71:32)
#loc93 = loc(fused[#loc41, #loc42])
#loc94 = loc(fused[#loc43, #loc44])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE468_Incorrect_Pointer_Scaling/CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.good1.intArray = #cir.const_array<[#cir.int<1> : !s32i, #cir.int<2> : !s32i, #cir.int<3> : !s32i, #cir.int<4> : !s32i, #cir.int<5> : !s32i]> : !cir.array<!s32i x 5> loc(#loc79)
  cir.global "private" constant cir_private @__const.CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16_bad.intArray = #cir.const_array<[#cir.int<1> : !s32i, #cir.int<2> : !s32i, #cir.int<3> : !s32i, #cir.int<4> : !s32i, #cir.int<5> : !s32i]> : !cir.array<!s32i x 5> loc(#loc80)
  cir.func private @printIntLine(!s32i) loc(#loc81)
  cir.func no_proto @CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16_bad() extra(#fn_attr) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc11)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc11)
        cir.condition(%1) loc(#loc11)
      } do {
        cir.scope {
          %0 = cir.alloca !cir.array<!s32i x 5>, !cir.ptr<!cir.array<!s32i x 5>>, ["intArray"] {alignment = 16 : i64} loc(#loc80)
          %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["charPointer", init] {alignment = 8 : i64} loc(#loc85)
          %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["toPrint", init] {alignment = 4 : i64} loc(#loc86)
          %3 = cir.get_global @__const.CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16_bad.intArray : !cir.ptr<!cir.array<!s32i x 5>> loc(#loc80)
          cir.copy %3 to %0 : !cir.ptr<!cir.array<!s32i x 5>> loc(#loc80)
          %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc15)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!s32i>), !cir.ptr<!s8i> loc(#loc15)
          cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc85)
          %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
          %7 = cir.const #cir.int<2> : !s32i loc(#loc19)
          %8 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc20)
          %9 = cir.load %8 : !cir.ptr<!s8i>, !s8i loc(#loc21)
          %10 = cir.cast(integral, %9 : !s8i), !s32i loc(#loc21)
          cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc86)
          %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc22)
          cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc23)
        } loc(#loc84)
        cir.break loc(#loc24)
      } loc(#loc83)
    } loc(#loc83)
    cir.return loc(#loc8)
  } loc(#loc82)
  cir.func no_proto @CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc88)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc27)
    cir.return loc(#loc26)
  } loc(#loc87)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc89)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc90)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc91)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc35)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc36)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc37)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc38)
  cir.func @main(%arg0: !s32i loc(fused[#loc41, #loc42]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc43, #loc44])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc93)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc94)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc40)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc45)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc45)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc46)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc47)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc47)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc48)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc35)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc35)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    %8 = cir.get_global @CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc95)
    cir.call @CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16_good() : () -> () loc(#loc50)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc36)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc37)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    %13 = cir.get_global @CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc96)
    cir.call @CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16_bad() : () -> () loc(#loc54)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc38)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc57)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc97)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    cir.return %17 : !s32i loc(#loc97)
  } loc(#loc92)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc63)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc63)
        cir.condition(%1) loc(#loc63)
      } do {
        cir.scope {
          %0 = cir.alloca !cir.array<!s32i x 5>, !cir.ptr<!cir.array<!s32i x 5>>, ["intArray"] {alignment = 16 : i64} loc(#loc79)
          %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["charPointer", init] {alignment = 8 : i64} loc(#loc101)
          %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["toPrint", init] {alignment = 4 : i64} loc(#loc102)
          %3 = cir.get_global @__const.good1.intArray : !cir.ptr<!cir.array<!s32i x 5>> loc(#loc79)
          cir.copy %3 to %0 : !cir.ptr<!cir.array<!s32i x 5>> loc(#loc79)
          %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc67)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!s32i>), !cir.ptr<!s8i> loc(#loc67)
          cir.store %5, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc101)
          %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
          %7 = cir.const #cir.int<2> : !s32i loc(#loc71)
          %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc71)
          %9 = cir.const #cir.int<4> : !u64i loc(#loc103)
          %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc104)
          %11 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %10 : !u64i), !cir.ptr<!s8i> loc(#loc74)
          %12 = cir.load %11 : !cir.ptr<!s8i>, !s8i loc(#loc75)
          %13 = cir.cast(integral, %12 : !s8i), !s32i loc(#loc75)
          cir.store %13, %2 : !s32i, !cir.ptr<!s32i> loc(#loc102)
          %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc76)
          cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc77)
        } loc(#loc100)
        cir.break loc(#loc78)
      } loc(#loc99)
    } loc(#loc99)
    cir.return loc(#loc60)
  } loc(#loc98)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE468_Incorrect_Pointer_Scaling/CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":0:0)
#loc1 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":46:13)
#loc2 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":46:47)
#loc3 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":25:13)
#loc4 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":25:47)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":20:1)
#loc8 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":34:1)
#loc9 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":22:5)
#loc10 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":33:5)
#loc11 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":22:11)
#loc12 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":24:9)
#loc13 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":31:9)
#loc14 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":26:13)
#loc15 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":26:41)
#loc16 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":29:13)
#loc17 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":29:50)
#loc18 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":29:36)
#loc19 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":29:48)
#loc20 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":29:47)
#loc21 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":29:34)
#loc22 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":30:26)
#loc23 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":30:13)
#loc24 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":32:9)
#loc25 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":57:1)
#loc26 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":60:1)
#loc27 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":59:5)
#loc28 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":59:11)
#loc29 = loc("/usr/include/stdlib.h":575:1)
#loc30 = loc("/usr/include/stdlib.h":575:41)
#loc31 = loc("/usr/include/time.h":76:1)
#loc32 = loc("/usr/include/time.h":76:38)
#loc33 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc34 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc35 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":76:15)
#loc36 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":78:15)
#loc37 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":81:15)
#loc38 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":83:15)
#loc39 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":71:1)
#loc40 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":86:1)
#loc45 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":72:1)
#loc46 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":74:27)
#loc47 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":74:22)
#loc48 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":74:5)
#loc49 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":76:5)
#loc50 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":77:5)
#loc51 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":77:63)
#loc52 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":78:5)
#loc53 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":81:5)
#loc54 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":82:5)
#loc55 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":82:62)
#loc56 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":83:5)
#loc57 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":85:12)
#loc58 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":85:5)
#loc59 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":41:1)
#loc60 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":55:1)
#loc61 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":43:5)
#loc62 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":54:5)
#loc63 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":43:11)
#loc64 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":45:9)
#loc65 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":52:9)
#loc66 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":47:13)
#loc67 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":47:41)
#loc68 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":50:13)
#loc69 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":50:64)
#loc70 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":50:36)
#loc71 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":50:49)
#loc72 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":50:51)
#loc73 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":50:61)
#loc74 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":50:47)
#loc75 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":50:34)
#loc76 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":51:26)
#loc77 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":51:13)
#loc78 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":53:9)
#loc79 = loc(fused[#loc1, #loc2])
#loc80 = loc(fused[#loc3, #loc4])
#loc81 = loc(fused[#loc5, #loc6])
#loc82 = loc(fused[#loc7, #loc8])
#loc83 = loc(fused[#loc9, #loc10])
#loc84 = loc(fused[#loc12, #loc13])
#loc85 = loc(fused[#loc14, #loc15])
#loc86 = loc(fused[#loc16, #loc17])
#loc87 = loc(fused[#loc25, #loc26])
#loc88 = loc(fused[#loc27, #loc28])
#loc89 = loc(fused[#loc29, #loc30])
#loc90 = loc(fused[#loc31, #loc32])
#loc91 = loc(fused[#loc33, #loc34])
#loc92 = loc(fused[#loc39, #loc40])
#loc95 = loc(fused[#loc50, #loc51])
#loc96 = loc(fused[#loc54, #loc55])
#loc97 = loc(fused[#loc58, #loc57])
#loc98 = loc(fused[#loc59, #loc60])
#loc99 = loc(fused[#loc61, #loc62])
#loc100 = loc(fused[#loc64, #loc65])
#loc101 = loc(fused[#loc66, #loc67])
#loc102 = loc(fused[#loc68, #loc69])
#loc103 = loc(fused[#loc72, #loc73])
#loc104 = loc(fused[#loc71, #loc73])
