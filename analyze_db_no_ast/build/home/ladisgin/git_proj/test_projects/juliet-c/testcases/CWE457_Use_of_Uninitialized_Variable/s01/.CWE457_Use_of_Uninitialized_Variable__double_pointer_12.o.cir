!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func no_proto private  @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc189)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc190)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc191)
  cir.func private  @printDoubleLine(!cir.double) loc(#loc192)
  cir.func no_proto  @CWE457_Use_of_Uninitialized_Variable__double_pointer_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc194)
    cir.scope {
      %1 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc196)
      %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc196)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc15)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc15)
      cir.if %4 {
      } else {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc20)
        %6 = cir.const #cir.int<8> : !u64i loc(#loc198)
        %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc199)
        cir.store %8, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc200)
        cir.scope {
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc27)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc28)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc28)
          %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!cir.double>, !s32i loc(#loc202)
          %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc29)
          cir.if %15 {
            %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc31)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc32)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc33)
            cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
          } loc(#loc203)
        } loc(#loc201)
        %9 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc34)
        %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc35)
        cir.store %9, %10 : !cir.double, !cir.ptr<!cir.double> loc(#loc204)
      } loc(#loc197)
    } loc(#loc195)
    cir.scope {
      %1 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc206)
      %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc206)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc39)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc39)
      cir.if %4 {
        %5 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc44)
        %6 = cir.load %5 : !cir.ptr<!cir.double>, !cir.double loc(#loc45)
        cir.call @printDoubleLine(%6) : (!cir.double) -> () loc(#loc46)
      } else {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc47)
        %6 = cir.const #cir.int<8> : !u64i loc(#loc208)
        %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc47)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc209)
        cir.store %8, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc210)
        cir.scope {
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc54)
          %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc55)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc55)
          %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!cir.double>, !s32i loc(#loc212)
          %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc56)
          cir.if %17 {
            %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc58)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc59)
            %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc60)
            cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc58)
          } loc(#loc213)
        } loc(#loc211)
        %9 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc61)
        %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc62)
        cir.store %9, %10 : !cir.double, !cir.ptr<!cir.double> loc(#loc214)
        %11 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc64)
        %12 = cir.load %11 : !cir.ptr<!cir.double>, !cir.double loc(#loc65)
        cir.call @printDoubleLine(%12) : (!cir.double) -> () loc(#loc66)
      } loc(#loc207)
    } loc(#loc205)
    cir.return loc(#loc10)
  } loc(#loc193)
  cir.func no_proto  @CWE457_Use_of_Uninitialized_Variable__double_pointer_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc216)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc69)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc217)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc71)
    cir.return loc(#loc68)
  } loc(#loc215)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc219)
    cir.scope {
      %1 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc221)
      %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc221)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc79)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc79)
      cir.if %4 {
      } else {
      } loc(#loc222)
    } loc(#loc220)
    cir.scope {
      %1 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc224)
      %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc224)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc86)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc86)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc91)
        %6 = cir.const #cir.int<8> : !u64i loc(#loc226)
        %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc91)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc227)
        cir.store %8, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc228)
        cir.scope {
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc98)
          %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc99)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc99)
          %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!cir.double>, !s32i loc(#loc230)
          %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc100)
          cir.if %17 {
            %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc102)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc103)
            %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc104)
            cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc102)
          } loc(#loc231)
        } loc(#loc229)
        %9 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc105)
        %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc106)
        cir.store %9, %10 : !cir.double, !cir.ptr<!cir.double> loc(#loc232)
        %11 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc108)
        %12 = cir.load %11 : !cir.ptr<!cir.double>, !cir.double loc(#loc109)
        cir.call @printDoubleLine(%12) : (!cir.double) -> () loc(#loc110)
      } else {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc111)
        %6 = cir.const #cir.int<8> : !u64i loc(#loc233)
        %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc111)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc234)
        cir.store %8, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc235)
        cir.scope {
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc118)
          %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc119)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc119)
          %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!cir.double>, !s32i loc(#loc237)
          %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc120)
          cir.if %17 {
            %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc122)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc123)
            %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc124)
            cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc122)
          } loc(#loc238)
        } loc(#loc236)
        %9 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc125)
        %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc126)
        cir.store %9, %10 : !cir.double, !cir.ptr<!cir.double> loc(#loc239)
        %11 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc128)
        %12 = cir.load %11 : !cir.ptr<!cir.double>, !cir.double loc(#loc129)
        cir.call @printDoubleLine(%12) : (!cir.double) -> () loc(#loc130)
      } loc(#loc225)
    } loc(#loc223)
    cir.return loc(#loc74)
  } loc(#loc218)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc241)
    cir.scope {
      %1 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc243)
      %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc243)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc137)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc137)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc142)
        %6 = cir.const #cir.int<8> : !u64i loc(#loc245)
        %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc142)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc246)
        cir.store %8, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc247)
        cir.scope {
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc149)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc150)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc150)
          %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!cir.double>, !s32i loc(#loc249)
          %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc151)
          cir.if %15 {
            %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc153)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc154)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc155)
            cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc153)
          } loc(#loc250)
        } loc(#loc248)
        %9 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc156)
        %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc157)
        cir.store %9, %10 : !cir.double, !cir.ptr<!cir.double> loc(#loc251)
      } else {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc159)
        %6 = cir.const #cir.int<8> : !u64i loc(#loc252)
        %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc159)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc253)
        cir.store %8, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc254)
        cir.scope {
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc166)
          %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc167)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc167)
          %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!cir.double>, !s32i loc(#loc256)
          %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc168)
          cir.if %15 {
            %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc170)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc171)
            %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc172)
            cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc170)
          } loc(#loc257)
        } loc(#loc255)
        %9 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc173)
        %10 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc174)
        cir.store %9, %10 : !cir.double, !cir.ptr<!cir.double> loc(#loc258)
      } loc(#loc244)
    } loc(#loc242)
    cir.scope {
      %1 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc260)
      %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc260)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc178)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc178)
      cir.if %4 {
        %5 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc183)
        %6 = cir.load %5 : !cir.ptr<!cir.double>, !cir.double loc(#loc184)
        cir.call @printDoubleLine(%6) : (!cir.double) -> () loc(#loc185)
      } else {
        %5 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc186)
        %6 = cir.load %5 : !cir.ptr<!cir.double>, !cir.double loc(#loc187)
        cir.call @printDoubleLine(%6) : (!cir.double) -> () loc(#loc188)
      } loc(#loc261)
    } loc(#loc259)
    cir.return loc(#loc132)
  } loc(#loc240)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":38:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":38:41)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":24:1)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":54:1)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":26:5)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":26:14)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":27:5)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":39:5)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":27:8)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":27:33)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":28:5)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":31:5)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":33:5)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":36:26)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":36:33)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":36:46)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":36:47)
#loc24 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":36:9)
#loc25 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":37:9)
#loc26 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":37:37)
#loc27 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":37:13)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":37:21)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":37:18)
#loc30 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":37:27)
#loc31 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":37:28)
#loc32 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":37:34)
#loc33 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":37:33)
#loc34 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":38:17)
#loc35 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":38:10)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":38:9)
#loc37 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":40:5)
#loc38 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":53:5)
#loc39 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":40:8)
#loc40 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":40:33)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":41:5)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":44:5)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":46:5)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":43:26)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":43:25)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":43:9)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":49:26)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":49:33)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":49:46)
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":49:47)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":49:9)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":50:9)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":50:37)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":50:13)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":50:21)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":50:18)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":50:27)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":50:28)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":50:34)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":50:33)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":51:17)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":51:10)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":51:9)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":52:26)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":52:25)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":52:9)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":130:1)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":134:1)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":132:5)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":132:13)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":133:5)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":133:13)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":63:1)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":94:1)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":65:5)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":65:14)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":66:5)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":75:5)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":66:8)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":66:33)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":67:5)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":70:5)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":72:5)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":76:5)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":93:5)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":76:8)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":76:33)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":77:5)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":84:5)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":86:5)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":80:26)
#loc92 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":80:33)
#loc93 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":80:46)
#loc94 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":80:47)
#loc95 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":80:9)
#loc96 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":81:9)
#loc97 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":81:37)
#loc98 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":81:13)
#loc99 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":81:21)
#loc100 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":81:18)
#loc101 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":81:27)
#loc102 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":81:28)
#loc103 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":81:34)
#loc104 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":81:33)
#loc105 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":82:17)
#loc106 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":82:10)
#loc107 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":82:9)
#loc108 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":83:26)
#loc109 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":83:25)
#loc110 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":83:9)
#loc111 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":89:26)
#loc112 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":89:33)
#loc113 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":89:46)
#loc114 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":89:47)
#loc115 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":89:9)
#loc116 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":90:9)
#loc117 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":90:37)
#loc118 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":90:13)
#loc119 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":90:21)
#loc120 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":90:18)
#loc121 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":90:27)
#loc122 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":90:28)
#loc123 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":90:34)
#loc124 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":90:33)
#loc125 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":91:17)
#loc126 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":91:10)
#loc127 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":91:9)
#loc128 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":92:26)
#loc129 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":92:25)
#loc130 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":92:9)
#loc131 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":99:1)
#loc132 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":128:1)
#loc133 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":101:5)
#loc134 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":101:14)
#loc135 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":102:5)
#loc136 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":117:5)
#loc137 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":102:8)
#loc138 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":102:33)
#loc139 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":103:5)
#loc140 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":109:5)
#loc141 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":111:5)
#loc142 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":106:26)
#loc143 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":106:33)
#loc144 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":106:46)
#loc145 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":106:47)
#loc146 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":106:9)
#loc147 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":107:9)
#loc148 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":107:37)
#loc149 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":107:13)
#loc150 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":107:21)
#loc151 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":107:18)
#loc152 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":107:27)
#loc153 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":107:28)
#loc154 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":107:34)
#loc155 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":107:33)
#loc156 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":108:17)
#loc157 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":108:10)
#loc158 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":108:9)
#loc159 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":114:26)
#loc160 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":114:33)
#loc161 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":114:46)
#loc162 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":114:47)
#loc163 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":114:9)
#loc164 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":115:9)
#loc165 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":115:37)
#loc166 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":115:13)
#loc167 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":115:21)
#loc168 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":115:18)
#loc169 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":115:27)
#loc170 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":115:28)
#loc171 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":115:34)
#loc172 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":115:33)
#loc173 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":116:17)
#loc174 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":116:10)
#loc175 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":116:9)
#loc176 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":118:5)
#loc177 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":127:5)
#loc178 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":118:8)
#loc179 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":118:33)
#loc180 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":119:5)
#loc181 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":122:5)
#loc182 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":124:5)
#loc183 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":121:26)
#loc184 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":121:25)
#loc185 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":121:9)
#loc186 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":126:26)
#loc187 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":126:25)
#loc188 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_12.c":126:9)
#loc189 = loc(fused[#loc1, #loc2])
#loc190 = loc(fused[#loc3, #loc4])
#loc191 = loc(fused[#loc5, #loc6])
#loc192 = loc(fused[#loc7, #loc8])
#loc193 = loc(fused[#loc9, #loc10])
#loc194 = loc(fused[#loc11, #loc12])
#loc195 = loc(fused[#loc13, #loc14])
#loc196 = loc(fused[#loc15, #loc16])
#loc197 = loc(fused[#loc17, #loc18, #loc19, #loc14])
#loc198 = loc(fused[#loc21, #loc22])
#loc199 = loc(fused[#loc20, #loc23])
#loc200 = loc(fused[#loc24, #loc23])
#loc201 = loc(fused[#loc25, #loc26])
#loc202 = loc(fused[#loc27, #loc28])
#loc203 = loc(fused[#loc30, #loc26])
#loc204 = loc(fused[#loc36, #loc34])
#loc205 = loc(fused[#loc37, #loc38])
#loc206 = loc(fused[#loc39, #loc40])
#loc207 = loc(fused[#loc41, #loc42, #loc43, #loc38])
#loc208 = loc(fused[#loc48, #loc49])
#loc209 = loc(fused[#loc47, #loc50])
#loc210 = loc(fused[#loc51, #loc50])
#loc211 = loc(fused[#loc52, #loc53])
#loc212 = loc(fused[#loc54, #loc55])
#loc213 = loc(fused[#loc57, #loc53])
#loc214 = loc(fused[#loc63, #loc61])
#loc215 = loc(fused[#loc67, #loc68])
#loc216 = loc(fused[#loc69, #loc70])
#loc217 = loc(fused[#loc71, #loc72])
#loc218 = loc(fused[#loc73, #loc74])
#loc219 = loc(fused[#loc75, #loc76])
#loc220 = loc(fused[#loc77, #loc78])
#loc221 = loc(fused[#loc79, #loc80])
#loc222 = loc(fused[#loc81, #loc82, #loc83, #loc78])
#loc223 = loc(fused[#loc84, #loc85])
#loc224 = loc(fused[#loc86, #loc87])
#loc225 = loc(fused[#loc88, #loc89, #loc90, #loc85])
#loc226 = loc(fused[#loc92, #loc93])
#loc227 = loc(fused[#loc91, #loc94])
#loc228 = loc(fused[#loc95, #loc94])
#loc229 = loc(fused[#loc96, #loc97])
#loc230 = loc(fused[#loc98, #loc99])
#loc231 = loc(fused[#loc101, #loc97])
#loc232 = loc(fused[#loc107, #loc105])
#loc233 = loc(fused[#loc112, #loc113])
#loc234 = loc(fused[#loc111, #loc114])
#loc235 = loc(fused[#loc115, #loc114])
#loc236 = loc(fused[#loc116, #loc117])
#loc237 = loc(fused[#loc118, #loc119])
#loc238 = loc(fused[#loc121, #loc117])
#loc239 = loc(fused[#loc127, #loc125])
#loc240 = loc(fused[#loc131, #loc132])
#loc241 = loc(fused[#loc133, #loc134])
#loc242 = loc(fused[#loc135, #loc136])
#loc243 = loc(fused[#loc137, #loc138])
#loc244 = loc(fused[#loc139, #loc140, #loc141, #loc136])
#loc245 = loc(fused[#loc143, #loc144])
#loc246 = loc(fused[#loc142, #loc145])
#loc247 = loc(fused[#loc146, #loc145])
#loc248 = loc(fused[#loc147, #loc148])
#loc249 = loc(fused[#loc149, #loc150])
#loc250 = loc(fused[#loc152, #loc148])
#loc251 = loc(fused[#loc158, #loc156])
#loc252 = loc(fused[#loc160, #loc161])
#loc253 = loc(fused[#loc159, #loc162])
#loc254 = loc(fused[#loc163, #loc162])
#loc255 = loc(fused[#loc164, #loc165])
#loc256 = loc(fused[#loc166, #loc167])
#loc257 = loc(fused[#loc169, #loc165])
#loc258 = loc(fused[#loc175, #loc173])
#loc259 = loc(fused[#loc176, #loc177])
#loc260 = loc(fused[#loc178, #loc179])
#loc261 = loc(fused[#loc180, #loc181, #loc182, #loc177])
