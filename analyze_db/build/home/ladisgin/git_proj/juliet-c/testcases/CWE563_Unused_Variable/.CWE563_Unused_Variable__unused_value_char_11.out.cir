!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc47 = loc("CWE563_Unused_Variable__unused_value_char_11.c":139:10)
#loc48 = loc("CWE563_Unused_Variable__unused_value_char_11.c":139:14)
#loc49 = loc("CWE563_Unused_Variable__unused_value_char_11.c":139:20)
#loc50 = loc("CWE563_Unused_Variable__unused_value_char_11.c":139:32)
#loc176 = loc(fused[#loc47, #loc48])
#loc177 = loc(fused[#loc49, #loc50])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE563_Unused_Variable/CWE563_Unused_Variable__unused_value_char_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc155)
  cir.func private @printHexCharLine(!s8i) loc(#loc156)
  cir.func no_proto @CWE563_Unused_Variable__unused_value_char_11_bad() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc158)
    cir.scope {
      %1 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc160)
      %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc160)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc11)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc11)
      cir.if %4 {
        %5 = cir.const #cir.int<67> : !s32i loc(#loc14)
        %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc14)
        cir.store %6, %0 : !s8i, !cir.ptr<!s8i> loc(#loc162)
      } loc(#loc161)
    } loc(#loc159)
    cir.scope {
      %1 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc164)
      %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc164)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc18)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc18)
      cir.if %4 {
        %5 = cir.const #cir.int<90> : !s32i loc(#loc21)
        %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc21)
        cir.store %6, %0 : !s8i, !cir.ptr<!s8i> loc(#loc166)
        %7 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc23)
        cir.call @printHexCharLine(%7) : (!s8i) -> () loc(#loc24)
      } loc(#loc165)
    } loc(#loc163)
    cir.return loc(#loc6)
  } loc(#loc157)
  cir.func no_proto @CWE563_Unused_Variable__unused_value_char_11_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc168)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc27)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc169)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc29)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc170)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc31)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc171)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc33)
    cir.return loc(#loc26)
  } loc(#loc167)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc172)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc173)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc174)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc41)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc42)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc44)
  cir.func @main(%arg0: !s32i loc(fused[#loc47, #loc48]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc49, #loc50])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc176)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc177)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc46)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc51)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc51)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc52)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc53)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc53)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc54)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc41)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    %8 = cir.get_global @CWE563_Unused_Variable__unused_value_char_11_good : !cir.ptr<!cir.func<!void ()>> loc(#loc178)
    cir.call @CWE563_Unused_Variable__unused_value_char_11_good() : () -> () loc(#loc56)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc42)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc43)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %13 = cir.get_global @CWE563_Unused_Variable__unused_value_char_11_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc179)
    cir.call @CWE563_Unused_Variable__unused_value_char_11_bad() : () -> () loc(#loc60)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc44)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc63)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc180)
    cir.return %17 : !s32i loc(#loc180)
  } loc(#loc175)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc181)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc67)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc183)
    cir.scope {
      %1 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc185)
      %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc185)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc74)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc74)
      cir.if %4 {
        %5 = cir.const #cir.int<67> : !s32i loc(#loc77)
        %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc77)
        cir.store %6, %0 : !s8i, !cir.ptr<!s8i> loc(#loc187)
      } loc(#loc186)
    } loc(#loc184)
    cir.scope {
      %1 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc189)
      %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc189)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc81)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc81)
      cir.if %4 {
        %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc67)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc67)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc86)
      } else {
        %5 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc87)
        cir.call @printHexCharLine(%5) : (!s8i) -> () loc(#loc88)
      } loc(#loc190)
    } loc(#loc188)
    cir.return loc(#loc69)
  } loc(#loc182)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc192)
    cir.scope {
      %1 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc194)
      %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc194)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc95)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc95)
      cir.if %4 {
        %5 = cir.const #cir.int<67> : !s32i loc(#loc98)
        %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc98)
        cir.store %6, %0 : !s8i, !cir.ptr<!s8i> loc(#loc196)
      } loc(#loc195)
    } loc(#loc193)
    cir.scope {
      %1 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc198)
      %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc198)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc102)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc102)
      cir.if %4 {
        %5 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc105)
        cir.call @printHexCharLine(%5) : (!s8i) -> () loc(#loc106)
      } loc(#loc199)
    } loc(#loc197)
    cir.return loc(#loc90)
  } loc(#loc191)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc201)
    cir.scope {
      %1 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc203)
      %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc203)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc113)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc113)
      cir.if %4 {
        %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc118)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc118)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc119)
      } else {
        %5 = cir.const #cir.int<67> : !s32i loc(#loc120)
        %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc120)
        cir.store %6, %0 : !s8i, !cir.ptr<!s8i> loc(#loc205)
        %7 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc122)
        cir.call @printHexCharLine(%7) : (!s8i) -> () loc(#loc123)
      } loc(#loc204)
    } loc(#loc202)
    cir.scope {
      %1 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc207)
      %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc207)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc126)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc126)
      cir.if %4 {
        %5 = cir.const #cir.int<90> : !s32i loc(#loc129)
        %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc129)
        cir.store %6, %0 : !s8i, !cir.ptr<!s8i> loc(#loc209)
        %7 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc131)
        cir.call @printHexCharLine(%7) : (!s8i) -> () loc(#loc132)
      } loc(#loc208)
    } loc(#loc206)
    cir.return loc(#loc108)
  } loc(#loc200)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc211)
    cir.scope {
      %1 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc213)
      %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc213)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc139)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc139)
      cir.if %4 {
        %5 = cir.const #cir.int<67> : !s32i loc(#loc142)
        %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc142)
        cir.store %6, %0 : !s8i, !cir.ptr<!s8i> loc(#loc215)
        %7 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc144)
        cir.call @printHexCharLine(%7) : (!s8i) -> () loc(#loc145)
      } loc(#loc214)
    } loc(#loc212)
    cir.scope {
      %1 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc217)
      %2 = cir.cast(bitcast, %1 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc217)
      %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc148)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc148)
      cir.if %4 {
        %5 = cir.const #cir.int<90> : !s32i loc(#loc151)
        %6 = cir.cast(integral, %5 : !s32i), !s8i loc(#loc151)
        cir.store %6, %0 : !s8i, !cir.ptr<!s8i> loc(#loc219)
        %7 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc153)
        cir.call @printHexCharLine(%7) : (!s8i) -> () loc(#loc154)
      } loc(#loc218)
    } loc(#loc216)
    cir.return loc(#loc134)
  } loc(#loc210)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE563_Unused_Variable/CWE563_Unused_Variable__unused_value_char_11.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":30:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":30:35)
#loc5 = loc("CWE563_Unused_Variable__unused_value_char_11.c":24:1)
#loc6 = loc("CWE563_Unused_Variable__unused_value_char_11.c":38:1)
#loc7 = loc("CWE563_Unused_Variable__unused_value_char_11.c":26:5)
#loc8 = loc("CWE563_Unused_Variable__unused_value_char_11.c":26:10)
#loc9 = loc("CWE563_Unused_Variable__unused_value_char_11.c":27:5)
#loc10 = loc("CWE563_Unused_Variable__unused_value_char_11.c":31:5)
#loc11 = loc("CWE563_Unused_Variable__unused_value_char_11.c":27:8)
#loc12 = loc("CWE563_Unused_Variable__unused_value_char_11.c":27:26)
#loc13 = loc("CWE563_Unused_Variable__unused_value_char_11.c":28:5)
#loc14 = loc("CWE563_Unused_Variable__unused_value_char_11.c":30:16)
#loc15 = loc("CWE563_Unused_Variable__unused_value_char_11.c":30:9)
#loc16 = loc("CWE563_Unused_Variable__unused_value_char_11.c":32:5)
#loc17 = loc("CWE563_Unused_Variable__unused_value_char_11.c":37:5)
#loc18 = loc("CWE563_Unused_Variable__unused_value_char_11.c":32:8)
#loc19 = loc("CWE563_Unused_Variable__unused_value_char_11.c":32:26)
#loc20 = loc("CWE563_Unused_Variable__unused_value_char_11.c":33:5)
#loc21 = loc("CWE563_Unused_Variable__unused_value_char_11.c":35:16)
#loc22 = loc("CWE563_Unused_Variable__unused_value_char_11.c":35:9)
#loc23 = loc("CWE563_Unused_Variable__unused_value_char_11.c":36:26)
#loc24 = loc("CWE563_Unused_Variable__unused_value_char_11.c":36:9)
#loc25 = loc("CWE563_Unused_Variable__unused_value_char_11.c":122:1)
#loc26 = loc("CWE563_Unused_Variable__unused_value_char_11.c":128:1)
#loc27 = loc("CWE563_Unused_Variable__unused_value_char_11.c":124:5)
#loc28 = loc("CWE563_Unused_Variable__unused_value_char_11.c":124:14)
#loc29 = loc("CWE563_Unused_Variable__unused_value_char_11.c":125:5)
#loc30 = loc("CWE563_Unused_Variable__unused_value_char_11.c":125:14)
#loc31 = loc("CWE563_Unused_Variable__unused_value_char_11.c":126:5)
#loc32 = loc("CWE563_Unused_Variable__unused_value_char_11.c":126:14)
#loc33 = loc("CWE563_Unused_Variable__unused_value_char_11.c":127:5)
#loc34 = loc("CWE563_Unused_Variable__unused_value_char_11.c":127:14)
#loc35 = loc("/usr/include/stdlib.h":575:1)
#loc36 = loc("/usr/include/stdlib.h":575:41)
#loc37 = loc("/usr/include/time.h":76:1)
#loc38 = loc("/usr/include/time.h":76:38)
#loc39 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc40 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc41 = loc("CWE563_Unused_Variable__unused_value_char_11.c":144:15)
#loc42 = loc("CWE563_Unused_Variable__unused_value_char_11.c":146:15)
#loc43 = loc("CWE563_Unused_Variable__unused_value_char_11.c":149:15)
#loc44 = loc("CWE563_Unused_Variable__unused_value_char_11.c":151:15)
#loc45 = loc("CWE563_Unused_Variable__unused_value_char_11.c":139:1)
#loc46 = loc("CWE563_Unused_Variable__unused_value_char_11.c":154:1)
#loc51 = loc("CWE563_Unused_Variable__unused_value_char_11.c":140:1)
#loc52 = loc("CWE563_Unused_Variable__unused_value_char_11.c":142:27)
#loc53 = loc("CWE563_Unused_Variable__unused_value_char_11.c":142:22)
#loc54 = loc("CWE563_Unused_Variable__unused_value_char_11.c":142:5)
#loc55 = loc("CWE563_Unused_Variable__unused_value_char_11.c":144:5)
#loc56 = loc("CWE563_Unused_Variable__unused_value_char_11.c":145:5)
#loc57 = loc("CWE563_Unused_Variable__unused_value_char_11.c":145:55)
#loc58 = loc("CWE563_Unused_Variable__unused_value_char_11.c":146:5)
#loc59 = loc("CWE563_Unused_Variable__unused_value_char_11.c":149:5)
#loc60 = loc("CWE563_Unused_Variable__unused_value_char_11.c":150:5)
#loc61 = loc("CWE563_Unused_Variable__unused_value_char_11.c":150:54)
#loc62 = loc("CWE563_Unused_Variable__unused_value_char_11.c":151:5)
#loc63 = loc("CWE563_Unused_Variable__unused_value_char_11.c":153:12)
#loc64 = loc("CWE563_Unused_Variable__unused_value_char_11.c":153:5)
#loc65 = loc("../../testcasesupport/std_testcase_io.h":50:1)
#loc66 = loc("../../testcasesupport/std_testcase_io.h":50:24)
#loc67 = loc("CWE563_Unused_Variable__unused_value_char_11.c":56:19)
#loc68 = loc("CWE563_Unused_Variable__unused_value_char_11.c":45:1)
#loc69 = loc("CWE563_Unused_Variable__unused_value_char_11.c":63:1)
#loc70 = loc("CWE563_Unused_Variable__unused_value_char_11.c":47:5)
#loc71 = loc("CWE563_Unused_Variable__unused_value_char_11.c":47:10)
#loc72 = loc("CWE563_Unused_Variable__unused_value_char_11.c":48:5)
#loc73 = loc("CWE563_Unused_Variable__unused_value_char_11.c":52:5)
#loc74 = loc("CWE563_Unused_Variable__unused_value_char_11.c":48:8)
#loc75 = loc("CWE563_Unused_Variable__unused_value_char_11.c":48:26)
#loc76 = loc("CWE563_Unused_Variable__unused_value_char_11.c":49:5)
#loc77 = loc("CWE563_Unused_Variable__unused_value_char_11.c":51:16)
#loc78 = loc("CWE563_Unused_Variable__unused_value_char_11.c":51:9)
#loc79 = loc("CWE563_Unused_Variable__unused_value_char_11.c":53:5)
#loc80 = loc("CWE563_Unused_Variable__unused_value_char_11.c":62:5)
#loc81 = loc("CWE563_Unused_Variable__unused_value_char_11.c":53:8)
#loc82 = loc("CWE563_Unused_Variable__unused_value_char_11.c":53:27)
#loc83 = loc("CWE563_Unused_Variable__unused_value_char_11.c":54:5)
#loc84 = loc("CWE563_Unused_Variable__unused_value_char_11.c":57:5)
#loc85 = loc("CWE563_Unused_Variable__unused_value_char_11.c":59:5)
#loc86 = loc("CWE563_Unused_Variable__unused_value_char_11.c":56:9)
#loc87 = loc("CWE563_Unused_Variable__unused_value_char_11.c":61:26)
#loc88 = loc("CWE563_Unused_Variable__unused_value_char_11.c":61:9)
#loc89 = loc("CWE563_Unused_Variable__unused_value_char_11.c":66:1)
#loc90 = loc("CWE563_Unused_Variable__unused_value_char_11.c":79:1)
#loc91 = loc("CWE563_Unused_Variable__unused_value_char_11.c":68:5)
#loc92 = loc("CWE563_Unused_Variable__unused_value_char_11.c":68:10)
#loc93 = loc("CWE563_Unused_Variable__unused_value_char_11.c":69:5)
#loc94 = loc("CWE563_Unused_Variable__unused_value_char_11.c":73:5)
#loc95 = loc("CWE563_Unused_Variable__unused_value_char_11.c":69:8)
#loc96 = loc("CWE563_Unused_Variable__unused_value_char_11.c":69:26)
#loc97 = loc("CWE563_Unused_Variable__unused_value_char_11.c":70:5)
#loc98 = loc("CWE563_Unused_Variable__unused_value_char_11.c":72:16)
#loc99 = loc("CWE563_Unused_Variable__unused_value_char_11.c":72:9)
#loc100 = loc("CWE563_Unused_Variable__unused_value_char_11.c":74:5)
#loc101 = loc("CWE563_Unused_Variable__unused_value_char_11.c":78:5)
#loc102 = loc("CWE563_Unused_Variable__unused_value_char_11.c":74:8)
#loc103 = loc("CWE563_Unused_Variable__unused_value_char_11.c":74:26)
#loc104 = loc("CWE563_Unused_Variable__unused_value_char_11.c":75:5)
#loc105 = loc("CWE563_Unused_Variable__unused_value_char_11.c":77:26)
#loc106 = loc("CWE563_Unused_Variable__unused_value_char_11.c":77:9)
#loc107 = loc("CWE563_Unused_Variable__unused_value_char_11.c":82:1)
#loc108 = loc("CWE563_Unused_Variable__unused_value_char_11.c":102:1)
#loc109 = loc("CWE563_Unused_Variable__unused_value_char_11.c":84:5)
#loc110 = loc("CWE563_Unused_Variable__unused_value_char_11.c":84:10)
#loc111 = loc("CWE563_Unused_Variable__unused_value_char_11.c":85:5)
#loc112 = loc("CWE563_Unused_Variable__unused_value_char_11.c":95:5)
#loc113 = loc("CWE563_Unused_Variable__unused_value_char_11.c":85:8)
#loc114 = loc("CWE563_Unused_Variable__unused_value_char_11.c":85:27)
#loc115 = loc("CWE563_Unused_Variable__unused_value_char_11.c":86:5)
#loc116 = loc("CWE563_Unused_Variable__unused_value_char_11.c":89:5)
#loc117 = loc("CWE563_Unused_Variable__unused_value_char_11.c":91:5)
#loc118 = loc("CWE563_Unused_Variable__unused_value_char_11.c":88:19)
#loc119 = loc("CWE563_Unused_Variable__unused_value_char_11.c":88:9)
#loc120 = loc("CWE563_Unused_Variable__unused_value_char_11.c":93:16)
#loc121 = loc("CWE563_Unused_Variable__unused_value_char_11.c":93:9)
#loc122 = loc("CWE563_Unused_Variable__unused_value_char_11.c":94:26)
#loc123 = loc("CWE563_Unused_Variable__unused_value_char_11.c":94:9)
#loc124 = loc("CWE563_Unused_Variable__unused_value_char_11.c":96:5)
#loc125 = loc("CWE563_Unused_Variable__unused_value_char_11.c":101:5)
#loc126 = loc("CWE563_Unused_Variable__unused_value_char_11.c":96:8)
#loc127 = loc("CWE563_Unused_Variable__unused_value_char_11.c":96:26)
#loc128 = loc("CWE563_Unused_Variable__unused_value_char_11.c":97:5)
#loc129 = loc("CWE563_Unused_Variable__unused_value_char_11.c":99:16)
#loc130 = loc("CWE563_Unused_Variable__unused_value_char_11.c":99:9)
#loc131 = loc("CWE563_Unused_Variable__unused_value_char_11.c":100:26)
#loc132 = loc("CWE563_Unused_Variable__unused_value_char_11.c":100:9)
#loc133 = loc("CWE563_Unused_Variable__unused_value_char_11.c":105:1)
#loc134 = loc("CWE563_Unused_Variable__unused_value_char_11.c":120:1)
#loc135 = loc("CWE563_Unused_Variable__unused_value_char_11.c":107:5)
#loc136 = loc("CWE563_Unused_Variable__unused_value_char_11.c":107:10)
#loc137 = loc("CWE563_Unused_Variable__unused_value_char_11.c":108:5)
#loc138 = loc("CWE563_Unused_Variable__unused_value_char_11.c":113:5)
#loc139 = loc("CWE563_Unused_Variable__unused_value_char_11.c":108:8)
#loc140 = loc("CWE563_Unused_Variable__unused_value_char_11.c":108:26)
#loc141 = loc("CWE563_Unused_Variable__unused_value_char_11.c":109:5)
#loc142 = loc("CWE563_Unused_Variable__unused_value_char_11.c":111:16)
#loc143 = loc("CWE563_Unused_Variable__unused_value_char_11.c":111:9)
#loc144 = loc("CWE563_Unused_Variable__unused_value_char_11.c":112:26)
#loc145 = loc("CWE563_Unused_Variable__unused_value_char_11.c":112:9)
#loc146 = loc("CWE563_Unused_Variable__unused_value_char_11.c":114:5)
#loc147 = loc("CWE563_Unused_Variable__unused_value_char_11.c":119:5)
#loc148 = loc("CWE563_Unused_Variable__unused_value_char_11.c":114:8)
#loc149 = loc("CWE563_Unused_Variable__unused_value_char_11.c":114:26)
#loc150 = loc("CWE563_Unused_Variable__unused_value_char_11.c":115:5)
#loc151 = loc("CWE563_Unused_Variable__unused_value_char_11.c":117:16)
#loc152 = loc("CWE563_Unused_Variable__unused_value_char_11.c":117:9)
#loc153 = loc("CWE563_Unused_Variable__unused_value_char_11.c":118:26)
#loc154 = loc("CWE563_Unused_Variable__unused_value_char_11.c":118:9)
#loc155 = loc(fused[#loc1, #loc2])
#loc156 = loc(fused[#loc3, #loc4])
#loc157 = loc(fused[#loc5, #loc6])
#loc158 = loc(fused[#loc7, #loc8])
#loc159 = loc(fused[#loc9, #loc10])
#loc160 = loc(fused[#loc11, #loc12])
#loc161 = loc(fused[#loc13, #loc10])
#loc162 = loc(fused[#loc15, #loc14])
#loc163 = loc(fused[#loc16, #loc17])
#loc164 = loc(fused[#loc18, #loc19])
#loc165 = loc(fused[#loc20, #loc17])
#loc166 = loc(fused[#loc22, #loc21])
#loc167 = loc(fused[#loc25, #loc26])
#loc168 = loc(fused[#loc27, #loc28])
#loc169 = loc(fused[#loc29, #loc30])
#loc170 = loc(fused[#loc31, #loc32])
#loc171 = loc(fused[#loc33, #loc34])
#loc172 = loc(fused[#loc35, #loc36])
#loc173 = loc(fused[#loc37, #loc38])
#loc174 = loc(fused[#loc39, #loc40])
#loc175 = loc(fused[#loc45, #loc46])
#loc178 = loc(fused[#loc56, #loc57])
#loc179 = loc(fused[#loc60, #loc61])
#loc180 = loc(fused[#loc64, #loc63])
#loc181 = loc(fused[#loc65, #loc66])
#loc182 = loc(fused[#loc68, #loc69])
#loc183 = loc(fused[#loc70, #loc71])
#loc184 = loc(fused[#loc72, #loc73])
#loc185 = loc(fused[#loc74, #loc75])
#loc186 = loc(fused[#loc76, #loc73])
#loc187 = loc(fused[#loc78, #loc77])
#loc188 = loc(fused[#loc79, #loc80])
#loc189 = loc(fused[#loc81, #loc82])
#loc190 = loc(fused[#loc83, #loc84, #loc85, #loc80])
#loc191 = loc(fused[#loc89, #loc90])
#loc192 = loc(fused[#loc91, #loc92])
#loc193 = loc(fused[#loc93, #loc94])
#loc194 = loc(fused[#loc95, #loc96])
#loc195 = loc(fused[#loc97, #loc94])
#loc196 = loc(fused[#loc99, #loc98])
#loc197 = loc(fused[#loc100, #loc101])
#loc198 = loc(fused[#loc102, #loc103])
#loc199 = loc(fused[#loc104, #loc101])
#loc200 = loc(fused[#loc107, #loc108])
#loc201 = loc(fused[#loc109, #loc110])
#loc202 = loc(fused[#loc111, #loc112])
#loc203 = loc(fused[#loc113, #loc114])
#loc204 = loc(fused[#loc115, #loc116, #loc117, #loc112])
#loc205 = loc(fused[#loc121, #loc120])
#loc206 = loc(fused[#loc124, #loc125])
#loc207 = loc(fused[#loc126, #loc127])
#loc208 = loc(fused[#loc128, #loc125])
#loc209 = loc(fused[#loc130, #loc129])
#loc210 = loc(fused[#loc133, #loc134])
#loc211 = loc(fused[#loc135, #loc136])
#loc212 = loc(fused[#loc137, #loc138])
#loc213 = loc(fused[#loc139, #loc140])
#loc214 = loc(fused[#loc141, #loc138])
#loc215 = loc(fused[#loc143, #loc142])
#loc216 = loc(fused[#loc146, #loc147])
#loc217 = loc(fused[#loc148, #loc149])
#loc218 = loc(fused[#loc150, #loc147])
#loc219 = loc(fused[#loc152, #loc151])
