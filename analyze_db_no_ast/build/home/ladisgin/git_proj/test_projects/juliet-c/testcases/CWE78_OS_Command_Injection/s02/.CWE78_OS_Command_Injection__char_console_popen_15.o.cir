!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc178)
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc179)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc180)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc181)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc10)
  cir.func private  @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc182)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc13)
  cir.func private  @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc183)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_console_popen_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc185)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc186)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc186)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc186)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc22)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc187)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc26)
      cir.switch (%4 : !s32i) [
      case (equal, 6) {
        cir.scope {
          %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc190)
          %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc31)
          %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
          %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc31)
          cir.store %8, %5 : !u64i, !cir.ptr<!u64i> loc(#loc190)
          cir.scope {
            %9 = cir.const #cir.int<100> : !s32i loc(#loc35)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc35)
            %11 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc36)
            %12 = cir.binop(sub, %10, %11) : !u64i loc(#loc192)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc37)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc37)
            %15 = cir.cmp(gt, %12, %14) : !u64i, !s32i loc(#loc193)
            %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc38)
            cir.if %16 {
              cir.scope {
                %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
                %18 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc43)
                %19 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %18 : !u64i), !cir.ptr<!s8i> loc(#loc44)
                %20 = cir.const #cir.int<100> : !s32i loc(#loc45)
                %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc45)
                %22 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc46)
                %23 = cir.binop(sub, %21, %22) : !u64i loc(#loc196)
                %24 = cir.cast(integral, %23 : !u64i), !s32i loc(#loc196)
                %25 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc180)
                %26 = cir.load %25 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc47)
                %27 = cir.call @fgets(%19, %24, %26) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc48)
                %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc49)
                %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc49)
                %30 = cir.cmp(ne, %27, %29) : !cir.ptr<!s8i>, !s32i loc(#loc197)
                %31 = cir.cast(int_to_bool, %30 : !s32i), !cir.bool loc(#loc50)
                cir.if %31 {
                  %32 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc54)
                  %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
                  %34 = cir.call @strlen(%33) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc54)
                  cir.store %34, %5 : !u64i, !cir.ptr<!u64i> loc(#loc199)
                  cir.scope {
                    %35 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc60)
                    %36 = cir.const #cir.int<0> : !s32i loc(#loc61)
                    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc61)
                    %38 = cir.cmp(gt, %35, %37) : !u64i, !s32i loc(#loc201)
                    %39 = cir.cast(int_to_bool, %38 : !s32i), !cir.bool loc(#loc62)
                    %40 = cir.ternary(%39, true {
                      %41 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
                      %42 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc65)
                      %43 = cir.const #cir.int<1> : !s32i loc(#loc66)
                      %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc66)
                      %45 = cir.binop(sub, %42, %44) : !u64i loc(#loc202)
                      %46 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc67)
                      %47 = cir.load %46 : !cir.ptr<!s8i>, !s8i loc(#loc64)
                      %48 = cir.cast(integral, %47 : !s8i), !s32i loc(#loc64)
                      %49 = cir.const #cir.int<10> : !s32i loc(#loc68)
                      %50 = cir.cmp(eq, %48, %49) : !s32i, !s32i loc(#loc203)
                      %51 = cir.cast(int_to_bool, %50 : !s32i), !cir.bool loc(#loc69)
                      %52 = cir.ternary(%51, true {
                        %53 = cir.const #true loc(#loc63)
                        cir.yield %53 : !cir.bool loc(#loc63)
                      }, false {
                        %53 = cir.const #false loc(#loc63)
                        cir.yield %53 : !cir.bool loc(#loc63)
                      }) : (!cir.bool) -> !cir.bool loc(#loc63)
                      cir.yield %52 : !cir.bool loc(#loc63)
                    }, false {
                      %41 = cir.const #false loc(#loc63)
                      cir.yield %41 : !cir.bool loc(#loc63)
                    }) : (!cir.bool) -> !cir.bool loc(#loc63)
                    cir.if %40 {
                      %41 = cir.const #cir.int<0> : !s32i loc(#loc71)
                      %42 = cir.cast(integral, %41 : !s32i), !s8i loc(#loc71)
                      %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
                      %44 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc73)
                      %45 = cir.const #cir.int<1> : !s32i loc(#loc74)
                      %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc74)
                      %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc205)
                      %48 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %47 : !u64i), !cir.ptr<!s8i> loc(#loc75)
                      cir.store %42, %48 : !s8i, !cir.ptr<!s8i> loc(#loc206)
                    } loc(#loc204)
                  } loc(#loc200)
                } else {
                  %32 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
                  %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
                  cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc76)
                  %34 = cir.const #cir.int<0> : !s32i loc(#loc77)
                  %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc77)
                  %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
                  %37 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc79)
                  %38 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %37 : !u64i), !cir.ptr<!s8i> loc(#loc80)
                  cir.store %35, %38 : !s8i, !cir.ptr<!s8i> loc(#loc207)
                } loc(#loc198)
              } loc(#loc195)
            } loc(#loc194)
          } loc(#loc191)
        } loc(#loc189)
        cir.break loc(#loc81)
      },
      case (default) {
        %5 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc10)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc10)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc82)
        cir.break loc(#loc83)
      }
      ] loc(#loc24)
    } loc(#loc188)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc209)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
      %6 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc13)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc13)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc89)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc210)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc94)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc95)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc95)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc212)
        %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc96)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc98)
          %15 = cir.call @pclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc99)
        } loc(#loc213)
      } loc(#loc211)
    } loc(#loc208)
    cir.return loc(#loc17)
  } loc(#loc184)
  cir.func no_proto  @CWE78_OS_Command_Injection__char_console_popen_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc215)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc102)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc216)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc104)
    cir.return loc(#loc101)
  } loc(#loc214)
  cir.func private  @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc217)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc108)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc219)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc220)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc220)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc220)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc115)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc221)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc119)
      cir.switch (%4 : !s32i) [
      case (equal, 6) {
        %5 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc120)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc120)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc121)
        cir.break loc(#loc122)
      },
      case (default) {
        %5 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc123)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
        %7 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc108)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc108)
        %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc123)
        cir.break loc(#loc125)
      }
      ] loc(#loc117)
    } loc(#loc222)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc224)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
      %6 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc131)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc131)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc132)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc225)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc137)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc138)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc138)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc227)
        %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc139)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc141)
          %15 = cir.call @pclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc142)
        } loc(#loc228)
      } loc(#loc226)
    } loc(#loc223)
    cir.return loc(#loc110)
  } loc(#loc218)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc230)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc231)
    %2 = cir.const #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc231)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc231)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc149)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc232)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc153)
      cir.switch (%4 : !s32i) [
      case (equal, 6) {
        %5 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc154)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
        %7 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc156)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc156)
        %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc154)
        cir.break loc(#loc157)
      },
      case (default) {
        %5 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc158)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc158)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc159)
        cir.break loc(#loc160)
      }
      ] loc(#loc151)
    } loc(#loc233)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc235)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc165)
      %6 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc166)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc166)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc167)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc236)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc172)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc173)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc173)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc238)
        %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc174)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc176)
          %15 = cir.call @pclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc177)
        } loc(#loc239)
      } loc(#loc237)
    } loc(#loc234)
    cir.return loc(#loc144)
  } loc(#loc229)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_15.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":66:27)
#loc10 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":75:19)
#loc11 = loc("/usr/include/stdio.h":903:1)
#loc12 = loc("/usr/include/stdio.h":904:3)
#loc13 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":81:28)
#loc14 = loc("/usr/include/stdio.h":897:1)
#loc15 = loc("/usr/include/stdio.h":897:36)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":39:1)
#loc17 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":87:1)
#loc18 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":41:5)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":41:12)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":42:5)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":42:26)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":43:12)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":43:5)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":44:5)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":77:5)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":44:12)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":47:5)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":71:5)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":49:9)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":49:37)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":49:26)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":49:33)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":51:9)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":70:9)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":51:13)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":51:17)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":51:27)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":51:25)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":52:9)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":54:13)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":69:13)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":54:23)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":54:28)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":54:27)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":54:43)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":54:47)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":54:57)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":54:17)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":54:67)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":54:64)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":55:13)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":63:13)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":65:13)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":58:27)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":58:34)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":58:17)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":58:38)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":59:17)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":62:17)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":59:21)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":59:31)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":59:29)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":59:33)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":59:36)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":59:41)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":59:49)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":59:50)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":59:55)
#loc69 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":59:52)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":60:17)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":61:39)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":61:21)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":61:26)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":61:34)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":61:35)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":66:17)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":68:33)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":68:17)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":68:22)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":68:29)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":72:5)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":75:9)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":76:9)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":78:5)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":86:5)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":79:9)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":79:15)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":81:22)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":81:16)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":81:9)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":81:31)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":82:9)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":85:9)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":82:13)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":82:21)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":82:18)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":83:9)
#loc98 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":84:20)
#loc99 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":84:13)
#loc100 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":149:1)
#loc101 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":153:1)
#loc102 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":151:5)
#loc103 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":151:14)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":152:5)
#loc105 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":152:14)
#loc106 = loc("/usr/include/string.h":149:1)
#loc107 = loc("/usr/include/string.h":150:14)
#loc108 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":107:22)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":94:1)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":119:1)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":96:5)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":96:12)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":97:5)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":97:26)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":98:12)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":98:5)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":99:5)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":109:5)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":99:12)
#loc120 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":103:19)
#loc121 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":103:9)
#loc122 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":104:9)
#loc123 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":107:9)
#loc124 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":107:16)
#loc125 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":108:9)
#loc126 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":110:5)
#loc127 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":118:5)
#loc128 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":111:9)
#loc129 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":111:15)
#loc130 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":113:22)
#loc131 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":113:28)
#loc132 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":113:16)
#loc133 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":113:9)
#loc134 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":113:31)
#loc135 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":114:9)
#loc136 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":117:9)
#loc137 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":114:13)
#loc138 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":114:21)
#loc139 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":114:18)
#loc140 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":115:9)
#loc141 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":116:20)
#loc142 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":116:13)
#loc143 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":122:1)
#loc144 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":147:1)
#loc145 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":124:5)
#loc146 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":124:12)
#loc147 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":125:5)
#loc148 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":125:26)
#loc149 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":126:12)
#loc150 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":126:5)
#loc151 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":127:5)
#loc152 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":137:5)
#loc153 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":127:12)
#loc154 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":131:9)
#loc155 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":131:16)
#loc156 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":131:22)
#loc157 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":132:9)
#loc158 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":135:19)
#loc159 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":135:9)
#loc160 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":136:9)
#loc161 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":138:5)
#loc162 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":146:5)
#loc163 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":139:9)
#loc164 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":139:15)
#loc165 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":141:22)
#loc166 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":141:28)
#loc167 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":141:16)
#loc168 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":141:9)
#loc169 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":141:31)
#loc170 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":142:9)
#loc171 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":145:9)
#loc172 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":142:13)
#loc173 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":142:21)
#loc174 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":142:18)
#loc175 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":143:9)
#loc176 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":144:20)
#loc177 = loc("CWE78_OS_Command_Injection__char_console_popen_15.c":144:13)
#loc178 = loc(fused[#loc1, #loc2])
#loc179 = loc(fused[#loc3, #loc4])
#loc180 = loc(fused[#loc5, #loc6])
#loc181 = loc(fused[#loc7, #loc8])
#loc182 = loc(fused[#loc11, #loc12])
#loc183 = loc(fused[#loc14, #loc15])
#loc184 = loc(fused[#loc16, #loc17])
#loc185 = loc(fused[#loc18, #loc19])
#loc186 = loc(fused[#loc20, #loc21])
#loc187 = loc(fused[#loc23, #loc22])
#loc188 = loc(fused[#loc24, #loc25])
#loc189 = loc(fused[#loc27, #loc28])
#loc190 = loc(fused[#loc29, #loc30])
#loc191 = loc(fused[#loc33, #loc34])
#loc192 = loc(fused[#loc35, #loc36])
#loc193 = loc(fused[#loc35, #loc37])
#loc194 = loc(fused[#loc39, #loc34])
#loc195 = loc(fused[#loc40, #loc41])
#loc196 = loc(fused[#loc45, #loc46])
#loc197 = loc(fused[#loc48, #loc49])
#loc198 = loc(fused[#loc51, #loc52, #loc53, #loc41])
#loc199 = loc(fused[#loc56, #loc57])
#loc200 = loc(fused[#loc58, #loc59])
#loc201 = loc(fused[#loc60, #loc61])
#loc202 = loc(fused[#loc65, #loc66])
#loc203 = loc(fused[#loc64, #loc68])
#loc204 = loc(fused[#loc70, #loc59])
#loc205 = loc(fused[#loc73, #loc74])
#loc206 = loc(fused[#loc72, #loc71])
#loc207 = loc(fused[#loc78, #loc77])
#loc208 = loc(fused[#loc84, #loc85])
#loc209 = loc(fused[#loc86, #loc87])
#loc210 = loc(fused[#loc90, #loc91])
#loc211 = loc(fused[#loc92, #loc93])
#loc212 = loc(fused[#loc94, #loc95])
#loc213 = loc(fused[#loc97, #loc93])
#loc214 = loc(fused[#loc100, #loc101])
#loc215 = loc(fused[#loc102, #loc103])
#loc216 = loc(fused[#loc104, #loc105])
#loc217 = loc(fused[#loc106, #loc107])
#loc218 = loc(fused[#loc109, #loc110])
#loc219 = loc(fused[#loc111, #loc112])
#loc220 = loc(fused[#loc113, #loc114])
#loc221 = loc(fused[#loc116, #loc115])
#loc222 = loc(fused[#loc117, #loc118])
#loc223 = loc(fused[#loc126, #loc127])
#loc224 = loc(fused[#loc128, #loc129])
#loc225 = loc(fused[#loc133, #loc134])
#loc226 = loc(fused[#loc135, #loc136])
#loc227 = loc(fused[#loc137, #loc138])
#loc228 = loc(fused[#loc140, #loc136])
#loc229 = loc(fused[#loc143, #loc144])
#loc230 = loc(fused[#loc145, #loc146])
#loc231 = loc(fused[#loc147, #loc148])
#loc232 = loc(fused[#loc150, #loc149])
#loc233 = loc(fused[#loc151, #loc152])
#loc234 = loc(fused[#loc161, #loc162])
#loc235 = loc(fused[#loc163, #loc164])
#loc236 = loc(fused[#loc168, #loc169])
#loc237 = loc(fused[#loc170, #loc171])
#loc238 = loc(fused[#loc172, #loc173])
#loc239 = loc(fused[#loc175, #loc171])
