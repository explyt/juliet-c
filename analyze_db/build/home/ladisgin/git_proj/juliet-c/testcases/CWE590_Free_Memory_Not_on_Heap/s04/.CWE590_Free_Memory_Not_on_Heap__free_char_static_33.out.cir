!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":94:10)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":94:14)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":94:20)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":94:32)
#loc150 = loc(fused[#loc99, #loc100])
#loc151 = loc(fused[#loc101, #loc102])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @_ZZN51CWE590_Free_Memory_Not_on_Heap__free_char_static_333badEvE10dataBuffer = #cir.zero : !cir.array<!s8i x 100> {alignment = 16 : i64} loc(#loc1)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc115)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc116)
  cir.func @_ZN51CWE590_Free_Memory_Not_on_Heap__free_char_static_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc118)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc119)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc120)
    cir.store %1, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc13)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc14)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc121)
    cir.br ^bb1 loc(#loc122)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @_ZZN51CWE590_Free_Memory_Not_on_Heap__free_char_static_333badEvE10dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc1)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc18)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
    %7 = cir.const #cir.int<65> : !s8i loc(#loc19)
    %8 = cir.cast(integral, %7 : !s8i), !s32i loc(#loc19)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc20)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc20)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc20)
    cir.libc.memset %12 bytes from %6 set to %8 : !cir.ptr<!void>, !s32i, !u64i loc(#loc123)
    %13 = cir.const #cir.int<0> : !s8i loc(#loc24)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc25)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc25)
    %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc27)
    %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc27)
    cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc124)
    %19 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc28)
    cir.store %19, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
    cir.br ^bb2 loc(#loc17)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc126)
  ^bb3:  // pred: ^bb2
    %20 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc9)
    %21 = cir.load %20 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc9)
    cir.store %21, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc118)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc33)
    %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc34)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc35)
    cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc34)
    cir.br ^bb4 loc(#loc31)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc7)
  } loc(#loc117)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc127)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc38)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc128)
  cir.func internal private @_ZN51CWE590_Free_Memory_Not_on_Heap__free_char_static_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc130)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc131)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc132)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc133)
    cir.store %2, %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc50)
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc51)
    cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc134)
    cir.br ^bb1 loc(#loc135)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc55)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc56)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc56)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc136)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc137)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc55)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc138)
    cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc130)
    cir.br ^bb2 loc(#loc139)
  ^bb2:  // pred: ^bb1
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc62)
    %14 = cir.cmp(eq, %12, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc140)
    cir.brcond %14 ^bb3, ^bb4 loc(#loc141)
  ^bb3:  // pred: ^bb2
    %15 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc38)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc64)
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc65)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc66)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc65)
    cir.br ^bb4 loc(#loc60)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc60)
  ^bb5:  // pred: ^bb4
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc67)
    %21 = cir.const #cir.int<65> : !s8i loc(#loc68)
    %22 = cir.cast(integral, %21 : !s8i), !s32i loc(#loc68)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc69)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc70)
    %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc69)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc69)
    cir.libc.memset %26 bytes from %20 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc142)
    %27 = cir.const #cir.int<0> : !s8i loc(#loc73)
    %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
    %29 = cir.const #cir.int<100> : !s32i loc(#loc75)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc76)
    %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc75)
    %32 = cir.ptr_stride(%28 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc77)
    cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc143)
    %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
    cir.store %33, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc144)
    cir.br ^bb6 loc(#loc54)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc145)
  ^bb7:  // pred: ^bb6
    %34 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc46)
    %35 = cir.load %34 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
    cir.store %35, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %37 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc84)
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
    %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc85)
    cir.call @free(%39) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc84)
    cir.br ^bb8 loc(#loc81)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc42)
  } loc(#loc129)
  cir.func @_ZN51CWE590_Free_Memory_Not_on_Heap__free_char_static_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN51CWE590_Free_Memory_Not_on_Heap__free_char_static_33L7goodG2BEv() : () -> () loc(#loc88)
    cir.return loc(#loc87)
  } loc(#loc146)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc147)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc148)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc93)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc94)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc96)
  cir.func @main(%arg0: !s32i loc(fused[#loc99, #loc100]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc101, #loc102])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc150)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc151)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc98)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc103)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc103)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc104)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc105)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc105)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc106)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc93)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc93)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    cir.call @_ZN51CWE590_Free_Memory_Not_on_Heap__free_char_static_334goodEv() : () -> () loc(#loc108)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc94)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc94)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc109)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc95)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc95)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    cir.call @_ZN51CWE590_Free_Memory_Not_on_Heap__free_char_static_333badEv() : () -> () loc(#loc111)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc96)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc96)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc113)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    cir.return %15 : !s32i loc(#loc152)
  } loc(#loc149)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":33:21)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc4 = loc("/usr/include/stdlib.h":687:1)
#loc5 = loc("/usr/include/stdlib.h":687:32)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":26:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":44:1)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":39:9)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":39:23)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":28:5)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":28:12)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":29:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":29:23)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":30:12)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":30:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":31:5)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":37:5)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":34:16)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":34:28)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":34:33)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":34:37)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":34:9)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":34:38)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":35:29)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":35:20)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":35:24)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":35:9)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":36:16)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":36:9)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":38:5)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":43:5)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":40:19)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":40:9)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":42:9)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":42:14)
#loc36 = loc("/usr/include/stdlib.h":672:1)
#loc37 = loc("/usr/include/stdlib.h":672:45)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":61:23)
#loc39 = loc("/usr/include/stdlib.h":756:1)
#loc40 = loc("/usr/include/stdlib.h":756:70)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":51:1)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":74:1)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":58:9)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":58:60)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":69:9)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":69:23)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":53:5)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":53:12)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":54:5)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":54:23)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":55:12)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":55:5)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":56:5)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":67:5)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":58:37)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":58:44)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":58:48)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":58:59)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":59:9)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":63:9)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":59:13)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":59:27)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":60:9)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":61:13)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":62:13)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":62:18)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":64:16)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":64:28)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":64:33)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":64:37)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":64:9)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":64:38)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":65:29)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":65:9)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":65:20)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":65:24)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":65:25)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":66:16)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":66:9)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":68:5)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":73:5)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":70:19)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":70:9)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":72:9)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":72:14)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":76:1)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":79:1)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":78:5)
#loc89 = loc("/usr/include/stdlib.h":575:1)
#loc90 = loc("/usr/include/stdlib.h":575:41)
#loc91 = loc("/usr/include/time.h":76:1)
#loc92 = loc("/usr/include/time.h":76:38)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":99:15)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":101:15)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":104:15)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":106:15)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":94:1)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":109:1)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":95:1)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":97:27)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":97:22)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":97:5)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":99:5)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":100:5)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":101:5)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":104:5)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":105:5)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":106:5)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":108:12)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_33.cpp":108:5)
#loc115 = loc(fused[#loc2, #loc3])
#loc116 = loc(fused[#loc4, #loc5])
#loc117 = loc(fused[#loc6, #loc7])
#loc118 = loc(fused[#loc8, #loc9])
#loc119 = loc(fused[#loc10, #loc11])
#loc120 = loc(fused[#loc12, #loc13])
#loc121 = loc(fused[#loc15, #loc14])
#loc122 = loc(fused[#loc16, #loc17])
#loc123 = loc(fused[#loc22, #loc23])
#loc124 = loc(fused[#loc27, #loc24])
#loc125 = loc(fused[#loc29, #loc28])
#loc126 = loc(fused[#loc30, #loc31])
#loc127 = loc(fused[#loc36, #loc37])
#loc128 = loc(fused[#loc39, #loc40])
#loc129 = loc(fused[#loc41, #loc42])
#loc130 = loc(fused[#loc43, #loc44])
#loc131 = loc(fused[#loc45, #loc46])
#loc132 = loc(fused[#loc47, #loc48])
#loc133 = loc(fused[#loc49, #loc50])
#loc134 = loc(fused[#loc52, #loc51])
#loc135 = loc(fused[#loc53, #loc54])
#loc136 = loc(fused[#loc57, #loc58])
#loc137 = loc(fused[#loc56, #loc58])
#loc138 = loc(fused[#loc55, #loc44])
#loc139 = loc(fused[#loc59, #loc60])
#loc140 = loc(fused[#loc61, #loc62])
#loc141 = loc(fused[#loc63, #loc60])
#loc142 = loc(fused[#loc71, #loc72])
#loc143 = loc(fused[#loc74, #loc73])
#loc144 = loc(fused[#loc79, #loc78])
#loc145 = loc(fused[#loc80, #loc81])
#loc146 = loc(fused[#loc86, #loc87])
#loc147 = loc(fused[#loc89, #loc90])
#loc148 = loc(fused[#loc91, #loc92])
#loc149 = loc(fused[#loc97, #loc98])
#loc152 = loc(fused[#loc114, #loc113])
