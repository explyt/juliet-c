!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__char_realloc_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc101)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc102)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Initialize\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc103)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc104)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__char_realloc_02_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc106)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc14)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc107)
    %2 = cir.get_global @realloc : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void>>> loc(#loc16)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc17)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc18)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc18)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc108)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc109)
    %9 = cir.call @realloc(%4, %8) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc16)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc110)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc111)
    cir.scope {
      %11 = cir.const #cir.int<1> : !s32i loc(#loc25)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc25)
      cir.if %12 {
        %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc27)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
        %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc5)
        %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc5)
        %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc27)
        %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
        cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc30)
        %19 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc31)
        %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc32)
        cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc31)
      } loc(#loc113)
    } loc(#loc112)
    cir.return loc(#loc11)
  } loc(#loc105)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__char_realloc_02_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc115)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc35)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc116)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc37)
    cir.return loc(#loc34)
  } loc(#loc114)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc39)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc118)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc44)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc119)
    %2 = cir.get_global @realloc : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void>>> loc(#loc46)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc47)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc48)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc48)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc120)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc121)
    %9 = cir.call @realloc(%4, %8) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc46)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc122)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc123)
    cir.scope {
      %11 = cir.const #cir.int<0> : !s32i loc(#loc55)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc55)
      cir.if %12 {
        %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc39)
        %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc39)
        cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc59)
      } else {
        cir.scope {
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
          %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc63)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc63)
          %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc127)
          cir.if %16 {
            %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc65)
            %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
            %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc67)
            %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc67)
            %21 = cir.call @strcpy(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc65)
            %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
            cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc69)
            %23 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc70)
            %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
            %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc71)
            cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc70)
          } loc(#loc128)
        } loc(#loc126)
      } loc(#loc125)
    } loc(#loc124)
    cir.return loc(#loc41)
  } loc(#loc117)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc130)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc76)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
    %2 = cir.get_global @realloc : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void>>> loc(#loc78)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc79)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc80)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc80)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc132)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc133)
    %9 = cir.call @realloc(%4, %8) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc78)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc134)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc135)
    cir.scope {
      %11 = cir.const #cir.int<1> : !s32i loc(#loc87)
      %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc87)
      cir.if %12 {
        cir.scope {
          %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
          %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc92)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc92)
          %16 = cir.cmp(ne, %13, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc139)
          cir.if %16 {
            %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc94)
            %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
            %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc96)
            %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc96)
            %21 = cir.call @strcpy(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc94)
            %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
            cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc98)
            %23 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc99)
            %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc100)
            %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc100)
            cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc99)
          } loc(#loc140)
        } loc(#loc138)
      } loc(#loc137)
    } loc(#loc136)
    cir.return loc(#loc73)
  } loc(#loc129)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__char_realloc_02.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":683:1)
#loc2 = loc("/usr/include/stdlib.h":684:14)
#loc3 = loc("/usr/include/string.h":141:1)
#loc4 = loc("/usr/include/string.h":142:14)
#loc5 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":32:22)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("/usr/include/stdlib.h":687:1)
#loc9 = loc("/usr/include/stdlib.h":687:32)
#loc10 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":23:1)
#loc11 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":36:1)
#loc12 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":25:5)
#loc13 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":25:12)
#loc14 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":26:12)
#loc15 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":26:5)
#loc16 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":28:20)
#loc17 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":28:28)
#loc18 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":28:34)
#loc19 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":28:37)
#loc20 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":28:48)
#loc21 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":28:49)
#loc22 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":28:5)
#loc23 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":29:5)
#loc24 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":35:5)
#loc25 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":29:8)
#loc26 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":30:5)
#loc27 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":32:9)
#loc28 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":32:16)
#loc29 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":33:19)
#loc30 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":33:9)
#loc31 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":34:9)
#loc32 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":34:14)
#loc33 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":85:1)
#loc34 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":89:1)
#loc35 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":87:5)
#loc36 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":87:14)
#loc37 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":88:5)
#loc38 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":88:14)
#loc39 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":52:19)
#loc40 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":43:1)
#loc41 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":64:1)
#loc42 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":45:5)
#loc43 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":45:12)
#loc44 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":46:12)
#loc45 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":46:5)
#loc46 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":48:20)
#loc47 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":48:28)
#loc48 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":48:34)
#loc49 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":48:37)
#loc50 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":48:48)
#loc51 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":48:49)
#loc52 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":48:5)
#loc53 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":49:5)
#loc54 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":63:5)
#loc55 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":49:8)
#loc56 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":50:5)
#loc57 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":53:5)
#loc58 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":55:5)
#loc59 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":52:9)
#loc60 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":57:9)
#loc61 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":62:9)
#loc62 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":57:13)
#loc63 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":57:21)
#loc64 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":58:9)
#loc65 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":59:13)
#loc66 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":59:20)
#loc67 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":59:26)
#loc68 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":60:23)
#loc69 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":60:13)
#loc70 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":61:13)
#loc71 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":61:18)
#loc72 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":67:1)
#loc73 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":83:1)
#loc74 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":69:5)
#loc75 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":69:12)
#loc76 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":70:12)
#loc77 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":70:5)
#loc78 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":72:20)
#loc79 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":72:28)
#loc80 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":72:34)
#loc81 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":72:37)
#loc82 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":72:48)
#loc83 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":72:49)
#loc84 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":72:5)
#loc85 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":73:5)
#loc86 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":82:5)
#loc87 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":73:8)
#loc88 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":74:5)
#loc89 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":76:9)
#loc90 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":81:9)
#loc91 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":76:13)
#loc92 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":76:21)
#loc93 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":77:9)
#loc94 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":78:13)
#loc95 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":78:20)
#loc96 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":78:26)
#loc97 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":79:23)
#loc98 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":79:13)
#loc99 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":80:13)
#loc100 = loc("CWE690_NULL_Deref_From_Return__char_realloc_02.c":80:18)
#loc101 = loc(fused[#loc1, #loc2])
#loc102 = loc(fused[#loc3, #loc4])
#loc103 = loc(fused[#loc6, #loc7])
#loc104 = loc(fused[#loc8, #loc9])
#loc105 = loc(fused[#loc10, #loc11])
#loc106 = loc(fused[#loc12, #loc13])
#loc107 = loc(fused[#loc15, #loc14])
#loc108 = loc(fused[#loc19, #loc20])
#loc109 = loc(fused[#loc18, #loc20])
#loc110 = loc(fused[#loc16, #loc21])
#loc111 = loc(fused[#loc22, #loc21])
#loc112 = loc(fused[#loc23, #loc24])
#loc113 = loc(fused[#loc26, #loc24])
#loc114 = loc(fused[#loc33, #loc34])
#loc115 = loc(fused[#loc35, #loc36])
#loc116 = loc(fused[#loc37, #loc38])
#loc117 = loc(fused[#loc40, #loc41])
#loc118 = loc(fused[#loc42, #loc43])
#loc119 = loc(fused[#loc45, #loc44])
#loc120 = loc(fused[#loc49, #loc50])
#loc121 = loc(fused[#loc48, #loc50])
#loc122 = loc(fused[#loc46, #loc51])
#loc123 = loc(fused[#loc52, #loc51])
#loc124 = loc(fused[#loc53, #loc54])
#loc125 = loc(fused[#loc56, #loc57, #loc58, #loc54])
#loc126 = loc(fused[#loc60, #loc61])
#loc127 = loc(fused[#loc62, #loc63])
#loc128 = loc(fused[#loc64, #loc61])
#loc129 = loc(fused[#loc72, #loc73])
#loc130 = loc(fused[#loc74, #loc75])
#loc131 = loc(fused[#loc77, #loc76])
#loc132 = loc(fused[#loc81, #loc82])
#loc133 = loc(fused[#loc80, #loc82])
#loc134 = loc(fused[#loc78, #loc83])
#loc135 = loc(fused[#loc84, #loc83])
#loc136 = loc(fused[#loc85, #loc86])
#loc137 = loc(fused[#loc88, #loc86])
#loc138 = loc(fused[#loc89, #loc90])
#loc139 = loc(fused[#loc91, #loc92])
#loc140 = loc(fused[#loc93, #loc90])
