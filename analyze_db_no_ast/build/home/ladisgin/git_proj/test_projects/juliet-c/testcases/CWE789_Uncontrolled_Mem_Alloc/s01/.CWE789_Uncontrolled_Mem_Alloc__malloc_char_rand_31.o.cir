!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @rand() -> !s32i extra(#fn_attr) loc(#loc178)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc179)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc180)
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc181)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc9)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc182)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc183)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc14)
  cir.func no_proto  @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc185)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc19)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc186)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc21)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc21)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc187)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc189)
      %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc190)
      %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc27)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc189)
      %8 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc29)
      cir.store %8, %6 : !u64i, !cir.ptr<!u64i> loc(#loc190)
      cir.scope {
        %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc192)
        cir.scope {
          %10 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc36)
          %11 = cir.const #cir.int<5> : !u64i loc(#loc194)
          %12 = cir.cmp(gt, %10, %11) : !u64i, !s32i loc(#loc195)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc39)
          cir.if %13 {
            %14 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc43)
            %15 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc44)
            %16 = cir.const #cir.int<1> : !u64i loc(#loc197)
            %17 = cir.binop(mul, %15, %16) : !u64i loc(#loc198)
            %18 = cir.call @malloc(%17) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc43)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc199)
            cir.store %19, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc200)
            cir.scope {
              %29 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
              %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc52)
              %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc52)
              %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!s8i>, !s32i loc(#loc202)
              %33 = cir.cast(int_to_bool, %32 : !s32i), !cir.bool loc(#loc53)
              cir.if %33 {
                %34 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc55)
                %35 = cir.const #cir.int<1> : !s32i loc(#loc56)
                %36 = cir.unary(minus, %35) : !s32i, !s32i loc(#loc57)
                cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc55)
              } loc(#loc203)
            } loc(#loc201)
            %20 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc58)
            %21 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
            %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc9)
            %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc9)
            %24 = cir.call @strcpy(%21, %23) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc58)
            %25 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
            cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc61)
            %26 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc62)
            %27 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
            %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc63)
            cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc62)
          } else {
            %14 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc14)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc14)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc64)
          } loc(#loc196)
        } loc(#loc193)
      } loc(#loc191)
    } loc(#loc188)
    cir.return loc(#loc16)
  } loc(#loc184)
  cir.func no_proto  @CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc205)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc67)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc206)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc69)
    cir.return loc(#loc66)
  } loc(#loc204)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc208)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc75)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc75)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc209)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc77)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc77)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc210)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc212)
      %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc213)
      %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc82)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc212)
      %8 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc84)
      cir.store %8, %6 : !u64i, !cir.ptr<!u64i> loc(#loc213)
      cir.scope {
        %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc215)
        cir.scope {
          %10 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc91)
          %11 = cir.const #cir.int<5> : !u64i loc(#loc217)
          %12 = cir.cmp(gt, %10, %11) : !u64i, !s32i loc(#loc218)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc94)
          cir.if %13 {
            %14 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc98)
            %15 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc99)
            %16 = cir.const #cir.int<1> : !u64i loc(#loc220)
            %17 = cir.binop(mul, %15, %16) : !u64i loc(#loc221)
            %18 = cir.call @malloc(%17) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc98)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc222)
            cir.store %19, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc223)
            cir.scope {
              %29 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
              %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc107)
              %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc107)
              %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!s8i>, !s32i loc(#loc225)
              %33 = cir.cast(int_to_bool, %32 : !s32i), !cir.bool loc(#loc108)
              cir.if %33 {
                %34 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc110)
                %35 = cir.const #cir.int<1> : !s32i loc(#loc111)
                %36 = cir.unary(minus, %35) : !s32i, !s32i loc(#loc112)
                cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc110)
              } loc(#loc226)
            } loc(#loc224)
            %20 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc113)
            %21 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
            %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc115)
            %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc115)
            %24 = cir.call @strcpy(%21, %23) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc113)
            %25 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
            cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc117)
            %26 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc118)
            %27 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
            %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc119)
            cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc118)
          } else {
            %14 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc120)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc120)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc121)
          } loc(#loc219)
        } loc(#loc216)
      } loc(#loc214)
    } loc(#loc211)
    cir.return loc(#loc72)
  } loc(#loc207)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc122)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc228)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc127)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc127)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc229)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc129)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc129)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc230)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataCopy", init] {alignment = 8 : i64} loc(#loc232)
      %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc233)
      %7 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc135)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc232)
      %8 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc137)
      cir.store %8, %6 : !u64i, !cir.ptr<!u64i> loc(#loc233)
      cir.scope {
        %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc235)
        cir.scope {
          %10 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc144)
          %11 = cir.const #cir.int<5> : !u64i loc(#loc237)
          %12 = cir.cmp(gt, %10, %11) : !u64i, !s32i loc(#loc238)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc147)
          %14 = cir.ternary(%13, true {
            %15 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc149)
            %16 = cir.const #cir.int<100> : !s32i loc(#loc150)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc150)
            %18 = cir.cmp(lt, %15, %17) : !u64i, !s32i loc(#loc239)
            %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc151)
            %20 = cir.ternary(%19, true {
              %21 = cir.const #true loc(#loc148)
              cir.yield %21 : !cir.bool loc(#loc148)
            }, false {
              %21 = cir.const #false loc(#loc148)
              cir.yield %21 : !cir.bool loc(#loc148)
            }) : (!cir.bool) -> !cir.bool loc(#loc148)
            cir.yield %20 : !cir.bool loc(#loc148)
          }, false {
            %15 = cir.const #false loc(#loc148)
            cir.yield %15 : !cir.bool loc(#loc148)
          }) : (!cir.bool) -> !cir.bool loc(#loc148)
          cir.if %14 {
            %15 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc155)
            %16 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc156)
            %17 = cir.const #cir.int<1> : !u64i loc(#loc241)
            %18 = cir.binop(mul, %16, %17) : !u64i loc(#loc242)
            %19 = cir.call @malloc(%18) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc155)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc243)
            cir.store %20, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc244)
            cir.scope {
              %30 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
              %31 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc164)
              %32 = cir.cast(bitcast, %31 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc164)
              %33 = cir.cmp(eq, %30, %32) : !cir.ptr<!s8i>, !s32i loc(#loc246)
              %34 = cir.cast(int_to_bool, %33 : !s32i), !cir.bool loc(#loc165)
              cir.if %34 {
                %35 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc167)
                %36 = cir.const #cir.int<1> : !s32i loc(#loc168)
                %37 = cir.unary(minus, %36) : !s32i, !s32i loc(#loc169)
                cir.call @exit(%37) : (!s32i) -> () extra(#fn_attr) loc(#loc167)
              } loc(#loc247)
            } loc(#loc245)
            %21 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc170)
            %22 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc171)
            %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc172)
            %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc172)
            %25 = cir.call @strcpy(%22, %24) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc170)
            %26 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc173)
            cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc174)
            %27 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc175)
            %28 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
            %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc176)
            cir.call @free(%29) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc175)
          } else {
            %15 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc122)
            %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc122)
            cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc177)
          } loc(#loc240)
        } loc(#loc236)
      } loc(#loc234)
    } loc(#loc231)
    cir.return loc(#loc124)
  } loc(#loc227)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/string.h":141:1)
#loc8 = loc("/usr/include/string.h":142:14)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":48:34)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("/usr/include/stdlib.h":687:1)
#loc13 = loc("/usr/include/stdlib.h":687:32)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":54:27)
#loc15 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":28:1)
#loc16 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":58:1)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":30:5)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":30:12)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":32:12)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":32:5)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":34:12)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":34:5)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":34:17)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":35:5)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":57:5)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":36:9)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":36:27)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":37:9)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":37:23)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":38:9)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":56:9)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":39:13)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":39:20)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":43:13)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":55:13)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":43:17)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":43:24)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":43:43)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":43:22)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":44:13)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":51:13)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":53:13)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":45:36)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":45:43)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":45:48)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":45:59)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":45:60)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":45:17)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":46:17)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":46:49)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":46:21)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":46:33)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":46:30)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":46:39)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":46:40)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":46:46)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":46:45)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":48:17)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":48:24)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":49:27)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":49:17)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":50:17)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":50:22)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":54:17)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":130:1)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":134:1)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":132:5)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":132:13)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":133:5)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":133:13)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":65:1)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":95:1)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":67:5)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":67:12)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":69:12)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":69:5)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":71:12)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":71:5)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":72:5)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":94:5)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":73:9)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":73:27)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":74:9)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":74:23)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":75:9)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":93:9)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":76:13)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":76:20)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":80:13)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":92:13)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":80:17)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":80:24)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":80:43)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":80:22)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":81:13)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":88:13)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":90:13)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":82:36)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":82:43)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":82:48)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":82:59)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":82:60)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":82:17)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":83:17)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":83:49)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":83:21)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":83:33)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":83:30)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":83:39)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":83:40)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":83:46)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":83:45)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":85:17)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":85:24)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":85:34)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":86:27)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":86:17)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":87:17)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":87:22)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":91:27)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":91:17)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":124:27)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":98:1)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":128:1)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":100:5)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":100:12)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":102:12)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":102:5)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":104:12)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":104:5)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":104:17)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":105:5)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":127:5)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":106:9)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":106:27)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":107:9)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":107:23)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":108:9)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":126:9)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":109:13)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":109:20)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":113:13)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":125:13)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":113:17)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":113:24)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":113:43)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":113:22)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":113:45)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":113:48)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":113:55)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":113:53)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":114:13)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":121:13)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":123:13)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":115:36)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":115:43)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":115:48)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":115:59)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":115:60)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":115:17)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":116:17)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":116:49)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":116:21)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":116:33)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":116:30)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":116:39)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":116:40)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":116:46)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":116:45)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":118:17)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":118:24)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":118:34)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":119:27)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":119:17)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":120:17)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":120:22)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_31.c":124:17)
#loc178 = loc(fused[#loc1, #loc2])
#loc179 = loc(fused[#loc3, #loc4])
#loc180 = loc(fused[#loc5, #loc6])
#loc181 = loc(fused[#loc7, #loc8])
#loc182 = loc(fused[#loc10, #loc11])
#loc183 = loc(fused[#loc12, #loc13])
#loc184 = loc(fused[#loc15, #loc16])
#loc185 = loc(fused[#loc17, #loc18])
#loc186 = loc(fused[#loc20, #loc19])
#loc187 = loc(fused[#loc22, #loc23])
#loc188 = loc(fused[#loc24, #loc25])
#loc189 = loc(fused[#loc26, #loc27])
#loc190 = loc(fused[#loc28, #loc29])
#loc191 = loc(fused[#loc30, #loc31])
#loc192 = loc(fused[#loc32, #loc33])
#loc193 = loc(fused[#loc34, #loc35])
#loc194 = loc(fused[#loc37, #loc38])
#loc195 = loc(fused[#loc36, #loc38])
#loc196 = loc(fused[#loc40, #loc41, #loc42, #loc35])
#loc197 = loc(fused[#loc45, #loc46])
#loc198 = loc(fused[#loc44, #loc46])
#loc199 = loc(fused[#loc43, #loc47])
#loc200 = loc(fused[#loc48, #loc47])
#loc201 = loc(fused[#loc49, #loc50])
#loc202 = loc(fused[#loc51, #loc52])
#loc203 = loc(fused[#loc54, #loc50])
#loc204 = loc(fused[#loc65, #loc66])
#loc205 = loc(fused[#loc67, #loc68])
#loc206 = loc(fused[#loc69, #loc70])
#loc207 = loc(fused[#loc71, #loc72])
#loc208 = loc(fused[#loc73, #loc74])
#loc209 = loc(fused[#loc76, #loc75])
#loc210 = loc(fused[#loc78, #loc77])
#loc211 = loc(fused[#loc79, #loc80])
#loc212 = loc(fused[#loc81, #loc82])
#loc213 = loc(fused[#loc83, #loc84])
#loc214 = loc(fused[#loc85, #loc86])
#loc215 = loc(fused[#loc87, #loc88])
#loc216 = loc(fused[#loc89, #loc90])
#loc217 = loc(fused[#loc92, #loc93])
#loc218 = loc(fused[#loc91, #loc93])
#loc219 = loc(fused[#loc95, #loc96, #loc97, #loc90])
#loc220 = loc(fused[#loc100, #loc101])
#loc221 = loc(fused[#loc99, #loc101])
#loc222 = loc(fused[#loc98, #loc102])
#loc223 = loc(fused[#loc103, #loc102])
#loc224 = loc(fused[#loc104, #loc105])
#loc225 = loc(fused[#loc106, #loc107])
#loc226 = loc(fused[#loc109, #loc105])
#loc227 = loc(fused[#loc123, #loc124])
#loc228 = loc(fused[#loc125, #loc126])
#loc229 = loc(fused[#loc128, #loc127])
#loc230 = loc(fused[#loc130, #loc131])
#loc231 = loc(fused[#loc132, #loc133])
#loc232 = loc(fused[#loc134, #loc135])
#loc233 = loc(fused[#loc136, #loc137])
#loc234 = loc(fused[#loc138, #loc139])
#loc235 = loc(fused[#loc140, #loc141])
#loc236 = loc(fused[#loc142, #loc143])
#loc237 = loc(fused[#loc145, #loc146])
#loc238 = loc(fused[#loc144, #loc146])
#loc239 = loc(fused[#loc149, #loc150])
#loc240 = loc(fused[#loc152, #loc153, #loc154, #loc143])
#loc241 = loc(fused[#loc157, #loc158])
#loc242 = loc(fused[#loc156, #loc158])
#loc243 = loc(fused[#loc155, #loc159])
#loc244 = loc(fused[#loc160, #loc159])
#loc245 = loc(fused[#loc161, #loc162])
#loc246 = loc(fused[#loc163, #loc164])
#loc247 = loc(fused[#loc166, #loc162])
