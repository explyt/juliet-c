!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE468_Incorrect_Pointer_Scaling/CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.good1.intArray = #cir.const_array<[#cir.int<1> : !s32i, #cir.int<2> : !s32i, #cir.int<3> : !s32i, #cir.int<4> : !s32i, #cir.int<5> : !s32i]> : !cir.array<!s32i x 5> loc(#loc49)
  cir.global "private" constant cir_private @__const.CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16_bad.intArray = #cir.const_array<[#cir.int<1> : !s32i, #cir.int<2> : !s32i, #cir.int<3> : !s32i, #cir.int<4> : !s32i, #cir.int<5> : !s32i]> : !cir.array<!s32i x 5> loc(#loc50)
  cir.func private @printIntLine(!s32i) loc(#loc51)
  cir.func no_proto @CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 5>, !cir.ptr<!cir.array<!s32i x 5>>, ["intArray"] {alignment = 16 : i64} loc(#loc50)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["charPointer", init] {alignment = 8 : i64} loc(#loc53)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["toPrint", init] {alignment = 4 : i64} loc(#loc54)
    cir.br ^bb1 loc(#loc55)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc55)
  ^bb2:  // pred: ^bb1
    %3 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc15)
    cir.brcond %4 ^bb3, ^bb6 loc(#loc15)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc56)
  ^bb4:  // pred: ^bb3
    %5 = cir.get_global @__const.CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16_bad.intArray : !cir.ptr<!cir.array<!s32i x 5>> loc(#loc50)
    cir.copy %5 to %0 : !cir.ptr<!cir.array<!s32i x 5>> loc(#loc50)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc10)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s32i>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc53)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc19)
    %10 = cir.ptr_stride(%8 : !cir.ptr<!s8i>, %9 : !s32i), !cir.ptr<!s8i> loc(#loc20)
    %11 = cir.load %10 : !cir.ptr<!s8i>, !s8i loc(#loc21)
    %12 = cir.cast(integral, %11 : !s8i), !s32i loc(#loc21)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc54)
    %13 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc22)
    cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc23)
    cir.br ^bb5 loc(#loc17)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc24)
  ^bb6:  // 2 preds: ^bb2, ^bb5
    cir.br ^bb7 loc(#loc14)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc8)
  } loc(#loc52)
  cir.func no_proto @CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc58)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc27)
    cir.return loc(#loc26)
  } loc(#loc57)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 5>, !cir.ptr<!cir.array<!s32i x 5>>, ["intArray"] {alignment = 16 : i64} loc(#loc49)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["charPointer", init] {alignment = 8 : i64} loc(#loc60)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["toPrint", init] {alignment = 4 : i64} loc(#loc61)
    cir.br ^bb1 loc(#loc62)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc62)
  ^bb2:  // pred: ^bb1
    %3 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc37)
    cir.brcond %4 ^bb3, ^bb6 loc(#loc37)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc63)
  ^bb4:  // pred: ^bb3
    %5 = cir.get_global @__const.good1.intArray : !cir.ptr<!cir.array<!s32i x 5>> loc(#loc49)
    cir.copy %5 to %0 : !cir.ptr<!cir.array<!s32i x 5>> loc(#loc49)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 5>>), !cir.ptr<!s32i> loc(#loc32)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!s32i>), !cir.ptr<!s8i> loc(#loc32)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc60)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc41)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc41)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc64)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc65)
    %13 = cir.ptr_stride(%8 : !cir.ptr<!s8i>, %12 : !u64i), !cir.ptr<!s8i> loc(#loc44)
    %14 = cir.load %13 : !cir.ptr<!s8i>, !s8i loc(#loc45)
    %15 = cir.cast(integral, %14 : !s8i), !s32i loc(#loc45)
    cir.store %15, %2 : !s32i, !cir.ptr<!s32i> loc(#loc61)
    %16 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc46)
    cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc47)
    cir.br ^bb5 loc(#loc39)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc48)
  ^bb6:  // 2 preds: ^bb2, ^bb5
    cir.br ^bb7 loc(#loc36)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc30)
  } loc(#loc59)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE468_Incorrect_Pointer_Scaling/CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":0:0)
#loc1 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":46:13)
#loc2 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":46:47)
#loc3 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":25:13)
#loc4 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":25:47)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":20:1)
#loc8 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":34:1)
#loc9 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":26:13)
#loc10 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":26:41)
#loc11 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":29:13)
#loc12 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":29:50)
#loc13 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":22:5)
#loc14 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":33:5)
#loc15 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":22:11)
#loc16 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":24:9)
#loc17 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":31:9)
#loc18 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":29:36)
#loc19 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":29:48)
#loc20 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":29:47)
#loc21 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":29:34)
#loc22 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":30:26)
#loc23 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":30:13)
#loc24 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":32:9)
#loc25 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":57:1)
#loc26 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":60:1)
#loc27 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":59:5)
#loc28 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":59:11)
#loc29 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":41:1)
#loc30 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":55:1)
#loc31 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":47:13)
#loc32 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":47:41)
#loc33 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":50:13)
#loc34 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":50:64)
#loc35 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":43:5)
#loc36 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":54:5)
#loc37 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":43:11)
#loc38 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":45:9)
#loc39 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":52:9)
#loc40 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":50:36)
#loc41 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":50:49)
#loc42 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":50:51)
#loc43 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":50:61)
#loc44 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":50:47)
#loc45 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":50:34)
#loc46 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":51:26)
#loc47 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":51:13)
#loc48 = loc("CWE468_Incorrect_Pointer_Scaling__char_ptr_to_int_16.c":53:9)
#loc49 = loc(fused[#loc1, #loc2])
#loc50 = loc(fused[#loc3, #loc4])
#loc51 = loc(fused[#loc5, #loc6])
#loc52 = loc(fused[#loc7, #loc8])
#loc53 = loc(fused[#loc9, #loc10])
#loc54 = loc(fused[#loc11, #loc12])
#loc55 = loc(fused[#loc13, #loc14])
#loc56 = loc(fused[#loc16, #loc17])
#loc57 = loc(fused[#loc25, #loc26])
#loc58 = loc(fused[#loc27, #loc28])
#loc59 = loc(fused[#loc29, #loc30])
#loc60 = loc(fused[#loc31, #loc32])
#loc61 = loc(fused[#loc33, #loc34])
#loc62 = loc(fused[#loc35, #loc36])
#loc63 = loc(fused[#loc38, #loc39])
#loc64 = loc(fused[#loc42, #loc43])
#loc65 = loc(fused[#loc41, #loc43])
