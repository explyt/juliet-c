!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":24:22)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":24:26)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":110:26)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":110:30)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":74:26)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":74:30)
#true = #cir.bool<true> : !cir.bool
#loc220 = loc(fused[#loc10, #loc11])
#loc250 = loc(fused[#loc90, #loc91])
#loc276 = loc(fused[#loc166, #loc167])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc216)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc217)
  cir.func private  @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc218)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc7)
  cir.func internal private  @badSource(%arg0: !s32i loc(fused[#loc10, #loc11])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc220)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc9)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc12)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc222)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc222)
      cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc222)
      cir.scope {
        %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc19)
        %7 = cir.const #cir.int<3> : !s32i loc(#loc20)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc20)
        %9 = cir.const #cir.int<4> : !u64i loc(#loc20)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc20)
        %11 = cir.const #cir.int<2> : !s32i loc(#loc20)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc20)
        %13 = cir.binop(add, %10, %12) : !u64i loc(#loc20)
        %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc20)
        %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc217)
        %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc21)
        %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc22)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc23)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc23)
        %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !s32i loc(#loc224)
        %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc24)
        cir.if %21 {
          %22 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc28)
          %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc29)
          cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc226)
        } else {
          %22 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc7)
          %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc7)
          cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc32)
        } loc(#loc225)
      } loc(#loc223)
    } loc(#loc221)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc33)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc227)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc227)
    cir.return %3 : !s32i loc(#loc227)
  } loc(#loc219)
  cir.func private  @printIntLine(!s32i) loc(#loc228)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc229)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc39)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc231)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc45)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc232)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    %4 = cir.call @badSource(%3) : (!s32i) -> !s32i loc(#loc48)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc233)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc235)
      %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc236)
      %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc236)
      cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc236)
      cir.scope {
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc59)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc60)
        %10 = cir.cmp(ge, %8, %9) : !s32i, !s32i loc(#loc238)
        %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc61)
        cir.if %11 {
          %12 = cir.const #cir.int<1> : !s32i loc(#loc65)
          %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc66)
          %14 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc67)
          %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc67)
          cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc240)
          cir.scope {
            %16 = cir.const #cir.int<0> : !s32i loc(#loc70)
            cir.store %16, %5 : !s32i, !cir.ptr<!s32i> loc(#loc242)
            cir.for : cond {
              %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc72)
              %18 = cir.const #cir.int<10> : !s32i loc(#loc73)
              %19 = cir.cmp(lt, %17, %18) : !s32i, !s32i loc(#loc243)
              %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc74)
              cir.condition(%20) loc(#loc74)
            } body {
              cir.scope {
                %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc76)
                %18 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc77)
                %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc77)
                %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc77)
                cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc78)
              } loc(#loc244)
              cir.yield loc(#loc69)
            } step {
              %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc79)
              %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc80)
              cir.store %18, %5 : !s32i, !cir.ptr<!s32i> loc(#loc245)
              cir.yield loc(#loc241)
            } loc(#loc241)
          } loc(#loc241)
        } else {
          %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc39)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc39)
          cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc81)
        } loc(#loc239)
      } loc(#loc237)
    } loc(#loc234)
    cir.return loc(#loc41)
  } loc(#loc230)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc247)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc84)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc248)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc86)
    cir.return loc(#loc83)
  } loc(#loc246)
  cir.func internal private  @goodB2GSource(%arg0: !s32i loc(fused[#loc90, #loc91])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc250)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc89)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc92)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc252)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc252)
      cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc252)
      cir.scope {
        %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc99)
        %7 = cir.const #cir.int<3> : !s32i loc(#loc100)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc100)
        %9 = cir.const #cir.int<4> : !u64i loc(#loc100)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc100)
        %11 = cir.const #cir.int<2> : !s32i loc(#loc100)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc100)
        %13 = cir.binop(add, %10, %12) : !u64i loc(#loc100)
        %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc100)
        %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc217)
        %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc101)
        %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc102)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc103)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc103)
        %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !s32i loc(#loc254)
        %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc104)
        cir.if %21 {
          %22 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc108)
          %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc109)
          cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc256)
        } else {
          %22 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc112)
          %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc112)
          cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc113)
        } loc(#loc255)
      } loc(#loc253)
    } loc(#loc251)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc257)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc257)
    cir.return %3 : !s32i loc(#loc257)
  } loc(#loc249)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc116)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc259)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc121)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc122)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc260)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    %4 = cir.call @goodB2GSource(%3) : (!s32i) -> !s32i loc(#loc125)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc261)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc263)
      %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc264)
      %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc264)
      cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc264)
      cir.scope {
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc136)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc137)
        %10 = cir.cmp(ge, %8, %9) : !s32i, !s32i loc(#loc266)
        %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc138)
        %12 = cir.ternary(%11, true {
          %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc140)
          %14 = cir.const #cir.int<10> : !s32i loc(#loc141)
          %15 = cir.cmp(lt, %13, %14) : !s32i, !s32i loc(#loc267)
          %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc143)
          %17 = cir.ternary(%16, true {
            %18 = cir.const #true loc(#loc139)
            cir.yield %18 : !cir.bool loc(#loc139)
          }, false {
            %18 = cir.const #false loc(#loc139)
            cir.yield %18 : !cir.bool loc(#loc139)
          }) : (!cir.bool) -> !cir.bool loc(#loc139)
          cir.yield %17 : !cir.bool loc(#loc139)
        }, false {
          %13 = cir.const #false loc(#loc139)
          cir.yield %13 : !cir.bool loc(#loc139)
        }) : (!cir.bool) -> !cir.bool loc(#loc139)
        cir.if %12 {
          %13 = cir.const #cir.int<1> : !s32i loc(#loc147)
          %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc148)
          %15 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc149)
          %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc149)
          cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc269)
          cir.scope {
            %17 = cir.const #cir.int<0> : !s32i loc(#loc152)
            cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc271)
            cir.for : cond {
              %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc154)
              %19 = cir.const #cir.int<10> : !s32i loc(#loc155)
              %20 = cir.cmp(lt, %18, %19) : !s32i, !s32i loc(#loc272)
              %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc156)
              cir.condition(%21) loc(#loc156)
            } body {
              cir.scope {
                %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc158)
                %19 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc159)
                %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc159)
                %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc159)
                cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc160)
              } loc(#loc273)
              cir.yield loc(#loc151)
            } step {
              %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc161)
              %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc162)
              cir.store %19, %5 : !s32i, !cir.ptr<!s32i> loc(#loc274)
              cir.yield loc(#loc270)
            } loc(#loc270)
          } loc(#loc270)
        } else {
          %13 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc116)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc116)
          cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc163)
        } loc(#loc268)
      } loc(#loc265)
    } loc(#loc262)
    cir.return loc(#loc118)
  } loc(#loc258)
  cir.func internal private  @goodG2BSource(%arg0: !s32i loc(fused[#loc166, #loc167])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc276)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc165)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc168)
    %2 = cir.const #cir.int<7> : !s32i loc(#loc169)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc277)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc171)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc278)
    %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc278)
    cir.return %4 : !s32i loc(#loc278)
  } loc(#loc275)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc280)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc177)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc178)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc281)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc180)
    %4 = cir.call @goodG2BSource(%3) : (!s32i) -> !s32i loc(#loc181)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc282)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc284)
      %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc285)
      %7 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc285)
      cir.store %7, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc285)
      cir.scope {
        %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc192)
        %9 = cir.const #cir.int<0> : !s32i loc(#loc193)
        %10 = cir.cmp(ge, %8, %9) : !s32i, !s32i loc(#loc287)
        %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc194)
        cir.if %11 {
          %12 = cir.const #cir.int<1> : !s32i loc(#loc198)
          %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc199)
          %14 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc200)
          %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc200)
          cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc289)
          cir.scope {
            %16 = cir.const #cir.int<0> : !s32i loc(#loc203)
            cir.store %16, %5 : !s32i, !cir.ptr<!s32i> loc(#loc291)
            cir.for : cond {
              %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc205)
              %18 = cir.const #cir.int<10> : !s32i loc(#loc206)
              %19 = cir.cmp(lt, %17, %18) : !s32i, !s32i loc(#loc292)
              %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc207)
              cir.condition(%20) loc(#loc207)
            } body {
              cir.scope {
                %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc209)
                %18 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc210)
                %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc210)
                %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc210)
                cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc211)
              } loc(#loc293)
              cir.yield loc(#loc202)
            } step {
              %17 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc212)
              %18 = cir.unary(inc, %17) : !s32i, !s32i loc(#loc213)
              cir.store %18, %5 : !s32i, !cir.ptr<!s32i> loc(#loc294)
              cir.yield loc(#loc290)
            } loc(#loc290)
          } loc(#loc290)
        } else {
          %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc214)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc214)
          cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc215)
        } loc(#loc288)
      } loc(#loc286)
    } loc(#loc283)
    cir.return loc(#loc174)
  } loc(#loc279)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":36:23)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":24:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":40:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":25:1)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":26:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":38:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":27:9)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":27:45)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":29:9)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":37:9)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":29:19)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":29:32)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":29:49)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":29:13)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":29:59)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":29:56)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":30:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":33:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":35:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":32:25)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":32:20)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":32:13)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":32:36)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":36:13)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":39:12)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":39:5)
#loc35 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc36 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc37 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc38 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":64:23)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":42:1)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":67:1)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":44:5)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":44:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":46:13)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":46:12)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":46:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":47:22)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":47:12)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":47:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":47:26)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":48:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":66:5)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":49:9)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":49:13)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":50:9)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":50:30)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":53:9)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":65:9)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":53:13)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":53:21)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":53:18)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":54:9)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":61:9)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":63:9)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":55:28)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":55:20)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":55:13)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":57:13)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":60:13)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":57:21)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":57:17)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":57:24)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":57:28)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":57:26)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":58:13)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":59:37)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":59:30)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":59:17)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":57:33)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":57:32)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":64:13)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":154:1)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":158:1)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":156:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":156:13)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":157:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":157:13)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":110:1)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":126:1)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":111:1)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":112:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":124:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":113:9)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":113:45)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":115:9)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":123:9)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":115:19)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":115:32)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":115:49)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":115:13)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":115:59)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":115:56)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":116:9)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":119:9)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":121:9)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":118:25)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":118:20)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":118:13)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":118:36)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":122:23)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":122:13)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":125:12)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":125:5)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":149:23)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":128:1)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":152:1)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":130:5)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":130:9)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":132:13)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":132:12)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":132:5)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":133:26)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":133:12)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":133:5)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":133:30)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":134:5)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":151:5)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":135:9)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":135:13)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":136:9)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":136:30)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":138:9)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":150:9)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":138:13)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":138:21)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":138:18)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":138:23)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":138:26)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":138:34)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":138:36)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":138:31)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":139:9)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":146:9)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":148:9)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":140:28)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":140:20)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":140:13)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":142:13)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":145:13)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":142:21)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":142:17)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":142:24)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":142:28)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":142:26)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":143:13)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":144:37)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":144:30)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":144:17)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":142:33)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":142:32)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":149:13)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":74:1)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":80:1)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":75:1)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":78:12)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":78:5)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":79:12)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":79:5)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":82:1)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":107:1)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":84:5)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":84:9)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":86:13)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":86:12)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":86:5)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":87:26)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":87:12)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":87:5)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":87:30)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":88:5)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":106:5)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":89:9)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":89:13)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":90:9)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":90:30)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":93:9)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":105:9)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":93:13)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":93:21)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":93:18)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":94:9)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":101:9)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":103:9)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":95:28)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":95:20)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":95:13)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":97:13)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":100:13)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":97:21)
#loc204 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":97:17)
#loc205 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":97:24)
#loc206 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":97:28)
#loc207 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":97:26)
#loc208 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":98:13)
#loc209 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":99:37)
#loc210 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":99:30)
#loc211 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":99:17)
#loc212 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":97:33)
#loc213 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":97:32)
#loc214 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":104:23)
#loc215 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_42.c":104:13)
#loc216 = loc(fused[#loc1, #loc2])
#loc217 = loc(fused[#loc3, #loc4])
#loc218 = loc(fused[#loc5, #loc6])
#loc219 = loc(fused[#loc8, #loc9])
#loc221 = loc(fused[#loc13, #loc14])
#loc222 = loc(fused[#loc15, #loc16])
#loc223 = loc(fused[#loc17, #loc18])
#loc224 = loc(fused[#loc22, #loc23])
#loc225 = loc(fused[#loc25, #loc26, #loc27, #loc18])
#loc226 = loc(fused[#loc30, #loc31])
#loc227 = loc(fused[#loc34, #loc33])
#loc228 = loc(fused[#loc35, #loc36])
#loc229 = loc(fused[#loc37, #loc38])
#loc230 = loc(fused[#loc40, #loc41])
#loc231 = loc(fused[#loc42, #loc43])
#loc232 = loc(fused[#loc46, #loc44])
#loc233 = loc(fused[#loc49, #loc50])
#loc234 = loc(fused[#loc51, #loc52])
#loc235 = loc(fused[#loc53, #loc54])
#loc236 = loc(fused[#loc55, #loc56])
#loc237 = loc(fused[#loc57, #loc58])
#loc238 = loc(fused[#loc59, #loc60])
#loc239 = loc(fused[#loc62, #loc63, #loc64, #loc58])
#loc240 = loc(fused[#loc67, #loc65])
#loc241 = loc(fused[#loc68, #loc69])
#loc242 = loc(fused[#loc71, #loc70])
#loc243 = loc(fused[#loc72, #loc73])
#loc244 = loc(fused[#loc75, #loc69])
#loc245 = loc(fused[#loc80, #loc79])
#loc246 = loc(fused[#loc82, #loc83])
#loc247 = loc(fused[#loc84, #loc85])
#loc248 = loc(fused[#loc86, #loc87])
#loc249 = loc(fused[#loc88, #loc89])
#loc251 = loc(fused[#loc93, #loc94])
#loc252 = loc(fused[#loc95, #loc96])
#loc253 = loc(fused[#loc97, #loc98])
#loc254 = loc(fused[#loc102, #loc103])
#loc255 = loc(fused[#loc105, #loc106, #loc107, #loc98])
#loc256 = loc(fused[#loc110, #loc111])
#loc257 = loc(fused[#loc115, #loc114])
#loc258 = loc(fused[#loc117, #loc118])
#loc259 = loc(fused[#loc119, #loc120])
#loc260 = loc(fused[#loc123, #loc121])
#loc261 = loc(fused[#loc126, #loc127])
#loc262 = loc(fused[#loc128, #loc129])
#loc263 = loc(fused[#loc130, #loc131])
#loc264 = loc(fused[#loc132, #loc133])
#loc265 = loc(fused[#loc134, #loc135])
#loc266 = loc(fused[#loc136, #loc137])
#loc267 = loc(fused[#loc140, #loc142])
#loc268 = loc(fused[#loc144, #loc145, #loc146, #loc135])
#loc269 = loc(fused[#loc149, #loc147])
#loc270 = loc(fused[#loc150, #loc151])
#loc271 = loc(fused[#loc153, #loc152])
#loc272 = loc(fused[#loc154, #loc155])
#loc273 = loc(fused[#loc157, #loc151])
#loc274 = loc(fused[#loc162, #loc161])
#loc275 = loc(fused[#loc164, #loc165])
#loc277 = loc(fused[#loc170, #loc169])
#loc278 = loc(fused[#loc172, #loc171])
#loc279 = loc(fused[#loc173, #loc174])
#loc280 = loc(fused[#loc175, #loc176])
#loc281 = loc(fused[#loc179, #loc177])
#loc282 = loc(fused[#loc182, #loc183])
#loc283 = loc(fused[#loc184, #loc185])
#loc284 = loc(fused[#loc186, #loc187])
#loc285 = loc(fused[#loc188, #loc189])
#loc286 = loc(fused[#loc190, #loc191])
#loc287 = loc(fused[#loc192, #loc193])
#loc288 = loc(fused[#loc195, #loc196, #loc197, #loc191])
#loc289 = loc(fused[#loc200, #loc198])
#loc290 = loc(fused[#loc201, #loc202])
#loc291 = loc(fused[#loc204, #loc203])
#loc292 = loc(fused[#loc205, #loc206])
#loc293 = loc(fused[#loc208, #loc202])
#loc294 = loc(fused[#loc213, #loc212])
