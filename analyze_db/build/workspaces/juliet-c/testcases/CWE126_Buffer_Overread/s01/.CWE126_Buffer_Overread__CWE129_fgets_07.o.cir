!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc268)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc269)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc270)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc271)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc272)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc11)
  cir.func private @printIntLine(!s32i) loc(#loc273)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc14)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_fgets_07_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc275)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc20)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc276)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc268)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc24)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc25)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc278)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc281)
          %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc281)
          cir.store %8, %7 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc281)
          cir.scope {
            %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc33)
            %10 = cir.const #cir.int<3> : !s32i loc(#loc34)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc34)
            %12 = cir.const #cir.int<4> : !u64i loc(#loc34)
            %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc34)
            %14 = cir.const #cir.int<2> : !s32i loc(#loc34)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc34)
            %16 = cir.binop(add, %13, %15) : !u64i loc(#loc34)
            %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc34)
            %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc270)
            %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc35)
            %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc36)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc37)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc37)
            %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc283)
            cir.if %23 {
              %24 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc41)
              %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc42)
              cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc285)
            } else {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc11)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc11)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc45)
            } loc(#loc284)
          } loc(#loc282)
        } loc(#loc280)
      } loc(#loc279)
    } loc(#loc277)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc268)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc48)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc49)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc287)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc290)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc290)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc290)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc57)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc58)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc292)
            cir.if %11 {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc62)
              %13 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc63)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc63)
              %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc63)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc64)
            } else {
              %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc14)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc14)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc65)
            } loc(#loc293)
          } loc(#loc291)
        } loc(#loc289)
      } loc(#loc288)
    } loc(#loc286)
    cir.return loc(#loc16)
  } loc(#loc274)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_fgets_07_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc295)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc68)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc296)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc70)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc297)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc72)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc298)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc74)
    cir.return loc(#loc67)
  } loc(#loc294)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc77)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc300)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc82)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc83)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc301)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc268)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc87)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc88)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc303)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc306)
          %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc306)
          cir.store %8, %7 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc306)
          cir.scope {
            %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc96)
            %10 = cir.const #cir.int<3> : !s32i loc(#loc97)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc97)
            %12 = cir.const #cir.int<4> : !u64i loc(#loc97)
            %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc97)
            %14 = cir.const #cir.int<2> : !s32i loc(#loc97)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc97)
            %16 = cir.binop(add, %13, %15) : !u64i loc(#loc97)
            %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc97)
            %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc270)
            %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc98)
            %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc99)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc100)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc100)
            %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc308)
            cir.if %23 {
              %24 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc104)
              %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc105)
              cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc310)
            } else {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc108)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc108)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc109)
            } loc(#loc309)
          } loc(#loc307)
        } loc(#loc305)
      } loc(#loc304)
    } loc(#loc302)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc268)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc112)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc113)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc312)
      cir.if %6 {
        %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc76)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc76)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc117)
      } else {
        cir.scope {
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc315)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc315)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc315)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc124)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc125)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc317)
            %12 = cir.ternary(%11, true {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc127)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc128)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc318)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc126)
                cir.yield %17 : !cir.bool loc(#loc126)
              }, false {
                %17 = cir.const #false loc(#loc126)
                cir.yield %17 : !cir.bool loc(#loc126)
              }) : (!cir.bool) -> !cir.bool loc(#loc126)
              cir.yield %16 : !cir.bool loc(#loc126)
            }, false {
              %13 = cir.const #false loc(#loc126)
              cir.yield %13 : !cir.bool loc(#loc126)
            }) : (!cir.bool) -> !cir.bool loc(#loc126)
            cir.if %12 {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc133)
              %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc134)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc134)
              %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc134)
              cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc135)
            } else {
              %13 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc77)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc77)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc136)
            } loc(#loc319)
          } loc(#loc316)
        } loc(#loc314)
      } loc(#loc313)
    } loc(#loc311)
    cir.return loc(#loc79)
  } loc(#loc299)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc321)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc141)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc142)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc322)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc268)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc146)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc147)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc324)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc327)
          %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc327)
          cir.store %8, %7 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc327)
          cir.scope {
            %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc155)
            %10 = cir.const #cir.int<3> : !s32i loc(#loc156)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc156)
            %12 = cir.const #cir.int<4> : !u64i loc(#loc156)
            %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc156)
            %14 = cir.const #cir.int<2> : !s32i loc(#loc156)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc156)
            %16 = cir.binop(add, %13, %15) : !u64i loc(#loc156)
            %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc156)
            %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc270)
            %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc157)
            %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc158)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc159)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc159)
            %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc329)
            cir.if %23 {
              %24 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc163)
              %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc164)
              cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc331)
            } else {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc167)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc167)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc168)
            } loc(#loc330)
          } loc(#loc328)
        } loc(#loc326)
      } loc(#loc325)
    } loc(#loc323)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc268)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc171)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc172)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc333)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc336)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc336)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc336)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc180)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc181)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc338)
            %12 = cir.ternary(%11, true {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc183)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc184)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc339)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc182)
                cir.yield %17 : !cir.bool loc(#loc182)
              }, false {
                %17 = cir.const #false loc(#loc182)
                cir.yield %17 : !cir.bool loc(#loc182)
              }) : (!cir.bool) -> !cir.bool loc(#loc182)
              cir.yield %16 : !cir.bool loc(#loc182)
            }, false {
              %13 = cir.const #false loc(#loc182)
              cir.yield %13 : !cir.bool loc(#loc182)
            }) : (!cir.bool) -> !cir.bool loc(#loc182)
            cir.if %12 {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc189)
              %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc190)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc190)
              %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc190)
              cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc191)
            } else {
              %13 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc192)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc192)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc193)
            } loc(#loc340)
          } loc(#loc337)
        } loc(#loc335)
      } loc(#loc334)
    } loc(#loc332)
    cir.return loc(#loc138)
  } loc(#loc320)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc342)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc198)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc199)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc343)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc268)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc203)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc204)
      %6 = cir.cmp(ne, %4, %5) : !s32i, !cir.bool loc(#loc345)
      cir.if %6 {
        %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc208)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc208)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc209)
      } else {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc210)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc347)
      } loc(#loc346)
    } loc(#loc344)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc268)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc214)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc215)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc349)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc352)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc352)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc352)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc223)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc224)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc354)
            cir.if %11 {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc228)
              %13 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc229)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc229)
              %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc229)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc230)
            } else {
              %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc231)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc231)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc232)
            } loc(#loc355)
          } loc(#loc353)
        } loc(#loc351)
      } loc(#loc350)
    } loc(#loc348)
    cir.return loc(#loc195)
  } loc(#loc341)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc357)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc237)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc238)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc358)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc268)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc242)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc243)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc360)
      cir.if %6 {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc245)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc362)
      } loc(#loc361)
    } loc(#loc359)
    cir.scope {
      %3 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc268)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc249)
      %5 = cir.const #cir.int<5> : !s32i loc(#loc250)
      %6 = cir.cmp(eq, %4, %5) : !s32i, !cir.bool loc(#loc364)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc367)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc367)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc367)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc258)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc259)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc369)
            cir.if %11 {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc263)
              %13 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc264)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc264)
              %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc264)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc265)
            } else {
              %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc266)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc266)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc267)
            } loc(#loc370)
          } loc(#loc368)
        } loc(#loc366)
      } loc(#loc365)
    } loc(#loc363)
    cir.return loc(#loc234)
  } loc(#loc356)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_07.c":0:0)
#loc1 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":25:1)
#loc2 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":25:25)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("/usr/include/stdlib.h":105:1)
#loc8 = loc("/usr/include/stdlib.h":106:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":46:27)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":62:27)
#loc15 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":29:1)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":66:1)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":31:5)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":31:9)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":33:13)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":33:12)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":33:5)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":34:5)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":49:5)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":34:8)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":34:20)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":35:5)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":36:9)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":48:9)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":37:13)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":37:49)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":39:13)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":47:13)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":39:23)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":39:36)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":39:53)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":39:17)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":39:63)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":40:13)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":43:13)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":45:13)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":42:29)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":42:24)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":42:17)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":42:40)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":46:17)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":50:5)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":65:5)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":50:8)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":50:20)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":51:5)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":52:9)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":64:9)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":53:13)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":53:34)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":56:13)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":63:13)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":56:17)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":56:25)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":57:13)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":59:13)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":61:13)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":58:37)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":58:30)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":58:17)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":62:17)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":220:1)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":226:1)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":222:5)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":222:14)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":223:5)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":223:14)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":224:5)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":224:14)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":225:5)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":225:14)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":97:19)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":110:27)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":73:1)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":114:1)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":75:5)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":75:9)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":77:13)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":77:12)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":77:5)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":78:5)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":93:5)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":78:8)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":78:20)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":79:5)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":80:9)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":92:9)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":81:13)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":81:49)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":83:13)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":91:13)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":83:23)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":83:36)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":83:53)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":83:17)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":83:63)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":84:13)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":87:13)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":89:13)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":86:29)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":86:24)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":86:17)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":86:40)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":90:27)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":90:17)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":94:5)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":113:5)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":94:8)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":94:20)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":95:5)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":98:5)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":100:5)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":97:9)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":101:9)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":112:9)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":102:13)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":102:34)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":104:13)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":111:13)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":104:17)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":104:25)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":104:27)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":104:30)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":104:38)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":104:40)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":105:13)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":107:13)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":109:13)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":106:37)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":106:30)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":106:17)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":110:17)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":117:1)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":153:1)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":119:5)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":119:9)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":121:13)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":121:12)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":121:5)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":122:5)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":137:5)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":122:8)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":122:20)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":123:5)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":124:9)
#loc150 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":136:9)
#loc151 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":125:13)
#loc152 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":125:49)
#loc153 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":127:13)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":135:13)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":127:23)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":127:36)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":127:53)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":127:17)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":127:63)
#loc160 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":128:13)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":131:13)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":133:13)
#loc163 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":130:29)
#loc164 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":130:24)
#loc165 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":130:17)
#loc166 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":130:40)
#loc167 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":134:27)
#loc168 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":134:17)
#loc169 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":138:5)
#loc170 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":152:5)
#loc171 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":138:8)
#loc172 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":138:20)
#loc173 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":139:5)
#loc174 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":140:9)
#loc175 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":151:9)
#loc176 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":141:13)
#loc177 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":141:34)
#loc178 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":143:13)
#loc179 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":150:13)
#loc180 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":143:17)
#loc181 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":143:25)
#loc182 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":143:27)
#loc183 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":143:30)
#loc184 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":143:38)
#loc185 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":143:40)
#loc186 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":144:13)
#loc187 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":146:13)
#loc188 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":148:13)
#loc189 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":145:37)
#loc190 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":145:30)
#loc191 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":145:17)
#loc192 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":149:27)
#loc193 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":149:17)
#loc194 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":156:1)
#loc195 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":188:1)
#loc196 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":158:5)
#loc197 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":158:9)
#loc198 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":160:13)
#loc199 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":160:12)
#loc200 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":160:5)
#loc201 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":161:5)
#loc202 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":171:5)
#loc203 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":161:8)
#loc204 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":161:20)
#loc205 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":162:5)
#loc206 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":165:5)
#loc207 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":167:5)
#loc208 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":164:19)
#loc209 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":164:9)
#loc210 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":170:16)
#loc211 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":170:9)
#loc212 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":172:5)
#loc213 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":187:5)
#loc214 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":172:8)
#loc215 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":172:20)
#loc216 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":173:5)
#loc217 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":174:9)
#loc218 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":186:9)
#loc219 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":175:13)
#loc220 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":175:34)
#loc221 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":178:13)
#loc222 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":185:13)
#loc223 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":178:17)
#loc224 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":178:25)
#loc225 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":179:13)
#loc226 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":181:13)
#loc227 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":183:13)
#loc228 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":180:37)
#loc229 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":180:30)
#loc230 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":180:17)
#loc231 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":184:27)
#loc232 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":184:17)
#loc233 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":191:1)
#loc234 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":218:1)
#loc235 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":193:5)
#loc236 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":193:9)
#loc237 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":195:13)
#loc238 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":195:12)
#loc239 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":195:5)
#loc240 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":196:5)
#loc241 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":201:5)
#loc242 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":196:8)
#loc243 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":196:20)
#loc244 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":197:5)
#loc245 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":200:16)
#loc246 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":200:9)
#loc247 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":202:5)
#loc248 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":217:5)
#loc249 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":202:8)
#loc250 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":202:20)
#loc251 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":203:5)
#loc252 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":204:9)
#loc253 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":216:9)
#loc254 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":205:13)
#loc255 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":205:34)
#loc256 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":208:13)
#loc257 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":215:13)
#loc258 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":208:17)
#loc259 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":208:25)
#loc260 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":209:13)
#loc261 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":211:13)
#loc262 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":213:13)
#loc263 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":210:37)
#loc264 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":210:30)
#loc265 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":210:17)
#loc266 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":214:27)
#loc267 = loc("CWE126_Buffer_Overread__CWE129_fgets_07.c":214:17)
#loc268 = loc(fused[#loc1, #loc2])
#loc269 = loc(fused[#loc3, #loc4])
#loc270 = loc(fused[#loc5, #loc6])
#loc271 = loc(fused[#loc7, #loc8])
#loc272 = loc(fused[#loc9, #loc10])
#loc273 = loc(fused[#loc12, #loc13])
#loc274 = loc(fused[#loc15, #loc16])
#loc275 = loc(fused[#loc17, #loc18])
#loc276 = loc(fused[#loc21, #loc19])
#loc277 = loc(fused[#loc22, #loc23])
#loc278 = loc(fused[#loc24, #loc25])
#loc279 = loc(fused[#loc26, #loc23])
#loc280 = loc(fused[#loc27, #loc28])
#loc281 = loc(fused[#loc29, #loc30])
#loc282 = loc(fused[#loc31, #loc32])
#loc283 = loc(fused[#loc36, #loc37])
#loc284 = loc(fused[#loc38, #loc39, #loc40, #loc32])
#loc285 = loc(fused[#loc43, #loc44])
#loc286 = loc(fused[#loc46, #loc47])
#loc287 = loc(fused[#loc48, #loc49])
#loc288 = loc(fused[#loc50, #loc47])
#loc289 = loc(fused[#loc51, #loc52])
#loc290 = loc(fused[#loc53, #loc54])
#loc291 = loc(fused[#loc55, #loc56])
#loc292 = loc(fused[#loc57, #loc58])
#loc293 = loc(fused[#loc59, #loc60, #loc61, #loc56])
#loc294 = loc(fused[#loc66, #loc67])
#loc295 = loc(fused[#loc68, #loc69])
#loc296 = loc(fused[#loc70, #loc71])
#loc297 = loc(fused[#loc72, #loc73])
#loc298 = loc(fused[#loc74, #loc75])
#loc299 = loc(fused[#loc78, #loc79])
#loc300 = loc(fused[#loc80, #loc81])
#loc301 = loc(fused[#loc84, #loc82])
#loc302 = loc(fused[#loc85, #loc86])
#loc303 = loc(fused[#loc87, #loc88])
#loc304 = loc(fused[#loc89, #loc86])
#loc305 = loc(fused[#loc90, #loc91])
#loc306 = loc(fused[#loc92, #loc93])
#loc307 = loc(fused[#loc94, #loc95])
#loc308 = loc(fused[#loc99, #loc100])
#loc309 = loc(fused[#loc101, #loc102, #loc103, #loc95])
#loc310 = loc(fused[#loc106, #loc107])
#loc311 = loc(fused[#loc110, #loc111])
#loc312 = loc(fused[#loc112, #loc113])
#loc313 = loc(fused[#loc114, #loc115, #loc116, #loc111])
#loc314 = loc(fused[#loc118, #loc119])
#loc315 = loc(fused[#loc120, #loc121])
#loc316 = loc(fused[#loc122, #loc123])
#loc317 = loc(fused[#loc124, #loc125])
#loc318 = loc(fused[#loc127, #loc129])
#loc319 = loc(fused[#loc130, #loc131, #loc132, #loc123])
#loc320 = loc(fused[#loc137, #loc138])
#loc321 = loc(fused[#loc139, #loc140])
#loc322 = loc(fused[#loc143, #loc141])
#loc323 = loc(fused[#loc144, #loc145])
#loc324 = loc(fused[#loc146, #loc147])
#loc325 = loc(fused[#loc148, #loc145])
#loc326 = loc(fused[#loc149, #loc150])
#loc327 = loc(fused[#loc151, #loc152])
#loc328 = loc(fused[#loc153, #loc154])
#loc329 = loc(fused[#loc158, #loc159])
#loc330 = loc(fused[#loc160, #loc161, #loc162, #loc154])
#loc331 = loc(fused[#loc165, #loc166])
#loc332 = loc(fused[#loc169, #loc170])
#loc333 = loc(fused[#loc171, #loc172])
#loc334 = loc(fused[#loc173, #loc170])
#loc335 = loc(fused[#loc174, #loc175])
#loc336 = loc(fused[#loc176, #loc177])
#loc337 = loc(fused[#loc178, #loc179])
#loc338 = loc(fused[#loc180, #loc181])
#loc339 = loc(fused[#loc183, #loc185])
#loc340 = loc(fused[#loc186, #loc187, #loc188, #loc179])
#loc341 = loc(fused[#loc194, #loc195])
#loc342 = loc(fused[#loc196, #loc197])
#loc343 = loc(fused[#loc200, #loc198])
#loc344 = loc(fused[#loc201, #loc202])
#loc345 = loc(fused[#loc203, #loc204])
#loc346 = loc(fused[#loc205, #loc206, #loc207, #loc202])
#loc347 = loc(fused[#loc211, #loc210])
#loc348 = loc(fused[#loc212, #loc213])
#loc349 = loc(fused[#loc214, #loc215])
#loc350 = loc(fused[#loc216, #loc213])
#loc351 = loc(fused[#loc217, #loc218])
#loc352 = loc(fused[#loc219, #loc220])
#loc353 = loc(fused[#loc221, #loc222])
#loc354 = loc(fused[#loc223, #loc224])
#loc355 = loc(fused[#loc225, #loc226, #loc227, #loc222])
#loc356 = loc(fused[#loc233, #loc234])
#loc357 = loc(fused[#loc235, #loc236])
#loc358 = loc(fused[#loc239, #loc237])
#loc359 = loc(fused[#loc240, #loc241])
#loc360 = loc(fused[#loc242, #loc243])
#loc361 = loc(fused[#loc244, #loc241])
#loc362 = loc(fused[#loc246, #loc245])
#loc363 = loc(fused[#loc247, #loc248])
#loc364 = loc(fused[#loc249, #loc250])
#loc365 = loc(fused[#loc251, #loc248])
#loc366 = loc(fused[#loc252, #loc253])
#loc367 = loc(fused[#loc254, #loc255])
#loc368 = loc(fused[#loc256, #loc257])
#loc369 = loc(fused[#loc258, #loc259])
#loc370 = loc(fused[#loc260, #loc261, #loc262, #loc257])
