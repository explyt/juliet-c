!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc9 = loc("CWE401_Memory_Leak__int_realloc_41.c":24:21)
#loc10 = loc("CWE401_Memory_Leak__int_realloc_41.c":24:27)
#loc53 = loc("CWE401_Memory_Leak__int_realloc_41.c":67:25)
#loc54 = loc("CWE401_Memory_Leak__int_realloc_41.c":67:31)
#loc91 = loc("CWE401_Memory_Leak__int_realloc_41.c":48:25)
#loc92 = loc("CWE401_Memory_Leak__int_realloc_41.c":48:31)
#loc116 = loc(fused[#loc9, #loc10])
#loc133 = loc(fused[#loc53, #loc54])
#loc146 = loc(fused[#loc91, #loc92])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc112)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc113)
  cir.func private @printIntLine(!s32i) loc(#loc114)
  cir.func internal private @badSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc9, #loc10])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc116)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc11)
    cir.return loc(#loc8)
  } loc(#loc115)
  cir.func no_proto @CWE401_Memory_Leak__int_realloc_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc118)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc16)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc119)
    %2 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc18)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc19)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc19)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc20)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc20)
    %7 = cir.const #cir.int<4> : !u64i loc(#loc120)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc121)
    %9 = cir.call @realloc(%4, %8) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc18)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc122)
    cir.store %10, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc123)
    cir.br ^bb1 loc(#loc124)
  ^bb1:  // pred: ^bb0
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc27)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc28)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc28)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s32i>, !cir.bool loc(#loc125)
    cir.brcond %14 ^bb2, ^bb3 loc(#loc126)
  ^bb2:  // pred: ^bb1
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc30)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc32)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc30)
    cir.br ^bb3 loc(#loc26)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc26)
  ^bb4:  // pred: ^bb3
    %18 = cir.const #cir.int<5> : !s32i loc(#loc33)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc34)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc35)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc36)
    cir.store %18, %21 : !s32i, !cir.ptr<!s32i> loc(#loc127)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc37)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc38)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !s32i), !cir.ptr<!s32i> loc(#loc39)
    %25 = cir.load %24 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    cir.call @printIntLine(%25) : (!s32i) -> () loc(#loc40)
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc41)
    cir.call @badSink(%26) : (!cir.ptr<!s32i>) -> () loc(#loc42)
    cir.return loc(#loc13)
  } loc(#loc117)
  cir.func no_proto @CWE401_Memory_Leak__int_realloc_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc129)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc130)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    cir.return loc(#loc44)
  } loc(#loc128)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc131)
  cir.func internal private @goodB2GSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc53, #loc54])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc133)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc55)
    %1 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc56)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc57)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc57)
    cir.call @free(%3) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc56)
    cir.return loc(#loc52)
  } loc(#loc132)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc135)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc62)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc136)
    %2 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc64)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc65)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc65)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc66)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc66)
    %7 = cir.const #cir.int<4> : !u64i loc(#loc137)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc138)
    %9 = cir.call @realloc(%4, %8) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc64)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc139)
    cir.store %10, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc140)
    cir.br ^bb1 loc(#loc141)
  ^bb1:  // pred: ^bb0
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc73)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc74)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc74)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s32i>, !cir.bool loc(#loc142)
    cir.brcond %14 ^bb2, ^bb3 loc(#loc143)
  ^bb2:  // pred: ^bb1
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc76)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc77)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc78)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc76)
    cir.br ^bb3 loc(#loc72)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc72)
  ^bb4:  // pred: ^bb3
    %18 = cir.const #cir.int<5> : !s32i loc(#loc79)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc80)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc81)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc82)
    cir.store %18, %21 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc83)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc84)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !s32i), !cir.ptr<!s32i> loc(#loc85)
    %25 = cir.load %24 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    cir.call @printIntLine(%25) : (!s32i) -> () loc(#loc86)
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc87)
    cir.call @goodB2GSink(%26) : (!cir.ptr<!s32i>) -> () loc(#loc88)
    cir.return loc(#loc59)
  } loc(#loc134)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!s32i> loc(fused[#loc91, #loc92])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc146)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc93)
    cir.return loc(#loc90)
  } loc(#loc145)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc148)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc98)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc149)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc100)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc100)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc100)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc100)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc100)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc100)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc100)
    cir.store %8, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc150)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc102)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc103)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc104)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc105)
    cir.store %9, %12 : !s32i, !cir.ptr<!s32i> loc(#loc151)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc106)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc107)
    %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc108)
    %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc109)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc110)
    cir.call @goodG2BSink(%17) : (!cir.ptr<!s32i>) -> () loc(#loc111)
    cir.return loc(#loc95)
  } loc(#loc147)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_realloc_41.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":683:1)
#loc2 = loc("/usr/include/stdlib.h":684:14)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("CWE401_Memory_Leak__int_realloc_41.c":24:1)
#loc8 = loc("CWE401_Memory_Leak__int_realloc_41.c":28:1)
#loc11 = loc("CWE401_Memory_Leak__int_realloc_41.c":25:1)
#loc12 = loc("CWE401_Memory_Leak__int_realloc_41.c":30:1)
#loc13 = loc("CWE401_Memory_Leak__int_realloc_41.c":41:1)
#loc14 = loc("CWE401_Memory_Leak__int_realloc_41.c":32:5)
#loc15 = loc("CWE401_Memory_Leak__int_realloc_41.c":32:11)
#loc16 = loc("CWE401_Memory_Leak__int_realloc_41.c":33:12)
#loc17 = loc("CWE401_Memory_Leak__int_realloc_41.c":33:5)
#loc18 = loc("CWE401_Memory_Leak__int_realloc_41.c":35:19)
#loc19 = loc("CWE401_Memory_Leak__int_realloc_41.c":35:27)
#loc20 = loc("CWE401_Memory_Leak__int_realloc_41.c":35:33)
#loc21 = loc("CWE401_Memory_Leak__int_realloc_41.c":35:37)
#loc22 = loc("CWE401_Memory_Leak__int_realloc_41.c":35:47)
#loc23 = loc("CWE401_Memory_Leak__int_realloc_41.c":35:48)
#loc24 = loc("CWE401_Memory_Leak__int_realloc_41.c":35:5)
#loc25 = loc("CWE401_Memory_Leak__int_realloc_41.c":36:5)
#loc26 = loc("CWE401_Memory_Leak__int_realloc_41.c":36:33)
#loc27 = loc("CWE401_Memory_Leak__int_realloc_41.c":36:9)
#loc28 = loc("CWE401_Memory_Leak__int_realloc_41.c":36:17)
#loc29 = loc("CWE401_Memory_Leak__int_realloc_41.c":36:23)
#loc30 = loc("CWE401_Memory_Leak__int_realloc_41.c":36:24)
#loc31 = loc("CWE401_Memory_Leak__int_realloc_41.c":36:30)
#loc32 = loc("CWE401_Memory_Leak__int_realloc_41.c":36:29)
#loc33 = loc("CWE401_Memory_Leak__int_realloc_41.c":38:15)
#loc34 = loc("CWE401_Memory_Leak__int_realloc_41.c":38:5)
#loc35 = loc("CWE401_Memory_Leak__int_realloc_41.c":38:10)
#loc36 = loc("CWE401_Memory_Leak__int_realloc_41.c":38:11)
#loc37 = loc("CWE401_Memory_Leak__int_realloc_41.c":39:18)
#loc38 = loc("CWE401_Memory_Leak__int_realloc_41.c":39:23)
#loc39 = loc("CWE401_Memory_Leak__int_realloc_41.c":39:24)
#loc40 = loc("CWE401_Memory_Leak__int_realloc_41.c":39:5)
#loc41 = loc("CWE401_Memory_Leak__int_realloc_41.c":40:13)
#loc42 = loc("CWE401_Memory_Leak__int_realloc_41.c":40:5)
#loc43 = loc("CWE401_Memory_Leak__int_realloc_41.c":86:1)
#loc44 = loc("CWE401_Memory_Leak__int_realloc_41.c":90:1)
#loc45 = loc("CWE401_Memory_Leak__int_realloc_41.c":88:5)
#loc46 = loc("CWE401_Memory_Leak__int_realloc_41.c":88:13)
#loc47 = loc("CWE401_Memory_Leak__int_realloc_41.c":89:5)
#loc48 = loc("CWE401_Memory_Leak__int_realloc_41.c":89:13)
#loc49 = loc("/usr/include/stdlib.h":687:1)
#loc50 = loc("/usr/include/stdlib.h":687:32)
#loc51 = loc("CWE401_Memory_Leak__int_realloc_41.c":67:1)
#loc52 = loc("CWE401_Memory_Leak__int_realloc_41.c":71:1)
#loc55 = loc("CWE401_Memory_Leak__int_realloc_41.c":68:1)
#loc56 = loc("CWE401_Memory_Leak__int_realloc_41.c":70:5)
#loc57 = loc("CWE401_Memory_Leak__int_realloc_41.c":70:10)
#loc58 = loc("CWE401_Memory_Leak__int_realloc_41.c":73:1)
#loc59 = loc("CWE401_Memory_Leak__int_realloc_41.c":84:1)
#loc60 = loc("CWE401_Memory_Leak__int_realloc_41.c":75:5)
#loc61 = loc("CWE401_Memory_Leak__int_realloc_41.c":75:11)
#loc62 = loc("CWE401_Memory_Leak__int_realloc_41.c":76:12)
#loc63 = loc("CWE401_Memory_Leak__int_realloc_41.c":76:5)
#loc64 = loc("CWE401_Memory_Leak__int_realloc_41.c":78:19)
#loc65 = loc("CWE401_Memory_Leak__int_realloc_41.c":78:27)
#loc66 = loc("CWE401_Memory_Leak__int_realloc_41.c":78:33)
#loc67 = loc("CWE401_Memory_Leak__int_realloc_41.c":78:37)
#loc68 = loc("CWE401_Memory_Leak__int_realloc_41.c":78:47)
#loc69 = loc("CWE401_Memory_Leak__int_realloc_41.c":78:48)
#loc70 = loc("CWE401_Memory_Leak__int_realloc_41.c":78:5)
#loc71 = loc("CWE401_Memory_Leak__int_realloc_41.c":79:5)
#loc72 = loc("CWE401_Memory_Leak__int_realloc_41.c":79:33)
#loc73 = loc("CWE401_Memory_Leak__int_realloc_41.c":79:9)
#loc74 = loc("CWE401_Memory_Leak__int_realloc_41.c":79:17)
#loc75 = loc("CWE401_Memory_Leak__int_realloc_41.c":79:23)
#loc76 = loc("CWE401_Memory_Leak__int_realloc_41.c":79:24)
#loc77 = loc("CWE401_Memory_Leak__int_realloc_41.c":79:30)
#loc78 = loc("CWE401_Memory_Leak__int_realloc_41.c":79:29)
#loc79 = loc("CWE401_Memory_Leak__int_realloc_41.c":81:15)
#loc80 = loc("CWE401_Memory_Leak__int_realloc_41.c":81:5)
#loc81 = loc("CWE401_Memory_Leak__int_realloc_41.c":81:10)
#loc82 = loc("CWE401_Memory_Leak__int_realloc_41.c":81:11)
#loc83 = loc("CWE401_Memory_Leak__int_realloc_41.c":82:18)
#loc84 = loc("CWE401_Memory_Leak__int_realloc_41.c":82:23)
#loc85 = loc("CWE401_Memory_Leak__int_realloc_41.c":82:24)
#loc86 = loc("CWE401_Memory_Leak__int_realloc_41.c":82:5)
#loc87 = loc("CWE401_Memory_Leak__int_realloc_41.c":83:17)
#loc88 = loc("CWE401_Memory_Leak__int_realloc_41.c":83:5)
#loc89 = loc("CWE401_Memory_Leak__int_realloc_41.c":48:1)
#loc90 = loc("CWE401_Memory_Leak__int_realloc_41.c":52:1)
#loc93 = loc("CWE401_Memory_Leak__int_realloc_41.c":49:1)
#loc94 = loc("CWE401_Memory_Leak__int_realloc_41.c":54:1)
#loc95 = loc("CWE401_Memory_Leak__int_realloc_41.c":64:1)
#loc96 = loc("CWE401_Memory_Leak__int_realloc_41.c":56:5)
#loc97 = loc("CWE401_Memory_Leak__int_realloc_41.c":56:11)
#loc98 = loc("CWE401_Memory_Leak__int_realloc_41.c":57:12)
#loc99 = loc("CWE401_Memory_Leak__int_realloc_41.c":57:5)
#loc100 = loc("CWE401_Memory_Leak__int_realloc_41.c":59:19)
#loc101 = loc("CWE401_Memory_Leak__int_realloc_41.c":59:5)
#loc102 = loc("CWE401_Memory_Leak__int_realloc_41.c":61:15)
#loc103 = loc("CWE401_Memory_Leak__int_realloc_41.c":61:5)
#loc104 = loc("CWE401_Memory_Leak__int_realloc_41.c":61:10)
#loc105 = loc("CWE401_Memory_Leak__int_realloc_41.c":61:11)
#loc106 = loc("CWE401_Memory_Leak__int_realloc_41.c":62:18)
#loc107 = loc("CWE401_Memory_Leak__int_realloc_41.c":62:23)
#loc108 = loc("CWE401_Memory_Leak__int_realloc_41.c":62:24)
#loc109 = loc("CWE401_Memory_Leak__int_realloc_41.c":62:5)
#loc110 = loc("CWE401_Memory_Leak__int_realloc_41.c":63:17)
#loc111 = loc("CWE401_Memory_Leak__int_realloc_41.c":63:5)
#loc112 = loc(fused[#loc1, #loc2])
#loc113 = loc(fused[#loc3, #loc4])
#loc114 = loc(fused[#loc5, #loc6])
#loc115 = loc(fused[#loc7, #loc8])
#loc117 = loc(fused[#loc12, #loc13])
#loc118 = loc(fused[#loc14, #loc15])
#loc119 = loc(fused[#loc17, #loc16])
#loc120 = loc(fused[#loc21, #loc22])
#loc121 = loc(fused[#loc20, #loc22])
#loc122 = loc(fused[#loc18, #loc23])
#loc123 = loc(fused[#loc24, #loc23])
#loc124 = loc(fused[#loc25, #loc26])
#loc125 = loc(fused[#loc27, #loc28])
#loc126 = loc(fused[#loc29, #loc26])
#loc127 = loc(fused[#loc34, #loc33])
#loc128 = loc(fused[#loc43, #loc44])
#loc129 = loc(fused[#loc45, #loc46])
#loc130 = loc(fused[#loc47, #loc48])
#loc131 = loc(fused[#loc49, #loc50])
#loc132 = loc(fused[#loc51, #loc52])
#loc134 = loc(fused[#loc58, #loc59])
#loc135 = loc(fused[#loc60, #loc61])
#loc136 = loc(fused[#loc63, #loc62])
#loc137 = loc(fused[#loc67, #loc68])
#loc138 = loc(fused[#loc66, #loc68])
#loc139 = loc(fused[#loc64, #loc69])
#loc140 = loc(fused[#loc70, #loc69])
#loc141 = loc(fused[#loc71, #loc72])
#loc142 = loc(fused[#loc73, #loc74])
#loc143 = loc(fused[#loc75, #loc72])
#loc144 = loc(fused[#loc80, #loc79])
#loc145 = loc(fused[#loc89, #loc90])
#loc147 = loc(fused[#loc94, #loc95])
#loc148 = loc(fused[#loc96, #loc97])
#loc149 = loc(fused[#loc99, #loc98])
#loc150 = loc(fused[#loc101, #loc100])
#loc151 = loc(fused[#loc103, #loc102])
