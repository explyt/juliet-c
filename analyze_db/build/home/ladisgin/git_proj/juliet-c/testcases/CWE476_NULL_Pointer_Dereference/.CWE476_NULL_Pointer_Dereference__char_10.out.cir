!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc45 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":153:10)
#loc46 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":153:14)
#loc47 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":153:20)
#loc48 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":153:32)
#loc181 = loc(fused[#loc45, #loc46])
#loc182 = loc(fused[#loc47, #loc48])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__char_10.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" external @globalTrue : !s32i {alignment = 4 : i64} loc(#loc163)
  cir.func private @printHexCharLine(!s8i) loc(#loc164)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__char_10_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc166)
    cir.scope {
      %1 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc163)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc11)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc11)
      cir.if %3 {
        %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc13)
        cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc169)
      } loc(#loc168)
    } loc(#loc167)
    cir.scope {
      %1 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc163)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc17)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc17)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
        %5 = cir.const #cir.int<0> : !s32i loc(#loc20)
        %6 = cir.ptr_stride(%4 : !cir.ptr<!s8i>, %5 : !s32i), !cir.ptr<!s8i> loc(#loc21)
        %7 = cir.load %6 : !cir.ptr<!s8i>, !s8i loc(#loc19)
        cir.call @printHexCharLine(%7) : (!s8i) -> () loc(#loc22)
      } loc(#loc171)
    } loc(#loc170)
    cir.return loc(#loc6)
  } loc(#loc165)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__char_10_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc173)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc25)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc174)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc27)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc175)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc29)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc176)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc31)
    cir.return loc(#loc24)
  } loc(#loc172)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc177)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc178)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc179)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc39)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc40)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc41)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc42)
  cir.func @main(%arg0: !s32i loc(fused[#loc45, #loc46]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc47, #loc48])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc181)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc182)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc44)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc49)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc49)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc50)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc51)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc51)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc52)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc39)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc39)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    %8 = cir.get_global @CWE476_NULL_Pointer_Dereference__char_10_good : !cir.ptr<!cir.func<!void ()>> loc(#loc183)
    cir.call @CWE476_NULL_Pointer_Dereference__char_10_good() : () -> () loc(#loc54)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc40)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc40)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc41)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc57)
    %13 = cir.get_global @CWE476_NULL_Pointer_Dereference__char_10_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc184)
    cir.call @CWE476_NULL_Pointer_Dereference__char_10_bad() : () -> () loc(#loc58)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc42)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc61)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc185)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc185)
    cir.return %17 : !s32i loc(#loc185)
  } loc(#loc180)
  cir.global "private" external @globalFalse : !s32i {alignment = 4 : i64} loc(#loc186)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data is NULL\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc66)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc188)
    cir.scope {
      %1 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc163)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc73)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc73)
      cir.if %3 {
        %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc75)
        cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc191)
      } loc(#loc190)
    } loc(#loc189)
    cir.scope {
      %1 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc186)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc79)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc79)
      cir.if %3 {
        %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc65)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc65)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc83)
      } else {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
          %5 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc87)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc87)
          %7 = cir.cmp(ne, %4, %6) : !cir.ptr<!s8i>, !cir.bool loc(#loc195)
          cir.if %7 {
            %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc92)
            %10 = cir.ptr_stride(%8 : !cir.ptr<!s8i>, %9 : !s32i), !cir.ptr<!s8i> loc(#loc93)
            %11 = cir.load %10 : !cir.ptr<!s8i>, !s8i loc(#loc91)
            cir.call @printHexCharLine(%11) : (!s8i) -> () loc(#loc94)
          } else {
            %8 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc66)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc66)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc95)
          } loc(#loc196)
        } loc(#loc194)
      } loc(#loc193)
    } loc(#loc192)
    cir.return loc(#loc68)
  } loc(#loc187)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc198)
    cir.scope {
      %1 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc163)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc102)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc102)
      cir.if %3 {
        %4 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc104)
        cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc201)
      } loc(#loc200)
    } loc(#loc199)
    cir.scope {
      %1 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc163)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc108)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc108)
      cir.if %3 {
        cir.scope {
          %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
          %5 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc113)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc113)
          %7 = cir.cmp(ne, %4, %6) : !cir.ptr<!s8i>, !cir.bool loc(#loc205)
          cir.if %7 {
            %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc118)
            %10 = cir.ptr_stride(%8 : !cir.ptr<!s8i>, %9 : !s32i), !cir.ptr<!s8i> loc(#loc119)
            %11 = cir.load %10 : !cir.ptr<!s8i>, !s8i loc(#loc117)
            cir.call @printHexCharLine(%11) : (!s8i) -> () loc(#loc120)
          } else {
            %8 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc121)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc121)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc122)
          } loc(#loc206)
        } loc(#loc204)
      } loc(#loc203)
    } loc(#loc202)
    cir.return loc(#loc97)
  } loc(#loc197)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Good\00" : !cir.array<!s8i x 5>> : !cir.array<!s8i x 5> {alignment = 1 : i64} loc(#loc123)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc208)
    cir.scope {
      %1 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc186)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc130)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc130)
      cir.if %3 {
        %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc134)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc134)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc135)
      } else {
        %4 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 5>> loc(#loc123)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 5>>), !cir.ptr<!s8i> loc(#loc123)
        cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc211)
      } loc(#loc210)
    } loc(#loc209)
    cir.scope {
      %1 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc163)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc139)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc139)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
        %5 = cir.const #cir.int<0> : !s32i loc(#loc142)
        %6 = cir.ptr_stride(%4 : !cir.ptr<!s8i>, %5 : !s32i), !cir.ptr<!s8i> loc(#loc143)
        %7 = cir.load %6 : !cir.ptr<!s8i>, !s8i loc(#loc141)
        cir.call @printHexCharLine(%7) : (!s8i) -> () loc(#loc144)
      } loc(#loc213)
    } loc(#loc212)
    cir.return loc(#loc125)
  } loc(#loc207)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc215)
    cir.scope {
      %1 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc163)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc151)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc151)
      cir.if %3 {
        %4 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 5>> loc(#loc153)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 5>>), !cir.ptr<!s8i> loc(#loc153)
        cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc218)
      } loc(#loc217)
    } loc(#loc216)
    cir.scope {
      %1 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc163)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc157)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc157)
      cir.if %3 {
        %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
        %5 = cir.const #cir.int<0> : !s32i loc(#loc160)
        %6 = cir.ptr_stride(%4 : !cir.ptr<!s8i>, %5 : !s32i), !cir.ptr<!s8i> loc(#loc161)
        %7 = cir.load %6 : !cir.ptr<!s8i>, !s8i loc(#loc159)
        cir.call @printHexCharLine(%7) : (!s8i) -> () loc(#loc162)
      } loc(#loc220)
    } loc(#loc219)
    cir.return loc(#loc146)
  } loc(#loc214)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__char_10.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase.h":116:1)
#loc2 = loc("../../testcasesupport/std_testcase.h":116:12)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":30:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":30:35)
#loc5 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":24:1)
#loc6 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":38:1)
#loc7 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":26:5)
#loc8 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":26:12)
#loc9 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":27:5)
#loc10 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":31:5)
#loc11 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":27:8)
#loc12 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":28:5)
#loc13 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":30:16)
#loc14 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":30:9)
#loc15 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":32:5)
#loc16 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":37:5)
#loc17 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":32:8)
#loc18 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":33:5)
#loc19 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":36:26)
#loc20 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":36:31)
#loc21 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":36:32)
#loc22 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":36:9)
#loc23 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":136:1)
#loc24 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":142:1)
#loc25 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":138:5)
#loc26 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":138:14)
#loc27 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":139:5)
#loc28 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":139:14)
#loc29 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":140:5)
#loc30 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":140:14)
#loc31 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":141:5)
#loc32 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":141:14)
#loc33 = loc("/usr/include/stdlib.h":575:1)
#loc34 = loc("/usr/include/stdlib.h":575:41)
#loc35 = loc("/usr/include/time.h":76:1)
#loc36 = loc("/usr/include/time.h":76:38)
#loc37 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc38 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc39 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":158:15)
#loc40 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":160:15)
#loc41 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":163:15)
#loc42 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":165:15)
#loc43 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":153:1)
#loc44 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":168:1)
#loc49 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":154:1)
#loc50 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":156:27)
#loc51 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":156:22)
#loc52 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":156:5)
#loc53 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":158:5)
#loc54 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":159:5)
#loc55 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":159:51)
#loc56 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":160:5)
#loc57 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":163:5)
#loc58 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":164:5)
#loc59 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":164:50)
#loc60 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":165:5)
#loc61 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":167:12)
#loc62 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":167:5)
#loc63 = loc("../../testcasesupport/std_testcase.h":117:1)
#loc64 = loc("../../testcasesupport/std_testcase.h":117:12)
#loc65 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":56:19)
#loc66 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":68:23)
#loc67 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":45:1)
#loc68 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":71:1)
#loc69 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":47:5)
#loc70 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":47:12)
#loc71 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":48:5)
#loc72 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":52:5)
#loc73 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":48:8)
#loc74 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":49:5)
#loc75 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":51:16)
#loc76 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":51:9)
#loc77 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":53:5)
#loc78 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":70:5)
#loc79 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":53:8)
#loc80 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":54:5)
#loc81 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":57:5)
#loc82 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":59:5)
#loc83 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":56:9)
#loc84 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":61:9)
#loc85 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":69:9)
#loc86 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":61:13)
#loc87 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":61:21)
#loc88 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":62:9)
#loc89 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":65:9)
#loc90 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":67:9)
#loc91 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":64:30)
#loc92 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":64:35)
#loc93 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":64:36)
#loc94 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":64:13)
#loc95 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":68:13)
#loc96 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":74:1)
#loc97 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":95:1)
#loc98 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":76:5)
#loc99 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":76:12)
#loc100 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":77:5)
#loc101 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":81:5)
#loc102 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":77:8)
#loc103 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":78:5)
#loc104 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":80:16)
#loc105 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":80:9)
#loc106 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":82:5)
#loc107 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":94:5)
#loc108 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":82:8)
#loc109 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":83:5)
#loc110 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":85:9)
#loc111 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":93:9)
#loc112 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":85:13)
#loc113 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":85:21)
#loc114 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":86:9)
#loc115 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":89:9)
#loc116 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":91:9)
#loc117 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":88:30)
#loc118 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":88:35)
#loc119 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":88:36)
#loc120 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":88:13)
#loc121 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":92:23)
#loc122 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":92:13)
#loc123 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":109:16)
#loc124 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":98:1)
#loc125 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":117:1)
#loc126 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":100:5)
#loc127 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":100:12)
#loc128 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":101:5)
#loc129 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":110:5)
#loc130 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":101:8)
#loc131 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":102:5)
#loc132 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":105:5)
#loc133 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":107:5)
#loc134 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":104:19)
#loc135 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":104:9)
#loc136 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":109:9)
#loc137 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":111:5)
#loc138 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":116:5)
#loc139 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":111:8)
#loc140 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":112:5)
#loc141 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":115:26)
#loc142 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":115:31)
#loc143 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":115:32)
#loc144 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":115:9)
#loc145 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":120:1)
#loc146 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":134:1)
#loc147 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":122:5)
#loc148 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":122:12)
#loc149 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":123:5)
#loc150 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":127:5)
#loc151 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":123:8)
#loc152 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":124:5)
#loc153 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":126:16)
#loc154 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":126:9)
#loc155 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":128:5)
#loc156 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":133:5)
#loc157 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":128:8)
#loc158 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":129:5)
#loc159 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":132:26)
#loc160 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":132:31)
#loc161 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":132:32)
#loc162 = loc("CWE476_NULL_Pointer_Dereference__char_10.c":132:9)
#loc163 = loc(fused[#loc1, #loc2])
#loc164 = loc(fused[#loc3, #loc4])
#loc165 = loc(fused[#loc5, #loc6])
#loc166 = loc(fused[#loc7, #loc8])
#loc167 = loc(fused[#loc9, #loc10])
#loc168 = loc(fused[#loc12, #loc10])
#loc169 = loc(fused[#loc14, #loc13])
#loc170 = loc(fused[#loc15, #loc16])
#loc171 = loc(fused[#loc18, #loc16])
#loc172 = loc(fused[#loc23, #loc24])
#loc173 = loc(fused[#loc25, #loc26])
#loc174 = loc(fused[#loc27, #loc28])
#loc175 = loc(fused[#loc29, #loc30])
#loc176 = loc(fused[#loc31, #loc32])
#loc177 = loc(fused[#loc33, #loc34])
#loc178 = loc(fused[#loc35, #loc36])
#loc179 = loc(fused[#loc37, #loc38])
#loc180 = loc(fused[#loc43, #loc44])
#loc183 = loc(fused[#loc54, #loc55])
#loc184 = loc(fused[#loc58, #loc59])
#loc185 = loc(fused[#loc62, #loc61])
#loc186 = loc(fused[#loc63, #loc64])
#loc187 = loc(fused[#loc67, #loc68])
#loc188 = loc(fused[#loc69, #loc70])
#loc189 = loc(fused[#loc71, #loc72])
#loc190 = loc(fused[#loc74, #loc72])
#loc191 = loc(fused[#loc76, #loc75])
#loc192 = loc(fused[#loc77, #loc78])
#loc193 = loc(fused[#loc80, #loc81, #loc82, #loc78])
#loc194 = loc(fused[#loc84, #loc85])
#loc195 = loc(fused[#loc86, #loc87])
#loc196 = loc(fused[#loc88, #loc89, #loc90, #loc85])
#loc197 = loc(fused[#loc96, #loc97])
#loc198 = loc(fused[#loc98, #loc99])
#loc199 = loc(fused[#loc100, #loc101])
#loc200 = loc(fused[#loc103, #loc101])
#loc201 = loc(fused[#loc105, #loc104])
#loc202 = loc(fused[#loc106, #loc107])
#loc203 = loc(fused[#loc109, #loc107])
#loc204 = loc(fused[#loc110, #loc111])
#loc205 = loc(fused[#loc112, #loc113])
#loc206 = loc(fused[#loc114, #loc115, #loc116, #loc111])
#loc207 = loc(fused[#loc124, #loc125])
#loc208 = loc(fused[#loc126, #loc127])
#loc209 = loc(fused[#loc128, #loc129])
#loc210 = loc(fused[#loc131, #loc132, #loc133, #loc129])
#loc211 = loc(fused[#loc136, #loc123])
#loc212 = loc(fused[#loc137, #loc138])
#loc213 = loc(fused[#loc140, #loc138])
#loc214 = loc(fused[#loc145, #loc146])
#loc215 = loc(fused[#loc147, #loc148])
#loc216 = loc(fused[#loc149, #loc150])
#loc217 = loc(fused[#loc152, #loc150])
#loc218 = loc(fused[#loc154, #loc153])
#loc219 = loc(fused[#loc155, #loc156])
#loc220 = loc(fused[#loc158, #loc156])
