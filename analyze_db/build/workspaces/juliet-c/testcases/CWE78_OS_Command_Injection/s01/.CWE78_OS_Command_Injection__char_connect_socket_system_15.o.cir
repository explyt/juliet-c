!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_system_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B2.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc244)
  cir.global "private" constant cir_private @__const.goodG2B1.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc245)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_connect_socket_system_15_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc246)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc247)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc248)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc249)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc13)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc250)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc251)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc252)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc253)
  cir.func private @close(!s32i) -> !s32i loc(#loc254)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc255)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc26)
  cir.func private @system(!cir.ptr<!s8i>) -> !s32i loc(#loc256)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc29)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc257)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_system_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc259)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc246)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_connect_socket_system_15_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc246)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc246)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc260)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc40)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc263)
            %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc264)
            %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc265)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc266)
            %9 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc267)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc51)
            %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc51)
            cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc266)
            %12 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc54)
            %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
            %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc54)
            cir.store %14, %9 : !u64i, !cir.ptr<!u64i> loc(#loc267)
            cir.scope {
              cir.do {
                cir.scope {
                  %15 = cir.const #cir.int<2> : !s32i loc(#loc60)
                  %16 = cir.const #cir.int<1> : !s32i loc(#loc61)
                  %17 = cir.const #cir.int<6> : !s32i loc(#loc62)
                  %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc63)
                  cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc270)
                  cir.scope {
                    %69 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc68)
                    %70 = cir.const #cir.int<1> : !s32i loc(#loc69)
                    %71 = cir.unary(minus, %70) nsw : !s32i, !s32i loc(#loc69)
                    %72 = cir.cmp(eq, %69, %71) : !s32i, !cir.bool loc(#loc272)
                    cir.if %72 {
                      cir.break loc(#loc71)
                    } loc(#loc273)
                  } loc(#loc271)
                  %19 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc274)
                  %20 = cir.const #cir.int<0> : !s32i loc(#loc74)
                  %21 = cir.const #cir.int<16> : !u64i loc(#loc275)
                  cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc276)
                  %22 = cir.const #cir.int<2> : !s32i loc(#loc79)
                  %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc79)
                  %24 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
                  cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc277)
                  %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc13)
                  %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc13)
                  %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc82)
                  %28 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc83)
                  %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc84)
                  cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc278)
                  %30 = cir.const #cir.int<27015> : !s32i loc(#loc87)
                  %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc87)
                  %32 = cir.call @htons(%31) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc88)
                  %33 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc89)
                  cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc279)
                  cir.scope {
                    %69 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc94)
                    %70 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc281)
                    %71 = cir.const #cir.int<16> : !u64i loc(#loc282)
                    %72 = cir.cast(integral, %71 : !u64i), !u32i loc(#loc282)
                    %73 = cir.call @connect(%69, %70, %72) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc99)
                    %74 = cir.const #cir.int<1> : !s32i loc(#loc100)
                    %75 = cir.unary(minus, %74) nsw : !s32i, !s32i loc(#loc100)
                    %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc283)
                    cir.if %76 {
                      cir.break loc(#loc102)
                    } loc(#loc284)
                  } loc(#loc280)
                  %34 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc103)
                  %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
                  %36 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc105)
                  %37 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %36 : !u64i), !cir.ptr<!s8i> loc(#loc106)
                  %38 = cir.cast(bitcast, %37 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc285)
                  %39 = cir.const #cir.int<1> : !u64i loc(#loc286)
                  %40 = cir.const #cir.int<100> : !s32i loc(#loc111)
                  %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc111)
                  %42 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc112)
                  %43 = cir.binop(sub, %41, %42) : !u64i loc(#loc287)
                  %44 = cir.const #cir.int<1> : !s32i loc(#loc113)
                  %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc113)
                  %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc288)
                  %47 = cir.binop(mul, %39, %46) : !u64i loc(#loc289)
                  %48 = cir.const #cir.int<0> : !s32i loc(#loc115)
                  %49 = cir.call @recv(%34, %38, %47, %48) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc116)
                  %50 = cir.cast(integral, %49 : !s64i), !s32i loc(#loc116)
                  cir.store %50, %5 : !s32i, !cir.ptr<!s32i> loc(#loc290)
                  cir.scope {
                    %69 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc121)
                    %70 = cir.const #cir.int<1> : !s32i loc(#loc122)
                    %71 = cir.unary(minus, %70) nsw : !s32i, !s32i loc(#loc122)
                    %72 = cir.cmp(eq, %69, %71) : !s32i, !cir.bool loc(#loc292)
                    %73 = cir.ternary(%72, true {
                      %74 = cir.const #true loc(#loc123)
                      cir.yield %74 : !cir.bool loc(#loc123)
                    }, false {
                      %74 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc124)
                      %75 = cir.const #cir.int<0> : !s32i loc(#loc125)
                      %76 = cir.cmp(eq, %74, %75) : !s32i, !cir.bool loc(#loc293)
                      %77 = cir.ternary(%76, true {
                        %78 = cir.const #true loc(#loc123)
                        cir.yield %78 : !cir.bool loc(#loc123)
                      }, false {
                        %78 = cir.const #false loc(#loc123)
                        cir.yield %78 : !cir.bool loc(#loc123)
                      }) : (!cir.bool) -> !cir.bool loc(#loc123)
                      cir.yield %77 : !cir.bool loc(#loc123)
                    }) : (!cir.bool) -> !cir.bool loc(#loc123)
                    cir.if %73 {
                      cir.break loc(#loc127)
                    } loc(#loc294)
                  } loc(#loc291)
                  %51 = cir.const #cir.int<0> : !s32i loc(#loc128)
                  %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc128)
                  %53 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
                  %54 = cir.load %9 : !cir.ptr<!u64i>, !u64i loc(#loc130)
                  %55 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc131)
                  %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc131)
                  %57 = cir.const #cir.int<1> : !u64i loc(#loc295)
                  %58 = cir.binop(div, %56, %57) : !u64i loc(#loc296)
                  %59 = cir.binop(add, %54, %58) : !u64i loc(#loc297)
                  %60 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %59 : !u64i), !cir.ptr<!s8i> loc(#loc134)
                  cir.store %52, %60 : !s8i, !cir.ptr<!s8i> loc(#loc298)
                  %61 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc135)
                  %62 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
                  %63 = cir.const #cir.int<13> : !s32i loc(#loc137)
                  %64 = cir.call @strchr(%62, %63) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc135)
                  cir.store %64, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc299)
                  cir.scope {
                    %69 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
                    %70 = cir.cast(ptr_to_bool, %69 : !cir.ptr<!s8i>), !cir.bool loc(#loc142)
                    cir.if %70 {
                      %71 = cir.const #cir.int<0> : !s32i loc(#loc144)
                      %72 = cir.cast(integral, %71 : !s32i), !s8i loc(#loc144)
                      %73 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
                      cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc302)
                    } loc(#loc301)
                  } loc(#loc300)
                  %65 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc147)
                  %66 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
                  %67 = cir.const #cir.int<10> : !s32i loc(#loc149)
                  %68 = cir.call @strchr(%66, %67) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc147)
                  cir.store %68, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc303)
                  cir.scope {
                    %69 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
                    %70 = cir.cast(ptr_to_bool, %69 : !cir.ptr<!s8i>), !cir.bool loc(#loc154)
                    cir.if %70 {
                      %71 = cir.const #cir.int<0> : !s32i loc(#loc156)
                      %72 = cir.cast(integral, %71 : !s32i), !s8i loc(#loc156)
                      %73 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
                      cir.store %72, %73 : !s8i, !cir.ptr<!s8i> loc(#loc306)
                    } loc(#loc305)
                  } loc(#loc304)
                } loc(#loc269)
                cir.yield loc(#loc57)
              } while {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc159)
                %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc159)
                cir.condition(%16) loc(#loc159)
              } loc(#loc268)
            } loc(#loc268)
            cir.scope {
              %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc162)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc163)
              %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc163)
              %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc308)
              cir.if %18 {
                %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc165)
                %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc166)
              } loc(#loc309)
            } loc(#loc307)
          } loc(#loc262)
          cir.break loc(#loc167)
        } loc(#loc41)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc26)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc26)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc169)
          cir.break loc(#loc170)
        } loc(#loc168)
        cir.yield loc(#loc38)
      } loc(#loc38)
    } loc(#loc261)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc173)
      %5 = cir.call @system(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc174)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc175)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc311)
      cir.if %7 {
        %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc29)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc29)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc177)
        %10 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc178)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc179)
        cir.call @exit(%11) : (!s32i) -> () extra(#fn_attr) loc(#loc178)
      } loc(#loc312)
    } loc(#loc310)
    cir.return loc(#loc33)
  } loc(#loc258)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_system_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc314)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc182)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc315)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc184)
    cir.return loc(#loc181)
  } loc(#loc313)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc316)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc188)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc318)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc245)
    %2 = cir.get_global @__const.goodG2B1.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc245)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc245)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc193)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc319)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc197)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc199)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc199)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc200)
          cir.break loc(#loc201)
        } loc(#loc198)
        cir.case(default, []) {
          %5 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc203)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc204)
          %7 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc188)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc188)
          %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc203)
          cir.break loc(#loc205)
        } loc(#loc202)
        cir.yield loc(#loc195)
      } loc(#loc195)
    } loc(#loc320)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc208)
      %5 = cir.call @system(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc209)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc210)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc322)
      cir.if %7 {
        %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc212)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc212)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc213)
        %10 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc214)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc215)
        cir.call @exit(%11) : (!s32i) -> () extra(#fn_attr) loc(#loc214)
      } loc(#loc323)
    } loc(#loc321)
    cir.return loc(#loc190)
  } loc(#loc317)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc325)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc244)
    %2 = cir.get_global @__const.goodG2B2.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc244)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc244)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc220)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc326)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc224)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %5 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc226)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc227)
          %7 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc228)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc228)
          %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc226)
          cir.break loc(#loc229)
        } loc(#loc225)
        cir.case(default, []) {
          %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc231)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc231)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc232)
          cir.break loc(#loc233)
        } loc(#loc230)
        cir.yield loc(#loc222)
      } loc(#loc222)
    } loc(#loc327)
    cir.scope {
      %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc236)
      %5 = cir.call @system(%4) : (!cir.ptr<!s8i>) -> !s32i loc(#loc237)
      %6 = cir.const #cir.int<0> : !s32i loc(#loc238)
      %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc329)
      cir.if %7 {
        %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc240)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc240)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc241)
        %10 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc242)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc243)
        cir.call @exit(%11) : (!s32i) -> () extra(#fn_attr) loc(#loc242)
      } loc(#loc330)
    } loc(#loc328)
    cir.return loc(#loc217)
  } loc(#loc324)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_system_15.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":178:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":178:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":153:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":153:26)
#loc5 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":59:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":59:26)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc11 = loc("/usr/include/arpa/inet.h":34:1)
#loc12 = loc("/usr/include/arpa/inet.h":34:47)
#loc13 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":91:49)
#loc14 = loc("/usr/include/netinet/in.h":402:1)
#loc15 = loc("/usr/include/netinet/in.h":403:40)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc17 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc18 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc19 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc20 = loc("/usr/include/string.h":246:1)
#loc21 = loc("/usr/include/string.h":247:33)
#loc22 = loc("/usr/include/unistd.h":358:1)
#loc23 = loc("/usr/include/unistd.h":358:27)
#loc24 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc25 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc26 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":134:19)
#loc27 = loc("/usr/include/stdlib.h":923:1)
#loc28 = loc("/usr/include/stdlib.h":923:41)
#loc29 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":140:19)
#loc30 = loc("/usr/include/stdlib.h":756:1)
#loc31 = loc("/usr/include/stdlib.h":756:70)
#loc32 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":56:1)
#loc33 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":143:1)
#loc34 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":58:5)
#loc35 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":58:12)
#loc36 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":60:12)
#loc37 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":60:5)
#loc38 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":61:5)
#loc39 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":136:5)
#loc40 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":61:12)
#loc41 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":63:5)
#loc42 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":64:5)
#loc43 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":130:5)
#loc44 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":69:9)
#loc45 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":69:13)
#loc46 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":70:9)
#loc47 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":70:28)
#loc48 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":71:9)
#loc49 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":71:15)
#loc50 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":72:9)
#loc51 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":72:32)
#loc52 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":73:9)
#loc53 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":73:37)
#loc54 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":73:26)
#loc55 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":73:33)
#loc56 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":74:9)
#loc57 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":119:17)
#loc58 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":75:9)
#loc59 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":118:9)
#loc60 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":84:36)
#loc61 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":84:45)
#loc62 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":84:58)
#loc63 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":84:29)
#loc64 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":84:13)
#loc65 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":84:69)
#loc66 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":85:13)
#loc67 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":88:13)
#loc68 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":85:17)
#loc69 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":85:34)
#loc70 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":86:13)
#loc71 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":87:17)
#loc72 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":89:20)
#loc73 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":89:21)
#loc74 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":89:30)
#loc75 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":89:33)
#loc76 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":89:47)
#loc77 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":89:13)
#loc78 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":89:48)
#loc79 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":90:34)
#loc80 = loc("/usr/include/netinet/in.h":249:5)
#loc81 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":90:13)
#loc82 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":91:39)
#loc83 = loc("/usr/include/netinet/in.h":251:20)
#loc84 = loc("/usr/include/netinet/in.h":33:15)
#loc85 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":91:13)
#loc86 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":91:59)
#loc87 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":92:38)
#loc88 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":92:32)
#loc89 = loc("/usr/include/netinet/in.h":250:15)
#loc90 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":92:13)
#loc91 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":92:46)
#loc92 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":93:13)
#loc93 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":96:13)
#loc94 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":93:25)
#loc95 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":93:58)
#loc96 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":93:59)
#loc97 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":93:68)
#loc98 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":93:82)
#loc99 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":93:17)
#loc100 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":93:88)
#loc101 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":94:13)
#loc102 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":95:17)
#loc103 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":100:31)
#loc104 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":100:55)
#loc105 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":100:62)
#loc106 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":100:60)
#loc107 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":100:46)
#loc108 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":100:69)
#loc109 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":100:72)
#loc110 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":100:83)
#loc111 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":100:88)
#loc112 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":100:94)
#loc113 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":100:104)
#loc114 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":100:105)
#loc115 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":100:108)
#loc116 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":100:26)
#loc117 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":100:13)
#loc118 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":100:109)
#loc119 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":101:13)
#loc120 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":104:13)
#loc121 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":101:17)
#loc122 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":101:31)
#loc123 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":101:44)
#loc124 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":101:47)
#loc125 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":101:61)
#loc126 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":102:13)
#loc127 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":103:17)
#loc128 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":106:57)
#loc129 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":106:13)
#loc130 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":106:18)
#loc131 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":106:28)
#loc132 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":106:41)
#loc133 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":106:52)
#loc134 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":106:53)
#loc135 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":108:23)
#loc136 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":108:30)
#loc137 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":108:36)
#loc138 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":108:13)
#loc139 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":108:40)
#loc140 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":109:13)
#loc141 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":112:13)
#loc142 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":109:17)
#loc143 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":110:13)
#loc144 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":111:28)
#loc145 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":111:18)
#loc146 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":111:17)
#loc147 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":113:23)
#loc148 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":113:30)
#loc149 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":113:36)
#loc150 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":113:13)
#loc151 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":113:40)
#loc152 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":114:13)
#loc153 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":117:13)
#loc154 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":114:17)
#loc155 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":115:13)
#loc156 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":116:28)
#loc157 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":116:18)
#loc158 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":116:17)
#loc159 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":119:16)
#loc160 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":120:9)
#loc161 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":123:9)
#loc162 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":120:13)
#loc163 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":120:30)
#loc164 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":121:9)
#loc165 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":122:26)
#loc166 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":122:13)
#loc167 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":131:5)
#loc168 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":132:5)
#loc169 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":134:9)
#loc170 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":135:9)
#loc171 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":138:5)
#loc172 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":142:5)
#loc173 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":138:16)
#loc174 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":138:9)
#loc175 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":138:25)
#loc176 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":139:5)
#loc177 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":140:9)
#loc178 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":141:9)
#loc179 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":141:14)
#loc180 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":199:1)
#loc181 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":203:1)
#loc182 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":201:5)
#loc183 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":201:14)
#loc184 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":202:5)
#loc185 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":202:14)
#loc186 = loc("/usr/include/string.h":149:1)
#loc187 = loc("/usr/include/string.h":150:14)
#loc188 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":163:22)
#loc189 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":150:1)
#loc190 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":172:1)
#loc191 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":152:5)
#loc192 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":152:12)
#loc193 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":154:12)
#loc194 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":154:5)
#loc195 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":155:5)
#loc196 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":165:5)
#loc197 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":155:12)
#loc198 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":157:5)
#loc199 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":159:19)
#loc200 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":159:9)
#loc201 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":160:9)
#loc202 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":161:5)
#loc203 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":163:9)
#loc204 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":163:16)
#loc205 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":164:9)
#loc206 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":167:5)
#loc207 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":171:5)
#loc208 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":167:16)
#loc209 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":167:9)
#loc210 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":167:25)
#loc211 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":168:5)
#loc212 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":169:19)
#loc213 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":169:9)
#loc214 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":170:9)
#loc215 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":170:14)
#loc216 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":175:1)
#loc217 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":197:1)
#loc218 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":177:5)
#loc219 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":177:12)
#loc220 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":179:12)
#loc221 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":179:5)
#loc222 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":180:5)
#loc223 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":190:5)
#loc224 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":180:12)
#loc225 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":182:5)
#loc226 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":184:9)
#loc227 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":184:16)
#loc228 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":184:22)
#loc229 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":185:9)
#loc230 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":186:5)
#loc231 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":188:19)
#loc232 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":188:9)
#loc233 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":189:9)
#loc234 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":192:5)
#loc235 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":196:5)
#loc236 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":192:16)
#loc237 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":192:9)
#loc238 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":192:25)
#loc239 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":193:5)
#loc240 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":194:19)
#loc241 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":194:9)
#loc242 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":195:9)
#loc243 = loc("CWE78_OS_Command_Injection__char_connect_socket_system_15.c":195:14)
#loc244 = loc(fused[#loc1, #loc2])
#loc245 = loc(fused[#loc3, #loc4])
#loc246 = loc(fused[#loc5, #loc6])
#loc247 = loc(fused[#loc7, #loc8])
#loc248 = loc(fused[#loc9, #loc10])
#loc249 = loc(fused[#loc11, #loc12])
#loc250 = loc(fused[#loc14, #loc15])
#loc251 = loc(fused[#loc16, #loc17])
#loc252 = loc(fused[#loc18, #loc19])
#loc253 = loc(fused[#loc20, #loc21])
#loc254 = loc(fused[#loc22, #loc23])
#loc255 = loc(fused[#loc24, #loc25])
#loc256 = loc(fused[#loc27, #loc28])
#loc257 = loc(fused[#loc30, #loc31])
#loc258 = loc(fused[#loc32, #loc33])
#loc259 = loc(fused[#loc34, #loc35])
#loc260 = loc(fused[#loc37, #loc36])
#loc261 = loc(fused[#loc38, #loc39])
#loc262 = loc(fused[#loc42, #loc43])
#loc263 = loc(fused[#loc44, #loc45])
#loc264 = loc(fused[#loc46, #loc47])
#loc265 = loc(fused[#loc48, #loc49])
#loc266 = loc(fused[#loc50, #loc51])
#loc267 = loc(fused[#loc52, #loc53])
#loc268 = loc(fused[#loc56, #loc57])
#loc269 = loc(fused[#loc58, #loc59])
#loc270 = loc(fused[#loc64, #loc65])
#loc271 = loc(fused[#loc66, #loc67])
#loc272 = loc(fused[#loc68, #loc69])
#loc273 = loc(fused[#loc70, #loc67])
#loc274 = loc(fused[#loc72, #loc73])
#loc275 = loc(fused[#loc75, #loc76])
#loc276 = loc(fused[#loc77, #loc78])
#loc277 = loc(fused[#loc81, #loc79])
#loc278 = loc(fused[#loc85, #loc86])
#loc279 = loc(fused[#loc90, #loc91])
#loc280 = loc(fused[#loc92, #loc93])
#loc281 = loc(fused[#loc95, #loc96])
#loc282 = loc(fused[#loc97, #loc98])
#loc283 = loc(fused[#loc99, #loc100])
#loc284 = loc(fused[#loc101, #loc93])
#loc285 = loc(fused[#loc107, #loc108])
#loc286 = loc(fused[#loc109, #loc110])
#loc287 = loc(fused[#loc111, #loc112])
#loc288 = loc(fused[#loc111, #loc113])
#loc289 = loc(fused[#loc109, #loc114])
#loc290 = loc(fused[#loc117, #loc118])
#loc291 = loc(fused[#loc119, #loc120])
#loc292 = loc(fused[#loc121, #loc122])
#loc293 = loc(fused[#loc124, #loc125])
#loc294 = loc(fused[#loc126, #loc120])
#loc295 = loc(fused[#loc132, #loc133])
#loc296 = loc(fused[#loc131, #loc133])
#loc297 = loc(fused[#loc130, #loc133])
#loc298 = loc(fused[#loc129, #loc128])
#loc299 = loc(fused[#loc138, #loc139])
#loc300 = loc(fused[#loc140, #loc141])
#loc301 = loc(fused[#loc143, #loc141])
#loc302 = loc(fused[#loc146, #loc144])
#loc303 = loc(fused[#loc150, #loc151])
#loc304 = loc(fused[#loc152, #loc153])
#loc305 = loc(fused[#loc155, #loc153])
#loc306 = loc(fused[#loc158, #loc156])
#loc307 = loc(fused[#loc160, #loc161])
#loc308 = loc(fused[#loc162, #loc163])
#loc309 = loc(fused[#loc164, #loc161])
#loc310 = loc(fused[#loc171, #loc172])
#loc311 = loc(fused[#loc174, #loc175])
#loc312 = loc(fused[#loc176, #loc172])
#loc313 = loc(fused[#loc180, #loc181])
#loc314 = loc(fused[#loc182, #loc183])
#loc315 = loc(fused[#loc184, #loc185])
#loc316 = loc(fused[#loc186, #loc187])
#loc317 = loc(fused[#loc189, #loc190])
#loc318 = loc(fused[#loc191, #loc192])
#loc319 = loc(fused[#loc194, #loc193])
#loc320 = loc(fused[#loc195, #loc196])
#loc321 = loc(fused[#loc206, #loc207])
#loc322 = loc(fused[#loc209, #loc210])
#loc323 = loc(fused[#loc211, #loc207])
#loc324 = loc(fused[#loc216, #loc217])
#loc325 = loc(fused[#loc218, #loc219])
#loc326 = loc(fused[#loc221, #loc220])
#loc327 = loc(fused[#loc222, #loc223])
#loc328 = loc(fused[#loc234, #loc235])
#loc329 = loc(fused[#loc237, #loc238])
#loc330 = loc(fused[#loc239, #loc235])
