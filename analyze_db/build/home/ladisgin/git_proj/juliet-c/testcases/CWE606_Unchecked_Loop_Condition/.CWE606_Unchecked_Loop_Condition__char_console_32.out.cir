!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":193:10)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":193:14)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":193:20)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":193:32)
#true = #cir.bool<true> : !cir.bool
#loc377 = loc(fused[#loc134, #loc135])
#loc378 = loc(fused[#loc136, #loc137])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc321)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc322)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc323)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc324)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc325)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc12)
  cir.func private @printIntLine(!s32i) loc(#loc326)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_console_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc328)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc329)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc330)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc331)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc329)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc330)
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc331)
    cir.store %4, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc331)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc25)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc332)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc334)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc30)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc334)
      cir.scope {
        %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc336)
        %12 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc36)
        %13 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
        %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc36)
        cir.store %14, %11 : !u64i, !cir.ptr<!u64i> loc(#loc336)
        cir.scope {
          %15 = cir.const #cir.int<100> : !s32i loc(#loc40)
          %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc40)
          %17 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc41)
          %18 = cir.binop(sub, %16, %17) : !u64i loc(#loc338)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc42)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc42)
          %21 = cir.cmp(gt, %18, %20) : !u64i, !cir.bool loc(#loc339)
          cir.if %21 {
            cir.scope {
              %22 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
              %23 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc47)
              %24 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %23 : !u64i), !cir.ptr<!s8i> loc(#loc48)
              %25 = cir.const #cir.int<100> : !s32i loc(#loc49)
              %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc49)
              %27 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc50)
              %28 = cir.binop(sub, %26, %27) : !u64i loc(#loc342)
              %29 = cir.cast(integral, %28 : !u64i), !s32i loc(#loc342)
              %30 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc323)
              %31 = cir.load %30 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc51)
              %32 = cir.call @fgets(%24, %29, %31) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc52)
              %33 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc53)
              %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc53)
              %35 = cir.cmp(ne, %32, %34) : !cir.ptr<!s8i>, !cir.bool loc(#loc343)
              cir.if %35 {
                %36 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc57)
                %37 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
                %38 = cir.call @strlen(%37) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc57)
                cir.store %38, %11 : !u64i, !cir.ptr<!u64i> loc(#loc345)
                cir.scope {
                  %39 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc63)
                  %40 = cir.const #cir.int<0> : !s32i loc(#loc64)
                  %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc64)
                  %42 = cir.cmp(gt, %39, %41) : !u64i, !cir.bool loc(#loc347)
                  %43 = cir.ternary(%42, true {
                    %44 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
                    %45 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc67)
                    %46 = cir.const #cir.int<1> : !s32i loc(#loc68)
                    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc68)
                    %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc348)
                    %49 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %48 : !u64i), !cir.ptr<!s8i> loc(#loc69)
                    %50 = cir.load %49 : !cir.ptr<!s8i>, !s8i loc(#loc66)
                    %51 = cir.cast(integral, %50 : !s8i), !s32i loc(#loc66)
                    %52 = cir.const #cir.int<10> : !s32i loc(#loc70)
                    %53 = cir.cmp(eq, %51, %52) : !s32i, !cir.bool loc(#loc349)
                    %54 = cir.ternary(%53, true {
                      %55 = cir.const #true loc(#loc65)
                      cir.yield %55 : !cir.bool loc(#loc65)
                    }, false {
                      %55 = cir.const #false loc(#loc65)
                      cir.yield %55 : !cir.bool loc(#loc65)
                    }) : (!cir.bool) -> !cir.bool loc(#loc65)
                    cir.yield %54 : !cir.bool loc(#loc65)
                  }, false {
                    %44 = cir.const #false loc(#loc65)
                    cir.yield %44 : !cir.bool loc(#loc65)
                  }) : (!cir.bool) -> !cir.bool loc(#loc65)
                  cir.if %43 {
                    %44 = cir.const #cir.int<0> : !s32i loc(#loc72)
                    %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc72)
                    %46 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
                    %47 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc74)
                    %48 = cir.const #cir.int<1> : !s32i loc(#loc75)
                    %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc75)
                    %50 = cir.binop(sub, %47, %49) : !u64i loc(#loc351)
                    %51 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %50 : !u64i), !cir.ptr<!s8i> loc(#loc76)
                    cir.store %45, %51 : !s8i, !cir.ptr<!s8i> loc(#loc352)
                  } loc(#loc350)
                } loc(#loc346)
              } else {
                %36 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
                %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
                cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc77)
                %38 = cir.const #cir.int<0> : !s32i loc(#loc78)
                %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc78)
                %40 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
                %41 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc80)
                %42 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc81)
                cir.store %39, %42 : !s8i, !cir.ptr<!s8i> loc(#loc353)
              } loc(#loc344)
            } loc(#loc341)
          } loc(#loc340)
        } loc(#loc337)
      } loc(#loc335)
      %9 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc83)
      cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc354)
    } loc(#loc333)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc356)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc88)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc356)
      cir.scope {
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc358)
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc359)
        %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc360)
        cir.scope {
          %12 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc98)
          %13 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc99)
          %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc12)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc12)
          %16 = cir.call @__isoc99_sscanf(%13, %15, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc98)
          %17 = cir.const #cir.int<1> : !s32i loc(#loc100)
          %18 = cir.cmp(eq, %16, %17) : !s32i, !cir.bool loc(#loc362)
          cir.if %18 {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc102)
            cir.store %19, %11 : !s32i, !cir.ptr<!s32i> loc(#loc364)
            cir.scope {
              %21 = cir.const #cir.int<0> : !s32i loc(#loc106)
              cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc366)
              cir.for : cond {
                %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc108)
                %23 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc109)
                %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc367)
                cir.condition(%24) loc(#loc110)
              } body {
                cir.scope {
                  %22 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc112)
                  %23 = cir.unary(inc, %22) : !s32i, !s32i loc(#loc113)
                  cir.store %23, %11 : !s32i, !cir.ptr<!s32i> loc(#loc369)
                } loc(#loc368)
                cir.yield loc(#loc105)
              } step {
                %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc114)
                %23 = cir.unary(inc, %22) : !s32i, !s32i loc(#loc115)
                cir.store %23, %9 : !s32i, !cir.ptr<!s32i> loc(#loc370)
                cir.yield loc(#loc365)
              } loc(#loc365)
            } loc(#loc365)
            %20 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc116)
            cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc117)
          } loc(#loc363)
        } loc(#loc361)
      } loc(#loc357)
    } loc(#loc355)
    cir.return loc(#loc16)
  } loc(#loc327)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_console_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc372)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc120)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc373)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc122)
    cir.return loc(#loc119)
  } loc(#loc371)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc374)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc375)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc128)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc129)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc130)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc131)
  cir.func @main(%arg0: !s32i loc(fused[#loc134, #loc135]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc136, #loc137])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc377)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc378)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc133)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc138)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc138)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc139)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc140)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc140)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc141)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc128)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc128)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc142)
    %8 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_console_32_good : !cir.ptr<!cir.func<!void ()>> loc(#loc379)
    cir.call @CWE606_Unchecked_Loop_Condition__char_console_32_good() : () -> () loc(#loc143)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc129)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc129)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc145)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc130)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc130)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc146)
    %13 = cir.get_global @CWE606_Unchecked_Loop_Condition__char_console_32_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc380)
    cir.call @CWE606_Unchecked_Loop_Condition__char_console_32_bad() : () -> () loc(#loc147)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc131)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc131)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc149)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc150)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc381)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc381)
    cir.return %17 : !s32i loc(#loc381)
  } loc(#loc376)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc382)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc154)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc384)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc385)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc386)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc387)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc385)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc386)
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc387)
    cir.store %4, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc387)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc165)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc388)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc390)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc170)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc171)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc390)
      %9 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc172)
      %10 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc173)
      %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc154)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc154)
      %13 = cir.call @strcpy(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc172)
      %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc174)
      %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc175)
      cir.store %14, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc391)
    } loc(#loc389)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc393)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc180)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc181)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc393)
      cir.scope {
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc395)
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc396)
        %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc397)
        cir.scope {
          %12 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc190)
          %13 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc191)
          %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc192)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc192)
          %16 = cir.call @__isoc99_sscanf(%13, %15, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc190)
          %17 = cir.const #cir.int<1> : !s32i loc(#loc193)
          %18 = cir.cmp(eq, %16, %17) : !s32i, !cir.bool loc(#loc399)
          cir.if %18 {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc195)
            cir.store %19, %11 : !s32i, !cir.ptr<!s32i> loc(#loc401)
            cir.scope {
              %21 = cir.const #cir.int<0> : !s32i loc(#loc199)
              cir.store %21, %9 : !s32i, !cir.ptr<!s32i> loc(#loc403)
              cir.for : cond {
                %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc201)
                %23 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc202)
                %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc404)
                cir.condition(%24) loc(#loc203)
              } body {
                cir.scope {
                  %22 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc205)
                  %23 = cir.unary(inc, %22) : !s32i, !s32i loc(#loc206)
                  cir.store %23, %11 : !s32i, !cir.ptr<!s32i> loc(#loc406)
                } loc(#loc405)
                cir.yield loc(#loc198)
              } step {
                %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc207)
                %23 = cir.unary(inc, %22) : !s32i, !s32i loc(#loc208)
                cir.store %23, %9 : !s32i, !cir.ptr<!s32i> loc(#loc407)
                cir.yield loc(#loc402)
              } loc(#loc402)
            } loc(#loc402)
            %20 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc209)
            cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc210)
          } loc(#loc400)
        } loc(#loc398)
      } loc(#loc394)
    } loc(#loc392)
    cir.return loc(#loc156)
  } loc(#loc383)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc409)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc410)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc411)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc412)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc410)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc411)
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc412)
    cir.store %4, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc412)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc221)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc413)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc415)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc226)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc227)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc415)
      cir.scope {
        %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc417)
        %12 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc232)
        %13 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc233)
        %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc232)
        cir.store %14, %11 : !u64i, !cir.ptr<!u64i> loc(#loc417)
        cir.scope {
          %15 = cir.const #cir.int<100> : !s32i loc(#loc236)
          %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc236)
          %17 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc237)
          %18 = cir.binop(sub, %16, %17) : !u64i loc(#loc419)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc238)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc238)
          %21 = cir.cmp(gt, %18, %20) : !u64i, !cir.bool loc(#loc420)
          cir.if %21 {
            cir.scope {
              %22 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc242)
              %23 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc243)
              %24 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %23 : !u64i), !cir.ptr<!s8i> loc(#loc244)
              %25 = cir.const #cir.int<100> : !s32i loc(#loc245)
              %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc245)
              %27 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc246)
              %28 = cir.binop(sub, %26, %27) : !u64i loc(#loc423)
              %29 = cir.cast(integral, %28 : !u64i), !s32i loc(#loc423)
              %30 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc323)
              %31 = cir.load %30 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc247)
              %32 = cir.call @fgets(%24, %29, %31) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc248)
              %33 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc249)
              %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc249)
              %35 = cir.cmp(ne, %32, %34) : !cir.ptr<!s8i>, !cir.bool loc(#loc424)
              cir.if %35 {
                %36 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc253)
                %37 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc254)
                %38 = cir.call @strlen(%37) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc253)
                cir.store %38, %11 : !u64i, !cir.ptr<!u64i> loc(#loc426)
                cir.scope {
                  %39 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc259)
                  %40 = cir.const #cir.int<0> : !s32i loc(#loc260)
                  %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc260)
                  %42 = cir.cmp(gt, %39, %41) : !u64i, !cir.bool loc(#loc428)
                  %43 = cir.ternary(%42, true {
                    %44 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc262)
                    %45 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc263)
                    %46 = cir.const #cir.int<1> : !s32i loc(#loc264)
                    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc264)
                    %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc429)
                    %49 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %48 : !u64i), !cir.ptr<!s8i> loc(#loc265)
                    %50 = cir.load %49 : !cir.ptr<!s8i>, !s8i loc(#loc262)
                    %51 = cir.cast(integral, %50 : !s8i), !s32i loc(#loc262)
                    %52 = cir.const #cir.int<10> : !s32i loc(#loc266)
                    %53 = cir.cmp(eq, %51, %52) : !s32i, !cir.bool loc(#loc430)
                    %54 = cir.ternary(%53, true {
                      %55 = cir.const #true loc(#loc261)
                      cir.yield %55 : !cir.bool loc(#loc261)
                    }, false {
                      %55 = cir.const #false loc(#loc261)
                      cir.yield %55 : !cir.bool loc(#loc261)
                    }) : (!cir.bool) -> !cir.bool loc(#loc261)
                    cir.yield %54 : !cir.bool loc(#loc261)
                  }, false {
                    %44 = cir.const #false loc(#loc261)
                    cir.yield %44 : !cir.bool loc(#loc261)
                  }) : (!cir.bool) -> !cir.bool loc(#loc261)
                  cir.if %43 {
                    %44 = cir.const #cir.int<0> : !s32i loc(#loc268)
                    %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc268)
                    %46 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc269)
                    %47 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc270)
                    %48 = cir.const #cir.int<1> : !s32i loc(#loc271)
                    %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc271)
                    %50 = cir.binop(sub, %47, %49) : !u64i loc(#loc432)
                    %51 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %50 : !u64i), !cir.ptr<!s8i> loc(#loc272)
                    cir.store %45, %51 : !s8i, !cir.ptr<!s8i> loc(#loc433)
                  } loc(#loc431)
                } loc(#loc427)
              } else {
                %36 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc273)
                %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc273)
                cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc274)
                %38 = cir.const #cir.int<0> : !s32i loc(#loc275)
                %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc275)
                %40 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc276)
                %41 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc277)
                %42 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc278)
                cir.store %39, %42 : !s8i, !cir.ptr<!s8i> loc(#loc434)
              } loc(#loc425)
            } loc(#loc422)
          } loc(#loc421)
        } loc(#loc418)
      } loc(#loc416)
      %9 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc279)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc280)
      cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc435)
    } loc(#loc414)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc437)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc285)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc286)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc437)
      cir.scope {
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc439)
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc440)
        %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc441)
        cir.scope {
          %12 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...)>> loc(#loc295)
          %13 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc296)
          %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc297)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc297)
          %16 = cir.call @__isoc99_sscanf(%13, %15, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc295)
          %17 = cir.const #cir.int<1> : !s32i loc(#loc298)
          %18 = cir.cmp(eq, %16, %17) : !s32i, !cir.bool loc(#loc443)
          cir.if %18 {
            cir.scope {
              %19 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc302)
              %20 = cir.const #cir.int<10000> : !s32i loc(#loc303)
              %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc446)
              cir.if %21 {
                %22 = cir.const #cir.int<0> : !s32i loc(#loc305)
                cir.store %22, %11 : !s32i, !cir.ptr<!s32i> loc(#loc448)
                cir.scope {
                  %24 = cir.const #cir.int<0> : !s32i loc(#loc309)
                  cir.store %24, %9 : !s32i, !cir.ptr<!s32i> loc(#loc450)
                  cir.for : cond {
                    %25 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc311)
                    %26 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc312)
                    %27 = cir.cmp(lt, %25, %26) : !s32i, !cir.bool loc(#loc451)
                    cir.condition(%27) loc(#loc313)
                  } body {
                    cir.scope {
                      %25 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc315)
                      %26 = cir.unary(inc, %25) : !s32i, !s32i loc(#loc316)
                      cir.store %26, %11 : !s32i, !cir.ptr<!s32i> loc(#loc453)
                    } loc(#loc452)
                    cir.yield loc(#loc308)
                  } step {
                    %25 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc317)
                    %26 = cir.unary(inc, %25) : !s32i, !s32i loc(#loc318)
                    cir.store %26, %9 : !s32i, !cir.ptr<!s32i> loc(#loc454)
                    cir.yield loc(#loc449)
                  } loc(#loc449)
                } loc(#loc449)
                %23 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc319)
                cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc320)
              } loc(#loc447)
            } loc(#loc445)
          } loc(#loc444)
        } loc(#loc442)
      } loc(#loc438)
    } loc(#loc436)
    cir.return loc(#loc212)
  } loc(#loc408)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_console_32.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":56:31)
#loc10 = loc("/usr/include/stdio.h":468:1)
#loc11 = loc("/usr/include/stdio.h":468:12)
#loc12 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":68:30)
#loc13 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc14 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc15 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":28:1)
#loc16 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":81:1)
#loc17 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":30:5)
#loc18 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":30:12)
#loc19 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":31:5)
#loc20 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":31:25)
#loc21 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":32:5)
#loc22 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":32:25)
#loc23 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":33:5)
#loc24 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":33:28)
#loc25 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":34:12)
#loc26 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":34:5)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":35:5)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":63:5)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":36:9)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":36:24)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":36:23)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":37:9)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":61:9)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":39:13)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":39:41)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":39:30)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":39:37)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":41:13)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":60:13)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":41:17)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":41:21)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":41:31)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":42:13)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":44:17)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":59:17)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":44:27)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":44:32)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":44:31)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":44:47)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":44:51)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":44:61)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":44:21)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":44:71)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":45:17)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":53:17)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":55:17)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":48:31)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":48:38)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":48:21)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":48:42)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":49:21)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":52:21)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":49:25)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":49:35)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":49:37)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":49:40)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":49:45)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":49:53)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":49:54)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":49:59)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":50:21)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":51:43)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":51:25)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":51:30)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":51:38)
#loc76 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":51:39)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":56:21)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":58:37)
#loc79 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":58:21)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":58:26)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":58:33)
#loc82 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":62:21)
#loc83 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":62:10)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":62:9)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":64:5)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":80:5)
#loc87 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":65:9)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":65:24)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":65:23)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":66:9)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":79:9)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":67:13)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":67:17)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":67:20)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":67:23)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":68:13)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":78:13)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":68:17)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":68:24)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":68:43)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":69:13)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":71:31)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":71:17)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":72:17)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":76:17)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":72:26)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":72:22)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":72:29)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":72:33)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":72:31)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":73:17)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":75:32)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":75:21)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":72:37)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":72:36)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":77:30)
#loc117 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":77:17)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":179:1)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":183:1)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":181:5)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":181:13)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":182:5)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":182:13)
#loc124 = loc("/usr/include/stdlib.h":575:1)
#loc125 = loc("/usr/include/stdlib.h":575:41)
#loc126 = loc("/usr/include/time.h":76:1)
#loc127 = loc("/usr/include/time.h":76:38)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":198:15)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":200:15)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":203:15)
#loc131 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":205:15)
#loc132 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":193:1)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":208:1)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":194:1)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":196:27)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":196:22)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":196:5)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":198:5)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":199:5)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":199:59)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":200:5)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":203:5)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":204:5)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":204:58)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":205:5)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":207:12)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":207:5)
#loc152 = loc("/usr/include/string.h":141:1)
#loc153 = loc("/usr/include/string.h":142:14)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":98:22)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":88:1)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":118:1)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":90:5)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":90:12)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":91:5)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":91:25)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":92:5)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":92:25)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":93:5)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":93:28)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":94:12)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":94:5)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":95:5)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":100:5)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":96:9)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":96:24)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":96:23)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":98:9)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":98:16)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":99:21)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":99:10)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":99:9)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":101:5)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":117:5)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":102:9)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":102:24)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":102:23)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":103:9)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":116:9)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":104:13)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":104:17)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":104:20)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":104:23)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":105:13)
#loc189 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":115:13)
#loc190 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":105:17)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":105:24)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":105:30)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":105:43)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":106:13)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":108:31)
#loc196 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":108:17)
#loc197 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":109:17)
#loc198 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":113:17)
#loc199 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":109:26)
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":109:22)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":109:29)
#loc202 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":109:33)
#loc203 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":109:31)
#loc204 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":110:17)
#loc205 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":112:32)
#loc206 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":112:21)
#loc207 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":109:37)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":109:36)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":114:30)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":114:17)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":121:1)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":177:1)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":123:5)
#loc214 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":123:12)
#loc215 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":124:5)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":124:25)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":125:5)
#loc218 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":125:25)
#loc219 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":126:5)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":126:28)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":127:12)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":127:5)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":128:5)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":156:5)
#loc225 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":129:9)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":129:24)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":129:23)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":130:9)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":154:9)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":132:13)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":132:41)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":132:30)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":132:37)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":134:13)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":153:13)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":134:17)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":134:21)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":134:31)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":135:13)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":137:17)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":152:17)
#loc242 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":137:27)
#loc243 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":137:32)
#loc244 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":137:31)
#loc245 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":137:47)
#loc246 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":137:51)
#loc247 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":137:61)
#loc248 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":137:21)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":137:71)
#loc250 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":138:17)
#loc251 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":146:17)
#loc252 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":148:17)
#loc253 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":141:31)
#loc254 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":141:38)
#loc255 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":141:21)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":141:42)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":142:21)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":145:21)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":142:25)
#loc260 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":142:35)
#loc261 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":142:37)
#loc262 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":142:40)
#loc263 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":142:45)
#loc264 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":142:53)
#loc265 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":142:54)
#loc266 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":142:59)
#loc267 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":143:21)
#loc268 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":144:43)
#loc269 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":144:25)
#loc270 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":144:30)
#loc271 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":144:38)
#loc272 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":144:39)
#loc273 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":149:31)
#loc274 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":149:21)
#loc275 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":151:37)
#loc276 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":151:21)
#loc277 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":151:26)
#loc278 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":151:33)
#loc279 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":155:21)
#loc280 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":155:10)
#loc281 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":155:9)
#loc282 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":157:5)
#loc283 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":176:5)
#loc284 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":158:9)
#loc285 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":158:24)
#loc286 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":158:23)
#loc287 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":159:9)
#loc288 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":175:9)
#loc289 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":160:13)
#loc290 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":160:17)
#loc291 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":160:20)
#loc292 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":160:23)
#loc293 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":161:13)
#loc294 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":174:13)
#loc295 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":161:17)
#loc296 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":161:24)
#loc297 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":161:30)
#loc298 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":161:43)
#loc299 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":162:13)
#loc300 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":164:17)
#loc301 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":173:17)
#loc302 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":164:21)
#loc303 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":164:25)
#loc304 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":165:17)
#loc305 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":166:35)
#loc306 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":166:21)
#loc307 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":167:21)
#loc308 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":171:21)
#loc309 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":167:30)
#loc310 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":167:26)
#loc311 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":167:33)
#loc312 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":167:37)
#loc313 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":167:35)
#loc314 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":168:21)
#loc315 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":170:36)
#loc316 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":170:25)
#loc317 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":167:41)
#loc318 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":167:40)
#loc319 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":172:34)
#loc320 = loc("CWE606_Unchecked_Loop_Condition__char_console_32.c":172:21)
#loc321 = loc(fused[#loc1, #loc2])
#loc322 = loc(fused[#loc3, #loc4])
#loc323 = loc(fused[#loc5, #loc6])
#loc324 = loc(fused[#loc7, #loc8])
#loc325 = loc(fused[#loc10, #loc11])
#loc326 = loc(fused[#loc13, #loc14])
#loc327 = loc(fused[#loc15, #loc16])
#loc328 = loc(fused[#loc17, #loc18])
#loc329 = loc(fused[#loc19, #loc20])
#loc330 = loc(fused[#loc21, #loc22])
#loc331 = loc(fused[#loc23, #loc24])
#loc332 = loc(fused[#loc26, #loc25])
#loc333 = loc(fused[#loc27, #loc28])
#loc334 = loc(fused[#loc29, #loc30])
#loc335 = loc(fused[#loc32, #loc33])
#loc336 = loc(fused[#loc34, #loc35])
#loc337 = loc(fused[#loc38, #loc39])
#loc338 = loc(fused[#loc40, #loc41])
#loc339 = loc(fused[#loc40, #loc42])
#loc340 = loc(fused[#loc43, #loc39])
#loc341 = loc(fused[#loc44, #loc45])
#loc342 = loc(fused[#loc49, #loc50])
#loc343 = loc(fused[#loc52, #loc53])
#loc344 = loc(fused[#loc54, #loc55, #loc56, #loc45])
#loc345 = loc(fused[#loc59, #loc60])
#loc346 = loc(fused[#loc61, #loc62])
#loc347 = loc(fused[#loc63, #loc64])
#loc348 = loc(fused[#loc67, #loc68])
#loc349 = loc(fused[#loc66, #loc70])
#loc350 = loc(fused[#loc71, #loc62])
#loc351 = loc(fused[#loc74, #loc75])
#loc352 = loc(fused[#loc73, #loc72])
#loc353 = loc(fused[#loc79, #loc78])
#loc354 = loc(fused[#loc84, #loc82])
#loc355 = loc(fused[#loc85, #loc86])
#loc356 = loc(fused[#loc87, #loc88])
#loc357 = loc(fused[#loc90, #loc91])
#loc358 = loc(fused[#loc92, #loc93])
#loc359 = loc(fused[#loc92, #loc94])
#loc360 = loc(fused[#loc92, #loc95])
#loc361 = loc(fused[#loc96, #loc97])
#loc362 = loc(fused[#loc98, #loc100])
#loc363 = loc(fused[#loc101, #loc97])
#loc364 = loc(fused[#loc103, #loc102])
#loc365 = loc(fused[#loc104, #loc105])
#loc366 = loc(fused[#loc107, #loc106])
#loc367 = loc(fused[#loc108, #loc109])
#loc368 = loc(fused[#loc111, #loc105])
#loc369 = loc(fused[#loc113, #loc112])
#loc370 = loc(fused[#loc115, #loc114])
#loc371 = loc(fused[#loc118, #loc119])
#loc372 = loc(fused[#loc120, #loc121])
#loc373 = loc(fused[#loc122, #loc123])
#loc374 = loc(fused[#loc124, #loc125])
#loc375 = loc(fused[#loc126, #loc127])
#loc376 = loc(fused[#loc132, #loc133])
#loc379 = loc(fused[#loc143, #loc144])
#loc380 = loc(fused[#loc147, #loc148])
#loc381 = loc(fused[#loc151, #loc150])
#loc382 = loc(fused[#loc152, #loc153])
#loc383 = loc(fused[#loc155, #loc156])
#loc384 = loc(fused[#loc157, #loc158])
#loc385 = loc(fused[#loc159, #loc160])
#loc386 = loc(fused[#loc161, #loc162])
#loc387 = loc(fused[#loc163, #loc164])
#loc388 = loc(fused[#loc166, #loc165])
#loc389 = loc(fused[#loc167, #loc168])
#loc390 = loc(fused[#loc169, #loc170])
#loc391 = loc(fused[#loc176, #loc174])
#loc392 = loc(fused[#loc177, #loc178])
#loc393 = loc(fused[#loc179, #loc180])
#loc394 = loc(fused[#loc182, #loc183])
#loc395 = loc(fused[#loc184, #loc185])
#loc396 = loc(fused[#loc184, #loc186])
#loc397 = loc(fused[#loc184, #loc187])
#loc398 = loc(fused[#loc188, #loc189])
#loc399 = loc(fused[#loc190, #loc193])
#loc400 = loc(fused[#loc194, #loc189])
#loc401 = loc(fused[#loc196, #loc195])
#loc402 = loc(fused[#loc197, #loc198])
#loc403 = loc(fused[#loc200, #loc199])
#loc404 = loc(fused[#loc201, #loc202])
#loc405 = loc(fused[#loc204, #loc198])
#loc406 = loc(fused[#loc206, #loc205])
#loc407 = loc(fused[#loc208, #loc207])
#loc408 = loc(fused[#loc211, #loc212])
#loc409 = loc(fused[#loc213, #loc214])
#loc410 = loc(fused[#loc215, #loc216])
#loc411 = loc(fused[#loc217, #loc218])
#loc412 = loc(fused[#loc219, #loc220])
#loc413 = loc(fused[#loc222, #loc221])
#loc414 = loc(fused[#loc223, #loc224])
#loc415 = loc(fused[#loc225, #loc226])
#loc416 = loc(fused[#loc228, #loc229])
#loc417 = loc(fused[#loc230, #loc231])
#loc418 = loc(fused[#loc234, #loc235])
#loc419 = loc(fused[#loc236, #loc237])
#loc420 = loc(fused[#loc236, #loc238])
#loc421 = loc(fused[#loc239, #loc235])
#loc422 = loc(fused[#loc240, #loc241])
#loc423 = loc(fused[#loc245, #loc246])
#loc424 = loc(fused[#loc248, #loc249])
#loc425 = loc(fused[#loc250, #loc251, #loc252, #loc241])
#loc426 = loc(fused[#loc255, #loc256])
#loc427 = loc(fused[#loc257, #loc258])
#loc428 = loc(fused[#loc259, #loc260])
#loc429 = loc(fused[#loc263, #loc264])
#loc430 = loc(fused[#loc262, #loc266])
#loc431 = loc(fused[#loc267, #loc258])
#loc432 = loc(fused[#loc270, #loc271])
#loc433 = loc(fused[#loc269, #loc268])
#loc434 = loc(fused[#loc276, #loc275])
#loc435 = loc(fused[#loc281, #loc279])
#loc436 = loc(fused[#loc282, #loc283])
#loc437 = loc(fused[#loc284, #loc285])
#loc438 = loc(fused[#loc287, #loc288])
#loc439 = loc(fused[#loc289, #loc290])
#loc440 = loc(fused[#loc289, #loc291])
#loc441 = loc(fused[#loc289, #loc292])
#loc442 = loc(fused[#loc293, #loc294])
#loc443 = loc(fused[#loc295, #loc298])
#loc444 = loc(fused[#loc299, #loc294])
#loc445 = loc(fused[#loc300, #loc301])
#loc446 = loc(fused[#loc302, #loc303])
#loc447 = loc(fused[#loc304, #loc301])
#loc448 = loc(fused[#loc306, #loc305])
#loc449 = loc(fused[#loc307, #loc308])
#loc450 = loc(fused[#loc310, #loc309])
#loc451 = loc(fused[#loc311, #loc312])
#loc452 = loc(fused[#loc314, #loc308])
#loc453 = loc(fused[#loc316, #loc315])
#loc454 = loc(fused[#loc318, #loc317])
