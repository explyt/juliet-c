!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("../../testcasesupport/std_testcase.h":61:7)
!ty_TwoIntsClass = !cir.record<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__class_12.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @globalReturnsTrueOrFalse() -> !s32i loc(#loc165)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc166)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc5)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc5)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc5)
    cir.return loc(#loc5)
  } loc(#loc5)
  cir.func private @printIntLine(!s32i) loc(#loc167)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc168)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc169)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data is NULL\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc12)
  cir.func @_ZN41CWE476_NULL_Pointer_Dereference__class_123badEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc171)
    cir.scope {
      %1 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc19)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc173)
      cir.if %2 {
        %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc24)
        cir.store %3, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc175)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["tmpData", init] {alignment = 8 : i64} loc(#loc177)
          %4 = cir.const #cir.int<8> : !u64i loc(#loc178)
          %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc177)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc178)
          cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc29)
          cir.store %6, %3 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc177)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc31)
          %8 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc32)
          %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc33)
          cir.store %7, %9 : !s32i, !cir.ptr<!s32i> loc(#loc179)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc34)
          %11 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc35)
          %12 = cir.get_member %11[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc36)
          cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc180)
          %13 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc37)
          cir.store %13, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc181)
        } loc(#loc176)
      } loc(#loc174)
    } loc(#loc172)
    cir.scope {
      %1 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc41)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc183)
      cir.if %2 {
        %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc46)
        %4 = cir.get_member %3[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc33)
        %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc47)
        cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc48)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc49)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc49)
        cir.call @_ZdlPv(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc50)
      } else {
        cir.scope {
          %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc53)
          %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc54)
          %5 = cir.cmp(ne, %3, %4) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc186)
          cir.if %5 {
            %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc58)
            %7 = cir.get_member %6[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc33)
            %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc59)
            cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc60)
            %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc61)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc61)
            cir.call @_ZdlPv(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc50)
          } else {
            %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc12)
            %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc12)
            cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc62)
          } loc(#loc187)
        } loc(#loc185)
      } loc(#loc184)
    } loc(#loc182)
    cir.return loc(#loc14)
  } loc(#loc170)
  cir.func internal private @_ZN41CWE476_NULL_Pointer_Dereference__class_12L7goodB2GEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc189)
    cir.scope {
      %1 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc69)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc191)
      cir.if %2 {
        %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc74)
        cir.store %3, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc193)
      } else {
        %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc76)
        cir.store %3, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc194)
      } loc(#loc192)
    } loc(#loc190)
    cir.scope {
      %1 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc80)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc196)
      cir.if %2 {
        cir.scope {
          %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc87)
          %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc88)
          %5 = cir.cmp(ne, %3, %4) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc199)
          cir.if %5 {
            %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc92)
            %7 = cir.get_member %6[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc33)
            %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc93)
            cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc94)
            %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc95)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc95)
            cir.call @_ZdlPv(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc96)
          } else {
            %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc97)
            %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc97)
            cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc98)
          } loc(#loc200)
        } loc(#loc198)
      } else {
        cir.scope {
          %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc101)
          %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc102)
          %5 = cir.cmp(ne, %3, %4) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc202)
          cir.if %5 {
            %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc106)
            %7 = cir.get_member %6[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc33)
            %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc107)
            cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc108)
            %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc109)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc109)
            cir.call @_ZdlPv(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc96)
          } else {
            %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc110)
            %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc110)
            cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc111)
          } loc(#loc203)
        } loc(#loc201)
      } loc(#loc197)
    } loc(#loc195)
    cir.return loc(#loc64)
  } loc(#loc188)
  cir.func internal private @_ZN41CWE476_NULL_Pointer_Dereference__class_12L7goodG2BEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc205)
    cir.scope {
      %1 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc118)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc207)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["tmpData", init] {alignment = 8 : i64} loc(#loc210)
          %4 = cir.const #cir.int<8> : !u64i loc(#loc211)
          %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc210)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc211)
          cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc126)
          cir.store %6, %3 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc210)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc128)
          %8 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc129)
          %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc33)
          cir.store %7, %9 : !s32i, !cir.ptr<!s32i> loc(#loc212)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc130)
          %11 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc131)
          %12 = cir.get_member %11[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc36)
          cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc213)
          %13 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc132)
          cir.store %13, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc214)
        } loc(#loc209)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["tmpData", init] {alignment = 8 : i64} loc(#loc216)
          %4 = cir.const #cir.int<8> : !u64i loc(#loc217)
          %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc216)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc217)
          cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc137)
          cir.store %6, %3 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc216)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc139)
          %8 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc140)
          %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc33)
          cir.store %7, %9 : !s32i, !cir.ptr<!s32i> loc(#loc218)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc141)
          %11 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc142)
          %12 = cir.get_member %11[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc36)
          cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc219)
          %13 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc143)
          cir.store %13, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc220)
        } loc(#loc215)
      } loc(#loc208)
    } loc(#loc206)
    cir.scope {
      %1 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc147)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc222)
      cir.if %2 {
        %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc152)
        %4 = cir.get_member %3[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc33)
        %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc153)
        cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc154)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc155)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc155)
        cir.call @_ZdlPv(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc156)
      } else {
        %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc157)
        %4 = cir.get_member %3[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc33)
        %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc158)
        cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc159)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc160)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc160)
        cir.call @_ZdlPv(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc156)
      } loc(#loc223)
    } loc(#loc221)
    cir.return loc(#loc113)
  } loc(#loc204)
  cir.func @_ZN41CWE476_NULL_Pointer_Dereference__class_124goodEv() extra(#fn_attr2) {
    cir.call @_ZN41CWE476_NULL_Pointer_Dereference__class_12L7goodB2GEv() : () -> () loc(#loc163)
    cir.call @_ZN41CWE476_NULL_Pointer_Dereference__class_12L7goodG2BEv() : () -> () loc(#loc164)
    cir.return loc(#loc162)
  } loc(#loc224)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__class_12.cpp":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc9 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":59:23)
#loc13 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":24:1)
#loc14 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":62:1)
#loc15 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":26:5)
#loc16 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":26:20)
#loc17 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":27:5)
#loc18 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":41:5)
#loc19 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":27:8)
#loc20 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":27:33)
#loc21 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":28:5)
#loc22 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":31:5)
#loc23 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":33:5)
#loc24 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":30:16)
#loc25 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":30:9)
#loc26 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":34:9)
#loc27 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":40:9)
#loc28 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":35:13)
#loc29 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":35:42)
#loc30 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":35:38)
#loc31 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":36:31)
#loc32 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":36:13)
#loc33 = loc("../../testcasesupport/std_testcase.h":64:13)
#loc34 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":37:31)
#loc35 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":37:13)
#loc36 = loc("../../testcasesupport/std_testcase.h":65:13)
#loc37 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":39:20)
#loc38 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":39:13)
#loc39 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":42:5)
#loc40 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":61:5)
#loc41 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":42:8)
#loc42 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":42:33)
#loc43 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":43:5)
#loc44 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":48:5)
#loc45 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":50:5)
#loc46 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":45:22)
#loc47 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":45:28)
#loc48 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":45:9)
#loc49 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":47:16)
#loc50 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":24:6)
#loc51 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":52:9)
#loc52 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":60:9)
#loc53 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":52:13)
#loc54 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":52:21)
#loc55 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":53:9)
#loc56 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":56:9)
#loc57 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":58:9)
#loc58 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":54:26)
#loc59 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":54:32)
#loc60 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":54:13)
#loc61 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":55:20)
#loc62 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":59:13)
#loc63 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":71:1)
#loc64 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":110:1)
#loc65 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":73:5)
#loc66 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":73:20)
#loc67 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":74:5)
#loc68 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":83:5)
#loc69 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":74:8)
#loc70 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":74:33)
#loc71 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":75:5)
#loc72 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":78:5)
#loc73 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":80:5)
#loc74 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":77:16)
#loc75 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":77:9)
#loc76 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":82:16)
#loc77 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":82:9)
#loc78 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":84:5)
#loc79 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":109:5)
#loc80 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":84:8)
#loc81 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":84:33)
#loc82 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":85:5)
#loc83 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":96:5)
#loc84 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":98:5)
#loc85 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":87:9)
#loc86 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":95:9)
#loc87 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":87:13)
#loc88 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":87:21)
#loc89 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":88:9)
#loc90 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":91:9)
#loc91 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":93:9)
#loc92 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":89:26)
#loc93 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":89:32)
#loc94 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":89:13)
#loc95 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":90:20)
#loc96 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":71:13)
#loc97 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":94:23)
#loc98 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":94:13)
#loc99 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":100:9)
#loc100 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":108:9)
#loc101 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":100:13)
#loc102 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":100:21)
#loc103 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":101:9)
#loc104 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":104:9)
#loc105 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":106:9)
#loc106 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":102:26)
#loc107 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":102:32)
#loc108 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":102:13)
#loc109 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":103:20)
#loc110 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":107:23)
#loc111 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":107:13)
#loc112 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":115:1)
#loc113 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":152:1)
#loc114 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":117:5)
#loc115 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":117:20)
#loc116 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":118:5)
#loc117 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":137:5)
#loc118 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":118:8)
#loc119 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":118:33)
#loc120 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":119:5)
#loc121 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":127:5)
#loc122 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":129:5)
#loc123 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":120:9)
#loc124 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":126:9)
#loc125 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":121:13)
#loc126 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":121:42)
#loc127 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":121:38)
#loc128 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":122:31)
#loc129 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":122:13)
#loc130 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":123:31)
#loc131 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":123:13)
#loc132 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":125:20)
#loc133 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":125:13)
#loc134 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":130:9)
#loc135 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":136:9)
#loc136 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":131:13)
#loc137 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":131:42)
#loc138 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":131:38)
#loc139 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":132:31)
#loc140 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":132:13)
#loc141 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":133:31)
#loc142 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":133:13)
#loc143 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":135:20)
#loc144 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":135:13)
#loc145 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":138:5)
#loc146 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":151:5)
#loc147 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":138:8)
#loc148 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":138:33)
#loc149 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":139:5)
#loc150 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":144:5)
#loc151 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":146:5)
#loc152 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":141:22)
#loc153 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":141:28)
#loc154 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":141:9)
#loc155 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":143:16)
#loc156 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":115:13)
#loc157 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":148:22)
#loc158 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":148:28)
#loc159 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":148:9)
#loc160 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":150:16)
#loc161 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":154:1)
#loc162 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":158:1)
#loc163 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":156:5)
#loc164 = loc("CWE476_NULL_Pointer_Dereference__class_12.cpp":157:5)
#loc165 = loc(fused[#loc1, #loc2])
#loc166 = loc(fused[#loc3, #loc4])
#loc167 = loc(fused[#loc6, #loc7])
#loc168 = loc(fused[#loc8, #loc9])
#loc169 = loc(fused[#loc10, #loc11])
#loc170 = loc(fused[#loc13, #loc14])
#loc171 = loc(fused[#loc15, #loc16])
#loc172 = loc(fused[#loc17, #loc18])
#loc173 = loc(fused[#loc19, #loc20])
#loc174 = loc(fused[#loc21, #loc22, #loc23, #loc18])
#loc175 = loc(fused[#loc25, #loc24])
#loc176 = loc(fused[#loc26, #loc27])
#loc177 = loc(fused[#loc28, #loc29])
#loc178 = loc(fused[#loc30, #loc29])
#loc179 = loc(fused[#loc32, #loc31])
#loc180 = loc(fused[#loc35, #loc34])
#loc181 = loc(fused[#loc38, #loc37])
#loc182 = loc(fused[#loc39, #loc40])
#loc183 = loc(fused[#loc41, #loc42])
#loc184 = loc(fused[#loc43, #loc44, #loc45, #loc40])
#loc185 = loc(fused[#loc51, #loc52])
#loc186 = loc(fused[#loc53, #loc54])
#loc187 = loc(fused[#loc55, #loc56, #loc57, #loc52])
#loc188 = loc(fused[#loc63, #loc64])
#loc189 = loc(fused[#loc65, #loc66])
#loc190 = loc(fused[#loc67, #loc68])
#loc191 = loc(fused[#loc69, #loc70])
#loc192 = loc(fused[#loc71, #loc72, #loc73, #loc68])
#loc193 = loc(fused[#loc75, #loc74])
#loc194 = loc(fused[#loc77, #loc76])
#loc195 = loc(fused[#loc78, #loc79])
#loc196 = loc(fused[#loc80, #loc81])
#loc197 = loc(fused[#loc82, #loc83, #loc84, #loc79])
#loc198 = loc(fused[#loc85, #loc86])
#loc199 = loc(fused[#loc87, #loc88])
#loc200 = loc(fused[#loc89, #loc90, #loc91, #loc86])
#loc201 = loc(fused[#loc99, #loc100])
#loc202 = loc(fused[#loc101, #loc102])
#loc203 = loc(fused[#loc103, #loc104, #loc105, #loc100])
#loc204 = loc(fused[#loc112, #loc113])
#loc205 = loc(fused[#loc114, #loc115])
#loc206 = loc(fused[#loc116, #loc117])
#loc207 = loc(fused[#loc118, #loc119])
#loc208 = loc(fused[#loc120, #loc121, #loc122, #loc117])
#loc209 = loc(fused[#loc123, #loc124])
#loc210 = loc(fused[#loc125, #loc126])
#loc211 = loc(fused[#loc127, #loc126])
#loc212 = loc(fused[#loc129, #loc128])
#loc213 = loc(fused[#loc131, #loc130])
#loc214 = loc(fused[#loc133, #loc132])
#loc215 = loc(fused[#loc134, #loc135])
#loc216 = loc(fused[#loc136, #loc137])
#loc217 = loc(fused[#loc138, #loc137])
#loc218 = loc(fused[#loc140, #loc139])
#loc219 = loc(fused[#loc142, #loc141])
#loc220 = loc(fused[#loc144, #loc143])
#loc221 = loc(fused[#loc145, #loc146])
#loc222 = loc(fused[#loc147, #loc148])
#loc223 = loc(fused[#loc149, #loc150, #loc151, #loc146])
#loc224 = loc(fused[#loc161, #loc162])
