!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc122 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":110:48)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc204)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_connect_socket_execlp_17_bad.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc205)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc206)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc207)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc208)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc11)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc209)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc210)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc211)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc212)
  cir.func private @close(!s32i) -> !s32i loc(#loc213)
  cir.func private @execlp(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc214)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"sh\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc24)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc25)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_execlp_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc216)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc217)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc218)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc219)
    %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc220)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc221)
    %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc222)
    %7 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc205)
    %8 = cir.get_global @__const.CWE78_OS_Command_Injection__char_connect_socket_execlp_17_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc205)
    cir.copy %8 to %7 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc205)
    %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc42)
    cir.store %9, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc223)
    cir.br ^bb1 loc(#loc224)
  ^bb1:  // pred: ^bb0
    %10 = cir.const #cir.int<0> : !s32i loc(#loc46)
    cir.store %10, %5 : !s32i, !cir.ptr<!s32i> loc(#loc225)
    cir.br ^bb2 loc(#loc224)
  ^bb2:  // 2 preds: ^bb1, ^bb45
    %11 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc226)
    cir.brcond %13 ^bb3, ^bb46 loc(#loc50)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc227)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc228)
  ^bb5:  // pred: ^bb4
    %14 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc35)
    cir.store %15, %3 : !s32i, !cir.ptr<!s32i> loc(#loc219)
    %16 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc54)
    %17 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    %18 = cir.call @strlen(%17) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc54)
    cir.store %18, %4 : !u64i, !cir.ptr<!u64i> loc(#loc220)
    cir.br ^bb6 loc(#loc229)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc229)
  ^bb7:  // pred: ^bb36
    %19 = cir.const #cir.int<0> : !s32i loc(#loc58)
    %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc58)
    cir.brcond %20 ^bb8, ^bb37 loc(#loc58)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    %21 = cir.const #cir.int<2> : !s32i loc(#loc59)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc60)
    %23 = cir.const #cir.int<6> : !s32i loc(#loc61)
    %24 = cir.call @socket(%21, %22, %23) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc62)
    cir.store %24, %3 : !s32i, !cir.ptr<!s32i> loc(#loc230)
    cir.br ^bb9 loc(#loc231)
  ^bb9:  // pred: ^bb8
    %25 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc67)
    %26 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %27 = cir.unary(minus, %26) : !s32i, !s32i loc(#loc68)
    %28 = cir.cmp(eq, %25, %27) : !s32i, !cir.bool loc(#loc232)
    cir.brcond %28 ^bb10, ^bb11 loc(#loc233)
  ^bb10:  // pred: ^bb9
    cir.br ^bb37 loc(#loc70)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc66)
  ^bb12:  // pred: ^bb11
    %29 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc234)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc73)
    %31 = cir.const #cir.int<16> : !u64i loc(#loc235)
    cir.libc.memset %31 bytes from %29 set to %30 : !cir.ptr<!void>, !s32i, !u64i loc(#loc236)
    %32 = cir.const #cir.int<2> : !s32i loc(#loc78)
    %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc78)
    %34 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc79)
    cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc237)
    %35 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc11)
    %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc11)
    %37 = cir.call @inet_addr(%36) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc81)
    %38 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc82)
    %39 = cir.get_member %38[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc83)
    cir.store %37, %39 : !u32i, !cir.ptr<!u32i> loc(#loc238)
    %40 = cir.const #cir.int<27015> : !s32i loc(#loc86)
    %41 = cir.cast(integral, %40 : !s32i), !u16i loc(#loc86)
    %42 = cir.call @htons(%41) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc87)
    %43 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc88)
    cir.store %42, %43 : !u16i, !cir.ptr<!u16i> loc(#loc239)
    cir.br ^bb13 loc(#loc240)
  ^bb13:  // pred: ^bb12
    %44 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc93)
    %45 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc241)
    %46 = cir.const #cir.int<16> : !u64i loc(#loc242)
    %47 = cir.cast(integral, %46 : !u64i), !u32i loc(#loc242)
    %48 = cir.call @connect(%44, %45, %47) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc98)
    %49 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %50 = cir.unary(minus, %49) : !s32i, !s32i loc(#loc99)
    %51 = cir.cmp(eq, %48, %50) : !s32i, !cir.bool loc(#loc243)
    cir.brcond %51 ^bb14, ^bb15 loc(#loc244)
  ^bb14:  // pred: ^bb13
    cir.br ^bb37 loc(#loc101)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc92)
  ^bb16:  // pred: ^bb15
    %52 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc102)
    %53 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    %54 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc104)
    %55 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %54 : !u64i), !cir.ptr<!s8i> loc(#loc105)
    %56 = cir.cast(bitcast, %55 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc245)
    %57 = cir.const #cir.int<1> : !u64i loc(#loc246)
    %58 = cir.const #cir.int<100> : !s32i loc(#loc110)
    %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc110)
    %60 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc111)
    %61 = cir.binop(sub, %59, %60) : !u64i loc(#loc247)
    %62 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc112)
    %64 = cir.binop(sub, %61, %63) : !u64i loc(#loc248)
    %65 = cir.binop(mul, %57, %64) : !u64i loc(#loc249)
    %66 = cir.const #cir.int<0> : !s32i loc(#loc114)
    %67 = cir.call @recv(%52, %56, %65, %66) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc115)
    %68 = cir.cast(integral, %67 : !s64i), !s32i loc(#loc115)
    cir.store %68, %0 : !s32i, !cir.ptr<!s32i> loc(#loc250)
    cir.br ^bb17 loc(#loc251)
  ^bb17:  // pred: ^bb16
    %69 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc120)
    %70 = cir.const #cir.int<1> : !s32i loc(#loc121)
    %71 = cir.unary(minus, %70) : !s32i, !s32i loc(#loc121)
    %72 = cir.cmp(eq, %69, %71) : !s32i, !cir.bool loc(#loc252)
    cir.brcond %72 ^bb18, ^bb19 loc(#loc122)
  ^bb18:  // pred: ^bb17
    %73 = cir.const #true loc(#loc122)
    cir.br ^bb24(%73 : !cir.bool) loc(#loc122)
  ^bb19:  // pred: ^bb17
    %74 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    %75 = cir.const #cir.int<0> : !s32i loc(#loc124)
    %76 = cir.cmp(eq, %74, %75) : !s32i, !cir.bool loc(#loc253)
    cir.brcond %76 ^bb20, ^bb21 loc(#loc122)
  ^bb20:  // pred: ^bb19
    %77 = cir.const #true loc(#loc122)
    cir.br ^bb22(%77 : !cir.bool) loc(#loc122)
  ^bb21:  // pred: ^bb19
    %78 = cir.const #false loc(#loc122)
    cir.br ^bb22(%78 : !cir.bool) loc(#loc122)
  ^bb22(%79: !cir.bool loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":110:48)):  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc122)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24(%79 : !cir.bool) loc(#loc122)
  ^bb24(%80: !cir.bool loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":110:48)):  // 2 preds: ^bb18, ^bb23
    cir.br ^bb25 loc(#loc122)
  ^bb25:  // pred: ^bb24
    cir.brcond %80 ^bb26, ^bb27 loc(#loc254)
  ^bb26:  // pred: ^bb25
    cir.br ^bb37 loc(#loc126)
  ^bb27:  // pred: ^bb25
    cir.br ^bb28 loc(#loc119)
  ^bb28:  // pred: ^bb27
    %81 = cir.const #cir.int<0> : !s32i loc(#loc127)
    %82 = cir.cast(integral, %81 : !s32i), !s8i loc(#loc127)
    %83 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
    %84 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc129)
    %85 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    %86 = cir.cast(integral, %85 : !s32i), !u64i loc(#loc130)
    %87 = cir.const #cir.int<1> : !u64i loc(#loc255)
    %88 = cir.binop(div, %86, %87) : !u64i loc(#loc256)
    %89 = cir.binop(add, %84, %88) : !u64i loc(#loc257)
    %90 = cir.ptr_stride(%83 : !cir.ptr<!s8i>, %89 : !u64i), !cir.ptr<!s8i> loc(#loc133)
    cir.store %82, %90 : !s8i, !cir.ptr<!s8i> loc(#loc258)
    %91 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
    %92 = cir.const #cir.int<13> : !s32i loc(#loc135)
    %93 = cir.call @strchr(%91, %92) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc136)
    cir.store %93, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc259)
    cir.br ^bb29 loc(#loc260)
  ^bb29:  // pred: ^bb28
    %94 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc141)
    %95 = cir.cast(ptr_to_bool, %94 : !cir.ptr<!s8i>), !cir.bool loc(#loc141)
    cir.brcond %95 ^bb30, ^bb31 loc(#loc261)
  ^bb30:  // pred: ^bb29
    %96 = cir.const #cir.int<0> : !s32i loc(#loc143)
    %97 = cir.cast(integral, %96 : !s32i), !s8i loc(#loc143)
    %98 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
    cir.store %97, %98 : !s8i, !cir.ptr<!s8i> loc(#loc262)
    cir.br ^bb31 loc(#loc140)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc140)
  ^bb32:  // pred: ^bb31
    %99 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc146)
    %100 = cir.const #cir.int<10> : !s32i loc(#loc147)
    %101 = cir.call @strchr(%99, %100) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc148)
    cir.store %101, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc263)
    cir.br ^bb33 loc(#loc264)
  ^bb33:  // pred: ^bb32
    %102 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
    %103 = cir.cast(ptr_to_bool, %102 : !cir.ptr<!s8i>), !cir.bool loc(#loc153)
    cir.brcond %103 ^bb34, ^bb35 loc(#loc265)
  ^bb34:  // pred: ^bb33
    %104 = cir.const #cir.int<0> : !s32i loc(#loc155)
    %105 = cir.cast(integral, %104 : !s32i), !s8i loc(#loc155)
    %106 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
    cir.store %105, %106 : !s8i, !cir.ptr<!s8i> loc(#loc266)
    cir.br ^bb35 loc(#loc152)
  ^bb35:  // 2 preds: ^bb33, ^bb34
    cir.br ^bb36 loc(#loc152)
  ^bb36:  // pred: ^bb35
    cir.br ^bb7 loc(#loc57)
  ^bb37:  // 4 preds: ^bb7, ^bb10, ^bb14, ^bb26
    cir.br ^bb38 loc(#loc57)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc267)
  ^bb39:  // pred: ^bb38
    %107 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc160)
    %108 = cir.const #cir.int<1> : !s32i loc(#loc161)
    %109 = cir.unary(minus, %108) : !s32i, !s32i loc(#loc161)
    %110 = cir.cmp(ne, %107, %109) : !s32i, !cir.bool loc(#loc268)
    cir.brcond %110 ^bb40, ^bb41 loc(#loc269)
  ^bb40:  // pred: ^bb39
    %111 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc163)
    %112 = cir.call @close(%111) : (!s32i) -> !s32i loc(#loc164)
    cir.br ^bb41 loc(#loc159)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc159)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc53)
  ^bb43:  // pred: ^bb42
    cir.br ^bb44 loc(#loc45)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc45)
  ^bb45:  // pred: ^bb44
    %113 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc165)
    %114 = cir.unary(inc, %113) : !s32i, !s32i loc(#loc166)
    cir.store %114, %5 : !s32i, !cir.ptr<!s32i> loc(#loc270)
    cir.br ^bb2 loc(#loc224)
  ^bb46:  // pred: ^bb2
    cir.br ^bb47 loc(#loc45)
  ^bb47:  // pred: ^bb46
    %115 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc24)
    %116 = cir.cast(array_to_ptrdecay, %115 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc24)
    %117 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc167)
    %118 = cir.cast(array_to_ptrdecay, %117 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc167)
    %119 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc25)
    %120 = cir.cast(array_to_ptrdecay, %119 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc25)
    %121 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc168)
    %122 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc169)
    %123 = cir.call @execlp(%116, %118, %120, %121, %122) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc170)
    cir.return loc(#loc27)
  } loc(#loc215)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_execlp_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc272)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc173)
    cir.return loc(#loc172)
  } loc(#loc271)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc273)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc177)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc275)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc276)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc204)
    %3 = cir.get_global @__const.goodG2B.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc204)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc204)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc184)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc277)
    cir.br ^bb1 loc(#loc278)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<0> : !s32i loc(#loc188)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc279)
    cir.br ^bb2 loc(#loc278)
  ^bb2:  // 2 preds: ^bb1, ^bb6
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc190)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc191)
    %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc280)
    cir.brcond %8 ^bb3, ^bb7 loc(#loc192)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc281)
  ^bb4:  // pred: ^bb3
    %9 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc194)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc195)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc177)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc177)
    %13 = cir.call @strcat(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc194)
    cir.br ^bb5 loc(#loc187)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc187)
  ^bb6:  // pred: ^bb5
    %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc196)
    %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc197)
    cir.store %15, %0 : !s32i, !cir.ptr<!s32i> loc(#loc282)
    cir.br ^bb2 loc(#loc278)
  ^bb7:  // pred: ^bb2
    cir.br ^bb8 loc(#loc187)
  ^bb8:  // pred: ^bb7
    %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc198)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc198)
    %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc199)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc199)
    %20 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc200)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc200)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc201)
    %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc202)
    %24 = cir.call @execlp(%17, %19, %21, %22, %23) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc203)
    cir.return loc(#loc179)
  } loc(#loc274)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":156:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":156:28)
#loc3 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":69:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":69:28)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/sys/socket.h":102:1)
#loc8 = loc("/usr/include/sys/socket.h":102:62)
#loc9 = loc("/usr/include/arpa/inet.h":34:1)
#loc10 = loc("/usr/include/arpa/inet.h":34:47)
#loc11 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":100:53)
#loc12 = loc("/usr/include/netinet/in.h":404:1)
#loc13 = loc("/usr/include/netinet/in.h":405:40)
#loc14 = loc("/usr/include/sys/socket.h":126:1)
#loc15 = loc("/usr/include/sys/socket.h":126:75)
#loc16 = loc("/usr/include/sys/socket.h":145:1)
#loc17 = loc("/usr/include/sys/socket.h":145:68)
#loc18 = loc("/usr/include/string.h":246:1)
#loc19 = loc("/usr/include/string.h":247:33)
#loc20 = loc("/usr/include/unistd.h":358:1)
#loc21 = loc("/usr/include/unistd.h":358:27)
#loc22 = loc("/usr/include/unistd.h":605:1)
#loc23 = loc("/usr/include/unistd.h":606:14)
#loc24 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":144:12)
#loc25 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":144:38)
#loc26 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":65:1)
#loc27 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":145:1)
#loc28 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":78:13)
#loc29 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":78:17)
#loc30 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":79:13)
#loc31 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":79:32)
#loc32 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":80:13)
#loc33 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":80:19)
#loc34 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":81:13)
#loc35 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":81:36)
#loc36 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":82:13)
#loc37 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":82:41)
#loc38 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":67:5)
#loc39 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":67:9)
#loc40 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":68:5)
#loc41 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":68:12)
#loc42 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":70:12)
#loc43 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":70:5)
#loc44 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":71:5)
#loc45 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":140:5)
#loc46 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":71:13)
#loc47 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":71:9)
#loc48 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":71:16)
#loc49 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":71:20)
#loc50 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":71:18)
#loc51 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":72:5)
#loc52 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":73:9)
#loc53 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":139:9)
#loc54 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":82:30)
#loc55 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":82:37)
#loc56 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":83:13)
#loc57 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":128:21)
#loc58 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":128:20)
#loc59 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":93:40)
#loc60 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":93:49)
#loc61 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":93:62)
#loc62 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":93:33)
#loc63 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":93:17)
#loc64 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":93:73)
#loc65 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":94:17)
#loc66 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":97:17)
#loc67 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":94:21)
#loc68 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":94:38)
#loc69 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":95:17)
#loc70 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":96:21)
#loc71 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":98:24)
#loc72 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":98:25)
#loc73 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":98:34)
#loc74 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":98:37)
#loc75 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":98:51)
#loc76 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":98:17)
#loc77 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":98:52)
#loc78 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":99:38)
#loc79 = loc("/usr/include/netinet/in.h":249:5)
#loc80 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":99:17)
#loc81 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":100:43)
#loc82 = loc("/usr/include/netinet/in.h":251:20)
#loc83 = loc("/usr/include/netinet/in.h":33:15)
#loc84 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":100:17)
#loc85 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":100:63)
#loc86 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":101:42)
#loc87 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":101:36)
#loc88 = loc("/usr/include/netinet/in.h":250:15)
#loc89 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":101:17)
#loc90 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":101:50)
#loc91 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":102:17)
#loc92 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":105:17)
#loc93 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":102:29)
#loc94 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":102:62)
#loc95 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":102:63)
#loc96 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":102:72)
#loc97 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":102:86)
#loc98 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":102:21)
#loc99 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":102:92)
#loc100 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":103:17)
#loc101 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":104:21)
#loc102 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":109:35)
#loc103 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":109:59)
#loc104 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":109:66)
#loc105 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":109:64)
#loc106 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":109:50)
#loc107 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":109:73)
#loc108 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":109:76)
#loc109 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":109:87)
#loc110 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":109:92)
#loc111 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":109:98)
#loc112 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":109:108)
#loc113 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":109:109)
#loc114 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":109:112)
#loc115 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":109:30)
#loc116 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":109:17)
#loc117 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":109:113)
#loc118 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":110:17)
#loc119 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":113:17)
#loc120 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":110:21)
#loc121 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":110:35)
#loc123 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":110:51)
#loc124 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":110:65)
#loc125 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":111:17)
#loc126 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":112:21)
#loc127 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":115:61)
#loc128 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":115:17)
#loc129 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":115:22)
#loc130 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":115:32)
#loc131 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":115:45)
#loc132 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":115:56)
#loc133 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":115:57)
#loc134 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":117:34)
#loc135 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":117:40)
#loc136 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":117:27)
#loc137 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":117:17)
#loc138 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":117:44)
#loc139 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":118:17)
#loc140 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":121:17)
#loc141 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":118:21)
#loc142 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":119:17)
#loc143 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":120:32)
#loc144 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":120:22)
#loc145 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":120:21)
#loc146 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":122:34)
#loc147 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":122:40)
#loc148 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":122:27)
#loc149 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":122:17)
#loc150 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":122:44)
#loc151 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":123:17)
#loc152 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":126:17)
#loc153 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":123:21)
#loc154 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":124:17)
#loc155 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":125:32)
#loc156 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":125:22)
#loc157 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":125:21)
#loc158 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":129:13)
#loc159 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":132:13)
#loc160 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":129:17)
#loc161 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":129:34)
#loc162 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":130:13)
#loc163 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":131:30)
#loc164 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":131:17)
#loc165 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":71:24)
#loc166 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":71:23)
#loc167 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":144:25)
#loc168 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":144:52)
#loc169 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":144:66)
#loc170 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":144:5)
#loc171 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":169:1)
#loc172 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":172:1)
#loc173 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":171:5)
#loc174 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":171:13)
#loc175 = loc("/usr/include/string.h":149:1)
#loc176 = loc("/usr/include/string.h":150:14)
#loc177 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":161:22)
#loc178 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":152:1)
#loc179 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":167:1)
#loc180 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":154:5)
#loc181 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":154:9)
#loc182 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":155:5)
#loc183 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":155:12)
#loc184 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":157:12)
#loc185 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":157:5)
#loc186 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":158:5)
#loc187 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":162:5)
#loc188 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":158:13)
#loc189 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":158:9)
#loc190 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":158:16)
#loc191 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":158:20)
#loc192 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":158:18)
#loc193 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":159:5)
#loc194 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":161:9)
#loc195 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":161:16)
#loc196 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":158:24)
#loc197 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":158:23)
#loc198 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":166:12)
#loc199 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":166:25)
#loc200 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":166:38)
#loc201 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":166:52)
#loc202 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":166:66)
#loc203 = loc("CWE78_OS_Command_Injection__char_connect_socket_execlp_17.c":166:5)
#loc204 = loc(fused[#loc1, #loc2])
#loc205 = loc(fused[#loc3, #loc4])
#loc206 = loc(fused[#loc5, #loc6])
#loc207 = loc(fused[#loc7, #loc8])
#loc208 = loc(fused[#loc9, #loc10])
#loc209 = loc(fused[#loc12, #loc13])
#loc210 = loc(fused[#loc14, #loc15])
#loc211 = loc(fused[#loc16, #loc17])
#loc212 = loc(fused[#loc18, #loc19])
#loc213 = loc(fused[#loc20, #loc21])
#loc214 = loc(fused[#loc22, #loc23])
#loc215 = loc(fused[#loc26, #loc27])
#loc216 = loc(fused[#loc28, #loc29])
#loc217 = loc(fused[#loc30, #loc31])
#loc218 = loc(fused[#loc32, #loc33])
#loc219 = loc(fused[#loc34, #loc35])
#loc220 = loc(fused[#loc36, #loc37])
#loc221 = loc(fused[#loc38, #loc39])
#loc222 = loc(fused[#loc40, #loc41])
#loc223 = loc(fused[#loc43, #loc42])
#loc224 = loc(fused[#loc44, #loc45])
#loc225 = loc(fused[#loc47, #loc46])
#loc226 = loc(fused[#loc48, #loc49])
#loc227 = loc(fused[#loc51, #loc45])
#loc228 = loc(fused[#loc52, #loc53])
#loc229 = loc(fused[#loc56, #loc57])
#loc230 = loc(fused[#loc63, #loc64])
#loc231 = loc(fused[#loc65, #loc66])
#loc232 = loc(fused[#loc67, #loc68])
#loc233 = loc(fused[#loc69, #loc66])
#loc234 = loc(fused[#loc71, #loc72])
#loc235 = loc(fused[#loc74, #loc75])
#loc236 = loc(fused[#loc76, #loc77])
#loc237 = loc(fused[#loc80, #loc78])
#loc238 = loc(fused[#loc84, #loc85])
#loc239 = loc(fused[#loc89, #loc90])
#loc240 = loc(fused[#loc91, #loc92])
#loc241 = loc(fused[#loc94, #loc95])
#loc242 = loc(fused[#loc96, #loc97])
#loc243 = loc(fused[#loc98, #loc99])
#loc244 = loc(fused[#loc100, #loc92])
#loc245 = loc(fused[#loc106, #loc107])
#loc246 = loc(fused[#loc108, #loc109])
#loc247 = loc(fused[#loc110, #loc111])
#loc248 = loc(fused[#loc110, #loc112])
#loc249 = loc(fused[#loc108, #loc113])
#loc250 = loc(fused[#loc116, #loc117])
#loc251 = loc(fused[#loc118, #loc119])
#loc252 = loc(fused[#loc120, #loc121])
#loc253 = loc(fused[#loc123, #loc124])
#loc254 = loc(fused[#loc125, #loc119])
#loc255 = loc(fused[#loc131, #loc132])
#loc256 = loc(fused[#loc130, #loc132])
#loc257 = loc(fused[#loc129, #loc132])
#loc258 = loc(fused[#loc128, #loc127])
#loc259 = loc(fused[#loc137, #loc138])
#loc260 = loc(fused[#loc139, #loc140])
#loc261 = loc(fused[#loc142, #loc140])
#loc262 = loc(fused[#loc145, #loc143])
#loc263 = loc(fused[#loc149, #loc150])
#loc264 = loc(fused[#loc151, #loc152])
#loc265 = loc(fused[#loc154, #loc152])
#loc266 = loc(fused[#loc157, #loc155])
#loc267 = loc(fused[#loc158, #loc159])
#loc268 = loc(fused[#loc160, #loc161])
#loc269 = loc(fused[#loc162, #loc159])
#loc270 = loc(fused[#loc166, #loc165])
#loc271 = loc(fused[#loc171, #loc172])
#loc272 = loc(fused[#loc173, #loc174])
#loc273 = loc(fused[#loc175, #loc176])
#loc274 = loc(fused[#loc178, #loc179])
#loc275 = loc(fused[#loc180, #loc181])
#loc276 = loc(fused[#loc182, #loc183])
#loc277 = loc(fused[#loc185, #loc184])
#loc278 = loc(fused[#loc186, #loc187])
#loc279 = loc(fused[#loc189, #loc188])
#loc280 = loc(fused[#loc190, #loc191])
#loc281 = loc(fused[#loc193, #loc187])
#loc282 = loc(fused[#loc197, #loc196])
