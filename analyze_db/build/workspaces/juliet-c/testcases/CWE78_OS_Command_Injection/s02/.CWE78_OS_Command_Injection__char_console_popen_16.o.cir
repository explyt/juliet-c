!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc131)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_console_popen_16_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc132)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc133)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc134)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc135)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc136)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc13)
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc137)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc16)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc138)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_popen_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc140)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc132)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_console_popen_16_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc132)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc132)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc141)
    cir.scope {
      cir.while {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc27)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc27)
        cir.condition(%5) loc(#loc27)
      } do {
        cir.scope {
          cir.scope {
            %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc145)
            %5 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc33)
            %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
            %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc33)
            cir.store %7, %4 : !u64i, !cir.ptr<!u64i> loc(#loc145)
            cir.scope {
              %8 = cir.const #cir.int<100> : !s32i loc(#loc37)
              %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc37)
              %10 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc38)
              %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc147)
              %12 = cir.const #cir.int<1> : !s32i loc(#loc39)
              %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc39)
              %14 = cir.cmp(gt, %11, %13) : !u64i, !cir.bool loc(#loc148)
              cir.if %14 {
                cir.scope {
                  %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
                  %16 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc44)
                  %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc45)
                  %18 = cir.const #cir.int<100> : !s32i loc(#loc46)
                  %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc46)
                  %20 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc47)
                  %21 = cir.binop(sub, %19, %20) : !u64i loc(#loc151)
                  %22 = cir.cast(integral, %21 : !u64i), !s32i loc(#loc151)
                  %23 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc135)
                  %24 = cir.load %23 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc48)
                  %25 = cir.call @fgets(%17, %22, %24) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc49)
                  %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc50)
                  %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc50)
                  %28 = cir.cmp(ne, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc152)
                  cir.if %28 {
                    %29 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc54)
                    %30 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
                    %31 = cir.call @strlen(%30) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc54)
                    cir.store %31, %4 : !u64i, !cir.ptr<!u64i> loc(#loc154)
                    cir.scope {
                      %32 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc60)
                      %33 = cir.const #cir.int<0> : !s32i loc(#loc61)
                      %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc61)
                      %35 = cir.cmp(gt, %32, %34) : !u64i, !cir.bool loc(#loc156)
                      %36 = cir.ternary(%35, true {
                        %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
                        %38 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc64)
                        %39 = cir.const #cir.int<1> : !s32i loc(#loc65)
                        %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc65)
                        %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc157)
                        %42 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc66)
                        %43 = cir.load %42 : !cir.ptr<!s8i>, !s8i loc(#loc63)
                        %44 = cir.cast(integral, %43 : !s8i), !s32i loc(#loc63)
                        %45 = cir.const #cir.int<10> : !s32i loc(#loc67)
                        %46 = cir.cmp(eq, %44, %45) : !s32i, !cir.bool loc(#loc158)
                        %47 = cir.ternary(%46, true {
                          %48 = cir.const #true loc(#loc62)
                          cir.yield %48 : !cir.bool loc(#loc62)
                        }, false {
                          %48 = cir.const #false loc(#loc62)
                          cir.yield %48 : !cir.bool loc(#loc62)
                        }) : (!cir.bool) -> !cir.bool loc(#loc62)
                        cir.yield %47 : !cir.bool loc(#loc62)
                      }, false {
                        %37 = cir.const #false loc(#loc62)
                        cir.yield %37 : !cir.bool loc(#loc62)
                      }) : (!cir.bool) -> !cir.bool loc(#loc62)
                      cir.if %36 {
                        %37 = cir.const #cir.int<0> : !s32i loc(#loc69)
                        %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc69)
                        %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
                        %40 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc71)
                        %41 = cir.const #cir.int<1> : !s32i loc(#loc72)
                        %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc72)
                        %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc160)
                        %44 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %43 : !u64i), !cir.ptr<!s8i> loc(#loc73)
                        cir.store %38, %44 : !s8i, !cir.ptr<!s8i> loc(#loc161)
                      } loc(#loc159)
                    } loc(#loc155)
                  } else {
                    %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc13)
                    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc13)
                    cir.call @printLine(%30) : (!cir.ptr<!s8i>) -> () loc(#loc74)
                    %31 = cir.const #cir.int<0> : !s32i loc(#loc75)
                    %32 = cir.cast(integral, %31 : !s32i), !s8i loc(#loc75)
                    %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
                    %34 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc77)
                    %35 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %34 : !u64i), !cir.ptr<!s8i> loc(#loc78)
                    cir.store %32, %35 : !s8i, !cir.ptr<!s8i> loc(#loc162)
                  } loc(#loc153)
                } loc(#loc150)
              } loc(#loc149)
            } loc(#loc146)
          } loc(#loc144)
          cir.break loc(#loc79)
        } loc(#loc143)
        cir.yield loc(#loc26)
      } loc(#loc142)
    } loc(#loc142)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc164)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
      %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc16)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc16)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc85)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc165)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc90)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc91)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc91)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc167)
        cir.if %12 {
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc93)
          %14 = cir.call @pclose(%13) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc94)
        } loc(#loc168)
      } loc(#loc166)
    } loc(#loc163)
    cir.return loc(#loc20)
  } loc(#loc139)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_popen_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc170)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc97)
    cir.return loc(#loc96)
  } loc(#loc169)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc171)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc101)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc173)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc131)
    %2 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc131)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc131)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc106)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc174)
    cir.scope {
      cir.while {
        %4 = cir.const #cir.int<1> : !s32i loc(#loc110)
        %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc110)
        cir.condition(%5) loc(#loc110)
      } do {
        cir.scope {
          %4 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc112)
          %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
          %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc101)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc101)
          %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc112)
          cir.break loc(#loc114)
        } loc(#loc176)
        cir.yield loc(#loc109)
      } loc(#loc175)
    } loc(#loc175)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc178)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
      %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc120)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc120)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc121)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc179)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc126)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc127)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc127)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc181)
        cir.if %12 {
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc129)
          %14 = cir.call @pclose(%13) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc130)
        } loc(#loc182)
      } loc(#loc180)
    } loc(#loc177)
    cir.return loc(#loc103)
  } loc(#loc172)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_16.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":92:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":92:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":42:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":42:26)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("/usr/include/stdio.h":149:1)
#loc10 = loc("/usr/include/stdio.h":149:14)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":65:31)
#loc14 = loc("/usr/include/stdio.h":903:1)
#loc15 = loc("/usr/include/stdio.h":904:3)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":76:28)
#loc17 = loc("/usr/include/stdio.h":897:1)
#loc18 = loc("/usr/include/stdio.h":897:36)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":39:1)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":82:1)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":41:5)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":41:12)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":43:12)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":43:5)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":44:5)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":72:5)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":44:11)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":45:5)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":46:9)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":70:9)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":48:13)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":48:41)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":48:30)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":48:37)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":50:13)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":69:13)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":50:17)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":50:21)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":50:31)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":51:13)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":53:17)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":68:17)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":53:27)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":53:32)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":53:31)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":53:47)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":53:51)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":53:61)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":53:21)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":53:71)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":54:17)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":62:17)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":64:17)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":57:31)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":57:38)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":57:21)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":57:42)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":58:21)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":61:21)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":58:25)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":58:35)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":58:37)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":58:40)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":58:45)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":58:53)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":58:54)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":58:59)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":59:21)
#loc69 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":60:43)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":60:25)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":60:30)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":60:38)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":60:39)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":65:21)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":67:37)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":67:21)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":67:26)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":67:33)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":71:9)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":73:5)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":81:5)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":74:9)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":74:15)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":76:22)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":76:16)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":76:9)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":76:31)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":77:9)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":80:9)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":77:13)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":77:21)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":78:9)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":79:20)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":79:13)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":111:1)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":114:1)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":113:5)
#loc98 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":113:13)
#loc99 = loc("/usr/include/string.h":149:1)
#loc100 = loc("/usr/include/string.h":150:14)
#loc101 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":97:22)
#loc102 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":89:1)
#loc103 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":109:1)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":91:5)
#loc105 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":91:12)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":93:12)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":93:5)
#loc108 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":94:5)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":99:5)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":94:11)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":95:5)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":97:9)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":97:16)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":98:9)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":100:5)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":108:5)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":101:9)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":101:15)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":103:22)
#loc120 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":103:28)
#loc121 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":103:16)
#loc122 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":103:9)
#loc123 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":103:31)
#loc124 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":104:9)
#loc125 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":107:9)
#loc126 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":104:13)
#loc127 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":104:21)
#loc128 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":105:9)
#loc129 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":106:20)
#loc130 = loc("CWE78_OS_Command_Injection__char_console_popen_16.c":106:13)
#loc131 = loc(fused[#loc1, #loc2])
#loc132 = loc(fused[#loc3, #loc4])
#loc133 = loc(fused[#loc5, #loc6])
#loc134 = loc(fused[#loc7, #loc8])
#loc135 = loc(fused[#loc9, #loc10])
#loc136 = loc(fused[#loc11, #loc12])
#loc137 = loc(fused[#loc14, #loc15])
#loc138 = loc(fused[#loc17, #loc18])
#loc139 = loc(fused[#loc19, #loc20])
#loc140 = loc(fused[#loc21, #loc22])
#loc141 = loc(fused[#loc24, #loc23])
#loc142 = loc(fused[#loc25, #loc26])
#loc143 = loc(fused[#loc28, #loc26])
#loc144 = loc(fused[#loc29, #loc30])
#loc145 = loc(fused[#loc31, #loc32])
#loc146 = loc(fused[#loc35, #loc36])
#loc147 = loc(fused[#loc37, #loc38])
#loc148 = loc(fused[#loc37, #loc39])
#loc149 = loc(fused[#loc40, #loc36])
#loc150 = loc(fused[#loc41, #loc42])
#loc151 = loc(fused[#loc46, #loc47])
#loc152 = loc(fused[#loc49, #loc50])
#loc153 = loc(fused[#loc51, #loc52, #loc53, #loc42])
#loc154 = loc(fused[#loc56, #loc57])
#loc155 = loc(fused[#loc58, #loc59])
#loc156 = loc(fused[#loc60, #loc61])
#loc157 = loc(fused[#loc64, #loc65])
#loc158 = loc(fused[#loc63, #loc67])
#loc159 = loc(fused[#loc68, #loc59])
#loc160 = loc(fused[#loc71, #loc72])
#loc161 = loc(fused[#loc70, #loc69])
#loc162 = loc(fused[#loc76, #loc75])
#loc163 = loc(fused[#loc80, #loc81])
#loc164 = loc(fused[#loc82, #loc83])
#loc165 = loc(fused[#loc86, #loc87])
#loc166 = loc(fused[#loc88, #loc89])
#loc167 = loc(fused[#loc90, #loc91])
#loc168 = loc(fused[#loc92, #loc89])
#loc169 = loc(fused[#loc95, #loc96])
#loc170 = loc(fused[#loc97, #loc98])
#loc171 = loc(fused[#loc99, #loc100])
#loc172 = loc(fused[#loc102, #loc103])
#loc173 = loc(fused[#loc104, #loc105])
#loc174 = loc(fused[#loc107, #loc106])
#loc175 = loc(fused[#loc108, #loc109])
#loc176 = loc(fused[#loc111, #loc109])
#loc177 = loc(fused[#loc115, #loc116])
#loc178 = loc(fused[#loc117, #loc118])
#loc179 = loc(fused[#loc122, #loc123])
#loc180 = loc(fused[#loc124, #loc125])
#loc181 = loc(fused[#loc126, #loc127])
#loc182 = loc(fused[#loc128, #loc125])
