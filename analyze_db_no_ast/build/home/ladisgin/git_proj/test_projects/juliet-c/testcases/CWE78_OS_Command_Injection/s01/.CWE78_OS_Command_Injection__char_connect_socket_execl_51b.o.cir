!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc7 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_51b.c":67:72)
#loc8 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_51b.c":67:79)
#loc16 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_51b.c":79:76)
#loc17 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_51b.c":79:83)
#loc27 = loc(fused[#loc7, #loc8])
#loc29 = loc(fused[#loc16, #loc17])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_execl_51b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @execl(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc25)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"/bin/sh\00" : !cir.array<!s8i x 8>> : !cir.array<!s8i x 8> {alignment = 1 : i64} loc(#loc3)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc4)
  cir.func  @CWE78_OS_Command_Injection__char_connect_socket_execl_51b_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc27)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc9)
    %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc3)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc3)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc10)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc10)
    %5 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc4)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc4)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc11)
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc12)
    %9 = cir.call @execl(%2, %4, %6, %7, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc13)
    cir.return loc(#loc6)
  } loc(#loc26)
  cir.func  @CWE78_OS_Command_Injection__char_connect_socket_execl_51b_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc16, #loc17])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc29)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc18)
    %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc19)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc19)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc20)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc20)
    %5 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc21)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc21)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc23)
    %9 = cir.call @execl(%2, %4, %6, %7, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc24)
    cir.return loc(#loc15)
  } loc(#loc28)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_execl_51b.c":0:0)
#loc1 = loc("/usr/include/unistd.h":594:1)
#loc2 = loc("/usr/include/unistd.h":595:14)
#loc3 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_51b.c":71:11)
#loc4 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_51b.c":71:47)
#loc5 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_51b.c":67:1)
#loc6 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_51b.c":72:1)
#loc9 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_51b.c":68:1)
#loc10 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_51b.c":71:29)
#loc11 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_51b.c":71:61)
#loc12 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_51b.c":71:75)
#loc13 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_51b.c":71:5)
#loc14 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_51b.c":79:1)
#loc15 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_51b.c":84:1)
#loc18 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_51b.c":80:1)
#loc19 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_51b.c":83:11)
#loc20 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_51b.c":83:29)
#loc21 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_51b.c":83:47)
#loc22 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_51b.c":83:61)
#loc23 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_51b.c":83:75)
#loc24 = loc("CWE78_OS_Command_Injection__char_connect_socket_execl_51b.c":83:5)
#loc25 = loc(fused[#loc1, #loc2])
#loc26 = loc(fused[#loc5, #loc6])
#loc28 = loc(fused[#loc14, #loc15])
