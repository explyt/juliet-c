!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc225 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":240:10)
#loc226 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":240:14)
#loc227 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":240:20)
#loc228 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":240:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc408 = loc(fused[#loc225, #loc226])
#loc409 = loc(fused[#loc227, #loc228])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_popen_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B2.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc317)
  cir.global "private" constant cir_private @__const.goodG2B1.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc318)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_listen_socket_popen_08_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc319)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc320)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc321)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc322)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc323)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc324)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc325)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc326)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc327)
  cir.func private @close(!s32i) -> !s32i loc(#loc328)
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc329)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc27)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc330)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_popen_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc332)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc319)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_listen_socket_popen_08_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc319)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc319)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc34)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc333)
    cir.scope {
      %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc335)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc38)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc38)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc338)
          %8 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc339)
          %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc340)
          %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc341)
          %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc342)
          %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc343)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc50)
          %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc50)
          cir.store %14, %10 : !s32i, !cir.ptr<!s32i> loc(#loc341)
          %15 = cir.const #cir.int<1> : !s32i loc(#loc52)
          %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc52)
          cir.store %16, %11 : !s32i, !cir.ptr<!s32i> loc(#loc342)
          %17 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc55)
          %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
          %19 = cir.call @strlen(%18) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc55)
          cir.store %19, %12 : !u64i, !cir.ptr<!u64i> loc(#loc343)
          cir.scope {
            cir.do {
              %20 = cir.const #cir.int<2> : !s32i loc(#loc59)
              %21 = cir.const #cir.int<1> : !s32i loc(#loc60)
              %22 = cir.const #cir.int<6> : !s32i loc(#loc61)
              %23 = cir.call @socket(%20, %21, %22) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc62)
              cir.store %23, %10 : !s32i, !cir.ptr<!s32i> loc(#loc345)
              cir.scope {
                %77 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc67)
                %78 = cir.const #cir.int<1> : !s32i loc(#loc68)
                %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc68)
                %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc347)
                cir.if %80 {
                  cir.break loc(#loc70)
                } loc(#loc348)
              } loc(#loc346)
              %24 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc349)
              %25 = cir.const #cir.int<0> : !s32i loc(#loc73)
              %26 = cir.const #cir.int<16> : !u64i loc(#loc350)
              cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc351)
              %27 = cir.const #cir.int<2> : !s32i loc(#loc78)
              %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc78)
              %29 = cir.get_member %8[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc79)
              cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc352)
              %30 = cir.const #cir.int<0> : !s32i loc(#loc81)
              %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc81)
              %32 = cir.get_member %8[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc82)
              %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc83)
              cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc353)
              %34 = cir.const #cir.int<27015> : !s32i loc(#loc85)
              %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc85)
              %36 = cir.call @htons(%35) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc86)
              %37 = cir.get_member %8[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc87)
              cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc354)
              cir.scope {
                %77 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc92)
                %78 = cir.cast(bitcast, %8 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc356)
                %79 = cir.const #cir.int<16> : !u64i loc(#loc357)
                %80 = cir.cast(integral, %79 : !u64i), !u32i loc(#loc357)
                %81 = cir.call @bind(%77, %78, %80) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc97)
                %82 = cir.const #cir.int<1> : !s32i loc(#loc98)
                %83 = cir.unary(minus, %82) : !s32i, !s32i loc(#loc98)
                %84 = cir.cmp(eq, %81, %83) : !s32i, !cir.bool loc(#loc358)
                cir.if %84 {
                  cir.break loc(#loc100)
                } loc(#loc359)
              } loc(#loc355)
              cir.scope {
                %77 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc103)
                %78 = cir.const #cir.int<5> : !s32i loc(#loc104)
                %79 = cir.call @listen(%77, %78) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc105)
                %80 = cir.const #cir.int<1> : !s32i loc(#loc106)
                %81 = cir.unary(minus, %80) : !s32i, !s32i loc(#loc106)
                %82 = cir.cmp(eq, %79, %81) : !s32i, !cir.bool loc(#loc361)
                cir.if %82 {
                  cir.break loc(#loc108)
                } loc(#loc362)
              } loc(#loc360)
              %38 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc109)
              %39 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc110)
              %40 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc111)
              %41 = cir.call @accept(%38, %39, %40) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc112)
              cir.store %41, %11 : !s32i, !cir.ptr<!s32i> loc(#loc363)
              cir.scope {
                %77 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc117)
                %78 = cir.const #cir.int<1> : !s32i loc(#loc118)
                %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc118)
                %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc365)
                cir.if %80 {
                  cir.break loc(#loc120)
                } loc(#loc366)
              } loc(#loc364)
              %42 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc121)
              %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
              %44 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc123)
              %45 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc124)
              %46 = cir.cast(bitcast, %45 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc367)
              %47 = cir.const #cir.int<1> : !u64i loc(#loc368)
              %48 = cir.const #cir.int<100> : !s32i loc(#loc129)
              %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc129)
              %50 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc130)
              %51 = cir.binop(sub, %49, %50) : !u64i loc(#loc369)
              %52 = cir.const #cir.int<1> : !s32i loc(#loc131)
              %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc131)
              %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc370)
              %55 = cir.binop(mul, %47, %54) : !u64i loc(#loc371)
              %56 = cir.const #cir.int<0> : !s32i loc(#loc133)
              %57 = cir.call @recv(%42, %46, %55, %56) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc134)
              %58 = cir.cast(integral, %57 : !s64i), !s32i loc(#loc134)
              cir.store %58, %7 : !s32i, !cir.ptr<!s32i> loc(#loc372)
              cir.scope {
                %77 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc139)
                %78 = cir.const #cir.int<1> : !s32i loc(#loc140)
                %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc140)
                %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc374)
                %81 = cir.ternary(%80, true {
                  %82 = cir.const #true loc(#loc141)
                  cir.yield %82 : !cir.bool loc(#loc141)
                }, false {
                  %82 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc142)
                  %83 = cir.const #cir.int<0> : !s32i loc(#loc143)
                  %84 = cir.cmp(eq, %82, %83) : !s32i, !cir.bool loc(#loc375)
                  %85 = cir.ternary(%84, true {
                    %86 = cir.const #true loc(#loc141)
                    cir.yield %86 : !cir.bool loc(#loc141)
                  }, false {
                    %86 = cir.const #false loc(#loc141)
                    cir.yield %86 : !cir.bool loc(#loc141)
                  }) : (!cir.bool) -> !cir.bool loc(#loc141)
                  cir.yield %85 : !cir.bool loc(#loc141)
                }) : (!cir.bool) -> !cir.bool loc(#loc141)
                cir.if %81 {
                  cir.break loc(#loc145)
                } loc(#loc376)
              } loc(#loc373)
              %59 = cir.const #cir.int<0> : !s32i loc(#loc146)
              %60 = cir.cast(integral, %59 : !s32i), !s8i loc(#loc146)
              %61 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
              %62 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc148)
              %63 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc149)
              %64 = cir.cast(integral, %63 : !s32i), !u64i loc(#loc149)
              %65 = cir.const #cir.int<1> : !u64i loc(#loc377)
              %66 = cir.binop(div, %64, %65) : !u64i loc(#loc378)
              %67 = cir.binop(add, %62, %66) : !u64i loc(#loc379)
              %68 = cir.ptr_stride(%61 : !cir.ptr<!s8i>, %67 : !u64i), !cir.ptr<!s8i> loc(#loc152)
              cir.store %60, %68 : !s8i, !cir.ptr<!s8i> loc(#loc380)
              %69 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc153)
              %70 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
              %71 = cir.const #cir.int<13> : !s32i loc(#loc155)
              %72 = cir.call @strchr(%70, %71) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc153)
              cir.store %72, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc381)
              cir.scope {
                %77 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
                %78 = cir.cast(ptr_to_bool, %77 : !cir.ptr<!s8i>), !cir.bool loc(#loc160)
                cir.if %78 {
                  %79 = cir.const #cir.int<0> : !s32i loc(#loc162)
                  %80 = cir.cast(integral, %79 : !s32i), !s8i loc(#loc162)
                  %81 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
                  cir.store %80, %81 : !s8i, !cir.ptr<!s8i> loc(#loc384)
                } loc(#loc383)
              } loc(#loc382)
              %73 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc165)
              %74 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
              %75 = cir.const #cir.int<10> : !s32i loc(#loc167)
              %76 = cir.call @strchr(%74, %75) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc165)
              cir.store %76, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc385)
              cir.scope {
                %77 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
                %78 = cir.cast(ptr_to_bool, %77 : !cir.ptr<!s8i>), !cir.bool loc(#loc172)
                cir.if %78 {
                  %79 = cir.const #cir.int<0> : !s32i loc(#loc174)
                  %80 = cir.cast(integral, %79 : !s32i), !s8i loc(#loc174)
                  %81 = cir.load deref %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc175)
                  cir.store %80, %81 : !s8i, !cir.ptr<!s8i> loc(#loc388)
                } loc(#loc387)
              } loc(#loc386)
              cir.yield loc(#loc58)
            } while {
              %20 = cir.const #cir.int<0> : !s32i loc(#loc177)
              %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc177)
              cir.condition(%21) loc(#loc177)
            } loc(#loc344)
          } loc(#loc344)
          cir.scope {
            %20 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc180)
            %21 = cir.const #cir.int<1> : !s32i loc(#loc181)
            %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc181)
            %23 = cir.cmp(ne, %20, %22) : !s32i, !cir.bool loc(#loc390)
            cir.if %23 {
              %24 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc183)
              %25 = cir.call @close(%24) : (!s32i) -> !s32i loc(#loc184)
            } loc(#loc391)
          } loc(#loc389)
          cir.scope {
            %20 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc187)
            %21 = cir.const #cir.int<1> : !s32i loc(#loc188)
            %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc188)
            %23 = cir.cmp(ne, %20, %22) : !s32i, !cir.bool loc(#loc393)
            cir.if %23 {
              %24 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc190)
              %25 = cir.call @close(%24) : (!s32i) -> !s32i loc(#loc191)
            } loc(#loc394)
          } loc(#loc392)
        } loc(#loc337)
      } loc(#loc336)
    } loc(#loc334)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc396)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc196)
      %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc27)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc27)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc197)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc397)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc202)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc203)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc203)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc399)
        cir.if %12 {
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc205)
          %14 = cir.call @pclose(%13) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc206)
        } loc(#loc400)
      } loc(#loc398)
    } loc(#loc395)
    cir.return loc(#loc31)
  } loc(#loc331)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_popen_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc402)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc209)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc403)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc211)
    cir.return loc(#loc208)
  } loc(#loc401)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc404)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc405)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc406)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc219)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc220)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc221)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc222)
  cir.func @main(%arg0: !s32i loc(fused[#loc225, #loc226]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc227, #loc228])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc408)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc409)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc224)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc229)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc229)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc230)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc231)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc231)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc232)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc219)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc219)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc233)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_listen_socket_popen_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc410)
    cir.call @CWE78_OS_Command_Injection__char_listen_socket_popen_08_good() : () -> () loc(#loc234)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc220)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc220)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc236)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc221)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc221)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc237)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_listen_socket_popen_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc411)
    cir.call @CWE78_OS_Command_Injection__char_listen_socket_popen_08_bad() : () -> () loc(#loc238)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc222)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc222)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc240)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc241)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc412)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc412)
    cir.return %17 : !s32i loc(#loc412)
  } loc(#loc407)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc244)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc245)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc414)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc414)
    cir.return %2 : !s32i loc(#loc414)
  } loc(#loc413)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc247)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc415)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc250)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc417)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc318)
    %2 = cir.get_global @__const.goodG2B1.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc318)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc318)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc255)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc418)
    cir.scope {
      %4 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc420)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc259)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc259)
      cir.if %6 {
        %7 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc247)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc247)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc264)
      } else {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc265)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc266)
        %9 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc250)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc250)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc265)
      } loc(#loc421)
    } loc(#loc419)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc423)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc271)
      %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc272)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc272)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc273)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc424)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc278)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc279)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc279)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc426)
        cir.if %12 {
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc281)
          %14 = cir.call @pclose(%13) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc282)
        } loc(#loc427)
      } loc(#loc425)
    } loc(#loc422)
    cir.return loc(#loc252)
  } loc(#loc416)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc284)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc285)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc429)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc429)
    cir.return %2 : !s32i loc(#loc429)
  } loc(#loc428)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc431)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc317)
    %2 = cir.get_global @__const.goodG2B2.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc317)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc317)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc291)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc432)
    cir.scope {
      %4 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc434)
      %5 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc295)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc295)
      cir.if %6 {
        %7 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc298)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc299)
        %9 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc300)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc300)
        %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc298)
      } loc(#loc435)
    } loc(#loc433)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc437)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc305)
      %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc306)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc306)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc307)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc438)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc312)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc313)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc313)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc440)
        cir.if %12 {
          %13 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc315)
          %14 = cir.call @pclose(%13) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc316)
        } loc(#loc441)
      } loc(#loc439)
    } loc(#loc436)
    cir.return loc(#loc288)
  } loc(#loc430)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":206:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":206:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":179:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":179:26)
#loc5 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":76:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":76:26)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("/usr/include/sys/socket.h":102:1)
#loc10 = loc("/usr/include/sys/socket.h":102:62)
#loc11 = loc("/usr/include/netinet/in.h":404:1)
#loc12 = loc("/usr/include/netinet/in.h":405:40)
#loc13 = loc("/usr/include/sys/socket.h":112:1)
#loc14 = loc("/usr/include/sys/socket.h":113:6)
#loc15 = loc("/usr/include/sys/socket.h":296:1)
#loc16 = loc("/usr/include/sys/socket.h":296:39)
#loc17 = loc("/usr/include/sys/socket.h":306:1)
#loc18 = loc("/usr/include/sys/socket.h":307:38)
#loc19 = loc("/usr/include/sys/socket.h":145:1)
#loc20 = loc("/usr/include/sys/socket.h":145:68)
#loc21 = loc("/usr/include/string.h":246:1)
#loc22 = loc("/usr/include/string.h":247:33)
#loc23 = loc("/usr/include/unistd.h":358:1)
#loc24 = loc("/usr/include/unistd.h":358:27)
#loc25 = loc("/usr/include/stdio.h":893:1)
#loc26 = loc("/usr/include/stdio.h":894:3)
#loc27 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":163:28)
#loc28 = loc("/usr/include/stdio.h":887:1)
#loc29 = loc("/usr/include/stdio.h":887:36)
#loc30 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":73:1)
#loc31 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":169:1)
#loc32 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":75:5)
#loc33 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":75:12)
#loc34 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":77:12)
#loc35 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":77:5)
#loc36 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":78:5)
#loc37 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":159:5)
#loc38 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":78:8)
#loc39 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":78:26)
#loc40 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":79:5)
#loc41 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":80:9)
#loc42 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":158:9)
#loc43 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":85:13)
#loc44 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":85:17)
#loc45 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":86:13)
#loc46 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":86:32)
#loc47 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":87:13)
#loc48 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":87:19)
#loc49 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":88:13)
#loc50 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":88:35)
#loc51 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":89:13)
#loc52 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":89:35)
#loc53 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":90:13)
#loc54 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":90:41)
#loc55 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":90:30)
#loc56 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":90:37)
#loc57 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":91:13)
#loc58 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":143:21)
#loc59 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":101:39)
#loc60 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":101:48)
#loc61 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":101:61)
#loc62 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":101:32)
#loc63 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":101:17)
#loc64 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":101:72)
#loc65 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":102:17)
#loc66 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":105:17)
#loc67 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":102:21)
#loc68 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":102:37)
#loc69 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":103:17)
#loc70 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":104:21)
#loc71 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":106:24)
#loc72 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":106:25)
#loc73 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":106:34)
#loc74 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":106:37)
#loc75 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":106:51)
#loc76 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":106:17)
#loc77 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":106:52)
#loc78 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":107:38)
#loc79 = loc("/usr/include/netinet/in.h":249:5)
#loc80 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":107:17)
#loc81 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":108:43)
#loc82 = loc("/usr/include/netinet/in.h":251:20)
#loc83 = loc("/usr/include/netinet/in.h":33:15)
#loc84 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":108:17)
#loc85 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":109:42)
#loc86 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":109:36)
#loc87 = loc("/usr/include/netinet/in.h":250:15)
#loc88 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":109:17)
#loc89 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":109:50)
#loc90 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":110:17)
#loc91 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":113:17)
#loc92 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":110:26)
#loc93 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":110:58)
#loc94 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":110:59)
#loc95 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":110:68)
#loc96 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":110:82)
#loc97 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":110:21)
#loc98 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":110:88)
#loc99 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":111:17)
#loc100 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":112:21)
#loc101 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":114:17)
#loc102 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":117:17)
#loc103 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":114:28)
#loc104 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":114:42)
#loc105 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":114:21)
#loc106 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":114:61)
#loc107 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":115:17)
#loc108 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":116:21)
#loc109 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":118:39)
#loc110 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":118:53)
#loc111 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":118:59)
#loc112 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":118:32)
#loc113 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":118:17)
#loc114 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":118:63)
#loc115 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":119:17)
#loc116 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":122:17)
#loc117 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":119:21)
#loc118 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":119:37)
#loc119 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":120:17)
#loc120 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":121:21)
#loc121 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":124:35)
#loc122 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":124:58)
#loc123 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":124:65)
#loc124 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":124:63)
#loc125 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":124:49)
#loc126 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":124:72)
#loc127 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":124:75)
#loc128 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":124:86)
#loc129 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":124:91)
#loc130 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":124:97)
#loc131 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":124:107)
#loc132 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":124:108)
#loc133 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":124:111)
#loc134 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":124:30)
#loc135 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":124:17)
#loc136 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":124:112)
#loc137 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":125:17)
#loc138 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":128:17)
#loc139 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":125:21)
#loc140 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":125:35)
#loc141 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":125:48)
#loc142 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":125:51)
#loc143 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":125:65)
#loc144 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":126:17)
#loc145 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":127:21)
#loc146 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":130:61)
#loc147 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":130:17)
#loc148 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":130:22)
#loc149 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":130:32)
#loc150 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":130:45)
#loc151 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":130:56)
#loc152 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":130:57)
#loc153 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":132:27)
#loc154 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":132:34)
#loc155 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":132:40)
#loc156 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":132:17)
#loc157 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":132:44)
#loc158 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":133:17)
#loc159 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":136:17)
#loc160 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":133:21)
#loc161 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":134:17)
#loc162 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":135:32)
#loc163 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":135:22)
#loc164 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":135:21)
#loc165 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":137:27)
#loc166 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":137:34)
#loc167 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":137:40)
#loc168 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":137:17)
#loc169 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":137:44)
#loc170 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":138:17)
#loc171 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":141:17)
#loc172 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":138:21)
#loc173 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":139:17)
#loc174 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":140:32)
#loc175 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":140:22)
#loc176 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":140:21)
#loc177 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":143:20)
#loc178 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":144:13)
#loc179 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":147:13)
#loc180 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":144:17)
#loc181 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":144:33)
#loc182 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":145:13)
#loc183 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":146:30)
#loc184 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":146:17)
#loc185 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":148:13)
#loc186 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":151:13)
#loc187 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":148:17)
#loc188 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":148:33)
#loc189 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":149:13)
#loc190 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":150:30)
#loc191 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":150:17)
#loc192 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":160:5)
#loc193 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":168:5)
#loc194 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":161:9)
#loc195 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":161:15)
#loc196 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":163:22)
#loc197 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":163:16)
#loc198 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":163:9)
#loc199 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":163:31)
#loc200 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":164:9)
#loc201 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":167:9)
#loc202 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":164:13)
#loc203 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":164:21)
#loc204 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":165:9)
#loc205 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":166:20)
#loc206 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":166:13)
#loc207 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":224:1)
#loc208 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":228:1)
#loc209 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":226:5)
#loc210 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":226:14)
#loc211 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":227:5)
#loc212 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":227:14)
#loc213 = loc("/usr/include/stdlib.h":575:1)
#loc214 = loc("/usr/include/stdlib.h":575:41)
#loc215 = loc("/usr/include/time.h":76:1)
#loc216 = loc("/usr/include/time.h":76:38)
#loc217 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc218 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc219 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":245:15)
#loc220 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":247:15)
#loc221 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":250:15)
#loc222 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":252:15)
#loc223 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":240:1)
#loc224 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":255:1)
#loc229 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":241:1)
#loc230 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":243:27)
#loc231 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":243:22)
#loc232 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":243:5)
#loc233 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":245:5)
#loc234 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":246:5)
#loc235 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":246:66)
#loc236 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":247:5)
#loc237 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":250:5)
#loc238 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":251:5)
#loc239 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":251:65)
#loc240 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":252:5)
#loc241 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":254:12)
#loc242 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":254:5)
#loc243 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":61:1)
#loc244 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":64:1)
#loc245 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":63:12)
#loc246 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":63:5)
#loc247 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":184:19)
#loc248 = loc("/usr/include/string.h":149:1)
#loc249 = loc("/usr/include/string.h":150:14)
#loc250 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":189:22)
#loc251 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":176:1)
#loc252 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":200:1)
#loc253 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":178:5)
#loc254 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":178:12)
#loc255 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":180:12)
#loc256 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":180:5)
#loc257 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":181:5)
#loc258 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":190:5)
#loc259 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":181:8)
#loc260 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":181:27)
#loc261 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":182:5)
#loc262 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":185:5)
#loc263 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":187:5)
#loc264 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":184:9)
#loc265 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":189:9)
#loc266 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":189:16)
#loc267 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":191:5)
#loc268 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":199:5)
#loc269 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":192:9)
#loc270 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":192:15)
#loc271 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":194:22)
#loc272 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":194:28)
#loc273 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":194:16)
#loc274 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":194:9)
#loc275 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":194:31)
#loc276 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":195:9)
#loc277 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":198:9)
#loc278 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":195:13)
#loc279 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":195:21)
#loc280 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":196:9)
#loc281 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":197:20)
#loc282 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":197:13)
#loc283 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":66:1)
#loc284 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":69:1)
#loc285 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":68:12)
#loc286 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":68:5)
#loc287 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":203:1)
#loc288 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":222:1)
#loc289 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":205:5)
#loc290 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":205:12)
#loc291 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":207:12)
#loc292 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":207:5)
#loc293 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":208:5)
#loc294 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":212:5)
#loc295 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":208:8)
#loc296 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":208:26)
#loc297 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":209:5)
#loc298 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":211:9)
#loc299 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":211:16)
#loc300 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":211:22)
#loc301 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":213:5)
#loc302 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":221:5)
#loc303 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":214:9)
#loc304 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":214:15)
#loc305 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":216:22)
#loc306 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":216:28)
#loc307 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":216:16)
#loc308 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":216:9)
#loc309 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":216:31)
#loc310 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":217:9)
#loc311 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":220:9)
#loc312 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":217:13)
#loc313 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":217:21)
#loc314 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":218:9)
#loc315 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":219:20)
#loc316 = loc("CWE78_OS_Command_Injection__char_listen_socket_popen_08.c":219:13)
#loc317 = loc(fused[#loc1, #loc2])
#loc318 = loc(fused[#loc3, #loc4])
#loc319 = loc(fused[#loc5, #loc6])
#loc320 = loc(fused[#loc7, #loc8])
#loc321 = loc(fused[#loc9, #loc10])
#loc322 = loc(fused[#loc11, #loc12])
#loc323 = loc(fused[#loc13, #loc14])
#loc324 = loc(fused[#loc15, #loc16])
#loc325 = loc(fused[#loc17, #loc18])
#loc326 = loc(fused[#loc19, #loc20])
#loc327 = loc(fused[#loc21, #loc22])
#loc328 = loc(fused[#loc23, #loc24])
#loc329 = loc(fused[#loc25, #loc26])
#loc330 = loc(fused[#loc28, #loc29])
#loc331 = loc(fused[#loc30, #loc31])
#loc332 = loc(fused[#loc32, #loc33])
#loc333 = loc(fused[#loc35, #loc34])
#loc334 = loc(fused[#loc36, #loc37])
#loc335 = loc(fused[#loc38, #loc39])
#loc336 = loc(fused[#loc40, #loc37])
#loc337 = loc(fused[#loc41, #loc42])
#loc338 = loc(fused[#loc43, #loc44])
#loc339 = loc(fused[#loc45, #loc46])
#loc340 = loc(fused[#loc47, #loc48])
#loc341 = loc(fused[#loc49, #loc50])
#loc342 = loc(fused[#loc51, #loc52])
#loc343 = loc(fused[#loc53, #loc54])
#loc344 = loc(fused[#loc57, #loc58])
#loc345 = loc(fused[#loc63, #loc64])
#loc346 = loc(fused[#loc65, #loc66])
#loc347 = loc(fused[#loc67, #loc68])
#loc348 = loc(fused[#loc69, #loc66])
#loc349 = loc(fused[#loc71, #loc72])
#loc350 = loc(fused[#loc74, #loc75])
#loc351 = loc(fused[#loc76, #loc77])
#loc352 = loc(fused[#loc80, #loc78])
#loc353 = loc(fused[#loc84, #loc81])
#loc354 = loc(fused[#loc88, #loc89])
#loc355 = loc(fused[#loc90, #loc91])
#loc356 = loc(fused[#loc93, #loc94])
#loc357 = loc(fused[#loc95, #loc96])
#loc358 = loc(fused[#loc97, #loc98])
#loc359 = loc(fused[#loc99, #loc91])
#loc360 = loc(fused[#loc101, #loc102])
#loc361 = loc(fused[#loc105, #loc106])
#loc362 = loc(fused[#loc107, #loc102])
#loc363 = loc(fused[#loc113, #loc114])
#loc364 = loc(fused[#loc115, #loc116])
#loc365 = loc(fused[#loc117, #loc118])
#loc366 = loc(fused[#loc119, #loc116])
#loc367 = loc(fused[#loc125, #loc126])
#loc368 = loc(fused[#loc127, #loc128])
#loc369 = loc(fused[#loc129, #loc130])
#loc370 = loc(fused[#loc129, #loc131])
#loc371 = loc(fused[#loc127, #loc132])
#loc372 = loc(fused[#loc135, #loc136])
#loc373 = loc(fused[#loc137, #loc138])
#loc374 = loc(fused[#loc139, #loc140])
#loc375 = loc(fused[#loc142, #loc143])
#loc376 = loc(fused[#loc144, #loc138])
#loc377 = loc(fused[#loc150, #loc151])
#loc378 = loc(fused[#loc149, #loc151])
#loc379 = loc(fused[#loc148, #loc151])
#loc380 = loc(fused[#loc147, #loc146])
#loc381 = loc(fused[#loc156, #loc157])
#loc382 = loc(fused[#loc158, #loc159])
#loc383 = loc(fused[#loc161, #loc159])
#loc384 = loc(fused[#loc164, #loc162])
#loc385 = loc(fused[#loc168, #loc169])
#loc386 = loc(fused[#loc170, #loc171])
#loc387 = loc(fused[#loc173, #loc171])
#loc388 = loc(fused[#loc176, #loc174])
#loc389 = loc(fused[#loc178, #loc179])
#loc390 = loc(fused[#loc180, #loc181])
#loc391 = loc(fused[#loc182, #loc179])
#loc392 = loc(fused[#loc185, #loc186])
#loc393 = loc(fused[#loc187, #loc188])
#loc394 = loc(fused[#loc189, #loc186])
#loc395 = loc(fused[#loc192, #loc193])
#loc396 = loc(fused[#loc194, #loc195])
#loc397 = loc(fused[#loc198, #loc199])
#loc398 = loc(fused[#loc200, #loc201])
#loc399 = loc(fused[#loc202, #loc203])
#loc400 = loc(fused[#loc204, #loc201])
#loc401 = loc(fused[#loc207, #loc208])
#loc402 = loc(fused[#loc209, #loc210])
#loc403 = loc(fused[#loc211, #loc212])
#loc404 = loc(fused[#loc213, #loc214])
#loc405 = loc(fused[#loc215, #loc216])
#loc406 = loc(fused[#loc217, #loc218])
#loc407 = loc(fused[#loc223, #loc224])
#loc410 = loc(fused[#loc234, #loc235])
#loc411 = loc(fused[#loc238, #loc239])
#loc412 = loc(fused[#loc242, #loc241])
#loc413 = loc(fused[#loc243, #loc244])
#loc414 = loc(fused[#loc246, #loc245])
#loc415 = loc(fused[#loc248, #loc249])
#loc416 = loc(fused[#loc251, #loc252])
#loc417 = loc(fused[#loc253, #loc254])
#loc418 = loc(fused[#loc256, #loc255])
#loc419 = loc(fused[#loc257, #loc258])
#loc420 = loc(fused[#loc259, #loc260])
#loc421 = loc(fused[#loc261, #loc262, #loc263, #loc258])
#loc422 = loc(fused[#loc267, #loc268])
#loc423 = loc(fused[#loc269, #loc270])
#loc424 = loc(fused[#loc274, #loc275])
#loc425 = loc(fused[#loc276, #loc277])
#loc426 = loc(fused[#loc278, #loc279])
#loc427 = loc(fused[#loc280, #loc277])
#loc428 = loc(fused[#loc283, #loc284])
#loc429 = loc(fused[#loc286, #loc285])
#loc430 = loc(fused[#loc287, #loc288])
#loc431 = loc(fused[#loc289, #loc290])
#loc432 = loc(fused[#loc292, #loc291])
#loc433 = loc(fused[#loc293, #loc294])
#loc434 = loc(fused[#loc295, #loc296])
#loc435 = loc(fused[#loc297, #loc294])
#loc436 = loc(fused[#loc301, #loc302])
#loc437 = loc(fused[#loc303, #loc304])
#loc438 = loc(fused[#loc308, #loc309])
#loc439 = loc(fused[#loc310, #loc311])
#loc440 = loc(fused[#loc312, #loc313])
#loc441 = loc(fused[#loc314, #loc311])
