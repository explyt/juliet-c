!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":47:21)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":47:25)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":120:44)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":417:10)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":417:14)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":417:20)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":417:32)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":155:26)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":155:30)
#loc284 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":174:27)
#loc384 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":232:44)
#loc411 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":258:26)
#loc412 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":258:30)
#loc454 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":272:27)
#loc555 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":330:44)
#loc582 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":356:25)
#loc583 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":356:29)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc676 = loc(fused[#loc29, #loc30])
#loc747 = loc(fused[#loc214, #loc215])
#loc748 = loc(fused[#loc216, #loc217])
#loc754 = loc(fused[#loc238, #loc239])
#loc820 = loc(fused[#loc411, #loc412])
#loc886 = loc(fused[#loc582, #loc583])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc663)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc664)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc665)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc666)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc667)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc668)
  cir.func private @close(!s32i) -> !s32i loc(#loc669)
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc670)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc671)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc672)
  cir.func private @printIntLine(!s32i) loc(#loc673)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc24)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc674)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc29, #loc30])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc677)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc678)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc676)
    cir.store %arg0, %2 : !s32i, !cir.ptr<!s32i> loc(#loc35)
    cir.br ^bb1 loc(#loc679)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc670)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc38)
    cir.brcond %5 ^bb2, ^bb30 loc(#loc680)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc681)
  ^bb3:  // pred: ^bb2
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc42)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc43)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc43)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc682)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc683)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc42)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc684)
    cir.store %12, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc678)
    cir.br ^bb4 loc(#loc685)
  ^bb4:  // pred: ^bb3
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc48)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc49)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc49)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc686)
    cir.brcond %16 ^bb5, ^bb6 loc(#loc687)
  ^bb5:  // pred: ^bb4
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc51)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc52)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc53)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc51)
    cir.br ^bb6 loc(#loc47)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc47)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc688)
  ^bb8:  // pred: ^bb7
    %20 = cir.const #cir.int<0> : !s32i loc(#loc56)
    cir.store %20, %0 : !s32i, !cir.ptr<!s32i> loc(#loc689)
    cir.br ^bb9 loc(#loc688)
  ^bb9:  // 2 preds: ^bb8, ^bb13
    %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc58)
    %22 = cir.const #cir.int<10> : !s32i loc(#loc59)
    %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc690)
    cir.brcond %23 ^bb10, ^bb14 loc(#loc60)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc691)
  ^bb11:  // pred: ^bb10
    %24 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc63)
    %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc65)
    cir.store %24, %27 : !s32i, !cir.ptr<!s32i> loc(#loc692)
    cir.br ^bb12 loc(#loc55)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc55)
  ^bb13:  // pred: ^bb12
    %28 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc66)
    %29 = cir.unary(inc, %28) : !s32i, !s32i loc(#loc67)
    cir.store %29, %0 : !s32i, !cir.ptr<!s32i> loc(#loc693)
    cir.br ^bb9 loc(#loc688)
  ^bb14:  // pred: ^bb9
    cir.br ^bb15 loc(#loc55)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc694)
  ^bb16:  // pred: ^bb15
    %30 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc70)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc71)
    %32 = cir.cmp(ge, %30, %31) : !s32i, !cir.bool loc(#loc695)
    cir.brcond %32 ^bb17, ^bb26 loc(#loc696)
  ^bb17:  // pred: ^bb16
    %33 = cir.const #cir.int<1> : !s32i loc(#loc75)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc76)
    %35 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    %36 = cir.ptr_stride(%34 : !cir.ptr<!s32i>, %35 : !s32i), !cir.ptr<!s32i> loc(#loc78)
    cir.store %33, %36 : !s32i, !cir.ptr<!s32i> loc(#loc697)
    cir.br ^bb18 loc(#loc698)
  ^bb18:  // pred: ^bb17
    %37 = cir.const #cir.int<0> : !s32i loc(#loc81)
    cir.store %37, %0 : !s32i, !cir.ptr<!s32i> loc(#loc699)
    cir.br ^bb19 loc(#loc698)
  ^bb19:  // 2 preds: ^bb18, ^bb23
    %38 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    %39 = cir.const #cir.int<10> : !s32i loc(#loc84)
    %40 = cir.cmp(lt, %38, %39) : !s32i, !cir.bool loc(#loc700)
    cir.brcond %40 ^bb20, ^bb24 loc(#loc85)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc701)
  ^bb21:  // pred: ^bb20
    %41 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc87)
    %42 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc88)
    %43 = cir.ptr_stride(%41 : !cir.ptr<!s32i>, %42 : !s32i), !cir.ptr<!s32i> loc(#loc89)
    %44 = cir.load %43 : !cir.ptr<!s32i>, !s32i loc(#loc87)
    cir.call @printIntLine(%44) : (!s32i) -> () loc(#loc90)
    cir.br ^bb22 loc(#loc80)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc80)
  ^bb23:  // pred: ^bb22
    %45 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    %46 = cir.unary(inc, %45) : !s32i, !s32i loc(#loc92)
    cir.store %46, %0 : !s32i, !cir.ptr<!s32i> loc(#loc702)
    cir.br ^bb19 loc(#loc698)
  ^bb24:  // pred: ^bb19
    cir.br ^bb25 loc(#loc80)
  ^bb25:  // pred: ^bb24
    cir.br ^bb27 loc(#loc73)
  ^bb26:  // pred: ^bb16
    %47 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc24)
    %48 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc24)
    cir.call @printLine(%48) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    cir.br ^bb27 loc(#loc69)
  ^bb27:  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc69)
  ^bb28:  // pred: ^bb27
    %49 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc94)
    %50 = cir.cast(bitcast, %49 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc94)
    cir.call @free(%50) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc95)
    cir.br ^bb29 loc(#loc41)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc37)
  ^bb30:  // 2 preds: ^bb1, ^bb29
    cir.br ^bb31 loc(#loc37)
  ^bb31:  // pred: ^bb30
    cir.return loc(#loc28)
  } loc(#loc675)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc704)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc705)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc706)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc707)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc708)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc108)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc109)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc709)
    cir.br ^bb1 loc(#loc710)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc103)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc103)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc706)
    cir.br ^bb2 loc(#loc711)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc711)
  ^bb3:  // pred: ^bb24
    %9 = cir.const #cir.int<0> : !s32i loc(#loc115)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc115)
    cir.brcond %10 ^bb4, ^bb25 loc(#loc115)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %11 = cir.const #cir.int<2> : !s32i loc(#loc116)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc117)
    %13 = cir.const #cir.int<6> : !s32i loc(#loc118)
    %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc119)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc712)
    cir.br ^bb5 loc(#loc713)
  ^bb5:  // pred: ^bb4
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc125)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc125)
    %18 = cir.cmp(eq, %15, %17) : !s32i, !cir.bool loc(#loc714)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc715)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc127)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc123)
  ^bb8:  // pred: ^bb7
    %19 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc716)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc130)
    %21 = cir.const #cir.int<16> : !u64i loc(#loc717)
    cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc718)
    %22 = cir.const #cir.int<2> : !s32i loc(#loc135)
    %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc135)
    %24 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc136)
    cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc719)
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc138)
    %28 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc139)
    %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc140)
    cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc720)
    %30 = cir.const #cir.int<27015> : !s32i loc(#loc143)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc143)
    %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc144)
    %33 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc145)
    cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc721)
    cir.br ^bb9 loc(#loc722)
  ^bb9:  // pred: ^bb8
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    %35 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc723)
    %36 = cir.const #cir.int<16> : !u64i loc(#loc724)
    %37 = cir.cast(integral, %36 : !u64i), !u32i loc(#loc724)
    %38 = cir.call @connect(%34, %35, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc155)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc156)
    %40 = cir.unary(minus, %39) : !s32i, !s32i loc(#loc156)
    %41 = cir.cmp(eq, %38, %40) : !s32i, !cir.bool loc(#loc725)
    cir.brcond %41 ^bb10, ^bb11 loc(#loc726)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc158)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc149)
  ^bb12:  // pred: ^bb11
    %42 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    %43 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc160)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc160)
    %45 = cir.const #cir.int<3> : !s32i loc(#loc161)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc161)
    %47 = cir.const #cir.int<4> : !u64i loc(#loc161)
    %48 = cir.binop(mul, %46, %47) : !u64i loc(#loc161)
    %49 = cir.const #cir.int<2> : !s32i loc(#loc161)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc161)
    %51 = cir.binop(add, %48, %50) : !u64i loc(#loc161)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc162)
    %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc162)
    %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc727)
    %55 = cir.const #cir.int<0> : !s32i loc(#loc163)
    %56 = cir.call @recv(%42, %44, %54, %55) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc164)
    %57 = cir.cast(integral, %56 : !s64i), !s32i loc(#loc164)
    cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc728)
    cir.br ^bb13 loc(#loc729)
  ^bb13:  // pred: ^bb12
    %58 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc170)
    %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc170)
    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc730)
    cir.brcond %61 ^bb14, ^bb15 loc(#loc171)
  ^bb14:  // pred: ^bb13
    %62 = cir.const #true loc(#loc171)
    cir.br ^bb20(%62 : !cir.bool) loc(#loc171)
  ^bb15:  // pred: ^bb13
    %63 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc172)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc173)
    %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc731)
    cir.brcond %65 ^bb16, ^bb17 loc(#loc171)
  ^bb16:  // pred: ^bb15
    %66 = cir.const #true loc(#loc171)
    cir.br ^bb18(%66 : !cir.bool) loc(#loc171)
  ^bb17:  // pred: ^bb15
    %67 = cir.const #false loc(#loc171)
    cir.br ^bb18(%67 : !cir.bool) loc(#loc171)
  ^bb18(%68: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":120:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc171)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%68 : !cir.bool) loc(#loc171)
  ^bb20(%69: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":120:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc171)
  ^bb21:  // pred: ^bb20
    cir.brcond %69 ^bb22, ^bb23 loc(#loc732)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc175)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc168)
  ^bb24:  // pred: ^bb23
    %70 = cir.const #cir.int<0> : !s32i loc(#loc176)
    %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc176)
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc177)
    %73 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc178)
    %74 = cir.ptr_stride(%73 : !cir.ptr<!s8i>, %72 : !s32i), !cir.ptr<!s8i> loc(#loc178)
    cir.store %71, %74 : !s8i, !cir.ptr<!s8i> loc(#loc733)
    %75 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc179)
    %76 = cir.call @atoi(%75) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc180)
    cir.store %76, %4 : !s32i, !cir.ptr<!s32i> loc(#loc734)
    cir.br ^bb3 loc(#loc114)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc114)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc735)
  ^bb27:  // pred: ^bb26
    %77 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc185)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc186)
    %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc186)
    %80 = cir.cmp(ne, %77, %79) : !s32i, !cir.bool loc(#loc736)
    cir.brcond %80 ^bb28, ^bb29 loc(#loc737)
  ^bb28:  // pred: ^bb27
    %81 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc188)
    %82 = cir.call @close(%81) : (!s32i) -> !s32i loc(#loc189)
    cir.br ^bb29 loc(#loc184)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc184)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc112)
  ^bb31:  // pred: ^bb30
    %83 = cir.const #cir.int<1> : !s32i loc(#loc190)
    %84 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc670)
    cir.store %83, %84 : !s32i, !cir.ptr<!s32i> loc(#loc738)
    %85 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc192)
    cir.call @badSink(%85) : (!s32i) -> () loc(#loc193)
    cir.return loc(#loc97)
  } loc(#loc703)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc740)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc196)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc741)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc198)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc742)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc200)
    cir.return loc(#loc195)
  } loc(#loc739)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc743)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc744)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc745)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc208)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc209)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc210)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc211)
  cir.func @main(%arg0: !s32i loc(fused[#loc214, #loc215]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc216, #loc217])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc747)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc748)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc213)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc218)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc218)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc219)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc220)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc220)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc221)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc208)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc208)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc222)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21_good : !cir.ptr<!cir.func<!void ()>> loc(#loc749)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21_good() : () -> () loc(#loc223)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc209)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc209)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc225)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc210)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc210)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc226)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc750)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21_bad() : () -> () loc(#loc227)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc211)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc211)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc229)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc230)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc751)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc751)
    cir.return %17 : !s32i loc(#loc751)
  } loc(#loc746)
  cir.global "private" internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc752)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc234)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc235)
  cir.func internal private @goodB2G1Sink(%arg0: !s32i loc(fused[#loc238, #loc239])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc755)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc756)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc754)
    cir.store %arg0, %2 : !s32i, !cir.ptr<!s32i> loc(#loc244)
    cir.br ^bb1 loc(#loc757)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc752)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc247)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc247)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc758)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc234)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc234)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc251)
    cir.br ^bb39 loc(#loc249)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc759)
  ^bb4:  // pred: ^bb3
    %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc254)
    %9 = cir.const #cir.int<10> : !s32i loc(#loc255)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc255)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc760)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc761)
    %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc254)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc762)
    cir.store %14, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc756)
    cir.br ^bb5 loc(#loc763)
  ^bb5:  // pred: ^bb4
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc260)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc261)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc261)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s32i>, !cir.bool loc(#loc764)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc765)
  ^bb6:  // pred: ^bb5
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc263)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc264)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc265)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc263)
    cir.br ^bb7 loc(#loc259)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc259)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc766)
  ^bb9:  // pred: ^bb8
    %22 = cir.const #cir.int<0> : !s32i loc(#loc268)
    cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc767)
    cir.br ^bb10 loc(#loc766)
  ^bb10:  // 2 preds: ^bb9, ^bb14
    %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc270)
    %24 = cir.const #cir.int<10> : !s32i loc(#loc271)
    %25 = cir.cmp(lt, %23, %24) : !s32i, !cir.bool loc(#loc768)
    cir.brcond %25 ^bb11, ^bb15 loc(#loc272)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc769)
  ^bb12:  // pred: ^bb11
    %26 = cir.const #cir.int<0> : !s32i loc(#loc274)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc275)
    %28 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc276)
    %29 = cir.ptr_stride(%27 : !cir.ptr<!s32i>, %28 : !s32i), !cir.ptr<!s32i> loc(#loc277)
    cir.store %26, %29 : !s32i, !cir.ptr<!s32i> loc(#loc770)
    cir.br ^bb13 loc(#loc267)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc267)
  ^bb14:  // pred: ^bb13
    %30 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc278)
    %31 = cir.unary(inc, %30) : !s32i, !s32i loc(#loc279)
    cir.store %31, %0 : !s32i, !cir.ptr<!s32i> loc(#loc771)
    cir.br ^bb10 loc(#loc766)
  ^bb15:  // pred: ^bb10
    cir.br ^bb16 loc(#loc267)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc772)
  ^bb17:  // pred: ^bb16
    %32 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc282)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc283)
    %34 = cir.cmp(ge, %32, %33) : !s32i, !cir.bool loc(#loc773)
    cir.brcond %34 ^bb18, ^bb23 loc(#loc284)
  ^bb18:  // pred: ^bb17
    %35 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc285)
    %36 = cir.const #cir.int<10> : !s32i loc(#loc286)
    %37 = cir.cmp(lt, %35, %36) : !s32i, !cir.bool loc(#loc774)
    cir.brcond %37 ^bb19, ^bb20 loc(#loc284)
  ^bb19:  // pred: ^bb18
    %38 = cir.const #true loc(#loc284)
    cir.br ^bb21(%38 : !cir.bool) loc(#loc284)
  ^bb20:  // pred: ^bb18
    %39 = cir.const #false loc(#loc284)
    cir.br ^bb21(%39 : !cir.bool) loc(#loc284)
  ^bb21(%40: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":174:27)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc284)
  ^bb22:  // pred: ^bb21
    cir.br ^bb24(%40 : !cir.bool) loc(#loc284)
  ^bb23:  // pred: ^bb17
    %41 = cir.const #false loc(#loc284)
    cir.br ^bb24(%41 : !cir.bool) loc(#loc284)
  ^bb24(%42: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":174:27)):  // 2 preds: ^bb22, ^bb23
    cir.br ^bb25 loc(#loc284)
  ^bb25:  // pred: ^bb24
    cir.brcond %42 ^bb26, ^bb35 loc(#loc775)
  ^bb26:  // pred: ^bb25
    %43 = cir.const #cir.int<1> : !s32i loc(#loc291)
    %44 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc292)
    %45 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc293)
    %46 = cir.ptr_stride(%44 : !cir.ptr<!s32i>, %45 : !s32i), !cir.ptr<!s32i> loc(#loc294)
    cir.store %43, %46 : !s32i, !cir.ptr<!s32i> loc(#loc776)
    cir.br ^bb27 loc(#loc777)
  ^bb27:  // pred: ^bb26
    %47 = cir.const #cir.int<0> : !s32i loc(#loc297)
    cir.store %47, %0 : !s32i, !cir.ptr<!s32i> loc(#loc778)
    cir.br ^bb28 loc(#loc777)
  ^bb28:  // 2 preds: ^bb27, ^bb32
    %48 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc299)
    %49 = cir.const #cir.int<10> : !s32i loc(#loc300)
    %50 = cir.cmp(lt, %48, %49) : !s32i, !cir.bool loc(#loc779)
    cir.brcond %50 ^bb29, ^bb33 loc(#loc301)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc780)
  ^bb30:  // pred: ^bb29
    %51 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc303)
    %52 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc304)
    %53 = cir.ptr_stride(%51 : !cir.ptr<!s32i>, %52 : !s32i), !cir.ptr<!s32i> loc(#loc305)
    %54 = cir.load %53 : !cir.ptr<!s32i>, !s32i loc(#loc303)
    cir.call @printIntLine(%54) : (!s32i) -> () loc(#loc306)
    cir.br ^bb31 loc(#loc296)
  ^bb31:  // pred: ^bb30
    cir.br ^bb32 loc(#loc296)
  ^bb32:  // pred: ^bb31
    %55 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc307)
    %56 = cir.unary(inc, %55) : !s32i, !s32i loc(#loc308)
    cir.store %56, %0 : !s32i, !cir.ptr<!s32i> loc(#loc781)
    cir.br ^bb28 loc(#loc777)
  ^bb33:  // pred: ^bb28
    cir.br ^bb34 loc(#loc296)
  ^bb34:  // pred: ^bb33
    cir.br ^bb36 loc(#loc289)
  ^bb35:  // pred: ^bb25
    %57 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc235)
    %58 = cir.cast(array_to_ptrdecay, %57 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc235)
    cir.call @printLine(%58) : (!cir.ptr<!s8i>) -> () loc(#loc309)
    cir.br ^bb36 loc(#loc281)
  ^bb36:  // 2 preds: ^bb34, ^bb35
    cir.br ^bb37 loc(#loc281)
  ^bb37:  // pred: ^bb36
    %59 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc310)
    %60 = cir.cast(bitcast, %59 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc310)
    cir.call @free(%60) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc311)
    cir.br ^bb38 loc(#loc253)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc246)
  ^bb39:  // 2 preds: ^bb2, ^bb38
    cir.br ^bb40 loc(#loc246)
  ^bb40:  // pred: ^bb39
    cir.return loc(#loc237)
  } loc(#loc753)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc783)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc784)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc785)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc786)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc787)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc324)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc325)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc788)
    cir.br ^bb1 loc(#loc789)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc319)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc319)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc785)
    cir.br ^bb2 loc(#loc790)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc790)
  ^bb3:  // pred: ^bb24
    %9 = cir.const #cir.int<0> : !s32i loc(#loc331)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc331)
    cir.brcond %10 ^bb4, ^bb25 loc(#loc331)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %11 = cir.const #cir.int<2> : !s32i loc(#loc332)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc333)
    %13 = cir.const #cir.int<6> : !s32i loc(#loc334)
    %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc335)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc791)
    cir.br ^bb5 loc(#loc792)
  ^bb5:  // pred: ^bb4
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc340)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc341)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc341)
    %18 = cir.cmp(eq, %15, %17) : !s32i, !cir.bool loc(#loc793)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc794)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc343)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc339)
  ^bb8:  // pred: ^bb7
    %19 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc795)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc346)
    %21 = cir.const #cir.int<16> : !u64i loc(#loc796)
    cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc797)
    %22 = cir.const #cir.int<2> : !s32i loc(#loc351)
    %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc351)
    %24 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc136)
    cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc798)
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc353)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc353)
    %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc354)
    %28 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc139)
    %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc140)
    cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc799)
    %30 = cir.const #cir.int<27015> : !s32i loc(#loc357)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc357)
    %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc358)
    %33 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc145)
    cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc800)
    cir.br ^bb9 loc(#loc801)
  ^bb9:  // pred: ^bb8
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc363)
    %35 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc802)
    %36 = cir.const #cir.int<16> : !u64i loc(#loc803)
    %37 = cir.cast(integral, %36 : !u64i), !u32i loc(#loc803)
    %38 = cir.call @connect(%34, %35, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc368)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc369)
    %40 = cir.unary(minus, %39) : !s32i, !s32i loc(#loc369)
    %41 = cir.cmp(eq, %38, %40) : !s32i, !cir.bool loc(#loc804)
    cir.brcond %41 ^bb10, ^bb11 loc(#loc805)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc371)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc362)
  ^bb12:  // pred: ^bb11
    %42 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc372)
    %43 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc373)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc373)
    %45 = cir.const #cir.int<3> : !s32i loc(#loc374)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc374)
    %47 = cir.const #cir.int<4> : !u64i loc(#loc374)
    %48 = cir.binop(mul, %46, %47) : !u64i loc(#loc374)
    %49 = cir.const #cir.int<2> : !s32i loc(#loc374)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc374)
    %51 = cir.binop(add, %48, %50) : !u64i loc(#loc374)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc375)
    %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc375)
    %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc806)
    %55 = cir.const #cir.int<0> : !s32i loc(#loc376)
    %56 = cir.call @recv(%42, %44, %54, %55) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc377)
    %57 = cir.cast(integral, %56 : !s64i), !s32i loc(#loc377)
    cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc807)
    cir.br ^bb13 loc(#loc808)
  ^bb13:  // pred: ^bb12
    %58 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc382)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc383)
    %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc383)
    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc809)
    cir.brcond %61 ^bb14, ^bb15 loc(#loc384)
  ^bb14:  // pred: ^bb13
    %62 = cir.const #true loc(#loc384)
    cir.br ^bb20(%62 : !cir.bool) loc(#loc384)
  ^bb15:  // pred: ^bb13
    %63 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc385)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc386)
    %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc810)
    cir.brcond %65 ^bb16, ^bb17 loc(#loc384)
  ^bb16:  // pred: ^bb15
    %66 = cir.const #true loc(#loc384)
    cir.br ^bb18(%66 : !cir.bool) loc(#loc384)
  ^bb17:  // pred: ^bb15
    %67 = cir.const #false loc(#loc384)
    cir.br ^bb18(%67 : !cir.bool) loc(#loc384)
  ^bb18(%68: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":232:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc384)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%68 : !cir.bool) loc(#loc384)
  ^bb20(%69: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":232:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc384)
  ^bb21:  // pred: ^bb20
    cir.brcond %69 ^bb22, ^bb23 loc(#loc811)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc388)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc381)
  ^bb24:  // pred: ^bb23
    %70 = cir.const #cir.int<0> : !s32i loc(#loc389)
    %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc389)
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc390)
    %73 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc391)
    %74 = cir.ptr_stride(%73 : !cir.ptr<!s8i>, %72 : !s32i), !cir.ptr<!s8i> loc(#loc391)
    cir.store %71, %74 : !s8i, !cir.ptr<!s8i> loc(#loc812)
    %75 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc392)
    %76 = cir.call @atoi(%75) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc393)
    cir.store %76, %4 : !s32i, !cir.ptr<!s32i> loc(#loc813)
    cir.br ^bb3 loc(#loc330)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc330)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc814)
  ^bb27:  // pred: ^bb26
    %77 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc398)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc399)
    %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc399)
    %80 = cir.cmp(ne, %77, %79) : !s32i, !cir.bool loc(#loc815)
    cir.brcond %80 ^bb28, ^bb29 loc(#loc816)
  ^bb28:  // pred: ^bb27
    %81 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc401)
    %82 = cir.call @close(%81) : (!s32i) -> !s32i loc(#loc402)
    cir.br ^bb29 loc(#loc397)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc397)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc328)
  ^bb31:  // pred: ^bb30
    %83 = cir.const #cir.int<0> : !s32i loc(#loc403)
    %84 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc752)
    cir.store %83, %84 : !s32i, !cir.ptr<!s32i> loc(#loc817)
    %85 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc405)
    cir.call @goodB2G1Sink(%85) : (!s32i) -> () loc(#loc406)
    cir.return loc(#loc313)
  } loc(#loc782)
  cir.global "private" internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc818)
  cir.func internal private @goodB2G2Sink(%arg0: !s32i loc(fused[#loc411, #loc412])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc821)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc822)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc820)
    cir.store %arg0, %2 : !s32i, !cir.ptr<!s32i> loc(#loc417)
    cir.br ^bb1 loc(#loc823)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc818)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc420)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc420)
    cir.brcond %5 ^bb2, ^bb38 loc(#loc824)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc825)
  ^bb3:  // pred: ^bb2
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc424)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc425)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc425)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc826)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc827)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc424)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc828)
    cir.store %12, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc822)
    cir.br ^bb4 loc(#loc829)
  ^bb4:  // pred: ^bb3
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc430)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc431)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc431)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc830)
    cir.brcond %16 ^bb5, ^bb6 loc(#loc831)
  ^bb5:  // pred: ^bb4
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc433)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc434)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc435)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc433)
    cir.br ^bb6 loc(#loc429)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc429)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc832)
  ^bb8:  // pred: ^bb7
    %20 = cir.const #cir.int<0> : !s32i loc(#loc438)
    cir.store %20, %0 : !s32i, !cir.ptr<!s32i> loc(#loc833)
    cir.br ^bb9 loc(#loc832)
  ^bb9:  // 2 preds: ^bb8, ^bb13
    %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc440)
    %22 = cir.const #cir.int<10> : !s32i loc(#loc441)
    %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc834)
    cir.brcond %23 ^bb10, ^bb14 loc(#loc442)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc835)
  ^bb11:  // pred: ^bb10
    %24 = cir.const #cir.int<0> : !s32i loc(#loc444)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc445)
    %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc446)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc447)
    cir.store %24, %27 : !s32i, !cir.ptr<!s32i> loc(#loc836)
    cir.br ^bb12 loc(#loc437)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc437)
  ^bb13:  // pred: ^bb12
    %28 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc448)
    %29 = cir.unary(inc, %28) : !s32i, !s32i loc(#loc449)
    cir.store %29, %0 : !s32i, !cir.ptr<!s32i> loc(#loc837)
    cir.br ^bb9 loc(#loc832)
  ^bb14:  // pred: ^bb9
    cir.br ^bb15 loc(#loc437)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc838)
  ^bb16:  // pred: ^bb15
    %30 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc452)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc453)
    %32 = cir.cmp(ge, %30, %31) : !s32i, !cir.bool loc(#loc839)
    cir.brcond %32 ^bb17, ^bb22 loc(#loc454)
  ^bb17:  // pred: ^bb16
    %33 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc455)
    %34 = cir.const #cir.int<10> : !s32i loc(#loc456)
    %35 = cir.cmp(lt, %33, %34) : !s32i, !cir.bool loc(#loc840)
    cir.brcond %35 ^bb18, ^bb19 loc(#loc454)
  ^bb18:  // pred: ^bb17
    %36 = cir.const #true loc(#loc454)
    cir.br ^bb20(%36 : !cir.bool) loc(#loc454)
  ^bb19:  // pred: ^bb17
    %37 = cir.const #false loc(#loc454)
    cir.br ^bb20(%37 : !cir.bool) loc(#loc454)
  ^bb20(%38: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":272:27)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc454)
  ^bb21:  // pred: ^bb20
    cir.br ^bb23(%38 : !cir.bool) loc(#loc454)
  ^bb22:  // pred: ^bb16
    %39 = cir.const #false loc(#loc454)
    cir.br ^bb23(%39 : !cir.bool) loc(#loc454)
  ^bb23(%40: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":272:27)):  // 2 preds: ^bb21, ^bb22
    cir.br ^bb24 loc(#loc454)
  ^bb24:  // pred: ^bb23
    cir.brcond %40 ^bb25, ^bb34 loc(#loc841)
  ^bb25:  // pred: ^bb24
    %41 = cir.const #cir.int<1> : !s32i loc(#loc461)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc462)
    %43 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc463)
    %44 = cir.ptr_stride(%42 : !cir.ptr<!s32i>, %43 : !s32i), !cir.ptr<!s32i> loc(#loc464)
    cir.store %41, %44 : !s32i, !cir.ptr<!s32i> loc(#loc842)
    cir.br ^bb26 loc(#loc843)
  ^bb26:  // pred: ^bb25
    %45 = cir.const #cir.int<0> : !s32i loc(#loc467)
    cir.store %45, %0 : !s32i, !cir.ptr<!s32i> loc(#loc844)
    cir.br ^bb27 loc(#loc843)
  ^bb27:  // 2 preds: ^bb26, ^bb31
    %46 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc469)
    %47 = cir.const #cir.int<10> : !s32i loc(#loc470)
    %48 = cir.cmp(lt, %46, %47) : !s32i, !cir.bool loc(#loc845)
    cir.brcond %48 ^bb28, ^bb32 loc(#loc471)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc846)
  ^bb29:  // pred: ^bb28
    %49 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc473)
    %50 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc474)
    %51 = cir.ptr_stride(%49 : !cir.ptr<!s32i>, %50 : !s32i), !cir.ptr<!s32i> loc(#loc475)
    %52 = cir.load %51 : !cir.ptr<!s32i>, !s32i loc(#loc473)
    cir.call @printIntLine(%52) : (!s32i) -> () loc(#loc476)
    cir.br ^bb30 loc(#loc466)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc466)
  ^bb31:  // pred: ^bb30
    %53 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc477)
    %54 = cir.unary(inc, %53) : !s32i, !s32i loc(#loc478)
    cir.store %54, %0 : !s32i, !cir.ptr<!s32i> loc(#loc847)
    cir.br ^bb27 loc(#loc843)
  ^bb32:  // pred: ^bb27
    cir.br ^bb33 loc(#loc466)
  ^bb33:  // pred: ^bb32
    cir.br ^bb35 loc(#loc459)
  ^bb34:  // pred: ^bb24
    %55 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc479)
    %56 = cir.cast(array_to_ptrdecay, %55 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc479)
    cir.call @printLine(%56) : (!cir.ptr<!s8i>) -> () loc(#loc480)
    cir.br ^bb35 loc(#loc451)
  ^bb35:  // 2 preds: ^bb33, ^bb34
    cir.br ^bb36 loc(#loc451)
  ^bb36:  // pred: ^bb35
    %57 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc481)
    %58 = cir.cast(bitcast, %57 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc481)
    cir.call @free(%58) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc482)
    cir.br ^bb37 loc(#loc423)
  ^bb37:  // pred: ^bb36
    cir.br ^bb38 loc(#loc419)
  ^bb38:  // 2 preds: ^bb1, ^bb37
    cir.br ^bb39 loc(#loc419)
  ^bb39:  // pred: ^bb38
    cir.return loc(#loc410)
  } loc(#loc819)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc849)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc850)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc851)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc852)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc853)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc495)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc496)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc854)
    cir.br ^bb1 loc(#loc855)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc490)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc490)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc851)
    cir.br ^bb2 loc(#loc856)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc856)
  ^bb3:  // pred: ^bb24
    %9 = cir.const #cir.int<0> : !s32i loc(#loc502)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc502)
    cir.brcond %10 ^bb4, ^bb25 loc(#loc502)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %11 = cir.const #cir.int<2> : !s32i loc(#loc503)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc504)
    %13 = cir.const #cir.int<6> : !s32i loc(#loc505)
    %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc506)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc857)
    cir.br ^bb5 loc(#loc858)
  ^bb5:  // pred: ^bb4
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc511)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc512)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc512)
    %18 = cir.cmp(eq, %15, %17) : !s32i, !cir.bool loc(#loc859)
    cir.brcond %18 ^bb6, ^bb7 loc(#loc860)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc514)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc510)
  ^bb8:  // pred: ^bb7
    %19 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc861)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc517)
    %21 = cir.const #cir.int<16> : !u64i loc(#loc862)
    cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc863)
    %22 = cir.const #cir.int<2> : !s32i loc(#loc522)
    %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc522)
    %24 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc136)
    cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc864)
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc524)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc524)
    %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc525)
    %28 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc139)
    %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc140)
    cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc865)
    %30 = cir.const #cir.int<27015> : !s32i loc(#loc528)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc528)
    %32 = cir.call @htons(%31) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc529)
    %33 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc145)
    cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc866)
    cir.br ^bb9 loc(#loc867)
  ^bb9:  // pred: ^bb8
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc534)
    %35 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc868)
    %36 = cir.const #cir.int<16> : !u64i loc(#loc869)
    %37 = cir.cast(integral, %36 : !u64i), !u32i loc(#loc869)
    %38 = cir.call @connect(%34, %35, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc539)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc540)
    %40 = cir.unary(minus, %39) : !s32i, !s32i loc(#loc540)
    %41 = cir.cmp(eq, %38, %40) : !s32i, !cir.bool loc(#loc870)
    cir.brcond %41 ^bb10, ^bb11 loc(#loc871)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc542)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc533)
  ^bb12:  // pred: ^bb11
    %42 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc543)
    %43 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc544)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc544)
    %45 = cir.const #cir.int<3> : !s32i loc(#loc545)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc545)
    %47 = cir.const #cir.int<4> : !u64i loc(#loc545)
    %48 = cir.binop(mul, %46, %47) : !u64i loc(#loc545)
    %49 = cir.const #cir.int<2> : !s32i loc(#loc545)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc545)
    %51 = cir.binop(add, %48, %50) : !u64i loc(#loc545)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc546)
    %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc546)
    %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc872)
    %55 = cir.const #cir.int<0> : !s32i loc(#loc547)
    %56 = cir.call @recv(%42, %44, %54, %55) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc548)
    %57 = cir.cast(integral, %56 : !s64i), !s32i loc(#loc548)
    cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc873)
    cir.br ^bb13 loc(#loc874)
  ^bb13:  // pred: ^bb12
    %58 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc553)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc554)
    %60 = cir.unary(minus, %59) : !s32i, !s32i loc(#loc554)
    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc875)
    cir.brcond %61 ^bb14, ^bb15 loc(#loc555)
  ^bb14:  // pred: ^bb13
    %62 = cir.const #true loc(#loc555)
    cir.br ^bb20(%62 : !cir.bool) loc(#loc555)
  ^bb15:  // pred: ^bb13
    %63 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc556)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc557)
    %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc876)
    cir.brcond %65 ^bb16, ^bb17 loc(#loc555)
  ^bb16:  // pred: ^bb15
    %66 = cir.const #true loc(#loc555)
    cir.br ^bb18(%66 : !cir.bool) loc(#loc555)
  ^bb17:  // pred: ^bb15
    %67 = cir.const #false loc(#loc555)
    cir.br ^bb18(%67 : !cir.bool) loc(#loc555)
  ^bb18(%68: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":330:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc555)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%68 : !cir.bool) loc(#loc555)
  ^bb20(%69: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":330:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc555)
  ^bb21:  // pred: ^bb20
    cir.brcond %69 ^bb22, ^bb23 loc(#loc877)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc559)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc552)
  ^bb24:  // pred: ^bb23
    %70 = cir.const #cir.int<0> : !s32i loc(#loc560)
    %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc560)
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc561)
    %73 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc562)
    %74 = cir.ptr_stride(%73 : !cir.ptr<!s8i>, %72 : !s32i), !cir.ptr<!s8i> loc(#loc562)
    cir.store %71, %74 : !s8i, !cir.ptr<!s8i> loc(#loc878)
    %75 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc563)
    %76 = cir.call @atoi(%75) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc564)
    cir.store %76, %4 : !s32i, !cir.ptr<!s32i> loc(#loc879)
    cir.br ^bb3 loc(#loc501)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc501)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc880)
  ^bb27:  // pred: ^bb26
    %77 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc569)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc570)
    %79 = cir.unary(minus, %78) : !s32i, !s32i loc(#loc570)
    %80 = cir.cmp(ne, %77, %79) : !s32i, !cir.bool loc(#loc881)
    cir.brcond %80 ^bb28, ^bb29 loc(#loc882)
  ^bb28:  // pred: ^bb27
    %81 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc572)
    %82 = cir.call @close(%81) : (!s32i) -> !s32i loc(#loc573)
    cir.br ^bb29 loc(#loc568)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc568)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc499)
  ^bb31:  // pred: ^bb30
    %83 = cir.const #cir.int<1> : !s32i loc(#loc574)
    %84 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc818)
    cir.store %83, %84 : !s32i, !cir.ptr<!s32i> loc(#loc883)
    %85 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc576)
    cir.call @goodB2G2Sink(%85) : (!s32i) -> () loc(#loc577)
    cir.return loc(#loc484)
  } loc(#loc848)
  cir.global "private" internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc884)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc582, #loc583])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc887)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc888)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc886)
    cir.store %arg0, %2 : !s32i, !cir.ptr<!s32i> loc(#loc588)
    cir.br ^bb1 loc(#loc889)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc884)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc591)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc591)
    cir.brcond %5 ^bb2, ^bb30 loc(#loc890)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc891)
  ^bb3:  // pred: ^bb2
    %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc595)
    %7 = cir.const #cir.int<10> : !s32i loc(#loc596)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc596)
    %9 = cir.const #cir.int<4> : !u64i loc(#loc892)
    %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc893)
    %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc595)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc894)
    cir.store %12, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc888)
    cir.br ^bb4 loc(#loc895)
  ^bb4:  // pred: ^bb3
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc601)
    %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc602)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc602)
    %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!s32i>, !cir.bool loc(#loc896)
    cir.brcond %16 ^bb5, ^bb6 loc(#loc897)
  ^bb5:  // pred: ^bb4
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc604)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc605)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc606)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc604)
    cir.br ^bb6 loc(#loc600)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc600)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc898)
  ^bb8:  // pred: ^bb7
    %20 = cir.const #cir.int<0> : !s32i loc(#loc609)
    cir.store %20, %0 : !s32i, !cir.ptr<!s32i> loc(#loc899)
    cir.br ^bb9 loc(#loc898)
  ^bb9:  // 2 preds: ^bb8, ^bb13
    %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc611)
    %22 = cir.const #cir.int<10> : !s32i loc(#loc612)
    %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc900)
    cir.brcond %23 ^bb10, ^bb14 loc(#loc613)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc901)
  ^bb11:  // pred: ^bb10
    %24 = cir.const #cir.int<0> : !s32i loc(#loc615)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc616)
    %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc617)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s32i>, %26 : !s32i), !cir.ptr<!s32i> loc(#loc618)
    cir.store %24, %27 : !s32i, !cir.ptr<!s32i> loc(#loc902)
    cir.br ^bb12 loc(#loc608)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc608)
  ^bb13:  // pred: ^bb12
    %28 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc619)
    %29 = cir.unary(inc, %28) : !s32i, !s32i loc(#loc620)
    cir.store %29, %0 : !s32i, !cir.ptr<!s32i> loc(#loc903)
    cir.br ^bb9 loc(#loc898)
  ^bb14:  // pred: ^bb9
    cir.br ^bb15 loc(#loc608)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc904)
  ^bb16:  // pred: ^bb15
    %30 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc623)
    %31 = cir.const #cir.int<0> : !s32i loc(#loc624)
    %32 = cir.cmp(ge, %30, %31) : !s32i, !cir.bool loc(#loc905)
    cir.brcond %32 ^bb17, ^bb26 loc(#loc906)
  ^bb17:  // pred: ^bb16
    %33 = cir.const #cir.int<1> : !s32i loc(#loc628)
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc629)
    %35 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc630)
    %36 = cir.ptr_stride(%34 : !cir.ptr<!s32i>, %35 : !s32i), !cir.ptr<!s32i> loc(#loc631)
    cir.store %33, %36 : !s32i, !cir.ptr<!s32i> loc(#loc907)
    cir.br ^bb18 loc(#loc908)
  ^bb18:  // pred: ^bb17
    %37 = cir.const #cir.int<0> : !s32i loc(#loc634)
    cir.store %37, %0 : !s32i, !cir.ptr<!s32i> loc(#loc909)
    cir.br ^bb19 loc(#loc908)
  ^bb19:  // 2 preds: ^bb18, ^bb23
    %38 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc636)
    %39 = cir.const #cir.int<10> : !s32i loc(#loc637)
    %40 = cir.cmp(lt, %38, %39) : !s32i, !cir.bool loc(#loc910)
    cir.brcond %40 ^bb20, ^bb24 loc(#loc638)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc911)
  ^bb21:  // pred: ^bb20
    %41 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc640)
    %42 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc641)
    %43 = cir.ptr_stride(%41 : !cir.ptr<!s32i>, %42 : !s32i), !cir.ptr<!s32i> loc(#loc642)
    %44 = cir.load %43 : !cir.ptr<!s32i>, !s32i loc(#loc640)
    cir.call @printIntLine(%44) : (!s32i) -> () loc(#loc643)
    cir.br ^bb22 loc(#loc633)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc633)
  ^bb23:  // pred: ^bb22
    %45 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc644)
    %46 = cir.unary(inc, %45) : !s32i, !s32i loc(#loc645)
    cir.store %46, %0 : !s32i, !cir.ptr<!s32i> loc(#loc912)
    cir.br ^bb19 loc(#loc908)
  ^bb24:  // pred: ^bb19
    cir.br ^bb25 loc(#loc633)
  ^bb25:  // pred: ^bb24
    cir.br ^bb27 loc(#loc626)
  ^bb26:  // pred: ^bb16
    %47 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc646)
    %48 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc646)
    cir.call @printLine(%48) : (!cir.ptr<!s8i>) -> () loc(#loc647)
    cir.br ^bb27 loc(#loc622)
  ^bb27:  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc622)
  ^bb28:  // pred: ^bb27
    %49 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc648)
    %50 = cir.cast(bitcast, %49 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc648)
    cir.call @free(%50) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc649)
    cir.br ^bb29 loc(#loc594)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc590)
  ^bb30:  // 2 preds: ^bb1, ^bb29
    cir.br ^bb31 loc(#loc590)
  ^bb31:  // pred: ^bb30
    cir.return loc(#loc581)
  } loc(#loc885)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc914)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc654)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc655)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc915)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc657)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc916)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc659)
    %5 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc884)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc917)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc661)
    cir.call @goodG2BSink(%6) : (!s32i) -> () loc(#loc662)
    cir.return loc(#loc651)
  } loc(#loc913)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":111:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":45:1)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":45:24)
#loc18 = loc("/usr/include/stdlib.h":672:1)
#loc19 = loc("/usr/include/stdlib.h":672:45)
#loc20 = loc("/usr/include/stdlib.h":756:1)
#loc21 = loc("/usr/include/stdlib.h":756:70)
#loc22 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc23 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":73:27)
#loc25 = loc("/usr/include/stdlib.h":687:1)
#loc26 = loc("/usr/include/stdlib.h":687:32)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":47:1)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":78:1)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":52:13)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":52:17)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":53:13)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":53:58)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":48:1)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":49:5)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":77:5)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":49:8)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":50:5)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":51:9)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":76:9)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":53:35)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":53:42)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":53:47)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":53:57)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":54:13)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":54:43)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":54:17)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":54:27)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":54:33)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":54:34)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":54:40)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":54:39)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":56:13)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":59:13)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":56:22)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":56:18)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":56:25)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":56:29)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":56:27)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":57:13)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":58:29)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":58:17)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":58:24)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":58:25)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":56:34)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":56:33)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":62:13)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":74:13)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":62:17)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":62:25)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":63:13)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":70:13)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":72:13)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":64:32)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":64:17)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":64:24)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":64:28)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":66:17)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":69:17)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":66:25)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":66:21)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":66:28)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":66:32)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":66:30)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":67:17)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":68:34)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":68:41)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":68:42)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":68:21)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":66:37)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":66:36)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":73:17)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":75:18)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":75:13)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":80:1)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":143:1)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":90:9)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":90:13)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":91:9)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":91:28)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":92:9)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":92:32)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":93:9)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":93:41)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":82:5)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":82:9)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":84:13)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":84:12)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":84:5)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":85:5)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":140:5)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":94:9)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":129:17)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":129:16)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":104:36)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":104:45)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":104:58)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":104:29)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":104:13)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":104:69)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":105:13)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":108:13)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":105:17)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":105:34)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":106:13)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":107:17)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":109:20)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":109:21)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":109:30)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":109:33)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":109:47)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":109:13)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":109:48)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":110:34)
#loc136 = loc("/usr/include/netinet/in.h":249:5)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":110:13)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":111:39)
#loc139 = loc("/usr/include/netinet/in.h":251:20)
#loc140 = loc("/usr/include/netinet/in.h":33:15)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":111:13)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":111:59)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":112:38)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":112:32)
#loc145 = loc("/usr/include/netinet/in.h":250:15)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":112:13)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":112:46)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":113:13)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":116:13)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":113:25)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":113:58)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":113:59)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":113:68)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":113:82)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":113:17)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":113:88)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":114:13)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":115:17)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":119:31)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":119:46)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":119:59)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":119:77)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":119:80)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":119:26)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":119:13)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":119:81)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":120:13)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":123:13)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":120:17)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":120:31)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":120:47)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":120:61)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":121:13)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":122:17)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":125:39)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":125:25)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":125:13)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":127:25)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":127:20)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":127:13)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":127:36)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":130:9)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":133:9)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":130:13)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":130:30)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":131:9)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":132:26)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":132:13)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":141:17)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":141:5)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":142:13)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":142:5)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":401:1)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":406:1)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":403:5)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":403:14)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":404:5)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":404:14)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":405:5)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":405:13)
#loc202 = loc("/usr/include/stdlib.h":575:1)
#loc203 = loc("/usr/include/stdlib.h":575:41)
#loc204 = loc("/usr/include/time.h":76:1)
#loc205 = loc("/usr/include/time.h":76:38)
#loc206 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc207 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":422:15)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":424:15)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":427:15)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":429:15)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":417:1)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":432:1)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":418:1)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":420:27)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":420:22)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":420:5)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":422:5)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":423:5)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":423:72)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":424:5)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":427:5)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":428:5)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":428:71)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":429:5)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":431:12)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":431:5)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":150:1)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":150:29)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":160:19)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":185:27)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":155:1)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":190:1)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":165:13)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":165:17)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":166:13)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":166:58)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":156:1)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":157:5)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":189:5)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":157:8)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":158:5)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":161:5)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":163:5)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":160:9)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":164:9)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":188:9)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":166:35)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":166:42)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":166:47)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":166:57)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":167:13)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":167:43)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":167:17)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":167:27)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":167:33)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":167:34)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":167:40)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":167:39)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":169:13)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":172:13)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":169:22)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":169:18)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":169:25)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":169:29)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":169:27)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":170:13)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":171:29)
#loc275 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":171:17)
#loc276 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":171:24)
#loc277 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":171:25)
#loc278 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":169:34)
#loc279 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":169:33)
#loc280 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":174:13)
#loc281 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":186:13)
#loc282 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":174:17)
#loc283 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":174:25)
#loc285 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":174:30)
#loc286 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":174:38)
#loc287 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":174:40)
#loc288 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":175:13)
#loc289 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":182:13)
#loc290 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":184:13)
#loc291 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":176:32)
#loc292 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":176:17)
#loc293 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":176:24)
#loc294 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":176:28)
#loc295 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":178:17)
#loc296 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":181:17)
#loc297 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":178:25)
#loc298 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":178:21)
#loc299 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":178:28)
#loc300 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":178:32)
#loc301 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":178:30)
#loc302 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":179:17)
#loc303 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":180:34)
#loc304 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":180:41)
#loc305 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":180:42)
#loc306 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":180:21)
#loc307 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":178:37)
#loc308 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":178:36)
#loc309 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":185:17)
#loc310 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":187:18)
#loc311 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":187:13)
#loc312 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":192:1)
#loc313 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":255:1)
#loc314 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":202:9)
#loc315 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":202:13)
#loc316 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":203:9)
#loc317 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":203:28)
#loc318 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":204:9)
#loc319 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":204:32)
#loc320 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":205:9)
#loc321 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":205:41)
#loc322 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":194:5)
#loc323 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":194:9)
#loc324 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":196:13)
#loc325 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":196:12)
#loc326 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":196:5)
#loc327 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":197:5)
#loc328 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":252:5)
#loc329 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":206:9)
#loc330 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":241:17)
#loc331 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":241:16)
#loc332 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":216:36)
#loc333 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":216:45)
#loc334 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":216:58)
#loc335 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":216:29)
#loc336 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":216:13)
#loc337 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":216:69)
#loc338 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":217:13)
#loc339 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":220:13)
#loc340 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":217:17)
#loc341 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":217:34)
#loc342 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":218:13)
#loc343 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":219:17)
#loc344 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":221:20)
#loc345 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":221:21)
#loc346 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":221:30)
#loc347 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":221:33)
#loc348 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":221:47)
#loc349 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":221:13)
#loc350 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":221:48)
#loc351 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":222:34)
#loc352 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":222:13)
#loc353 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":223:49)
#loc354 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":223:39)
#loc355 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":223:13)
#loc356 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":223:59)
#loc357 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":224:38)
#loc358 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":224:32)
#loc359 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":224:13)
#loc360 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":224:46)
#loc361 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":225:13)
#loc362 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":228:13)
#loc363 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":225:25)
#loc364 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":225:58)
#loc365 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":225:59)
#loc366 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":225:68)
#loc367 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":225:82)
#loc368 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":225:17)
#loc369 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":225:88)
#loc370 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":226:13)
#loc371 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":227:17)
#loc372 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":231:31)
#loc373 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":231:46)
#loc374 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":231:59)
#loc375 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":231:77)
#loc376 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":231:80)
#loc377 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":231:26)
#loc378 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":231:13)
#loc379 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":231:81)
#loc380 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":232:13)
#loc381 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":235:13)
#loc382 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":232:17)
#loc383 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":232:31)
#loc385 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":232:47)
#loc386 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":232:61)
#loc387 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":233:13)
#loc388 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":234:17)
#loc389 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":237:39)
#loc390 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":237:25)
#loc391 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":237:13)
#loc392 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":239:25)
#loc393 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":239:20)
#loc394 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":239:13)
#loc395 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":239:36)
#loc396 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":242:9)
#loc397 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":245:9)
#loc398 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":242:13)
#loc399 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":242:30)
#loc400 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":243:9)
#loc401 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":244:26)
#loc402 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":244:13)
#loc403 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":253:22)
#loc404 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":253:5)
#loc405 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":254:18)
#loc406 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":254:5)
#loc407 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":151:1)
#loc408 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":151:29)
#loc409 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":258:1)
#loc410 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":288:1)
#loc413 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":263:13)
#loc414 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":263:17)
#loc415 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":264:13)
#loc416 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":264:58)
#loc417 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":259:1)
#loc418 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":260:5)
#loc419 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":287:5)
#loc420 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":260:8)
#loc421 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":261:5)
#loc422 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":262:9)
#loc423 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":286:9)
#loc424 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":264:35)
#loc425 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":264:42)
#loc426 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":264:47)
#loc427 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":264:57)
#loc428 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":265:13)
#loc429 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":265:43)
#loc430 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":265:17)
#loc431 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":265:27)
#loc432 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":265:33)
#loc433 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":265:34)
#loc434 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":265:40)
#loc435 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":265:39)
#loc436 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":267:13)
#loc437 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":270:13)
#loc438 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":267:22)
#loc439 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":267:18)
#loc440 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":267:25)
#loc441 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":267:29)
#loc442 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":267:27)
#loc443 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":268:13)
#loc444 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":269:29)
#loc445 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":269:17)
#loc446 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":269:24)
#loc447 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":269:25)
#loc448 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":267:34)
#loc449 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":267:33)
#loc450 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":272:13)
#loc451 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":284:13)
#loc452 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":272:17)
#loc453 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":272:25)
#loc455 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":272:30)
#loc456 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":272:38)
#loc457 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":272:40)
#loc458 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":273:13)
#loc459 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":280:13)
#loc460 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":282:13)
#loc461 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":274:32)
#loc462 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":274:17)
#loc463 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":274:24)
#loc464 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":274:28)
#loc465 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":276:17)
#loc466 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":279:17)
#loc467 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":276:25)
#loc468 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":276:21)
#loc469 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":276:28)
#loc470 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":276:32)
#loc471 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":276:30)
#loc472 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":277:17)
#loc473 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":278:34)
#loc474 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":278:41)
#loc475 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":278:42)
#loc476 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":278:21)
#loc477 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":276:37)
#loc478 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":276:36)
#loc479 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":283:27)
#loc480 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":283:17)
#loc481 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":285:18)
#loc482 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":285:13)
#loc483 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":290:1)
#loc484 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":353:1)
#loc485 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":300:9)
#loc486 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":300:13)
#loc487 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":301:9)
#loc488 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":301:28)
#loc489 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":302:9)
#loc490 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":302:32)
#loc491 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":303:9)
#loc492 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":303:41)
#loc493 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":292:5)
#loc494 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":292:9)
#loc495 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":294:13)
#loc496 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":294:12)
#loc497 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":294:5)
#loc498 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":295:5)
#loc499 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":350:5)
#loc500 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":304:9)
#loc501 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":339:17)
#loc502 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":339:16)
#loc503 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":314:36)
#loc504 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":314:45)
#loc505 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":314:58)
#loc506 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":314:29)
#loc507 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":314:13)
#loc508 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":314:69)
#loc509 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":315:13)
#loc510 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":318:13)
#loc511 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":315:17)
#loc512 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":315:34)
#loc513 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":316:13)
#loc514 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":317:17)
#loc515 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":319:20)
#loc516 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":319:21)
#loc517 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":319:30)
#loc518 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":319:33)
#loc519 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":319:47)
#loc520 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":319:13)
#loc521 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":319:48)
#loc522 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":320:34)
#loc523 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":320:13)
#loc524 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":321:49)
#loc525 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":321:39)
#loc526 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":321:13)
#loc527 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":321:59)
#loc528 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":322:38)
#loc529 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":322:32)
#loc530 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":322:13)
#loc531 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":322:46)
#loc532 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":323:13)
#loc533 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":326:13)
#loc534 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":323:25)
#loc535 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":323:58)
#loc536 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":323:59)
#loc537 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":323:68)
#loc538 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":323:82)
#loc539 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":323:17)
#loc540 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":323:88)
#loc541 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":324:13)
#loc542 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":325:17)
#loc543 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":329:31)
#loc544 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":329:46)
#loc545 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":329:59)
#loc546 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":329:77)
#loc547 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":329:80)
#loc548 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":329:26)
#loc549 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":329:13)
#loc550 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":329:81)
#loc551 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":330:13)
#loc552 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":333:13)
#loc553 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":330:17)
#loc554 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":330:31)
#loc556 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":330:47)
#loc557 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":330:61)
#loc558 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":331:13)
#loc559 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":332:17)
#loc560 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":335:39)
#loc561 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":335:25)
#loc562 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":335:13)
#loc563 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":337:25)
#loc564 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":337:20)
#loc565 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":337:13)
#loc566 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":337:36)
#loc567 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":340:9)
#loc568 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":343:9)
#loc569 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":340:13)
#loc570 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":340:30)
#loc571 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":341:9)
#loc572 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":342:26)
#loc573 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":342:13)
#loc574 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":351:22)
#loc575 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":351:5)
#loc576 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":352:18)
#loc577 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":352:5)
#loc578 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":152:1)
#loc579 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":152:28)
#loc580 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":356:1)
#loc581 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":387:1)
#loc584 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":361:13)
#loc585 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":361:17)
#loc586 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":362:13)
#loc587 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":362:58)
#loc588 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":357:1)
#loc589 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":358:5)
#loc590 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":386:5)
#loc591 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":358:8)
#loc592 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":359:5)
#loc593 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":360:9)
#loc594 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":385:9)
#loc595 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":362:35)
#loc596 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":362:42)
#loc597 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":362:47)
#loc598 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":362:57)
#loc599 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":363:13)
#loc600 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":363:43)
#loc601 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":363:17)
#loc602 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":363:27)
#loc603 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":363:33)
#loc604 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":363:34)
#loc605 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":363:40)
#loc606 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":363:39)
#loc607 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":365:13)
#loc608 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":368:13)
#loc609 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":365:22)
#loc610 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":365:18)
#loc611 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":365:25)
#loc612 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":365:29)
#loc613 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":365:27)
#loc614 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":366:13)
#loc615 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":367:29)
#loc616 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":367:17)
#loc617 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":367:24)
#loc618 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":367:25)
#loc619 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":365:34)
#loc620 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":365:33)
#loc621 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":371:13)
#loc622 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":383:13)
#loc623 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":371:17)
#loc624 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":371:25)
#loc625 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":372:13)
#loc626 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":379:13)
#loc627 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":381:13)
#loc628 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":373:32)
#loc629 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":373:17)
#loc630 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":373:24)
#loc631 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":373:28)
#loc632 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":375:17)
#loc633 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":378:17)
#loc634 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":375:25)
#loc635 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":375:21)
#loc636 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":375:28)
#loc637 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":375:32)
#loc638 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":375:30)
#loc639 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":376:17)
#loc640 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":377:34)
#loc641 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":377:41)
#loc642 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":377:42)
#loc643 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":377:21)
#loc644 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":375:37)
#loc645 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":375:36)
#loc646 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":382:27)
#loc647 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":382:17)
#loc648 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":384:18)
#loc649 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":384:13)
#loc650 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":389:1)
#loc651 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":399:1)
#loc652 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":391:5)
#loc653 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":391:9)
#loc654 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":393:13)
#loc655 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":393:12)
#loc656 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":393:5)
#loc657 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":396:12)
#loc658 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":396:5)
#loc659 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":397:21)
#loc660 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":397:5)
#loc661 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":398:17)
#loc662 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_21.c":398:5)
#loc663 = loc(fused[#loc1, #loc2])
#loc664 = loc(fused[#loc3, #loc4])
#loc665 = loc(fused[#loc6, #loc7])
#loc666 = loc(fused[#loc8, #loc9])
#loc667 = loc(fused[#loc10, #loc11])
#loc668 = loc(fused[#loc12, #loc13])
#loc669 = loc(fused[#loc14, #loc15])
#loc670 = loc(fused[#loc16, #loc17])
#loc671 = loc(fused[#loc18, #loc19])
#loc672 = loc(fused[#loc20, #loc21])
#loc673 = loc(fused[#loc22, #loc23])
#loc674 = loc(fused[#loc25, #loc26])
#loc675 = loc(fused[#loc27, #loc28])
#loc677 = loc(fused[#loc31, #loc32])
#loc678 = loc(fused[#loc33, #loc34])
#loc679 = loc(fused[#loc36, #loc37])
#loc680 = loc(fused[#loc39, #loc37])
#loc681 = loc(fused[#loc40, #loc41])
#loc682 = loc(fused[#loc44, #loc45])
#loc683 = loc(fused[#loc43, #loc45])
#loc684 = loc(fused[#loc42, #loc34])
#loc685 = loc(fused[#loc46, #loc47])
#loc686 = loc(fused[#loc48, #loc49])
#loc687 = loc(fused[#loc50, #loc47])
#loc688 = loc(fused[#loc54, #loc55])
#loc689 = loc(fused[#loc57, #loc56])
#loc690 = loc(fused[#loc58, #loc59])
#loc691 = loc(fused[#loc61, #loc55])
#loc692 = loc(fused[#loc63, #loc62])
#loc693 = loc(fused[#loc67, #loc66])
#loc694 = loc(fused[#loc68, #loc69])
#loc695 = loc(fused[#loc70, #loc71])
#loc696 = loc(fused[#loc72, #loc73, #loc74, #loc69])
#loc697 = loc(fused[#loc76, #loc75])
#loc698 = loc(fused[#loc79, #loc80])
#loc699 = loc(fused[#loc82, #loc81])
#loc700 = loc(fused[#loc83, #loc84])
#loc701 = loc(fused[#loc86, #loc80])
#loc702 = loc(fused[#loc92, #loc91])
#loc703 = loc(fused[#loc96, #loc97])
#loc704 = loc(fused[#loc98, #loc99])
#loc705 = loc(fused[#loc100, #loc101])
#loc706 = loc(fused[#loc102, #loc103])
#loc707 = loc(fused[#loc104, #loc105])
#loc708 = loc(fused[#loc106, #loc107])
#loc709 = loc(fused[#loc110, #loc108])
#loc710 = loc(fused[#loc111, #loc112])
#loc711 = loc(fused[#loc113, #loc114])
#loc712 = loc(fused[#loc120, #loc121])
#loc713 = loc(fused[#loc122, #loc123])
#loc714 = loc(fused[#loc124, #loc125])
#loc715 = loc(fused[#loc126, #loc123])
#loc716 = loc(fused[#loc128, #loc129])
#loc717 = loc(fused[#loc131, #loc132])
#loc718 = loc(fused[#loc133, #loc134])
#loc719 = loc(fused[#loc137, #loc135])
#loc720 = loc(fused[#loc141, #loc142])
#loc721 = loc(fused[#loc146, #loc147])
#loc722 = loc(fused[#loc148, #loc149])
#loc723 = loc(fused[#loc151, #loc152])
#loc724 = loc(fused[#loc153, #loc154])
#loc725 = loc(fused[#loc155, #loc156])
#loc726 = loc(fused[#loc157, #loc149])
#loc727 = loc(fused[#loc161, #loc162])
#loc728 = loc(fused[#loc165, #loc166])
#loc729 = loc(fused[#loc167, #loc168])
#loc730 = loc(fused[#loc169, #loc170])
#loc731 = loc(fused[#loc172, #loc173])
#loc732 = loc(fused[#loc174, #loc168])
#loc733 = loc(fused[#loc178, #loc176])
#loc734 = loc(fused[#loc181, #loc182])
#loc735 = loc(fused[#loc183, #loc184])
#loc736 = loc(fused[#loc185, #loc186])
#loc737 = loc(fused[#loc187, #loc184])
#loc738 = loc(fused[#loc191, #loc190])
#loc739 = loc(fused[#loc194, #loc195])
#loc740 = loc(fused[#loc196, #loc197])
#loc741 = loc(fused[#loc198, #loc199])
#loc742 = loc(fused[#loc200, #loc201])
#loc743 = loc(fused[#loc202, #loc203])
#loc744 = loc(fused[#loc204, #loc205])
#loc745 = loc(fused[#loc206, #loc207])
#loc746 = loc(fused[#loc212, #loc213])
#loc749 = loc(fused[#loc223, #loc224])
#loc750 = loc(fused[#loc227, #loc228])
#loc751 = loc(fused[#loc231, #loc230])
#loc752 = loc(fused[#loc232, #loc233])
#loc753 = loc(fused[#loc236, #loc237])
#loc755 = loc(fused[#loc240, #loc241])
#loc756 = loc(fused[#loc242, #loc243])
#loc757 = loc(fused[#loc245, #loc246])
#loc758 = loc(fused[#loc248, #loc249, #loc250, #loc246])
#loc759 = loc(fused[#loc252, #loc253])
#loc760 = loc(fused[#loc256, #loc257])
#loc761 = loc(fused[#loc255, #loc257])
#loc762 = loc(fused[#loc254, #loc243])
#loc763 = loc(fused[#loc258, #loc259])
#loc764 = loc(fused[#loc260, #loc261])
#loc765 = loc(fused[#loc262, #loc259])
#loc766 = loc(fused[#loc266, #loc267])
#loc767 = loc(fused[#loc269, #loc268])
#loc768 = loc(fused[#loc270, #loc271])
#loc769 = loc(fused[#loc273, #loc267])
#loc770 = loc(fused[#loc275, #loc274])
#loc771 = loc(fused[#loc279, #loc278])
#loc772 = loc(fused[#loc280, #loc281])
#loc773 = loc(fused[#loc282, #loc283])
#loc774 = loc(fused[#loc285, #loc287])
#loc775 = loc(fused[#loc288, #loc289, #loc290, #loc281])
#loc776 = loc(fused[#loc292, #loc291])
#loc777 = loc(fused[#loc295, #loc296])
#loc778 = loc(fused[#loc298, #loc297])
#loc779 = loc(fused[#loc299, #loc300])
#loc780 = loc(fused[#loc302, #loc296])
#loc781 = loc(fused[#loc308, #loc307])
#loc782 = loc(fused[#loc312, #loc313])
#loc783 = loc(fused[#loc314, #loc315])
#loc784 = loc(fused[#loc316, #loc317])
#loc785 = loc(fused[#loc318, #loc319])
#loc786 = loc(fused[#loc320, #loc321])
#loc787 = loc(fused[#loc322, #loc323])
#loc788 = loc(fused[#loc326, #loc324])
#loc789 = loc(fused[#loc327, #loc328])
#loc790 = loc(fused[#loc329, #loc330])
#loc791 = loc(fused[#loc336, #loc337])
#loc792 = loc(fused[#loc338, #loc339])
#loc793 = loc(fused[#loc340, #loc341])
#loc794 = loc(fused[#loc342, #loc339])
#loc795 = loc(fused[#loc344, #loc345])
#loc796 = loc(fused[#loc347, #loc348])
#loc797 = loc(fused[#loc349, #loc350])
#loc798 = loc(fused[#loc352, #loc351])
#loc799 = loc(fused[#loc355, #loc356])
#loc800 = loc(fused[#loc359, #loc360])
#loc801 = loc(fused[#loc361, #loc362])
#loc802 = loc(fused[#loc364, #loc365])
#loc803 = loc(fused[#loc366, #loc367])
#loc804 = loc(fused[#loc368, #loc369])
#loc805 = loc(fused[#loc370, #loc362])
#loc806 = loc(fused[#loc374, #loc375])
#loc807 = loc(fused[#loc378, #loc379])
#loc808 = loc(fused[#loc380, #loc381])
#loc809 = loc(fused[#loc382, #loc383])
#loc810 = loc(fused[#loc385, #loc386])
#loc811 = loc(fused[#loc387, #loc381])
#loc812 = loc(fused[#loc391, #loc389])
#loc813 = loc(fused[#loc394, #loc395])
#loc814 = loc(fused[#loc396, #loc397])
#loc815 = loc(fused[#loc398, #loc399])
#loc816 = loc(fused[#loc400, #loc397])
#loc817 = loc(fused[#loc404, #loc403])
#loc818 = loc(fused[#loc407, #loc408])
#loc819 = loc(fused[#loc409, #loc410])
#loc821 = loc(fused[#loc413, #loc414])
#loc822 = loc(fused[#loc415, #loc416])
#loc823 = loc(fused[#loc418, #loc419])
#loc824 = loc(fused[#loc421, #loc419])
#loc825 = loc(fused[#loc422, #loc423])
#loc826 = loc(fused[#loc426, #loc427])
#loc827 = loc(fused[#loc425, #loc427])
#loc828 = loc(fused[#loc424, #loc416])
#loc829 = loc(fused[#loc428, #loc429])
#loc830 = loc(fused[#loc430, #loc431])
#loc831 = loc(fused[#loc432, #loc429])
#loc832 = loc(fused[#loc436, #loc437])
#loc833 = loc(fused[#loc439, #loc438])
#loc834 = loc(fused[#loc440, #loc441])
#loc835 = loc(fused[#loc443, #loc437])
#loc836 = loc(fused[#loc445, #loc444])
#loc837 = loc(fused[#loc449, #loc448])
#loc838 = loc(fused[#loc450, #loc451])
#loc839 = loc(fused[#loc452, #loc453])
#loc840 = loc(fused[#loc455, #loc457])
#loc841 = loc(fused[#loc458, #loc459, #loc460, #loc451])
#loc842 = loc(fused[#loc462, #loc461])
#loc843 = loc(fused[#loc465, #loc466])
#loc844 = loc(fused[#loc468, #loc467])
#loc845 = loc(fused[#loc469, #loc470])
#loc846 = loc(fused[#loc472, #loc466])
#loc847 = loc(fused[#loc478, #loc477])
#loc848 = loc(fused[#loc483, #loc484])
#loc849 = loc(fused[#loc485, #loc486])
#loc850 = loc(fused[#loc487, #loc488])
#loc851 = loc(fused[#loc489, #loc490])
#loc852 = loc(fused[#loc491, #loc492])
#loc853 = loc(fused[#loc493, #loc494])
#loc854 = loc(fused[#loc497, #loc495])
#loc855 = loc(fused[#loc498, #loc499])
#loc856 = loc(fused[#loc500, #loc501])
#loc857 = loc(fused[#loc507, #loc508])
#loc858 = loc(fused[#loc509, #loc510])
#loc859 = loc(fused[#loc511, #loc512])
#loc860 = loc(fused[#loc513, #loc510])
#loc861 = loc(fused[#loc515, #loc516])
#loc862 = loc(fused[#loc518, #loc519])
#loc863 = loc(fused[#loc520, #loc521])
#loc864 = loc(fused[#loc523, #loc522])
#loc865 = loc(fused[#loc526, #loc527])
#loc866 = loc(fused[#loc530, #loc531])
#loc867 = loc(fused[#loc532, #loc533])
#loc868 = loc(fused[#loc535, #loc536])
#loc869 = loc(fused[#loc537, #loc538])
#loc870 = loc(fused[#loc539, #loc540])
#loc871 = loc(fused[#loc541, #loc533])
#loc872 = loc(fused[#loc545, #loc546])
#loc873 = loc(fused[#loc549, #loc550])
#loc874 = loc(fused[#loc551, #loc552])
#loc875 = loc(fused[#loc553, #loc554])
#loc876 = loc(fused[#loc556, #loc557])
#loc877 = loc(fused[#loc558, #loc552])
#loc878 = loc(fused[#loc562, #loc560])
#loc879 = loc(fused[#loc565, #loc566])
#loc880 = loc(fused[#loc567, #loc568])
#loc881 = loc(fused[#loc569, #loc570])
#loc882 = loc(fused[#loc571, #loc568])
#loc883 = loc(fused[#loc575, #loc574])
#loc884 = loc(fused[#loc578, #loc579])
#loc885 = loc(fused[#loc580, #loc581])
#loc887 = loc(fused[#loc584, #loc585])
#loc888 = loc(fused[#loc586, #loc587])
#loc889 = loc(fused[#loc589, #loc590])
#loc890 = loc(fused[#loc592, #loc590])
#loc891 = loc(fused[#loc593, #loc594])
#loc892 = loc(fused[#loc597, #loc598])
#loc893 = loc(fused[#loc596, #loc598])
#loc894 = loc(fused[#loc595, #loc587])
#loc895 = loc(fused[#loc599, #loc600])
#loc896 = loc(fused[#loc601, #loc602])
#loc897 = loc(fused[#loc603, #loc600])
#loc898 = loc(fused[#loc607, #loc608])
#loc899 = loc(fused[#loc610, #loc609])
#loc900 = loc(fused[#loc611, #loc612])
#loc901 = loc(fused[#loc614, #loc608])
#loc902 = loc(fused[#loc616, #loc615])
#loc903 = loc(fused[#loc620, #loc619])
#loc904 = loc(fused[#loc621, #loc622])
#loc905 = loc(fused[#loc623, #loc624])
#loc906 = loc(fused[#loc625, #loc626, #loc627, #loc622])
#loc907 = loc(fused[#loc629, #loc628])
#loc908 = loc(fused[#loc632, #loc633])
#loc909 = loc(fused[#loc635, #loc634])
#loc910 = loc(fused[#loc636, #loc637])
#loc911 = loc(fused[#loc639, #loc633])
#loc912 = loc(fused[#loc645, #loc644])
#loc913 = loc(fused[#loc650, #loc651])
#loc914 = loc(fused[#loc652, #loc653])
#loc915 = loc(fused[#loc656, #loc654])
#loc916 = loc(fused[#loc658, #loc657])
#loc917 = loc(fused[#loc660, #loc659])
