!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.global "private"  constant external @GLOBAL_CONST_FIVE : !s32i {alignment = 4 : i64} loc(#loc147)
  cir.func private  @strdup(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc148)
  cir.func private  @_ZdlPvm(!cir.ptr<!void>, !u64i) extra(#fn_attr) loc(#loc149)
  cir.func  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_133badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc151)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc147)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc15)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc16)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc154)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc157)
          %7 = cir.const #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc157)
          cir.store %7, %6 : !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>> loc(#loc157)
          %8 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc22)
          %9 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc23)
          %10 = cir.call @strdup(%9) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc22)
          cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc158)
        } loc(#loc156)
      } loc(#loc155)
    } loc(#loc153)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc147)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc28)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc29)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc160)
      cir.if %5 {
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc31)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc32)
        cir.call @_ZdlPvm(%7, %8) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc32)
      } loc(#loc161)
    } loc(#loc159)
    cir.return loc(#loc8)
  } loc(#loc150)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc162)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc35)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc163)
  cir.func internal private  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13L8goodB2G1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc165)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc42)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc166)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc147)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc46)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc47)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc168)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc171)
          %7 = cir.const #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc171)
          cir.store %7, %6 : !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>> loc(#loc171)
          %8 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc53)
          %9 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc54)
          %10 = cir.call @strdup(%9) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc53)
          cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc172)
        } loc(#loc170)
      } loc(#loc169)
    } loc(#loc167)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc147)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc59)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc60)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc174)
      cir.if %5 {
        %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc35)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc35)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc64)
      } else {
        %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc65)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc66)
        cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc65)
      } loc(#loc175)
    } loc(#loc173)
    cir.return loc(#loc39)
  } loc(#loc164)
  cir.func internal private  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13L8goodB2G2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc177)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc71)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc178)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc147)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc75)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc76)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc180)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc183)
          %7 = cir.const #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc183)
          cir.store %7, %6 : !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>> loc(#loc183)
          %8 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc82)
          %9 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc83)
          %10 = cir.call @strdup(%9) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc82)
          cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc184)
        } loc(#loc182)
      } loc(#loc181)
    } loc(#loc179)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc147)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc88)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc89)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc186)
      cir.if %5 {
        %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc91)
        %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc92)
        cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc91)
      } loc(#loc187)
    } loc(#loc185)
    cir.return loc(#loc68)
  } loc(#loc176)
  cir.func private  @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc188)
  cir.func internal private  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc190)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc99)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc191)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc147)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc103)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc104)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc193)
      cir.if %5 {
        %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc108)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc108)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc109)
      } else {
        %6 = cir.const #cir.int<1> : !u64i loc(#loc195)
        %7 = cir.call @_Znwm(%6) : (!u64i) -> !cir.ptr<!void> loc(#loc112)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc195)
        cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc196)
      } loc(#loc194)
    } loc(#loc192)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc147)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc116)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc117)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc198)
      cir.if %5 {
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc119)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc112)
        cir.call @_ZdlPvm(%7, %8) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc112)
      } loc(#loc199)
    } loc(#loc197)
    cir.return loc(#loc96)
  } loc(#loc189)
  cir.func internal private  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc201)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc124)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc202)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc147)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc128)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc129)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc204)
      cir.if %5 {
        %6 = cir.const #cir.int<1> : !u64i loc(#loc206)
        %7 = cir.call @_Znwm(%6) : (!u64i) -> !cir.ptr<!void> loc(#loc133)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc206)
        cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc207)
      } loc(#loc205)
    } loc(#loc203)
    cir.scope {
      %2 = cir.get_global @GLOBAL_CONST_FIVE : !cir.ptr<!s32i> loc(#loc147)
      %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc137)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc138)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc209)
      cir.if %5 {
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc140)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc133)
        cir.call @_ZdlPvm(%7, %8) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc133)
      } loc(#loc210)
    } loc(#loc208)
    cir.return loc(#loc121)
  } loc(#loc200)
  cir.func  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_134goodEv() extra(#fn_attr1) {
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13L8goodB2G1Ev() : () -> () loc(#loc143)
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13L8goodB2G2Ev() : () -> () loc(#loc144)
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13L8goodG2B1Ev() : () -> () loc(#loc145)
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13L8goodG2B2Ev() : () -> () loc(#loc146)
    cir.return loc(#loc142)
  } loc(#loc211)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase.h":111:1)
#loc2 = loc("../../../testcasesupport/std_testcase.h":111:18)
#loc3 = loc("/usr/include/string.h":187:1)
#loc4 = loc("/usr/include/string.h":188:35)
#loc5 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":140:1)
#loc6 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":141:41)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":26:1)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":45:1)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":28:5)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":28:12)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":30:12)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":30:5)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":31:5)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":38:5)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":31:8)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":31:27)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":32:5)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":33:9)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":37:9)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":34:13)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":34:31)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":36:20)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":36:27)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":36:13)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":36:35)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":39:5)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":44:5)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":39:8)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":39:27)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":40:5)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":43:16)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":26:6)
#loc33 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":68:19)
#loc36 = loc("/usr/include/stdlib.h":687:1)
#loc37 = loc("/usr/include/stdlib.h":687:32)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":52:1)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":75:1)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":54:5)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":54:12)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":56:12)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":56:5)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":57:5)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":64:5)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":57:8)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":57:27)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":58:5)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":59:9)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":63:9)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":60:13)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":60:31)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":62:20)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":62:27)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":62:13)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":62:35)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":65:5)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":74:5)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":65:8)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":65:27)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":66:5)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":69:5)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":71:5)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":68:9)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":73:9)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":73:14)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":78:1)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":96:1)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":80:5)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":80:12)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":82:12)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":82:5)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":83:5)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":90:5)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":83:8)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":83:27)
#loc77 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":84:5)
#loc78 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":85:9)
#loc79 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":89:9)
#loc80 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":86:13)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":86:31)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":88:20)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":88:27)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":88:13)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":88:35)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":91:5)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":95:5)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":91:8)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":91:27)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":92:5)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":94:9)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":94:14)
#loc93 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc94 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":99:1)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":120:1)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":101:5)
#loc98 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":101:12)
#loc99 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":103:12)
#loc100 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":103:5)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":104:5)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":113:5)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":104:8)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":104:27)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":105:5)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":108:5)
#loc107 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":110:5)
#loc108 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":107:19)
#loc109 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":107:9)
#loc110 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":112:16)
#loc111 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":112:20)
#loc112 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":99:13)
#loc113 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":112:9)
#loc114 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":114:5)
#loc115 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":119:5)
#loc116 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":114:8)
#loc117 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":114:27)
#loc118 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":115:5)
#loc119 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":118:16)
#loc120 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":123:1)
#loc121 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":139:1)
#loc122 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":125:5)
#loc123 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":125:12)
#loc124 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":127:12)
#loc125 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":127:5)
#loc126 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":128:5)
#loc127 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":132:5)
#loc128 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":128:8)
#loc129 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":128:27)
#loc130 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":129:5)
#loc131 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":131:16)
#loc132 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":131:20)
#loc133 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":123:13)
#loc134 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":131:9)
#loc135 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":133:5)
#loc136 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":138:5)
#loc137 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":133:8)
#loc138 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":133:27)
#loc139 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":134:5)
#loc140 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":137:16)
#loc141 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":141:1)
#loc142 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":147:1)
#loc143 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":143:5)
#loc144 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":144:5)
#loc145 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":145:5)
#loc146 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_13.cpp":146:5)
#loc147 = loc(fused[#loc1, #loc2])
#loc148 = loc(fused[#loc3, #loc4])
#loc149 = loc(fused[#loc5, #loc6])
#loc150 = loc(fused[#loc7, #loc8])
#loc151 = loc(fused[#loc9, #loc10])
#loc152 = loc(fused[#loc12, #loc11])
#loc153 = loc(fused[#loc13, #loc14])
#loc154 = loc(fused[#loc15, #loc16])
#loc155 = loc(fused[#loc17, #loc14])
#loc156 = loc(fused[#loc18, #loc19])
#loc157 = loc(fused[#loc20, #loc21])
#loc158 = loc(fused[#loc24, #loc25])
#loc159 = loc(fused[#loc26, #loc27])
#loc160 = loc(fused[#loc28, #loc29])
#loc161 = loc(fused[#loc30, #loc27])
#loc162 = loc(fused[#loc33, #loc34])
#loc163 = loc(fused[#loc36, #loc37])
#loc164 = loc(fused[#loc38, #loc39])
#loc165 = loc(fused[#loc40, #loc41])
#loc166 = loc(fused[#loc43, #loc42])
#loc167 = loc(fused[#loc44, #loc45])
#loc168 = loc(fused[#loc46, #loc47])
#loc169 = loc(fused[#loc48, #loc45])
#loc170 = loc(fused[#loc49, #loc50])
#loc171 = loc(fused[#loc51, #loc52])
#loc172 = loc(fused[#loc55, #loc56])
#loc173 = loc(fused[#loc57, #loc58])
#loc174 = loc(fused[#loc59, #loc60])
#loc175 = loc(fused[#loc61, #loc62, #loc63, #loc58])
#loc176 = loc(fused[#loc67, #loc68])
#loc177 = loc(fused[#loc69, #loc70])
#loc178 = loc(fused[#loc72, #loc71])
#loc179 = loc(fused[#loc73, #loc74])
#loc180 = loc(fused[#loc75, #loc76])
#loc181 = loc(fused[#loc77, #loc74])
#loc182 = loc(fused[#loc78, #loc79])
#loc183 = loc(fused[#loc80, #loc81])
#loc184 = loc(fused[#loc84, #loc85])
#loc185 = loc(fused[#loc86, #loc87])
#loc186 = loc(fused[#loc88, #loc89])
#loc187 = loc(fused[#loc90, #loc87])
#loc188 = loc(fused[#loc93, #loc94])
#loc189 = loc(fused[#loc95, #loc96])
#loc190 = loc(fused[#loc97, #loc98])
#loc191 = loc(fused[#loc100, #loc99])
#loc192 = loc(fused[#loc101, #loc102])
#loc193 = loc(fused[#loc103, #loc104])
#loc194 = loc(fused[#loc105, #loc106, #loc107, #loc102])
#loc195 = loc(fused[#loc110, #loc111])
#loc196 = loc(fused[#loc113, #loc111])
#loc197 = loc(fused[#loc114, #loc115])
#loc198 = loc(fused[#loc116, #loc117])
#loc199 = loc(fused[#loc118, #loc115])
#loc200 = loc(fused[#loc120, #loc121])
#loc201 = loc(fused[#loc122, #loc123])
#loc202 = loc(fused[#loc125, #loc124])
#loc203 = loc(fused[#loc126, #loc127])
#loc204 = loc(fused[#loc128, #loc129])
#loc205 = loc(fused[#loc130, #loc127])
#loc206 = loc(fused[#loc131, #loc132])
#loc207 = loc(fused[#loc134, #loc132])
#loc208 = loc(fused[#loc135, #loc136])
#loc209 = loc(fused[#loc137, #loc138])
#loc210 = loc(fused[#loc139, #loc136])
#loc211 = loc(fused[#loc141, #loc142])
