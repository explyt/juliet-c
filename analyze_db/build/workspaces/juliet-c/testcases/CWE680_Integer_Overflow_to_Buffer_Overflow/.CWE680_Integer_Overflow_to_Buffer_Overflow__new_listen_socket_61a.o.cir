!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_619badSourceEi(!s32i) -> !s32i loc(#loc102)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc103)
  cir.func private @printIntLine(!s32i) loc(#loc104)
  cir.func @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_613badEv() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc106)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc107)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc108)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc109)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc17)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc110)
    %6 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    %7 = cir.call @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_619badSourceEi(%6) : (!s32i) -> !s32i loc(#loc20)
    cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc111)
    cir.br ^bb1 loc(#loc112)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc25)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc25)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc113)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc114)
    cir.store %11, %0 : !u64i, !cir.ptr<!u64i> loc(#loc115)
    %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc29)
    %13 = cir.call @_Znam(%12) : (!u64i) -> !cir.ptr<!void> loc(#loc30)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc116)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc116)
    cir.store %15, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc117)
    cir.br ^bb2 loc(#loc118)
  ^bb2:  // pred: ^bb1
    %16 = cir.const #cir.int<0> : !s32i loc(#loc36)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc36)
    cir.store %17, %1 : !u64i, !cir.ptr<!u64i> loc(#loc119)
    cir.br ^bb3 loc(#loc118)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %18 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc38)
    %19 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc39)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc39)
    %21 = cir.cmp(lt, %18, %20) : !u64i, !cir.bool loc(#loc120)
    cir.brcond %21 ^bb4, ^bb8 loc(#loc120)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc121)
  ^bb5:  // pred: ^bb4
    %22 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %23 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc42)
    %24 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc43)
    %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !u64i), !cir.ptr<!s32i> loc(#loc44)
    cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc122)
    cir.br ^bb6 loc(#loc35)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc35)
  ^bb7:  // pred: ^bb6
    %26 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc45)
    %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc46)
    cir.store %27, %1 : !u64i, !cir.ptr<!u64i> loc(#loc123)
    cir.br ^bb3 loc(#loc118)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc35)
  ^bb9:  // pred: ^bb8
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc47)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc48)
    %30 = cir.ptr_stride(%28 : !cir.ptr<!s32i>, %29 : !s32i), !cir.ptr<!s32i> loc(#loc49)
    %31 = cir.load %30 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    cir.call @printIntLine(%31) : (!s32i) -> () loc(#loc50)
    %32 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc51)
    cir.delete.array %32 : <!s32i> loc(#loc51)
    cir.br ^bb10 loc(#loc24)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc8)
  } loc(#loc105)
  cir.func private @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_6113goodG2BSourceEi(!s32i) -> !s32i loc(#loc124)
  cir.func internal private @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc126)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc127)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc128)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc129)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc63)
    %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc64)
    cir.store %5, %3 : !s32i, !cir.ptr<!s32i> loc(#loc130)
    %6 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc66)
    %7 = cir.call @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_6113goodG2BSourceEi(%6) : (!s32i) -> !s32i loc(#loc67)
    cir.store %7, %3 : !s32i, !cir.ptr<!s32i> loc(#loc131)
    cir.br ^bb1 loc(#loc132)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc72)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc133)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc134)
    cir.store %11, %0 : !u64i, !cir.ptr<!u64i> loc(#loc135)
    %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc76)
    %13 = cir.call @_Znam(%12) : (!u64i) -> !cir.ptr<!void> loc(#loc77)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc136)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc136)
    cir.store %15, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc137)
    cir.br ^bb2 loc(#loc138)
  ^bb2:  // pred: ^bb1
    %16 = cir.const #cir.int<0> : !s32i loc(#loc83)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc83)
    cir.store %17, %1 : !u64i, !cir.ptr<!u64i> loc(#loc139)
    cir.br ^bb3 loc(#loc138)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %18 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc85)
    %19 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc86)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc86)
    %21 = cir.cmp(lt, %18, %20) : !u64i, !cir.bool loc(#loc140)
    cir.brcond %21 ^bb4, ^bb8 loc(#loc140)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc141)
  ^bb5:  // pred: ^bb4
    %22 = cir.const #cir.int<0> : !s32i loc(#loc88)
    %23 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc89)
    %24 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc90)
    %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !u64i), !cir.ptr<!s32i> loc(#loc91)
    cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc142)
    cir.br ^bb6 loc(#loc82)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc82)
  ^bb7:  // pred: ^bb6
    %26 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc92)
    %27 = cir.unary(inc, %26) : !u64i, !u64i loc(#loc93)
    cir.store %27, %1 : !u64i, !cir.ptr<!u64i> loc(#loc143)
    cir.br ^bb3 loc(#loc138)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc82)
  ^bb9:  // pred: ^bb8
    %28 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc94)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc95)
    %30 = cir.ptr_stride(%28 : !cir.ptr<!s32i>, %29 : !s32i), !cir.ptr<!s32i> loc(#loc96)
    %31 = cir.load %30 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    cir.call @printIntLine(%31) : (!s32i) -> () loc(#loc97)
    %32 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc98)
    cir.delete.array %32 : <!s32i> loc(#loc98)
    cir.br ^bb10 loc(#loc71)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc55)
  } loc(#loc125)
  cir.func @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_614goodEv() extra(#fn_attr) {
    cir.call @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61L7goodG2BEv() : () -> () loc(#loc101)
    cir.return loc(#loc100)
  } loc(#loc144)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":0:0)
#loc1 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":47:1)
#loc2 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":47:23)
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":49:1)
#loc8 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":68:1)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":56:9)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":56:16)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":56:26)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":57:9)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":57:14)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":51:5)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":51:9)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":53:13)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":53:12)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":53:5)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":54:22)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":54:12)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":54:5)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":54:26)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":55:5)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":67:5)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":59:21)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":59:28)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":59:38)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":59:9)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":60:37)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":49:6)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":60:28)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":60:46)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":60:9)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":61:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":64:9)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":61:18)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":61:14)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":61:21)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":61:33)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":62:9)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":63:29)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":63:13)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":63:24)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":63:25)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":61:40)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":61:39)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":65:22)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":65:33)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":65:34)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":65:9)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":66:19)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":75:1)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":75:27)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":77:1)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":96:1)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":84:9)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":84:16)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":84:26)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":85:9)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":85:14)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":79:5)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":79:9)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":81:13)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":81:12)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":81:5)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":82:26)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":82:12)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":82:5)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":82:30)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":83:5)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":95:5)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":87:21)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":87:28)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":87:38)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":87:9)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":88:37)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":77:13)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":88:28)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":88:46)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":88:9)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":89:9)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":92:9)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":89:18)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":89:14)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":89:21)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":89:33)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":90:9)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":91:29)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":91:13)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":91:24)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":91:25)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":89:40)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":89:39)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":93:22)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":93:33)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":93:34)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":93:9)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":94:19)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":98:1)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":101:1)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_61a.cpp":100:5)
#loc102 = loc(fused[#loc1, #loc2])
#loc103 = loc(fused[#loc3, #loc4])
#loc104 = loc(fused[#loc5, #loc6])
#loc105 = loc(fused[#loc7, #loc8])
#loc106 = loc(fused[#loc9, #loc10])
#loc107 = loc(fused[#loc9, #loc11])
#loc108 = loc(fused[#loc12, #loc13])
#loc109 = loc(fused[#loc14, #loc15])
#loc110 = loc(fused[#loc18, #loc16])
#loc111 = loc(fused[#loc21, #loc22])
#loc112 = loc(fused[#loc23, #loc24])
#loc113 = loc(fused[#loc26, #loc27])
#loc114 = loc(fused[#loc25, #loc27])
#loc115 = loc(fused[#loc28, #loc27])
#loc116 = loc(fused[#loc31, #loc32])
#loc117 = loc(fused[#loc33, #loc32])
#loc118 = loc(fused[#loc34, #loc35])
#loc119 = loc(fused[#loc37, #loc36])
#loc120 = loc(fused[#loc38, #loc39])
#loc121 = loc(fused[#loc40, #loc35])
#loc122 = loc(fused[#loc42, #loc41])
#loc123 = loc(fused[#loc46, #loc45])
#loc124 = loc(fused[#loc52, #loc53])
#loc125 = loc(fused[#loc54, #loc55])
#loc126 = loc(fused[#loc56, #loc57])
#loc127 = loc(fused[#loc56, #loc58])
#loc128 = loc(fused[#loc59, #loc60])
#loc129 = loc(fused[#loc61, #loc62])
#loc130 = loc(fused[#loc65, #loc63])
#loc131 = loc(fused[#loc68, #loc69])
#loc132 = loc(fused[#loc70, #loc71])
#loc133 = loc(fused[#loc73, #loc74])
#loc134 = loc(fused[#loc72, #loc74])
#loc135 = loc(fused[#loc75, #loc74])
#loc136 = loc(fused[#loc78, #loc79])
#loc137 = loc(fused[#loc80, #loc79])
#loc138 = loc(fused[#loc81, #loc82])
#loc139 = loc(fused[#loc84, #loc83])
#loc140 = loc(fused[#loc85, #loc86])
#loc141 = loc(fused[#loc87, #loc82])
#loc142 = loc(fused[#loc89, #loc88])
#loc143 = loc(fused[#loc93, #loc92])
#loc144 = loc(fused[#loc99, #loc100])
