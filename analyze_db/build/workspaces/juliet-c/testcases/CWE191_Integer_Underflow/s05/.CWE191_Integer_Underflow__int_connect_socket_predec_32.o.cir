!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__int_connect_socket_predec_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc304)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc305)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc306)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc307)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc308)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc309)
  cir.func private @close(!s32i) -> !s32i loc(#loc310)
  cir.func private @printIntLine(!s32i) loc(#loc311)
  cir.func no_proto @CWE191_Integer_Underflow__int_connect_socket_predec_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc313)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc314)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc315)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc314)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc315)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc26)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc316)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc318)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc31)
      %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc32)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc318)
      cir.scope {
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc320)
        %10 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc321)
        %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc322)
        %12 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc323)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc40)
        %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc40)
        cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc322)
        cir.scope {
          cir.do {
            cir.scope {
              %15 = cir.const #cir.int<2> : !s32i loc(#loc47)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc48)
              %17 = cir.const #cir.int<6> : !s32i loc(#loc49)
              %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc50)
              cir.store %18, %11 : !s32i, !cir.ptr<!s32i> loc(#loc326)
              cir.scope {
                %57 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc55)
                %58 = cir.const #cir.int<1> : !s32i loc(#loc56)
                %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc56)
                %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc328)
                cir.if %60 {
                  cir.break loc(#loc58)
                } loc(#loc329)
              } loc(#loc327)
              %19 = cir.cast(bitcast, %10 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc330)
              %20 = cir.const #cir.int<0> : !s32i loc(#loc61)
              %21 = cir.const #cir.int<16> : !u64i loc(#loc331)
              cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc332)
              %22 = cir.const #cir.int<2> : !s32i loc(#loc66)
              %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc66)
              %24 = cir.get_member %10[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
              cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc333)
              %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
              %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
              %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc69)
              %28 = cir.get_member %10[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
              %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
              cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc334)
              %30 = cir.const #cir.int<27015> : !s32i loc(#loc74)
              %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc74)
              %32 = cir.call @htons(%31) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc75)
              %33 = cir.get_member %10[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
              cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc335)
              cir.scope {
                %57 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc81)
                %58 = cir.cast(bitcast, %10 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc337)
                %59 = cir.const #cir.int<16> : !u64i loc(#loc338)
                %60 = cir.cast(integral, %59 : !u64i), !u32i loc(#loc338)
                %61 = cir.call @connect(%57, %58, %60) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc86)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc87)
                %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc87)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc339)
                cir.if %64 {
                  cir.break loc(#loc89)
                } loc(#loc340)
              } loc(#loc336)
              %34 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc90)
              %35 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc91)
              %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc91)
              %37 = cir.const #cir.int<3> : !s32i loc(#loc92)
              %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc92)
              %39 = cir.const #cir.int<4> : !u64i loc(#loc92)
              %40 = cir.binop(mul, %38, %39) : !u64i loc(#loc92)
              %41 = cir.const #cir.int<2> : !s32i loc(#loc92)
              %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc92)
              %43 = cir.binop(add, %40, %42) : !u64i loc(#loc92)
              %44 = cir.const #cir.int<1> : !s32i loc(#loc93)
              %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc93)
              %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc341)
              %47 = cir.const #cir.int<0> : !s32i loc(#loc94)
              %48 = cir.call @recv(%34, %36, %46, %47) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc95)
              %49 = cir.cast(integral, %48 : !s64i), !s32i loc(#loc95)
              cir.store %49, %9 : !s32i, !cir.ptr<!s32i> loc(#loc342)
              cir.scope {
                %57 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc100)
                %58 = cir.const #cir.int<1> : !s32i loc(#loc101)
                %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc101)
                %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc344)
                %61 = cir.ternary(%60, true {
                  %62 = cir.const #true loc(#loc102)
                  cir.yield %62 : !cir.bool loc(#loc102)
                }, false {
                  %62 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc103)
                  %63 = cir.const #cir.int<0> : !s32i loc(#loc104)
                  %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc345)
                  %65 = cir.ternary(%64, true {
                    %66 = cir.const #true loc(#loc102)
                    cir.yield %66 : !cir.bool loc(#loc102)
                  }, false {
                    %66 = cir.const #false loc(#loc102)
                    cir.yield %66 : !cir.bool loc(#loc102)
                  }) : (!cir.bool) -> !cir.bool loc(#loc102)
                  cir.yield %65 : !cir.bool loc(#loc102)
                }) : (!cir.bool) -> !cir.bool loc(#loc102)
                cir.if %61 {
                  cir.break loc(#loc106)
                } loc(#loc346)
              } loc(#loc343)
              %50 = cir.const #cir.int<0> : !s32i loc(#loc107)
              %51 = cir.cast(integral, %50 : !s32i), !s8i loc(#loc107)
              %52 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc108)
              %53 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc109)
              %54 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %52 : !s32i), !cir.ptr<!s8i> loc(#loc109)
              cir.store %51, %54 : !s8i, !cir.ptr<!s8i> loc(#loc347)
              %55 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc110)
              %56 = cir.call @atoi(%55) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc111)
              cir.store %56, %4 : !s32i, !cir.ptr<!s32i> loc(#loc348)
            } loc(#loc325)
            cir.yield loc(#loc44)
          } while {
            %15 = cir.const #cir.int<0> : !s32i loc(#loc114)
            %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc114)
            cir.condition(%16) loc(#loc114)
          } loc(#loc324)
        } loc(#loc324)
        cir.scope {
          %15 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc117)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc118)
          %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc118)
          %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc350)
          cir.if %18 {
            %19 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc120)
            %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc121)
          } loc(#loc351)
        } loc(#loc349)
      } loc(#loc319)
      %7 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc122)
      %8 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc123)
      cir.store %7, %8 : !s32i, !cir.ptr<!s32i> loc(#loc352)
    } loc(#loc317)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc354)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc128)
      %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc129)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc354)
      cir.scope {
        %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc356)
        %8 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc134)
        %9 = cir.unary(dec, %8) nsw : !s32i, !s32i loc(#loc134)
        cir.store %9, %4 : !s32i, !cir.ptr<!s32i> loc(#loc357)
        %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc133)
        cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc356)
        %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc136)
        cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc137)
      } loc(#loc355)
    } loc(#loc353)
    cir.return loc(#loc19)
  } loc(#loc312)
  cir.func no_proto @CWE191_Integer_Underflow__int_connect_socket_predec_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc359)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc140)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc360)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc142)
    cir.return loc(#loc139)
  } loc(#loc358)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc362)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc363)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc364)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc363)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc364)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc152)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc365)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc367)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc157)
      %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc158)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc367)
      %7 = cir.const #cir.int<2> : !s32i loc(#loc159)
      %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc160)
      cir.store %8, %4 : !s32i, !cir.ptr<!s32i> loc(#loc368)
      %9 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc162)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc163)
      cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc369)
    } loc(#loc366)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc371)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc168)
      %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc169)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc371)
      cir.scope {
        %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc373)
        %8 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc174)
        %9 = cir.unary(dec, %8) nsw : !s32i, !s32i loc(#loc174)
        cir.store %9, %4 : !s32i, !cir.ptr<!s32i> loc(#loc374)
        %10 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc173)
        cir.store %10, %7 : !s32i, !cir.ptr<!s32i> loc(#loc373)
        %11 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc176)
        cir.call @printIntLine(%11) : (!s32i) -> () loc(#loc177)
      } loc(#loc372)
    } loc(#loc370)
    cir.return loc(#loc145)
  } loc(#loc361)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc375)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc180)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc377)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc378)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc379)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc378)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc379)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc189)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc380)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc382)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc194)
      %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc195)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc382)
      cir.scope {
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc384)
        %10 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc385)
        %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc386)
        %12 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc387)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc203)
        %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc203)
        cir.store %14, %11 : !s32i, !cir.ptr<!s32i> loc(#loc386)
        cir.scope {
          cir.do {
            cir.scope {
              %15 = cir.const #cir.int<2> : !s32i loc(#loc210)
              %16 = cir.const #cir.int<1> : !s32i loc(#loc211)
              %17 = cir.const #cir.int<6> : !s32i loc(#loc212)
              %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc213)
              cir.store %18, %11 : !s32i, !cir.ptr<!s32i> loc(#loc390)
              cir.scope {
                %57 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc218)
                %58 = cir.const #cir.int<1> : !s32i loc(#loc219)
                %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc219)
                %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc392)
                cir.if %60 {
                  cir.break loc(#loc221)
                } loc(#loc393)
              } loc(#loc391)
              %19 = cir.cast(bitcast, %10 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc394)
              %20 = cir.const #cir.int<0> : !s32i loc(#loc224)
              %21 = cir.const #cir.int<16> : !u64i loc(#loc395)
              cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc396)
              %22 = cir.const #cir.int<2> : !s32i loc(#loc229)
              %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc229)
              %24 = cir.get_member %10[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
              cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc397)
              %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc231)
              %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc231)
              %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc232)
              %28 = cir.get_member %10[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
              %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
              cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc398)
              %30 = cir.const #cir.int<27015> : !s32i loc(#loc235)
              %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc235)
              %32 = cir.call @htons(%31) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc236)
              %33 = cir.get_member %10[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc76)
              cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc399)
              cir.scope {
                %57 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc241)
                %58 = cir.cast(bitcast, %10 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc401)
                %59 = cir.const #cir.int<16> : !u64i loc(#loc402)
                %60 = cir.cast(integral, %59 : !u64i), !u32i loc(#loc402)
                %61 = cir.call @connect(%57, %58, %60) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc246)
                %62 = cir.const #cir.int<1> : !s32i loc(#loc247)
                %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc247)
                %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc403)
                cir.if %64 {
                  cir.break loc(#loc249)
                } loc(#loc404)
              } loc(#loc400)
              %34 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc250)
              %35 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc251)
              %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc251)
              %37 = cir.const #cir.int<3> : !s32i loc(#loc252)
              %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc252)
              %39 = cir.const #cir.int<4> : !u64i loc(#loc252)
              %40 = cir.binop(mul, %38, %39) : !u64i loc(#loc252)
              %41 = cir.const #cir.int<2> : !s32i loc(#loc252)
              %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc252)
              %43 = cir.binop(add, %40, %42) : !u64i loc(#loc252)
              %44 = cir.const #cir.int<1> : !s32i loc(#loc253)
              %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc253)
              %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc405)
              %47 = cir.const #cir.int<0> : !s32i loc(#loc254)
              %48 = cir.call @recv(%34, %36, %46, %47) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc255)
              %49 = cir.cast(integral, %48 : !s64i), !s32i loc(#loc255)
              cir.store %49, %9 : !s32i, !cir.ptr<!s32i> loc(#loc406)
              cir.scope {
                %57 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc260)
                %58 = cir.const #cir.int<1> : !s32i loc(#loc261)
                %59 = cir.unary(minus, %58) nsw : !s32i, !s32i loc(#loc261)
                %60 = cir.cmp(eq, %57, %59) : !s32i, !cir.bool loc(#loc408)
                %61 = cir.ternary(%60, true {
                  %62 = cir.const #true loc(#loc262)
                  cir.yield %62 : !cir.bool loc(#loc262)
                }, false {
                  %62 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc263)
                  %63 = cir.const #cir.int<0> : !s32i loc(#loc264)
                  %64 = cir.cmp(eq, %62, %63) : !s32i, !cir.bool loc(#loc409)
                  %65 = cir.ternary(%64, true {
                    %66 = cir.const #true loc(#loc262)
                    cir.yield %66 : !cir.bool loc(#loc262)
                  }, false {
                    %66 = cir.const #false loc(#loc262)
                    cir.yield %66 : !cir.bool loc(#loc262)
                  }) : (!cir.bool) -> !cir.bool loc(#loc262)
                  cir.yield %65 : !cir.bool loc(#loc262)
                }) : (!cir.bool) -> !cir.bool loc(#loc262)
                cir.if %61 {
                  cir.break loc(#loc266)
                } loc(#loc410)
              } loc(#loc407)
              %50 = cir.const #cir.int<0> : !s32i loc(#loc267)
              %51 = cir.cast(integral, %50 : !s32i), !s8i loc(#loc267)
              %52 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc268)
              %53 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc269)
              %54 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %52 : !s32i), !cir.ptr<!s8i> loc(#loc269)
              cir.store %51, %54 : !s8i, !cir.ptr<!s8i> loc(#loc411)
              %55 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc270)
              %56 = cir.call @atoi(%55) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc271)
              cir.store %56, %4 : !s32i, !cir.ptr<!s32i> loc(#loc412)
            } loc(#loc389)
            cir.yield loc(#loc207)
          } while {
            %15 = cir.const #cir.int<0> : !s32i loc(#loc274)
            %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc274)
            cir.condition(%16) loc(#loc274)
          } loc(#loc388)
        } loc(#loc388)
        cir.scope {
          %15 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc277)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc278)
          %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc278)
          %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc414)
          cir.if %18 {
            %19 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc280)
            %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc281)
          } loc(#loc415)
        } loc(#loc413)
      } loc(#loc383)
      %7 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc282)
      %8 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc283)
      cir.store %7, %8 : !s32i, !cir.ptr<!s32i> loc(#loc416)
    } loc(#loc381)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc418)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc288)
      %6 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc289)
      cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc418)
      cir.scope {
        %7 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc292)
        %8 = cir.const #cir.int<2147483647> : !s32i loc(#loc293)
        %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc293)
        %10 = cir.const #cir.int<1> : !s32i loc(#loc293)
        %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc293)
        %12 = cir.cmp(gt, %7, %11) : !s32i, !cir.bool loc(#loc420)
        cir.if %12 {
          %13 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc422)
          %14 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc299)
          %15 = cir.unary(dec, %14) nsw : !s32i, !s32i loc(#loc299)
          cir.store %15, %4 : !s32i, !cir.ptr<!s32i> loc(#loc423)
          %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc298)
          cir.store %16, %13 : !s32i, !cir.ptr<!s32i> loc(#loc422)
          %17 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc301)
          cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc302)
        } else {
          %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc180)
          %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc180)
          cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc303)
        } loc(#loc421)
      } loc(#loc419)
    } loc(#loc417)
    cir.return loc(#loc182)
  } loc(#loc376)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__int_connect_socket_predec_32.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":79:53)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":44:1)
#loc19 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":120:1)
#loc20 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":46:5)
#loc21 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":46:9)
#loc22 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":47:5)
#loc23 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":47:22)
#loc24 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":48:5)
#loc25 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":48:22)
#loc26 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":50:12)
#loc27 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":50:5)
#loc28 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":51:5)
#loc29 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":110:5)
#loc30 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":52:9)
#loc31 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":52:21)
#loc32 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":52:20)
#loc33 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":53:9)
#loc34 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":108:9)
#loc35 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":58:13)
#loc36 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":58:17)
#loc37 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":59:13)
#loc38 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":59:32)
#loc39 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":60:13)
#loc40 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":60:36)
#loc41 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":61:13)
#loc42 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":61:45)
#loc43 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":62:13)
#loc44 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":97:21)
#loc45 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":63:13)
#loc46 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":96:13)
#loc47 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":72:40)
#loc48 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":72:49)
#loc49 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":72:62)
#loc50 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":72:33)
#loc51 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":72:17)
#loc52 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":72:73)
#loc53 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":73:17)
#loc54 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":76:17)
#loc55 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":73:21)
#loc56 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":73:38)
#loc57 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":74:17)
#loc58 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":75:21)
#loc59 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":77:24)
#loc60 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":77:25)
#loc61 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":77:34)
#loc62 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":77:37)
#loc63 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":77:51)
#loc64 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":77:17)
#loc65 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":77:52)
#loc66 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":78:38)
#loc67 = loc("/usr/include/netinet/in.h":249:5)
#loc68 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":78:17)
#loc69 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":79:43)
#loc70 = loc("/usr/include/netinet/in.h":251:20)
#loc71 = loc("/usr/include/netinet/in.h":33:15)
#loc72 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":79:17)
#loc73 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":79:63)
#loc74 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":80:42)
#loc75 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":80:36)
#loc76 = loc("/usr/include/netinet/in.h":250:15)
#loc77 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":80:17)
#loc78 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":80:50)
#loc79 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":81:17)
#loc80 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":84:17)
#loc81 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":81:29)
#loc82 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":81:62)
#loc83 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":81:63)
#loc84 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":81:72)
#loc85 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":81:86)
#loc86 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":81:21)
#loc87 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":81:92)
#loc88 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":82:17)
#loc89 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":83:21)
#loc90 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":87:35)
#loc91 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":87:50)
#loc92 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":87:63)
#loc93 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":87:81)
#loc94 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":87:84)
#loc95 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":87:30)
#loc96 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":87:17)
#loc97 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":87:85)
#loc98 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":88:17)
#loc99 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":91:17)
#loc100 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":88:21)
#loc101 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":88:35)
#loc102 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":88:48)
#loc103 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":88:51)
#loc104 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":88:65)
#loc105 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":89:17)
#loc106 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":90:21)
#loc107 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":93:43)
#loc108 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":93:29)
#loc109 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":93:17)
#loc110 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":95:29)
#loc111 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":95:24)
#loc112 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":95:17)
#loc113 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":95:40)
#loc114 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":97:20)
#loc115 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":98:13)
#loc116 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":101:13)
#loc117 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":98:17)
#loc118 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":98:34)
#loc119 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":99:13)
#loc120 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":100:30)
#loc121 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":100:17)
#loc122 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":109:21)
#loc123 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":109:10)
#loc124 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":109:9)
#loc125 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":111:5)
#loc126 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":119:5)
#loc127 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":112:9)
#loc128 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":112:21)
#loc129 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":112:20)
#loc130 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":113:9)
#loc131 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":118:9)
#loc132 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":116:13)
#loc133 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":116:26)
#loc134 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":115:13)
#loc135 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":115:15)
#loc136 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":117:26)
#loc137 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":117:13)
#loc138 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":235:1)
#loc139 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":239:1)
#loc140 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":237:5)
#loc141 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":237:13)
#loc142 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":238:5)
#loc143 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":238:13)
#loc144 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":127:1)
#loc145 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":149:1)
#loc146 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":129:5)
#loc147 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":129:9)
#loc148 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":130:5)
#loc149 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":130:22)
#loc150 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":131:5)
#loc151 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":131:22)
#loc152 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":133:12)
#loc153 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":133:5)
#loc154 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":134:5)
#loc155 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":139:5)
#loc156 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":135:9)
#loc157 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":135:21)
#loc158 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":135:20)
#loc159 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":137:17)
#loc160 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":137:16)
#loc161 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":137:9)
#loc162 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":138:21)
#loc163 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":138:10)
#loc164 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":138:9)
#loc165 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":140:5)
#loc166 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":148:5)
#loc167 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":141:9)
#loc168 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":141:21)
#loc169 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":141:20)
#loc170 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":142:9)
#loc171 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":147:9)
#loc172 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":145:13)
#loc173 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":145:26)
#loc174 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":144:13)
#loc175 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":144:15)
#loc176 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":146:26)
#loc177 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":146:13)
#loc178 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc179 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc180 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":230:23)
#loc181 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":152:1)
#loc182 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":233:1)
#loc183 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":154:5)
#loc184 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":154:9)
#loc185 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":155:5)
#loc186 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":155:22)
#loc187 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":156:5)
#loc188 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":156:22)
#loc189 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":158:12)
#loc190 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":158:5)
#loc191 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":159:5)
#loc192 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":218:5)
#loc193 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":160:9)
#loc194 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":160:21)
#loc195 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":160:20)
#loc196 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":161:9)
#loc197 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":216:9)
#loc198 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":166:13)
#loc199 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":166:17)
#loc200 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":167:13)
#loc201 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":167:32)
#loc202 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":168:13)
#loc203 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":168:36)
#loc204 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":169:13)
#loc205 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":169:45)
#loc206 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":170:13)
#loc207 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":205:21)
#loc208 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":171:13)
#loc209 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":204:13)
#loc210 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":180:40)
#loc211 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":180:49)
#loc212 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":180:62)
#loc213 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":180:33)
#loc214 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":180:17)
#loc215 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":180:73)
#loc216 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":181:17)
#loc217 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":184:17)
#loc218 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":181:21)
#loc219 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":181:38)
#loc220 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":182:17)
#loc221 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":183:21)
#loc222 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":185:24)
#loc223 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":185:25)
#loc224 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":185:34)
#loc225 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":185:37)
#loc226 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":185:51)
#loc227 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":185:17)
#loc228 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":185:52)
#loc229 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":186:38)
#loc230 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":186:17)
#loc231 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":187:53)
#loc232 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":187:43)
#loc233 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":187:17)
#loc234 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":187:63)
#loc235 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":188:42)
#loc236 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":188:36)
#loc237 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":188:17)
#loc238 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":188:50)
#loc239 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":189:17)
#loc240 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":192:17)
#loc241 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":189:29)
#loc242 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":189:62)
#loc243 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":189:63)
#loc244 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":189:72)
#loc245 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":189:86)
#loc246 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":189:21)
#loc247 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":189:92)
#loc248 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":190:17)
#loc249 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":191:21)
#loc250 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":195:35)
#loc251 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":195:50)
#loc252 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":195:63)
#loc253 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":195:81)
#loc254 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":195:84)
#loc255 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":195:30)
#loc256 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":195:17)
#loc257 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":195:85)
#loc258 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":196:17)
#loc259 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":199:17)
#loc260 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":196:21)
#loc261 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":196:35)
#loc262 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":196:48)
#loc263 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":196:51)
#loc264 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":196:65)
#loc265 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":197:17)
#loc266 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":198:21)
#loc267 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":201:43)
#loc268 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":201:29)
#loc269 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":201:17)
#loc270 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":203:29)
#loc271 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":203:24)
#loc272 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":203:17)
#loc273 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":203:40)
#loc274 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":205:20)
#loc275 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":206:13)
#loc276 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":209:13)
#loc277 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":206:17)
#loc278 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":206:34)
#loc279 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":207:13)
#loc280 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":208:30)
#loc281 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":208:17)
#loc282 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":217:21)
#loc283 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":217:10)
#loc284 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":217:9)
#loc285 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":219:5)
#loc286 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":232:5)
#loc287 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":220:9)
#loc288 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":220:21)
#loc289 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":220:20)
#loc290 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":222:9)
#loc291 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":231:9)
#loc292 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":222:13)
#loc293 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":222:20)
#loc294 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":223:9)
#loc295 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":227:9)
#loc296 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":229:9)
#loc297 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":225:13)
#loc298 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":225:26)
#loc299 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":224:13)
#loc300 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":224:15)
#loc301 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":226:26)
#loc302 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":226:13)
#loc303 = loc("CWE191_Integer_Underflow__int_connect_socket_predec_32.c":230:13)
#loc304 = loc(fused[#loc1, #loc2])
#loc305 = loc(fused[#loc3, #loc4])
#loc306 = loc(fused[#loc6, #loc7])
#loc307 = loc(fused[#loc8, #loc9])
#loc308 = loc(fused[#loc10, #loc11])
#loc309 = loc(fused[#loc12, #loc13])
#loc310 = loc(fused[#loc14, #loc15])
#loc311 = loc(fused[#loc16, #loc17])
#loc312 = loc(fused[#loc18, #loc19])
#loc313 = loc(fused[#loc20, #loc21])
#loc314 = loc(fused[#loc22, #loc23])
#loc315 = loc(fused[#loc24, #loc25])
#loc316 = loc(fused[#loc27, #loc26])
#loc317 = loc(fused[#loc28, #loc29])
#loc318 = loc(fused[#loc30, #loc31])
#loc319 = loc(fused[#loc33, #loc34])
#loc320 = loc(fused[#loc35, #loc36])
#loc321 = loc(fused[#loc37, #loc38])
#loc322 = loc(fused[#loc39, #loc40])
#loc323 = loc(fused[#loc41, #loc42])
#loc324 = loc(fused[#loc43, #loc44])
#loc325 = loc(fused[#loc45, #loc46])
#loc326 = loc(fused[#loc51, #loc52])
#loc327 = loc(fused[#loc53, #loc54])
#loc328 = loc(fused[#loc55, #loc56])
#loc329 = loc(fused[#loc57, #loc54])
#loc330 = loc(fused[#loc59, #loc60])
#loc331 = loc(fused[#loc62, #loc63])
#loc332 = loc(fused[#loc64, #loc65])
#loc333 = loc(fused[#loc68, #loc66])
#loc334 = loc(fused[#loc72, #loc73])
#loc335 = loc(fused[#loc77, #loc78])
#loc336 = loc(fused[#loc79, #loc80])
#loc337 = loc(fused[#loc82, #loc83])
#loc338 = loc(fused[#loc84, #loc85])
#loc339 = loc(fused[#loc86, #loc87])
#loc340 = loc(fused[#loc88, #loc80])
#loc341 = loc(fused[#loc92, #loc93])
#loc342 = loc(fused[#loc96, #loc97])
#loc343 = loc(fused[#loc98, #loc99])
#loc344 = loc(fused[#loc100, #loc101])
#loc345 = loc(fused[#loc103, #loc104])
#loc346 = loc(fused[#loc105, #loc99])
#loc347 = loc(fused[#loc109, #loc107])
#loc348 = loc(fused[#loc112, #loc113])
#loc349 = loc(fused[#loc115, #loc116])
#loc350 = loc(fused[#loc117, #loc118])
#loc351 = loc(fused[#loc119, #loc116])
#loc352 = loc(fused[#loc124, #loc122])
#loc353 = loc(fused[#loc125, #loc126])
#loc354 = loc(fused[#loc127, #loc128])
#loc355 = loc(fused[#loc130, #loc131])
#loc356 = loc(fused[#loc132, #loc133])
#loc357 = loc(fused[#loc134, #loc135])
#loc358 = loc(fused[#loc138, #loc139])
#loc359 = loc(fused[#loc140, #loc141])
#loc360 = loc(fused[#loc142, #loc143])
#loc361 = loc(fused[#loc144, #loc145])
#loc362 = loc(fused[#loc146, #loc147])
#loc363 = loc(fused[#loc148, #loc149])
#loc364 = loc(fused[#loc150, #loc151])
#loc365 = loc(fused[#loc153, #loc152])
#loc366 = loc(fused[#loc154, #loc155])
#loc367 = loc(fused[#loc156, #loc157])
#loc368 = loc(fused[#loc161, #loc159])
#loc369 = loc(fused[#loc164, #loc162])
#loc370 = loc(fused[#loc165, #loc166])
#loc371 = loc(fused[#loc167, #loc168])
#loc372 = loc(fused[#loc170, #loc171])
#loc373 = loc(fused[#loc172, #loc173])
#loc374 = loc(fused[#loc174, #loc175])
#loc375 = loc(fused[#loc178, #loc179])
#loc376 = loc(fused[#loc181, #loc182])
#loc377 = loc(fused[#loc183, #loc184])
#loc378 = loc(fused[#loc185, #loc186])
#loc379 = loc(fused[#loc187, #loc188])
#loc380 = loc(fused[#loc190, #loc189])
#loc381 = loc(fused[#loc191, #loc192])
#loc382 = loc(fused[#loc193, #loc194])
#loc383 = loc(fused[#loc196, #loc197])
#loc384 = loc(fused[#loc198, #loc199])
#loc385 = loc(fused[#loc200, #loc201])
#loc386 = loc(fused[#loc202, #loc203])
#loc387 = loc(fused[#loc204, #loc205])
#loc388 = loc(fused[#loc206, #loc207])
#loc389 = loc(fused[#loc208, #loc209])
#loc390 = loc(fused[#loc214, #loc215])
#loc391 = loc(fused[#loc216, #loc217])
#loc392 = loc(fused[#loc218, #loc219])
#loc393 = loc(fused[#loc220, #loc217])
#loc394 = loc(fused[#loc222, #loc223])
#loc395 = loc(fused[#loc225, #loc226])
#loc396 = loc(fused[#loc227, #loc228])
#loc397 = loc(fused[#loc230, #loc229])
#loc398 = loc(fused[#loc233, #loc234])
#loc399 = loc(fused[#loc237, #loc238])
#loc400 = loc(fused[#loc239, #loc240])
#loc401 = loc(fused[#loc242, #loc243])
#loc402 = loc(fused[#loc244, #loc245])
#loc403 = loc(fused[#loc246, #loc247])
#loc404 = loc(fused[#loc248, #loc240])
#loc405 = loc(fused[#loc252, #loc253])
#loc406 = loc(fused[#loc256, #loc257])
#loc407 = loc(fused[#loc258, #loc259])
#loc408 = loc(fused[#loc260, #loc261])
#loc409 = loc(fused[#loc263, #loc264])
#loc410 = loc(fused[#loc265, #loc259])
#loc411 = loc(fused[#loc269, #loc267])
#loc412 = loc(fused[#loc272, #loc273])
#loc413 = loc(fused[#loc275, #loc276])
#loc414 = loc(fused[#loc277, #loc278])
#loc415 = loc(fused[#loc279, #loc276])
#loc416 = loc(fused[#loc284, #loc282])
#loc417 = loc(fused[#loc285, #loc286])
#loc418 = loc(fused[#loc287, #loc288])
#loc419 = loc(fused[#loc290, #loc291])
#loc420 = loc(fused[#loc292, #loc293])
#loc421 = loc(fused[#loc294, #loc295, #loc296, #loc291])
#loc422 = loc(fused[#loc297, #loc298])
#loc423 = loc(fused[#loc299, #loc300])
