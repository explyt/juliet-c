!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc47 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":115:10)
#loc48 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":115:14)
#loc49 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":115:20)
#loc50 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":115:32)
#loc152 = loc(fused[#loc47, #loc48])
#loc153 = loc(fused[#loc49, #loc50])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE170_char_strncpy_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc135)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc136)
  cir.func no_proto @CWE126_Buffer_Overread__CWE170_char_strncpy_08_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc139)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc9)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc9)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 150>, !cir.ptr<!cir.array<!s8i x 150>>, ["data"] {alignment = 16 : i64} loc(#loc142)
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc143)
          %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc17)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc17)
          %7 = cir.const #cir.int<65> : !s32i loc(#loc18)
          %8 = cir.const #cir.int<149> : !s32i loc(#loc19)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc19)
          cir.libc.memset %9 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc144)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc22)
          %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc22)
          %12 = cir.const #cir.int<149> : !s32i loc(#loc23)
          %13 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc24)
          %14 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc24)
          cir.store %11, %14 : !s8i, !cir.ptr<!s8i> loc(#loc145)
          %15 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc25)
          %16 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc26)
          %17 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc27)
          %18 = cir.const #cir.int<99> : !s32i loc(#loc28)
          %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc28)
          %20 = cir.call @strncpy(%16, %17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc25)
          %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc29)
          cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc30)
        } loc(#loc141)
      } loc(#loc140)
    } loc(#loc138)
    cir.return loc(#loc6)
  } loc(#loc137)
  cir.func no_proto @CWE126_Buffer_Overread__CWE170_char_strncpy_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc147)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc33)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc148)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc35)
    cir.return loc(#loc32)
  } loc(#loc146)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc149)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc41)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc42)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc44)
  cir.func @main(%arg0: !s32i loc(fused[#loc47, #loc48]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc49, #loc50])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc152)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc153)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc46)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc51)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc51)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc52)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc53)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc53)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc54)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc41)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc41)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    %8 = cir.get_global @CWE126_Buffer_Overread__CWE170_char_strncpy_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc154)
    cir.call @CWE126_Buffer_Overread__CWE170_char_strncpy_08_good() : () -> () loc(#loc56)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc42)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc43)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %13 = cir.get_global @CWE126_Buffer_Overread__CWE170_char_strncpy_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc155)
    cir.call @CWE126_Buffer_Overread__CWE170_char_strncpy_08_bad() : () -> () loc(#loc60)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc44)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc63)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    cir.return %17 : !s32i loc(#loc156)
  } loc(#loc151)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc66)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc67)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc158)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    cir.return %2 : !s32i loc(#loc158)
  } loc(#loc157)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc69)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc161)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc74)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc74)
      cir.if %2 {
        %3 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc69)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc69)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc79)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 150>, !cir.ptr<!cir.array<!s8i x 150>>, ["data"] {alignment = 16 : i64} loc(#loc164)
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc165)
          %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc85)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc85)
          %7 = cir.const #cir.int<65> : !s32i loc(#loc86)
          %8 = cir.const #cir.int<149> : !s32i loc(#loc87)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc87)
          cir.libc.memset %9 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc166)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc90)
          %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc90)
          %12 = cir.const #cir.int<149> : !s32i loc(#loc91)
          %13 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc92)
          %14 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc92)
          cir.store %11, %14 : !s8i, !cir.ptr<!s8i> loc(#loc167)
          %15 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc93)
          %16 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc94)
          %17 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc95)
          %18 = cir.const #cir.int<99> : !s32i loc(#loc96)
          %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc96)
          %20 = cir.call @strncpy(%16, %17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc93)
          %21 = cir.const #cir.int<0> : !s32i loc(#loc97)
          %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc97)
          %23 = cir.const #cir.int<99> : !s32i loc(#loc98)
          %24 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc99)
          %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc99)
          cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc168)
          %26 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc100)
          cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc101)
        } loc(#loc163)
      } loc(#loc162)
    } loc(#loc160)
    cir.return loc(#loc71)
  } loc(#loc159)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc103)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc104)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc170)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc170)
    cir.return %2 : !s32i loc(#loc170)
  } loc(#loc169)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc173)
      %1 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc110)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc110)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 150>, !cir.ptr<!cir.array<!s8i x 150>>, ["data"] {alignment = 16 : i64} loc(#loc176)
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc177)
          %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc118)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc118)
          %7 = cir.const #cir.int<65> : !s32i loc(#loc119)
          %8 = cir.const #cir.int<149> : !s32i loc(#loc120)
          %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc120)
          cir.libc.memset %9 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc178)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc123)
          %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc123)
          %12 = cir.const #cir.int<149> : !s32i loc(#loc124)
          %13 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc125)
          %14 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc125)
          cir.store %11, %14 : !s8i, !cir.ptr<!s8i> loc(#loc179)
          %15 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc126)
          %16 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc127)
          %17 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 150>>), !cir.ptr<!s8i> loc(#loc128)
          %18 = cir.const #cir.int<99> : !s32i loc(#loc129)
          %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc129)
          %20 = cir.call @strncpy(%16, %17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc126)
          %21 = cir.const #cir.int<0> : !s32i loc(#loc130)
          %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc130)
          %23 = cir.const #cir.int<99> : !s32i loc(#loc131)
          %24 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc132)
          %25 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc132)
          cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc180)
          %26 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc133)
          cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc134)
        } loc(#loc175)
      } loc(#loc174)
    } loc(#loc172)
    cir.return loc(#loc107)
  } loc(#loc171)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":0:0)
#loc1 = loc("/usr/include/string.h":144:1)
#loc2 = loc("/usr/include/string.h":146:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":35:1)
#loc6 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":51:1)
#loc7 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":37:5)
#loc8 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":50:5)
#loc9 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":37:8)
#loc10 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":37:26)
#loc11 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":38:5)
#loc12 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":39:9)
#loc13 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":49:9)
#loc14 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":40:13)
#loc15 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":40:26)
#loc16 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":40:37)
#loc17 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":42:20)
#loc18 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":42:26)
#loc19 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":42:31)
#loc20 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":42:13)
#loc21 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":42:34)
#loc22 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":43:25)
#loc23 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":43:18)
#loc24 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":43:13)
#loc25 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":46:13)
#loc26 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":46:21)
#loc27 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":46:27)
#loc28 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":46:33)
#loc29 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":48:23)
#loc30 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":48:13)
#loc31 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":100:1)
#loc32 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":104:1)
#loc33 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":102:5)
#loc34 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":102:11)
#loc35 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":103:5)
#loc36 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":103:11)
#loc37 = loc("/usr/include/stdlib.h":575:1)
#loc38 = loc("/usr/include/stdlib.h":575:41)
#loc39 = loc("/usr/include/time.h":76:1)
#loc40 = loc("/usr/include/time.h":76:38)
#loc41 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":120:15)
#loc42 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":122:15)
#loc43 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":125:15)
#loc44 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":127:15)
#loc45 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":115:1)
#loc46 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":130:1)
#loc51 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":116:1)
#loc52 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":118:27)
#loc53 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":118:22)
#loc54 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":118:5)
#loc55 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":120:5)
#loc56 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":121:5)
#loc57 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":121:57)
#loc58 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":122:5)
#loc59 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":125:5)
#loc60 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":126:5)
#loc61 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":126:56)
#loc62 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":127:5)
#loc63 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":129:12)
#loc64 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":129:5)
#loc65 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":23:1)
#loc66 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":26:1)
#loc67 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":25:12)
#loc68 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":25:5)
#loc69 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":63:19)
#loc70 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":58:1)
#loc71 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":79:1)
#loc72 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":60:5)
#loc73 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":78:5)
#loc74 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":60:8)
#loc75 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":60:27)
#loc76 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":61:5)
#loc77 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":64:5)
#loc78 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":66:5)
#loc79 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":63:9)
#loc80 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":67:9)
#loc81 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":77:9)
#loc82 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":68:13)
#loc83 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":68:26)
#loc84 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":68:37)
#loc85 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":70:20)
#loc86 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":70:26)
#loc87 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":70:31)
#loc88 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":70:13)
#loc89 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":70:34)
#loc90 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":71:25)
#loc91 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":71:18)
#loc92 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":71:13)
#loc93 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":74:13)
#loc94 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":74:21)
#loc95 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":74:27)
#loc96 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":74:33)
#loc97 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":75:24)
#loc98 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":75:18)
#loc99 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":75:13)
#loc100 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":76:23)
#loc101 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":76:13)
#loc102 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":28:1)
#loc103 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":31:1)
#loc104 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":30:12)
#loc105 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":30:5)
#loc106 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":82:1)
#loc107 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":98:1)
#loc108 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":84:5)
#loc109 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":97:5)
#loc110 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":84:8)
#loc111 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":84:26)
#loc112 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":85:5)
#loc113 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":86:9)
#loc114 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":96:9)
#loc115 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":87:13)
#loc116 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":87:26)
#loc117 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":87:37)
#loc118 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":89:20)
#loc119 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":89:26)
#loc120 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":89:31)
#loc121 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":89:13)
#loc122 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":89:34)
#loc123 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":90:25)
#loc124 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":90:18)
#loc125 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":90:13)
#loc126 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":93:13)
#loc127 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":93:21)
#loc128 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":93:27)
#loc129 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":93:33)
#loc130 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":94:24)
#loc131 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":94:18)
#loc132 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":94:13)
#loc133 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":95:23)
#loc134 = loc("CWE126_Buffer_Overread__CWE170_char_strncpy_08.c":95:13)
#loc135 = loc(fused[#loc1, #loc2])
#loc136 = loc(fused[#loc3, #loc4])
#loc137 = loc(fused[#loc5, #loc6])
#loc138 = loc(fused[#loc7, #loc8])
#loc139 = loc(fused[#loc9, #loc10])
#loc140 = loc(fused[#loc11, #loc8])
#loc141 = loc(fused[#loc12, #loc13])
#loc142 = loc(fused[#loc14, #loc15])
#loc143 = loc(fused[#loc14, #loc16])
#loc144 = loc(fused[#loc20, #loc21])
#loc145 = loc(fused[#loc24, #loc22])
#loc146 = loc(fused[#loc31, #loc32])
#loc147 = loc(fused[#loc33, #loc34])
#loc148 = loc(fused[#loc35, #loc36])
#loc149 = loc(fused[#loc37, #loc38])
#loc150 = loc(fused[#loc39, #loc40])
#loc151 = loc(fused[#loc45, #loc46])
#loc154 = loc(fused[#loc56, #loc57])
#loc155 = loc(fused[#loc60, #loc61])
#loc156 = loc(fused[#loc64, #loc63])
#loc157 = loc(fused[#loc65, #loc66])
#loc158 = loc(fused[#loc68, #loc67])
#loc159 = loc(fused[#loc70, #loc71])
#loc160 = loc(fused[#loc72, #loc73])
#loc161 = loc(fused[#loc74, #loc75])
#loc162 = loc(fused[#loc76, #loc77, #loc78, #loc73])
#loc163 = loc(fused[#loc80, #loc81])
#loc164 = loc(fused[#loc82, #loc83])
#loc165 = loc(fused[#loc82, #loc84])
#loc166 = loc(fused[#loc88, #loc89])
#loc167 = loc(fused[#loc92, #loc90])
#loc168 = loc(fused[#loc99, #loc97])
#loc169 = loc(fused[#loc102, #loc103])
#loc170 = loc(fused[#loc105, #loc104])
#loc171 = loc(fused[#loc106, #loc107])
#loc172 = loc(fused[#loc108, #loc109])
#loc173 = loc(fused[#loc110, #loc111])
#loc174 = loc(fused[#loc112, #loc109])
#loc175 = loc(fused[#loc113, #loc114])
#loc176 = loc(fused[#loc115, #loc116])
#loc177 = loc(fused[#loc115, #loc117])
#loc178 = loc(fused[#loc121, #loc122])
#loc179 = loc(fused[#loc125, #loc123])
#loc180 = loc(fused[#loc132, #loc130])
