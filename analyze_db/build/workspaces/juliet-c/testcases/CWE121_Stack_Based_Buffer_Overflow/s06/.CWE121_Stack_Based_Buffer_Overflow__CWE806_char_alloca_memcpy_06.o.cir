!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc141)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc142)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc144)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc145)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc10)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc10)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc10)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc10)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc145)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc11)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
    cir.scope {
      %10 = cir.const #cir.int<5> : !s32i loc(#loc15)
      %11 = cir.const #cir.int<5> : !s32i loc(#loc16)
      %12 = cir.cmp(eq, %10, %11) : !s32i, !cir.bool loc(#loc148)
      cir.if %12 {
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc19)
        %16 = cir.const #cir.int<100> : !s32i loc(#loc20)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc21)
        %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc20)
        %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc20)
        cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc150)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc24)
        %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc24)
        %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
        %23 = cir.const #cir.int<100> : !s32i loc(#loc26)
        %24 = cir.const #cir.int<1> : !s32i loc(#loc27)
        %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc26)
        %26 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc28)
        cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc151)
      } loc(#loc149)
    } loc(#loc147)
    cir.scope {
      %10 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc153)
      %11 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc153)
      cir.store %11, %10 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc153)
      %12 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc33)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc33)
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc34)
      %16 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc35)
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
      %18 = cir.call @strlen(%17) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc35)
      %19 = cir.const #cir.int<1> : !u64i loc(#loc154)
      %20 = cir.binop(mul, %18, %19) : !u64i loc(#loc155)
      cir.libc.memcpy %20 bytes from %15 to %13 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc156)
      %21 = cir.const #cir.int<0> : !s32i loc(#loc41)
      %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc41)
      %23 = cir.const #cir.int<50> : !s32i loc(#loc42)
      %24 = cir.const #cir.int<1> : !s32i loc(#loc43)
      %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc42)
      %26 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc44)
      %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc44)
      cir.store %22, %27 : !s8i, !cir.ptr<!s8i> loc(#loc157)
      %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
      cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    } loc(#loc152)
    cir.return loc(#loc6)
  } loc(#loc143)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc159)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc49)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc160)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc51)
    cir.return loc(#loc48)
  } loc(#loc158)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc53)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc162)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc163)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc59)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc59)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc59)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc59)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc59)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc59)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc59)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc163)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc164)
    cir.scope {
      %10 = cir.const #cir.int<5> : !s32i loc(#loc64)
      %11 = cir.const #cir.int<5> : !s32i loc(#loc65)
      %12 = cir.cmp(ne, %10, %11) : !s32i, !cir.bool loc(#loc166)
      cir.if %12 {
        %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc53)
        %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc53)
        cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc69)
      } else {
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc70)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc71)
        %16 = cir.const #cir.int<50> : !s32i loc(#loc72)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc73)
        %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc72)
        %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc72)
        cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc168)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc76)
        %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc76)
        %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
        %23 = cir.const #cir.int<50> : !s32i loc(#loc78)
        %24 = cir.const #cir.int<1> : !s32i loc(#loc79)
        %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc78)
        %26 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc80)
        cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc169)
      } loc(#loc167)
    } loc(#loc165)
    cir.scope {
      %10 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc171)
      %11 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc171)
      cir.store %11, %10 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc171)
      %12 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc85)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc85)
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc86)
      %16 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc87)
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
      %18 = cir.call @strlen(%17) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc87)
      %19 = cir.const #cir.int<1> : !u64i loc(#loc172)
      %20 = cir.binop(mul, %18, %19) : !u64i loc(#loc173)
      cir.libc.memcpy %20 bytes from %15 to %13 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc174)
      %21 = cir.const #cir.int<0> : !s32i loc(#loc93)
      %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc93)
      %23 = cir.const #cir.int<50> : !s32i loc(#loc94)
      %24 = cir.const #cir.int<1> : !s32i loc(#loc95)
      %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc94)
      %26 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc96)
      %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc96)
      cir.store %22, %27 : !s8i, !cir.ptr<!s8i> loc(#loc175)
      %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
      cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    } loc(#loc170)
    cir.return loc(#loc55)
  } loc(#loc161)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc177)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc178)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc104)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc104)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc104)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc104)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc104)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc104)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc104)
    cir.store %8, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc178)
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc179)
    cir.scope {
      %10 = cir.const #cir.int<5> : !s32i loc(#loc109)
      %11 = cir.const #cir.int<5> : !s32i loc(#loc110)
      %12 = cir.cmp(eq, %10, %11) : !s32i, !cir.bool loc(#loc181)
      cir.if %12 {
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc112)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc113)
        %16 = cir.const #cir.int<50> : !s32i loc(#loc114)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc115)
        %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc114)
        %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc114)
        cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc183)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc118)
        %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc118)
        %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
        %23 = cir.const #cir.int<50> : !s32i loc(#loc120)
        %24 = cir.const #cir.int<1> : !s32i loc(#loc121)
        %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc120)
        %26 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc122)
        cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc184)
      } loc(#loc182)
    } loc(#loc180)
    cir.scope {
      %10 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc186)
      %11 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc186)
      cir.store %11, %10 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc186)
      %12 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc127)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc127)
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc128)
      %16 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc129)
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
      %18 = cir.call @strlen(%17) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc129)
      %19 = cir.const #cir.int<1> : !u64i loc(#loc187)
      %20 = cir.binop(mul, %18, %19) : !u64i loc(#loc188)
      cir.libc.memcpy %20 bytes from %15 to %13 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc189)
      %21 = cir.const #cir.int<0> : !s32i loc(#loc135)
      %22 = cir.cast(integral, %21 : !s32i), !s8i loc(#loc135)
      %23 = cir.const #cir.int<50> : !s32i loc(#loc136)
      %24 = cir.const #cir.int<1> : !s32i loc(#loc137)
      %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc136)
      %26 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc138)
      %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc138)
      cir.store %22, %27 : !s8i, !cir.ptr<!s8i> loc(#loc190)
      %28 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
      cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc140)
    } loc(#loc185)
    cir.return loc(#loc100)
  } loc(#loc176)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":27:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":45:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":29:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":29:12)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":30:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":30:33)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":31:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":31:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":32:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":37:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":32:8)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":32:27)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":33:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":35:16)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":35:22)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":35:27)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":35:31)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":35:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":35:32)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":36:23)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":36:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":36:14)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":36:18)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":36:19)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":38:5)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":44:5)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":39:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":39:25)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":41:16)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":41:22)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":41:28)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":41:35)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":41:41)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":41:52)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":41:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":41:53)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":42:22)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":42:14)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":42:17)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":42:9)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":43:19)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":43:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":98:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":102:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":100:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":100:14)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":101:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":101:14)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":60:19)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":52:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":75:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":54:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":54:12)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":55:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":55:33)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":56:12)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":56:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":57:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":67:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":57:8)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":57:27)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":58:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":61:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":63:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":60:9)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":65:16)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":65:22)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":65:27)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":65:30)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":65:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":65:31)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":66:22)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":66:9)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":66:14)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":66:17)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":66:18)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":68:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":74:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":69:9)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":69:25)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":71:16)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":71:22)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":71:28)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":71:35)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":71:41)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":71:52)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":71:9)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":71:53)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":72:22)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":72:14)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":72:17)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":72:9)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":73:19)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":73:9)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":78:1)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":96:1)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":80:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":80:12)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":81:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":81:33)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":82:12)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":82:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":83:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":88:5)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":83:8)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":83:27)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":84:5)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":86:16)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":86:22)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":86:27)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":86:30)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":86:9)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":86:31)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":87:22)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":87:9)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":87:14)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":87:17)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":87:18)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":89:5)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":95:5)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":90:9)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":90:25)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":92:16)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":92:22)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":92:28)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":92:35)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":92:41)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":92:52)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":92:9)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":92:53)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":93:22)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":93:14)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":93:17)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":93:9)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":94:19)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_memcpy_06.c":94:9)
#loc141 = loc(fused[#loc1, #loc2])
#loc142 = loc(fused[#loc3, #loc4])
#loc143 = loc(fused[#loc5, #loc6])
#loc144 = loc(fused[#loc7, #loc8])
#loc145 = loc(fused[#loc9, #loc10])
#loc146 = loc(fused[#loc12, #loc11])
#loc147 = loc(fused[#loc13, #loc14])
#loc148 = loc(fused[#loc15, #loc16])
#loc149 = loc(fused[#loc17, #loc14])
#loc150 = loc(fused[#loc22, #loc23])
#loc151 = loc(fused[#loc25, #loc24])
#loc152 = loc(fused[#loc29, #loc30])
#loc153 = loc(fused[#loc31, #loc32])
#loc154 = loc(fused[#loc37, #loc38])
#loc155 = loc(fused[#loc35, #loc38])
#loc156 = loc(fused[#loc39, #loc40])
#loc157 = loc(fused[#loc44, #loc41])
#loc158 = loc(fused[#loc47, #loc48])
#loc159 = loc(fused[#loc49, #loc50])
#loc160 = loc(fused[#loc51, #loc52])
#loc161 = loc(fused[#loc54, #loc55])
#loc162 = loc(fused[#loc56, #loc57])
#loc163 = loc(fused[#loc58, #loc59])
#loc164 = loc(fused[#loc61, #loc60])
#loc165 = loc(fused[#loc62, #loc63])
#loc166 = loc(fused[#loc64, #loc65])
#loc167 = loc(fused[#loc66, #loc67, #loc68, #loc63])
#loc168 = loc(fused[#loc74, #loc75])
#loc169 = loc(fused[#loc77, #loc76])
#loc170 = loc(fused[#loc81, #loc82])
#loc171 = loc(fused[#loc83, #loc84])
#loc172 = loc(fused[#loc89, #loc90])
#loc173 = loc(fused[#loc87, #loc90])
#loc174 = loc(fused[#loc91, #loc92])
#loc175 = loc(fused[#loc96, #loc93])
#loc176 = loc(fused[#loc99, #loc100])
#loc177 = loc(fused[#loc101, #loc102])
#loc178 = loc(fused[#loc103, #loc104])
#loc179 = loc(fused[#loc106, #loc105])
#loc180 = loc(fused[#loc107, #loc108])
#loc181 = loc(fused[#loc109, #loc110])
#loc182 = loc(fused[#loc111, #loc108])
#loc183 = loc(fused[#loc116, #loc117])
#loc184 = loc(fused[#loc119, #loc118])
#loc185 = loc(fused[#loc123, #loc124])
#loc186 = loc(fused[#loc125, #loc126])
#loc187 = loc(fused[#loc131, #loc132])
#loc188 = loc(fused[#loc129, #loc132])
#loc189 = loc(fused[#loc133, #loc134])
#loc190 = loc(fused[#loc138, #loc135])
