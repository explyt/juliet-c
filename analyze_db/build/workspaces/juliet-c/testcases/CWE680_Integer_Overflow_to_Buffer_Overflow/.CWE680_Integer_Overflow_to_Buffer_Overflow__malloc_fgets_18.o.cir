!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc141)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc142)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc143)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc144)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc145)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc146)
  cir.func private @printIntLine(!s32i) loc(#loc147)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc148)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc150)
    %1 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc151)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc25)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    cir.goto "source" loc(#loc153)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc29)
    %4 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc151)
    cir.store %4, %1 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc151)
    cir.scope {
      %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc32)
      %6 = cir.const #cir.int<3> : !s32i loc(#loc33)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc33)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc33)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc33)
      %10 = cir.const #cir.int<2> : !s32i loc(#loc33)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc33)
      %12 = cir.binop(add, %9, %11) : !u64i loc(#loc33)
      %13 = cir.cast(integral, %12 : !u64i), !s32i loc(#loc33)
      %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc142)
      %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc34)
      %16 = cir.call @fgets(%5, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc35)
      %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc36)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc36)
      %19 = cir.cmp(ne, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc155)
      cir.if %19 {
        %20 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc40)
        %21 = cir.call @atoi(%20) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc41)
        cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc157)
      } else {
        %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
        %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
        cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc44)
      } loc(#loc156)
    } loc(#loc154)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc159)
      %6 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc160)
      %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc51)
      %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc52)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc52)
      %10 = cir.const #cir.int<4> : !u64i loc(#loc161)
      %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc162)
      %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc51)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc163)
      cir.store %13, %6 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc164)
      cir.scope {
        %21 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc59)
        %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc60)
        %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc60)
        %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!s32i>, !cir.bool loc(#loc166)
        cir.if %24 {
          %25 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc62)
          %26 = cir.const #cir.int<1> : !s32i loc(#loc63)
          %27 = cir.unary(minus, %26) nsw : !s32i, !s32i loc(#loc64)
          cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc62)
        } loc(#loc167)
      } loc(#loc165)
      cir.scope {
        %21 = cir.const #cir.int<0> : !s32i loc(#loc67)
        %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc67)
        cir.store %22, %5 : !u64i, !cir.ptr<!u64i> loc(#loc169)
        cir.for : cond {
          %23 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc69)
          %24 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc70)
          %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc70)
          %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc170)
          cir.condition(%26) loc(#loc71)
        } body {
          cir.scope {
            %23 = cir.const #cir.int<0> : !s32i loc(#loc73)
            %24 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc74)
            %25 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc75)
            %26 = cir.ptr_stride(%24 : !cir.ptr<!s32i>, %25 : !u64i), !cir.ptr<!s32i> loc(#loc76)
            cir.store %23, %26 : !s32i, !cir.ptr<!s32i> loc(#loc172)
          } loc(#loc171)
          cir.yield loc(#loc66)
        } step {
          %23 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc77)
          %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc78)
          cir.store %24, %5 : !u64i, !cir.ptr<!u64i> loc(#loc173)
          cir.yield loc(#loc168)
        } loc(#loc168)
      } loc(#loc168)
      %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc79)
      %15 = cir.const #cir.int<0> : !s32i loc(#loc80)
      %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc81)
      %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc79)
      cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc82)
      %18 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc83)
      %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc84)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc84)
      cir.call @free(%20) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc83)
    } loc(#loc158)
    cir.return loc(#loc19)
  } loc(#loc149)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc175)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc87)
    cir.return loc(#loc86)
  } loc(#loc174)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc177)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc94)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc178)
    cir.goto "source" loc(#loc179)
  ^bb1:  // no predecessors
    cir.label "source" loc(#loc98)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc99)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc182)
      %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc183)
      %6 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc107)
      %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc108)
      %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc108)
      %9 = cir.const #cir.int<4> : !u64i loc(#loc184)
      %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc185)
      %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc107)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc186)
      cir.store %12, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc187)
      cir.scope {
        %20 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc115)
        %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc116)
        %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc116)
        %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!s32i>, !cir.bool loc(#loc189)
        cir.if %23 {
          %24 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc118)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc119)
          %26 = cir.unary(minus, %25) nsw : !s32i, !s32i loc(#loc120)
          cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc118)
        } loc(#loc190)
      } loc(#loc188)
      cir.scope {
        %20 = cir.const #cir.int<0> : !s32i loc(#loc123)
        %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc123)
        cir.store %21, %4 : !u64i, !cir.ptr<!u64i> loc(#loc192)
        cir.for : cond {
          %22 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc125)
          %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc126)
          %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc126)
          %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc193)
          cir.condition(%25) loc(#loc127)
        } body {
          cir.scope {
            %22 = cir.const #cir.int<0> : !s32i loc(#loc129)
            %23 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc130)
            %24 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc131)
            %25 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %24 : !u64i), !cir.ptr<!s32i> loc(#loc132)
            cir.store %22, %25 : !s32i, !cir.ptr<!s32i> loc(#loc195)
          } loc(#loc194)
          cir.yield loc(#loc122)
        } step {
          %22 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc133)
          %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc134)
          cir.store %23, %4 : !u64i, !cir.ptr<!u64i> loc(#loc196)
          cir.yield loc(#loc191)
        } loc(#loc191)
      } loc(#loc191)
      %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc135)
      %14 = cir.const #cir.int<0> : !s32i loc(#loc136)
      %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc137)
      %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc135)
      cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc138)
      %17 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc139)
      %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc140)
      %19 = cir.cast(bitcast, %18 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc140)
      cir.call @free(%19) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc139)
    } loc(#loc181)
    cir.return loc(#loc90)
  } loc(#loc176)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":40:23)
#loc10 = loc("/usr/include/stdlib.h":672:1)
#loc11 = loc("/usr/include/stdlib.h":672:45)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc15 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc16 = loc("/usr/include/stdlib.h":687:1)
#loc17 = loc("/usr/include/stdlib.h":687:32)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":23:1)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":57:1)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":25:5)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":25:9)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":31:9)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":31:45)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":27:13)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":27:12)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":27:5)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":28:5)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":28:10)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":29:1)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":33:9)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":41:9)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":33:19)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":33:32)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":33:49)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":33:13)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":33:59)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":34:9)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":37:9)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":39:9)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":36:25)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":36:20)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":36:13)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":36:36)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":40:13)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":43:5)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":56:5)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":44:9)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":44:16)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":45:9)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":45:14)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":48:28)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":48:35)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":48:42)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":48:52)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":48:53)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":48:9)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":49:9)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":49:43)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":49:13)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":49:27)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":49:33)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":49:34)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":49:40)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":49:39)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":50:9)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":53:9)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":50:18)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":50:14)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":50:21)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":50:33)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":50:23)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":51:9)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":52:29)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":52:13)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":52:24)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":52:25)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":50:40)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":50:39)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":54:22)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":54:33)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":54:34)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":54:9)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":55:9)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":55:14)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":89:1)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":92:1)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":91:5)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":91:13)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":64:1)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":87:1)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":66:5)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":66:9)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":68:13)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":68:12)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":68:5)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":69:5)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":69:10)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":70:1)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":72:12)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":72:5)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":73:5)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":86:5)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":74:9)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":74:16)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":75:9)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":75:14)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":78:28)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":78:35)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":78:42)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":78:52)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":78:53)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":78:9)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":79:9)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":79:43)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":79:13)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":79:27)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":79:33)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":79:34)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":79:40)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":79:39)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":80:9)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":83:9)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":80:18)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":80:14)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":80:21)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":80:33)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":80:23)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":81:9)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":82:29)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":82:13)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":82:24)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":82:25)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":80:40)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":80:39)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":84:22)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":84:33)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":84:34)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":84:9)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":85:9)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_18.c":85:14)
#loc141 = loc(fused[#loc1, #loc2])
#loc142 = loc(fused[#loc3, #loc4])
#loc143 = loc(fused[#loc5, #loc6])
#loc144 = loc(fused[#loc7, #loc8])
#loc145 = loc(fused[#loc10, #loc11])
#loc146 = loc(fused[#loc12, #loc13])
#loc147 = loc(fused[#loc14, #loc15])
#loc148 = loc(fused[#loc16, #loc17])
#loc149 = loc(fused[#loc18, #loc19])
#loc150 = loc(fused[#loc20, #loc21])
#loc151 = loc(fused[#loc22, #loc23])
#loc152 = loc(fused[#loc26, #loc24])
#loc153 = loc(fused[#loc27, #loc28])
#loc154 = loc(fused[#loc30, #loc31])
#loc155 = loc(fused[#loc35, #loc36])
#loc156 = loc(fused[#loc37, #loc38, #loc39, #loc31])
#loc157 = loc(fused[#loc42, #loc43])
#loc158 = loc(fused[#loc45, #loc46])
#loc159 = loc(fused[#loc47, #loc48])
#loc160 = loc(fused[#loc49, #loc50])
#loc161 = loc(fused[#loc53, #loc54])
#loc162 = loc(fused[#loc52, #loc54])
#loc163 = loc(fused[#loc51, #loc55])
#loc164 = loc(fused[#loc56, #loc55])
#loc165 = loc(fused[#loc57, #loc58])
#loc166 = loc(fused[#loc59, #loc60])
#loc167 = loc(fused[#loc61, #loc58])
#loc168 = loc(fused[#loc65, #loc66])
#loc169 = loc(fused[#loc68, #loc67])
#loc170 = loc(fused[#loc69, #loc70])
#loc171 = loc(fused[#loc72, #loc66])
#loc172 = loc(fused[#loc74, #loc73])
#loc173 = loc(fused[#loc78, #loc77])
#loc174 = loc(fused[#loc85, #loc86])
#loc175 = loc(fused[#loc87, #loc88])
#loc176 = loc(fused[#loc89, #loc90])
#loc177 = loc(fused[#loc91, #loc92])
#loc178 = loc(fused[#loc95, #loc93])
#loc179 = loc(fused[#loc96, #loc97])
#loc180 = loc(fused[#loc100, #loc99])
#loc181 = loc(fused[#loc101, #loc102])
#loc182 = loc(fused[#loc103, #loc104])
#loc183 = loc(fused[#loc105, #loc106])
#loc184 = loc(fused[#loc109, #loc110])
#loc185 = loc(fused[#loc108, #loc110])
#loc186 = loc(fused[#loc107, #loc111])
#loc187 = loc(fused[#loc112, #loc111])
#loc188 = loc(fused[#loc113, #loc114])
#loc189 = loc(fused[#loc115, #loc116])
#loc190 = loc(fused[#loc117, #loc114])
#loc191 = loc(fused[#loc121, #loc122])
#loc192 = loc(fused[#loc124, #loc123])
#loc193 = loc(fused[#loc125, #loc126])
#loc194 = loc(fused[#loc128, #loc122])
#loc195 = loc(fused[#loc130, #loc129])
#loc196 = loc(fused[#loc134, #loc133])
