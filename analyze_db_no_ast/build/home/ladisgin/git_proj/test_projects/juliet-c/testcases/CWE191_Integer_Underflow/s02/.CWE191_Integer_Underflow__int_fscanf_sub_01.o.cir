!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fscanf_sub_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc71)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc72)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private  @printIntLine(!s32i) loc(#loc73)
  cir.func no_proto  @CWE191_Integer_Underflow__int_fscanf_sub_01_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc75)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc12)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc76)
    %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc14)
    %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc72)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc15)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc14)
    cir.scope {
      %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc78)
      %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc20)
      %10 = cir.const #cir.int<1> : !s32i loc(#loc19)
      %11 = cir.binop(sub, %9, %10) nsw : !s32i loc(#loc20)
      cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc78)
      %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc21)
      cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc22)
    } loc(#loc77)
    cir.return loc(#loc9)
  } loc(#loc74)
  cir.func no_proto  @CWE191_Integer_Underflow__int_fscanf_sub_01_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc80)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc25)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc81)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc27)
    cir.return loc(#loc24)
  } loc(#loc79)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc83)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc33)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc84)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc35)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc36)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc85)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc87)
      %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc42)
      %6 = cir.const #cir.int<1> : !s32i loc(#loc41)
      %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc42)
      cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc87)
      %8 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc43)
      cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc44)
    } loc(#loc86)
    cir.return loc(#loc30)
  } loc(#loc82)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc88)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"data value is too large to perform subtraction.\00" : !cir.array<!s8i x 48>> : !cir.array<!s8i x 48> {alignment = 1 : i64} loc(#loc47)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc90)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc52)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc91)
    %2 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc54)
    %3 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc72)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc55)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc56)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc56)
    %7 = cir.call @__isoc99_fscanf(%4, %6, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc54)
    cir.scope {
      %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc59)
      %9 = cir.const #cir.int<2147483647> : !s32i loc(#loc60)
      %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc60)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc60)
      %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc60)
      %13 = cir.cmp(gt, %8, %12) : !s32i, !s32i loc(#loc93)
      %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc61)
      cir.if %14 {
        %15 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc95)
        %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc67)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc66)
        %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc67)
        cir.store %18, %15 : !s32i, !cir.ptr<!s32i> loc(#loc95)
        %19 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc68)
        cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc69)
      } else {
        %15 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc47)
        %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc47)
        cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc70)
      } loc(#loc94)
    } loc(#loc92)
    cir.return loc(#loc49)
  } loc(#loc89)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE191_Integer_Underflow/s02/CWE191_Integer_Underflow__int_fscanf_sub_01.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":28:19)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":22:1)
#loc9 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":34:1)
#loc10 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":24:5)
#loc11 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":24:9)
#loc12 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":26:12)
#loc13 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":26:5)
#loc14 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":28:5)
#loc15 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":28:12)
#loc16 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":29:5)
#loc17 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":33:5)
#loc18 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":31:9)
#loc19 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":31:29)
#loc20 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":31:22)
#loc21 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":32:22)
#loc22 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":32:9)
#loc23 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":75:1)
#loc24 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":79:1)
#loc25 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":77:5)
#loc26 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":77:13)
#loc27 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":78:5)
#loc28 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":78:13)
#loc29 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":41:1)
#loc30 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":53:1)
#loc31 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":43:5)
#loc32 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":43:9)
#loc33 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":45:12)
#loc34 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":45:5)
#loc35 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":47:13)
#loc36 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":47:12)
#loc37 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":47:5)
#loc38 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":48:5)
#loc39 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":52:5)
#loc40 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":50:9)
#loc41 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":50:29)
#loc42 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":50:22)
#loc43 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":51:22)
#loc44 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":51:9)
#loc45 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc46 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc47 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":71:19)
#loc48 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":56:1)
#loc49 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":73:1)
#loc50 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":58:5)
#loc51 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":58:9)
#loc52 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":60:12)
#loc53 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":60:5)
#loc54 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":62:5)
#loc55 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":62:12)
#loc56 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":62:19)
#loc57 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":64:5)
#loc58 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":72:5)
#loc59 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":64:9)
#loc60 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":64:16)
#loc61 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":64:14)
#loc62 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":65:5)
#loc63 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":68:5)
#loc64 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":70:5)
#loc65 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":66:9)
#loc66 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":66:29)
#loc67 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":66:22)
#loc68 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":67:22)
#loc69 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":67:9)
#loc70 = loc("CWE191_Integer_Underflow__int_fscanf_sub_01.c":71:9)
#loc71 = loc(fused[#loc1, #loc2])
#loc72 = loc(fused[#loc3, #loc4])
#loc73 = loc(fused[#loc6, #loc7])
#loc74 = loc(fused[#loc8, #loc9])
#loc75 = loc(fused[#loc10, #loc11])
#loc76 = loc(fused[#loc13, #loc12])
#loc77 = loc(fused[#loc16, #loc17])
#loc78 = loc(fused[#loc18, #loc19])
#loc79 = loc(fused[#loc23, #loc24])
#loc80 = loc(fused[#loc25, #loc26])
#loc81 = loc(fused[#loc27, #loc28])
#loc82 = loc(fused[#loc29, #loc30])
#loc83 = loc(fused[#loc31, #loc32])
#loc84 = loc(fused[#loc34, #loc33])
#loc85 = loc(fused[#loc37, #loc35])
#loc86 = loc(fused[#loc38, #loc39])
#loc87 = loc(fused[#loc40, #loc41])
#loc88 = loc(fused[#loc45, #loc46])
#loc89 = loc(fused[#loc48, #loc49])
#loc90 = loc(fused[#loc50, #loc51])
#loc91 = loc(fused[#loc53, #loc52])
#loc92 = loc(fused[#loc57, #loc58])
#loc93 = loc(fused[#loc59, #loc60])
#loc94 = loc(fused[#loc62, #loc63, #loc64, #loc58])
#loc95 = loc(fused[#loc65, #loc66])
