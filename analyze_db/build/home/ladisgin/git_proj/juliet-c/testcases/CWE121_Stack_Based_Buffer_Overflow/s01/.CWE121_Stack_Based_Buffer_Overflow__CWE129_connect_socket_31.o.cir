!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":84:44)
#loc284 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":209:44)
#loc311 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":237:27)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc335)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc336)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc337)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc338)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc339)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc340)
  cir.func private @close(!s32i) -> !s32i loc(#loc341)
  cir.func private @printIntLine(!s32i) loc(#loc342)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc343)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc20)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc345)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc346)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc347)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc348)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc349)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc350)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc351)
    %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc352)
    %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc353)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc42)
    cir.store %10, %8 : !s32i, !cir.ptr<!s32i> loc(#loc354)
    cir.br ^bb1 loc(#loc355)
  ^bb1:  // pred: ^bb0
    %11 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc28)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc347)
    cir.br ^bb2 loc(#loc356)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc356)
  ^bb3:  // pred: ^bb24
    %13 = cir.const #cir.int<0> : !s32i loc(#loc48)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc48)
    cir.brcond %14 ^bb4, ^bb25 loc(#loc48)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %15 = cir.const #cir.int<2> : !s32i loc(#loc49)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc50)
    %17 = cir.const #cir.int<6> : !s32i loc(#loc51)
    %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc52)
    cir.store %18, %2 : !s32i, !cir.ptr<!s32i> loc(#loc357)
    cir.br ^bb5 loc(#loc358)
  ^bb5:  // pred: ^bb4
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc57)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc58)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc58)
    %22 = cir.cmp(eq, %19, %21) : !s32i, !cir.bool loc(#loc359)
    cir.brcond %22 ^bb6, ^bb7 loc(#loc360)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc60)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc56)
  ^bb8:  // pred: ^bb7
    %23 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc361)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %25 = cir.const #cir.int<16> : !u64i loc(#loc362)
    cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc363)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc68)
    %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc68)
    %28 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
    cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc364)
    %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %31 = cir.call @inet_addr(%30) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc71)
    %32 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc72)
    %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc73)
    cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc365)
    %34 = cir.const #cir.int<27015> : !s32i loc(#loc76)
    %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc76)
    %36 = cir.call @htons(%35) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc77)
    %37 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
    cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc366)
    cir.br ^bb9 loc(#loc367)
  ^bb9:  // pred: ^bb8
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    %39 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc368)
    %40 = cir.const #cir.int<16> : !u64i loc(#loc369)
    %41 = cir.cast(integral, %40 : !u64i), !u32i loc(#loc369)
    %42 = cir.call @connect(%38, %39, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc88)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %44 = cir.unary(minus, %43) : !s32i, !s32i loc(#loc89)
    %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc370)
    cir.brcond %45 ^bb10, ^bb11 loc(#loc371)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc91)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc82)
  ^bb12:  // pred: ^bb11
    %46 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    %47 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc93)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc93)
    %49 = cir.const #cir.int<3> : !s32i loc(#loc94)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc94)
    %51 = cir.const #cir.int<4> : !u64i loc(#loc94)
    %52 = cir.binop(mul, %50, %51) : !u64i loc(#loc94)
    %53 = cir.const #cir.int<2> : !s32i loc(#loc94)
    %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc94)
    %55 = cir.binop(add, %52, %54) : !u64i loc(#loc94)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc95)
    %58 = cir.binop(sub, %55, %57) : !u64i loc(#loc372)
    %59 = cir.const #cir.int<0> : !s32i loc(#loc96)
    %60 = cir.call @recv(%46, %48, %58, %59) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc97)
    %61 = cir.cast(integral, %60 : !s64i), !s32i loc(#loc97)
    cir.store %61, %0 : !s32i, !cir.ptr<!s32i> loc(#loc373)
    cir.br ^bb13 loc(#loc374)
  ^bb13:  // pred: ^bb12
    %62 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc102)
    %63 = cir.const #cir.int<1> : !s32i loc(#loc103)
    %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc103)
    %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc375)
    cir.brcond %65 ^bb14, ^bb15 loc(#loc104)
  ^bb14:  // pred: ^bb13
    %66 = cir.const #true loc(#loc104)
    cir.br ^bb20(%66 : !cir.bool) loc(#loc104)
  ^bb15:  // pred: ^bb13
    %67 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    %68 = cir.const #cir.int<0> : !s32i loc(#loc106)
    %69 = cir.cmp(eq, %67, %68) : !s32i, !cir.bool loc(#loc376)
    cir.brcond %69 ^bb16, ^bb17 loc(#loc104)
  ^bb16:  // pred: ^bb15
    %70 = cir.const #true loc(#loc104)
    cir.br ^bb18(%70 : !cir.bool) loc(#loc104)
  ^bb17:  // pred: ^bb15
    %71 = cir.const #false loc(#loc104)
    cir.br ^bb18(%71 : !cir.bool) loc(#loc104)
  ^bb18(%72: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":84:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc104)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%72 : !cir.bool) loc(#loc104)
  ^bb20(%73: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":84:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc104)
  ^bb21:  // pred: ^bb20
    cir.brcond %73 ^bb22, ^bb23 loc(#loc377)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc108)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc101)
  ^bb24:  // pred: ^bb23
    %74 = cir.const #cir.int<0> : !s32i loc(#loc109)
    %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc109)
    %76 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    %77 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc111)
    %78 = cir.ptr_stride(%77 : !cir.ptr<!s8i>, %76 : !s32i), !cir.ptr<!s8i> loc(#loc111)
    cir.store %75, %78 : !s8i, !cir.ptr<!s8i> loc(#loc378)
    %79 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc112)
    %80 = cir.call @atoi(%79) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc113)
    cir.store %80, %8 : !s32i, !cir.ptr<!s32i> loc(#loc379)
    cir.br ^bb3 loc(#loc47)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc47)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc380)
  ^bb27:  // pred: ^bb26
    %81 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    %82 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %83 = cir.unary(minus, %82) : !s32i, !s32i loc(#loc119)
    %84 = cir.cmp(ne, %81, %83) : !s32i, !cir.bool loc(#loc381)
    cir.brcond %84 ^bb28, ^bb29 loc(#loc382)
  ^bb28:  // pred: ^bb27
    %85 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    %86 = cir.call @close(%85) : (!s32i) -> !s32i loc(#loc122)
    cir.br ^bb29 loc(#loc117)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc117)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc45)
  ^bb31:  // pred: ^bb30
    cir.br ^bb32 loc(#loc383)
  ^bb32:  // pred: ^bb31
    %87 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    cir.store %87, %4 : !s32i, !cir.ptr<!s32i> loc(#loc349)
    %88 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc34)
    cir.store %88, %5 : !s32i, !cir.ptr<!s32i> loc(#loc350)
    cir.br ^bb33 loc(#loc384)
  ^bb33:  // pred: ^bb32
    %89 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc352)
    cir.store %89, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc352)
    cir.br ^bb34 loc(#loc385)
  ^bb34:  // pred: ^bb33
    %90 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    %91 = cir.const #cir.int<0> : !s32i loc(#loc130)
    %92 = cir.cmp(ge, %90, %91) : !s32i, !cir.bool loc(#loc386)
    cir.brcond %92 ^bb35, ^bb44 loc(#loc387)
  ^bb35:  // pred: ^bb34
    %93 = cir.const #cir.int<1> : !s32i loc(#loc134)
    %94 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    %95 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc136)
    %96 = cir.ptr_stride(%95 : !cir.ptr<!s32i>, %94 : !s32i), !cir.ptr<!s32i> loc(#loc136)
    cir.store %93, %96 : !s32i, !cir.ptr<!s32i> loc(#loc388)
    cir.br ^bb36 loc(#loc389)
  ^bb36:  // pred: ^bb35
    %97 = cir.const #cir.int<0> : !s32i loc(#loc139)
    cir.store %97, %6 : !s32i, !cir.ptr<!s32i> loc(#loc390)
    cir.br ^bb37 loc(#loc389)
  ^bb37:  // 2 preds: ^bb36, ^bb41
    %98 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc141)
    %99 = cir.const #cir.int<10> : !s32i loc(#loc142)
    %100 = cir.cmp(lt, %98, %99) : !s32i, !cir.bool loc(#loc391)
    cir.brcond %100 ^bb38, ^bb42 loc(#loc143)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc392)
  ^bb39:  // pred: ^bb38
    %101 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    %102 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc146)
    %103 = cir.ptr_stride(%102 : !cir.ptr<!s32i>, %101 : !s32i), !cir.ptr<!s32i> loc(#loc146)
    %104 = cir.load %103 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    cir.call @printIntLine(%104) : (!s32i) -> () loc(#loc147)
    cir.br ^bb40 loc(#loc138)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc138)
  ^bb41:  // pred: ^bb40
    %105 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc148)
    %106 = cir.unary(inc, %105) : !s32i, !s32i loc(#loc149)
    cir.store %106, %6 : !s32i, !cir.ptr<!s32i> loc(#loc393)
    cir.br ^bb37 loc(#loc389)
  ^bb42:  // pred: ^bb37
    cir.br ^bb43 loc(#loc138)
  ^bb43:  // pred: ^bb42
    cir.br ^bb45 loc(#loc132)
  ^bb44:  // pred: ^bb34
    %107 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc20)
    %108 = cir.cast(array_to_ptrdecay, %107 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc20)
    cir.call @printLine(%108) : (!cir.ptr<!s8i>) -> () loc(#loc150)
    cir.br ^bb45 loc(#loc128)
  ^bb45:  // 2 preds: ^bb43, ^bb44
    cir.br ^bb46 loc(#loc128)
  ^bb46:  // pred: ^bb45
    cir.br ^bb47 loc(#loc126)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc124)
  ^bb48:  // pred: ^bb47
    cir.return loc(#loc22)
  } loc(#loc344)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc395)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc153)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc396)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc155)
    cir.return loc(#loc152)
  } loc(#loc394)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc398)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc399)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc400)
    %3 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc401)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc402)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc169)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc170)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc403)
    %7 = cir.const #cir.int<7> : !s32i loc(#loc172)
    cir.store %7, %4 : !s32i, !cir.ptr<!s32i> loc(#loc404)
    cir.br ^bb1 loc(#loc405)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc160)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc398)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    cir.store %9, %1 : !s32i, !cir.ptr<!s32i> loc(#loc399)
    cir.br ^bb2 loc(#loc406)
  ^bb2:  // pred: ^bb1
    %10 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc401)
    cir.store %10, %3 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc401)
    cir.br ^bb3 loc(#loc407)
  ^bb3:  // pred: ^bb2
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc180)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc181)
    %13 = cir.cmp(ge, %11, %12) : !s32i, !cir.bool loc(#loc408)
    cir.brcond %13 ^bb4, ^bb13 loc(#loc409)
  ^bb4:  // pred: ^bb3
    %14 = cir.const #cir.int<1> : !s32i loc(#loc185)
    %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc186)
    %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc187)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc187)
    cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc410)
    cir.br ^bb5 loc(#loc411)
  ^bb5:  // pred: ^bb4
    %18 = cir.const #cir.int<0> : !s32i loc(#loc190)
    cir.store %18, %2 : !s32i, !cir.ptr<!s32i> loc(#loc412)
    cir.br ^bb6 loc(#loc411)
  ^bb6:  // 2 preds: ^bb5, ^bb10
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc192)
    %20 = cir.const #cir.int<10> : !s32i loc(#loc193)
    %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc413)
    cir.brcond %21 ^bb7, ^bb11 loc(#loc194)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc414)
  ^bb8:  // pred: ^bb7
    %22 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc196)
    %23 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc197)
    %24 = cir.ptr_stride(%23 : !cir.ptr<!s32i>, %22 : !s32i), !cir.ptr<!s32i> loc(#loc197)
    %25 = cir.load %24 : !cir.ptr<!s32i>, !s32i loc(#loc197)
    cir.call @printIntLine(%25) : (!s32i) -> () loc(#loc198)
    cir.br ^bb9 loc(#loc189)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc189)
  ^bb10:  // pred: ^bb9
    %26 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc199)
    %27 = cir.unary(inc, %26) : !s32i, !s32i loc(#loc200)
    cir.store %27, %2 : !s32i, !cir.ptr<!s32i> loc(#loc415)
    cir.br ^bb6 loc(#loc411)
  ^bb11:  // pred: ^bb6
    cir.br ^bb12 loc(#loc189)
  ^bb12:  // pred: ^bb11
    cir.br ^bb14 loc(#loc183)
  ^bb13:  // pred: ^bb3
    %28 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc201)
    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc201)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc202)
    cir.br ^bb14 loc(#loc179)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc179)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc177)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc175)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc158)
  } loc(#loc397)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc203)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc417)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc418)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc419)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc420)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["dataCopy", init] {alignment = 4 : i64} loc(#loc421)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc422)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc423)
    %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc424)
    %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc425)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc224)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc225)
    cir.store %10, %8 : !s32i, !cir.ptr<!s32i> loc(#loc426)
    cir.br ^bb1 loc(#loc427)
  ^bb1:  // pred: ^bb0
    %11 = cir.const #cir.int<1> : !s32i loc(#loc211)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc211)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc419)
    cir.br ^bb2 loc(#loc428)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc428)
  ^bb3:  // pred: ^bb24
    %13 = cir.const #cir.int<0> : !s32i loc(#loc231)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc231)
    cir.brcond %14 ^bb4, ^bb25 loc(#loc231)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %15 = cir.const #cir.int<2> : !s32i loc(#loc232)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc233)
    %17 = cir.const #cir.int<6> : !s32i loc(#loc234)
    %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc235)
    cir.store %18, %2 : !s32i, !cir.ptr<!s32i> loc(#loc429)
    cir.br ^bb5 loc(#loc430)
  ^bb5:  // pred: ^bb4
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc240)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc241)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc241)
    %22 = cir.cmp(eq, %19, %21) : !s32i, !cir.bool loc(#loc431)
    cir.brcond %22 ^bb6, ^bb7 loc(#loc432)
  ^bb6:  // pred: ^bb5
    cir.br ^bb25 loc(#loc243)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc239)
  ^bb8:  // pred: ^bb7
    %23 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc433)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc246)
    %25 = cir.const #cir.int<16> : !u64i loc(#loc434)
    cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc435)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc251)
    %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc251)
    %28 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
    cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc436)
    %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc253)
    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc253)
    %31 = cir.call @inet_addr(%30) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc254)
    %32 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc72)
    %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc73)
    cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc437)
    %34 = cir.const #cir.int<27015> : !s32i loc(#loc257)
    %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc257)
    %36 = cir.call @htons(%35) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc258)
    %37 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
    cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc438)
    cir.br ^bb9 loc(#loc439)
  ^bb9:  // pred: ^bb8
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc263)
    %39 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc440)
    %40 = cir.const #cir.int<16> : !u64i loc(#loc441)
    %41 = cir.cast(integral, %40 : !u64i), !u32i loc(#loc441)
    %42 = cir.call @connect(%38, %39, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc268)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc269)
    %44 = cir.unary(minus, %43) : !s32i, !s32i loc(#loc269)
    %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc442)
    cir.brcond %45 ^bb10, ^bb11 loc(#loc443)
  ^bb10:  // pred: ^bb9
    cir.br ^bb25 loc(#loc271)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc262)
  ^bb12:  // pred: ^bb11
    %46 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc272)
    %47 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc273)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc273)
    %49 = cir.const #cir.int<3> : !s32i loc(#loc274)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc274)
    %51 = cir.const #cir.int<4> : !u64i loc(#loc274)
    %52 = cir.binop(mul, %50, %51) : !u64i loc(#loc274)
    %53 = cir.const #cir.int<2> : !s32i loc(#loc274)
    %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc274)
    %55 = cir.binop(add, %52, %54) : !u64i loc(#loc274)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc275)
    %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc275)
    %58 = cir.binop(sub, %55, %57) : !u64i loc(#loc444)
    %59 = cir.const #cir.int<0> : !s32i loc(#loc276)
    %60 = cir.call @recv(%46, %48, %58, %59) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc277)
    %61 = cir.cast(integral, %60 : !s64i), !s32i loc(#loc277)
    cir.store %61, %0 : !s32i, !cir.ptr<!s32i> loc(#loc445)
    cir.br ^bb13 loc(#loc446)
  ^bb13:  // pred: ^bb12
    %62 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc282)
    %63 = cir.const #cir.int<1> : !s32i loc(#loc283)
    %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc283)
    %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc447)
    cir.brcond %65 ^bb14, ^bb15 loc(#loc284)
  ^bb14:  // pred: ^bb13
    %66 = cir.const #true loc(#loc284)
    cir.br ^bb20(%66 : !cir.bool) loc(#loc284)
  ^bb15:  // pred: ^bb13
    %67 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc285)
    %68 = cir.const #cir.int<0> : !s32i loc(#loc286)
    %69 = cir.cmp(eq, %67, %68) : !s32i, !cir.bool loc(#loc448)
    cir.brcond %69 ^bb16, ^bb17 loc(#loc284)
  ^bb16:  // pred: ^bb15
    %70 = cir.const #true loc(#loc284)
    cir.br ^bb18(%70 : !cir.bool) loc(#loc284)
  ^bb17:  // pred: ^bb15
    %71 = cir.const #false loc(#loc284)
    cir.br ^bb18(%71 : !cir.bool) loc(#loc284)
  ^bb18(%72: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":209:44)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc284)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20(%72 : !cir.bool) loc(#loc284)
  ^bb20(%73: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":209:44)):  // 2 preds: ^bb14, ^bb19
    cir.br ^bb21 loc(#loc284)
  ^bb21:  // pred: ^bb20
    cir.brcond %73 ^bb22, ^bb23 loc(#loc449)
  ^bb22:  // pred: ^bb21
    cir.br ^bb25 loc(#loc288)
  ^bb23:  // pred: ^bb21
    cir.br ^bb24 loc(#loc281)
  ^bb24:  // pred: ^bb23
    %74 = cir.const #cir.int<0> : !s32i loc(#loc289)
    %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc289)
    %76 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc290)
    %77 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc291)
    %78 = cir.ptr_stride(%77 : !cir.ptr<!s8i>, %76 : !s32i), !cir.ptr<!s8i> loc(#loc291)
    cir.store %75, %78 : !s8i, !cir.ptr<!s8i> loc(#loc450)
    %79 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc292)
    %80 = cir.call @atoi(%79) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc293)
    cir.store %80, %8 : !s32i, !cir.ptr<!s32i> loc(#loc451)
    cir.br ^bb3 loc(#loc230)
  ^bb25:  // 4 preds: ^bb3, ^bb6, ^bb10, ^bb22
    cir.br ^bb26 loc(#loc230)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc452)
  ^bb27:  // pred: ^bb26
    %81 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc298)
    %82 = cir.const #cir.int<1> : !s32i loc(#loc299)
    %83 = cir.unary(minus, %82) : !s32i, !s32i loc(#loc299)
    %84 = cir.cmp(ne, %81, %83) : !s32i, !cir.bool loc(#loc453)
    cir.brcond %84 ^bb28, ^bb29 loc(#loc454)
  ^bb28:  // pred: ^bb27
    %85 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc301)
    %86 = cir.call @close(%85) : (!s32i) -> !s32i loc(#loc302)
    cir.br ^bb29 loc(#loc297)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc297)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc228)
  ^bb31:  // pred: ^bb30
    cir.br ^bb32 loc(#loc455)
  ^bb32:  // pred: ^bb31
    %87 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc215)
    cir.store %87, %4 : !s32i, !cir.ptr<!s32i> loc(#loc421)
    %88 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc217)
    cir.store %88, %5 : !s32i, !cir.ptr<!s32i> loc(#loc422)
    cir.br ^bb33 loc(#loc456)
  ^bb33:  // pred: ^bb32
    %89 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc424)
    cir.store %89, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc424)
    cir.br ^bb34 loc(#loc457)
  ^bb34:  // pred: ^bb33
    %90 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc309)
    %91 = cir.const #cir.int<0> : !s32i loc(#loc310)
    %92 = cir.cmp(ge, %90, %91) : !s32i, !cir.bool loc(#loc458)
    cir.brcond %92 ^bb35, ^bb40 loc(#loc311)
  ^bb35:  // pred: ^bb34
    %93 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc312)
    %94 = cir.const #cir.int<10> : !s32i loc(#loc313)
    %95 = cir.cmp(lt, %93, %94) : !s32i, !cir.bool loc(#loc459)
    cir.brcond %95 ^bb36, ^bb37 loc(#loc311)
  ^bb36:  // pred: ^bb35
    %96 = cir.const #true loc(#loc311)
    cir.br ^bb38(%96 : !cir.bool) loc(#loc311)
  ^bb37:  // pred: ^bb35
    %97 = cir.const #false loc(#loc311)
    cir.br ^bb38(%97 : !cir.bool) loc(#loc311)
  ^bb38(%98: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":237:27)):  // 2 preds: ^bb36, ^bb37
    cir.br ^bb39 loc(#loc311)
  ^bb39:  // pred: ^bb38
    cir.br ^bb41(%98 : !cir.bool) loc(#loc311)
  ^bb40:  // pred: ^bb34
    %99 = cir.const #false loc(#loc311)
    cir.br ^bb41(%99 : !cir.bool) loc(#loc311)
  ^bb41(%100: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":237:27)):  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc311)
  ^bb42:  // pred: ^bb41
    cir.brcond %100 ^bb43, ^bb52 loc(#loc460)
  ^bb43:  // pred: ^bb42
    %101 = cir.const #cir.int<1> : !s32i loc(#loc318)
    %102 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc319)
    %103 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc320)
    %104 = cir.ptr_stride(%103 : !cir.ptr<!s32i>, %102 : !s32i), !cir.ptr<!s32i> loc(#loc320)
    cir.store %101, %104 : !s32i, !cir.ptr<!s32i> loc(#loc461)
    cir.br ^bb44 loc(#loc462)
  ^bb44:  // pred: ^bb43
    %105 = cir.const #cir.int<0> : !s32i loc(#loc323)
    cir.store %105, %6 : !s32i, !cir.ptr<!s32i> loc(#loc463)
    cir.br ^bb45 loc(#loc462)
  ^bb45:  // 2 preds: ^bb44, ^bb49
    %106 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc325)
    %107 = cir.const #cir.int<10> : !s32i loc(#loc326)
    %108 = cir.cmp(lt, %106, %107) : !s32i, !cir.bool loc(#loc464)
    cir.brcond %108 ^bb46, ^bb50 loc(#loc327)
  ^bb46:  // pred: ^bb45
    cir.br ^bb47 loc(#loc465)
  ^bb47:  // pred: ^bb46
    %109 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc329)
    %110 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc330)
    %111 = cir.ptr_stride(%110 : !cir.ptr<!s32i>, %109 : !s32i), !cir.ptr<!s32i> loc(#loc330)
    %112 = cir.load %111 : !cir.ptr<!s32i>, !s32i loc(#loc330)
    cir.call @printIntLine(%112) : (!s32i) -> () loc(#loc331)
    cir.br ^bb48 loc(#loc322)
  ^bb48:  // pred: ^bb47
    cir.br ^bb49 loc(#loc322)
  ^bb49:  // pred: ^bb48
    %113 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc332)
    %114 = cir.unary(inc, %113) : !s32i, !s32i loc(#loc333)
    cir.store %114, %6 : !s32i, !cir.ptr<!s32i> loc(#loc466)
    cir.br ^bb45 loc(#loc462)
  ^bb50:  // pred: ^bb45
    cir.br ^bb51 loc(#loc322)
  ^bb51:  // pred: ^bb50
    cir.br ^bb53 loc(#loc316)
  ^bb52:  // pred: ^bb42
    %115 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc203)
    %116 = cir.cast(array_to_ptrdecay, %115 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc203)
    cir.call @printLine(%116) : (!cir.ptr<!s8i>) -> () loc(#loc334)
    cir.br ^bb53 loc(#loc308)
  ^bb53:  // 2 preds: ^bb51, ^bb52
    cir.br ^bb54 loc(#loc308)
  ^bb54:  // pred: ^bb53
    cir.br ^bb55 loc(#loc306)
  ^bb55:  // pred: ^bb54
    cir.br ^bb56 loc(#loc304)
  ^bb56:  // pred: ^bb55
    cir.return loc(#loc205)
  } loc(#loc416)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":75:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":124:27)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":44:1)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":128:1)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":54:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":54:13)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":55:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":55:28)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":56:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":56:32)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":57:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":57:41)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":106:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":106:24)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":107:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":107:20)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":109:13)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":109:17)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":110:13)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":110:34)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":46:5)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":46:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":48:13)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":48:12)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":48:5)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":49:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":104:5)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":58:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":93:17)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":93:16)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":68:36)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":68:45)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":68:58)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":68:29)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":68:13)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":68:69)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":69:13)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":72:13)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":69:17)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":69:34)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":70:13)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":71:17)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":73:20)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":73:21)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":73:30)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":73:33)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":73:47)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":73:13)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":73:48)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":74:34)
#loc69 = loc("/usr/include/netinet/in.h":249:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":74:13)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":75:39)
#loc72 = loc("/usr/include/netinet/in.h":251:20)
#loc73 = loc("/usr/include/netinet/in.h":33:15)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":75:13)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":75:59)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":76:38)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":76:32)
#loc78 = loc("/usr/include/netinet/in.h":250:15)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":76:13)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":76:46)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":77:13)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":80:13)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":77:25)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":77:58)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":77:59)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":77:68)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":77:82)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":77:17)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":77:88)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":78:13)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":79:17)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":83:31)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":83:46)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":83:59)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":83:77)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":83:80)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":83:26)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":83:13)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":83:81)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":84:13)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":87:13)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":84:17)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":84:31)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":84:47)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":84:61)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":85:13)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":86:17)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":89:39)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":89:25)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":89:13)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":91:25)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":91:20)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":91:13)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":91:36)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":94:9)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":97:9)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":94:13)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":94:30)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":95:9)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":96:26)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":96:13)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":105:5)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":127:5)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":108:9)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":126:9)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":113:13)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":125:13)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":113:17)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":113:25)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":114:13)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":121:13)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":123:13)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":115:32)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":115:24)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":115:17)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":117:17)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":120:17)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":117:25)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":117:21)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":117:28)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":117:32)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":117:30)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":118:17)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":119:41)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":119:34)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":119:21)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":117:37)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":117:36)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":124:17)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":254:1)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":258:1)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":256:5)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":256:13)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":257:5)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":257:13)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":135:1)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":166:1)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":144:9)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":144:24)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":145:9)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":145:20)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":147:13)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":147:17)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":148:13)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":148:34)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":137:5)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":137:9)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":139:13)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":139:12)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":139:5)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":142:12)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":142:5)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":143:5)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":165:5)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":146:9)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":164:9)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":151:13)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":163:13)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":151:17)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":151:25)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":152:13)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":159:13)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":161:13)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":153:32)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":153:24)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":153:17)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":155:17)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":158:17)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":155:25)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":155:21)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":155:28)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":155:32)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":155:30)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":156:17)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":157:41)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":157:34)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":157:21)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":155:37)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":155:36)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":162:27)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":162:17)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":248:27)
#loc204 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":169:1)
#loc205 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":252:1)
#loc206 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":179:9)
#loc207 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":179:13)
#loc208 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":180:9)
#loc209 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":180:28)
#loc210 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":181:9)
#loc211 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":181:32)
#loc212 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":182:9)
#loc213 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":182:41)
#loc214 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":231:9)
#loc215 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":231:24)
#loc216 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":232:9)
#loc217 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":232:20)
#loc218 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":234:13)
#loc219 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":234:17)
#loc220 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":235:13)
#loc221 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":235:34)
#loc222 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":171:5)
#loc223 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":171:9)
#loc224 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":173:13)
#loc225 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":173:12)
#loc226 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":173:5)
#loc227 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":174:5)
#loc228 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":229:5)
#loc229 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":183:9)
#loc230 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":218:17)
#loc231 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":218:16)
#loc232 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":193:36)
#loc233 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":193:45)
#loc234 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":193:58)
#loc235 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":193:29)
#loc236 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":193:13)
#loc237 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":193:69)
#loc238 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":194:13)
#loc239 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":197:13)
#loc240 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":194:17)
#loc241 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":194:34)
#loc242 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":195:13)
#loc243 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":196:17)
#loc244 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":198:20)
#loc245 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":198:21)
#loc246 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":198:30)
#loc247 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":198:33)
#loc248 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":198:47)
#loc249 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":198:13)
#loc250 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":198:48)
#loc251 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":199:34)
#loc252 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":199:13)
#loc253 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":200:49)
#loc254 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":200:39)
#loc255 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":200:13)
#loc256 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":200:59)
#loc257 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":201:38)
#loc258 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":201:32)
#loc259 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":201:13)
#loc260 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":201:46)
#loc261 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":202:13)
#loc262 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":205:13)
#loc263 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":202:25)
#loc264 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":202:58)
#loc265 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":202:59)
#loc266 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":202:68)
#loc267 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":202:82)
#loc268 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":202:17)
#loc269 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":202:88)
#loc270 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":203:13)
#loc271 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":204:17)
#loc272 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":208:31)
#loc273 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":208:46)
#loc274 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":208:59)
#loc275 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":208:77)
#loc276 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":208:80)
#loc277 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":208:26)
#loc278 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":208:13)
#loc279 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":208:81)
#loc280 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":209:13)
#loc281 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":212:13)
#loc282 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":209:17)
#loc283 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":209:31)
#loc285 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":209:47)
#loc286 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":209:61)
#loc287 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":210:13)
#loc288 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":211:17)
#loc289 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":214:39)
#loc290 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":214:25)
#loc291 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":214:13)
#loc292 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":216:25)
#loc293 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":216:20)
#loc294 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":216:13)
#loc295 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":216:36)
#loc296 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":219:9)
#loc297 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":222:9)
#loc298 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":219:13)
#loc299 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":219:30)
#loc300 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":220:9)
#loc301 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":221:26)
#loc302 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":221:13)
#loc303 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":230:5)
#loc304 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":251:5)
#loc305 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":233:9)
#loc306 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":250:9)
#loc307 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":237:13)
#loc308 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":249:13)
#loc309 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":237:17)
#loc310 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":237:25)
#loc312 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":237:30)
#loc313 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":237:38)
#loc314 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":237:40)
#loc315 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":238:13)
#loc316 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":245:13)
#loc317 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":247:13)
#loc318 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":239:32)
#loc319 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":239:24)
#loc320 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":239:17)
#loc321 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":241:17)
#loc322 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":244:17)
#loc323 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":241:25)
#loc324 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":241:21)
#loc325 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":241:28)
#loc326 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":241:32)
#loc327 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":241:30)
#loc328 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":242:17)
#loc329 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":243:41)
#loc330 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":243:34)
#loc331 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":243:21)
#loc332 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":241:37)
#loc333 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":241:36)
#loc334 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_31.c":248:17)
#loc335 = loc(fused[#loc1, #loc2])
#loc336 = loc(fused[#loc3, #loc4])
#loc337 = loc(fused[#loc6, #loc7])
#loc338 = loc(fused[#loc8, #loc9])
#loc339 = loc(fused[#loc10, #loc11])
#loc340 = loc(fused[#loc12, #loc13])
#loc341 = loc(fused[#loc14, #loc15])
#loc342 = loc(fused[#loc16, #loc17])
#loc343 = loc(fused[#loc18, #loc19])
#loc344 = loc(fused[#loc21, #loc22])
#loc345 = loc(fused[#loc23, #loc24])
#loc346 = loc(fused[#loc25, #loc26])
#loc347 = loc(fused[#loc27, #loc28])
#loc348 = loc(fused[#loc29, #loc30])
#loc349 = loc(fused[#loc31, #loc32])
#loc350 = loc(fused[#loc33, #loc34])
#loc351 = loc(fused[#loc35, #loc36])
#loc352 = loc(fused[#loc37, #loc38])
#loc353 = loc(fused[#loc39, #loc40])
#loc354 = loc(fused[#loc43, #loc41])
#loc355 = loc(fused[#loc44, #loc45])
#loc356 = loc(fused[#loc46, #loc47])
#loc357 = loc(fused[#loc53, #loc54])
#loc358 = loc(fused[#loc55, #loc56])
#loc359 = loc(fused[#loc57, #loc58])
#loc360 = loc(fused[#loc59, #loc56])
#loc361 = loc(fused[#loc61, #loc62])
#loc362 = loc(fused[#loc64, #loc65])
#loc363 = loc(fused[#loc66, #loc67])
#loc364 = loc(fused[#loc70, #loc68])
#loc365 = loc(fused[#loc74, #loc75])
#loc366 = loc(fused[#loc79, #loc80])
#loc367 = loc(fused[#loc81, #loc82])
#loc368 = loc(fused[#loc84, #loc85])
#loc369 = loc(fused[#loc86, #loc87])
#loc370 = loc(fused[#loc88, #loc89])
#loc371 = loc(fused[#loc90, #loc82])
#loc372 = loc(fused[#loc94, #loc95])
#loc373 = loc(fused[#loc98, #loc99])
#loc374 = loc(fused[#loc100, #loc101])
#loc375 = loc(fused[#loc102, #loc103])
#loc376 = loc(fused[#loc105, #loc106])
#loc377 = loc(fused[#loc107, #loc101])
#loc378 = loc(fused[#loc111, #loc109])
#loc379 = loc(fused[#loc114, #loc115])
#loc380 = loc(fused[#loc116, #loc117])
#loc381 = loc(fused[#loc118, #loc119])
#loc382 = loc(fused[#loc120, #loc117])
#loc383 = loc(fused[#loc123, #loc124])
#loc384 = loc(fused[#loc125, #loc126])
#loc385 = loc(fused[#loc127, #loc128])
#loc386 = loc(fused[#loc129, #loc130])
#loc387 = loc(fused[#loc131, #loc132, #loc133, #loc128])
#loc388 = loc(fused[#loc136, #loc134])
#loc389 = loc(fused[#loc137, #loc138])
#loc390 = loc(fused[#loc140, #loc139])
#loc391 = loc(fused[#loc141, #loc142])
#loc392 = loc(fused[#loc144, #loc138])
#loc393 = loc(fused[#loc149, #loc148])
#loc394 = loc(fused[#loc151, #loc152])
#loc395 = loc(fused[#loc153, #loc154])
#loc396 = loc(fused[#loc155, #loc156])
#loc397 = loc(fused[#loc157, #loc158])
#loc398 = loc(fused[#loc159, #loc160])
#loc399 = loc(fused[#loc161, #loc162])
#loc400 = loc(fused[#loc163, #loc164])
#loc401 = loc(fused[#loc165, #loc166])
#loc402 = loc(fused[#loc167, #loc168])
#loc403 = loc(fused[#loc171, #loc169])
#loc404 = loc(fused[#loc173, #loc172])
#loc405 = loc(fused[#loc174, #loc175])
#loc406 = loc(fused[#loc176, #loc177])
#loc407 = loc(fused[#loc178, #loc179])
#loc408 = loc(fused[#loc180, #loc181])
#loc409 = loc(fused[#loc182, #loc183, #loc184, #loc179])
#loc410 = loc(fused[#loc187, #loc185])
#loc411 = loc(fused[#loc188, #loc189])
#loc412 = loc(fused[#loc191, #loc190])
#loc413 = loc(fused[#loc192, #loc193])
#loc414 = loc(fused[#loc195, #loc189])
#loc415 = loc(fused[#loc200, #loc199])
#loc416 = loc(fused[#loc204, #loc205])
#loc417 = loc(fused[#loc206, #loc207])
#loc418 = loc(fused[#loc208, #loc209])
#loc419 = loc(fused[#loc210, #loc211])
#loc420 = loc(fused[#loc212, #loc213])
#loc421 = loc(fused[#loc214, #loc215])
#loc422 = loc(fused[#loc216, #loc217])
#loc423 = loc(fused[#loc218, #loc219])
#loc424 = loc(fused[#loc220, #loc221])
#loc425 = loc(fused[#loc222, #loc223])
#loc426 = loc(fused[#loc226, #loc224])
#loc427 = loc(fused[#loc227, #loc228])
#loc428 = loc(fused[#loc229, #loc230])
#loc429 = loc(fused[#loc236, #loc237])
#loc430 = loc(fused[#loc238, #loc239])
#loc431 = loc(fused[#loc240, #loc241])
#loc432 = loc(fused[#loc242, #loc239])
#loc433 = loc(fused[#loc244, #loc245])
#loc434 = loc(fused[#loc247, #loc248])
#loc435 = loc(fused[#loc249, #loc250])
#loc436 = loc(fused[#loc252, #loc251])
#loc437 = loc(fused[#loc255, #loc256])
#loc438 = loc(fused[#loc259, #loc260])
#loc439 = loc(fused[#loc261, #loc262])
#loc440 = loc(fused[#loc264, #loc265])
#loc441 = loc(fused[#loc266, #loc267])
#loc442 = loc(fused[#loc268, #loc269])
#loc443 = loc(fused[#loc270, #loc262])
#loc444 = loc(fused[#loc274, #loc275])
#loc445 = loc(fused[#loc278, #loc279])
#loc446 = loc(fused[#loc280, #loc281])
#loc447 = loc(fused[#loc282, #loc283])
#loc448 = loc(fused[#loc285, #loc286])
#loc449 = loc(fused[#loc287, #loc281])
#loc450 = loc(fused[#loc291, #loc289])
#loc451 = loc(fused[#loc294, #loc295])
#loc452 = loc(fused[#loc296, #loc297])
#loc453 = loc(fused[#loc298, #loc299])
#loc454 = loc(fused[#loc300, #loc297])
#loc455 = loc(fused[#loc303, #loc304])
#loc456 = loc(fused[#loc305, #loc306])
#loc457 = loc(fused[#loc307, #loc308])
#loc458 = loc(fused[#loc309, #loc310])
#loc459 = loc(fused[#loc312, #loc314])
#loc460 = loc(fused[#loc315, #loc316, #loc317, #loc308])
#loc461 = loc(fused[#loc320, #loc318])
#loc462 = loc(fused[#loc321, #loc322])
#loc463 = loc(fused[#loc324, #loc323])
#loc464 = loc(fused[#loc325, #loc326])
#loc465 = loc(fused[#loc328, #loc322])
#loc466 = loc(fused[#loc333, #loc332])
