!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":108:10)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":108:14)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":108:20)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":108:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc182 = loc(fused[#loc59, #loc60])
#loc183 = loc(fused[#loc61, #loc62])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45_badData = #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> {alignment = 8 : i64} loc(#loc158)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc160)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc161)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc162)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc11)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc163)
    cir.br ^bb1 loc(#loc164)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<100> : !s32i loc(#loc6)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc6)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc6)
    %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc6)
    %8 = cir.alloca !u8i, !cir.ptr<!u8i>, %7 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc6)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc6)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc6)
    cir.store %10, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc160)
    cir.br ^bb2 loc(#loc165)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc166)
  ^bb3:  // pred: ^bb2
    %11 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc19)
    cir.store %12, %1 : !u64i, !cir.ptr<!u64i> loc(#loc167)
    cir.br ^bb4 loc(#loc166)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %13 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc21)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc22)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc22)
    %16 = cir.cmp(lt, %13, %15) : !u64i, !cir.bool loc(#loc168)
    cir.brcond %16 ^bb5, ^bb9 loc(#loc23)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc169)
  ^bb6:  // pred: ^bb5
    %17 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc26)
    %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc27)
    %20 = cir.ptr_stride(%18 : !cir.ptr<!ty__twoIntsStruct>, %19 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc28)
    %21 = cir.get_member %20[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc29)
    cir.store %17, %21 : !s32i, !cir.ptr<!s32i> loc(#loc170)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc31)
    %24 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc32)
    %25 = cir.ptr_stride(%23 : !cir.ptr<!ty__twoIntsStruct>, %24 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc33)
    %26 = cir.get_member %25[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc34)
    cir.store %22, %26 : !s32i, !cir.ptr<!s32i> loc(#loc171)
    cir.br ^bb7 loc(#loc18)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc18)
  ^bb8:  // pred: ^bb7
    %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc35)
    %28 = cir.unary(inc, %27) : !u64i, !u64i loc(#loc36)
    cir.store %28, %1 : !u64i, !cir.ptr<!u64i> loc(#loc172)
    cir.br ^bb4 loc(#loc166)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc18)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc16)
  ^bb11:  // pred: ^bb10
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
    cir.store %29, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc173)
    cir.br ^bb12 loc(#loc14)
  ^bb12:  // pred: ^bb11
    %30 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
    %31 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45_badData : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc158)
    cir.store %30, %31 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc174)
    %32 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc175)
    cir.call %32() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    cir.return loc(#loc4)
  } loc(#loc159)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc177)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    cir.return loc(#loc44)
  } loc(#loc176)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc178)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc179)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc180)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc56)
  cir.func @main(%arg0: !s32i loc(fused[#loc59, #loc60]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc61, #loc62])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc182)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc183)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc58)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc63)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc63)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc64)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc65)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc65)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc66)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc53)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %8 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45_good : !cir.ptr<!cir.func<!void ()>> loc(#loc184)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45_good() : () -> () loc(#loc68)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc54)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc55)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %13 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc185)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45_bad() : () -> () loc(#loc72)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc56)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc75)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc186)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc186)
    cir.return %17 : !s32i loc(#loc186)
  } loc(#loc181)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc187)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc188)
  cir.func no_proto internal private @badSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc190)
    %1 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45_badData : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc158)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc84)
    cir.store %2, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc190)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc85)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc86)
    %5 = cir.ptr_stride(%3 : !cir.ptr<!ty__twoIntsStruct>, %4 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc87)
    cir.call @printStructLine(%5) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc88)
    %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc89)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc90)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc90)
    cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc89)
    cir.return loc(#loc82)
  } loc(#loc189)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc191)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc93)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc192)
  cir.global "private" internal dsolocal @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45_goodG2BData = #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> {alignment = 8 : i64} loc(#loc193)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc195)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc196)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc197)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc106)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc198)
    cir.br ^bb1 loc(#loc199)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc110)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc111)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc111)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc200)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc201)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc110)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc202)
    cir.store %10, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc195)
    cir.br ^bb2 loc(#loc203)
  ^bb2:  // pred: ^bb1
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc116)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc117)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc117)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc204)
    cir.brcond %14 ^bb3, ^bb4 loc(#loc205)
  ^bb3:  // pred: ^bb2
    %15 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc93)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc93)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc120)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc121)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr1) loc(#loc120)
    cir.br ^bb4 loc(#loc115)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc115)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc206)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc207)
  ^bb7:  // pred: ^bb6
    %19 = cir.const #cir.int<0> : !s32i loc(#loc126)
    %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc126)
    cir.store %20, %1 : !u64i, !cir.ptr<!u64i> loc(#loc208)
    cir.br ^bb8 loc(#loc207)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %21 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc128)
    %22 = cir.const #cir.int<100> : !s32i loc(#loc129)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc129)
    %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc209)
    cir.brcond %24 ^bb9, ^bb13 loc(#loc130)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc210)
  ^bb10:  // pred: ^bb9
    %25 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
    %27 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc134)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!ty__twoIntsStruct>, %27 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc135)
    %29 = cir.get_member %28[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc29)
    cir.store %25, %29 : !s32i, !cir.ptr<!s32i> loc(#loc211)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc136)
    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc137)
    %32 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc138)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!ty__twoIntsStruct>, %32 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc139)
    %34 = cir.get_member %33[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc34)
    cir.store %30, %34 : !s32i, !cir.ptr<!s32i> loc(#loc212)
    cir.br ^bb11 loc(#loc125)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc125)
  ^bb12:  // pred: ^bb11
    %35 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc140)
    %36 = cir.unary(inc, %35) : !u64i, !u64i loc(#loc141)
    cir.store %36, %1 : !u64i, !cir.ptr<!u64i> loc(#loc213)
    cir.br ^bb8 loc(#loc207)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc125)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc123)
  ^bb15:  // pred: ^bb14
    %37 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc142)
    cir.store %37, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc214)
    cir.br ^bb16 loc(#loc109)
  ^bb16:  // pred: ^bb15
    %38 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc144)
    %39 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45_goodG2BData : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc193)
    cir.store %38, %39 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc215)
    %40 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc216)
    cir.call %40() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc146)
    cir.return loc(#loc99)
  } loc(#loc194)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc218)
    %1 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45_goodG2BData : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc193)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc151)
    cir.store %2, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc218)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc152)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc153)
    %5 = cir.ptr_stride(%3 : !cir.ptr<!ty__twoIntsStruct>, %4 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc154)
    cir.call @printStructLine(%5) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc155)
    %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc156)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc157)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc157)
    cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc156)
    cir.return loc(#loc149)
  } loc(#loc217)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":21:1)
#loc2 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":21:24)
#loc3 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":34:1)
#loc4 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":53:1)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":40:9)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":40:55)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":42:13)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":42:20)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":36:5)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":36:21)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":37:12)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":37:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":38:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":50:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":41:9)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":48:9)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":43:13)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":47:13)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":43:22)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":43:18)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":43:25)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":43:29)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":43:27)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":44:13)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":45:40)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":45:17)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":45:28)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":45:29)
#loc29 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":46:40)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":46:17)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":46:28)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":46:29)
#loc34 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":43:35)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":43:34)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":49:16)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":49:9)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":51:69)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":51:5)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":52:5)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":52:13)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":94:1)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":97:1)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":96:5)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":96:13)
#loc47 = loc("/usr/include/stdlib.h":575:1)
#loc48 = loc("/usr/include/stdlib.h":575:41)
#loc49 = loc("/usr/include/time.h":76:1)
#loc50 = loc("/usr/include/time.h":76:38)
#loc51 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc52 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":113:15)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":115:15)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":118:15)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":120:15)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":108:1)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":123:1)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":109:1)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":111:27)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":111:22)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":111:5)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":113:5)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":114:5)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":114:64)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":115:5)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":118:5)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":119:5)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":119:63)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":120:5)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":122:12)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":122:5)
#loc77 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc78 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc79 = loc("/usr/include/stdlib.h":687:1)
#loc80 = loc("/usr/include/stdlib.h":687:32)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":26:1)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":32:1)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":28:5)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":28:28)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":29:22)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":29:27)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":29:28)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":29:5)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":31:5)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":31:10)
#loc91 = loc("/usr/include/stdlib.h":672:1)
#loc92 = loc("/usr/include/stdlib.h":672:45)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":77:23)
#loc94 = loc("/usr/include/stdlib.h":756:1)
#loc95 = loc("/usr/include/stdlib.h":756:70)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":22:1)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":22:24)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":68:1)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":92:1)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":74:9)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":74:87)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":81:13)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":81:20)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":70:5)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":70:21)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":71:12)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":71:5)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":72:5)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":89:5)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":74:55)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":74:62)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":74:66)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":74:86)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":75:9)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":79:9)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":75:13)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":75:27)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":76:9)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":77:13)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":78:13)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":78:18)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":80:9)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":87:9)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":82:13)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":86:13)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":82:22)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":82:18)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":82:25)
#loc129 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":82:29)
#loc130 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":82:27)
#loc131 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":83:13)
#loc132 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":84:40)
#loc133 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":84:17)
#loc134 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":84:28)
#loc135 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":84:29)
#loc136 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":85:40)
#loc137 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":85:17)
#loc138 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":85:28)
#loc139 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":85:29)
#loc140 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":82:35)
#loc141 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":82:34)
#loc142 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":88:16)
#loc143 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":88:9)
#loc144 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":90:73)
#loc145 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":90:5)
#loc146 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":91:5)
#loc147 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":91:17)
#loc148 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":60:1)
#loc149 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":66:1)
#loc150 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":62:5)
#loc151 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":62:28)
#loc152 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":63:22)
#loc153 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":63:27)
#loc154 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":63:28)
#loc155 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":63:5)
#loc156 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":65:5)
#loc157 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_45.c":65:10)
#loc158 = loc(fused[#loc1, #loc2])
#loc159 = loc(fused[#loc3, #loc4])
#loc160 = loc(fused[#loc5, #loc6])
#loc161 = loc(fused[#loc7, #loc8])
#loc162 = loc(fused[#loc9, #loc10])
#loc163 = loc(fused[#loc12, #loc11])
#loc164 = loc(fused[#loc13, #loc14])
#loc165 = loc(fused[#loc15, #loc16])
#loc166 = loc(fused[#loc17, #loc18])
#loc167 = loc(fused[#loc20, #loc19])
#loc168 = loc(fused[#loc21, #loc22])
#loc169 = loc(fused[#loc24, #loc18])
#loc170 = loc(fused[#loc26, #loc25])
#loc171 = loc(fused[#loc31, #loc30])
#loc172 = loc(fused[#loc36, #loc35])
#loc173 = loc(fused[#loc38, #loc37])
#loc174 = loc(fused[#loc40, #loc39])
#loc175 = loc(fused[#loc41, #loc42])
#loc176 = loc(fused[#loc43, #loc44])
#loc177 = loc(fused[#loc45, #loc46])
#loc178 = loc(fused[#loc47, #loc48])
#loc179 = loc(fused[#loc49, #loc50])
#loc180 = loc(fused[#loc51, #loc52])
#loc181 = loc(fused[#loc57, #loc58])
#loc184 = loc(fused[#loc68, #loc69])
#loc185 = loc(fused[#loc72, #loc73])
#loc186 = loc(fused[#loc76, #loc75])
#loc187 = loc(fused[#loc77, #loc78])
#loc188 = loc(fused[#loc79, #loc80])
#loc189 = loc(fused[#loc81, #loc82])
#loc190 = loc(fused[#loc83, #loc84])
#loc191 = loc(fused[#loc91, #loc92])
#loc192 = loc(fused[#loc94, #loc95])
#loc193 = loc(fused[#loc96, #loc97])
#loc194 = loc(fused[#loc98, #loc99])
#loc195 = loc(fused[#loc100, #loc101])
#loc196 = loc(fused[#loc102, #loc103])
#loc197 = loc(fused[#loc104, #loc105])
#loc198 = loc(fused[#loc107, #loc106])
#loc199 = loc(fused[#loc108, #loc109])
#loc200 = loc(fused[#loc112, #loc113])
#loc201 = loc(fused[#loc111, #loc113])
#loc202 = loc(fused[#loc110, #loc101])
#loc203 = loc(fused[#loc114, #loc115])
#loc204 = loc(fused[#loc116, #loc117])
#loc205 = loc(fused[#loc118, #loc115])
#loc206 = loc(fused[#loc122, #loc123])
#loc207 = loc(fused[#loc124, #loc125])
#loc208 = loc(fused[#loc127, #loc126])
#loc209 = loc(fused[#loc128, #loc129])
#loc210 = loc(fused[#loc131, #loc125])
#loc211 = loc(fused[#loc133, #loc132])
#loc212 = loc(fused[#loc137, #loc136])
#loc213 = loc(fused[#loc141, #loc140])
#loc214 = loc(fused[#loc143, #loc142])
#loc215 = loc(fused[#loc145, #loc144])
#loc216 = loc(fused[#loc146, #loc147])
#loc217 = loc(fused[#loc148, #loc149])
#loc218 = loc(fused[#loc150, #loc151])
