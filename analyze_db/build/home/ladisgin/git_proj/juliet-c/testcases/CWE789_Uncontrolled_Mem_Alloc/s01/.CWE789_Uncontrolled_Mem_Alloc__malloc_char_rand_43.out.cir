!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":31:23)
#loc6 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":31:31)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":69:27)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":69:35)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":103:27)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":103:35)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":155:10)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":155:14)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":155:20)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":155:32)
#true = #cir.bool<true> : !cir.bool
#loc197 = loc(fused[#loc5, #loc6])
#loc221 = loc(fused[#loc65, #loc66])
#loc240 = loc(fused[#loc114, #loc115])
#loc263 = loc(fused[#loc179, #loc180])
#loc264 = loc(fused[#loc181, #loc182])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc195)
  cir.func internal private @_ZN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43L9badSourceERm(%arg0: !cir.ptr<!u64i> loc(fused[#loc5, #loc6])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc197)
    cir.store %arg0, %0 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc7)
    %1 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc8)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc9)
    cir.store %2, %3 : !u64i, !cir.ptr<!u64i> loc(#loc198)
    cir.return loc(#loc4)
  } loc(#loc196)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc199)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc200)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc201)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc17)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc202)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc203)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc22)
  cir.func @_ZN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc205)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc27)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc27)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc206)
    cir.call @_ZN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43L9badSourceERm(%0) : (!cir.ptr<!u64i>) -> () loc(#loc29)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc208)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc36)
        %5 = cir.const #cir.int<5> : !u64i loc(#loc210)
        %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc211)
        cir.if %6 {
          %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc42)
          %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc43)
          %9 = cir.const #cir.int<1> : !u64i loc(#loc213)
          %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc214)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc42)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc215)
          cir.store %12, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc216)
          cir.scope {
            %22 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
            %23 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc51)
            %24 = cir.cmp(eq, %22, %23) : !cir.ptr<!s8i>, !cir.bool loc(#loc218)
            cir.if %24 {
              %25 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc53)
              %26 = cir.const #cir.int<1> : !s32i loc(#loc54)
              %27 = cir.unary(minus, %26) : !s32i, !s32i loc(#loc55)
              cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc53)
            } loc(#loc219)
          } loc(#loc217)
          %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc56)
          %14 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
          %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc17)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc17)
          %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc56)
          %18 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc59)
          %19 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc60)
          %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
          %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc61)
          cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc60)
        } else {
          %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc22)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc22)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc62)
        } loc(#loc212)
      } loc(#loc209)
    } loc(#loc207)
    cir.return loc(#loc24)
  } loc(#loc204)
  cir.func internal private @_ZN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43L13goodG2BSourceERm(%arg0: !cir.ptr<!u64i> loc(fused[#loc65, #loc66])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc221)
    cir.store %arg0, %0 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc67)
    %1 = cir.const #cir.int<20> : !s32i loc(#loc68)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc68)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc69)
    cir.store %2, %3 : !u64i, !cir.ptr<!u64i> loc(#loc222)
    cir.return loc(#loc64)
  } loc(#loc220)
  cir.func internal private @_ZN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc224)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc74)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc74)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc225)
    cir.call @_ZN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43L13goodG2BSourceERm(%0) : (!cir.ptr<!u64i>) -> () loc(#loc76)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc227)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc83)
        %5 = cir.const #cir.int<5> : !u64i loc(#loc229)
        %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc230)
        cir.if %6 {
          %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc89)
          %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc90)
          %9 = cir.const #cir.int<1> : !u64i loc(#loc232)
          %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc233)
          %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc89)
          %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc234)
          cir.store %12, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc235)
          cir.scope {
            %22 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
            %23 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc98)
            %24 = cir.cmp(eq, %22, %23) : !cir.ptr<!s8i>, !cir.bool loc(#loc237)
            cir.if %24 {
              %25 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc100)
              %26 = cir.const #cir.int<1> : !s32i loc(#loc101)
              %27 = cir.unary(minus, %26) : !s32i, !s32i loc(#loc102)
              cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc100)
            } loc(#loc238)
          } loc(#loc236)
          %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc103)
          %14 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
          %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc105)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc105)
          %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc103)
          %18 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
          cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc107)
          %19 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc108)
          %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
          %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc109)
          cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc108)
        } else {
          %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc110)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc110)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc111)
        } loc(#loc231)
      } loc(#loc228)
    } loc(#loc226)
    cir.return loc(#loc71)
  } loc(#loc223)
  cir.func internal private @_ZN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43L13goodB2GSourceERm(%arg0: !cir.ptr<!u64i> loc(fused[#loc114, #loc115])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc240)
    cir.store %arg0, %0 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc116)
    %1 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc117)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc117)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc118)
    cir.store %2, %3 : !u64i, !cir.ptr<!u64i> loc(#loc241)
    cir.return loc(#loc113)
  } loc(#loc239)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc120)
  cir.func internal private @_ZN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc243)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc125)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc125)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc244)
    cir.call @_ZN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43L13goodB2GSourceERm(%0) : (!cir.ptr<!u64i>) -> () loc(#loc127)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc246)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc134)
        %5 = cir.const #cir.int<5> : !u64i loc(#loc248)
        %6 = cir.cmp(gt, %4, %5) : !u64i, !cir.bool loc(#loc249)
        %7 = cir.ternary(%6, true {
          %8 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc138)
          %9 = cir.const #cir.int<100> : !s32i loc(#loc139)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc139)
          %11 = cir.cmp(lt, %8, %10) : !u64i, !cir.bool loc(#loc250)
          %12 = cir.ternary(%11, true {
            %13 = cir.const #true loc(#loc137)
            cir.yield %13 : !cir.bool loc(#loc137)
          }, false {
            %13 = cir.const #false loc(#loc137)
            cir.yield %13 : !cir.bool loc(#loc137)
          }) : (!cir.bool) -> !cir.bool loc(#loc137)
          cir.yield %12 : !cir.bool loc(#loc137)
        }, false {
          %8 = cir.const #false loc(#loc137)
          cir.yield %8 : !cir.bool loc(#loc137)
        }) : (!cir.bool) -> !cir.bool loc(#loc137)
        cir.if %7 {
          %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc143)
          %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc144)
          %10 = cir.const #cir.int<1> : !u64i loc(#loc252)
          %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc253)
          %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc143)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc254)
          cir.store %13, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc255)
          cir.scope {
            %23 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
            %24 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc152)
            %25 = cir.cmp(eq, %23, %24) : !cir.ptr<!s8i>, !cir.bool loc(#loc257)
            cir.if %25 {
              %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc154)
              %27 = cir.const #cir.int<1> : !s32i loc(#loc155)
              %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc156)
              cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc154)
            } loc(#loc258)
          } loc(#loc256)
          %14 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc157)
          %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
          %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc159)
          %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc159)
          %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc157)
          %19 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
          cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc161)
          %20 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc162)
          %21 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
          %22 = cir.cast(bitcast, %21 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc163)
          cir.call @free(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc162)
        } else {
          %8 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc120)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc120)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc164)
        } loc(#loc251)
      } loc(#loc247)
    } loc(#loc245)
    cir.return loc(#loc122)
  } loc(#loc242)
  cir.func @_ZN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43L7goodG2BEv() : () -> () loc(#loc167)
    cir.call @_ZN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43L7goodB2GEv() : () -> () loc(#loc168)
    cir.return loc(#loc166)
  } loc(#loc259)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc260)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc261)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc173)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc174)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc175)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc176)
  cir.func @main(%arg0: !s32i loc(fused[#loc179, #loc180]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc181, #loc182])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc263)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc264)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc178)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc183)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc183)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc184)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc185)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc185)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc186)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc173)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc173)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc187)
    cir.call @_ZN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_434goodEv() : () -> () loc(#loc188)
    %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc174)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc174)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc189)
    %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc175)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc175)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc190)
    cir.call @_ZN50CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_433badEv() : () -> () loc(#loc191)
    %12 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc176)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc176)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc192)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc193)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc265)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc265)
    cir.return %15 : !s32i loc(#loc265)
  } loc(#loc262)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":31:1)
#loc4 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":35:1)
#loc7 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":32:1)
#loc8 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":34:12)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":34:5)
#loc10 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":34:17)
#loc11 = loc("/usr/include/stdlib.h":672:1)
#loc12 = loc("/usr/include/stdlib.h":672:45)
#loc13 = loc("/usr/include/stdlib.h":756:1)
#loc14 = loc("/usr/include/stdlib.h":756:70)
#loc15 = loc("/usr/include/string.h":141:1)
#loc16 = loc("/usr/include/string.h":142:14)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":53:30)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("/usr/include/stdlib.h":687:1)
#loc21 = loc("/usr/include/stdlib.h":687:32)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":59:23)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":37:1)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":62:1)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":39:5)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":39:12)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":41:12)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":41:5)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":42:5)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":43:5)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":61:5)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":44:9)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":44:16)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":48:9)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":60:9)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":48:13)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":48:20)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":48:39)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":49:9)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":56:9)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":58:9)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":50:32)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":50:39)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":50:44)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":50:55)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":50:56)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":50:13)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":51:13)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":51:45)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":51:17)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":51:29)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":51:35)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":51:36)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":51:42)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":51:41)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":53:13)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":53:20)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":54:23)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":54:13)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":55:13)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":55:18)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":59:13)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":69:1)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":73:1)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":70:1)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":72:12)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":72:5)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":75:1)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":100:1)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":77:5)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":77:12)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":79:12)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":79:5)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":80:5)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":81:5)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":99:5)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":82:9)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":82:16)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":86:9)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":98:9)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":86:13)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":86:20)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":86:39)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":87:9)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":94:9)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":96:9)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":88:32)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":88:39)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":88:44)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":88:55)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":88:56)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":88:13)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":89:13)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":89:45)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":89:17)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":89:29)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":89:35)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":89:36)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":89:42)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":89:41)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":91:13)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":91:20)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":91:30)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":92:23)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":92:13)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":93:13)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":93:18)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":97:23)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":97:13)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":103:1)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":107:1)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":104:1)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":106:12)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":106:5)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":106:17)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":131:23)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":109:1)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":134:1)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":111:5)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":111:12)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":113:12)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":113:5)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":114:5)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":115:5)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":133:5)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":116:9)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":116:16)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":120:9)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":132:9)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":120:13)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":120:20)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":120:39)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":120:41)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":120:44)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":120:51)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":121:9)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":128:9)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":130:9)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":122:32)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":122:39)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":122:44)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":122:55)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":122:56)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":122:13)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":123:13)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":123:45)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":123:17)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":123:29)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":123:35)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":123:36)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":123:42)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":123:41)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":125:13)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":125:20)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":125:30)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":126:23)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":126:13)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":127:13)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":127:18)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":131:13)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":136:1)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":140:1)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":138:5)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":139:5)
#loc169 = loc("/usr/include/stdlib.h":575:1)
#loc170 = loc("/usr/include/stdlib.h":575:41)
#loc171 = loc("/usr/include/time.h":76:1)
#loc172 = loc("/usr/include/time.h":76:38)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":160:15)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":162:15)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":165:15)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":167:15)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":155:1)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":170:1)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":156:1)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":158:27)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":158:22)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":158:5)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":160:5)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":161:5)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":162:5)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":165:5)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":166:5)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":167:5)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":169:12)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_rand_43.cpp":169:5)
#loc195 = loc(fused[#loc1, #loc2])
#loc196 = loc(fused[#loc3, #loc4])
#loc198 = loc(fused[#loc9, #loc10])
#loc199 = loc(fused[#loc11, #loc12])
#loc200 = loc(fused[#loc13, #loc14])
#loc201 = loc(fused[#loc15, #loc16])
#loc202 = loc(fused[#loc18, #loc19])
#loc203 = loc(fused[#loc20, #loc21])
#loc204 = loc(fused[#loc23, #loc24])
#loc205 = loc(fused[#loc25, #loc26])
#loc206 = loc(fused[#loc28, #loc27])
#loc207 = loc(fused[#loc30, #loc31])
#loc208 = loc(fused[#loc32, #loc33])
#loc209 = loc(fused[#loc34, #loc35])
#loc210 = loc(fused[#loc37, #loc38])
#loc211 = loc(fused[#loc36, #loc38])
#loc212 = loc(fused[#loc39, #loc40, #loc41, #loc35])
#loc213 = loc(fused[#loc44, #loc45])
#loc214 = loc(fused[#loc43, #loc45])
#loc215 = loc(fused[#loc42, #loc46])
#loc216 = loc(fused[#loc47, #loc46])
#loc217 = loc(fused[#loc48, #loc49])
#loc218 = loc(fused[#loc50, #loc51])
#loc219 = loc(fused[#loc52, #loc49])
#loc220 = loc(fused[#loc63, #loc64])
#loc222 = loc(fused[#loc69, #loc68])
#loc223 = loc(fused[#loc70, #loc71])
#loc224 = loc(fused[#loc72, #loc73])
#loc225 = loc(fused[#loc75, #loc74])
#loc226 = loc(fused[#loc77, #loc78])
#loc227 = loc(fused[#loc79, #loc80])
#loc228 = loc(fused[#loc81, #loc82])
#loc229 = loc(fused[#loc84, #loc85])
#loc230 = loc(fused[#loc83, #loc85])
#loc231 = loc(fused[#loc86, #loc87, #loc88, #loc82])
#loc232 = loc(fused[#loc91, #loc92])
#loc233 = loc(fused[#loc90, #loc92])
#loc234 = loc(fused[#loc89, #loc93])
#loc235 = loc(fused[#loc94, #loc93])
#loc236 = loc(fused[#loc95, #loc96])
#loc237 = loc(fused[#loc97, #loc98])
#loc238 = loc(fused[#loc99, #loc96])
#loc239 = loc(fused[#loc112, #loc113])
#loc241 = loc(fused[#loc118, #loc119])
#loc242 = loc(fused[#loc121, #loc122])
#loc243 = loc(fused[#loc123, #loc124])
#loc244 = loc(fused[#loc126, #loc125])
#loc245 = loc(fused[#loc128, #loc129])
#loc246 = loc(fused[#loc130, #loc131])
#loc247 = loc(fused[#loc132, #loc133])
#loc248 = loc(fused[#loc135, #loc136])
#loc249 = loc(fused[#loc134, #loc136])
#loc250 = loc(fused[#loc138, #loc139])
#loc251 = loc(fused[#loc140, #loc141, #loc142, #loc133])
#loc252 = loc(fused[#loc145, #loc146])
#loc253 = loc(fused[#loc144, #loc146])
#loc254 = loc(fused[#loc143, #loc147])
#loc255 = loc(fused[#loc148, #loc147])
#loc256 = loc(fused[#loc149, #loc150])
#loc257 = loc(fused[#loc151, #loc152])
#loc258 = loc(fused[#loc153, #loc150])
#loc259 = loc(fused[#loc165, #loc166])
#loc260 = loc(fused[#loc169, #loc170])
#loc261 = loc(fused[#loc171, #loc172])
#loc262 = loc(fused[#loc177, #loc178])
#loc265 = loc(fused[#loc194, #loc193])
