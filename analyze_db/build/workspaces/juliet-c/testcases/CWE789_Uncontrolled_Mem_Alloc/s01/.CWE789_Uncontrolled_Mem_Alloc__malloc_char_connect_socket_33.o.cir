!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc355)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc356)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc357)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc358)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc359)
  cir.func private @__isoc23_strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc360)
  cir.func private @close(!s32i) -> !s32i loc(#loc361)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc362)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc363)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc364)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc22)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc365)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc366)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc27)
  cir.func @_ZN60CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc368)
    %1 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc369)
    cir.store %0, %1 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc33)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc34)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc370)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc372)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc373)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc374)
      %7 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc375)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc43)
      %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc43)
      cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc374)
      cir.scope {
        cir.do {
          cir.scope {
            %10 = cir.const #cir.int<2> : !s32i loc(#loc50)
            %11 = cir.const #cir.int<1> : !u32i loc(#loc51)
            %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc51)
            %13 = cir.const #cir.int<6> : !u32i loc(#loc52)
            %14 = cir.cast(integral, %13 : !u32i), !s32i loc(#loc52)
            %15 = cir.call @socket(%10, %12, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc53)
            cir.store %15, %6 : !s32i, !cir.ptr<!s32i> loc(#loc378)
            cir.scope {
              %56 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc58)
              %57 = cir.const #cir.int<1> : !s32i loc(#loc59)
              %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc59)
              %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc380)
              cir.if %59 {
                cir.break loc(#loc61)
              } loc(#loc381)
            } loc(#loc379)
            %16 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc382)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc64)
            %18 = cir.const #cir.int<16> : !u64i loc(#loc383)
            cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc384)
            %19 = cir.const #cir.int<2> : !s32i loc(#loc69)
            %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc69)
            %21 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
            cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc385)
            %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
            %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
            %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc72)
            %25 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc73)
            %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc74)
            cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc386)
            %27 = cir.const #cir.int<27015> : !s32i loc(#loc77)
            %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc77)
            %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc78)
            %30 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc79)
            cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc387)
            cir.scope {
              %56 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc84)
              %57 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc389)
              %58 = cir.const #cir.int<16> : !u64i loc(#loc390)
              %59 = cir.cast(integral, %58 : !u64i), !u32i loc(#loc390)
              %60 = cir.call @connect(%56, %57, %59) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc89)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc90)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc90)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc391)
              cir.if %63 {
                cir.break loc(#loc92)
              } loc(#loc392)
            } loc(#loc388)
            %31 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc93)
            %32 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc94)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc94)
            %34 = cir.const #cir.int<3> : !s32i loc(#loc95)
            %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc95)
            %36 = cir.const #cir.int<8> : !u64i loc(#loc95)
            %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc95)
            %38 = cir.const #cir.int<2> : !s32i loc(#loc95)
            %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc95)
            %40 = cir.binop(add, %37, %39) : !u64i loc(#loc95)
            %41 = cir.const #cir.int<1> : !s32i loc(#loc96)
            %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc96)
            %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc393)
            %44 = cir.const #cir.int<0> : !s32i loc(#loc97)
            %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc98)
            %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc98)
            cir.store %46, %4 : !s32i, !cir.ptr<!s32i> loc(#loc394)
            cir.scope {
              %56 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc103)
              %57 = cir.const #cir.int<1> : !s32i loc(#loc104)
              %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc104)
              %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc396)
              %60 = cir.ternary(%59, true {
                %61 = cir.const #true loc(#loc105)
                cir.yield %61 : !cir.bool loc(#loc105)
              }, false {
                %61 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc106)
                %62 = cir.const #cir.int<0> : !s32i loc(#loc107)
                %63 = cir.cmp(eq, %61, %62) : !s32i, !cir.bool loc(#loc397)
                %64 = cir.ternary(%63, true {
                  %65 = cir.const #true loc(#loc105)
                  cir.yield %65 : !cir.bool loc(#loc105)
                }, false {
                  %65 = cir.const #false loc(#loc105)
                  cir.yield %65 : !cir.bool loc(#loc105)
                }) : (!cir.bool) -> !cir.bool loc(#loc105)
                cir.yield %64 : !cir.bool loc(#loc105)
              }) : (!cir.bool) -> !cir.bool loc(#loc105)
              cir.if %60 {
                cir.break loc(#loc109)
              } loc(#loc398)
            } loc(#loc395)
            %47 = cir.const #cir.int<0> : !s8i loc(#loc110)
            %48 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc111)
            %49 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc112)
            %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc112)
            cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc399)
            %51 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc113)
            %52 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc114)
            %53 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
            %54 = cir.const #cir.int<0> : !s32i loc(#loc116)
            %55 = cir.call @__isoc23_strtoul(%52, %53, %54) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc113)
            cir.store %55, %0 : !u64i, !cir.ptr<!u64i> loc(#loc400)
          } loc(#loc377)
          cir.yield loc(#loc47)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc119)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc119)
          cir.condition(%11) loc(#loc119)
        } loc(#loc376)
      } loc(#loc376)
      cir.scope {
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc122)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc123)
        %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc123)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc402)
        cir.if %13 {
          %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc125)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc126)
        } loc(#loc403)
      } loc(#loc401)
    } loc(#loc371)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc405)
      %5 = cir.load %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc130)
      %6 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc130)
      cir.store %6, %4 : !u64i, !cir.ptr<!u64i> loc(#loc405)
      cir.scope {
        %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc407)
        cir.scope {
          %8 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc137)
          %9 = cir.const #cir.int<5> : !u64i loc(#loc409)
          %10 = cir.cmp(gt, %8, %9) : !u64i, !cir.bool loc(#loc410)
          cir.if %10 {
            %11 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc143)
            %12 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc144)
            %13 = cir.const #cir.int<1> : !u64i loc(#loc412)
            %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc413)
            %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc143)
            %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc414)
            cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc415)
            cir.scope {
              %26 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
              %27 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc152)
              %28 = cir.cmp(eq, %26, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc417)
              cir.if %28 {
                %29 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc154)
                %30 = cir.const #cir.int<1> : !s32i loc(#loc155)
                %31 = cir.unary(minus, %30) nsw : !s32i, !s32i loc(#loc156)
                cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc154)
              } loc(#loc418)
            } loc(#loc416)
            %17 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc157)
            %18 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
            %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc22)
            %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc22)
            %21 = cir.call @strcpy(%18, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc157)
            %22 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
            cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc160)
            %23 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc161)
            %24 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc162)
            %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc162)
            cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc161)
          } else {
            %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc27)
            %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc27)
            cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc163)
          } loc(#loc411)
        } loc(#loc408)
      } loc(#loc406)
    } loc(#loc404)
    cir.return loc(#loc29)
  } loc(#loc367)
  cir.func internal private @_ZN60CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc420)
    %1 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc421)
    cir.store %0, %1 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc169)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc170)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc170)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc422)
    %4 = cir.const #cir.int<20> : !s32i loc(#loc172)
    %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc172)
    cir.store %5, %0 : !u64i, !cir.ptr<!u64i> loc(#loc423)
    cir.scope {
      %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc425)
      %7 = cir.load %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc177)
      %8 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc177)
      cir.store %8, %6 : !u64i, !cir.ptr<!u64i> loc(#loc425)
      cir.scope {
        %9 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc427)
        cir.scope {
          %10 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc184)
          %11 = cir.const #cir.int<5> : !u64i loc(#loc429)
          %12 = cir.cmp(gt, %10, %11) : !u64i, !cir.bool loc(#loc430)
          cir.if %12 {
            %13 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc190)
            %14 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc191)
            %15 = cir.const #cir.int<1> : !u64i loc(#loc432)
            %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc433)
            %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc190)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc434)
            cir.store %18, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc435)
            cir.scope {
              %28 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc198)
              %29 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc199)
              %30 = cir.cmp(eq, %28, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc437)
              cir.if %30 {
                %31 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc201)
                %32 = cir.const #cir.int<1> : !s32i loc(#loc202)
                %33 = cir.unary(minus, %32) nsw : !s32i, !s32i loc(#loc203)
                cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc201)
              } loc(#loc438)
            } loc(#loc436)
            %19 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc204)
            %20 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc205)
            %21 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc206)
            %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc206)
            %23 = cir.call @strcpy(%20, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc204)
            %24 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc207)
            cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc208)
            %25 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc209)
            %26 = cir.load %9 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc210)
            %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc210)
            cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc209)
          } else {
            %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc211)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc211)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc212)
          } loc(#loc431)
        } loc(#loc428)
      } loc(#loc426)
    } loc(#loc424)
    cir.return loc(#loc165)
  } loc(#loc419)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc213)
  cir.func internal private @_ZN60CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc440)
    %1 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc441)
    cir.store %0, %1 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc219)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc220)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc220)
    cir.store %3, %0 : !u64i, !cir.ptr<!u64i> loc(#loc442)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc444)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc445)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc446)
      %7 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc447)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc229)
      %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc229)
      cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc446)
      cir.scope {
        cir.do {
          cir.scope {
            %10 = cir.const #cir.int<2> : !s32i loc(#loc236)
            %11 = cir.const #cir.int<1> : !u32i loc(#loc237)
            %12 = cir.cast(integral, %11 : !u32i), !s32i loc(#loc237)
            %13 = cir.const #cir.int<6> : !u32i loc(#loc238)
            %14 = cir.cast(integral, %13 : !u32i), !s32i loc(#loc238)
            %15 = cir.call @socket(%10, %12, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc239)
            cir.store %15, %6 : !s32i, !cir.ptr<!s32i> loc(#loc450)
            cir.scope {
              %56 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc244)
              %57 = cir.const #cir.int<1> : !s32i loc(#loc245)
              %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc245)
              %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc452)
              cir.if %59 {
                cir.break loc(#loc247)
              } loc(#loc453)
            } loc(#loc451)
            %16 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc454)
            %17 = cir.const #cir.int<0> : !s32i loc(#loc250)
            %18 = cir.const #cir.int<16> : !u64i loc(#loc455)
            cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc456)
            %19 = cir.const #cir.int<2> : !s32i loc(#loc255)
            %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc255)
            %21 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
            cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc457)
            %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc257)
            %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc257)
            %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc258)
            %25 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc73)
            %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc74)
            cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc458)
            %27 = cir.const #cir.int<27015> : !s32i loc(#loc261)
            %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc261)
            %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc262)
            %30 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc79)
            cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc459)
            cir.scope {
              %56 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc267)
              %57 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc461)
              %58 = cir.const #cir.int<16> : !u64i loc(#loc462)
              %59 = cir.cast(integral, %58 : !u64i), !u32i loc(#loc462)
              %60 = cir.call @connect(%56, %57, %59) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc272)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc273)
              %62 = cir.unary(minus, %61) nsw : !s32i, !s32i loc(#loc273)
              %63 = cir.cmp(eq, %60, %62) : !s32i, !cir.bool loc(#loc463)
              cir.if %63 {
                cir.break loc(#loc275)
              } loc(#loc464)
            } loc(#loc460)
            %31 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc276)
            %32 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc277)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc277)
            %34 = cir.const #cir.int<3> : !s32i loc(#loc278)
            %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc278)
            %36 = cir.const #cir.int<8> : !u64i loc(#loc278)
            %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc278)
            %38 = cir.const #cir.int<2> : !s32i loc(#loc278)
            %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc278)
            %40 = cir.binop(add, %37, %39) : !u64i loc(#loc278)
            %41 = cir.const #cir.int<1> : !s32i loc(#loc279)
            %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc279)
            %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc465)
            %44 = cir.const #cir.int<0> : !s32i loc(#loc280)
            %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc281)
            %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc281)
            cir.store %46, %4 : !s32i, !cir.ptr<!s32i> loc(#loc466)
            cir.scope {
              %56 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc286)
              %57 = cir.const #cir.int<1> : !s32i loc(#loc287)
              %58 = cir.unary(minus, %57) nsw : !s32i, !s32i loc(#loc287)
              %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc468)
              %60 = cir.ternary(%59, true {
                %61 = cir.const #true loc(#loc288)
                cir.yield %61 : !cir.bool loc(#loc288)
              }, false {
                %61 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc289)
                %62 = cir.const #cir.int<0> : !s32i loc(#loc290)
                %63 = cir.cmp(eq, %61, %62) : !s32i, !cir.bool loc(#loc469)
                %64 = cir.ternary(%63, true {
                  %65 = cir.const #true loc(#loc288)
                  cir.yield %65 : !cir.bool loc(#loc288)
                }, false {
                  %65 = cir.const #false loc(#loc288)
                  cir.yield %65 : !cir.bool loc(#loc288)
                }) : (!cir.bool) -> !cir.bool loc(#loc288)
                cir.yield %64 : !cir.bool loc(#loc288)
              }) : (!cir.bool) -> !cir.bool loc(#loc288)
              cir.if %60 {
                cir.break loc(#loc292)
              } loc(#loc470)
            } loc(#loc467)
            %47 = cir.const #cir.int<0> : !s8i loc(#loc293)
            %48 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc294)
            %49 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc295)
            %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !s32i), !cir.ptr<!s8i> loc(#loc295)
            cir.store %47, %50 : !s8i, !cir.ptr<!s8i> loc(#loc471)
            %51 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc296)
            %52 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc297)
            %53 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc298)
            %54 = cir.const #cir.int<0> : !s32i loc(#loc299)
            %55 = cir.call @__isoc23_strtoul(%52, %53, %54) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc296)
            cir.store %55, %0 : !u64i, !cir.ptr<!u64i> loc(#loc472)
          } loc(#loc449)
          cir.yield loc(#loc233)
        } while {
          %10 = cir.const #cir.int<0> : !s32i loc(#loc302)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc302)
          cir.condition(%11) loc(#loc302)
        } loc(#loc448)
      } loc(#loc448)
      cir.scope {
        %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc305)
        %11 = cir.const #cir.int<1> : !s32i loc(#loc306)
        %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc306)
        %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc474)
        cir.if %13 {
          %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc308)
          %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc309)
        } loc(#loc475)
      } loc(#loc473)
    } loc(#loc443)
    cir.scope {
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc477)
      %5 = cir.load %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc313)
      %6 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc313)
      cir.store %6, %4 : !u64i, !cir.ptr<!u64i> loc(#loc477)
      cir.scope {
        %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc479)
        cir.scope {
          %8 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc320)
          %9 = cir.const #cir.int<5> : !u64i loc(#loc481)
          %10 = cir.cmp(gt, %8, %9) : !u64i, !cir.bool loc(#loc482)
          %11 = cir.ternary(%10, true {
            %12 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc324)
            %13 = cir.const #cir.int<100> : !s32i loc(#loc325)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc325)
            %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc483)
            %16 = cir.ternary(%15, true {
              %17 = cir.const #true loc(#loc323)
              cir.yield %17 : !cir.bool loc(#loc323)
            }, false {
              %17 = cir.const #false loc(#loc323)
              cir.yield %17 : !cir.bool loc(#loc323)
            }) : (!cir.bool) -> !cir.bool loc(#loc323)
            cir.yield %16 : !cir.bool loc(#loc323)
          }, false {
            %12 = cir.const #false loc(#loc323)
            cir.yield %12 : !cir.bool loc(#loc323)
          }) : (!cir.bool) -> !cir.bool loc(#loc323)
          cir.if %11 {
            %12 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc329)
            %13 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc330)
            %14 = cir.const #cir.int<1> : !u64i loc(#loc485)
            %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc486)
            %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc329)
            %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc487)
            cir.store %17, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc488)
            cir.scope {
              %27 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc337)
              %28 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc338)
              %29 = cir.cmp(eq, %27, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc490)
              cir.if %29 {
                %30 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc340)
                %31 = cir.const #cir.int<1> : !s32i loc(#loc341)
                %32 = cir.unary(minus, %31) nsw : !s32i, !s32i loc(#loc342)
                cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc340)
              } loc(#loc491)
            } loc(#loc489)
            %18 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc343)
            %19 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc344)
            %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc345)
            %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc345)
            %22 = cir.call @strcpy(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc343)
            %23 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc346)
            cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc347)
            %24 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc348)
            %25 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc349)
            %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc349)
            cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc348)
          } else {
            %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc213)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc213)
            cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc350)
          } loc(#loc484)
        } loc(#loc480)
      } loc(#loc478)
    } loc(#loc476)
    cir.return loc(#loc215)
  } loc(#loc439)
  cir.func @_ZN60CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN60CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33L7goodG2BEv() : () -> () loc(#loc353)
    cir.call @_ZN60CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33L7goodB2GEv() : () -> () loc(#loc354)
    cir.return loc(#loc352)
  } loc(#loc492)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":85:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":219:1)
#loc13 = loc("/usr/include/stdlib.h":223:6)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("/usr/include/stdlib.h":672:1)
#loc17 = loc("/usr/include/stdlib.h":672:45)
#loc18 = loc("/usr/include/stdlib.h":756:1)
#loc19 = loc("/usr/include/stdlib.h":756:70)
#loc20 = loc("/usr/include/string.h":141:1)
#loc21 = loc("/usr/include/string.h":142:14)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":127:34)
#loc23 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc24 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc25 = loc("/usr/include/stdlib.h":687:1)
#loc26 = loc("/usr/include/stdlib.h":687:32)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":133:27)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":53:1)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":137:1)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":55:5)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":55:12)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":56:5)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":56:23)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":58:12)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":58:5)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":59:5)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":114:5)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":64:9)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":64:13)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":65:9)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":65:28)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":66:9)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":66:32)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":67:9)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":67:41)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":68:9)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":103:17)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":69:9)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":102:9)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":78:36)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":78:45)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":78:58)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":78:29)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":78:13)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":78:69)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":79:13)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":82:13)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":79:17)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":79:34)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":80:13)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":81:17)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":83:20)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":83:21)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":83:30)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":83:33)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":83:47)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":83:13)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":83:48)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":84:34)
#loc70 = loc("/usr/include/netinet/in.h":249:5)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":84:13)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":85:39)
#loc73 = loc("/usr/include/netinet/in.h":251:20)
#loc74 = loc("/usr/include/netinet/in.h":33:15)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":85:13)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":85:59)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":86:38)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":86:32)
#loc79 = loc("/usr/include/netinet/in.h":250:15)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":86:13)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":86:46)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":87:13)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":90:13)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":87:25)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":87:58)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":87:59)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":87:68)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":87:82)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":87:17)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":87:88)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":88:13)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":89:17)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":93:31)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":93:46)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":93:59)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":93:77)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":93:80)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":93:26)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":93:13)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":93:81)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":94:13)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":97:13)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":94:17)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":94:31)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":94:44)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":94:47)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":94:61)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":95:13)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":96:17)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":99:39)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":99:25)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":99:13)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":101:20)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":101:28)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":101:41)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":101:47)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":101:13)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":101:48)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":103:16)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":104:9)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":107:9)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":104:13)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":104:30)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":105:9)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":106:26)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":106:13)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":115:5)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":136:5)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":116:9)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":116:23)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":117:9)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":135:9)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":118:13)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":118:20)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":122:13)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":134:13)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":122:17)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":122:24)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":122:43)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":123:13)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":130:13)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":132:13)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":124:36)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":124:43)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":124:48)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":124:59)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":124:60)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":124:17)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":125:17)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":125:49)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":125:21)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":125:33)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":125:39)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":125:40)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":125:46)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":125:45)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":127:17)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":127:24)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":128:27)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":128:17)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":129:17)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":129:22)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":133:17)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":144:1)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":174:1)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":146:5)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":146:12)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":147:5)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":147:23)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":149:12)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":149:5)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":151:12)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":151:5)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":152:5)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":173:5)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":153:9)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":153:23)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":154:9)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":172:9)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":155:13)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":155:20)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":159:13)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":171:13)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":159:17)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":159:24)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":159:43)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":160:13)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":167:13)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":169:13)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":161:36)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":161:43)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":161:48)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":161:59)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":161:60)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":161:17)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":162:17)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":162:49)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":162:21)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":162:33)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":162:39)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":162:40)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":162:46)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":162:45)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":164:17)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":164:24)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":164:34)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":165:27)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":165:17)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":166:17)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":166:22)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":170:27)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":170:17)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":257:27)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":177:1)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":261:1)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":179:5)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":179:12)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":180:5)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":180:23)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":182:12)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":182:5)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":183:5)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":238:5)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":188:9)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":188:13)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":189:9)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":189:28)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":190:9)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":190:32)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":191:9)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":191:41)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":192:9)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":227:17)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":193:9)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":226:9)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":202:36)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":202:45)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":202:58)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":202:29)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":202:13)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":202:69)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":203:13)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":206:13)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":203:17)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":203:34)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":204:13)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":205:17)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":207:20)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":207:21)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":207:30)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":207:33)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":207:47)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":207:13)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":207:48)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":208:34)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":208:13)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":209:49)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":209:39)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":209:13)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":209:59)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":210:38)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":210:32)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":210:13)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":210:46)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":211:13)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":214:13)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":211:25)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":211:58)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":211:59)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":211:68)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":211:82)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":211:17)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":211:88)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":212:13)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":213:17)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":217:31)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":217:46)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":217:59)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":217:77)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":217:80)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":217:26)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":217:13)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":217:81)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":218:13)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":221:13)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":218:17)
#loc287 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":218:31)
#loc288 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":218:44)
#loc289 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":218:47)
#loc290 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":218:61)
#loc291 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":219:13)
#loc292 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":220:17)
#loc293 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":223:39)
#loc294 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":223:25)
#loc295 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":223:13)
#loc296 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":225:20)
#loc297 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":225:28)
#loc298 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":225:41)
#loc299 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":225:47)
#loc300 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":225:13)
#loc301 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":225:48)
#loc302 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":227:16)
#loc303 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":228:9)
#loc304 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":231:9)
#loc305 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":228:13)
#loc306 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":228:30)
#loc307 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":229:9)
#loc308 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":230:26)
#loc309 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":230:13)
#loc310 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":239:5)
#loc311 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":260:5)
#loc312 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":240:9)
#loc313 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":240:23)
#loc314 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":241:9)
#loc315 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":259:9)
#loc316 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":242:13)
#loc317 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":242:20)
#loc318 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":246:13)
#loc319 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":258:13)
#loc320 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":246:17)
#loc321 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":246:24)
#loc322 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":246:43)
#loc323 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":246:45)
#loc324 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":246:48)
#loc325 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":246:55)
#loc326 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":247:13)
#loc327 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":254:13)
#loc328 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":256:13)
#loc329 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":248:36)
#loc330 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":248:43)
#loc331 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":248:48)
#loc332 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":248:59)
#loc333 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":248:60)
#loc334 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":248:17)
#loc335 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":249:17)
#loc336 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":249:49)
#loc337 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":249:21)
#loc338 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":249:33)
#loc339 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":249:39)
#loc340 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":249:40)
#loc341 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":249:46)
#loc342 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":249:45)
#loc343 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":251:17)
#loc344 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":251:24)
#loc345 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":251:34)
#loc346 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":252:27)
#loc347 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":252:17)
#loc348 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":253:17)
#loc349 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":253:22)
#loc350 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":257:17)
#loc351 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":263:1)
#loc352 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":267:1)
#loc353 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":265:5)
#loc354 = loc("CWE789_Uncontrolled_Mem_Alloc__malloc_char_connect_socket_33.cpp":266:5)
#loc355 = loc(fused[#loc1, #loc2])
#loc356 = loc(fused[#loc3, #loc4])
#loc357 = loc(fused[#loc6, #loc7])
#loc358 = loc(fused[#loc8, #loc9])
#loc359 = loc(fused[#loc10, #loc11])
#loc360 = loc(fused[#loc12, #loc13])
#loc361 = loc(fused[#loc14, #loc15])
#loc362 = loc(fused[#loc16, #loc17])
#loc363 = loc(fused[#loc18, #loc19])
#loc364 = loc(fused[#loc20, #loc21])
#loc365 = loc(fused[#loc23, #loc24])
#loc366 = loc(fused[#loc25, #loc26])
#loc367 = loc(fused[#loc28, #loc29])
#loc368 = loc(fused[#loc30, #loc31])
#loc369 = loc(fused[#loc32, #loc33])
#loc370 = loc(fused[#loc35, #loc34])
#loc371 = loc(fused[#loc36, #loc37])
#loc372 = loc(fused[#loc38, #loc39])
#loc373 = loc(fused[#loc40, #loc41])
#loc374 = loc(fused[#loc42, #loc43])
#loc375 = loc(fused[#loc44, #loc45])
#loc376 = loc(fused[#loc46, #loc47])
#loc377 = loc(fused[#loc48, #loc49])
#loc378 = loc(fused[#loc54, #loc55])
#loc379 = loc(fused[#loc56, #loc57])
#loc380 = loc(fused[#loc58, #loc59])
#loc381 = loc(fused[#loc60, #loc57])
#loc382 = loc(fused[#loc62, #loc63])
#loc383 = loc(fused[#loc65, #loc66])
#loc384 = loc(fused[#loc67, #loc68])
#loc385 = loc(fused[#loc71, #loc69])
#loc386 = loc(fused[#loc75, #loc76])
#loc387 = loc(fused[#loc80, #loc81])
#loc388 = loc(fused[#loc82, #loc83])
#loc389 = loc(fused[#loc85, #loc86])
#loc390 = loc(fused[#loc87, #loc88])
#loc391 = loc(fused[#loc89, #loc90])
#loc392 = loc(fused[#loc91, #loc83])
#loc393 = loc(fused[#loc95, #loc96])
#loc394 = loc(fused[#loc99, #loc100])
#loc395 = loc(fused[#loc101, #loc102])
#loc396 = loc(fused[#loc103, #loc104])
#loc397 = loc(fused[#loc106, #loc107])
#loc398 = loc(fused[#loc108, #loc102])
#loc399 = loc(fused[#loc112, #loc110])
#loc400 = loc(fused[#loc117, #loc118])
#loc401 = loc(fused[#loc120, #loc121])
#loc402 = loc(fused[#loc122, #loc123])
#loc403 = loc(fused[#loc124, #loc121])
#loc404 = loc(fused[#loc127, #loc128])
#loc405 = loc(fused[#loc129, #loc130])
#loc406 = loc(fused[#loc131, #loc132])
#loc407 = loc(fused[#loc133, #loc134])
#loc408 = loc(fused[#loc135, #loc136])
#loc409 = loc(fused[#loc138, #loc139])
#loc410 = loc(fused[#loc137, #loc139])
#loc411 = loc(fused[#loc140, #loc141, #loc142, #loc136])
#loc412 = loc(fused[#loc145, #loc146])
#loc413 = loc(fused[#loc144, #loc146])
#loc414 = loc(fused[#loc143, #loc147])
#loc415 = loc(fused[#loc148, #loc147])
#loc416 = loc(fused[#loc149, #loc150])
#loc417 = loc(fused[#loc151, #loc152])
#loc418 = loc(fused[#loc153, #loc150])
#loc419 = loc(fused[#loc164, #loc165])
#loc420 = loc(fused[#loc166, #loc167])
#loc421 = loc(fused[#loc168, #loc169])
#loc422 = loc(fused[#loc171, #loc170])
#loc423 = loc(fused[#loc173, #loc172])
#loc424 = loc(fused[#loc174, #loc175])
#loc425 = loc(fused[#loc176, #loc177])
#loc426 = loc(fused[#loc178, #loc179])
#loc427 = loc(fused[#loc180, #loc181])
#loc428 = loc(fused[#loc182, #loc183])
#loc429 = loc(fused[#loc185, #loc186])
#loc430 = loc(fused[#loc184, #loc186])
#loc431 = loc(fused[#loc187, #loc188, #loc189, #loc183])
#loc432 = loc(fused[#loc192, #loc193])
#loc433 = loc(fused[#loc191, #loc193])
#loc434 = loc(fused[#loc190, #loc194])
#loc435 = loc(fused[#loc195, #loc194])
#loc436 = loc(fused[#loc196, #loc197])
#loc437 = loc(fused[#loc198, #loc199])
#loc438 = loc(fused[#loc200, #loc197])
#loc439 = loc(fused[#loc214, #loc215])
#loc440 = loc(fused[#loc216, #loc217])
#loc441 = loc(fused[#loc218, #loc219])
#loc442 = loc(fused[#loc221, #loc220])
#loc443 = loc(fused[#loc222, #loc223])
#loc444 = loc(fused[#loc224, #loc225])
#loc445 = loc(fused[#loc226, #loc227])
#loc446 = loc(fused[#loc228, #loc229])
#loc447 = loc(fused[#loc230, #loc231])
#loc448 = loc(fused[#loc232, #loc233])
#loc449 = loc(fused[#loc234, #loc235])
#loc450 = loc(fused[#loc240, #loc241])
#loc451 = loc(fused[#loc242, #loc243])
#loc452 = loc(fused[#loc244, #loc245])
#loc453 = loc(fused[#loc246, #loc243])
#loc454 = loc(fused[#loc248, #loc249])
#loc455 = loc(fused[#loc251, #loc252])
#loc456 = loc(fused[#loc253, #loc254])
#loc457 = loc(fused[#loc256, #loc255])
#loc458 = loc(fused[#loc259, #loc260])
#loc459 = loc(fused[#loc263, #loc264])
#loc460 = loc(fused[#loc265, #loc266])
#loc461 = loc(fused[#loc268, #loc269])
#loc462 = loc(fused[#loc270, #loc271])
#loc463 = loc(fused[#loc272, #loc273])
#loc464 = loc(fused[#loc274, #loc266])
#loc465 = loc(fused[#loc278, #loc279])
#loc466 = loc(fused[#loc282, #loc283])
#loc467 = loc(fused[#loc284, #loc285])
#loc468 = loc(fused[#loc286, #loc287])
#loc469 = loc(fused[#loc289, #loc290])
#loc470 = loc(fused[#loc291, #loc285])
#loc471 = loc(fused[#loc295, #loc293])
#loc472 = loc(fused[#loc300, #loc301])
#loc473 = loc(fused[#loc303, #loc304])
#loc474 = loc(fused[#loc305, #loc306])
#loc475 = loc(fused[#loc307, #loc304])
#loc476 = loc(fused[#loc310, #loc311])
#loc477 = loc(fused[#loc312, #loc313])
#loc478 = loc(fused[#loc314, #loc315])
#loc479 = loc(fused[#loc316, #loc317])
#loc480 = loc(fused[#loc318, #loc319])
#loc481 = loc(fused[#loc321, #loc322])
#loc482 = loc(fused[#loc320, #loc322])
#loc483 = loc(fused[#loc324, #loc325])
#loc484 = loc(fused[#loc326, #loc327, #loc328, #loc319])
#loc485 = loc(fused[#loc331, #loc332])
#loc486 = loc(fused[#loc330, #loc332])
#loc487 = loc(fused[#loc329, #loc333])
#loc488 = loc(fused[#loc334, #loc333])
#loc489 = loc(fused[#loc335, #loc336])
#loc490 = loc(fused[#loc337, #loc338])
#loc491 = loc(fused[#loc339, #loc336])
#loc492 = loc(fused[#loc351, #loc352])
