!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__binary_if_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"intOne == 5\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc3)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__binary_if_17_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc70)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc10)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc72)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc12)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc13)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc73)
        cir.condition(%4) loc(#loc14)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["twoIntsStructPointer", init] {alignment = 8 : i64} loc(#loc76)
            %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc19)
            cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc76)
            cir.scope {
              %4 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc22)
              %5 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc23)
              %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc23)
              %7 = cir.cmp(ne, %4, %6) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc78)
              %8 = cir.cast(bool_to_int, %7 : !cir.bool), !s32i loc(#loc78)
              %9 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc24)
              %10 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc25)
              %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc26)
              %12 = cir.const #cir.int<5> : !s32i loc(#loc27)
              %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc79)
              %14 = cir.cast(bool_to_int, %13 : !cir.bool), !s32i loc(#loc79)
              %15 = cir.binop(and, %8, %14) : !s32i loc(#loc80)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc30)
              cir.if %16 {
                %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc3)
                %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc3)
                cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc32)
              } loc(#loc81)
            } loc(#loc77)
          } loc(#loc75)
        } loc(#loc74)
        cir.yield loc(#loc9)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc33)
        %3 = cir.unary(inc, %2) nsw : !s32i, !s32i loc(#loc34)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc82)
        cir.yield loc(#loc71)
      } loc(#loc71)
    } loc(#loc71)
    cir.return loc(#loc5)
  } loc(#loc69)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__binary_if_17_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc84)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc37)
    cir.return loc(#loc36)
  } loc(#loc83)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc86)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc45)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc88)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc47)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc48)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc89)
        cir.condition(%4) loc(#loc49)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["twoIntsStructPointer", init] {alignment = 8 : i64} loc(#loc92)
            %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc54)
            cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc92)
            cir.scope {
              %4 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc57)
              %5 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc58)
              %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc58)
              %7 = cir.cmp(ne, %4, %6) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc94)
              %8 = cir.ternary(%7, true {
                %9 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc60)
                %10 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc25)
                %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc61)
                %12 = cir.const #cir.int<5> : !s32i loc(#loc62)
                %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc95)
                %14 = cir.ternary(%13, true {
                  %15 = cir.const #true loc(#loc59)
                  cir.yield %15 : !cir.bool loc(#loc59)
                }, false {
                  %15 = cir.const #false loc(#loc59)
                  cir.yield %15 : !cir.bool loc(#loc59)
                }) : (!cir.bool) -> !cir.bool loc(#loc59)
                cir.yield %14 : !cir.bool loc(#loc59)
              }, false {
                %9 = cir.const #false loc(#loc59)
                cir.yield %9 : !cir.bool loc(#loc59)
              }) : (!cir.bool) -> !cir.bool loc(#loc59)
              cir.if %8 {
                %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc64)
                %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc64)
                cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc65)
              } loc(#loc96)
            } loc(#loc93)
          } loc(#loc91)
        } loc(#loc90)
        cir.yield loc(#loc44)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc66)
        %3 = cir.unary(inc, %2) nsw : !s32i, !s32i loc(#loc67)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc97)
        cir.yield loc(#loc87)
      } loc(#loc87)
    } loc(#loc87)
    cir.return loc(#loc40)
  } loc(#loc85)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__binary_if_17.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":31:27)
#loc4 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":20:1)
#loc5 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":35:1)
#loc6 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":22:5)
#loc7 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":22:9)
#loc8 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":23:5)
#loc9 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":34:5)
#loc10 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":23:13)
#loc11 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":23:9)
#loc12 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":23:16)
#loc13 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":23:20)
#loc14 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":23:18)
#loc15 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":24:5)
#loc16 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":25:9)
#loc17 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":33:9)
#loc18 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":26:13)
#loc19 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":26:51)
#loc20 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":29:13)
#loc21 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":32:13)
#loc22 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":29:18)
#loc23 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":29:42)
#loc24 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":29:51)
#loc25 = loc("../../testcasesupport/std_testcase.h":98:9)
#loc26 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":29:73)
#loc27 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":29:83)
#loc28 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":29:17)
#loc29 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":29:84)
#loc30 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":29:48)
#loc31 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":30:13)
#loc32 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":31:17)
#loc33 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":23:24)
#loc34 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":23:23)
#loc35 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":59:1)
#loc36 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":62:1)
#loc37 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":61:5)
#loc38 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":61:11)
#loc39 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":42:1)
#loc40 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":57:1)
#loc41 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":44:5)
#loc42 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":44:9)
#loc43 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":45:5)
#loc44 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":56:5)
#loc45 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":45:13)
#loc46 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":45:9)
#loc47 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":45:16)
#loc48 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":45:20)
#loc49 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":45:18)
#loc50 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":46:5)
#loc51 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":47:9)
#loc52 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":55:9)
#loc53 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":48:13)
#loc54 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":48:51)
#loc55 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":51:13)
#loc56 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":54:13)
#loc57 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":51:18)
#loc58 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":51:42)
#loc59 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":51:48)
#loc60 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":51:52)
#loc61 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":51:74)
#loc62 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":51:84)
#loc63 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":52:13)
#loc64 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":53:27)
#loc65 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":53:17)
#loc66 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":45:24)
#loc67 = loc("CWE476_NULL_Pointer_Dereference__binary_if_17.c":45:23)
#loc68 = loc(fused[#loc1, #loc2])
#loc69 = loc(fused[#loc4, #loc5])
#loc70 = loc(fused[#loc6, #loc7])
#loc71 = loc(fused[#loc8, #loc9])
#loc72 = loc(fused[#loc11, #loc10])
#loc73 = loc(fused[#loc12, #loc13])
#loc74 = loc(fused[#loc15, #loc9])
#loc75 = loc(fused[#loc16, #loc17])
#loc76 = loc(fused[#loc18, #loc19])
#loc77 = loc(fused[#loc20, #loc21])
#loc78 = loc(fused[#loc22, #loc23])
#loc79 = loc(fused[#loc24, #loc27])
#loc80 = loc(fused[#loc28, #loc29])
#loc81 = loc(fused[#loc31, #loc21])
#loc82 = loc(fused[#loc34, #loc33])
#loc83 = loc(fused[#loc35, #loc36])
#loc84 = loc(fused[#loc37, #loc38])
#loc85 = loc(fused[#loc39, #loc40])
#loc86 = loc(fused[#loc41, #loc42])
#loc87 = loc(fused[#loc43, #loc44])
#loc88 = loc(fused[#loc46, #loc45])
#loc89 = loc(fused[#loc47, #loc48])
#loc90 = loc(fused[#loc50, #loc44])
#loc91 = loc(fused[#loc51, #loc52])
#loc92 = loc(fused[#loc53, #loc54])
#loc93 = loc(fused[#loc55, #loc56])
#loc94 = loc(fused[#loc57, #loc58])
#loc95 = loc(fused[#loc60, #loc62])
#loc96 = loc(fused[#loc63, #loc56])
#loc97 = loc(fused[#loc67, #loc66])
