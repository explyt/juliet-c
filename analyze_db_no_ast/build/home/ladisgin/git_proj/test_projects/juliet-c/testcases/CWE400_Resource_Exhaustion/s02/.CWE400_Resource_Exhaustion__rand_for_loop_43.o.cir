!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc5 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":25:23)
#loc6 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":25:28)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":52:27)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":52:32)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":75:27)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":75:32)
#true = #cir.bool<true> : !cir.bool
#loc106 = loc(fused[#loc5, #loc6])
#loc119 = loc(fused[#loc36, #loc37])
#loc131 = loc(fused[#loc65, #loc66])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_for_loop_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @rand() -> !s32i extra(#fn_attr) loc(#loc104)
  cir.func internal private  @_ZN44CWE400_Resource_Exhaustion__rand_for_loop_43L9badSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc5, #loc6])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["count", init, const] {alignment = 8 : i64} loc(#loc106)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc7)
    %1 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc8)
    %3 = cir.binop(and, %1, %2) : !s32i loc(#loc8)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc8)
    %5 = cir.ternary(%4, true {
      %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
      %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc8)
      %10 = cir.const #cir.int<30> : !s32i loc(#loc8)
      %11 = cir.shift(left, %9 : !u32i, %10 : !s32i) -> !u32i loc(#loc8)
      %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
      %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc8)
      %14 = cir.const #cir.int<15> : !s32i loc(#loc8)
      %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc8)
      %16 = cir.binop(xor, %11, %15) : !u32i loc(#loc8)
      %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
      %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc8)
      %19 = cir.binop(xor, %16, %18) : !u32i loc(#loc8)
      cir.yield %19 : !u32i loc(#loc8)
    }, false {
      %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
      %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc8)
      %10 = cir.const #cir.int<30> : !s32i loc(#loc8)
      %11 = cir.shift(left, %9 : !u32i, %10 : !s32i) -> !u32i loc(#loc8)
      %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
      %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc8)
      %14 = cir.const #cir.int<15> : !s32i loc(#loc8)
      %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc8)
      %16 = cir.binop(xor, %11, %15) : !u32i loc(#loc8)
      %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
      %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc8)
      %19 = cir.binop(xor, %16, %18) : !u32i loc(#loc8)
      %20 = cir.unary(minus, %19) : !u32i, !u32i loc(#loc8)
      %21 = cir.const #cir.int<1> : !s32i loc(#loc8)
      %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc8)
      %23 = cir.binop(sub, %20, %22) : !u32i loc(#loc8)
      cir.yield %23 : !u32i loc(#loc8)
    }) : (!cir.bool) -> !u32i loc(#loc8)
    %6 = cir.cast(integral, %5 : !u32i), !s32i loc(#loc8)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc9)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc107)
    cir.return loc(#loc4)
  } loc(#loc105)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc108)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc12)
  cir.func  @_ZN44CWE400_Resource_Exhaustion__rand_for_loop_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc110)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc18)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc111)
    cir.call @_ZN44CWE400_Resource_Exhaustion__rand_for_loop_43L9badSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc20)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc113)
      %4 = cir.const #cir.int<0> : !s32i loc(#loc24)
      %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc24)
      cir.store %5, %3 : !u64i, !cir.ptr<!u64i> loc(#loc113)
      cir.scope {
        %6 = cir.const #cir.int<0> : !s32i loc(#loc27)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc27)
        cir.store %7, %3 : !u64i, !cir.ptr<!u64i> loc(#loc115)
        cir.for : cond {
          %8 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc29)
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc30)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc30)
          %11 = cir.cmp(lt, %8, %10) : !u64i, !cir.bool loc(#loc116)
          cir.condition(%11) loc(#loc116)
        } body {
          %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc12)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc12)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc31)
          cir.yield loc(#loc26)
        } step {
          %8 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc32)
          %9 = cir.unary(inc, %8) : !u64i, !u64i loc(#loc33)
          cir.store %9, %3 : !u64i, !cir.ptr<!u64i> loc(#loc117)
          cir.yield loc(#loc114)
        } loc(#loc114)
      } loc(#loc114)
    } loc(#loc112)
    cir.return loc(#loc14)
  } loc(#loc109)
  cir.func internal private  @_ZN44CWE400_Resource_Exhaustion__rand_for_loop_43L13goodG2BSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc36, #loc37])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["count", init, const] {alignment = 8 : i64} loc(#loc119)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc38)
    %1 = cir.const #cir.int<20> : !s32i loc(#loc39)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc40)
    cir.store %1, %2 : !s32i, !cir.ptr<!s32i> loc(#loc120)
    cir.return loc(#loc35)
  } loc(#loc118)
  cir.func internal private  @_ZN44CWE400_Resource_Exhaustion__rand_for_loop_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc122)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc45)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc46)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc123)
    cir.call @_ZN44CWE400_Resource_Exhaustion__rand_for_loop_43L13goodG2BSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc48)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc125)
      %4 = cir.const #cir.int<0> : !s32i loc(#loc52)
      %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc52)
      cir.store %5, %3 : !u64i, !cir.ptr<!u64i> loc(#loc125)
      cir.scope {
        %6 = cir.const #cir.int<0> : !s32i loc(#loc55)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc55)
        cir.store %7, %3 : !u64i, !cir.ptr<!u64i> loc(#loc127)
        cir.for : cond {
          %8 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc57)
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc58)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc58)
          %11 = cir.cmp(lt, %8, %10) : !u64i, !cir.bool loc(#loc128)
          cir.condition(%11) loc(#loc128)
        } body {
          %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc59)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc59)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc60)
          cir.yield loc(#loc54)
        } step {
          %8 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc61)
          %9 = cir.unary(inc, %8) : !u64i, !u64i loc(#loc62)
          cir.store %9, %3 : !u64i, !cir.ptr<!u64i> loc(#loc129)
          cir.yield loc(#loc126)
        } loc(#loc126)
      } loc(#loc126)
    } loc(#loc124)
    cir.return loc(#loc42)
  } loc(#loc121)
  cir.func internal private  @_ZN44CWE400_Resource_Exhaustion__rand_for_loop_43L13goodB2GSourceERi(%arg0: !cir.ptr<!s32i> loc(fused[#loc65, #loc66])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["count", init, const] {alignment = 8 : i64} loc(#loc131)
    cir.store %arg0, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc67)
    %1 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc68)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %3 = cir.binop(and, %1, %2) : !s32i loc(#loc68)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc68)
    %5 = cir.ternary(%4, true {
      %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc68)
      %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc68)
      %10 = cir.const #cir.int<30> : !s32i loc(#loc68)
      %11 = cir.shift(left, %9 : !u32i, %10 : !s32i) -> !u32i loc(#loc68)
      %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc68)
      %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc68)
      %14 = cir.const #cir.int<15> : !s32i loc(#loc68)
      %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc68)
      %16 = cir.binop(xor, %11, %15) : !u32i loc(#loc68)
      %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc68)
      %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc68)
      %19 = cir.binop(xor, %16, %18) : !u32i loc(#loc68)
      cir.yield %19 : !u32i loc(#loc68)
    }, false {
      %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc68)
      %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc68)
      %10 = cir.const #cir.int<30> : !s32i loc(#loc68)
      %11 = cir.shift(left, %9 : !u32i, %10 : !s32i) -> !u32i loc(#loc68)
      %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc68)
      %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc68)
      %14 = cir.const #cir.int<15> : !s32i loc(#loc68)
      %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc68)
      %16 = cir.binop(xor, %11, %15) : !u32i loc(#loc68)
      %17 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc68)
      %18 = cir.cast(integral, %17 : !s32i), !u32i loc(#loc68)
      %19 = cir.binop(xor, %16, %18) : !u32i loc(#loc68)
      %20 = cir.unary(minus, %19) : !u32i, !u32i loc(#loc68)
      %21 = cir.const #cir.int<1> : !s32i loc(#loc68)
      %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc68)
      %23 = cir.binop(sub, %20, %22) : !u32i loc(#loc68)
      cir.yield %23 : !u32i loc(#loc68)
    }) : (!cir.bool) -> !u32i loc(#loc68)
    %6 = cir.cast(integral, %5 : !u32i), !s32i loc(#loc68)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc69)
    cir.store %6, %7 : !s32i, !cir.ptr<!s32i> loc(#loc132)
    cir.return loc(#loc64)
  } loc(#loc130)
  cir.func internal private  @_ZN44CWE400_Resource_Exhaustion__rand_for_loop_43L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc134)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc74)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc75)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc135)
    cir.call @_ZN44CWE400_Resource_Exhaustion__rand_for_loop_43L13goodB2GSourceERi(%0) : (!cir.ptr<!s32i>) -> () loc(#loc77)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc137)
      %4 = cir.const #cir.int<0> : !s32i loc(#loc81)
      %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc81)
      cir.store %5, %3 : !u64i, !cir.ptr<!u64i> loc(#loc137)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc84)
        %7 = cir.const #cir.int<0> : !s32i loc(#loc85)
        %8 = cir.cmp(gt, %6, %7) : !s32i, !cir.bool loc(#loc139)
        %9 = cir.ternary(%8, true {
          %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc87)
          %11 = cir.const #cir.int<20> : !s32i loc(#loc88)
          %12 = cir.cmp(le, %10, %11) : !s32i, !cir.bool loc(#loc140)
          %13 = cir.ternary(%12, true {
            %14 = cir.const #true loc(#loc86)
            cir.yield %14 : !cir.bool loc(#loc86)
          }, false {
            %14 = cir.const #false loc(#loc86)
            cir.yield %14 : !cir.bool loc(#loc86)
          }) : (!cir.bool) -> !cir.bool loc(#loc86)
          cir.yield %13 : !cir.bool loc(#loc86)
        }, false {
          %10 = cir.const #false loc(#loc86)
          cir.yield %10 : !cir.bool loc(#loc86)
        }) : (!cir.bool) -> !cir.bool loc(#loc86)
        cir.if %9 {
          cir.scope {
            %10 = cir.const #cir.int<0> : !s32i loc(#loc92)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc92)
            cir.store %11, %3 : !u64i, !cir.ptr<!u64i> loc(#loc143)
            cir.for : cond {
              %12 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc94)
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc95)
              %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc95)
              %15 = cir.cmp(lt, %12, %14) : !u64i, !cir.bool loc(#loc144)
              cir.condition(%15) loc(#loc144)
            } body {
              %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc96)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc96)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc97)
              cir.yield loc(#loc91)
            } step {
              %12 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc98)
              %13 = cir.unary(inc, %12) : !u64i, !u64i loc(#loc99)
              cir.store %13, %3 : !u64i, !cir.ptr<!u64i> loc(#loc145)
              cir.yield loc(#loc142)
            } loc(#loc142)
          } loc(#loc142)
        } loc(#loc141)
      } loc(#loc138)
    } loc(#loc136)
    cir.return loc(#loc71)
  } loc(#loc133)
  cir.func  @_ZN44CWE400_Resource_Exhaustion__rand_for_loop_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN44CWE400_Resource_Exhaustion__rand_for_loop_43L7goodG2BEv() : () -> () loc(#loc102)
    cir.call @_ZN44CWE400_Resource_Exhaustion__rand_for_loop_43L7goodB2GEv() : () -> () loc(#loc103)
    cir.return loc(#loc101)
  } loc(#loc146)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":25:1)
#loc4 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":29:1)
#loc7 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":26:1)
#loc8 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":28:13)
#loc9 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":28:5)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc12 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":42:23)
#loc13 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":31:1)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":45:1)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":33:5)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":33:9)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":35:14)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":35:13)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":35:5)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":36:5)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":37:5)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":44:5)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":38:9)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":38:20)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":40:9)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":43:9)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":40:18)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":40:14)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":40:21)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":40:33)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":42:13)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":40:41)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":40:40)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":52:1)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":56:1)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":53:1)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":55:13)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":55:5)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":58:1)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":72:1)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":60:5)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":60:9)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":62:14)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":62:13)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":62:5)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":63:5)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":64:5)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":71:5)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":65:9)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":65:20)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":67:9)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":70:9)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":67:18)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":67:14)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":67:21)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":67:33)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":69:23)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":69:13)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":67:41)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":67:40)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":75:1)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":79:1)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":76:1)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":78:13)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":78:5)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":81:1)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":98:1)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":83:5)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":83:9)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":85:14)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":85:13)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":85:5)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":86:5)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":87:5)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":97:5)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":88:9)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":88:20)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":90:9)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":96:9)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":90:13)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":90:21)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":90:23)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":90:26)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":90:35)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":91:9)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":92:13)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":95:13)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":92:22)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":92:18)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":92:25)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":92:37)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":94:27)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":94:17)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":92:45)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":92:44)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":100:1)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":104:1)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":102:5)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_for_loop_43.cpp":103:5)
#loc104 = loc(fused[#loc1, #loc2])
#loc105 = loc(fused[#loc3, #loc4])
#loc107 = loc(fused[#loc9, #loc8])
#loc108 = loc(fused[#loc10, #loc11])
#loc109 = loc(fused[#loc13, #loc14])
#loc110 = loc(fused[#loc15, #loc16])
#loc111 = loc(fused[#loc19, #loc17])
#loc112 = loc(fused[#loc21, #loc22])
#loc113 = loc(fused[#loc23, #loc24])
#loc114 = loc(fused[#loc25, #loc26])
#loc115 = loc(fused[#loc28, #loc27])
#loc116 = loc(fused[#loc29, #loc30])
#loc117 = loc(fused[#loc33, #loc32])
#loc118 = loc(fused[#loc34, #loc35])
#loc120 = loc(fused[#loc40, #loc39])
#loc121 = loc(fused[#loc41, #loc42])
#loc122 = loc(fused[#loc43, #loc44])
#loc123 = loc(fused[#loc47, #loc45])
#loc124 = loc(fused[#loc49, #loc50])
#loc125 = loc(fused[#loc51, #loc52])
#loc126 = loc(fused[#loc53, #loc54])
#loc127 = loc(fused[#loc56, #loc55])
#loc128 = loc(fused[#loc57, #loc58])
#loc129 = loc(fused[#loc62, #loc61])
#loc130 = loc(fused[#loc63, #loc64])
#loc132 = loc(fused[#loc69, #loc68])
#loc133 = loc(fused[#loc70, #loc71])
#loc134 = loc(fused[#loc72, #loc73])
#loc135 = loc(fused[#loc76, #loc74])
#loc136 = loc(fused[#loc78, #loc79])
#loc137 = loc(fused[#loc80, #loc81])
#loc138 = loc(fused[#loc82, #loc83])
#loc139 = loc(fused[#loc84, #loc85])
#loc140 = loc(fused[#loc87, #loc88])
#loc141 = loc(fused[#loc89, #loc83])
#loc142 = loc(fused[#loc90, #loc91])
#loc143 = loc(fused[#loc93, #loc92])
#loc144 = loc(fused[#loc94, #loc95])
#loc145 = loc(fused[#loc99, #loc98])
#loc146 = loc(fused[#loc100, #loc101])
