!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc779)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc780)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc781)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc782)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc783)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc784)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc785)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc786)
  cir.func private @close(!s32i) -> !s32i loc(#loc787)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc788)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc21)
  cir.func private @__isoc99_sscanf(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc789)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc24)
  cir.func private @printIntLine(!s32i) loc(#loc790)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_listen_socket_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc792)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc793)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc793)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc793)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc33)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc794)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc37)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc797)
            %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc798)
            %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc799)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc800)
            %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc801)
            %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc802)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc48)
            %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc48)
            cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc800)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc50)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc50)
            cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc801)
            %15 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc53)
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
            %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc53)
            cir.store %17, %10 : !u64i, !cir.ptr<!u64i> loc(#loc802)
            cir.scope {
              cir.do {
                cir.scope {
                  %18 = cir.const #cir.int<2> : !s32i loc(#loc59)
                  %19 = cir.const #cir.int<1> : !s32i loc(#loc60)
                  %20 = cir.const #cir.int<6> : !s32i loc(#loc61)
                  %21 = cir.call @socket(%18, %19, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc62)
                  cir.store %21, %8 : !s32i, !cir.ptr<!s32i> loc(#loc805)
                  cir.scope {
                    %75 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc67)
                    %76 = cir.const #cir.int<1> : !s32i loc(#loc68)
                    %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc68)
                    %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc807)
                    cir.if %78 {
                      cir.break loc(#loc70)
                    } loc(#loc808)
                  } loc(#loc806)
                  %22 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc809)
                  %23 = cir.const #cir.int<0> : !s32i loc(#loc73)
                  %24 = cir.const #cir.int<16> : !u64i loc(#loc810)
                  cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc811)
                  %25 = cir.const #cir.int<2> : !s32i loc(#loc78)
                  %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc78)
                  %27 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc79)
                  cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc812)
                  %28 = cir.const #cir.int<0> : !s32i loc(#loc81)
                  %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc81)
                  %30 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc82)
                  %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc83)
                  cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc813)
                  %32 = cir.const #cir.int<27015> : !s32i loc(#loc85)
                  %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc85)
                  %34 = cir.call @htons(%33) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc86)
                  %35 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc87)
                  cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc814)
                  cir.scope {
                    %75 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc92)
                    %76 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc816)
                    %77 = cir.const #cir.int<16> : !u64i loc(#loc817)
                    %78 = cir.cast(integral, %77 : !u64i), !u32i loc(#loc817)
                    %79 = cir.call @bind(%75, %76, %78) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc97)
                    %80 = cir.const #cir.int<1> : !s32i loc(#loc98)
                    %81 = cir.unary(minus, %80) nsw : !s32i, !s32i loc(#loc98)
                    %82 = cir.cmp(eq, %79, %81) : !s32i, !cir.bool loc(#loc818)
                    cir.if %82 {
                      cir.break loc(#loc100)
                    } loc(#loc819)
                  } loc(#loc815)
                  cir.scope {
                    %75 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc103)
                    %76 = cir.const #cir.int<5> : !s32i loc(#loc104)
                    %77 = cir.call @listen(%75, %76) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc105)
                    %78 = cir.const #cir.int<1> : !s32i loc(#loc106)
                    %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc106)
                    %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc821)
                    cir.if %80 {
                      cir.break loc(#loc108)
                    } loc(#loc822)
                  } loc(#loc820)
                  %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc109)
                  %37 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc110)
                  %38 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc111)
                  %39 = cir.call @accept(%36, %37, %38) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc112)
                  cir.store %39, %9 : !s32i, !cir.ptr<!s32i> loc(#loc823)
                  cir.scope {
                    %75 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc117)
                    %76 = cir.const #cir.int<1> : !s32i loc(#loc118)
                    %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc118)
                    %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc825)
                    cir.if %78 {
                      cir.break loc(#loc120)
                    } loc(#loc826)
                  } loc(#loc824)
                  %40 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc121)
                  %41 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
                  %42 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc123)
                  %43 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc124)
                  %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc827)
                  %45 = cir.const #cir.int<1> : !u64i loc(#loc828)
                  %46 = cir.const #cir.int<100> : !s32i loc(#loc129)
                  %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc129)
                  %48 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc130)
                  %49 = cir.binop(sub, %47, %48) : !u64i loc(#loc829)
                  %50 = cir.const #cir.int<1> : !s32i loc(#loc131)
                  %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc131)
                  %52 = cir.binop(sub, %49, %51) : !u64i loc(#loc830)
                  %53 = cir.binop(mul, %45, %52) : !u64i loc(#loc831)
                  %54 = cir.const #cir.int<0> : !s32i loc(#loc133)
                  %55 = cir.call @recv(%40, %44, %53, %54) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc134)
                  %56 = cir.cast(integral, %55 : !s64i), !s32i loc(#loc134)
                  cir.store %56, %5 : !s32i, !cir.ptr<!s32i> loc(#loc832)
                  cir.scope {
                    %75 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc139)
                    %76 = cir.const #cir.int<1> : !s32i loc(#loc140)
                    %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc140)
                    %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc834)
                    %79 = cir.ternary(%78, true {
                      %80 = cir.const #true loc(#loc141)
                      cir.yield %80 : !cir.bool loc(#loc141)
                    }, false {
                      %80 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc142)
                      %81 = cir.const #cir.int<0> : !s32i loc(#loc143)
                      %82 = cir.cmp(eq, %80, %81) : !s32i, !cir.bool loc(#loc835)
                      %83 = cir.ternary(%82, true {
                        %84 = cir.const #true loc(#loc141)
                        cir.yield %84 : !cir.bool loc(#loc141)
                      }, false {
                        %84 = cir.const #false loc(#loc141)
                        cir.yield %84 : !cir.bool loc(#loc141)
                      }) : (!cir.bool) -> !cir.bool loc(#loc141)
                      cir.yield %83 : !cir.bool loc(#loc141)
                    }) : (!cir.bool) -> !cir.bool loc(#loc141)
                    cir.if %79 {
                      cir.break loc(#loc145)
                    } loc(#loc836)
                  } loc(#loc833)
                  %57 = cir.const #cir.int<0> : !s32i loc(#loc146)
                  %58 = cir.cast(integral, %57 : !s32i), !s8i loc(#loc146)
                  %59 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
                  %60 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc148)
                  %61 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc149)
                  %62 = cir.cast(integral, %61 : !s32i), !u64i loc(#loc149)
                  %63 = cir.const #cir.int<1> : !u64i loc(#loc837)
                  %64 = cir.binop(div, %62, %63) : !u64i loc(#loc838)
                  %65 = cir.binop(add, %60, %64) : !u64i loc(#loc839)
                  %66 = cir.ptr_stride(%59 : !cir.ptr<!s8i>, %65 : !u64i), !cir.ptr<!s8i> loc(#loc152)
                  cir.store %58, %66 : !s8i, !cir.ptr<!s8i> loc(#loc840)
                  %67 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc153)
                  %68 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
                  %69 = cir.const #cir.int<13> : !s32i loc(#loc155)
                  %70 = cir.call @strchr(%68, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc153)
                  cir.store %70, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc841)
                  cir.scope {
                    %75 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
                    %76 = cir.cast(ptr_to_bool, %75 : !cir.ptr<!s8i>), !cir.bool loc(#loc160)
                    cir.if %76 {
                      %77 = cir.const #cir.int<0> : !s32i loc(#loc162)
                      %78 = cir.cast(integral, %77 : !s32i), !s8i loc(#loc162)
                      %79 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
                      cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc844)
                    } loc(#loc843)
                  } loc(#loc842)
                  %71 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc165)
                  %72 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
                  %73 = cir.const #cir.int<10> : !s32i loc(#loc167)
                  %74 = cir.call @strchr(%72, %73) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc165)
                  cir.store %74, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc845)
                  cir.scope {
                    %75 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
                    %76 = cir.cast(ptr_to_bool, %75 : !cir.ptr<!s8i>), !cir.bool loc(#loc172)
                    cir.if %76 {
                      %77 = cir.const #cir.int<0> : !s32i loc(#loc174)
                      %78 = cir.cast(integral, %77 : !s32i), !s8i loc(#loc174)
                      %79 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc175)
                      cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc848)
                    } loc(#loc847)
                  } loc(#loc846)
                } loc(#loc804)
                cir.yield loc(#loc56)
              } while {
                %18 = cir.const #cir.int<0> : !s32i loc(#loc177)
                %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc177)
                cir.condition(%19) loc(#loc177)
              } loc(#loc803)
            } loc(#loc803)
            cir.scope {
              %18 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc180)
              %19 = cir.const #cir.int<1> : !s32i loc(#loc181)
              %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc181)
              %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc850)
              cir.if %21 {
                %22 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc183)
                %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc184)
              } loc(#loc851)
            } loc(#loc849)
            cir.scope {
              %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc187)
              %19 = cir.const #cir.int<1> : !s32i loc(#loc188)
              %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc188)
              %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc853)
              cir.if %21 {
                %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc190)
                %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc191)
              } loc(#loc854)
            } loc(#loc852)
          } loc(#loc796)
          cir.break loc(#loc192)
        } loc(#loc38)
        cir.case(default, []) {
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc21)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc21)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc194)
          cir.break loc(#loc195)
        } loc(#loc193)
        cir.yield loc(#loc35)
      } loc(#loc35)
    } loc(#loc795)
    cir.scope {
      %4 = cir.const #cir.int<7> : !s32i loc(#loc198)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc857)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc858)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc859)
            cir.scope {
              %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc208)
              %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc209)
              %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc24)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc24)
              %12 = cir.call @__isoc99_sscanf(%9, %11, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc208)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc210)
              %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc861)
              cir.if %14 {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc212)
                cir.store %15, %7 : !s32i, !cir.ptr<!s32i> loc(#loc863)
                cir.scope {
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc216)
                  cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc865)
                  cir.for : cond {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc218)
                    %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc219)
                    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc866)
                    cir.condition(%20) loc(#loc220)
                  } body {
                    cir.scope {
                      %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc222)
                      %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc223)
                      cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc868)
                    } loc(#loc867)
                    cir.yield loc(#loc215)
                  } step {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc224)
                    %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc225)
                    cir.store %19, %5 : !s32i, !cir.ptr<!s32i> loc(#loc869)
                    cir.yield loc(#loc864)
                  } loc(#loc864)
                } loc(#loc864)
                %16 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc226)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc227)
              } loc(#loc862)
            } loc(#loc860)
          } loc(#loc856)
          cir.break loc(#loc228)
        } loc(#loc199)
        cir.case(default, []) {
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc230)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc230)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc231)
          cir.break loc(#loc232)
        } loc(#loc229)
        cir.yield loc(#loc196)
      } loc(#loc196)
    } loc(#loc855)
    cir.return loc(#loc28)
  } loc(#loc791)
  cir.func no_proto @CWE606_Unchecked_Loop_Condition__char_listen_socket_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc871)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc235)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc872)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc237)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc873)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc239)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc874)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc241)
    cir.return loc(#loc234)
  } loc(#loc870)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc876)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc877)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc877)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc877)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc249)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc878)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc253)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc881)
            %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc882)
            %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc883)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc884)
            %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc885)
            %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc886)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc264)
            %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc264)
            cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc884)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc266)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc266)
            cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc885)
            %15 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc269)
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc270)
            %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc269)
            cir.store %17, %10 : !u64i, !cir.ptr<!u64i> loc(#loc886)
            cir.scope {
              cir.do {
                cir.scope {
                  %18 = cir.const #cir.int<2> : !s32i loc(#loc275)
                  %19 = cir.const #cir.int<1> : !s32i loc(#loc276)
                  %20 = cir.const #cir.int<6> : !s32i loc(#loc277)
                  %21 = cir.call @socket(%18, %19, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc278)
                  cir.store %21, %8 : !s32i, !cir.ptr<!s32i> loc(#loc889)
                  cir.scope {
                    %75 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc283)
                    %76 = cir.const #cir.int<1> : !s32i loc(#loc284)
                    %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc284)
                    %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc891)
                    cir.if %78 {
                      cir.break loc(#loc286)
                    } loc(#loc892)
                  } loc(#loc890)
                  %22 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc893)
                  %23 = cir.const #cir.int<0> : !s32i loc(#loc289)
                  %24 = cir.const #cir.int<16> : !u64i loc(#loc894)
                  cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc895)
                  %25 = cir.const #cir.int<2> : !s32i loc(#loc294)
                  %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc294)
                  %27 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc79)
                  cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc896)
                  %28 = cir.const #cir.int<0> : !s32i loc(#loc296)
                  %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc296)
                  %30 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc82)
                  %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc83)
                  cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc897)
                  %32 = cir.const #cir.int<27015> : !s32i loc(#loc298)
                  %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc298)
                  %34 = cir.call @htons(%33) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc299)
                  %35 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc87)
                  cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc898)
                  cir.scope {
                    %75 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc304)
                    %76 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc900)
                    %77 = cir.const #cir.int<16> : !u64i loc(#loc901)
                    %78 = cir.cast(integral, %77 : !u64i), !u32i loc(#loc901)
                    %79 = cir.call @bind(%75, %76, %78) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc309)
                    %80 = cir.const #cir.int<1> : !s32i loc(#loc310)
                    %81 = cir.unary(minus, %80) nsw : !s32i, !s32i loc(#loc310)
                    %82 = cir.cmp(eq, %79, %81) : !s32i, !cir.bool loc(#loc902)
                    cir.if %82 {
                      cir.break loc(#loc312)
                    } loc(#loc903)
                  } loc(#loc899)
                  cir.scope {
                    %75 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc315)
                    %76 = cir.const #cir.int<5> : !s32i loc(#loc316)
                    %77 = cir.call @listen(%75, %76) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc317)
                    %78 = cir.const #cir.int<1> : !s32i loc(#loc318)
                    %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc318)
                    %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc905)
                    cir.if %80 {
                      cir.break loc(#loc320)
                    } loc(#loc906)
                  } loc(#loc904)
                  %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc321)
                  %37 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc322)
                  %38 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc323)
                  %39 = cir.call @accept(%36, %37, %38) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc324)
                  cir.store %39, %9 : !s32i, !cir.ptr<!s32i> loc(#loc907)
                  cir.scope {
                    %75 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc329)
                    %76 = cir.const #cir.int<1> : !s32i loc(#loc330)
                    %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc330)
                    %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc909)
                    cir.if %78 {
                      cir.break loc(#loc332)
                    } loc(#loc910)
                  } loc(#loc908)
                  %40 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc333)
                  %41 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc334)
                  %42 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc335)
                  %43 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc336)
                  %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc911)
                  %45 = cir.const #cir.int<1> : !u64i loc(#loc912)
                  %46 = cir.const #cir.int<100> : !s32i loc(#loc341)
                  %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc341)
                  %48 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc342)
                  %49 = cir.binop(sub, %47, %48) : !u64i loc(#loc913)
                  %50 = cir.const #cir.int<1> : !s32i loc(#loc343)
                  %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc343)
                  %52 = cir.binop(sub, %49, %51) : !u64i loc(#loc914)
                  %53 = cir.binop(mul, %45, %52) : !u64i loc(#loc915)
                  %54 = cir.const #cir.int<0> : !s32i loc(#loc345)
                  %55 = cir.call @recv(%40, %44, %53, %54) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc346)
                  %56 = cir.cast(integral, %55 : !s64i), !s32i loc(#loc346)
                  cir.store %56, %5 : !s32i, !cir.ptr<!s32i> loc(#loc916)
                  cir.scope {
                    %75 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc351)
                    %76 = cir.const #cir.int<1> : !s32i loc(#loc352)
                    %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc352)
                    %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc918)
                    %79 = cir.ternary(%78, true {
                      %80 = cir.const #true loc(#loc353)
                      cir.yield %80 : !cir.bool loc(#loc353)
                    }, false {
                      %80 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc354)
                      %81 = cir.const #cir.int<0> : !s32i loc(#loc355)
                      %82 = cir.cmp(eq, %80, %81) : !s32i, !cir.bool loc(#loc919)
                      %83 = cir.ternary(%82, true {
                        %84 = cir.const #true loc(#loc353)
                        cir.yield %84 : !cir.bool loc(#loc353)
                      }, false {
                        %84 = cir.const #false loc(#loc353)
                        cir.yield %84 : !cir.bool loc(#loc353)
                      }) : (!cir.bool) -> !cir.bool loc(#loc353)
                      cir.yield %83 : !cir.bool loc(#loc353)
                    }) : (!cir.bool) -> !cir.bool loc(#loc353)
                    cir.if %79 {
                      cir.break loc(#loc357)
                    } loc(#loc920)
                  } loc(#loc917)
                  %57 = cir.const #cir.int<0> : !s32i loc(#loc358)
                  %58 = cir.cast(integral, %57 : !s32i), !s8i loc(#loc358)
                  %59 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc359)
                  %60 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc360)
                  %61 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc361)
                  %62 = cir.cast(integral, %61 : !s32i), !u64i loc(#loc361)
                  %63 = cir.const #cir.int<1> : !u64i loc(#loc921)
                  %64 = cir.binop(div, %62, %63) : !u64i loc(#loc922)
                  %65 = cir.binop(add, %60, %64) : !u64i loc(#loc923)
                  %66 = cir.ptr_stride(%59 : !cir.ptr<!s8i>, %65 : !u64i), !cir.ptr<!s8i> loc(#loc364)
                  cir.store %58, %66 : !s8i, !cir.ptr<!s8i> loc(#loc924)
                  %67 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc365)
                  %68 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc366)
                  %69 = cir.const #cir.int<13> : !s32i loc(#loc367)
                  %70 = cir.call @strchr(%68, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc365)
                  cir.store %70, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc925)
                  cir.scope {
                    %75 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc372)
                    %76 = cir.cast(ptr_to_bool, %75 : !cir.ptr<!s8i>), !cir.bool loc(#loc372)
                    cir.if %76 {
                      %77 = cir.const #cir.int<0> : !s32i loc(#loc374)
                      %78 = cir.cast(integral, %77 : !s32i), !s8i loc(#loc374)
                      %79 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc375)
                      cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc928)
                    } loc(#loc927)
                  } loc(#loc926)
                  %71 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc377)
                  %72 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc378)
                  %73 = cir.const #cir.int<10> : !s32i loc(#loc379)
                  %74 = cir.call @strchr(%72, %73) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc377)
                  cir.store %74, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc929)
                  cir.scope {
                    %75 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc384)
                    %76 = cir.cast(ptr_to_bool, %75 : !cir.ptr<!s8i>), !cir.bool loc(#loc384)
                    cir.if %76 {
                      %77 = cir.const #cir.int<0> : !s32i loc(#loc386)
                      %78 = cir.cast(integral, %77 : !s32i), !s8i loc(#loc386)
                      %79 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc387)
                      cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc932)
                    } loc(#loc931)
                  } loc(#loc930)
                } loc(#loc888)
                cir.yield loc(#loc272)
              } while {
                %18 = cir.const #cir.int<0> : !s32i loc(#loc389)
                %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc389)
                cir.condition(%19) loc(#loc389)
              } loc(#loc887)
            } loc(#loc887)
            cir.scope {
              %18 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc392)
              %19 = cir.const #cir.int<1> : !s32i loc(#loc393)
              %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc393)
              %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc934)
              cir.if %21 {
                %22 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc395)
                %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc396)
              } loc(#loc935)
            } loc(#loc933)
            cir.scope {
              %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc399)
              %19 = cir.const #cir.int<1> : !s32i loc(#loc400)
              %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc400)
              %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc937)
              cir.if %21 {
                %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc402)
                %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc403)
              } loc(#loc938)
            } loc(#loc936)
          } loc(#loc880)
          cir.break loc(#loc404)
        } loc(#loc254)
        cir.case(default, []) {
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc406)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc406)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc407)
          cir.break loc(#loc408)
        } loc(#loc405)
        cir.yield loc(#loc251)
      } loc(#loc251)
    } loc(#loc879)
    cir.scope {
      %4 = cir.const #cir.int<8> : !s32i loc(#loc411)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc413)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc413)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc414)
          cir.break loc(#loc415)
        } loc(#loc412)
        cir.case(default, []) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc941)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc942)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc943)
            cir.scope {
              %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc425)
              %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc426)
              %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc427)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc427)
              %12 = cir.call @__isoc99_sscanf(%9, %11, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc425)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc428)
              %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc945)
              cir.if %14 {
                cir.scope {
                  %15 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc432)
                  %16 = cir.const #cir.int<10000> : !s32i loc(#loc433)
                  %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc948)
                  cir.if %17 {
                    %18 = cir.const #cir.int<0> : !s32i loc(#loc435)
                    cir.store %18, %7 : !s32i, !cir.ptr<!s32i> loc(#loc950)
                    cir.scope {
                      %20 = cir.const #cir.int<0> : !s32i loc(#loc439)
                      cir.store %20, %5 : !s32i, !cir.ptr<!s32i> loc(#loc952)
                      cir.for : cond {
                        %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc441)
                        %22 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc442)
                        %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc953)
                        cir.condition(%23) loc(#loc443)
                      } body {
                        cir.scope {
                          %21 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc445)
                          %22 = cir.unary(inc, %21) nsw : !s32i, !s32i loc(#loc446)
                          cir.store %22, %7 : !s32i, !cir.ptr<!s32i> loc(#loc955)
                        } loc(#loc954)
                        cir.yield loc(#loc438)
                      } step {
                        %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc447)
                        %22 = cir.unary(inc, %21) nsw : !s32i, !s32i loc(#loc448)
                        cir.store %22, %5 : !s32i, !cir.ptr<!s32i> loc(#loc956)
                        cir.yield loc(#loc951)
                      } loc(#loc951)
                    } loc(#loc951)
                    %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc449)
                    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc450)
                  } loc(#loc949)
                } loc(#loc947)
              } loc(#loc946)
            } loc(#loc944)
          } loc(#loc940)
          cir.break loc(#loc451)
        } loc(#loc416)
        cir.yield loc(#loc409)
      } loc(#loc409)
    } loc(#loc939)
    cir.return loc(#loc244)
  } loc(#loc875)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc958)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc959)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc959)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc959)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc458)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc960)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc462)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc963)
            %6 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc964)
            %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc965)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc966)
            %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc967)
            %10 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc968)
            %11 = cir.const #cir.int<1> : !s32i loc(#loc473)
            %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc473)
            cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc966)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc475)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc475)
            cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc967)
            %15 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc478)
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc479)
            %17 = cir.call @strlen(%16) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc478)
            cir.store %17, %10 : !u64i, !cir.ptr<!u64i> loc(#loc968)
            cir.scope {
              cir.do {
                cir.scope {
                  %18 = cir.const #cir.int<2> : !s32i loc(#loc484)
                  %19 = cir.const #cir.int<1> : !s32i loc(#loc485)
                  %20 = cir.const #cir.int<6> : !s32i loc(#loc486)
                  %21 = cir.call @socket(%18, %19, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc487)
                  cir.store %21, %8 : !s32i, !cir.ptr<!s32i> loc(#loc971)
                  cir.scope {
                    %75 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc492)
                    %76 = cir.const #cir.int<1> : !s32i loc(#loc493)
                    %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc493)
                    %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc973)
                    cir.if %78 {
                      cir.break loc(#loc495)
                    } loc(#loc974)
                  } loc(#loc972)
                  %22 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc975)
                  %23 = cir.const #cir.int<0> : !s32i loc(#loc498)
                  %24 = cir.const #cir.int<16> : !u64i loc(#loc976)
                  cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc977)
                  %25 = cir.const #cir.int<2> : !s32i loc(#loc503)
                  %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc503)
                  %27 = cir.get_member %6[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc79)
                  cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc978)
                  %28 = cir.const #cir.int<0> : !s32i loc(#loc505)
                  %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc505)
                  %30 = cir.get_member %6[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc82)
                  %31 = cir.get_member %30[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc83)
                  cir.store %29, %31 : !u32i, !cir.ptr<!u32i> loc(#loc979)
                  %32 = cir.const #cir.int<27015> : !s32i loc(#loc507)
                  %33 = cir.cast(integral, %32 : !s32i), !u16i loc(#loc507)
                  %34 = cir.call @htons(%33) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc508)
                  %35 = cir.get_member %6[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc87)
                  cir.store %34, %35 : !u16i, !cir.ptr<!u16i> loc(#loc980)
                  cir.scope {
                    %75 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc513)
                    %76 = cir.cast(bitcast, %6 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc982)
                    %77 = cir.const #cir.int<16> : !u64i loc(#loc983)
                    %78 = cir.cast(integral, %77 : !u64i), !u32i loc(#loc983)
                    %79 = cir.call @bind(%75, %76, %78) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc518)
                    %80 = cir.const #cir.int<1> : !s32i loc(#loc519)
                    %81 = cir.unary(minus, %80) nsw : !s32i, !s32i loc(#loc519)
                    %82 = cir.cmp(eq, %79, %81) : !s32i, !cir.bool loc(#loc984)
                    cir.if %82 {
                      cir.break loc(#loc521)
                    } loc(#loc985)
                  } loc(#loc981)
                  cir.scope {
                    %75 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc524)
                    %76 = cir.const #cir.int<5> : !s32i loc(#loc525)
                    %77 = cir.call @listen(%75, %76) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc526)
                    %78 = cir.const #cir.int<1> : !s32i loc(#loc527)
                    %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc527)
                    %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc987)
                    cir.if %80 {
                      cir.break loc(#loc529)
                    } loc(#loc988)
                  } loc(#loc986)
                  %36 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc530)
                  %37 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc531)
                  %38 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc532)
                  %39 = cir.call @accept(%36, %37, %38) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc533)
                  cir.store %39, %9 : !s32i, !cir.ptr<!s32i> loc(#loc989)
                  cir.scope {
                    %75 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc538)
                    %76 = cir.const #cir.int<1> : !s32i loc(#loc539)
                    %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc539)
                    %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc991)
                    cir.if %78 {
                      cir.break loc(#loc541)
                    } loc(#loc992)
                  } loc(#loc990)
                  %40 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc542)
                  %41 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc543)
                  %42 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc544)
                  %43 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc545)
                  %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc993)
                  %45 = cir.const #cir.int<1> : !u64i loc(#loc994)
                  %46 = cir.const #cir.int<100> : !s32i loc(#loc550)
                  %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc550)
                  %48 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc551)
                  %49 = cir.binop(sub, %47, %48) : !u64i loc(#loc995)
                  %50 = cir.const #cir.int<1> : !s32i loc(#loc552)
                  %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc552)
                  %52 = cir.binop(sub, %49, %51) : !u64i loc(#loc996)
                  %53 = cir.binop(mul, %45, %52) : !u64i loc(#loc997)
                  %54 = cir.const #cir.int<0> : !s32i loc(#loc554)
                  %55 = cir.call @recv(%40, %44, %53, %54) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc555)
                  %56 = cir.cast(integral, %55 : !s64i), !s32i loc(#loc555)
                  cir.store %56, %5 : !s32i, !cir.ptr<!s32i> loc(#loc998)
                  cir.scope {
                    %75 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc560)
                    %76 = cir.const #cir.int<1> : !s32i loc(#loc561)
                    %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc561)
                    %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc1000)
                    %79 = cir.ternary(%78, true {
                      %80 = cir.const #true loc(#loc562)
                      cir.yield %80 : !cir.bool loc(#loc562)
                    }, false {
                      %80 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc563)
                      %81 = cir.const #cir.int<0> : !s32i loc(#loc564)
                      %82 = cir.cmp(eq, %80, %81) : !s32i, !cir.bool loc(#loc1001)
                      %83 = cir.ternary(%82, true {
                        %84 = cir.const #true loc(#loc562)
                        cir.yield %84 : !cir.bool loc(#loc562)
                      }, false {
                        %84 = cir.const #false loc(#loc562)
                        cir.yield %84 : !cir.bool loc(#loc562)
                      }) : (!cir.bool) -> !cir.bool loc(#loc562)
                      cir.yield %83 : !cir.bool loc(#loc562)
                    }) : (!cir.bool) -> !cir.bool loc(#loc562)
                    cir.if %79 {
                      cir.break loc(#loc566)
                    } loc(#loc1002)
                  } loc(#loc999)
                  %57 = cir.const #cir.int<0> : !s32i loc(#loc567)
                  %58 = cir.cast(integral, %57 : !s32i), !s8i loc(#loc567)
                  %59 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc568)
                  %60 = cir.load %10 : !cir.ptr<!u64i>, !u64i loc(#loc569)
                  %61 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc570)
                  %62 = cir.cast(integral, %61 : !s32i), !u64i loc(#loc570)
                  %63 = cir.const #cir.int<1> : !u64i loc(#loc1003)
                  %64 = cir.binop(div, %62, %63) : !u64i loc(#loc1004)
                  %65 = cir.binop(add, %60, %64) : !u64i loc(#loc1005)
                  %66 = cir.ptr_stride(%59 : !cir.ptr<!s8i>, %65 : !u64i), !cir.ptr<!s8i> loc(#loc573)
                  cir.store %58, %66 : !s8i, !cir.ptr<!s8i> loc(#loc1006)
                  %67 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc574)
                  %68 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc575)
                  %69 = cir.const #cir.int<13> : !s32i loc(#loc576)
                  %70 = cir.call @strchr(%68, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc574)
                  cir.store %70, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc1007)
                  cir.scope {
                    %75 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc581)
                    %76 = cir.cast(ptr_to_bool, %75 : !cir.ptr<!s8i>), !cir.bool loc(#loc581)
                    cir.if %76 {
                      %77 = cir.const #cir.int<0> : !s32i loc(#loc583)
                      %78 = cir.cast(integral, %77 : !s32i), !s8i loc(#loc583)
                      %79 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc584)
                      cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc1010)
                    } loc(#loc1009)
                  } loc(#loc1008)
                  %71 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc586)
                  %72 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc587)
                  %73 = cir.const #cir.int<10> : !s32i loc(#loc588)
                  %74 = cir.call @strchr(%72, %73) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc586)
                  cir.store %74, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc1011)
                  cir.scope {
                    %75 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc593)
                    %76 = cir.cast(ptr_to_bool, %75 : !cir.ptr<!s8i>), !cir.bool loc(#loc593)
                    cir.if %76 {
                      %77 = cir.const #cir.int<0> : !s32i loc(#loc595)
                      %78 = cir.cast(integral, %77 : !s32i), !s8i loc(#loc595)
                      %79 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc596)
                      cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc1014)
                    } loc(#loc1013)
                  } loc(#loc1012)
                } loc(#loc970)
                cir.yield loc(#loc481)
              } while {
                %18 = cir.const #cir.int<0> : !s32i loc(#loc598)
                %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc598)
                cir.condition(%19) loc(#loc598)
              } loc(#loc969)
            } loc(#loc969)
            cir.scope {
              %18 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc601)
              %19 = cir.const #cir.int<1> : !s32i loc(#loc602)
              %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc602)
              %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc1016)
              cir.if %21 {
                %22 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc604)
                %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc605)
              } loc(#loc1017)
            } loc(#loc1015)
            cir.scope {
              %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc608)
              %19 = cir.const #cir.int<1> : !s32i loc(#loc609)
              %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc609)
              %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc1019)
              cir.if %21 {
                %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc611)
                %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc612)
              } loc(#loc1020)
            } loc(#loc1018)
          } loc(#loc962)
          cir.break loc(#loc613)
        } loc(#loc463)
        cir.case(default, []) {
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc615)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc615)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc616)
          cir.break loc(#loc617)
        } loc(#loc614)
        cir.yield loc(#loc460)
      } loc(#loc460)
    } loc(#loc961)
    cir.scope {
      %4 = cir.const #cir.int<7> : !s32i loc(#loc620)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc1023)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc1024)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc1025)
            cir.scope {
              %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc630)
              %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc631)
              %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc632)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc632)
              %12 = cir.call @__isoc99_sscanf(%9, %11, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc630)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc633)
              %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc1027)
              cir.if %14 {
                cir.scope {
                  %15 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc637)
                  %16 = cir.const #cir.int<10000> : !s32i loc(#loc638)
                  %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc1030)
                  cir.if %17 {
                    %18 = cir.const #cir.int<0> : !s32i loc(#loc640)
                    cir.store %18, %7 : !s32i, !cir.ptr<!s32i> loc(#loc1032)
                    cir.scope {
                      %20 = cir.const #cir.int<0> : !s32i loc(#loc644)
                      cir.store %20, %5 : !s32i, !cir.ptr<!s32i> loc(#loc1034)
                      cir.for : cond {
                        %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc646)
                        %22 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc647)
                        %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc1035)
                        cir.condition(%23) loc(#loc648)
                      } body {
                        cir.scope {
                          %21 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc650)
                          %22 = cir.unary(inc, %21) nsw : !s32i, !s32i loc(#loc651)
                          cir.store %22, %7 : !s32i, !cir.ptr<!s32i> loc(#loc1037)
                        } loc(#loc1036)
                        cir.yield loc(#loc643)
                      } step {
                        %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc652)
                        %22 = cir.unary(inc, %21) nsw : !s32i, !s32i loc(#loc653)
                        cir.store %22, %5 : !s32i, !cir.ptr<!s32i> loc(#loc1038)
                        cir.yield loc(#loc1033)
                      } loc(#loc1033)
                    } loc(#loc1033)
                    %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc654)
                    cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc655)
                  } loc(#loc1031)
                } loc(#loc1029)
              } loc(#loc1028)
            } loc(#loc1026)
          } loc(#loc1022)
          cir.break loc(#loc656)
        } loc(#loc621)
        cir.case(default, []) {
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc658)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc658)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc659)
          cir.break loc(#loc660)
        } loc(#loc657)
        cir.yield loc(#loc618)
      } loc(#loc618)
    } loc(#loc1021)
    cir.return loc(#loc453)
  } loc(#loc957)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc1039)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"15\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc663)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc1041)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc1042)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc1042)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc1042)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc670)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc1043)
    cir.scope {
      %4 = cir.const #cir.int<5> : !s32i loc(#loc674)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc676)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc676)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc677)
          cir.break loc(#loc678)
        } loc(#loc675)
        cir.case(default, []) {
          %5 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc680)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc681)
          %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc663)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc663)
          %9 = cir.call @strcpy(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc680)
          cir.break loc(#loc682)
        } loc(#loc679)
        cir.yield loc(#loc672)
      } loc(#loc672)
    } loc(#loc1044)
    cir.scope {
      %4 = cir.const #cir.int<7> : !s32i loc(#loc685)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc1047)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc1048)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc1049)
            cir.scope {
              %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc695)
              %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc696)
              %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc697)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc697)
              %12 = cir.call @__isoc99_sscanf(%9, %11, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc695)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc698)
              %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc1051)
              cir.if %14 {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc700)
                cir.store %15, %7 : !s32i, !cir.ptr<!s32i> loc(#loc1053)
                cir.scope {
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc704)
                  cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc1055)
                  cir.for : cond {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc706)
                    %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc707)
                    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc1056)
                    cir.condition(%20) loc(#loc708)
                  } body {
                    cir.scope {
                      %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc710)
                      %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc711)
                      cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc1058)
                    } loc(#loc1057)
                    cir.yield loc(#loc703)
                  } step {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc712)
                    %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc713)
                    cir.store %19, %5 : !s32i, !cir.ptr<!s32i> loc(#loc1059)
                    cir.yield loc(#loc1054)
                  } loc(#loc1054)
                } loc(#loc1054)
                %16 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc714)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc715)
              } loc(#loc1052)
            } loc(#loc1050)
          } loc(#loc1046)
          cir.break loc(#loc716)
        } loc(#loc686)
        cir.case(default, []) {
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc718)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc718)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc719)
          cir.break loc(#loc720)
        } loc(#loc717)
        cir.yield loc(#loc683)
      } loc(#loc683)
    } loc(#loc1045)
    cir.return loc(#loc665)
  } loc(#loc1040)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc1061)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc1062)
    %2 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc1062)
    cir.store %2, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc1062)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc727)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc1063)
    cir.scope {
      %4 = cir.const #cir.int<6> : !s32i loc(#loc731)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %5 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc733)
          %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc734)
          %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc735)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc735)
          %9 = cir.call @strcpy(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc733)
          cir.break loc(#loc736)
        } loc(#loc732)
        cir.case(default, []) {
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc738)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc738)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc739)
          cir.break loc(#loc740)
        } loc(#loc737)
        cir.yield loc(#loc729)
      } loc(#loc729)
    } loc(#loc1064)
    cir.scope {
      %4 = cir.const #cir.int<7> : !s32i loc(#loc743)
      cir.switch (%4 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc1067)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["n"] {alignment = 4 : i64} loc(#loc1068)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["intVariable"] {alignment = 4 : i64} loc(#loc1069)
            cir.scope {
              %8 = cir.get_global @__isoc99_sscanf : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc753)
              %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc754)
              %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc755)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc755)
              %12 = cir.call @__isoc99_sscanf(%9, %11, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i extra(#fn_attr) loc(#loc753)
              %13 = cir.const #cir.int<1> : !s32i loc(#loc756)
              %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc1071)
              cir.if %14 {
                %15 = cir.const #cir.int<0> : !s32i loc(#loc758)
                cir.store %15, %7 : !s32i, !cir.ptr<!s32i> loc(#loc1073)
                cir.scope {
                  %17 = cir.const #cir.int<0> : !s32i loc(#loc762)
                  cir.store %17, %5 : !s32i, !cir.ptr<!s32i> loc(#loc1075)
                  cir.for : cond {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc764)
                    %19 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc765)
                    %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc1076)
                    cir.condition(%20) loc(#loc766)
                  } body {
                    cir.scope {
                      %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc768)
                      %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc769)
                      cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc1078)
                    } loc(#loc1077)
                    cir.yield loc(#loc761)
                  } step {
                    %18 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc770)
                    %19 = cir.unary(inc, %18) nsw : !s32i, !s32i loc(#loc771)
                    cir.store %19, %5 : !s32i, !cir.ptr<!s32i> loc(#loc1079)
                    cir.yield loc(#loc1074)
                  } loc(#loc1074)
                } loc(#loc1074)
                %16 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc772)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc773)
              } loc(#loc1072)
            } loc(#loc1070)
          } loc(#loc1066)
          cir.break loc(#loc774)
        } loc(#loc744)
        cir.case(default, []) {
          %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc776)
          %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc776)
          cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc777)
          cir.break loc(#loc778)
        } loc(#loc775)
        cir.yield loc(#loc741)
      } loc(#loc741)
    } loc(#loc1065)
    cir.return loc(#loc722)
  } loc(#loc1060)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE606_Unchecked_Loop_Condition/CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/netinet/in.h":402:1)
#loc6 = loc("/usr/include/netinet/in.h":403:40)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc15 = loc("/usr/include/string.h":246:1)
#loc16 = loc("/usr/include/string.h":247:33)
#loc17 = loc("/usr/include/unistd.h":358:1)
#loc18 = loc("/usr/include/unistd.h":358:27)
#loc19 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc20 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc21 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":139:19)
#loc22 = loc("/usr/include/stdio.h":468:1)
#loc23 = loc("/usr/include/stdio.h":468:12)
#loc24 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":147:26)
#loc25 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc26 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc27 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":49:1)
#loc28 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":165:1)
#loc29 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":51:5)
#loc30 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":51:12)
#loc31 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":52:5)
#loc32 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":52:28)
#loc33 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":53:12)
#loc34 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":53:5)
#loc35 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":54:5)
#loc36 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":141:5)
#loc37 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":54:12)
#loc38 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":56:5)
#loc39 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":57:5)
#loc40 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":135:5)
#loc41 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":62:9)
#loc42 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":62:13)
#loc43 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":63:9)
#loc44 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":63:28)
#loc45 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":64:9)
#loc46 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":64:15)
#loc47 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":65:9)
#loc48 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":65:31)
#loc49 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":66:9)
#loc50 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":66:31)
#loc51 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":67:9)
#loc52 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":67:37)
#loc53 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":67:26)
#loc54 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":67:33)
#loc55 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":68:9)
#loc56 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":120:17)
#loc57 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":69:9)
#loc58 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":119:9)
#loc59 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":78:35)
#loc60 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":78:44)
#loc61 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":78:57)
#loc62 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":78:28)
#loc63 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":78:13)
#loc64 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":78:68)
#loc65 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":79:13)
#loc66 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":82:13)
#loc67 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":79:17)
#loc68 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":79:33)
#loc69 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":80:13)
#loc70 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":81:17)
#loc71 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":83:20)
#loc72 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":83:21)
#loc73 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":83:30)
#loc74 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":83:33)
#loc75 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":83:47)
#loc76 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":83:13)
#loc77 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":83:48)
#loc78 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":84:34)
#loc79 = loc("/usr/include/netinet/in.h":249:5)
#loc80 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":84:13)
#loc81 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":85:39)
#loc82 = loc("/usr/include/netinet/in.h":251:20)
#loc83 = loc("/usr/include/netinet/in.h":33:15)
#loc84 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":85:13)
#loc85 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":86:38)
#loc86 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":86:32)
#loc87 = loc("/usr/include/netinet/in.h":250:15)
#loc88 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":86:13)
#loc89 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":86:46)
#loc90 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":87:13)
#loc91 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":90:13)
#loc92 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":87:22)
#loc93 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":87:54)
#loc94 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":87:55)
#loc95 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":87:64)
#loc96 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":87:78)
#loc97 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":87:17)
#loc98 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":87:84)
#loc99 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":88:13)
#loc100 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":89:17)
#loc101 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":91:13)
#loc102 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":94:13)
#loc103 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":91:24)
#loc104 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":91:38)
#loc105 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":91:17)
#loc106 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":91:57)
#loc107 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":92:13)
#loc108 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":93:17)
#loc109 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":95:35)
#loc110 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":95:49)
#loc111 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":95:55)
#loc112 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":95:28)
#loc113 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":95:13)
#loc114 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":95:59)
#loc115 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":96:13)
#loc116 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":99:13)
#loc117 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":96:17)
#loc118 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":96:33)
#loc119 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":97:13)
#loc120 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":98:17)
#loc121 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":101:31)
#loc122 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":101:54)
#loc123 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":101:61)
#loc124 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":101:59)
#loc125 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":101:45)
#loc126 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":101:68)
#loc127 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":101:71)
#loc128 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":101:82)
#loc129 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":101:87)
#loc130 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":101:93)
#loc131 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":101:103)
#loc132 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":101:104)
#loc133 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":101:107)
#loc134 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":101:26)
#loc135 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":101:13)
#loc136 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":101:108)
#loc137 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":102:13)
#loc138 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":105:13)
#loc139 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":102:17)
#loc140 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":102:31)
#loc141 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":102:44)
#loc142 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":102:47)
#loc143 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":102:61)
#loc144 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":103:13)
#loc145 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":104:17)
#loc146 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":107:57)
#loc147 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":107:13)
#loc148 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":107:18)
#loc149 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":107:28)
#loc150 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":107:41)
#loc151 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":107:52)
#loc152 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":107:53)
#loc153 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":109:23)
#loc154 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":109:30)
#loc155 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":109:36)
#loc156 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":109:13)
#loc157 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":109:40)
#loc158 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":110:13)
#loc159 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":113:13)
#loc160 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":110:17)
#loc161 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":111:13)
#loc162 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":112:28)
#loc163 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":112:18)
#loc164 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":112:17)
#loc165 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":114:23)
#loc166 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":114:30)
#loc167 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":114:36)
#loc168 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":114:13)
#loc169 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":114:40)
#loc170 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":115:13)
#loc171 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":118:13)
#loc172 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":115:17)
#loc173 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":116:13)
#loc174 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":117:28)
#loc175 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":117:18)
#loc176 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":117:17)
#loc177 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":120:16)
#loc178 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":121:9)
#loc179 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":124:9)
#loc180 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":121:13)
#loc181 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":121:29)
#loc182 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":122:9)
#loc183 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":123:26)
#loc184 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":123:13)
#loc185 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":125:9)
#loc186 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":128:9)
#loc187 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":125:13)
#loc188 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":125:29)
#loc189 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":126:9)
#loc190 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":127:26)
#loc191 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":127:13)
#loc192 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":136:5)
#loc193 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":137:5)
#loc194 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":139:9)
#loc195 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":140:9)
#loc196 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":142:5)
#loc197 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":164:5)
#loc198 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":142:12)
#loc199 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":144:5)
#loc200 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":145:5)
#loc201 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":158:5)
#loc202 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":146:9)
#loc203 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":146:13)
#loc204 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":146:16)
#loc205 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":146:19)
#loc206 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":147:9)
#loc207 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":157:9)
#loc208 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":147:13)
#loc209 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":147:20)
#loc210 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":147:39)
#loc211 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":148:9)
#loc212 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":150:27)
#loc213 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":150:13)
#loc214 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":151:13)
#loc215 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":155:13)
#loc216 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":151:22)
#loc217 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":151:18)
#loc218 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":151:25)
#loc219 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":151:29)
#loc220 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":151:27)
#loc221 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":152:13)
#loc222 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":154:28)
#loc223 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":154:17)
#loc224 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":151:33)
#loc225 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":151:32)
#loc226 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":156:26)
#loc227 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":156:13)
#loc228 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":159:5)
#loc229 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":160:5)
#loc230 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":162:19)
#loc231 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":162:9)
#loc232 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":163:9)
#loc233 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":499:1)
#loc234 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":505:1)
#loc235 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":501:5)
#loc236 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":501:14)
#loc237 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":502:5)
#loc238 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":502:14)
#loc239 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":503:5)
#loc240 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":503:14)
#loc241 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":504:5)
#loc242 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":504:14)
#loc243 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":172:1)
#loc244 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":291:1)
#loc245 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":174:5)
#loc246 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":174:12)
#loc247 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":175:5)
#loc248 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":175:28)
#loc249 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":176:12)
#loc250 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":176:5)
#loc251 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":177:5)
#loc252 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":264:5)
#loc253 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":177:12)
#loc254 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":179:5)
#loc255 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":180:5)
#loc256 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":258:5)
#loc257 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":185:9)
#loc258 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":185:13)
#loc259 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":186:9)
#loc260 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":186:28)
#loc261 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":187:9)
#loc262 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":187:15)
#loc263 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":188:9)
#loc264 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":188:31)
#loc265 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":189:9)
#loc266 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":189:31)
#loc267 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":190:9)
#loc268 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":190:37)
#loc269 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":190:26)
#loc270 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":190:33)
#loc271 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":191:9)
#loc272 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":243:17)
#loc273 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":192:9)
#loc274 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":242:9)
#loc275 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":201:35)
#loc276 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":201:44)
#loc277 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":201:57)
#loc278 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":201:28)
#loc279 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":201:13)
#loc280 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":201:68)
#loc281 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":202:13)
#loc282 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":205:13)
#loc283 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":202:17)
#loc284 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":202:33)
#loc285 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":203:13)
#loc286 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":204:17)
#loc287 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":206:20)
#loc288 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":206:21)
#loc289 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":206:30)
#loc290 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":206:33)
#loc291 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":206:47)
#loc292 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":206:13)
#loc293 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":206:48)
#loc294 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":207:34)
#loc295 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":207:13)
#loc296 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":208:39)
#loc297 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":208:13)
#loc298 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":209:38)
#loc299 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":209:32)
#loc300 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":209:13)
#loc301 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":209:46)
#loc302 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":210:13)
#loc303 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":213:13)
#loc304 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":210:22)
#loc305 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":210:54)
#loc306 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":210:55)
#loc307 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":210:64)
#loc308 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":210:78)
#loc309 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":210:17)
#loc310 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":210:84)
#loc311 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":211:13)
#loc312 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":212:17)
#loc313 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":214:13)
#loc314 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":217:13)
#loc315 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":214:24)
#loc316 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":214:38)
#loc317 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":214:17)
#loc318 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":214:57)
#loc319 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":215:13)
#loc320 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":216:17)
#loc321 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":218:35)
#loc322 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":218:49)
#loc323 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":218:55)
#loc324 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":218:28)
#loc325 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":218:13)
#loc326 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":218:59)
#loc327 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":219:13)
#loc328 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":222:13)
#loc329 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":219:17)
#loc330 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":219:33)
#loc331 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":220:13)
#loc332 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":221:17)
#loc333 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":224:31)
#loc334 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":224:54)
#loc335 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":224:61)
#loc336 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":224:59)
#loc337 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":224:45)
#loc338 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":224:68)
#loc339 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":224:71)
#loc340 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":224:82)
#loc341 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":224:87)
#loc342 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":224:93)
#loc343 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":224:103)
#loc344 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":224:104)
#loc345 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":224:107)
#loc346 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":224:26)
#loc347 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":224:13)
#loc348 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":224:108)
#loc349 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":225:13)
#loc350 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":228:13)
#loc351 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":225:17)
#loc352 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":225:31)
#loc353 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":225:44)
#loc354 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":225:47)
#loc355 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":225:61)
#loc356 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":226:13)
#loc357 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":227:17)
#loc358 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":230:57)
#loc359 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":230:13)
#loc360 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":230:18)
#loc361 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":230:28)
#loc362 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":230:41)
#loc363 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":230:52)
#loc364 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":230:53)
#loc365 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":232:23)
#loc366 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":232:30)
#loc367 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":232:36)
#loc368 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":232:13)
#loc369 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":232:40)
#loc370 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":233:13)
#loc371 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":236:13)
#loc372 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":233:17)
#loc373 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":234:13)
#loc374 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":235:28)
#loc375 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":235:18)
#loc376 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":235:17)
#loc377 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":237:23)
#loc378 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":237:30)
#loc379 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":237:36)
#loc380 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":237:13)
#loc381 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":237:40)
#loc382 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":238:13)
#loc383 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":241:13)
#loc384 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":238:17)
#loc385 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":239:13)
#loc386 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":240:28)
#loc387 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":240:18)
#loc388 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":240:17)
#loc389 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":243:16)
#loc390 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":244:9)
#loc391 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":247:9)
#loc392 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":244:13)
#loc393 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":244:29)
#loc394 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":245:9)
#loc395 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":246:26)
#loc396 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":246:13)
#loc397 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":248:9)
#loc398 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":251:9)
#loc399 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":248:13)
#loc400 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":248:29)
#loc401 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":249:9)
#loc402 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":250:26)
#loc403 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":250:13)
#loc404 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":259:5)
#loc405 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":260:5)
#loc406 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":262:19)
#loc407 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":262:9)
#loc408 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":263:9)
#loc409 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":265:5)
#loc410 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":290:5)
#loc411 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":265:12)
#loc412 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":267:5)
#loc413 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":269:19)
#loc414 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":269:9)
#loc415 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":270:9)
#loc416 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":271:5)
#loc417 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":272:5)
#loc418 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":288:5)
#loc419 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":273:9)
#loc420 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":273:13)
#loc421 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":273:16)
#loc422 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":273:19)
#loc423 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":274:9)
#loc424 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":287:9)
#loc425 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":274:13)
#loc426 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":274:20)
#loc427 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":274:26)
#loc428 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":274:39)
#loc429 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":275:9)
#loc430 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":277:13)
#loc431 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":286:13)
#loc432 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":277:17)
#loc433 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":277:21)
#loc434 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":278:13)
#loc435 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":279:31)
#loc436 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":279:17)
#loc437 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":280:17)
#loc438 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":284:17)
#loc439 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":280:26)
#loc440 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":280:22)
#loc441 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":280:29)
#loc442 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":280:33)
#loc443 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":280:31)
#loc444 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":281:17)
#loc445 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":283:32)
#loc446 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":283:21)
#loc447 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":280:37)
#loc448 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":280:36)
#loc449 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":285:30)
#loc450 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":285:17)
#loc451 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":289:5)
#loc452 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":294:1)
#loc453 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":413:1)
#loc454 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":296:5)
#loc455 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":296:12)
#loc456 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":297:5)
#loc457 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":297:28)
#loc458 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":298:12)
#loc459 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":298:5)
#loc460 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":299:5)
#loc461 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":386:5)
#loc462 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":299:12)
#loc463 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":301:5)
#loc464 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":302:5)
#loc465 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":380:5)
#loc466 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":307:9)
#loc467 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":307:13)
#loc468 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":308:9)
#loc469 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":308:28)
#loc470 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":309:9)
#loc471 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":309:15)
#loc472 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":310:9)
#loc473 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":310:31)
#loc474 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":311:9)
#loc475 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":311:31)
#loc476 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":312:9)
#loc477 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":312:37)
#loc478 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":312:26)
#loc479 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":312:33)
#loc480 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":313:9)
#loc481 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":365:17)
#loc482 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":314:9)
#loc483 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":364:9)
#loc484 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":323:35)
#loc485 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":323:44)
#loc486 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":323:57)
#loc487 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":323:28)
#loc488 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":323:13)
#loc489 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":323:68)
#loc490 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":324:13)
#loc491 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":327:13)
#loc492 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":324:17)
#loc493 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":324:33)
#loc494 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":325:13)
#loc495 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":326:17)
#loc496 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":328:20)
#loc497 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":328:21)
#loc498 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":328:30)
#loc499 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":328:33)
#loc500 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":328:47)
#loc501 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":328:13)
#loc502 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":328:48)
#loc503 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":329:34)
#loc504 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":329:13)
#loc505 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":330:39)
#loc506 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":330:13)
#loc507 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":331:38)
#loc508 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":331:32)
#loc509 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":331:13)
#loc510 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":331:46)
#loc511 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":332:13)
#loc512 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":335:13)
#loc513 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":332:22)
#loc514 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":332:54)
#loc515 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":332:55)
#loc516 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":332:64)
#loc517 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":332:78)
#loc518 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":332:17)
#loc519 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":332:84)
#loc520 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":333:13)
#loc521 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":334:17)
#loc522 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":336:13)
#loc523 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":339:13)
#loc524 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":336:24)
#loc525 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":336:38)
#loc526 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":336:17)
#loc527 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":336:57)
#loc528 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":337:13)
#loc529 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":338:17)
#loc530 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":340:35)
#loc531 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":340:49)
#loc532 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":340:55)
#loc533 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":340:28)
#loc534 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":340:13)
#loc535 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":340:59)
#loc536 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":341:13)
#loc537 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":344:13)
#loc538 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":341:17)
#loc539 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":341:33)
#loc540 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":342:13)
#loc541 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":343:17)
#loc542 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":346:31)
#loc543 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":346:54)
#loc544 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":346:61)
#loc545 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":346:59)
#loc546 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":346:45)
#loc547 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":346:68)
#loc548 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":346:71)
#loc549 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":346:82)
#loc550 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":346:87)
#loc551 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":346:93)
#loc552 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":346:103)
#loc553 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":346:104)
#loc554 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":346:107)
#loc555 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":346:26)
#loc556 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":346:13)
#loc557 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":346:108)
#loc558 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":347:13)
#loc559 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":350:13)
#loc560 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":347:17)
#loc561 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":347:31)
#loc562 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":347:44)
#loc563 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":347:47)
#loc564 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":347:61)
#loc565 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":348:13)
#loc566 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":349:17)
#loc567 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":352:57)
#loc568 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":352:13)
#loc569 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":352:18)
#loc570 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":352:28)
#loc571 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":352:41)
#loc572 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":352:52)
#loc573 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":352:53)
#loc574 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":354:23)
#loc575 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":354:30)
#loc576 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":354:36)
#loc577 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":354:13)
#loc578 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":354:40)
#loc579 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":355:13)
#loc580 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":358:13)
#loc581 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":355:17)
#loc582 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":356:13)
#loc583 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":357:28)
#loc584 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":357:18)
#loc585 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":357:17)
#loc586 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":359:23)
#loc587 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":359:30)
#loc588 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":359:36)
#loc589 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":359:13)
#loc590 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":359:40)
#loc591 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":360:13)
#loc592 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":363:13)
#loc593 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":360:17)
#loc594 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":361:13)
#loc595 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":362:28)
#loc596 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":362:18)
#loc597 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":362:17)
#loc598 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":365:16)
#loc599 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":366:9)
#loc600 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":369:9)
#loc601 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":366:13)
#loc602 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":366:29)
#loc603 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":367:9)
#loc604 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":368:26)
#loc605 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":368:13)
#loc606 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":370:9)
#loc607 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":373:9)
#loc608 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":370:13)
#loc609 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":370:29)
#loc610 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":371:9)
#loc611 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":372:26)
#loc612 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":372:13)
#loc613 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":381:5)
#loc614 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":382:5)
#loc615 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":384:19)
#loc616 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":384:9)
#loc617 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":385:9)
#loc618 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":387:5)
#loc619 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":412:5)
#loc620 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":387:12)
#loc621 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":389:5)
#loc622 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":390:5)
#loc623 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":406:5)
#loc624 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":391:9)
#loc625 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":391:13)
#loc626 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":391:16)
#loc627 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":391:19)
#loc628 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":392:9)
#loc629 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":405:9)
#loc630 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":392:13)
#loc631 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":392:20)
#loc632 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":392:26)
#loc633 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":392:39)
#loc634 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":393:9)
#loc635 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":395:13)
#loc636 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":404:13)
#loc637 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":395:17)
#loc638 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":395:21)
#loc639 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":396:13)
#loc640 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":397:31)
#loc641 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":397:17)
#loc642 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":398:17)
#loc643 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":402:17)
#loc644 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":398:26)
#loc645 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":398:22)
#loc646 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":398:29)
#loc647 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":398:33)
#loc648 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":398:31)
#loc649 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":399:17)
#loc650 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":401:32)
#loc651 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":401:21)
#loc652 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":398:37)
#loc653 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":398:36)
#loc654 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":403:30)
#loc655 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":403:17)
#loc656 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":407:5)
#loc657 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":408:5)
#loc658 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":410:19)
#loc659 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":410:9)
#loc660 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":411:9)
#loc661 = loc("/usr/include/string.h":141:1)
#loc662 = loc("/usr/include/string.h":142:14)
#loc663 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":429:22)
#loc664 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":416:1)
#loc665 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":455:1)
#loc666 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":418:5)
#loc667 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":418:12)
#loc668 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":419:5)
#loc669 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":419:28)
#loc670 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":420:12)
#loc671 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":420:5)
#loc672 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":421:5)
#loc673 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":431:5)
#loc674 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":421:12)
#loc675 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":423:5)
#loc676 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":425:19)
#loc677 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":425:9)
#loc678 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":426:9)
#loc679 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":427:5)
#loc680 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":429:9)
#loc681 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":429:16)
#loc682 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":430:9)
#loc683 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":432:5)
#loc684 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":454:5)
#loc685 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":432:12)
#loc686 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":434:5)
#loc687 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":435:5)
#loc688 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":448:5)
#loc689 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":436:9)
#loc690 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":436:13)
#loc691 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":436:16)
#loc692 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":436:19)
#loc693 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":437:9)
#loc694 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":447:9)
#loc695 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":437:13)
#loc696 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":437:20)
#loc697 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":437:26)
#loc698 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":437:39)
#loc699 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":438:9)
#loc700 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":440:27)
#loc701 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":440:13)
#loc702 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":441:13)
#loc703 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":445:13)
#loc704 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":441:22)
#loc705 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":441:18)
#loc706 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":441:25)
#loc707 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":441:29)
#loc708 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":441:27)
#loc709 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":442:13)
#loc710 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":444:28)
#loc711 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":444:17)
#loc712 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":441:33)
#loc713 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":441:32)
#loc714 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":446:26)
#loc715 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":446:13)
#loc716 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":449:5)
#loc717 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":450:5)
#loc718 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":452:19)
#loc719 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":452:9)
#loc720 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":453:9)
#loc721 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":458:1)
#loc722 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":497:1)
#loc723 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":460:5)
#loc724 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":460:12)
#loc725 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":461:5)
#loc726 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":461:28)
#loc727 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":462:12)
#loc728 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":462:5)
#loc729 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":463:5)
#loc730 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":473:5)
#loc731 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":463:12)
#loc732 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":465:5)
#loc733 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":467:9)
#loc734 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":467:16)
#loc735 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":467:22)
#loc736 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":468:9)
#loc737 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":469:5)
#loc738 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":471:19)
#loc739 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":471:9)
#loc740 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":472:9)
#loc741 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":474:5)
#loc742 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":496:5)
#loc743 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":474:12)
#loc744 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":476:5)
#loc745 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":477:5)
#loc746 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":490:5)
#loc747 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":478:9)
#loc748 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":478:13)
#loc749 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":478:16)
#loc750 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":478:19)
#loc751 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":479:9)
#loc752 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":489:9)
#loc753 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":479:13)
#loc754 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":479:20)
#loc755 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":479:26)
#loc756 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":479:39)
#loc757 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":480:9)
#loc758 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":482:27)
#loc759 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":482:13)
#loc760 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":483:13)
#loc761 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":487:13)
#loc762 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":483:22)
#loc763 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":483:18)
#loc764 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":483:25)
#loc765 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":483:29)
#loc766 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":483:27)
#loc767 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":484:13)
#loc768 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":486:28)
#loc769 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":486:17)
#loc770 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":483:33)
#loc771 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":483:32)
#loc772 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":488:26)
#loc773 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":488:13)
#loc774 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":491:5)
#loc775 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":492:5)
#loc776 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":494:19)
#loc777 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":494:9)
#loc778 = loc("CWE606_Unchecked_Loop_Condition__char_listen_socket_15.c":495:9)
#loc779 = loc(fused[#loc1, #loc2])
#loc780 = loc(fused[#loc3, #loc4])
#loc781 = loc(fused[#loc5, #loc6])
#loc782 = loc(fused[#loc7, #loc8])
#loc783 = loc(fused[#loc9, #loc10])
#loc784 = loc(fused[#loc11, #loc12])
#loc785 = loc(fused[#loc13, #loc14])
#loc786 = loc(fused[#loc15, #loc16])
#loc787 = loc(fused[#loc17, #loc18])
#loc788 = loc(fused[#loc19, #loc20])
#loc789 = loc(fused[#loc22, #loc23])
#loc790 = loc(fused[#loc25, #loc26])
#loc791 = loc(fused[#loc27, #loc28])
#loc792 = loc(fused[#loc29, #loc30])
#loc793 = loc(fused[#loc31, #loc32])
#loc794 = loc(fused[#loc34, #loc33])
#loc795 = loc(fused[#loc35, #loc36])
#loc796 = loc(fused[#loc39, #loc40])
#loc797 = loc(fused[#loc41, #loc42])
#loc798 = loc(fused[#loc43, #loc44])
#loc799 = loc(fused[#loc45, #loc46])
#loc800 = loc(fused[#loc47, #loc48])
#loc801 = loc(fused[#loc49, #loc50])
#loc802 = loc(fused[#loc51, #loc52])
#loc803 = loc(fused[#loc55, #loc56])
#loc804 = loc(fused[#loc57, #loc58])
#loc805 = loc(fused[#loc63, #loc64])
#loc806 = loc(fused[#loc65, #loc66])
#loc807 = loc(fused[#loc67, #loc68])
#loc808 = loc(fused[#loc69, #loc66])
#loc809 = loc(fused[#loc71, #loc72])
#loc810 = loc(fused[#loc74, #loc75])
#loc811 = loc(fused[#loc76, #loc77])
#loc812 = loc(fused[#loc80, #loc78])
#loc813 = loc(fused[#loc84, #loc81])
#loc814 = loc(fused[#loc88, #loc89])
#loc815 = loc(fused[#loc90, #loc91])
#loc816 = loc(fused[#loc93, #loc94])
#loc817 = loc(fused[#loc95, #loc96])
#loc818 = loc(fused[#loc97, #loc98])
#loc819 = loc(fused[#loc99, #loc91])
#loc820 = loc(fused[#loc101, #loc102])
#loc821 = loc(fused[#loc105, #loc106])
#loc822 = loc(fused[#loc107, #loc102])
#loc823 = loc(fused[#loc113, #loc114])
#loc824 = loc(fused[#loc115, #loc116])
#loc825 = loc(fused[#loc117, #loc118])
#loc826 = loc(fused[#loc119, #loc116])
#loc827 = loc(fused[#loc125, #loc126])
#loc828 = loc(fused[#loc127, #loc128])
#loc829 = loc(fused[#loc129, #loc130])
#loc830 = loc(fused[#loc129, #loc131])
#loc831 = loc(fused[#loc127, #loc132])
#loc832 = loc(fused[#loc135, #loc136])
#loc833 = loc(fused[#loc137, #loc138])
#loc834 = loc(fused[#loc139, #loc140])
#loc835 = loc(fused[#loc142, #loc143])
#loc836 = loc(fused[#loc144, #loc138])
#loc837 = loc(fused[#loc150, #loc151])
#loc838 = loc(fused[#loc149, #loc151])
#loc839 = loc(fused[#loc148, #loc151])
#loc840 = loc(fused[#loc147, #loc146])
#loc841 = loc(fused[#loc156, #loc157])
#loc842 = loc(fused[#loc158, #loc159])
#loc843 = loc(fused[#loc161, #loc159])
#loc844 = loc(fused[#loc164, #loc162])
#loc845 = loc(fused[#loc168, #loc169])
#loc846 = loc(fused[#loc170, #loc171])
#loc847 = loc(fused[#loc173, #loc171])
#loc848 = loc(fused[#loc176, #loc174])
#loc849 = loc(fused[#loc178, #loc179])
#loc850 = loc(fused[#loc180, #loc181])
#loc851 = loc(fused[#loc182, #loc179])
#loc852 = loc(fused[#loc185, #loc186])
#loc853 = loc(fused[#loc187, #loc188])
#loc854 = loc(fused[#loc189, #loc186])
#loc855 = loc(fused[#loc196, #loc197])
#loc856 = loc(fused[#loc200, #loc201])
#loc857 = loc(fused[#loc202, #loc203])
#loc858 = loc(fused[#loc202, #loc204])
#loc859 = loc(fused[#loc202, #loc205])
#loc860 = loc(fused[#loc206, #loc207])
#loc861 = loc(fused[#loc208, #loc210])
#loc862 = loc(fused[#loc211, #loc207])
#loc863 = loc(fused[#loc213, #loc212])
#loc864 = loc(fused[#loc214, #loc215])
#loc865 = loc(fused[#loc217, #loc216])
#loc866 = loc(fused[#loc218, #loc219])
#loc867 = loc(fused[#loc221, #loc215])
#loc868 = loc(fused[#loc223, #loc222])
#loc869 = loc(fused[#loc225, #loc224])
#loc870 = loc(fused[#loc233, #loc234])
#loc871 = loc(fused[#loc235, #loc236])
#loc872 = loc(fused[#loc237, #loc238])
#loc873 = loc(fused[#loc239, #loc240])
#loc874 = loc(fused[#loc241, #loc242])
#loc875 = loc(fused[#loc243, #loc244])
#loc876 = loc(fused[#loc245, #loc246])
#loc877 = loc(fused[#loc247, #loc248])
#loc878 = loc(fused[#loc250, #loc249])
#loc879 = loc(fused[#loc251, #loc252])
#loc880 = loc(fused[#loc255, #loc256])
#loc881 = loc(fused[#loc257, #loc258])
#loc882 = loc(fused[#loc259, #loc260])
#loc883 = loc(fused[#loc261, #loc262])
#loc884 = loc(fused[#loc263, #loc264])
#loc885 = loc(fused[#loc265, #loc266])
#loc886 = loc(fused[#loc267, #loc268])
#loc887 = loc(fused[#loc271, #loc272])
#loc888 = loc(fused[#loc273, #loc274])
#loc889 = loc(fused[#loc279, #loc280])
#loc890 = loc(fused[#loc281, #loc282])
#loc891 = loc(fused[#loc283, #loc284])
#loc892 = loc(fused[#loc285, #loc282])
#loc893 = loc(fused[#loc287, #loc288])
#loc894 = loc(fused[#loc290, #loc291])
#loc895 = loc(fused[#loc292, #loc293])
#loc896 = loc(fused[#loc295, #loc294])
#loc897 = loc(fused[#loc297, #loc296])
#loc898 = loc(fused[#loc300, #loc301])
#loc899 = loc(fused[#loc302, #loc303])
#loc900 = loc(fused[#loc305, #loc306])
#loc901 = loc(fused[#loc307, #loc308])
#loc902 = loc(fused[#loc309, #loc310])
#loc903 = loc(fused[#loc311, #loc303])
#loc904 = loc(fused[#loc313, #loc314])
#loc905 = loc(fused[#loc317, #loc318])
#loc906 = loc(fused[#loc319, #loc314])
#loc907 = loc(fused[#loc325, #loc326])
#loc908 = loc(fused[#loc327, #loc328])
#loc909 = loc(fused[#loc329, #loc330])
#loc910 = loc(fused[#loc331, #loc328])
#loc911 = loc(fused[#loc337, #loc338])
#loc912 = loc(fused[#loc339, #loc340])
#loc913 = loc(fused[#loc341, #loc342])
#loc914 = loc(fused[#loc341, #loc343])
#loc915 = loc(fused[#loc339, #loc344])
#loc916 = loc(fused[#loc347, #loc348])
#loc917 = loc(fused[#loc349, #loc350])
#loc918 = loc(fused[#loc351, #loc352])
#loc919 = loc(fused[#loc354, #loc355])
#loc920 = loc(fused[#loc356, #loc350])
#loc921 = loc(fused[#loc362, #loc363])
#loc922 = loc(fused[#loc361, #loc363])
#loc923 = loc(fused[#loc360, #loc363])
#loc924 = loc(fused[#loc359, #loc358])
#loc925 = loc(fused[#loc368, #loc369])
#loc926 = loc(fused[#loc370, #loc371])
#loc927 = loc(fused[#loc373, #loc371])
#loc928 = loc(fused[#loc376, #loc374])
#loc929 = loc(fused[#loc380, #loc381])
#loc930 = loc(fused[#loc382, #loc383])
#loc931 = loc(fused[#loc385, #loc383])
#loc932 = loc(fused[#loc388, #loc386])
#loc933 = loc(fused[#loc390, #loc391])
#loc934 = loc(fused[#loc392, #loc393])
#loc935 = loc(fused[#loc394, #loc391])
#loc936 = loc(fused[#loc397, #loc398])
#loc937 = loc(fused[#loc399, #loc400])
#loc938 = loc(fused[#loc401, #loc398])
#loc939 = loc(fused[#loc409, #loc410])
#loc940 = loc(fused[#loc417, #loc418])
#loc941 = loc(fused[#loc419, #loc420])
#loc942 = loc(fused[#loc419, #loc421])
#loc943 = loc(fused[#loc419, #loc422])
#loc944 = loc(fused[#loc423, #loc424])
#loc945 = loc(fused[#loc425, #loc428])
#loc946 = loc(fused[#loc429, #loc424])
#loc947 = loc(fused[#loc430, #loc431])
#loc948 = loc(fused[#loc432, #loc433])
#loc949 = loc(fused[#loc434, #loc431])
#loc950 = loc(fused[#loc436, #loc435])
#loc951 = loc(fused[#loc437, #loc438])
#loc952 = loc(fused[#loc440, #loc439])
#loc953 = loc(fused[#loc441, #loc442])
#loc954 = loc(fused[#loc444, #loc438])
#loc955 = loc(fused[#loc446, #loc445])
#loc956 = loc(fused[#loc448, #loc447])
#loc957 = loc(fused[#loc452, #loc453])
#loc958 = loc(fused[#loc454, #loc455])
#loc959 = loc(fused[#loc456, #loc457])
#loc960 = loc(fused[#loc459, #loc458])
#loc961 = loc(fused[#loc460, #loc461])
#loc962 = loc(fused[#loc464, #loc465])
#loc963 = loc(fused[#loc466, #loc467])
#loc964 = loc(fused[#loc468, #loc469])
#loc965 = loc(fused[#loc470, #loc471])
#loc966 = loc(fused[#loc472, #loc473])
#loc967 = loc(fused[#loc474, #loc475])
#loc968 = loc(fused[#loc476, #loc477])
#loc969 = loc(fused[#loc480, #loc481])
#loc970 = loc(fused[#loc482, #loc483])
#loc971 = loc(fused[#loc488, #loc489])
#loc972 = loc(fused[#loc490, #loc491])
#loc973 = loc(fused[#loc492, #loc493])
#loc974 = loc(fused[#loc494, #loc491])
#loc975 = loc(fused[#loc496, #loc497])
#loc976 = loc(fused[#loc499, #loc500])
#loc977 = loc(fused[#loc501, #loc502])
#loc978 = loc(fused[#loc504, #loc503])
#loc979 = loc(fused[#loc506, #loc505])
#loc980 = loc(fused[#loc509, #loc510])
#loc981 = loc(fused[#loc511, #loc512])
#loc982 = loc(fused[#loc514, #loc515])
#loc983 = loc(fused[#loc516, #loc517])
#loc984 = loc(fused[#loc518, #loc519])
#loc985 = loc(fused[#loc520, #loc512])
#loc986 = loc(fused[#loc522, #loc523])
#loc987 = loc(fused[#loc526, #loc527])
#loc988 = loc(fused[#loc528, #loc523])
#loc989 = loc(fused[#loc534, #loc535])
#loc990 = loc(fused[#loc536, #loc537])
#loc991 = loc(fused[#loc538, #loc539])
#loc992 = loc(fused[#loc540, #loc537])
#loc993 = loc(fused[#loc546, #loc547])
#loc994 = loc(fused[#loc548, #loc549])
#loc995 = loc(fused[#loc550, #loc551])
#loc996 = loc(fused[#loc550, #loc552])
#loc997 = loc(fused[#loc548, #loc553])
#loc998 = loc(fused[#loc556, #loc557])
#loc999 = loc(fused[#loc558, #loc559])
#loc1000 = loc(fused[#loc560, #loc561])
#loc1001 = loc(fused[#loc563, #loc564])
#loc1002 = loc(fused[#loc565, #loc559])
#loc1003 = loc(fused[#loc571, #loc572])
#loc1004 = loc(fused[#loc570, #loc572])
#loc1005 = loc(fused[#loc569, #loc572])
#loc1006 = loc(fused[#loc568, #loc567])
#loc1007 = loc(fused[#loc577, #loc578])
#loc1008 = loc(fused[#loc579, #loc580])
#loc1009 = loc(fused[#loc582, #loc580])
#loc1010 = loc(fused[#loc585, #loc583])
#loc1011 = loc(fused[#loc589, #loc590])
#loc1012 = loc(fused[#loc591, #loc592])
#loc1013 = loc(fused[#loc594, #loc592])
#loc1014 = loc(fused[#loc597, #loc595])
#loc1015 = loc(fused[#loc599, #loc600])
#loc1016 = loc(fused[#loc601, #loc602])
#loc1017 = loc(fused[#loc603, #loc600])
#loc1018 = loc(fused[#loc606, #loc607])
#loc1019 = loc(fused[#loc608, #loc609])
#loc1020 = loc(fused[#loc610, #loc607])
#loc1021 = loc(fused[#loc618, #loc619])
#loc1022 = loc(fused[#loc622, #loc623])
#loc1023 = loc(fused[#loc624, #loc625])
#loc1024 = loc(fused[#loc624, #loc626])
#loc1025 = loc(fused[#loc624, #loc627])
#loc1026 = loc(fused[#loc628, #loc629])
#loc1027 = loc(fused[#loc630, #loc633])
#loc1028 = loc(fused[#loc634, #loc629])
#loc1029 = loc(fused[#loc635, #loc636])
#loc1030 = loc(fused[#loc637, #loc638])
#loc1031 = loc(fused[#loc639, #loc636])
#loc1032 = loc(fused[#loc641, #loc640])
#loc1033 = loc(fused[#loc642, #loc643])
#loc1034 = loc(fused[#loc645, #loc644])
#loc1035 = loc(fused[#loc646, #loc647])
#loc1036 = loc(fused[#loc649, #loc643])
#loc1037 = loc(fused[#loc651, #loc650])
#loc1038 = loc(fused[#loc653, #loc652])
#loc1039 = loc(fused[#loc661, #loc662])
#loc1040 = loc(fused[#loc664, #loc665])
#loc1041 = loc(fused[#loc666, #loc667])
#loc1042 = loc(fused[#loc668, #loc669])
#loc1043 = loc(fused[#loc671, #loc670])
#loc1044 = loc(fused[#loc672, #loc673])
#loc1045 = loc(fused[#loc683, #loc684])
#loc1046 = loc(fused[#loc687, #loc688])
#loc1047 = loc(fused[#loc689, #loc690])
#loc1048 = loc(fused[#loc689, #loc691])
#loc1049 = loc(fused[#loc689, #loc692])
#loc1050 = loc(fused[#loc693, #loc694])
#loc1051 = loc(fused[#loc695, #loc698])
#loc1052 = loc(fused[#loc699, #loc694])
#loc1053 = loc(fused[#loc701, #loc700])
#loc1054 = loc(fused[#loc702, #loc703])
#loc1055 = loc(fused[#loc705, #loc704])
#loc1056 = loc(fused[#loc706, #loc707])
#loc1057 = loc(fused[#loc709, #loc703])
#loc1058 = loc(fused[#loc711, #loc710])
#loc1059 = loc(fused[#loc713, #loc712])
#loc1060 = loc(fused[#loc721, #loc722])
#loc1061 = loc(fused[#loc723, #loc724])
#loc1062 = loc(fused[#loc725, #loc726])
#loc1063 = loc(fused[#loc728, #loc727])
#loc1064 = loc(fused[#loc729, #loc730])
#loc1065 = loc(fused[#loc741, #loc742])
#loc1066 = loc(fused[#loc745, #loc746])
#loc1067 = loc(fused[#loc747, #loc748])
#loc1068 = loc(fused[#loc747, #loc749])
#loc1069 = loc(fused[#loc747, #loc750])
#loc1070 = loc(fused[#loc751, #loc752])
#loc1071 = loc(fused[#loc753, #loc756])
#loc1072 = loc(fused[#loc757, #loc752])
#loc1073 = loc(fused[#loc759, #loc758])
#loc1074 = loc(fused[#loc760, #loc761])
#loc1075 = loc(fused[#loc763, #loc762])
#loc1076 = loc(fused[#loc764, #loc765])
#loc1077 = loc(fused[#loc767, #loc761])
#loc1078 = loc(fused[#loc769, #loc768])
#loc1079 = loc(fused[#loc771, #loc770])
