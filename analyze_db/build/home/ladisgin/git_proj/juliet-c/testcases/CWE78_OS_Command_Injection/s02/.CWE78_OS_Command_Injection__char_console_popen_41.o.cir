!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc12 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":39:64)
#loc13 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":39:71)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":69:33)
#loc99 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":89:68)
#loc100 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":89:75)
#true = #cir.bool<true> : !cir.bool
#loc140 = loc(fused[#loc12, #loc13])
#loc174 = loc(fused[#loc99, #loc100])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc135)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_console_popen_41_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc136)
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc137)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc7)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc138)
  cir.func @CWE78_OS_Command_Injection__char_console_popen_41_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc12, #loc13])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc141)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc140)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc16)
    cir.br ^bb1 loc(#loc142)
  ^bb1:  // pred: ^bb0
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc7)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc7)
    %5 = cir.call @popen(%2, %4) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc20)
    cir.store %5, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc143)
    cir.br ^bb2 loc(#loc144)
  ^bb2:  // pred: ^bb1
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc25)
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc26)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc26)
    %9 = cir.cmp(ne, %6, %8) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc145)
    cir.brcond %9 ^bb3, ^bb4 loc(#loc146)
  ^bb3:  // pred: ^bb2
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
    %11 = cir.call @pclose(%10) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc29)
    cir.br ^bb4 loc(#loc24)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc24)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc18)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc11)
  } loc(#loc139)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc147)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc148)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc149)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc38)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_popen_41_bad() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc152)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc153)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc136)
    %3 = cir.get_global @__const.CWE78_OS_Command_Injection__char_console_popen_41_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc136)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc136)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc45)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc154)
    cir.br ^bb1 loc(#loc155)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc49)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
    %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc49)
    cir.store %7, %0 : !u64i, !cir.ptr<!u64i> loc(#loc152)
    cir.br ^bb2 loc(#loc156)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<100> : !s32i loc(#loc53)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc53)
    %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc54)
    %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc157)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc55)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc55)
    %14 = cir.cmp(gt, %11, %13) : !u64i, !cir.bool loc(#loc158)
    cir.brcond %14 ^bb3, ^bb21 loc(#loc159)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc160)
  ^bb4:  // pred: ^bb3
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
    %16 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc60)
    %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc61)
    %18 = cir.const #cir.int<100> : !s32i loc(#loc62)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc62)
    %20 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc63)
    %21 = cir.binop(sub, %19, %20) : !u64i loc(#loc161)
    %22 = cir.cast(integral, %21 : !u64i), !s32i loc(#loc161)
    %23 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc149)
    %24 = cir.load %23 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc64)
    %25 = cir.call @fgets(%17, %22, %24) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc65)
    %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc66)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc66)
    %28 = cir.cmp(ne, %25, %27) : !cir.ptr<!s8i>, !cir.bool loc(#loc162)
    cir.brcond %28 ^bb5, ^bb18 loc(#loc163)
  ^bb5:  // pred: ^bb4
    %29 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc70)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
    %31 = cir.call @strlen(%30) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc70)
    cir.store %31, %0 : !u64i, !cir.ptr<!u64i> loc(#loc164)
    cir.br ^bb6 loc(#loc165)
  ^bb6:  // pred: ^bb5
    %32 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc76)
    %33 = cir.const #cir.int<0> : !s32i loc(#loc77)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc77)
    %35 = cir.cmp(gt, %32, %34) : !u64i, !cir.bool loc(#loc166)
    cir.brcond %35 ^bb7, ^bb12 loc(#loc78)
  ^bb7:  // pred: ^bb6
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
    %37 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc80)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc81)
    %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc81)
    %40 = cir.binop(sub, %37, %39) : !u64i loc(#loc167)
    %41 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc82)
    %42 = cir.load %41 : !cir.ptr<!s8i>, !s8i loc(#loc79)
    %43 = cir.cast(integral, %42 : !s8i), !s32i loc(#loc79)
    %44 = cir.const #cir.int<10> : !s32i loc(#loc83)
    %45 = cir.cmp(eq, %43, %44) : !s32i, !cir.bool loc(#loc168)
    cir.brcond %45 ^bb8, ^bb9 loc(#loc78)
  ^bb8:  // pred: ^bb7
    %46 = cir.const #true loc(#loc78)
    cir.br ^bb10(%46 : !cir.bool) loc(#loc78)
  ^bb9:  // pred: ^bb7
    %47 = cir.const #false loc(#loc78)
    cir.br ^bb10(%47 : !cir.bool) loc(#loc78)
  ^bb10(%48: !cir.bool loc("CWE78_OS_Command_Injection__char_console_popen_41.c":69:33)):  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc78)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13(%48 : !cir.bool) loc(#loc78)
  ^bb12:  // pred: ^bb6
    %49 = cir.const #false loc(#loc78)
    cir.br ^bb13(%49 : !cir.bool) loc(#loc78)
  ^bb13(%50: !cir.bool loc("CWE78_OS_Command_Injection__char_console_popen_41.c":69:33)):  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc78)
  ^bb14:  // pred: ^bb13
    cir.brcond %50 ^bb15, ^bb16 loc(#loc169)
  ^bb15:  // pred: ^bb14
    %51 = cir.const #cir.int<0> : !s32i loc(#loc85)
    %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc85)
    %53 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
    %54 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc87)
    %55 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc88)
    %57 = cir.binop(sub, %54, %56) : !u64i loc(#loc170)
    %58 = cir.ptr_stride(%53 : !cir.ptr<!s8i>, %57 : !u64i), !cir.ptr<!s8i> loc(#loc89)
    cir.store %52, %58 : !s8i, !cir.ptr<!s8i> loc(#loc171)
    cir.br ^bb16 loc(#loc75)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc75)
  ^bb17:  // pred: ^bb16
    cir.br ^bb19 loc(#loc68)
  ^bb18:  // pred: ^bb4
    %59 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc38)
    %60 = cir.cast(array_to_ptrdecay, %59 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%60) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %61 = cir.const #cir.int<0> : !s32i loc(#loc91)
    %62 = cir.cast(integral, %61 : !s32i), !s8i loc(#loc91)
    %63 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
    %64 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc93)
    %65 = cir.ptr_stride(%63 : !cir.ptr<!s8i>, %64 : !u64i), !cir.ptr<!s8i> loc(#loc94)
    cir.store %62, %65 : !s8i, !cir.ptr<!s8i> loc(#loc172)
    cir.br ^bb19 loc(#loc58)
  ^bb19:  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc58)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc52)
  ^bb21:  // 2 preds: ^bb2, ^bb20
    cir.br ^bb22 loc(#loc52)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc48)
  ^bb23:  // pred: ^bb22
    %66 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
    cir.call @CWE78_OS_Command_Injection__char_console_popen_41_badSink(%66) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    cir.return loc(#loc40)
  } loc(#loc151)
  cir.func @CWE78_OS_Command_Injection__char_console_popen_41_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc99, #loc100])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc175)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc174)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc103)
    cir.br ^bb1 loc(#loc176)
  ^bb1:  // pred: ^bb0
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc107)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc107)
    %5 = cir.call @popen(%2, %4) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc108)
    cir.store %5, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc177)
    cir.br ^bb2 loc(#loc178)
  ^bb2:  // pred: ^bb1
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc113)
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc114)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc114)
    %9 = cir.cmp(ne, %6, %8) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc179)
    cir.brcond %9 ^bb3, ^bb4 loc(#loc180)
  ^bb3:  // pred: ^bb2
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc116)
    %11 = cir.call @pclose(%10) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc117)
    cir.br ^bb4 loc(#loc112)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc112)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc105)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc98)
  } loc(#loc173)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_popen_41_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc182)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc120)
    cir.return loc(#loc119)
  } loc(#loc181)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc183)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc124)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc185)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc135)
    %2 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc135)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc135)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc129)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc186)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc131)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc124)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc124)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc131)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
    cir.call @CWE78_OS_Command_Injection__char_console_popen_41_goodG2BSink(%9) : (!cir.ptr<!s8i>) -> () loc(#loc134)
    cir.return loc(#loc126)
  } loc(#loc184)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_popen_41.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":106:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":106:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":55:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":55:26)
#loc5 = loc("/usr/include/stdio.h":893:1)
#loc6 = loc("/usr/include/stdio.h":894:3)
#loc7 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":44:28)
#loc8 = loc("/usr/include/stdio.h":887:1)
#loc9 = loc("/usr/include/stdio.h":887:36)
#loc10 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":39:1)
#loc11 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":50:1)
#loc14 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":42:9)
#loc15 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":42:15)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":40:1)
#loc17 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":41:5)
#loc18 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":49:5)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":44:22)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":44:16)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":44:9)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":44:31)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":45:9)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":48:9)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":45:13)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":45:21)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":46:9)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":47:20)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":47:13)
#loc30 = loc("/usr/include/string.h":407:1)
#loc31 = loc("/usr/include/string.h":408:33)
#loc32 = loc("/usr/include/stdio.h":654:1)
#loc33 = loc("/usr/include/stdio.h":655:59)
#loc34 = loc("/usr/include/stdio.h":149:1)
#loc35 = loc("/usr/include/stdio.h":149:14)
#loc36 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc37 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":76:27)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":52:1)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":83:1)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":59:9)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":59:37)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":54:5)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":54:12)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":56:12)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":56:5)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":57:5)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":81:5)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":59:26)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":59:33)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":61:9)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":80:9)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":61:13)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":61:17)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":61:27)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":62:9)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":64:13)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":79:13)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":64:23)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":64:28)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":64:27)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":64:43)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":64:47)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":64:57)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":64:17)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":64:67)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":65:13)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":73:13)
#loc69 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":75:13)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":68:27)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":68:34)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":68:17)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":68:38)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":69:17)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":72:17)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":69:21)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":69:31)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":69:36)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":69:41)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":69:49)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":69:50)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":69:55)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":70:17)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":71:39)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":71:21)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":71:26)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":71:34)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":71:35)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":76:17)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":78:33)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":78:17)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":78:22)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":78:29)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":82:63)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":82:5)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":89:1)
#loc98 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":100:1)
#loc101 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":92:9)
#loc102 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":92:15)
#loc103 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":90:1)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":91:5)
#loc105 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":99:5)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":94:22)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":94:28)
#loc108 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":94:16)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":94:9)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":94:31)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":95:9)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":98:9)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":95:13)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":95:21)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":96:9)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":97:20)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":97:13)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":113:1)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":116:1)
#loc120 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":115:5)
#loc121 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":115:13)
#loc122 = loc("/usr/include/string.h":149:1)
#loc123 = loc("/usr/include/string.h":150:14)
#loc124 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":109:18)
#loc125 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":103:1)
#loc126 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":111:1)
#loc127 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":105:5)
#loc128 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":105:12)
#loc129 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":107:12)
#loc130 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":107:5)
#loc131 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":109:5)
#loc132 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":109:12)
#loc133 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":110:67)
#loc134 = loc("CWE78_OS_Command_Injection__char_console_popen_41.c":110:5)
#loc135 = loc(fused[#loc1, #loc2])
#loc136 = loc(fused[#loc3, #loc4])
#loc137 = loc(fused[#loc5, #loc6])
#loc138 = loc(fused[#loc8, #loc9])
#loc139 = loc(fused[#loc10, #loc11])
#loc141 = loc(fused[#loc14, #loc15])
#loc142 = loc(fused[#loc17, #loc18])
#loc143 = loc(fused[#loc21, #loc22])
#loc144 = loc(fused[#loc23, #loc24])
#loc145 = loc(fused[#loc25, #loc26])
#loc146 = loc(fused[#loc27, #loc24])
#loc147 = loc(fused[#loc30, #loc31])
#loc148 = loc(fused[#loc32, #loc33])
#loc149 = loc(fused[#loc34, #loc35])
#loc150 = loc(fused[#loc36, #loc37])
#loc151 = loc(fused[#loc39, #loc40])
#loc152 = loc(fused[#loc41, #loc42])
#loc153 = loc(fused[#loc43, #loc44])
#loc154 = loc(fused[#loc46, #loc45])
#loc155 = loc(fused[#loc47, #loc48])
#loc156 = loc(fused[#loc51, #loc52])
#loc157 = loc(fused[#loc53, #loc54])
#loc158 = loc(fused[#loc53, #loc55])
#loc159 = loc(fused[#loc56, #loc52])
#loc160 = loc(fused[#loc57, #loc58])
#loc161 = loc(fused[#loc62, #loc63])
#loc162 = loc(fused[#loc65, #loc66])
#loc163 = loc(fused[#loc67, #loc68, #loc69, #loc58])
#loc164 = loc(fused[#loc72, #loc73])
#loc165 = loc(fused[#loc74, #loc75])
#loc166 = loc(fused[#loc76, #loc77])
#loc167 = loc(fused[#loc80, #loc81])
#loc168 = loc(fused[#loc79, #loc83])
#loc169 = loc(fused[#loc84, #loc75])
#loc170 = loc(fused[#loc87, #loc88])
#loc171 = loc(fused[#loc86, #loc85])
#loc172 = loc(fused[#loc92, #loc91])
#loc173 = loc(fused[#loc97, #loc98])
#loc175 = loc(fused[#loc101, #loc102])
#loc176 = loc(fused[#loc104, #loc105])
#loc177 = loc(fused[#loc109, #loc110])
#loc178 = loc(fused[#loc111, #loc112])
#loc179 = loc(fused[#loc113, #loc114])
#loc180 = loc(fused[#loc115, #loc112])
#loc181 = loc(fused[#loc118, #loc119])
#loc182 = loc(fused[#loc120, #loc121])
#loc183 = loc(fused[#loc122, #loc123])
#loc184 = loc(fused[#loc125, #loc126])
#loc185 = loc(fused[#loc127, #loc128])
#loc186 = loc(fused[#loc130, #loc129])
