!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE475_Undefined_Behavior_for_Input_to_API/CWE475_Undefined_Behavior_for_Input_to_API__char_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc99)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"abcdefghijklmnopqrstuvwxyz\00" : !cir.array<!s8i x 27>> : !cir.array<!s8i x 27> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc100)
  cir.func no_proto @CWE475_Undefined_Behavior_for_Input_to_API__char_04_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc10)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc10)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc105)
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc106)
          %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc105)
          cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc105)
          %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc17)
          cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc106)
          %6 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc18)
          %7 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
          %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 27>> loc(#loc3)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 27>>), !cir.ptr<!s8i> loc(#loc3)
          %10 = cir.call @strcpy(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc18)
          %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
          %12 = cir.const #cir.int<6> : !s32i loc(#loc21)
          %13 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc22)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc107)
          %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
          %16 = cir.const #cir.int<4> : !s32i loc(#loc24)
          %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc25)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc108)
          %19 = cir.const #cir.int<10> : !s32i loc(#loc26)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc26)
          %21 = cir.const #cir.int<1> : !u64i loc(#loc109)
          %22 = cir.binop(mul, %20, %21) : !u64i loc(#loc110)
          cir.libc.memcpy %22 bytes from %18 to %14 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc111)
          %23 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
          cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc32)
        } loc(#loc104)
      } loc(#loc103)
    } loc(#loc102)
    cir.return loc(#loc7)
  } loc(#loc101)
  cir.func no_proto @CWE475_Undefined_Behavior_for_Input_to_API__char_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc113)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc35)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc114)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc37)
    cir.return loc(#loc34)
  } loc(#loc112)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc39)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<0> : !s32i loc(#loc44)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc44)
      cir.if %1 {
        %2 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc39)
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc39)
        cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc48)
      } else {
        cir.scope {
          %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc119)
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc120)
          %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc119)
          cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc119)
          %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
          cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
          %6 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc55)
          %7 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
          %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 27>> loc(#loc57)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 27>>), !cir.ptr<!s8i> loc(#loc57)
          %10 = cir.call @strcpy(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc55)
          %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
          %12 = cir.const #cir.int<6> : !s32i loc(#loc59)
          %13 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc60)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc121)
          %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
          %16 = cir.const #cir.int<4> : !s32i loc(#loc62)
          %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc63)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc122)
          %19 = cir.const #cir.int<10> : !s32i loc(#loc64)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc64)
          %21 = cir.const #cir.int<1> : !u64i loc(#loc123)
          %22 = cir.binop(mul, %20, %21) : !u64i loc(#loc124)
          cir.libc.memmove %22 bytes from %18 to %14 : !cir.ptr<!void>, !u64i loc(#loc125)
          %23 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
          cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc70)
        } loc(#loc118)
      } loc(#loc117)
    } loc(#loc116)
    cir.return loc(#loc41)
  } loc(#loc115)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc75)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc75)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc130)
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc131)
          %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc130)
          cir.store %4, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc130)
          %5 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc82)
          cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
          %6 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc83)
          %7 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
          %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 27>> loc(#loc85)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 27>>), !cir.ptr<!s8i> loc(#loc85)
          %10 = cir.call @strcpy(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc83)
          %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
          %12 = cir.const #cir.int<6> : !s32i loc(#loc87)
          %13 = cir.ptr_stride(%11 : !cir.ptr<!s8i>, %12 : !s32i), !cir.ptr<!s8i> loc(#loc88)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc132)
          %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
          %16 = cir.const #cir.int<4> : !s32i loc(#loc90)
          %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc91)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc133)
          %19 = cir.const #cir.int<10> : !s32i loc(#loc92)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc92)
          %21 = cir.const #cir.int<1> : !u64i loc(#loc134)
          %22 = cir.binop(mul, %20, %21) : !u64i loc(#loc135)
          cir.libc.memmove %22 bytes from %18 to %14 : !cir.ptr<!void>, !u64i loc(#loc136)
          %23 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
          cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc98)
        } loc(#loc129)
      } loc(#loc128)
    } loc(#loc127)
    cir.return loc(#loc72)
  } loc(#loc126)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE475_Undefined_Behavior_for_Input_to_API/CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":0:0)
#loc1 = loc("/usr/include/string.h":141:1)
#loc2 = loc("/usr/include/string.h":142:14)
#loc3 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":35:26)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":28:1)
#loc7 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":41:1)
#loc8 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":30:5)
#loc9 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":40:5)
#loc10 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":30:8)
#loc11 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":31:5)
#loc12 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":32:9)
#loc13 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":39:9)
#loc14 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":33:13)
#loc15 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":33:36)
#loc16 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":34:13)
#loc17 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":34:27)
#loc18 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":35:13)
#loc19 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":35:20)
#loc20 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":37:20)
#loc21 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":37:27)
#loc22 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":37:25)
#loc23 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":37:30)
#loc24 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":37:37)
#loc25 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":37:35)
#loc26 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":37:40)
#loc27 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":37:43)
#loc28 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":37:54)
#loc29 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":37:13)
#loc30 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":37:55)
#loc31 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":38:23)
#loc32 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":38:13)
#loc33 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":84:1)
#loc34 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":88:1)
#loc35 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":86:5)
#loc36 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":86:11)
#loc37 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":87:5)
#loc38 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":87:11)
#loc39 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":53:19)
#loc40 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":48:1)
#loc41 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":66:1)
#loc42 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":50:5)
#loc43 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":65:5)
#loc44 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":50:8)
#loc45 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":51:5)
#loc46 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":54:5)
#loc47 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":56:5)
#loc48 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":53:9)
#loc49 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":57:9)
#loc50 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":64:9)
#loc51 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":58:13)
#loc52 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":58:36)
#loc53 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":59:13)
#loc54 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":59:27)
#loc55 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":60:13)
#loc56 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":60:20)
#loc57 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":60:26)
#loc58 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":62:21)
#loc59 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":62:28)
#loc60 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":62:26)
#loc61 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":62:31)
#loc62 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":62:38)
#loc63 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":62:36)
#loc64 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":62:41)
#loc65 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":62:44)
#loc66 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":62:55)
#loc67 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":62:13)
#loc68 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":62:56)
#loc69 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":63:23)
#loc70 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":63:13)
#loc71 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":69:1)
#loc72 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":82:1)
#loc73 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":71:5)
#loc74 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":81:5)
#loc75 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":71:8)
#loc76 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":72:5)
#loc77 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":73:9)
#loc78 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":80:9)
#loc79 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":74:13)
#loc80 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":74:36)
#loc81 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":75:13)
#loc82 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":75:27)
#loc83 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":76:13)
#loc84 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":76:20)
#loc85 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":76:26)
#loc86 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":78:21)
#loc87 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":78:28)
#loc88 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":78:26)
#loc89 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":78:31)
#loc90 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":78:38)
#loc91 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":78:36)
#loc92 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":78:41)
#loc93 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":78:44)
#loc94 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":78:55)
#loc95 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":78:13)
#loc96 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":78:56)
#loc97 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":79:23)
#loc98 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_04.c":79:13)
#loc99 = loc(fused[#loc1, #loc2])
#loc100 = loc(fused[#loc4, #loc5])
#loc101 = loc(fused[#loc6, #loc7])
#loc102 = loc(fused[#loc8, #loc9])
#loc103 = loc(fused[#loc11, #loc9])
#loc104 = loc(fused[#loc12, #loc13])
#loc105 = loc(fused[#loc14, #loc15])
#loc106 = loc(fused[#loc16, #loc17])
#loc107 = loc(fused[#loc20, #loc21])
#loc108 = loc(fused[#loc23, #loc24])
#loc109 = loc(fused[#loc27, #loc28])
#loc110 = loc(fused[#loc26, #loc28])
#loc111 = loc(fused[#loc29, #loc30])
#loc112 = loc(fused[#loc33, #loc34])
#loc113 = loc(fused[#loc35, #loc36])
#loc114 = loc(fused[#loc37, #loc38])
#loc115 = loc(fused[#loc40, #loc41])
#loc116 = loc(fused[#loc42, #loc43])
#loc117 = loc(fused[#loc45, #loc46, #loc47, #loc43])
#loc118 = loc(fused[#loc49, #loc50])
#loc119 = loc(fused[#loc51, #loc52])
#loc120 = loc(fused[#loc53, #loc54])
#loc121 = loc(fused[#loc58, #loc59])
#loc122 = loc(fused[#loc61, #loc62])
#loc123 = loc(fused[#loc65, #loc66])
#loc124 = loc(fused[#loc64, #loc66])
#loc125 = loc(fused[#loc67, #loc68])
#loc126 = loc(fused[#loc71, #loc72])
#loc127 = loc(fused[#loc73, #loc74])
#loc128 = loc(fused[#loc76, #loc74])
#loc129 = loc(fused[#loc77, #loc78])
#loc130 = loc(fused[#loc79, #loc80])
#loc131 = loc(fused[#loc81, #loc82])
#loc132 = loc(fused[#loc86, #loc87])
#loc133 = loc(fused[#loc89, #loc90])
#loc134 = loc(fused[#loc93, #loc94])
#loc135 = loc(fused[#loc92, #loc94])
#loc136 = loc(fused[#loc95, #loc96])
