!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc214 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":221:10)
#loc215 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":221:14)
#loc216 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":221:20)
#loc217 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":221:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc362 = loc(fused[#loc214, #loc215])
#loc363 = loc(fused[#loc216, #loc217])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_execl_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B2.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc278)
  cir.global "private" constant cir_private @__const.goodG2B1.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc279)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_listen_socket_execl_05_bad.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc280)
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc281)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc282)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc283)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc284)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc285)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc286)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc287)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc288)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc289)
  cir.func private @close(!s32i) -> !s32i loc(#loc290)
  cir.func private @execl(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc291)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"/bin/sh\00" : !cir.array<!s8i x 8>> : !cir.array<!s8i x 8> {alignment = 1 : i64} loc(#loc29)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc30)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_execl_05_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc293)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc280)
    %2 = cir.get_global @__const.CWE78_OS_Command_Injection__char_listen_socket_execl_05_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc280)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc280)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc35)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc294)
    cir.scope {
      %13 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc281)
      %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc39)
      %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc39)
      cir.if %15 {
        cir.scope {
          %16 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc298)
          %17 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc299)
          %18 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc300)
          %19 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc301)
          %20 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc302)
          %21 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc303)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc50)
          %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc50)
          cir.store %23, %19 : !s32i, !cir.ptr<!s32i> loc(#loc301)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc52)
          %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc52)
          cir.store %25, %20 : !s32i, !cir.ptr<!s32i> loc(#loc302)
          %26 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc55)
          %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
          %28 = cir.call @strlen(%27) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc55)
          cir.store %28, %21 : !u64i, !cir.ptr<!u64i> loc(#loc303)
          cir.scope {
            cir.do {
              %29 = cir.const #cir.int<2> : !s32i loc(#loc59)
              %30 = cir.const #cir.int<1> : !s32i loc(#loc60)
              %31 = cir.const #cir.int<6> : !s32i loc(#loc61)
              %32 = cir.call @socket(%29, %30, %31) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc62)
              cir.store %32, %19 : !s32i, !cir.ptr<!s32i> loc(#loc305)
              cir.scope {
                %86 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc67)
                %87 = cir.const #cir.int<1> : !s32i loc(#loc68)
                %88 = cir.unary(minus, %87) : !s32i, !s32i loc(#loc68)
                %89 = cir.cmp(eq, %86, %88) : !s32i, !cir.bool loc(#loc307)
                cir.if %89 {
                  cir.break loc(#loc70)
                } loc(#loc308)
              } loc(#loc306)
              %33 = cir.cast(bitcast, %17 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc309)
              %34 = cir.const #cir.int<0> : !s32i loc(#loc73)
              %35 = cir.const #cir.int<16> : !u64i loc(#loc310)
              cir.libc.memset %35 bytes from %33 set to %34 : !cir.ptr<!void>, !s32i, !u64i loc(#loc311)
              %36 = cir.const #cir.int<2> : !s32i loc(#loc78)
              %37 = cir.cast(integral, %36 : !s32i), !u16i loc(#loc78)
              %38 = cir.get_member %17[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc79)
              cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc312)
              %39 = cir.const #cir.int<0> : !s32i loc(#loc81)
              %40 = cir.cast(integral, %39 : !s32i), !u32i loc(#loc81)
              %41 = cir.get_member %17[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc82)
              %42 = cir.get_member %41[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc83)
              cir.store %40, %42 : !u32i, !cir.ptr<!u32i> loc(#loc313)
              %43 = cir.const #cir.int<27015> : !s32i loc(#loc85)
              %44 = cir.cast(integral, %43 : !s32i), !u16i loc(#loc85)
              %45 = cir.call @htons(%44) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc86)
              %46 = cir.get_member %17[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc87)
              cir.store %45, %46 : !u16i, !cir.ptr<!u16i> loc(#loc314)
              cir.scope {
                %86 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc92)
                %87 = cir.cast(bitcast, %17 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc316)
                %88 = cir.const #cir.int<16> : !u64i loc(#loc317)
                %89 = cir.cast(integral, %88 : !u64i), !u32i loc(#loc317)
                %90 = cir.call @bind(%86, %87, %89) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc97)
                %91 = cir.const #cir.int<1> : !s32i loc(#loc98)
                %92 = cir.unary(minus, %91) : !s32i, !s32i loc(#loc98)
                %93 = cir.cmp(eq, %90, %92) : !s32i, !cir.bool loc(#loc318)
                cir.if %93 {
                  cir.break loc(#loc100)
                } loc(#loc319)
              } loc(#loc315)
              cir.scope {
                %86 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc103)
                %87 = cir.const #cir.int<5> : !s32i loc(#loc104)
                %88 = cir.call @listen(%86, %87) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc105)
                %89 = cir.const #cir.int<1> : !s32i loc(#loc106)
                %90 = cir.unary(minus, %89) : !s32i, !s32i loc(#loc106)
                %91 = cir.cmp(eq, %88, %90) : !s32i, !cir.bool loc(#loc321)
                cir.if %91 {
                  cir.break loc(#loc108)
                } loc(#loc322)
              } loc(#loc320)
              %47 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc109)
              %48 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc110)
              %49 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc111)
              %50 = cir.call @accept(%47, %48, %49) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc112)
              cir.store %50, %20 : !s32i, !cir.ptr<!s32i> loc(#loc323)
              cir.scope {
                %86 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc117)
                %87 = cir.const #cir.int<1> : !s32i loc(#loc118)
                %88 = cir.unary(minus, %87) : !s32i, !s32i loc(#loc118)
                %89 = cir.cmp(eq, %86, %88) : !s32i, !cir.bool loc(#loc325)
                cir.if %89 {
                  cir.break loc(#loc120)
                } loc(#loc326)
              } loc(#loc324)
              %51 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc121)
              %52 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
              %53 = cir.load %21 : !cir.ptr<!u64i>, !u64i loc(#loc123)
              %54 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %53 : !u64i), !cir.ptr<!s8i> loc(#loc124)
              %55 = cir.cast(bitcast, %54 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc327)
              %56 = cir.const #cir.int<1> : !u64i loc(#loc328)
              %57 = cir.const #cir.int<100> : !s32i loc(#loc129)
              %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc129)
              %59 = cir.load %21 : !cir.ptr<!u64i>, !u64i loc(#loc130)
              %60 = cir.binop(sub, %58, %59) : !u64i loc(#loc329)
              %61 = cir.const #cir.int<1> : !s32i loc(#loc131)
              %62 = cir.cast(integral, %61 : !s32i), !u64i loc(#loc131)
              %63 = cir.binop(sub, %60, %62) : !u64i loc(#loc330)
              %64 = cir.binop(mul, %56, %63) : !u64i loc(#loc331)
              %65 = cir.const #cir.int<0> : !s32i loc(#loc133)
              %66 = cir.call @recv(%51, %55, %64, %65) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc134)
              %67 = cir.cast(integral, %66 : !s64i), !s32i loc(#loc134)
              cir.store %67, %16 : !s32i, !cir.ptr<!s32i> loc(#loc332)
              cir.scope {
                %86 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc139)
                %87 = cir.const #cir.int<1> : !s32i loc(#loc140)
                %88 = cir.unary(minus, %87) : !s32i, !s32i loc(#loc140)
                %89 = cir.cmp(eq, %86, %88) : !s32i, !cir.bool loc(#loc334)
                %90 = cir.ternary(%89, true {
                  %91 = cir.const #true loc(#loc141)
                  cir.yield %91 : !cir.bool loc(#loc141)
                }, false {
                  %91 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc142)
                  %92 = cir.const #cir.int<0> : !s32i loc(#loc143)
                  %93 = cir.cmp(eq, %91, %92) : !s32i, !cir.bool loc(#loc335)
                  %94 = cir.ternary(%93, true {
                    %95 = cir.const #true loc(#loc141)
                    cir.yield %95 : !cir.bool loc(#loc141)
                  }, false {
                    %95 = cir.const #false loc(#loc141)
                    cir.yield %95 : !cir.bool loc(#loc141)
                  }) : (!cir.bool) -> !cir.bool loc(#loc141)
                  cir.yield %94 : !cir.bool loc(#loc141)
                }) : (!cir.bool) -> !cir.bool loc(#loc141)
                cir.if %90 {
                  cir.break loc(#loc145)
                } loc(#loc336)
              } loc(#loc333)
              %68 = cir.const #cir.int<0> : !s32i loc(#loc146)
              %69 = cir.cast(integral, %68 : !s32i), !s8i loc(#loc146)
              %70 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
              %71 = cir.load %21 : !cir.ptr<!u64i>, !u64i loc(#loc148)
              %72 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc149)
              %73 = cir.cast(integral, %72 : !s32i), !u64i loc(#loc149)
              %74 = cir.const #cir.int<1> : !u64i loc(#loc337)
              %75 = cir.binop(div, %73, %74) : !u64i loc(#loc338)
              %76 = cir.binop(add, %71, %75) : !u64i loc(#loc339)
              %77 = cir.ptr_stride(%70 : !cir.ptr<!s8i>, %76 : !u64i), !cir.ptr<!s8i> loc(#loc152)
              cir.store %69, %77 : !s8i, !cir.ptr<!s8i> loc(#loc340)
              %78 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc153)
              %79 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
              %80 = cir.const #cir.int<13> : !s32i loc(#loc155)
              %81 = cir.call @strchr(%79, %80) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc153)
              cir.store %81, %18 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc341)
              cir.scope {
                %86 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
                %87 = cir.cast(ptr_to_bool, %86 : !cir.ptr<!s8i>), !cir.bool loc(#loc160)
                cir.if %87 {
                  %88 = cir.const #cir.int<0> : !s32i loc(#loc162)
                  %89 = cir.cast(integral, %88 : !s32i), !s8i loc(#loc162)
                  %90 = cir.load deref %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
                  cir.store %89, %90 : !s8i, !cir.ptr<!s8i> loc(#loc344)
                } loc(#loc343)
              } loc(#loc342)
              %82 = cir.get_global @strchr : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !s32i)>> loc(#loc165)
              %83 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
              %84 = cir.const #cir.int<10> : !s32i loc(#loc167)
              %85 = cir.call @strchr(%83, %84) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc165)
              cir.store %85, %18 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc345)
              cir.scope {
                %86 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
                %87 = cir.cast(ptr_to_bool, %86 : !cir.ptr<!s8i>), !cir.bool loc(#loc172)
                cir.if %87 {
                  %88 = cir.const #cir.int<0> : !s32i loc(#loc174)
                  %89 = cir.cast(integral, %88 : !s32i), !s8i loc(#loc174)
                  %90 = cir.load deref %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc175)
                  cir.store %89, %90 : !s8i, !cir.ptr<!s8i> loc(#loc348)
                } loc(#loc347)
              } loc(#loc346)
              cir.yield loc(#loc58)
            } while {
              %29 = cir.const #cir.int<0> : !s32i loc(#loc177)
              %30 = cir.cast(int_to_bool, %29 : !s32i), !cir.bool loc(#loc177)
              cir.condition(%30) loc(#loc177)
            } loc(#loc304)
          } loc(#loc304)
          cir.scope {
            %29 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc180)
            %30 = cir.const #cir.int<1> : !s32i loc(#loc181)
            %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc181)
            %32 = cir.cmp(ne, %29, %31) : !s32i, !cir.bool loc(#loc350)
            cir.if %32 {
              %33 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc183)
              %34 = cir.call @close(%33) : (!s32i) -> !s32i loc(#loc184)
            } loc(#loc351)
          } loc(#loc349)
          cir.scope {
            %29 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc187)
            %30 = cir.const #cir.int<1> : !s32i loc(#loc188)
            %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc188)
            %32 = cir.cmp(ne, %29, %31) : !s32i, !cir.bool loc(#loc353)
            cir.if %32 {
              %33 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc190)
              %34 = cir.call @close(%33) : (!s32i) -> !s32i loc(#loc191)
            } loc(#loc354)
          } loc(#loc352)
        } loc(#loc297)
      } loc(#loc296)
    } loc(#loc295)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc29)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc29)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc192)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc192)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc30)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc30)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc193)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc194)
    %12 = cir.call @execl(%5, %7, %9, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc195)
    cir.return loc(#loc32)
  } loc(#loc292)
  cir.func no_proto @CWE78_OS_Command_Injection__char_listen_socket_execl_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc356)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc198)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc357)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc200)
    cir.return loc(#loc197)
  } loc(#loc355)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc358)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc359)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc360)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc208)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc209)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc210)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc211)
  cir.func @main(%arg0: !s32i loc(fused[#loc214, #loc215]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc216, #loc217])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc362)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc363)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc213)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc218)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc218)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc219)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc220)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc220)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc221)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc208)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc208)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc222)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_listen_socket_execl_05_good : !cir.ptr<!cir.func<!void ()>> loc(#loc364)
    cir.call @CWE78_OS_Command_Injection__char_listen_socket_execl_05_good() : () -> () loc(#loc223)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc209)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc209)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc225)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc210)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc210)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc226)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_listen_socket_execl_05_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc365)
    cir.call @CWE78_OS_Command_Injection__char_listen_socket_execl_05_bad() : () -> () loc(#loc227)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc211)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc211)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc229)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc230)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc366)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc366)
    cir.return %17 : !s32i loc(#loc366)
  } loc(#loc361)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc367)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc234)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc368)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc237)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc370)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc279)
    %2 = cir.get_global @__const.goodG2B1.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc279)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc279)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc242)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc371)
    cir.scope {
      %13 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc367)
      %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc246)
      %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc246)
      cir.if %15 {
        %16 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc234)
        %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc234)
        cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc250)
      } else {
        %16 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc251)
        %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc252)
        %18 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc237)
        %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc237)
        %20 = cir.call @strcat(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc251)
      } loc(#loc373)
    } loc(#loc372)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc253)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc253)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc254)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc254)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc255)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc255)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc256)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc257)
    %12 = cir.call @execl(%5, %7, %9, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc258)
    cir.return loc(#loc239)
  } loc(#loc369)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc375)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc278)
    %2 = cir.get_global @__const.goodG2B2.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc278)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc278)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc263)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc376)
    cir.scope {
      %13 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc281)
      %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc267)
      %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc267)
      cir.if %15 {
        %16 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc269)
        %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc270)
        %18 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc271)
        %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc271)
        %20 = cir.call @strcat(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc269)
      } loc(#loc378)
    } loc(#loc377)
    %4 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc272)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc272)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc273)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc273)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc274)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc274)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc275)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc276)
    %12 = cir.call @execl(%5, %7, %9, %10, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc277)
    cir.return loc(#loc260)
  } loc(#loc374)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s04/CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":193:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":193:28)
#loc3 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":172:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":172:28)
#loc5 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":75:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":75:28)
#loc7 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":67:1)
#loc8 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":67:25)
#loc9 = loc("/usr/include/string.h":407:1)
#loc10 = loc("/usr/include/string.h":408:33)
#loc11 = loc("/usr/include/sys/socket.h":102:1)
#loc12 = loc("/usr/include/sys/socket.h":102:62)
#loc13 = loc("/usr/include/netinet/in.h":404:1)
#loc14 = loc("/usr/include/netinet/in.h":405:40)
#loc15 = loc("/usr/include/sys/socket.h":112:1)
#loc16 = loc("/usr/include/sys/socket.h":113:6)
#loc17 = loc("/usr/include/sys/socket.h":296:1)
#loc18 = loc("/usr/include/sys/socket.h":296:39)
#loc19 = loc("/usr/include/sys/socket.h":306:1)
#loc20 = loc("/usr/include/sys/socket.h":307:38)
#loc21 = loc("/usr/include/sys/socket.h":145:1)
#loc22 = loc("/usr/include/sys/socket.h":145:68)
#loc23 = loc("/usr/include/string.h":246:1)
#loc24 = loc("/usr/include/string.h":247:33)
#loc25 = loc("/usr/include/unistd.h":358:1)
#loc26 = loc("/usr/include/unistd.h":358:27)
#loc27 = loc("/usr/include/unistd.h":594:1)
#loc28 = loc("/usr/include/unistd.h":595:14)
#loc29 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":161:11)
#loc30 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":161:47)
#loc31 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":72:1)
#loc32 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":162:1)
#loc33 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":74:5)
#loc34 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":74:12)
#loc35 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":76:12)
#loc36 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":76:5)
#loc37 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":77:5)
#loc38 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":158:5)
#loc39 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":77:8)
#loc40 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":78:5)
#loc41 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":79:9)
#loc42 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":157:9)
#loc43 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":84:13)
#loc44 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":84:17)
#loc45 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":85:13)
#loc46 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":85:32)
#loc47 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":86:13)
#loc48 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":86:19)
#loc49 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":87:13)
#loc50 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":87:35)
#loc51 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":88:13)
#loc52 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":88:35)
#loc53 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":89:13)
#loc54 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":89:41)
#loc55 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":89:30)
#loc56 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":89:37)
#loc57 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":90:13)
#loc58 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":142:21)
#loc59 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":100:39)
#loc60 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":100:48)
#loc61 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":100:61)
#loc62 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":100:32)
#loc63 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":100:17)
#loc64 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":100:72)
#loc65 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":101:17)
#loc66 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":104:17)
#loc67 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":101:21)
#loc68 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":101:37)
#loc69 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":102:17)
#loc70 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":103:21)
#loc71 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":105:24)
#loc72 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":105:25)
#loc73 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":105:34)
#loc74 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":105:37)
#loc75 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":105:51)
#loc76 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":105:17)
#loc77 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":105:52)
#loc78 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":106:38)
#loc79 = loc("/usr/include/netinet/in.h":249:5)
#loc80 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":106:17)
#loc81 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":107:43)
#loc82 = loc("/usr/include/netinet/in.h":251:20)
#loc83 = loc("/usr/include/netinet/in.h":33:15)
#loc84 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":107:17)
#loc85 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":108:42)
#loc86 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":108:36)
#loc87 = loc("/usr/include/netinet/in.h":250:15)
#loc88 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":108:17)
#loc89 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":108:50)
#loc90 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":109:17)
#loc91 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":112:17)
#loc92 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":109:26)
#loc93 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":109:58)
#loc94 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":109:59)
#loc95 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":109:68)
#loc96 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":109:82)
#loc97 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":109:21)
#loc98 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":109:88)
#loc99 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":110:17)
#loc100 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":111:21)
#loc101 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":113:17)
#loc102 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":116:17)
#loc103 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":113:28)
#loc104 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":113:42)
#loc105 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":113:21)
#loc106 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":113:61)
#loc107 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":114:17)
#loc108 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":115:21)
#loc109 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":117:39)
#loc110 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":117:53)
#loc111 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":117:59)
#loc112 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":117:32)
#loc113 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":117:17)
#loc114 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":117:63)
#loc115 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":118:17)
#loc116 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":121:17)
#loc117 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":118:21)
#loc118 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":118:37)
#loc119 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":119:17)
#loc120 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":120:21)
#loc121 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":123:35)
#loc122 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":123:58)
#loc123 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":123:65)
#loc124 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":123:63)
#loc125 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":123:49)
#loc126 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":123:72)
#loc127 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":123:75)
#loc128 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":123:86)
#loc129 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":123:91)
#loc130 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":123:97)
#loc131 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":123:107)
#loc132 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":123:108)
#loc133 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":123:111)
#loc134 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":123:30)
#loc135 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":123:17)
#loc136 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":123:112)
#loc137 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":124:17)
#loc138 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":127:17)
#loc139 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":124:21)
#loc140 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":124:35)
#loc141 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":124:48)
#loc142 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":124:51)
#loc143 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":124:65)
#loc144 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":125:17)
#loc145 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":126:21)
#loc146 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":129:61)
#loc147 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":129:17)
#loc148 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":129:22)
#loc149 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":129:32)
#loc150 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":129:45)
#loc151 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":129:56)
#loc152 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":129:57)
#loc153 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":131:27)
#loc154 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":131:34)
#loc155 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":131:40)
#loc156 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":131:17)
#loc157 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":131:44)
#loc158 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":132:17)
#loc159 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":135:17)
#loc160 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":132:21)
#loc161 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":133:17)
#loc162 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":134:32)
#loc163 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":134:22)
#loc164 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":134:21)
#loc165 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":136:27)
#loc166 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":136:34)
#loc167 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":136:40)
#loc168 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":136:17)
#loc169 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":136:44)
#loc170 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":137:17)
#loc171 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":140:17)
#loc172 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":137:21)
#loc173 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":138:17)
#loc174 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":139:32)
#loc175 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":139:22)
#loc176 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":139:21)
#loc177 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":142:20)
#loc178 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":143:13)
#loc179 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":146:13)
#loc180 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":143:17)
#loc181 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":143:33)
#loc182 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":144:13)
#loc183 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":145:30)
#loc184 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":145:17)
#loc185 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":147:13)
#loc186 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":150:13)
#loc187 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":147:17)
#loc188 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":147:33)
#loc189 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":148:13)
#loc190 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":149:30)
#loc191 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":149:17)
#loc192 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":161:29)
#loc193 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":161:61)
#loc194 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":161:75)
#loc195 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":161:5)
#loc196 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":205:1)
#loc197 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":209:1)
#loc198 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":207:5)
#loc199 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":207:14)
#loc200 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":208:5)
#loc201 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":208:14)
#loc202 = loc("/usr/include/stdlib.h":575:1)
#loc203 = loc("/usr/include/stdlib.h":575:41)
#loc204 = loc("/usr/include/time.h":76:1)
#loc205 = loc("/usr/include/time.h":76:38)
#loc206 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc207 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc208 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":226:15)
#loc209 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":228:15)
#loc210 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":231:15)
#loc211 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":233:15)
#loc212 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":221:1)
#loc213 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":236:1)
#loc218 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":222:1)
#loc219 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":224:27)
#loc220 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":224:22)
#loc221 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":224:5)
#loc222 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":226:5)
#loc223 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":227:5)
#loc224 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":227:66)
#loc225 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":228:5)
#loc226 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":231:5)
#loc227 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":232:5)
#loc228 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":232:65)
#loc229 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":233:5)
#loc230 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":235:12)
#loc231 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":235:5)
#loc232 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":68:1)
#loc233 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":68:26)
#loc234 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":177:19)
#loc235 = loc("/usr/include/string.h":149:1)
#loc236 = loc("/usr/include/string.h":150:14)
#loc237 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":182:22)
#loc238 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":169:1)
#loc239 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":187:1)
#loc240 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":171:5)
#loc241 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":171:12)
#loc242 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":173:12)
#loc243 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":173:5)
#loc244 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":174:5)
#loc245 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":183:5)
#loc246 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":174:8)
#loc247 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":175:5)
#loc248 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":178:5)
#loc249 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":180:5)
#loc250 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":177:9)
#loc251 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":182:9)
#loc252 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":182:16)
#loc253 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":186:11)
#loc254 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":186:29)
#loc255 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":186:47)
#loc256 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":186:61)
#loc257 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":186:75)
#loc258 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":186:5)
#loc259 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":190:1)
#loc260 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":203:1)
#loc261 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":192:5)
#loc262 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":192:12)
#loc263 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":194:12)
#loc264 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":194:5)
#loc265 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":195:5)
#loc266 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":199:5)
#loc267 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":195:8)
#loc268 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":196:5)
#loc269 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":198:9)
#loc270 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":198:16)
#loc271 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":198:22)
#loc272 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":202:11)
#loc273 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":202:29)
#loc274 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":202:47)
#loc275 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":202:61)
#loc276 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":202:75)
#loc277 = loc("CWE78_OS_Command_Injection__char_listen_socket_execl_05.c":202:5)
#loc278 = loc(fused[#loc1, #loc2])
#loc279 = loc(fused[#loc3, #loc4])
#loc280 = loc(fused[#loc5, #loc6])
#loc281 = loc(fused[#loc7, #loc8])
#loc282 = loc(fused[#loc9, #loc10])
#loc283 = loc(fused[#loc11, #loc12])
#loc284 = loc(fused[#loc13, #loc14])
#loc285 = loc(fused[#loc15, #loc16])
#loc286 = loc(fused[#loc17, #loc18])
#loc287 = loc(fused[#loc19, #loc20])
#loc288 = loc(fused[#loc21, #loc22])
#loc289 = loc(fused[#loc23, #loc24])
#loc290 = loc(fused[#loc25, #loc26])
#loc291 = loc(fused[#loc27, #loc28])
#loc292 = loc(fused[#loc31, #loc32])
#loc293 = loc(fused[#loc33, #loc34])
#loc294 = loc(fused[#loc36, #loc35])
#loc295 = loc(fused[#loc37, #loc38])
#loc296 = loc(fused[#loc40, #loc38])
#loc297 = loc(fused[#loc41, #loc42])
#loc298 = loc(fused[#loc43, #loc44])
#loc299 = loc(fused[#loc45, #loc46])
#loc300 = loc(fused[#loc47, #loc48])
#loc301 = loc(fused[#loc49, #loc50])
#loc302 = loc(fused[#loc51, #loc52])
#loc303 = loc(fused[#loc53, #loc54])
#loc304 = loc(fused[#loc57, #loc58])
#loc305 = loc(fused[#loc63, #loc64])
#loc306 = loc(fused[#loc65, #loc66])
#loc307 = loc(fused[#loc67, #loc68])
#loc308 = loc(fused[#loc69, #loc66])
#loc309 = loc(fused[#loc71, #loc72])
#loc310 = loc(fused[#loc74, #loc75])
#loc311 = loc(fused[#loc76, #loc77])
#loc312 = loc(fused[#loc80, #loc78])
#loc313 = loc(fused[#loc84, #loc81])
#loc314 = loc(fused[#loc88, #loc89])
#loc315 = loc(fused[#loc90, #loc91])
#loc316 = loc(fused[#loc93, #loc94])
#loc317 = loc(fused[#loc95, #loc96])
#loc318 = loc(fused[#loc97, #loc98])
#loc319 = loc(fused[#loc99, #loc91])
#loc320 = loc(fused[#loc101, #loc102])
#loc321 = loc(fused[#loc105, #loc106])
#loc322 = loc(fused[#loc107, #loc102])
#loc323 = loc(fused[#loc113, #loc114])
#loc324 = loc(fused[#loc115, #loc116])
#loc325 = loc(fused[#loc117, #loc118])
#loc326 = loc(fused[#loc119, #loc116])
#loc327 = loc(fused[#loc125, #loc126])
#loc328 = loc(fused[#loc127, #loc128])
#loc329 = loc(fused[#loc129, #loc130])
#loc330 = loc(fused[#loc129, #loc131])
#loc331 = loc(fused[#loc127, #loc132])
#loc332 = loc(fused[#loc135, #loc136])
#loc333 = loc(fused[#loc137, #loc138])
#loc334 = loc(fused[#loc139, #loc140])
#loc335 = loc(fused[#loc142, #loc143])
#loc336 = loc(fused[#loc144, #loc138])
#loc337 = loc(fused[#loc150, #loc151])
#loc338 = loc(fused[#loc149, #loc151])
#loc339 = loc(fused[#loc148, #loc151])
#loc340 = loc(fused[#loc147, #loc146])
#loc341 = loc(fused[#loc156, #loc157])
#loc342 = loc(fused[#loc158, #loc159])
#loc343 = loc(fused[#loc161, #loc159])
#loc344 = loc(fused[#loc164, #loc162])
#loc345 = loc(fused[#loc168, #loc169])
#loc346 = loc(fused[#loc170, #loc171])
#loc347 = loc(fused[#loc173, #loc171])
#loc348 = loc(fused[#loc176, #loc174])
#loc349 = loc(fused[#loc178, #loc179])
#loc350 = loc(fused[#loc180, #loc181])
#loc351 = loc(fused[#loc182, #loc179])
#loc352 = loc(fused[#loc185, #loc186])
#loc353 = loc(fused[#loc187, #loc188])
#loc354 = loc(fused[#loc189, #loc186])
#loc355 = loc(fused[#loc196, #loc197])
#loc356 = loc(fused[#loc198, #loc199])
#loc357 = loc(fused[#loc200, #loc201])
#loc358 = loc(fused[#loc202, #loc203])
#loc359 = loc(fused[#loc204, #loc205])
#loc360 = loc(fused[#loc206, #loc207])
#loc361 = loc(fused[#loc212, #loc213])
#loc364 = loc(fused[#loc223, #loc224])
#loc365 = loc(fused[#loc227, #loc228])
#loc366 = loc(fused[#loc231, #loc230])
#loc367 = loc(fused[#loc232, #loc233])
#loc368 = loc(fused[#loc235, #loc236])
#loc369 = loc(fused[#loc238, #loc239])
#loc370 = loc(fused[#loc240, #loc241])
#loc371 = loc(fused[#loc243, #loc242])
#loc372 = loc(fused[#loc244, #loc245])
#loc373 = loc(fused[#loc247, #loc248, #loc249, #loc245])
#loc374 = loc(fused[#loc259, #loc260])
#loc375 = loc(fused[#loc261, #loc262])
#loc376 = loc(fused[#loc264, #loc263])
#loc377 = loc(fused[#loc265, #loc266])
#loc378 = loc(fused[#loc268, #loc266])
