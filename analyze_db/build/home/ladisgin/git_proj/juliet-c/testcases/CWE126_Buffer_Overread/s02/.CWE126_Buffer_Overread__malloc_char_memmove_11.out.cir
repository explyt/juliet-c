!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc95 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":125:10)
#loc96 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":125:14)
#loc97 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":125:20)
#loc98 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":125:32)
#loc286 = loc(fused[#loc95, #loc96])
#loc287 = loc(fused[#loc97, #loc98])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_memmove_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc251)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc252)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc253)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc254)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc255)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc256)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_memmove_11_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc258)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc17)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc259)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc261)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc261)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc21)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc21)
      cir.if %5 {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc24)
        %7 = cir.const #cir.int<50> : !s32i loc(#loc25)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc25)
        %9 = cir.const #cir.int<1> : !u64i loc(#loc263)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc264)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc24)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc265)
        cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc266)
        cir.scope {
          %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
          %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc33)
          %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc33)
          %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc268)
          cir.if %30 {
            %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc35)
            %32 = cir.const #cir.int<1> : !s32i loc(#loc36)
            %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc37)
            cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc35)
          } loc(#loc269)
        } loc(#loc267)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc38)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc39)
        %16 = cir.const #cir.int<50> : !s32i loc(#loc40)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc41)
        %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc40)
        %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc40)
        cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc270)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc44)
        %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc44)
        %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
        %23 = cir.const #cir.int<50> : !s32i loc(#loc46)
        %24 = cir.const #cir.int<1> : !s32i loc(#loc47)
        %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc46)
        %26 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc48)
        cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc271)
      } loc(#loc262)
    } loc(#loc260)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc273)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc53)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc53)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc54)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc55)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc56)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc55)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc55)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc274)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc59)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc59)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc60)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc61)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc60)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc62)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc62)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc275)
      %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc63)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc63)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc64)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc64)
      %21 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc65)
      %22 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc66)
      %23 = cir.call @strlen(%22) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc65)
      %24 = cir.const #cir.int<1> : !u64i loc(#loc276)
      %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc277)
      cir.libc.memmove %25 bytes from %20 to %18 : !cir.ptr<!void>, !u64i loc(#loc278)
      %26 = cir.const #cir.int<0> : !s32i loc(#loc71)
      %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc71)
      %28 = cir.const #cir.int<100> : !s32i loc(#loc72)
      %29 = cir.const #cir.int<1> : !s32i loc(#loc73)
      %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc72)
      %31 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc74)
      %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc74)
      cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc279)
      %33 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc75)
      cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc76)
      %34 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc77)
      %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
      %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc78)
      cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc77)
    } loc(#loc272)
    cir.return loc(#loc14)
  } loc(#loc257)
  cir.func no_proto @CWE126_Buffer_Overread__malloc_char_memmove_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc281)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc81)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc282)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc83)
    cir.return loc(#loc80)
  } loc(#loc280)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc283)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc284)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc89)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc90)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc91)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc92)
  cir.func @main(%arg0: !s32i loc(fused[#loc95, #loc96]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc97, #loc98])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc286)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc287)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc94)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc99)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc99)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc100)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc101)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc101)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc102)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc89)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc89)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc103)
    %8 = cir.get_global @CWE126_Buffer_Overread__malloc_char_memmove_11_good : !cir.ptr<!cir.func<!void ()>> loc(#loc288)
    cir.call @CWE126_Buffer_Overread__malloc_char_memmove_11_good() : () -> () loc(#loc104)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc90)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc90)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc106)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc91)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc91)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    %13 = cir.get_global @CWE126_Buffer_Overread__malloc_char_memmove_11_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc289)
    cir.call @CWE126_Buffer_Overread__malloc_char_memmove_11_bad() : () -> () loc(#loc108)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc92)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc92)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc111)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc290)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc290)
    cir.return %17 : !s32i loc(#loc290)
  } loc(#loc285)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc291)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc115)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc293)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc120)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc294)
    cir.scope {
      %2 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc296)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc296)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc124)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc124)
      cir.if %5 {
        %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc115)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc115)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc129)
      } else {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc130)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc131)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc131)
        %9 = cir.const #cir.int<1> : !u64i loc(#loc298)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc299)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc130)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc300)
        cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc301)
        cir.scope {
          %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
          %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc139)
          %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc139)
          %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc303)
          cir.if %30 {
            %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc141)
            %32 = cir.const #cir.int<1> : !s32i loc(#loc142)
            %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc143)
            cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc141)
          } loc(#loc304)
        } loc(#loc302)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc144)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc145)
        %16 = cir.const #cir.int<100> : !s32i loc(#loc146)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc147)
        %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc146)
        %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc146)
        cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc305)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc150)
        %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc150)
        %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc151)
        %23 = cir.const #cir.int<100> : !s32i loc(#loc152)
        %24 = cir.const #cir.int<1> : !s32i loc(#loc153)
        %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc152)
        %26 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc154)
        cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc306)
      } loc(#loc297)
    } loc(#loc295)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc308)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc159)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc159)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc160)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc161)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc162)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc161)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc161)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc309)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc165)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc165)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc166)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc167)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc166)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc168)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc168)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc310)
      %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc169)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc169)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc170)
      %21 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc171)
      %22 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc172)
      %23 = cir.call @strlen(%22) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc171)
      %24 = cir.const #cir.int<1> : !u64i loc(#loc311)
      %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc312)
      cir.libc.memmove %25 bytes from %20 to %18 : !cir.ptr<!void>, !u64i loc(#loc313)
      %26 = cir.const #cir.int<0> : !s32i loc(#loc177)
      %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc177)
      %28 = cir.const #cir.int<100> : !s32i loc(#loc178)
      %29 = cir.const #cir.int<1> : !s32i loc(#loc179)
      %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc178)
      %31 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc180)
      %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc180)
      cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc314)
      %33 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc181)
      cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc182)
      %34 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc183)
      %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc184)
      %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc184)
      cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc183)
    } loc(#loc307)
    cir.return loc(#loc117)
  } loc(#loc292)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc316)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc189)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc317)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc319)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc319)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc193)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc193)
      cir.if %5 {
        %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc196)
        %7 = cir.const #cir.int<100> : !s32i loc(#loc197)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc197)
        %9 = cir.const #cir.int<1> : !u64i loc(#loc321)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc322)
        %11 = cir.call @malloc(%10) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc196)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc323)
        cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc324)
        cir.scope {
          %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc204)
          %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc205)
          %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc205)
          %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc326)
          cir.if %30 {
            %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc207)
            %32 = cir.const #cir.int<1> : !s32i loc(#loc208)
            %33 = cir.unary(minus, %32) : !s32i, !s32i loc(#loc209)
            cir.call @exit(%33) : (!s32i) -> () extra(#fn_attr) loc(#loc207)
          } loc(#loc327)
        } loc(#loc325)
        %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc210)
        %14 = cir.cast(bitcast, %13 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc210)
        %15 = cir.const #cir.int<65> : !s32i loc(#loc211)
        %16 = cir.const #cir.int<100> : !s32i loc(#loc212)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc213)
        %18 = cir.binop(sub, %16, %17) nsw : !s32i loc(#loc212)
        %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc212)
        cir.libc.memset %19 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc328)
        %20 = cir.const #cir.int<0> : !s32i loc(#loc216)
        %21 = cir.cast(integral, %20 : !s32i), !s8i loc(#loc216)
        %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc217)
        %23 = cir.const #cir.int<100> : !s32i loc(#loc218)
        %24 = cir.const #cir.int<1> : !s32i loc(#loc219)
        %25 = cir.binop(sub, %23, %24) nsw : !s32i loc(#loc218)
        %26 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc220)
        cir.store %21, %26 : !s8i, !cir.ptr<!s8i> loc(#loc329)
      } loc(#loc320)
    } loc(#loc318)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc331)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc225)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc225)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc226)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc227)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc228)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc227)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc227)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc332)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc231)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc231)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc232)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc233)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc232)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc234)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc234)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc333)
      %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc235)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc235)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc236)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc236)
      %21 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc237)
      %22 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc238)
      %23 = cir.call @strlen(%22) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc237)
      %24 = cir.const #cir.int<1> : !u64i loc(#loc334)
      %25 = cir.binop(mul, %23, %24) : !u64i loc(#loc335)
      cir.libc.memmove %25 bytes from %20 to %18 : !cir.ptr<!void>, !u64i loc(#loc336)
      %26 = cir.const #cir.int<0> : !s32i loc(#loc243)
      %27 = cir.cast(integral, %26 : !s32i), !s8i loc(#loc243)
      %28 = cir.const #cir.int<100> : !s32i loc(#loc244)
      %29 = cir.const #cir.int<1> : !s32i loc(#loc245)
      %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc244)
      %31 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc246)
      %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc246)
      cir.store %27, %32 : !s8i, !cir.ptr<!s8i> loc(#loc337)
      %33 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc247)
      cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc248)
      %34 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc249)
      %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc250)
      %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc250)
      cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc249)
    } loc(#loc330)
    cir.return loc(#loc186)
  } loc(#loc315)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s02/CWE126_Buffer_Overread__malloc_char_memmove_11.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/string.h":407:1)
#loc8 = loc("/usr/include/string.h":408:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("/usr/include/stdlib.h":687:1)
#loc12 = loc("/usr/include/stdlib.h":687:32)
#loc13 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":23:1)
#loc14 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":46:1)
#loc15 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":25:5)
#loc16 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":25:12)
#loc17 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":26:12)
#loc18 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":26:5)
#loc19 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":27:5)
#loc20 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":34:5)
#loc21 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":27:8)
#loc22 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":27:26)
#loc23 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":28:5)
#loc24 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":30:24)
#loc25 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":30:31)
#loc26 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":30:34)
#loc27 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":30:45)
#loc28 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":30:46)
#loc29 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":30:9)
#loc30 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":31:9)
#loc31 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":31:37)
#loc32 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":31:13)
#loc33 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":31:21)
#loc34 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":31:27)
#loc35 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":31:28)
#loc36 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":31:34)
#loc37 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":31:33)
#loc38 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":32:16)
#loc39 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":32:22)
#loc40 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":32:27)
#loc41 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":32:30)
#loc42 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":32:9)
#loc43 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":32:31)
#loc44 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":33:22)
#loc45 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":33:9)
#loc46 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":33:14)
#loc47 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":33:17)
#loc48 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":33:18)
#loc49 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":35:5)
#loc50 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":45:5)
#loc51 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":36:9)
#loc52 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":36:22)
#loc53 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":37:16)
#loc54 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":37:22)
#loc55 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":37:27)
#loc56 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":37:31)
#loc57 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":37:9)
#loc58 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":37:32)
#loc59 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":38:23)
#loc60 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":38:14)
#loc61 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":38:18)
#loc62 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":38:9)
#loc63 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":41:17)
#loc64 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":41:23)
#loc65 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":41:29)
#loc66 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":41:36)
#loc67 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":41:42)
#loc68 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":41:53)
#loc69 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":41:9)
#loc70 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":41:54)
#loc71 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":42:23)
#loc72 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":42:14)
#loc73 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":42:18)
#loc74 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":42:9)
#loc75 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":43:19)
#loc76 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":43:9)
#loc77 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":44:9)
#loc78 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":44:14)
#loc79 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":109:1)
#loc80 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":113:1)
#loc81 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":111:5)
#loc82 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":111:14)
#loc83 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":112:5)
#loc84 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":112:14)
#loc85 = loc("/usr/include/stdlib.h":575:1)
#loc86 = loc("/usr/include/stdlib.h":575:41)
#loc87 = loc("/usr/include/time.h":76:1)
#loc88 = loc("/usr/include/time.h":76:38)
#loc89 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":130:15)
#loc90 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":132:15)
#loc91 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":135:15)
#loc92 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":137:15)
#loc93 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":125:1)
#loc94 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":140:1)
#loc99 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":126:1)
#loc100 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":128:27)
#loc101 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":128:22)
#loc102 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":128:5)
#loc103 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":130:5)
#loc104 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":131:5)
#loc105 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":131:57)
#loc106 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":132:5)
#loc107 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":135:5)
#loc108 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":136:5)
#loc109 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":136:56)
#loc110 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":137:5)
#loc111 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":139:12)
#loc112 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":139:5)
#loc113 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc114 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc115 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":60:19)
#loc116 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":53:1)
#loc117 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":81:1)
#loc118 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":55:5)
#loc119 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":55:12)
#loc120 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":56:12)
#loc121 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":56:5)
#loc122 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":57:5)
#loc123 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":69:5)
#loc124 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":57:8)
#loc125 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":57:27)
#loc126 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":58:5)
#loc127 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":61:5)
#loc128 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":63:5)
#loc129 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":60:9)
#loc130 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":65:24)
#loc131 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":65:31)
#loc132 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":65:35)
#loc133 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":65:46)
#loc134 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":65:47)
#loc135 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":65:9)
#loc136 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":66:9)
#loc137 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":66:37)
#loc138 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":66:13)
#loc139 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":66:21)
#loc140 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":66:27)
#loc141 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":66:28)
#loc142 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":66:34)
#loc143 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":66:33)
#loc144 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":67:16)
#loc145 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":67:22)
#loc146 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":67:27)
#loc147 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":67:31)
#loc148 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":67:9)
#loc149 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":67:32)
#loc150 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":68:23)
#loc151 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":68:9)
#loc152 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":68:14)
#loc153 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":68:18)
#loc154 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":68:19)
#loc155 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":70:5)
#loc156 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":80:5)
#loc157 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":71:9)
#loc158 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":71:22)
#loc159 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":72:16)
#loc160 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":72:22)
#loc161 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":72:27)
#loc162 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":72:31)
#loc163 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":72:9)
#loc164 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":72:32)
#loc165 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":73:23)
#loc166 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":73:14)
#loc167 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":73:18)
#loc168 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":73:9)
#loc169 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":76:17)
#loc170 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":76:23)
#loc171 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":76:29)
#loc172 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":76:36)
#loc173 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":76:42)
#loc174 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":76:53)
#loc175 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":76:9)
#loc176 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":76:54)
#loc177 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":77:23)
#loc178 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":77:14)
#loc179 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":77:18)
#loc180 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":77:9)
#loc181 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":78:19)
#loc182 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":78:9)
#loc183 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":79:9)
#loc184 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":79:14)
#loc185 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":84:1)
#loc186 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":107:1)
#loc187 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":86:5)
#loc188 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":86:12)
#loc189 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":87:12)
#loc190 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":87:5)
#loc191 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":88:5)
#loc192 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":95:5)
#loc193 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":88:8)
#loc194 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":88:26)
#loc195 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":89:5)
#loc196 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":91:24)
#loc197 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":91:31)
#loc198 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":91:35)
#loc199 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":91:46)
#loc200 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":91:47)
#loc201 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":91:9)
#loc202 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":92:9)
#loc203 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":92:37)
#loc204 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":92:13)
#loc205 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":92:21)
#loc206 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":92:27)
#loc207 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":92:28)
#loc208 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":92:34)
#loc209 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":92:33)
#loc210 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":93:16)
#loc211 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":93:22)
#loc212 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":93:27)
#loc213 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":93:31)
#loc214 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":93:9)
#loc215 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":93:32)
#loc216 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":94:23)
#loc217 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":94:9)
#loc218 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":94:14)
#loc219 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":94:18)
#loc220 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":94:19)
#loc221 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":96:5)
#loc222 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":106:5)
#loc223 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":97:9)
#loc224 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":97:22)
#loc225 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":98:16)
#loc226 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":98:22)
#loc227 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":98:27)
#loc228 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":98:31)
#loc229 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":98:9)
#loc230 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":98:32)
#loc231 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":99:23)
#loc232 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":99:14)
#loc233 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":99:18)
#loc234 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":99:9)
#loc235 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":102:17)
#loc236 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":102:23)
#loc237 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":102:29)
#loc238 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":102:36)
#loc239 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":102:42)
#loc240 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":102:53)
#loc241 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":102:9)
#loc242 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":102:54)
#loc243 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":103:23)
#loc244 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":103:14)
#loc245 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":103:18)
#loc246 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":103:9)
#loc247 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":104:19)
#loc248 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":104:9)
#loc249 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":105:9)
#loc250 = loc("CWE126_Buffer_Overread__malloc_char_memmove_11.c":105:14)
#loc251 = loc(fused[#loc1, #loc2])
#loc252 = loc(fused[#loc3, #loc4])
#loc253 = loc(fused[#loc5, #loc6])
#loc254 = loc(fused[#loc7, #loc8])
#loc255 = loc(fused[#loc9, #loc10])
#loc256 = loc(fused[#loc11, #loc12])
#loc257 = loc(fused[#loc13, #loc14])
#loc258 = loc(fused[#loc15, #loc16])
#loc259 = loc(fused[#loc18, #loc17])
#loc260 = loc(fused[#loc19, #loc20])
#loc261 = loc(fused[#loc21, #loc22])
#loc262 = loc(fused[#loc23, #loc20])
#loc263 = loc(fused[#loc26, #loc27])
#loc264 = loc(fused[#loc25, #loc27])
#loc265 = loc(fused[#loc24, #loc28])
#loc266 = loc(fused[#loc29, #loc28])
#loc267 = loc(fused[#loc30, #loc31])
#loc268 = loc(fused[#loc32, #loc33])
#loc269 = loc(fused[#loc34, #loc31])
#loc270 = loc(fused[#loc42, #loc43])
#loc271 = loc(fused[#loc45, #loc44])
#loc272 = loc(fused[#loc49, #loc50])
#loc273 = loc(fused[#loc51, #loc52])
#loc274 = loc(fused[#loc57, #loc58])
#loc275 = loc(fused[#loc62, #loc59])
#loc276 = loc(fused[#loc67, #loc68])
#loc277 = loc(fused[#loc65, #loc68])
#loc278 = loc(fused[#loc69, #loc70])
#loc279 = loc(fused[#loc74, #loc71])
#loc280 = loc(fused[#loc79, #loc80])
#loc281 = loc(fused[#loc81, #loc82])
#loc282 = loc(fused[#loc83, #loc84])
#loc283 = loc(fused[#loc85, #loc86])
#loc284 = loc(fused[#loc87, #loc88])
#loc285 = loc(fused[#loc93, #loc94])
#loc288 = loc(fused[#loc104, #loc105])
#loc289 = loc(fused[#loc108, #loc109])
#loc290 = loc(fused[#loc112, #loc111])
#loc291 = loc(fused[#loc113, #loc114])
#loc292 = loc(fused[#loc116, #loc117])
#loc293 = loc(fused[#loc118, #loc119])
#loc294 = loc(fused[#loc121, #loc120])
#loc295 = loc(fused[#loc122, #loc123])
#loc296 = loc(fused[#loc124, #loc125])
#loc297 = loc(fused[#loc126, #loc127, #loc128, #loc123])
#loc298 = loc(fused[#loc132, #loc133])
#loc299 = loc(fused[#loc131, #loc133])
#loc300 = loc(fused[#loc130, #loc134])
#loc301 = loc(fused[#loc135, #loc134])
#loc302 = loc(fused[#loc136, #loc137])
#loc303 = loc(fused[#loc138, #loc139])
#loc304 = loc(fused[#loc140, #loc137])
#loc305 = loc(fused[#loc148, #loc149])
#loc306 = loc(fused[#loc151, #loc150])
#loc307 = loc(fused[#loc155, #loc156])
#loc308 = loc(fused[#loc157, #loc158])
#loc309 = loc(fused[#loc163, #loc164])
#loc310 = loc(fused[#loc168, #loc165])
#loc311 = loc(fused[#loc173, #loc174])
#loc312 = loc(fused[#loc171, #loc174])
#loc313 = loc(fused[#loc175, #loc176])
#loc314 = loc(fused[#loc180, #loc177])
#loc315 = loc(fused[#loc185, #loc186])
#loc316 = loc(fused[#loc187, #loc188])
#loc317 = loc(fused[#loc190, #loc189])
#loc318 = loc(fused[#loc191, #loc192])
#loc319 = loc(fused[#loc193, #loc194])
#loc320 = loc(fused[#loc195, #loc192])
#loc321 = loc(fused[#loc198, #loc199])
#loc322 = loc(fused[#loc197, #loc199])
#loc323 = loc(fused[#loc196, #loc200])
#loc324 = loc(fused[#loc201, #loc200])
#loc325 = loc(fused[#loc202, #loc203])
#loc326 = loc(fused[#loc204, #loc205])
#loc327 = loc(fused[#loc206, #loc203])
#loc328 = loc(fused[#loc214, #loc215])
#loc329 = loc(fused[#loc217, #loc216])
#loc330 = loc(fused[#loc221, #loc222])
#loc331 = loc(fused[#loc223, #loc224])
#loc332 = loc(fused[#loc229, #loc230])
#loc333 = loc(fused[#loc234, #loc231])
#loc334 = loc(fused[#loc239, #loc240])
#loc335 = loc(fused[#loc237, #loc240])
#loc336 = loc(fused[#loc241, #loc242])
#loc337 = loc(fused[#loc246, #loc243])
