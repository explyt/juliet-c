!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printLongLongLine(!s64i) loc(#loc169)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc170)
  cir.func no_proto  @CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc172)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc9)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc173)
    cir.scope {
      %9 = cir.const #cir.int<1> : !s32i loc(#loc13)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc13)
      cir.if %10 {
        cir.scope {
          %11 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc177)
          %12 = cir.const #cir.int<100> : !s32i loc(#loc18)
          %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc18)
          %14 = cir.const #cir.int<8> : !u64i loc(#loc18)
          %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc18)
          %16 = cir.alloca !u8i, !cir.ptr<!u8i>, %15 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc18)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc18)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc18)
          cir.store %18, %11 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc177)
          cir.scope {
            %20 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc179)
            cir.scope {
              %21 = cir.const #cir.int<0> : !s32i loc(#loc25)
              %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc25)
              cir.store %22, %20 : !u64i, !cir.ptr<!u64i> loc(#loc181)
              cir.for : cond {
                %23 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc27)
                %24 = cir.const #cir.int<100> : !s32i loc(#loc28)
                %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc28)
                %26 = cir.cmp(lt, %23, %25) : !u64i, !s32i loc(#loc182)
                %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc29)
                cir.condition(%27) loc(#loc29)
              } body {
                cir.scope {
                  %23 = cir.const #cir.int<5> : !s64i loc(#loc31)
                  %24 = cir.load %11 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc32)
                  %25 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc33)
                  %26 = cir.ptr_stride(%24 : !cir.ptr<!s64i>, %25 : !u64i), !cir.ptr<!s64i> loc(#loc34)
                  cir.store %23, %26 : !s64i, !cir.ptr<!s64i> loc(#loc184)
                } loc(#loc183)
                cir.yield loc(#loc24)
              } step {
                %23 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc35)
                %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc36)
                cir.store %24, %20 : !u64i, !cir.ptr<!u64i> loc(#loc185)
                cir.yield loc(#loc180)
              } loc(#loc180)
            } loc(#loc180)
          } loc(#loc178)
          %19 = cir.load %11 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc37)
          cir.store %19, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc186)
        } loc(#loc176)
      } loc(#loc175)
    } loc(#loc174)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc39)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!s64i>, %3 : !s32i), !cir.ptr<!s64i> loc(#loc41)
    %5 = cir.load %4 : !cir.ptr<!s64i>, !s64i loc(#loc39)
    cir.call @printLongLongLine(%5) : (!s64i) -> () loc(#loc42)
    %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc43)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc44)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc44)
    cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc43)
    cir.return loc(#loc6)
  } loc(#loc171)
  cir.func no_proto  @CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc188)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc189)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    cir.return loc(#loc46)
  } loc(#loc187)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc190)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc53)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc191)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc56)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc192)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc194)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc63)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc195)
    cir.scope {
      %9 = cir.const #cir.int<0> : !s32i loc(#loc67)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc67)
      cir.if %10 {
        %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc53)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc53)
        cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc71)
      } else {
        cir.scope {
          %11 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc199)
          %12 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc76)
          %13 = cir.const #cir.int<100> : !s32i loc(#loc77)
          %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc77)
          %15 = cir.const #cir.int<8> : !u64i loc(#loc200)
          %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc201)
          %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc76)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc202)
          cir.store %18, %11 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc199)
          cir.scope {
            %20 = cir.load %11 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc82)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc83)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc83)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!s64i>, !s32i loc(#loc204)
            %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc84)
            cir.if %24 {
              %25 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc56)
              %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc56)
              cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc86)
              %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc87)
              %28 = cir.const #cir.int<1> : !s32i loc(#loc88)
              cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc87)
            } loc(#loc205)
          } loc(#loc203)
          cir.scope {
            %20 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc207)
            cir.scope {
              %21 = cir.const #cir.int<0> : !s32i loc(#loc95)
              %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc95)
              cir.store %22, %20 : !u64i, !cir.ptr<!u64i> loc(#loc209)
              cir.for : cond {
                %23 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc97)
                %24 = cir.const #cir.int<100> : !s32i loc(#loc98)
                %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc98)
                %26 = cir.cmp(lt, %23, %25) : !u64i, !s32i loc(#loc210)
                %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc99)
                cir.condition(%27) loc(#loc99)
              } body {
                cir.scope {
                  %23 = cir.const #cir.int<5> : !s64i loc(#loc101)
                  %24 = cir.load %11 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc102)
                  %25 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc103)
                  %26 = cir.ptr_stride(%24 : !cir.ptr<!s64i>, %25 : !u64i), !cir.ptr<!s64i> loc(#loc104)
                  cir.store %23, %26 : !s64i, !cir.ptr<!s64i> loc(#loc212)
                } loc(#loc211)
                cir.yield loc(#loc94)
              } step {
                %23 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc105)
                %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc106)
                cir.store %24, %20 : !u64i, !cir.ptr<!u64i> loc(#loc213)
                cir.yield loc(#loc208)
              } loc(#loc208)
            } loc(#loc208)
          } loc(#loc206)
          %19 = cir.load %11 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc107)
          cir.store %19, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc214)
        } loc(#loc198)
      } loc(#loc197)
    } loc(#loc196)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc109)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc110)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!s64i>, %3 : !s32i), !cir.ptr<!s64i> loc(#loc111)
    %5 = cir.load %4 : !cir.ptr<!s64i>, !s64i loc(#loc109)
    cir.call @printLongLongLine(%5) : (!s64i) -> () loc(#loc112)
    %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc113)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc114)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc114)
    cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc113)
    cir.return loc(#loc60)
  } loc(#loc193)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc216)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc119)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc217)
    cir.scope {
      %9 = cir.const #cir.int<1> : !s32i loc(#loc123)
      %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc123)
      cir.if %10 {
        cir.scope {
          %11 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc221)
          %12 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc129)
          %13 = cir.const #cir.int<100> : !s32i loc(#loc130)
          %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc130)
          %15 = cir.const #cir.int<8> : !u64i loc(#loc222)
          %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc223)
          %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc129)
          %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc224)
          cir.store %18, %11 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc221)
          cir.scope {
            %20 = cir.load %11 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc135)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc136)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc136)
            %23 = cir.cmp(eq, %20, %22) : !cir.ptr<!s64i>, !s32i loc(#loc226)
            %24 = cir.cast(int_to_bool, %23 : !s32i), !cir.bool loc(#loc137)
            cir.if %24 {
              %25 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc139)
              %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc139)
              cir.call @printLine(%26) : (!cir.ptr<!s8i>) -> () loc(#loc140)
              %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc141)
              %28 = cir.const #cir.int<1> : !s32i loc(#loc142)
              cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc141)
            } loc(#loc227)
          } loc(#loc225)
          cir.scope {
            %20 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc229)
            cir.scope {
              %21 = cir.const #cir.int<0> : !s32i loc(#loc149)
              %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc149)
              cir.store %22, %20 : !u64i, !cir.ptr<!u64i> loc(#loc231)
              cir.for : cond {
                %23 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc151)
                %24 = cir.const #cir.int<100> : !s32i loc(#loc152)
                %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc152)
                %26 = cir.cmp(lt, %23, %25) : !u64i, !s32i loc(#loc232)
                %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc153)
                cir.condition(%27) loc(#loc153)
              } body {
                cir.scope {
                  %23 = cir.const #cir.int<5> : !s64i loc(#loc155)
                  %24 = cir.load %11 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc156)
                  %25 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc157)
                  %26 = cir.ptr_stride(%24 : !cir.ptr<!s64i>, %25 : !u64i), !cir.ptr<!s64i> loc(#loc158)
                  cir.store %23, %26 : !s64i, !cir.ptr<!s64i> loc(#loc234)
                } loc(#loc233)
                cir.yield loc(#loc148)
              } step {
                %23 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc159)
                %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc160)
                cir.store %24, %20 : !u64i, !cir.ptr<!u64i> loc(#loc235)
                cir.yield loc(#loc230)
              } loc(#loc230)
            } loc(#loc230)
          } loc(#loc228)
          %19 = cir.load %11 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc161)
          cir.store %19, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc236)
        } loc(#loc220)
      } loc(#loc219)
    } loc(#loc218)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc163)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc164)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!s64i>, %3 : !s32i), !cir.ptr<!s64i> loc(#loc165)
    %5 = cir.load %4 : !cir.ptr<!s64i>, !s64i loc(#loc163)
    cir.call @printLongLongLine(%5) : (!s64i) -> () loc(#loc166)
    %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc167)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc168)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc168)
    cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc167)
    cir.return loc(#loc116)
  } loc(#loc215)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":30:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":52:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":32:5)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":32:15)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":33:12)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":33:5)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":34:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":48:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":34:8)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":35:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":36:9)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":47:9)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":38:13)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":38:47)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":39:13)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":45:13)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":40:17)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":40:24)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":41:17)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":44:17)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":41:26)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":41:22)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":41:29)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":41:33)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":41:31)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":42:17)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":43:37)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":43:21)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":43:32)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":43:33)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":41:39)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":41:38)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":46:20)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":46:13)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":49:23)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":49:28)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":49:29)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":49:5)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":51:5)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":51:10)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":123:1)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":127:1)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":125:5)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":125:14)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":126:5)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":126:14)
#loc51 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc52 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":66:19)
#loc54 = loc("/usr/include/stdlib.h":672:1)
#loc55 = loc("/usr/include/stdlib.h":672:45)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":75:27)
#loc57 = loc("/usr/include/stdlib.h":756:1)
#loc58 = loc("/usr/include/stdlib.h":756:70)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":59:1)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":91:1)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":61:5)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":61:15)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":62:12)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":62:5)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":63:5)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":87:5)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":63:8)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":64:5)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":67:5)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":69:5)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":66:9)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":70:9)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":86:9)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":72:13)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":72:73)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":72:47)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":72:54)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":72:58)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":72:72)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":73:13)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":77:13)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":73:17)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":73:31)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":73:28)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":74:13)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":75:17)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":76:17)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":76:22)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":78:13)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":84:13)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":79:17)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":79:24)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":80:17)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":83:17)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":80:26)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":80:22)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":80:29)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":80:33)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":80:31)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":81:17)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":82:37)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":82:21)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":82:32)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":82:33)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":80:39)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":80:38)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":85:20)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":85:13)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":88:23)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":88:28)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":88:29)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":88:5)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":90:5)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":90:10)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":94:1)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":121:1)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":96:5)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":96:15)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":97:12)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":97:5)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":98:5)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":117:5)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":98:8)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":99:5)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":100:9)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":116:9)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":102:13)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":102:73)
#loc129 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":102:47)
#loc130 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":102:54)
#loc131 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":102:58)
#loc132 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":102:72)
#loc133 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":103:13)
#loc134 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":107:13)
#loc135 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":103:17)
#loc136 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":103:31)
#loc137 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":103:28)
#loc138 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":104:13)
#loc139 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":105:27)
#loc140 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":105:17)
#loc141 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":106:17)
#loc142 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":106:22)
#loc143 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":108:13)
#loc144 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":114:13)
#loc145 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":109:17)
#loc146 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":109:24)
#loc147 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":110:17)
#loc148 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":113:17)
#loc149 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":110:26)
#loc150 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":110:22)
#loc151 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":110:29)
#loc152 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":110:33)
#loc153 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":110:31)
#loc154 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":111:17)
#loc155 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":112:37)
#loc156 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":112:21)
#loc157 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":112:32)
#loc158 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":112:33)
#loc159 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":110:39)
#loc160 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":110:38)
#loc161 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":115:20)
#loc162 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":115:13)
#loc163 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":118:23)
#loc164 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":118:28)
#loc165 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":118:29)
#loc166 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":118:5)
#loc167 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":120:5)
#loc168 = loc("CWE590_Free_Memory_Not_on_Heap__free_int64_t_alloca_04.c":120:10)
#loc169 = loc(fused[#loc1, #loc2])
#loc170 = loc(fused[#loc3, #loc4])
#loc171 = loc(fused[#loc5, #loc6])
#loc172 = loc(fused[#loc7, #loc8])
#loc173 = loc(fused[#loc10, #loc9])
#loc174 = loc(fused[#loc11, #loc12])
#loc175 = loc(fused[#loc14, #loc12])
#loc176 = loc(fused[#loc15, #loc16])
#loc177 = loc(fused[#loc17, #loc18])
#loc178 = loc(fused[#loc19, #loc20])
#loc179 = loc(fused[#loc21, #loc22])
#loc180 = loc(fused[#loc23, #loc24])
#loc181 = loc(fused[#loc26, #loc25])
#loc182 = loc(fused[#loc27, #loc28])
#loc183 = loc(fused[#loc30, #loc24])
#loc184 = loc(fused[#loc32, #loc31])
#loc185 = loc(fused[#loc36, #loc35])
#loc186 = loc(fused[#loc38, #loc37])
#loc187 = loc(fused[#loc45, #loc46])
#loc188 = loc(fused[#loc47, #loc48])
#loc189 = loc(fused[#loc49, #loc50])
#loc190 = loc(fused[#loc51, #loc52])
#loc191 = loc(fused[#loc54, #loc55])
#loc192 = loc(fused[#loc57, #loc58])
#loc193 = loc(fused[#loc59, #loc60])
#loc194 = loc(fused[#loc61, #loc62])
#loc195 = loc(fused[#loc64, #loc63])
#loc196 = loc(fused[#loc65, #loc66])
#loc197 = loc(fused[#loc68, #loc69, #loc70, #loc66])
#loc198 = loc(fused[#loc72, #loc73])
#loc199 = loc(fused[#loc74, #loc75])
#loc200 = loc(fused[#loc78, #loc79])
#loc201 = loc(fused[#loc77, #loc79])
#loc202 = loc(fused[#loc76, #loc75])
#loc203 = loc(fused[#loc80, #loc81])
#loc204 = loc(fused[#loc82, #loc83])
#loc205 = loc(fused[#loc85, #loc81])
#loc206 = loc(fused[#loc89, #loc90])
#loc207 = loc(fused[#loc91, #loc92])
#loc208 = loc(fused[#loc93, #loc94])
#loc209 = loc(fused[#loc96, #loc95])
#loc210 = loc(fused[#loc97, #loc98])
#loc211 = loc(fused[#loc100, #loc94])
#loc212 = loc(fused[#loc102, #loc101])
#loc213 = loc(fused[#loc106, #loc105])
#loc214 = loc(fused[#loc108, #loc107])
#loc215 = loc(fused[#loc115, #loc116])
#loc216 = loc(fused[#loc117, #loc118])
#loc217 = loc(fused[#loc120, #loc119])
#loc218 = loc(fused[#loc121, #loc122])
#loc219 = loc(fused[#loc124, #loc122])
#loc220 = loc(fused[#loc125, #loc126])
#loc221 = loc(fused[#loc127, #loc128])
#loc222 = loc(fused[#loc131, #loc132])
#loc223 = loc(fused[#loc130, #loc132])
#loc224 = loc(fused[#loc129, #loc128])
#loc225 = loc(fused[#loc133, #loc134])
#loc226 = loc(fused[#loc135, #loc136])
#loc227 = loc(fused[#loc138, #loc134])
#loc228 = loc(fused[#loc143, #loc144])
#loc229 = loc(fused[#loc145, #loc146])
#loc230 = loc(fused[#loc147, #loc148])
#loc231 = loc(fused[#loc150, #loc149])
#loc232 = loc(fused[#loc151, #loc152])
#loc233 = loc(fused[#loc154, #loc148])
#loc234 = loc(fused[#loc156, #loc155])
#loc235 = loc(fused[#loc160, #loc159])
#loc236 = loc(fused[#loc162, #loc161])
