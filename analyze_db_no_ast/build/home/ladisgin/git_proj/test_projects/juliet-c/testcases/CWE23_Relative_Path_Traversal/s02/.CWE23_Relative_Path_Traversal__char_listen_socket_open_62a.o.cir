!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_629badSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc70)
  cir.func private  @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc71)
  cir.func private  @close(!s32i) -> !s32i loc(#loc72)
  cir.func  @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_623badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc74)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc75)
    %2 = cir.const #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc75)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc75)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc13)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc76)
    cir.call @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_629badSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc15)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc78)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc21)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc22)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc79)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc23)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc24)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc80)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc25)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc81)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc30)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc31)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc32)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc83)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc34)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc35)
        } loc(#loc84)
      } loc(#loc82)
    } loc(#loc77)
    cir.return loc(#loc8)
  } loc(#loc73)
  cir.func private  @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_6213goodG2BSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc85)
  cir.func internal private  @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_62L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc87)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc88)
    %2 = cir.const #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc88)
    cir.store %2, %1 : !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc88)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc44)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc89)
    cir.call @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_6213goodG2BSourceERPc(%0) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc46)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc91)
      %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc51)
      %6 = cir.const #cir.int<2> : !s32i loc(#loc52)
      %7 = cir.const #cir.int<64> : !s32i loc(#loc53)
      %8 = cir.binop(or, %6, %7) : !s32i loc(#loc92)
      %9 = cir.const #cir.int<256> : !s32i loc(#loc54)
      %10 = cir.const #cir.int<128> : !s32i loc(#loc55)
      %11 = cir.binop(or, %9, %10) : !s32i loc(#loc93)
      %12 = cir.call @open(%5, %8, %11) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc56)
      cir.store %12, %4 : !s32i, !cir.ptr<!s32i> loc(#loc94)
      cir.scope {
        %13 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc61)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc62)
        %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc63)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc96)
        cir.if %16 {
          %17 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc65)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc66)
        } loc(#loc97)
      } loc(#loc95)
    } loc(#loc90)
    cir.return loc(#loc39)
  } loc(#loc86)
  cir.func  @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_624goodEv() extra(#fn_attr) {
    cir.call @_ZN57CWE23_Relative_Path_Traversal__char_listen_socket_open_62L7goodG2BEv() : () -> () loc(#loc69)
    cir.return loc(#loc68)
  } loc(#loc98)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE23_Relative_Path_Traversal/s02/CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":61:1)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":61:28)
#loc3 = loc("/usr/include/fcntl.h":209:1)
#loc4 = loc("/usr/include/fcntl.h":209:56)
#loc5 = loc("/usr/include/unistd.h":358:1)
#loc6 = loc("/usr/include/unistd.h":358:27)
#loc7 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":63:1)
#loc8 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":78:1)
#loc9 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":65:5)
#loc10 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":65:12)
#loc11 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":66:5)
#loc12 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":66:37)
#loc13 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":67:12)
#loc14 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":67:5)
#loc15 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":68:5)
#loc16 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":69:5)
#loc17 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":77:5)
#loc18 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":70:9)
#loc19 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":70:13)
#loc20 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":72:25)
#loc21 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":72:31)
#loc22 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":72:38)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":72:47)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":72:55)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":72:20)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":72:9)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":72:63)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":73:9)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":76:9)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":73:13)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":73:26)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":73:25)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":74:9)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":75:19)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":75:13)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":85:1)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":85:32)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":87:1)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":102:1)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":89:5)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":89:12)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":90:5)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":90:37)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":91:12)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":91:5)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":92:5)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":93:5)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":101:5)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":94:9)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":94:13)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":96:25)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":96:31)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":96:38)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":96:47)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":96:55)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":96:20)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":96:9)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":96:63)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":97:9)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":100:9)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":97:13)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":97:26)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":97:25)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":98:9)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":99:19)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":99:13)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":104:1)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":107:1)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_listen_socket_open_62a.cpp":106:5)
#loc70 = loc(fused[#loc1, #loc2])
#loc71 = loc(fused[#loc3, #loc4])
#loc72 = loc(fused[#loc5, #loc6])
#loc73 = loc(fused[#loc7, #loc8])
#loc74 = loc(fused[#loc9, #loc10])
#loc75 = loc(fused[#loc11, #loc12])
#loc76 = loc(fused[#loc14, #loc13])
#loc77 = loc(fused[#loc16, #loc17])
#loc78 = loc(fused[#loc18, #loc19])
#loc79 = loc(fused[#loc21, #loc22])
#loc80 = loc(fused[#loc23, #loc24])
#loc81 = loc(fused[#loc26, #loc27])
#loc82 = loc(fused[#loc28, #loc29])
#loc83 = loc(fused[#loc30, #loc31])
#loc84 = loc(fused[#loc33, #loc29])
#loc85 = loc(fused[#loc36, #loc37])
#loc86 = loc(fused[#loc38, #loc39])
#loc87 = loc(fused[#loc40, #loc41])
#loc88 = loc(fused[#loc42, #loc43])
#loc89 = loc(fused[#loc45, #loc44])
#loc90 = loc(fused[#loc47, #loc48])
#loc91 = loc(fused[#loc49, #loc50])
#loc92 = loc(fused[#loc52, #loc53])
#loc93 = loc(fused[#loc54, #loc55])
#loc94 = loc(fused[#loc57, #loc58])
#loc95 = loc(fused[#loc59, #loc60])
#loc96 = loc(fused[#loc61, #loc62])
#loc97 = loc(fused[#loc64, #loc60])
#loc98 = loc(fused[#loc67, #loc68])
