!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_console_execl_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private @__const.goodG2B.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc133)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_console_execl_32_bad.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc134)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc135)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc136)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc137)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc138)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc13)
  cir.func private @execl(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc139)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"/bin/sh\00" : !cir.array<!s8i x 8>> : !cir.array<!s8i x 8> {alignment = 1 : i64} loc(#loc16)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc17)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_execl_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc141)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc142)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc143)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc134)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc142)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc143)
    %4 = cir.get_global @__const.CWE78_OS_Command_Injection__char_console_execl_32_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc134)
    cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc134)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc26)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc144)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc146)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc31)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
      cir.scope {
        %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc148)
        %12 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc37)
        %13 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
        %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc37)
        cir.store %14, %11 : !u64i, !cir.ptr<!u64i> loc(#loc148)
        cir.scope {
          %15 = cir.const #cir.int<100> : !s32i loc(#loc41)
          %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc41)
          %17 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc42)
          %18 = cir.binop(sub, %16, %17) : !u64i loc(#loc150)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc43)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc43)
          %21 = cir.cmp(gt, %18, %20) : !u64i, !cir.bool loc(#loc151)
          cir.if %21 {
            cir.scope {
              %22 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
              %23 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc48)
              %24 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %23 : !u64i), !cir.ptr<!s8i> loc(#loc49)
              %25 = cir.const #cir.int<100> : !s32i loc(#loc50)
              %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc50)
              %27 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc51)
              %28 = cir.binop(sub, %26, %27) : !u64i loc(#loc154)
              %29 = cir.cast(integral, %28 : !u64i), !s32i loc(#loc154)
              %30 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc137)
              %31 = cir.load %30 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc52)
              %32 = cir.call @fgets(%24, %29, %31) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc53)
              %33 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc54)
              %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc54)
              %35 = cir.cmp(ne, %32, %34) : !cir.ptr<!s8i>, !cir.bool loc(#loc155)
              cir.if %35 {
                %36 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc58)
                %37 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
                %38 = cir.call @strlen(%37) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc58)
                cir.store %38, %11 : !u64i, !cir.ptr<!u64i> loc(#loc157)
                cir.scope {
                  %39 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc64)
                  %40 = cir.const #cir.int<0> : !s32i loc(#loc65)
                  %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc65)
                  %42 = cir.cmp(gt, %39, %41) : !u64i, !cir.bool loc(#loc159)
                  %43 = cir.ternary(%42, true {
                    %44 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
                    %45 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc68)
                    %46 = cir.const #cir.int<1> : !s32i loc(#loc69)
                    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc69)
                    %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc160)
                    %49 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %48 : !u64i), !cir.ptr<!s8i> loc(#loc70)
                    %50 = cir.load %49 : !cir.ptr<!s8i>, !s8i loc(#loc67)
                    %51 = cir.cast(integral, %50 : !s8i), !s32i loc(#loc67)
                    %52 = cir.const #cir.int<10> : !s32i loc(#loc71)
                    %53 = cir.cmp(eq, %51, %52) : !s32i, !cir.bool loc(#loc161)
                    %54 = cir.ternary(%53, true {
                      %55 = cir.const #true loc(#loc66)
                      cir.yield %55 : !cir.bool loc(#loc66)
                    }, false {
                      %55 = cir.const #false loc(#loc66)
                      cir.yield %55 : !cir.bool loc(#loc66)
                    }) : (!cir.bool) -> !cir.bool loc(#loc66)
                    cir.yield %54 : !cir.bool loc(#loc66)
                  }, false {
                    %44 = cir.const #false loc(#loc66)
                    cir.yield %44 : !cir.bool loc(#loc66)
                  }) : (!cir.bool) -> !cir.bool loc(#loc66)
                  cir.if %43 {
                    %44 = cir.const #cir.int<0> : !s32i loc(#loc73)
                    %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc73)
                    %46 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
                    %47 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc75)
                    %48 = cir.const #cir.int<1> : !s32i loc(#loc76)
                    %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc76)
                    %50 = cir.binop(sub, %47, %49) : !u64i loc(#loc163)
                    %51 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %50 : !u64i), !cir.ptr<!s8i> loc(#loc77)
                    cir.store %45, %51 : !s8i, !cir.ptr<!s8i> loc(#loc164)
                  } loc(#loc162)
                } loc(#loc158)
              } else {
                %36 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc13)
                %37 = cir.cast(array_to_ptrdecay, %36 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc13)
                cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc78)
                %38 = cir.const #cir.int<0> : !s32i loc(#loc79)
                %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc79)
                %40 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
                %41 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc81)
                %42 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc82)
                cir.store %39, %42 : !s8i, !cir.ptr<!s8i> loc(#loc165)
              } loc(#loc156)
            } loc(#loc153)
          } loc(#loc152)
        } loc(#loc149)
      } loc(#loc147)
      %9 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc84)
      cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc166)
    } loc(#loc145)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc168)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc89)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc168)
      %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc16)
      %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc16)
      %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc91)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc91)
      %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc17)
      %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc17)
      %15 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
      %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc93)
      %17 = cir.call @execl(%10, %12, %14, %15, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc94)
    } loc(#loc167)
    cir.return loc(#loc19)
  } loc(#loc140)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_execl_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc170)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc97)
    cir.return loc(#loc96)
  } loc(#loc169)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc171)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc101)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc173)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc174)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc175)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc133)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc174)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc175)
    %4 = cir.get_global @__const.goodG2B.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc133)
    cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc133)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc110)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc176)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc178)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc178)
      %9 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc117)
      %10 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
      %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc101)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc101)
      %13 = cir.call @strcat(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc117)
      %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
      %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc120)
      cir.store %14, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc179)
    } loc(#loc177)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc181)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc181)
      %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc127)
      %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc127)
      %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 8>> loc(#loc128)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc128)
      %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc129)
      %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc129)
      %15 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
      %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc131)
      %17 = cir.call @execl(%10, %12, %14, %15, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc132)
    } loc(#loc180)
    cir.return loc(#loc103)
  } loc(#loc172)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_console_execl_32.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":99:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":99:28)
#loc3 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":50:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":50:28)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("/usr/include/stdio.h":149:1)
#loc10 = loc("/usr/include/stdio.h":149:14)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":73:31)
#loc14 = loc("/usr/include/unistd.h":594:1)
#loc15 = loc("/usr/include/unistd.h":595:14)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":85:15)
#loc17 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":85:51)
#loc18 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":45:1)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":87:1)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":47:5)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":47:12)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":48:5)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":48:25)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":49:5)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":49:25)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":51:12)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":51:5)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":52:5)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":80:5)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":53:9)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":53:24)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":53:23)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":54:9)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":78:9)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":56:13)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":56:41)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":56:30)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":56:37)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":58:13)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":77:13)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":58:17)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":58:21)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":58:31)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":59:13)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":61:17)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":76:17)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":61:27)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":61:32)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":61:31)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":61:47)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":61:51)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":61:61)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":61:21)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":61:71)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":62:17)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":70:17)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":72:17)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":65:31)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":65:38)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":65:21)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":65:42)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":66:21)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":69:21)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":66:25)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":66:35)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":66:37)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":66:40)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":66:45)
#loc69 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":66:53)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":66:54)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":66:59)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":67:21)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":68:43)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":68:25)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":68:30)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":68:38)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":68:39)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":73:21)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":75:37)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":75:21)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":75:26)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":75:33)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":79:21)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":79:10)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":79:9)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":81:5)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":86:5)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":82:9)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":82:24)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":82:23)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":85:33)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":85:65)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":85:79)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":85:9)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":115:1)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":118:1)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":117:5)
#loc98 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":117:13)
#loc99 = loc("/usr/include/string.h":149:1)
#loc100 = loc("/usr/include/string.h":150:14)
#loc101 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":104:22)
#loc102 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":94:1)
#loc103 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":113:1)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":96:5)
#loc105 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":96:12)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":97:5)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":97:25)
#loc108 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":98:5)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":98:25)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":100:12)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":100:5)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":101:5)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":106:5)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":102:9)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":102:24)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":102:23)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":104:9)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":104:16)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":105:21)
#loc120 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":105:10)
#loc121 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":105:9)
#loc122 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":107:5)
#loc123 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":112:5)
#loc124 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":108:9)
#loc125 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":108:24)
#loc126 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":108:23)
#loc127 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":111:15)
#loc128 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":111:33)
#loc129 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":111:51)
#loc130 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":111:65)
#loc131 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":111:79)
#loc132 = loc("CWE78_OS_Command_Injection__char_console_execl_32.c":111:9)
#loc133 = loc(fused[#loc1, #loc2])
#loc134 = loc(fused[#loc3, #loc4])
#loc135 = loc(fused[#loc5, #loc6])
#loc136 = loc(fused[#loc7, #loc8])
#loc137 = loc(fused[#loc9, #loc10])
#loc138 = loc(fused[#loc11, #loc12])
#loc139 = loc(fused[#loc14, #loc15])
#loc140 = loc(fused[#loc18, #loc19])
#loc141 = loc(fused[#loc20, #loc21])
#loc142 = loc(fused[#loc22, #loc23])
#loc143 = loc(fused[#loc24, #loc25])
#loc144 = loc(fused[#loc27, #loc26])
#loc145 = loc(fused[#loc28, #loc29])
#loc146 = loc(fused[#loc30, #loc31])
#loc147 = loc(fused[#loc33, #loc34])
#loc148 = loc(fused[#loc35, #loc36])
#loc149 = loc(fused[#loc39, #loc40])
#loc150 = loc(fused[#loc41, #loc42])
#loc151 = loc(fused[#loc41, #loc43])
#loc152 = loc(fused[#loc44, #loc40])
#loc153 = loc(fused[#loc45, #loc46])
#loc154 = loc(fused[#loc50, #loc51])
#loc155 = loc(fused[#loc53, #loc54])
#loc156 = loc(fused[#loc55, #loc56, #loc57, #loc46])
#loc157 = loc(fused[#loc60, #loc61])
#loc158 = loc(fused[#loc62, #loc63])
#loc159 = loc(fused[#loc64, #loc65])
#loc160 = loc(fused[#loc68, #loc69])
#loc161 = loc(fused[#loc67, #loc71])
#loc162 = loc(fused[#loc72, #loc63])
#loc163 = loc(fused[#loc75, #loc76])
#loc164 = loc(fused[#loc74, #loc73])
#loc165 = loc(fused[#loc80, #loc79])
#loc166 = loc(fused[#loc85, #loc83])
#loc167 = loc(fused[#loc86, #loc87])
#loc168 = loc(fused[#loc88, #loc89])
#loc169 = loc(fused[#loc95, #loc96])
#loc170 = loc(fused[#loc97, #loc98])
#loc171 = loc(fused[#loc99, #loc100])
#loc172 = loc(fused[#loc102, #loc103])
#loc173 = loc(fused[#loc104, #loc105])
#loc174 = loc(fused[#loc106, #loc107])
#loc175 = loc(fused[#loc108, #loc109])
#loc176 = loc(fused[#loc111, #loc110])
#loc177 = loc(fused[#loc112, #loc113])
#loc178 = loc(fused[#loc114, #loc115])
#loc179 = loc(fused[#loc121, #loc119])
#loc180 = loc(fused[#loc122, #loc123])
#loc181 = loc(fused[#loc124, #loc125])
