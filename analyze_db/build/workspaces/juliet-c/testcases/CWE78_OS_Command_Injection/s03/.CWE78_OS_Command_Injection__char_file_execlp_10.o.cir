!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_execlp_10.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B2.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc132)
  cir.global "private" constant cir_private @__const.goodG2B1.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc133)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_file_execlp_10_bad.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc134)
  cir.global "private" external @globalTrue : !s32i {alignment = 4 : i64} loc(#loc135)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc136)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc137)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"/tmp/file.txt\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc13)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"r\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc14)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc138)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc139)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc19)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc140)
  cir.func private @execlp(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc141)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"sh\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc24)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc25)
  cir.func no_proto @CWE78_OS_Command_Injection__char_file_execlp_10_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc143)
    %1 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile"] {alignment = 8 : i64} loc(#loc144)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc145)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc134)
    %4 = cir.get_global @__const.CWE78_OS_Command_Injection__char_file_execlp_10_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc134)
    cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc134)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc34)
    cir.store %5, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
    cir.br ^bb1 loc(#loc147)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc135)
    %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc38)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc38)
    cir.brcond %8 ^bb2, ^bb17 loc(#loc148)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc149)
  ^bb3:  // pred: ^bb2
    %9 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc42)
    %10 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
    %11 = cir.call @strlen(%10) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc42)
    cir.store %11, %0 : !u64i, !cir.ptr<!u64i> loc(#loc143)
    cir.br ^bb4 loc(#loc150)
  ^bb4:  // pred: ^bb3
    %12 = cir.const #cir.int<100> : !s32i loc(#loc46)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc46)
    %14 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc47)
    %15 = cir.binop(sub, %13, %14) : !u64i loc(#loc151)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc48)
    %18 = cir.cmp(gt, %15, %17) : !u64i, !cir.bool loc(#loc152)
    cir.brcond %18 ^bb5, ^bb14 loc(#loc153)
  ^bb5:  // pred: ^bb4
    %19 = cir.get_global @fopen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE>>> loc(#loc50)
    %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc13)
    %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc13)
    %22 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc14)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc14)
    %24 = cir.call @fopen(%21, %23) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc50)
    cir.store %24, %1 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc154)
    cir.br ^bb6 loc(#loc155)
  ^bb6:  // pred: ^bb5
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc55)
    %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc56)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc56)
    %28 = cir.cmp(ne, %25, %27) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc156)
    cir.brcond %28 ^bb7, ^bb12 loc(#loc157)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc158)
  ^bb8:  // pred: ^bb7
    %29 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
    %30 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc61)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!s8i>, %30 : !u64i), !cir.ptr<!s8i> loc(#loc62)
    %32 = cir.const #cir.int<100> : !s32i loc(#loc63)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc63)
    %34 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc64)
    %35 = cir.binop(sub, %33, %34) : !u64i loc(#loc159)
    %36 = cir.cast(integral, %35 : !u64i), !s32i loc(#loc159)
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc65)
    %38 = cir.call @fgets(%31, %36, %37) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc66)
    %39 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc67)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc67)
    %41 = cir.cmp(eq, %38, %40) : !cir.ptr<!s8i>, !cir.bool loc(#loc160)
    cir.brcond %41 ^bb9, ^bb10 loc(#loc161)
  ^bb9:  // pred: ^bb8
    %42 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc19)
    %43 = cir.cast(array_to_ptrdecay, %42 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc19)
    cir.call @printLine(%43) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %44 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %45 = cir.cast(integral, %44 : !s32i), !s8i loc(#loc70)
    %46 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
    %47 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc72)
    %48 = cir.ptr_stride(%46 : !cir.ptr<!s8i>, %47 : !u64i), !cir.ptr<!s8i> loc(#loc73)
    cir.store %45, %48 : !s8i, !cir.ptr<!s8i> loc(#loc162)
    cir.br ^bb10 loc(#loc59)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc59)
  ^bb11:  // pred: ^bb10
    %49 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc74)
    %50 = cir.call @fclose(%49) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc75)
    cir.br ^bb12 loc(#loc54)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc54)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc45)
  ^bb14:  // 2 preds: ^bb4, ^bb13
    cir.br ^bb15 loc(#loc45)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc41)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc37)
  ^bb17:  // 2 preds: ^bb1, ^bb16
    cir.br ^bb18 loc(#loc37)
  ^bb18:  // pred: ^bb17
    %51 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc24)
    %52 = cir.cast(array_to_ptrdecay, %51 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc24)
    %53 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc76)
    %54 = cir.cast(array_to_ptrdecay, %53 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc76)
    %55 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc25)
    %56 = cir.cast(array_to_ptrdecay, %55 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc25)
    %57 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    %58 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc78)
    %59 = cir.call @execlp(%52, %54, %56, %57, %58) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc79)
    cir.return loc(#loc27)
  } loc(#loc142)
  cir.func no_proto @CWE78_OS_Command_Injection__char_file_execlp_10_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc164)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc82)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc165)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc84)
    cir.return loc(#loc81)
  } loc(#loc163)
  cir.global "private" external @globalFalse : !s32i {alignment = 4 : i64} loc(#loc166)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc88)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc167)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc91)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc169)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc133)
    %2 = cir.get_global @__const.goodG2B1.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc133)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc133)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc96)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc170)
    cir.br ^bb1 loc(#loc171)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalFalse : !cir.ptr<!s32i> loc(#loc166)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc100)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc172)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc88)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    cir.br ^bb4 loc(#loc102)
  ^bb3:  // pred: ^bb1
    %9 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc105)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
    %11 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc91)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc91)
    %13 = cir.call @strcat(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc105)
    cir.br ^bb4 loc(#loc99)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc99)
  ^bb5:  // pred: ^bb4
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc107)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc107)
    %16 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc108)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc108)
    %18 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc109)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc109)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
    %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc111)
    %22 = cir.call @execlp(%15, %17, %19, %20, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc112)
    cir.return loc(#loc93)
  } loc(#loc168)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc174)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc132)
    %2 = cir.get_global @__const.goodG2B2.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc132)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc132)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc117)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc175)
    cir.br ^bb1 loc(#loc176)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalTrue : !cir.ptr<!s32i> loc(#loc135)
    %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc121)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc177)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc123)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
    %9 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc125)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc125)
    %11 = cir.call @strcat(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc123)
    cir.br ^bb3 loc(#loc120)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc120)
  ^bb4:  // pred: ^bb3
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc126)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc126)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc127)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc127)
    %16 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc128)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc128)
    %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc130)
    %20 = cir.call @execlp(%13, %15, %17, %18, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc131)
    cir.return loc(#loc114)
  } loc(#loc173)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s03/CWE78_OS_Command_Injection__char_file_execlp_10.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":116:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":116:28)
#loc3 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":94:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":94:28)
#loc5 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":54:5)
#loc6 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":54:28)
#loc7 = loc("../../../testcasesupport/std_testcase.h":116:1)
#loc8 = loc("../../../testcasesupport/std_testcase.h":116:12)
#loc9 = loc("/usr/include/string.h":407:1)
#loc10 = loc("/usr/include/string.h":408:33)
#loc11 = loc("/usr/include/stdio.h":264:1)
#loc12 = loc("/usr/include/stdio.h":266:3)
#loc13 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":65:31)
#loc14 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":65:41)
#loc15 = loc("/usr/include/stdio.h":654:1)
#loc16 = loc("/usr/include/stdio.h":655:59)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc19 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":71:35)
#loc20 = loc("/usr/include/stdio.h":184:1)
#loc21 = loc("/usr/include/stdio.h":184:36)
#loc22 = loc("/usr/include/unistd.h":605:1)
#loc23 = loc("/usr/include/unistd.h":606:14)
#loc24 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":83:12)
#loc25 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":83:38)
#loc26 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":51:1)
#loc27 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":84:1)
#loc28 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":60:13)
#loc29 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":60:41)
#loc30 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":61:13)
#loc31 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":61:20)
#loc32 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":53:5)
#loc33 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":53:12)
#loc34 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":55:12)
#loc35 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":55:5)
#loc36 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":56:5)
#loc37 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":79:5)
#loc38 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":56:8)
#loc39 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":57:5)
#loc40 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":58:9)
#loc41 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":78:9)
#loc42 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":60:30)
#loc43 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":60:37)
#loc44 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":63:13)
#loc45 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":77:13)
#loc46 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":63:17)
#loc47 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":63:21)
#loc48 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":63:31)
#loc49 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":64:13)
#loc50 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":65:25)
#loc51 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":65:17)
#loc52 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":65:44)
#loc53 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":66:17)
#loc54 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":76:17)
#loc55 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":66:21)
#loc56 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":66:30)
#loc57 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":67:17)
#loc58 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":69:21)
#loc59 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":74:21)
#loc60 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":69:31)
#loc61 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":69:36)
#loc62 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":69:35)
#loc63 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":69:51)
#loc64 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":69:55)
#loc65 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":69:65)
#loc66 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":69:25)
#loc67 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":69:75)
#loc68 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":70:21)
#loc69 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":71:25)
#loc70 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":73:41)
#loc71 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":73:25)
#loc72 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":73:30)
#loc73 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":73:37)
#loc74 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":75:28)
#loc75 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":75:21)
#loc76 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":83:25)
#loc77 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":83:52)
#loc78 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":83:66)
#loc79 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":83:5)
#loc80 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":129:1)
#loc81 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":133:1)
#loc82 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":131:5)
#loc83 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":131:14)
#loc84 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":132:5)
#loc85 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":132:14)
#loc86 = loc("../../../testcasesupport/std_testcase.h":117:1)
#loc87 = loc("../../../testcasesupport/std_testcase.h":117:12)
#loc88 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":99:19)
#loc89 = loc("/usr/include/string.h":149:1)
#loc90 = loc("/usr/include/string.h":150:14)
#loc91 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":104:22)
#loc92 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":91:1)
#loc93 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":110:1)
#loc94 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":93:5)
#loc95 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":93:12)
#loc96 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":95:12)
#loc97 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":95:5)
#loc98 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":96:5)
#loc99 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":105:5)
#loc100 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":96:8)
#loc101 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":97:5)
#loc102 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":100:5)
#loc103 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":102:5)
#loc104 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":99:9)
#loc105 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":104:9)
#loc106 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":104:16)
#loc107 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":109:12)
#loc108 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":109:25)
#loc109 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":109:38)
#loc110 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":109:52)
#loc111 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":109:66)
#loc112 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":109:5)
#loc113 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":113:1)
#loc114 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":127:1)
#loc115 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":115:5)
#loc116 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":115:12)
#loc117 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":117:12)
#loc118 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":117:5)
#loc119 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":118:5)
#loc120 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":122:5)
#loc121 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":118:8)
#loc122 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":119:5)
#loc123 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":121:9)
#loc124 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":121:16)
#loc125 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":121:22)
#loc126 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":126:12)
#loc127 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":126:25)
#loc128 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":126:38)
#loc129 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":126:52)
#loc130 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":126:66)
#loc131 = loc("CWE78_OS_Command_Injection__char_file_execlp_10.c":126:5)
#loc132 = loc(fused[#loc1, #loc2])
#loc133 = loc(fused[#loc3, #loc4])
#loc134 = loc(fused[#loc5, #loc6])
#loc135 = loc(fused[#loc7, #loc8])
#loc136 = loc(fused[#loc9, #loc10])
#loc137 = loc(fused[#loc11, #loc12])
#loc138 = loc(fused[#loc15, #loc16])
#loc139 = loc(fused[#loc17, #loc18])
#loc140 = loc(fused[#loc20, #loc21])
#loc141 = loc(fused[#loc22, #loc23])
#loc142 = loc(fused[#loc26, #loc27])
#loc143 = loc(fused[#loc28, #loc29])
#loc144 = loc(fused[#loc30, #loc31])
#loc145 = loc(fused[#loc32, #loc33])
#loc146 = loc(fused[#loc35, #loc34])
#loc147 = loc(fused[#loc36, #loc37])
#loc148 = loc(fused[#loc39, #loc37])
#loc149 = loc(fused[#loc40, #loc41])
#loc150 = loc(fused[#loc44, #loc45])
#loc151 = loc(fused[#loc46, #loc47])
#loc152 = loc(fused[#loc46, #loc48])
#loc153 = loc(fused[#loc49, #loc45])
#loc154 = loc(fused[#loc51, #loc52])
#loc155 = loc(fused[#loc53, #loc54])
#loc156 = loc(fused[#loc55, #loc56])
#loc157 = loc(fused[#loc57, #loc54])
#loc158 = loc(fused[#loc58, #loc59])
#loc159 = loc(fused[#loc63, #loc64])
#loc160 = loc(fused[#loc66, #loc67])
#loc161 = loc(fused[#loc68, #loc59])
#loc162 = loc(fused[#loc71, #loc70])
#loc163 = loc(fused[#loc80, #loc81])
#loc164 = loc(fused[#loc82, #loc83])
#loc165 = loc(fused[#loc84, #loc85])
#loc166 = loc(fused[#loc86, #loc87])
#loc167 = loc(fused[#loc89, #loc90])
#loc168 = loc(fused[#loc92, #loc93])
#loc169 = loc(fused[#loc94, #loc95])
#loc170 = loc(fused[#loc97, #loc96])
#loc171 = loc(fused[#loc98, #loc99])
#loc172 = loc(fused[#loc101, #loc102, #loc103, #loc99])
#loc173 = loc(fused[#loc113, #loc114])
#loc174 = loc(fused[#loc115, #loc116])
#loc175 = loc(fused[#loc118, #loc117])
#loc176 = loc(fused[#loc119, #loc120])
#loc177 = loc(fused[#loc122, #loc120])
