!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc111)
  cir.func private  @exit(!s32i) extra(#fn_attr) loc(#loc112)
  cir.func private  @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc113)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"A String\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc7)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc114)
  cir.func private  @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc115)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"New String\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> {alignment = 1 : i64} loc(#loc12)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc116)
  cir.func no_proto  @CWE401_Memory_Leak__malloc_realloc_char_01_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc119)
      %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc21)
      %2 = cir.const #cir.int<100> : !s32i loc(#loc22)
      %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc22)
      %4 = cir.const #cir.int<1> : !u64i loc(#loc120)
      %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc121)
      %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc21)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc122)
      cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc119)
      cir.scope {
        %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
        %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc28)
        %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc28)
        %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !s32i loc(#loc124)
        %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc29)
        cir.if %27 {
          %28 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc31)
          %29 = cir.const #cir.int<1> : !s32i loc(#loc32)
          %30 = cir.unary(minus, %29) : !s32i, !s32i loc(#loc33)
          cir.call @exit(%30) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
        } loc(#loc125)
      } loc(#loc123)
      %8 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc34)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
      %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc7)
      %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc7)
      %12 = cir.call @strcpy(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc34)
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
      cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc37)
      %14 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc38)
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
      %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc39)
      %17 = cir.const #cir.int<130000> : !s32i loc(#loc40)
      %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc40)
      %19 = cir.const #cir.int<1> : !u64i loc(#loc126)
      %20 = cir.binop(mul, %18, %19) : !u64i loc(#loc127)
      %21 = cir.call @realloc(%16, %20) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc38)
      %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc128)
      cir.store %22, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc129)
      cir.scope {
        %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
        %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc49)
        %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc49)
        %26 = cir.cmp(ne, %23, %25) : !cir.ptr<!s8i>, !s32i loc(#loc131)
        %27 = cir.cast(int_to_bool, %26 : !s32i), !cir.bool loc(#loc50)
        cir.if %27 {
          %28 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc52)
          %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
          %30 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc12)
          %31 = cir.cast(array_to_ptrdecay, %30 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc12)
          %32 = cir.call @strcpy(%29, %31) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc52)
          %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
          cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc55)
          %34 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc56)
          %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
          %36 = cir.cast(bitcast, %35 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc57)
          cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc56)
        } loc(#loc132)
      } loc(#loc130)
    } loc(#loc118)
    cir.return loc(#loc16)
  } loc(#loc117)
  cir.func no_proto  @CWE401_Memory_Leak__malloc_realloc_char_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc134)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc60)
    cir.return loc(#loc59)
  } loc(#loc133)
  cir.func no_proto internal private  @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc137)
      %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc138)
      %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc70)
      %3 = cir.const #cir.int<100> : !s32i loc(#loc71)
      %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc71)
      %5 = cir.const #cir.int<1> : !u64i loc(#loc139)
      %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc140)
      %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc70)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc141)
      cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc137)
      cir.scope {
        %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
        %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc77)
        %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc77)
        %30 = cir.cmp(eq, %27, %29) : !cir.ptr<!s8i>, !s32i loc(#loc143)
        %31 = cir.cast(int_to_bool, %30 : !s32i), !cir.bool loc(#loc78)
        cir.if %31 {
          %32 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc80)
          %33 = cir.const #cir.int<1> : !s32i loc(#loc81)
          %34 = cir.unary(minus, %33) : !s32i, !s32i loc(#loc82)
          cir.call @exit(%34) : (!s32i) -> () extra(#fn_attr) loc(#loc80)
        } loc(#loc144)
      } loc(#loc142)
      %9 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc83)
      %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
      %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc85)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc85)
      %13 = cir.call @strcpy(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc83)
      %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc86)
      cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc87)
      %15 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc88)
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc89)
      %18 = cir.const #cir.int<130000> : !s32i loc(#loc90)
      %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc90)
      %20 = cir.const #cir.int<1> : !u64i loc(#loc145)
      %21 = cir.binop(mul, %19, %20) : !u64i loc(#loc146)
      %22 = cir.call @realloc(%17, %21) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc88)
      %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc147)
      cir.store %23, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc148)
      cir.scope {
        %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
        %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc99)
        %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc99)
        %30 = cir.cmp(ne, %27, %29) : !cir.ptr<!s8i>, !s32i loc(#loc150)
        %31 = cir.cast(int_to_bool, %30 : !s32i), !cir.bool loc(#loc100)
        cir.if %31 {
          %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
          cir.store %32, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
          %33 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc104)
          %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
          %35 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc106)
          %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc106)
          %37 = cir.call @strcpy(%34, %36) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc104)
          %38 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
          cir.call @printLine(%38) : (!cir.ptr<!s8i>) -> () loc(#loc108)
        } loc(#loc151)
      } loc(#loc149)
      %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc109)
      %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
      %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc110)
      cir.call @free(%26) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc109)
    } loc(#loc136)
    cir.return loc(#loc63)
  } loc(#loc135)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_char_01.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":30:22)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("/usr/include/stdlib.h":683:1)
#loc11 = loc("/usr/include/stdlib.h":684:14)
#loc12 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":37:26)
#loc13 = loc("/usr/include/stdlib.h":687:1)
#loc14 = loc("/usr/include/stdlib.h":687:32)
#loc15 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":24:1)
#loc16 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":42:1)
#loc17 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":26:5)
#loc18 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":41:5)
#loc19 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":27:9)
#loc20 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":27:54)
#loc21 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":27:31)
#loc22 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":27:38)
#loc23 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":27:42)
#loc24 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":27:53)
#loc25 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":28:9)
#loc26 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":28:37)
#loc27 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":28:13)
#loc28 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":28:21)
#loc29 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":28:18)
#loc30 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":28:27)
#loc31 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":28:28)
#loc32 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":28:34)
#loc33 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":28:33)
#loc34 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":30:9)
#loc35 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":30:16)
#loc36 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":31:19)
#loc37 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":31:9)
#loc38 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":33:24)
#loc39 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":33:32)
#loc40 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":33:39)
#loc41 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":33:47)
#loc42 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":33:58)
#loc43 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":33:38)
#loc44 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":33:59)
#loc45 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":33:9)
#loc46 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":34:9)
#loc47 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":40:9)
#loc48 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":34:13)
#loc49 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":34:21)
#loc50 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":34:18)
#loc51 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":35:9)
#loc52 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":37:13)
#loc53 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":37:20)
#loc54 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":38:23)
#loc55 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":38:13)
#loc56 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":39:13)
#loc57 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":39:18)
#loc58 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":71:1)
#loc59 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":74:1)
#loc60 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":73:5)
#loc61 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":73:11)
#loc62 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":48:1)
#loc63 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":69:1)
#loc64 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":50:5)
#loc65 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":68:5)
#loc66 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":51:9)
#loc67 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":51:54)
#loc68 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":53:9)
#loc69 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":53:16)
#loc70 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":51:31)
#loc71 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":51:38)
#loc72 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":51:42)
#loc73 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":51:53)
#loc74 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":52:9)
#loc75 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":52:37)
#loc76 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":52:13)
#loc77 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":52:21)
#loc78 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":52:18)
#loc79 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":52:27)
#loc80 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":52:28)
#loc81 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":52:34)
#loc82 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":52:33)
#loc83 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":55:9)
#loc84 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":55:16)
#loc85 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":55:22)
#loc86 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":56:19)
#loc87 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":56:9)
#loc88 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":57:27)
#loc89 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":57:35)
#loc90 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":57:42)
#loc91 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":57:50)
#loc92 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":57:61)
#loc93 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":57:41)
#loc94 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":57:62)
#loc95 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":57:9)
#loc96 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":60:9)
#loc97 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":66:9)
#loc98 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":60:13)
#loc99 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":60:24)
#loc100 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":60:21)
#loc101 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":61:9)
#loc102 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":62:20)
#loc103 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":62:13)
#loc104 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":64:13)
#loc105 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":64:20)
#loc106 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":64:26)
#loc107 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":65:23)
#loc108 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":65:13)
#loc109 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":67:9)
#loc110 = loc("CWE401_Memory_Leak__malloc_realloc_char_01.c":67:14)
#loc111 = loc(fused[#loc1, #loc2])
#loc112 = loc(fused[#loc3, #loc4])
#loc113 = loc(fused[#loc5, #loc6])
#loc114 = loc(fused[#loc8, #loc9])
#loc115 = loc(fused[#loc10, #loc11])
#loc116 = loc(fused[#loc13, #loc14])
#loc117 = loc(fused[#loc15, #loc16])
#loc118 = loc(fused[#loc17, #loc18])
#loc119 = loc(fused[#loc19, #loc20])
#loc120 = loc(fused[#loc23, #loc24])
#loc121 = loc(fused[#loc22, #loc24])
#loc122 = loc(fused[#loc21, #loc20])
#loc123 = loc(fused[#loc25, #loc26])
#loc124 = loc(fused[#loc27, #loc28])
#loc125 = loc(fused[#loc30, #loc26])
#loc126 = loc(fused[#loc41, #loc42])
#loc127 = loc(fused[#loc43, #loc42])
#loc128 = loc(fused[#loc38, #loc44])
#loc129 = loc(fused[#loc45, #loc44])
#loc130 = loc(fused[#loc46, #loc47])
#loc131 = loc(fused[#loc48, #loc49])
#loc132 = loc(fused[#loc51, #loc47])
#loc133 = loc(fused[#loc58, #loc59])
#loc134 = loc(fused[#loc60, #loc61])
#loc135 = loc(fused[#loc62, #loc63])
#loc136 = loc(fused[#loc64, #loc65])
#loc137 = loc(fused[#loc66, #loc67])
#loc138 = loc(fused[#loc68, #loc69])
#loc139 = loc(fused[#loc72, #loc73])
#loc140 = loc(fused[#loc71, #loc73])
#loc141 = loc(fused[#loc70, #loc67])
#loc142 = loc(fused[#loc74, #loc75])
#loc143 = loc(fused[#loc76, #loc77])
#loc144 = loc(fused[#loc79, #loc75])
#loc145 = loc(fused[#loc91, #loc92])
#loc146 = loc(fused[#loc93, #loc92])
#loc147 = loc(fused[#loc88, #loc94])
#loc148 = loc(fused[#loc95, #loc94])
#loc149 = loc(fused[#loc96, #loc97])
#loc150 = loc(fused[#loc98, #loc99])
#loc151 = loc(fused[#loc101, #loc97])
#loc152 = loc(fused[#loc103, #loc102])
