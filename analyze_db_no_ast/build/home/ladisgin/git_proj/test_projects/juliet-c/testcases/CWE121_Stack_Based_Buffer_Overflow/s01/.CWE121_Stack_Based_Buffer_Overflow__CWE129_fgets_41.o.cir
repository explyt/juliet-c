!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":24:21)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":24:25)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":108:25)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":108:29)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":73:25)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":73:29)
#true = #cir.bool<true> : !cir.bool
#loc210 = loc(fused[#loc15, #loc16])
#loc236 = loc(fused[#loc87, #loc88])
#loc260 = loc(fused[#loc158, #loc159])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc204)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc205)
  cir.func private  @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc206)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc207)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private  @printIntLine(!s32i) loc(#loc208)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc12)
  cir.func internal private  @badSink(%arg0: !s32i loc(fused[#loc15, #loc16])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc210)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc17)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc212)
      %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc213)
      %3 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc213)
      cir.store %3, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc213)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc26)
        %5 = cir.const #cir.int<0> : !s32i loc(#loc27)
        %6 = cir.cmp(ge, %4, %5) : !s32i, !s32i loc(#loc215)
        %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc28)
        cir.if %7 {
          %8 = cir.const #cir.int<1> : !s32i loc(#loc32)
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc33)
          %10 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc34)
          %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc34)
          cir.store %8, %11 : !s32i, !cir.ptr<!s32i> loc(#loc217)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc37)
            cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc219)
            cir.for : cond {
              %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc39)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc40)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !s32i loc(#loc220)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc41)
              cir.condition(%16) loc(#loc41)
            } body {
              cir.scope {
                %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc43)
                %14 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc44)
                %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc44)
                %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc44)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc45)
              } loc(#loc221)
              cir.yield loc(#loc36)
            } step {
              %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc46)
              %14 = cir.unary(inc, %13) : !s32i, !s32i loc(#loc47)
              cir.store %14, %1 : !s32i, !cir.ptr<!s32i> loc(#loc222)
              cir.yield loc(#loc218)
            } loc(#loc218)
          } loc(#loc218)
        } else {
          %8 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc12)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc12)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc48)
        } loc(#loc216)
      } loc(#loc214)
    } loc(#loc211)
    cir.return loc(#loc14)
  } loc(#loc209)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc224)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc53)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc54)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc225)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc227)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc227)
      cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc227)
      cir.scope {
        %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc62)
        %7 = cir.const #cir.int<3> : !s32i loc(#loc63)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc63)
        %9 = cir.const #cir.int<4> : !u64i loc(#loc63)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc63)
        %11 = cir.const #cir.int<2> : !s32i loc(#loc63)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc63)
        %13 = cir.binop(add, %10, %12) : !u64i loc(#loc63)
        %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc63)
        %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc205)
        %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc64)
        %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc65)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc66)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc66)
        %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !s32i loc(#loc229)
        %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc67)
        cir.if %21 {
          %22 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc71)
          %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc72)
          cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc231)
        } else {
          %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc75)
        } loc(#loc230)
      } loc(#loc228)
    } loc(#loc226)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc76)
    cir.call @badSink(%3) : (!s32i) -> () loc(#loc77)
    cir.return loc(#loc50)
  } loc(#loc223)
  cir.func no_proto  @CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc233)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc80)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc234)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc82)
    cir.return loc(#loc79)
  } loc(#loc232)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc84)
  cir.func internal private  @goodB2GSink(%arg0: !s32i loc(fused[#loc87, #loc88])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc236)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc89)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc238)
      %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc239)
      %3 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc239)
      cir.store %3, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc239)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc98)
        %5 = cir.const #cir.int<0> : !s32i loc(#loc99)
        %6 = cir.cmp(ge, %4, %5) : !s32i, !s32i loc(#loc241)
        %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc100)
        %8 = cir.ternary(%7, true {
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc102)
          %10 = cir.const #cir.int<10> : !s32i loc(#loc103)
          %11 = cir.cmp(lt, %9, %10) : !s32i, !s32i loc(#loc242)
          %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc105)
          %13 = cir.ternary(%12, true {
            %14 = cir.const #true loc(#loc101)
            cir.yield %14 : !cir.bool loc(#loc101)
          }, false {
            %14 = cir.const #false loc(#loc101)
            cir.yield %14 : !cir.bool loc(#loc101)
          }) : (!cir.bool) -> !cir.bool loc(#loc101)
          cir.yield %13 : !cir.bool loc(#loc101)
        }, false {
          %9 = cir.const #false loc(#loc101)
          cir.yield %9 : !cir.bool loc(#loc101)
        }) : (!cir.bool) -> !cir.bool loc(#loc101)
        cir.if %8 {
          %9 = cir.const #cir.int<1> : !s32i loc(#loc109)
          %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc110)
          %11 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc111)
          %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc111)
          cir.store %9, %12 : !s32i, !cir.ptr<!s32i> loc(#loc244)
          cir.scope {
            %13 = cir.const #cir.int<0> : !s32i loc(#loc114)
            cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc246)
            cir.for : cond {
              %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc116)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc117)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !s32i loc(#loc247)
              %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc118)
              cir.condition(%17) loc(#loc118)
            } body {
              cir.scope {
                %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc120)
                %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc121)
                %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc121)
                %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc121)
                cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc122)
              } loc(#loc248)
              cir.yield loc(#loc113)
            } step {
              %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc123)
              %15 = cir.unary(inc, %14) : !s32i, !s32i loc(#loc124)
              cir.store %15, %1 : !s32i, !cir.ptr<!s32i> loc(#loc249)
              cir.yield loc(#loc245)
            } loc(#loc245)
          } loc(#loc245)
        } else {
          %9 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc84)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc84)
          cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc125)
        } loc(#loc243)
      } loc(#loc240)
    } loc(#loc237)
    cir.return loc(#loc86)
  } loc(#loc235)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc251)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc130)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc131)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc252)
    cir.scope {
      %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc254)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc254)
      cir.store %5, %4 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc254)
      cir.scope {
        %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc139)
        %7 = cir.const #cir.int<3> : !s32i loc(#loc140)
        %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc140)
        %9 = cir.const #cir.int<4> : !u64i loc(#loc140)
        %10 = cir.binop(mul, %8, %9) : !u64i loc(#loc140)
        %11 = cir.const #cir.int<2> : !s32i loc(#loc140)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc140)
        %13 = cir.binop(add, %10, %12) : !u64i loc(#loc140)
        %14 = cir.cast(integral, %13 : !u64i), !s32i loc(#loc140)
        %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc205)
        %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc141)
        %17 = cir.call @fgets(%6, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc142)
        %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc143)
        %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc143)
        %20 = cir.cmp(ne, %17, %19) : !cir.ptr<!s8i>, !s32i loc(#loc256)
        %21 = cir.cast(int_to_bool, %20 : !s32i), !cir.bool loc(#loc144)
        cir.if %21 {
          %22 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc148)
          %23 = cir.call @atoi(%22) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc149)
          cir.store %23, %0 : !s32i, !cir.ptr<!s32i> loc(#loc258)
        } else {
          %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc152)
          %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc152)
          cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc153)
        } loc(#loc257)
      } loc(#loc255)
    } loc(#loc253)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc154)
    cir.call @goodB2GSink(%3) : (!s32i) -> () loc(#loc155)
    cir.return loc(#loc127)
  } loc(#loc250)
  cir.func internal private  @goodG2BSink(%arg0: !s32i loc(fused[#loc158, #loc159])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc260)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc160)
    cir.scope {
      %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc262)
      %2 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc263)
      %3 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc263)
      cir.store %3, %2 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc263)
      cir.scope {
        %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc169)
        %5 = cir.const #cir.int<0> : !s32i loc(#loc170)
        %6 = cir.cmp(ge, %4, %5) : !s32i, !s32i loc(#loc265)
        %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc171)
        cir.if %7 {
          %8 = cir.const #cir.int<1> : !s32i loc(#loc175)
          %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc176)
          %10 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc177)
          %11 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %9 : !s32i), !cir.ptr<!s32i> loc(#loc177)
          cir.store %8, %11 : !s32i, !cir.ptr<!s32i> loc(#loc267)
          cir.scope {
            %12 = cir.const #cir.int<0> : !s32i loc(#loc180)
            cir.store %12, %1 : !s32i, !cir.ptr<!s32i> loc(#loc269)
            cir.for : cond {
              %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc182)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc183)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !s32i loc(#loc270)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc184)
              cir.condition(%16) loc(#loc184)
            } body {
              cir.scope {
                %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc186)
                %14 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc187)
                %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc187)
                %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc187)
                cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc188)
              } loc(#loc271)
              cir.yield loc(#loc179)
            } step {
              %13 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc189)
              %14 = cir.unary(inc, %13) : !s32i, !s32i loc(#loc190)
              cir.store %14, %1 : !s32i, !cir.ptr<!s32i> loc(#loc272)
              cir.yield loc(#loc268)
            } loc(#loc268)
          } loc(#loc268)
        } else {
          %8 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc191)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc191)
          cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc192)
        } loc(#loc266)
      } loc(#loc264)
    } loc(#loc261)
    cir.return loc(#loc157)
  } loc(#loc259)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc274)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc197)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc198)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc275)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc200)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc276)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc202)
    cir.call @goodG2BSink(%4) : (!s32i) -> () loc(#loc203)
    cir.return loc(#loc194)
  } loc(#loc273)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":62:23)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":42:23)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":24:1)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":45:1)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":25:1)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":26:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":44:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":27:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":27:13)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":28:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":28:30)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":31:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":43:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":31:13)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":31:21)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":31:18)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":32:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":39:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":41:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":33:28)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":33:20)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":33:13)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":35:13)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":38:13)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":35:21)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":35:17)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":35:24)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":35:28)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":35:26)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":36:13)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":37:37)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":37:30)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":37:17)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":35:33)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":35:32)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":42:13)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":47:1)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":66:1)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":49:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":49:9)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":51:13)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":51:12)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":51:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":52:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":64:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":53:9)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":53:45)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":55:9)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":63:9)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":55:19)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":55:32)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":55:49)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":55:13)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":55:59)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":55:56)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":56:9)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":59:9)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":61:9)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":58:25)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":58:20)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":58:13)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":58:36)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":62:13)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":65:13)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":65:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":151:1)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":155:1)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":153:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":153:13)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":154:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":154:13)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":125:23)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":108:1)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":128:1)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":109:1)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":110:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":127:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":111:9)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":111:13)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":112:9)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":112:30)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":114:9)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":126:9)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":114:13)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":114:21)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":114:18)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":114:23)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":114:26)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":114:34)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":114:36)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":114:31)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":115:9)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":122:9)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":124:9)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":116:28)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":116:20)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":116:13)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":118:13)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":121:13)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":118:21)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":118:17)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":118:24)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":118:28)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":118:26)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":119:13)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":120:37)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":120:30)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":120:17)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":118:33)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":118:32)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":125:13)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":130:1)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":149:1)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":132:5)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":132:9)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":134:13)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":134:12)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":134:5)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":135:5)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":147:5)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":136:9)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":136:45)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":138:9)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":146:9)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":138:19)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":138:32)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":138:49)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":138:13)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":138:59)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":138:56)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":139:9)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":142:9)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":144:9)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":141:25)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":141:20)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":141:13)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":141:36)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":145:23)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":145:13)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":148:17)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":148:5)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":73:1)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":94:1)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":74:1)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":75:5)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":93:5)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":76:9)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":76:13)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":77:9)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":77:30)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":80:9)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":92:9)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":80:13)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":80:21)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":80:18)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":81:9)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":88:9)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":90:9)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":82:28)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":82:20)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":82:13)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":84:13)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":87:13)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":84:21)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":84:17)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":84:24)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":84:28)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":84:26)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":85:13)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":86:37)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":86:30)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":86:17)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":84:33)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":84:32)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":91:23)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":91:13)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":96:1)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":105:1)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":98:5)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":98:9)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":100:13)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":100:12)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":100:5)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":103:12)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":103:5)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":104:17)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_fgets_41.c":104:5)
#loc204 = loc(fused[#loc1, #loc2])
#loc205 = loc(fused[#loc3, #loc4])
#loc206 = loc(fused[#loc5, #loc6])
#loc207 = loc(fused[#loc7, #loc8])
#loc208 = loc(fused[#loc10, #loc11])
#loc209 = loc(fused[#loc13, #loc14])
#loc211 = loc(fused[#loc18, #loc19])
#loc212 = loc(fused[#loc20, #loc21])
#loc213 = loc(fused[#loc22, #loc23])
#loc214 = loc(fused[#loc24, #loc25])
#loc215 = loc(fused[#loc26, #loc27])
#loc216 = loc(fused[#loc29, #loc30, #loc31, #loc25])
#loc217 = loc(fused[#loc34, #loc32])
#loc218 = loc(fused[#loc35, #loc36])
#loc219 = loc(fused[#loc38, #loc37])
#loc220 = loc(fused[#loc39, #loc40])
#loc221 = loc(fused[#loc42, #loc36])
#loc222 = loc(fused[#loc47, #loc46])
#loc223 = loc(fused[#loc49, #loc50])
#loc224 = loc(fused[#loc51, #loc52])
#loc225 = loc(fused[#loc55, #loc53])
#loc226 = loc(fused[#loc56, #loc57])
#loc227 = loc(fused[#loc58, #loc59])
#loc228 = loc(fused[#loc60, #loc61])
#loc229 = loc(fused[#loc65, #loc66])
#loc230 = loc(fused[#loc68, #loc69, #loc70, #loc61])
#loc231 = loc(fused[#loc73, #loc74])
#loc232 = loc(fused[#loc78, #loc79])
#loc233 = loc(fused[#loc80, #loc81])
#loc234 = loc(fused[#loc82, #loc83])
#loc235 = loc(fused[#loc85, #loc86])
#loc237 = loc(fused[#loc90, #loc91])
#loc238 = loc(fused[#loc92, #loc93])
#loc239 = loc(fused[#loc94, #loc95])
#loc240 = loc(fused[#loc96, #loc97])
#loc241 = loc(fused[#loc98, #loc99])
#loc242 = loc(fused[#loc102, #loc104])
#loc243 = loc(fused[#loc106, #loc107, #loc108, #loc97])
#loc244 = loc(fused[#loc111, #loc109])
#loc245 = loc(fused[#loc112, #loc113])
#loc246 = loc(fused[#loc115, #loc114])
#loc247 = loc(fused[#loc116, #loc117])
#loc248 = loc(fused[#loc119, #loc113])
#loc249 = loc(fused[#loc124, #loc123])
#loc250 = loc(fused[#loc126, #loc127])
#loc251 = loc(fused[#loc128, #loc129])
#loc252 = loc(fused[#loc132, #loc130])
#loc253 = loc(fused[#loc133, #loc134])
#loc254 = loc(fused[#loc135, #loc136])
#loc255 = loc(fused[#loc137, #loc138])
#loc256 = loc(fused[#loc142, #loc143])
#loc257 = loc(fused[#loc145, #loc146, #loc147, #loc138])
#loc258 = loc(fused[#loc150, #loc151])
#loc259 = loc(fused[#loc156, #loc157])
#loc261 = loc(fused[#loc161, #loc162])
#loc262 = loc(fused[#loc163, #loc164])
#loc263 = loc(fused[#loc165, #loc166])
#loc264 = loc(fused[#loc167, #loc168])
#loc265 = loc(fused[#loc169, #loc170])
#loc266 = loc(fused[#loc172, #loc173, #loc174, #loc168])
#loc267 = loc(fused[#loc177, #loc175])
#loc268 = loc(fused[#loc178, #loc179])
#loc269 = loc(fused[#loc181, #loc180])
#loc270 = loc(fused[#loc182, #loc183])
#loc271 = loc(fused[#loc185, #loc179])
#loc272 = loc(fused[#loc190, #loc189])
#loc273 = loc(fused[#loc193, #loc194])
#loc274 = loc(fused[#loc195, #loc196])
#loc275 = loc(fused[#loc199, #loc197])
#loc276 = loc(fused[#loc201, #loc200])
