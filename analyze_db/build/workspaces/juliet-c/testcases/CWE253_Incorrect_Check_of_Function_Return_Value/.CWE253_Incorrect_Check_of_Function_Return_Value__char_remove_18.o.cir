!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @remove(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc35)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"removemebad.txt\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc3)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc36)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"remove failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc6)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18_bad() extra(#fn_attr1) {
    cir.goto "sink" loc(#loc38)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc11)
    cir.scope {
      %0 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc3)
      %1 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc3)
      %2 = cir.call @remove(%1) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc14)
      %3 = cir.const #cir.int<0> : !s32i loc(#loc15)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc40)
      cir.if %4 {
        %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc6)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc6)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc17)
      } loc(#loc41)
    } loc(#loc39)
    cir.return loc(#loc8)
  } loc(#loc37)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc43)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc20)
    cir.return loc(#loc19)
  } loc(#loc42)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"removemegood.txt\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc22)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.goto "sink" loc(#loc45)
  ^bb1:  // no predecessors
    cir.label "sink" loc(#loc27)
    cir.scope {
      %0 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc22)
      %1 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc22)
      %2 = cir.call @remove(%1) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc30)
      %3 = cir.const #cir.int<0> : !s32i loc(#loc31)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc47)
      cir.if %4 {
        %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc33)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc33)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc34)
      } loc(#loc48)
    } loc(#loc46)
    cir.return loc(#loc24)
  } loc(#loc44)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":0:0)
#loc1 = loc("/usr/include/stdio.h":158:1)
#loc2 = loc("/usr/include/stdio.h":158:44)
#loc3 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":36:16)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc6 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":38:19)
#loc7 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":30:1)
#loc8 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":40:1)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":32:5)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":32:10)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":33:1)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":36:5)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":39:5)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":36:9)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":36:38)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":37:5)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":38:9)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":58:1)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":61:1)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":60:5)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":60:11)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":52:16)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":47:1)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":56:1)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":49:5)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":49:10)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":50:1)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":52:5)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":55:5)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":52:9)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":52:39)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":53:5)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":54:19)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_remove_18.c":54:9)
#loc35 = loc(fused[#loc1, #loc2])
#loc36 = loc(fused[#loc4, #loc5])
#loc37 = loc(fused[#loc7, #loc8])
#loc38 = loc(fused[#loc9, #loc10])
#loc39 = loc(fused[#loc12, #loc13])
#loc40 = loc(fused[#loc14, #loc15])
#loc41 = loc(fused[#loc16, #loc13])
#loc42 = loc(fused[#loc18, #loc19])
#loc43 = loc(fused[#loc20, #loc21])
#loc44 = loc(fused[#loc23, #loc24])
#loc45 = loc(fused[#loc25, #loc26])
#loc46 = loc(fused[#loc28, #loc29])
#loc47 = loc(fused[#loc30, #loc31])
#loc48 = loc(fused[#loc32, #loc29])
