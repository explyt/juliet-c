!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_putchar_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @putchar(!s32i) -> !s32i loc(#loc51)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_putchar_02_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc7)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc7)
      cir.if %1 {
        %2 = cir.const #cir.int<65> : !s32i loc(#loc9)
        %3 = cir.call @putchar(%2) : (!s32i) -> !s32i loc(#loc10)
      } loc(#loc54)
    } loc(#loc53)
    cir.return loc(#loc4)
  } loc(#loc52)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_putchar_02_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc56)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc13)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc57)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc15)
    cir.return loc(#loc12)
  } loc(#loc55)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc19)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"putchar failed!\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc20)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<0> : !s32i loc(#loc25)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc25)
      cir.if %1 {
        %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc19)
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc19)
        cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc29)
      } else {
        cir.scope {
          %2 = cir.const #cir.int<65> : !s32i loc(#loc32)
          %3 = cir.call @putchar(%2) : (!s32i) -> !s32i loc(#loc33)
          %4 = cir.const #cir.int<1> : !s32i loc(#loc34)
          %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc34)
          %6 = cir.cmp(eq, %3, %5) : !s32i, !cir.bool loc(#loc63)
          cir.if %6 {
            %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc20)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc20)
            cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc36)
          } loc(#loc64)
        } loc(#loc62)
      } loc(#loc61)
    } loc(#loc60)
    cir.return loc(#loc22)
  } loc(#loc59)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc41)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc41)
      cir.if %1 {
        cir.scope {
          %2 = cir.const #cir.int<65> : !s32i loc(#loc45)
          %3 = cir.call @putchar(%2) : (!s32i) -> !s32i loc(#loc46)
          %4 = cir.const #cir.int<1> : !s32i loc(#loc47)
          %5 = cir.unary(minus, %4) nsw : !s32i, !s32i loc(#loc47)
          %6 = cir.cmp(eq, %3, %5) : !s32i, !cir.bool loc(#loc69)
          cir.if %6 {
            %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc49)
            %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc49)
            cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc50)
          } loc(#loc70)
        } loc(#loc68)
      } loc(#loc67)
    } loc(#loc66)
    cir.return loc(#loc38)
  } loc(#loc65)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_putchar_02.c":0:0)
#loc1 = loc("/usr/include/stdio.h":618:1)
#loc2 = loc("/usr/include/stdio.h":618:28)
#loc3 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":24:1)
#loc4 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":31:1)
#loc5 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":26:5)
#loc6 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":30:5)
#loc7 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":26:8)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":27:5)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":29:22)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":29:9)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":68:1)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":72:1)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":70:5)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":70:11)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":71:5)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":71:11)
#loc17 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc18 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":43:19)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":50:23)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":38:1)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":53:1)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":40:5)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":52:5)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":40:8)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":41:5)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":44:5)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":46:5)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":43:9)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":48:9)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":51:9)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":48:26)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":48:13)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":48:34)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":49:9)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":50:13)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":56:1)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":66:1)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":58:5)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":65:5)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":58:8)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":59:5)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":61:9)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":64:9)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":61:26)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":61:13)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":61:34)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":62:9)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":63:23)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_putchar_02.c":63:13)
#loc51 = loc(fused[#loc1, #loc2])
#loc52 = loc(fused[#loc3, #loc4])
#loc53 = loc(fused[#loc5, #loc6])
#loc54 = loc(fused[#loc8, #loc6])
#loc55 = loc(fused[#loc11, #loc12])
#loc56 = loc(fused[#loc13, #loc14])
#loc57 = loc(fused[#loc15, #loc16])
#loc58 = loc(fused[#loc17, #loc18])
#loc59 = loc(fused[#loc21, #loc22])
#loc60 = loc(fused[#loc23, #loc24])
#loc61 = loc(fused[#loc26, #loc27, #loc28, #loc24])
#loc62 = loc(fused[#loc30, #loc31])
#loc63 = loc(fused[#loc33, #loc34])
#loc64 = loc(fused[#loc35, #loc31])
#loc65 = loc(fused[#loc37, #loc38])
#loc66 = loc(fused[#loc39, #loc40])
#loc67 = loc(fused[#loc42, #loc40])
#loc68 = loc(fused[#loc43, #loc44])
#loc69 = loc(fused[#loc46, #loc47])
#loc70 = loc(fused[#loc48, #loc44])
