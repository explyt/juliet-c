!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_cat_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc91)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc92)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc93)
  cir.func no_proto @CWE665_Improper_Initialization__char_cat_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc95)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc96)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc13)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc97)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc99)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc99)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc17)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc17)
      cir.if %6 {
      } else {
        %7 = cir.const #cir.int<0> : !s32i loc(#loc22)
        %8 = cir.cast(integral, %7 : !s32i), !s8i loc(#loc22)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
        %10 = cir.const #cir.int<0> : !s32i loc(#loc24)
        %11 = cir.ptr_stride(%9 : !cir.ptr<!s8i>, %10 : !s32i), !cir.ptr<!s8i> loc(#loc25)
        cir.store %8, %11 : !s8i, !cir.ptr<!s8i> loc(#loc101)
      } loc(#loc100)
    } loc(#loc98)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc103)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc30)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc30)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc31)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc32)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc33)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc32)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc32)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc104)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc36)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc36)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc37)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc38)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc37)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc39)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc39)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc105)
      %18 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc40)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
      %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc42)
      %21 = cir.call @strcat(%19, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc40)
      %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc43)
      cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc44)
    } loc(#loc102)
    cir.return loc(#loc8)
  } loc(#loc94)
  cir.func no_proto @CWE665_Improper_Initialization__char_cat_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc107)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc47)
    cir.return loc(#loc46)
  } loc(#loc106)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc109)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc110)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc55)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc111)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc113)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc113)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc59)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc59)
      cir.if %6 {
        %7 = cir.const #cir.int<0> : !s32i loc(#loc64)
        %8 = cir.cast(integral, %7 : !s32i), !s8i loc(#loc64)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
        %10 = cir.const #cir.int<0> : !s32i loc(#loc66)
        %11 = cir.ptr_stride(%9 : !cir.ptr<!s8i>, %10 : !s32i), !cir.ptr<!s8i> loc(#loc67)
        cir.store %8, %11 : !s8i, !cir.ptr<!s8i> loc(#loc115)
      } else {
        %7 = cir.const #cir.int<0> : !s32i loc(#loc68)
        %8 = cir.cast(integral, %7 : !s32i), !s8i loc(#loc68)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
        %10 = cir.const #cir.int<0> : !s32i loc(#loc70)
        %11 = cir.ptr_stride(%9 : !cir.ptr<!s8i>, %10 : !s32i), !cir.ptr<!s8i> loc(#loc71)
        cir.store %8, %11 : !s8i, !cir.ptr<!s8i> loc(#loc116)
      } loc(#loc114)
    } loc(#loc112)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc118)
      %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc76)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc76)
      %6 = cir.const #cir.int<67> : !s32i loc(#loc77)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc78)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc79)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc78)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc78)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc119)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc82)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc82)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc83)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc84)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc83)
      %16 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc85)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc85)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc120)
      %18 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc86)
      %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
      %20 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc88)
      %21 = cir.call @strcat(%19, %20) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc86)
      %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
      cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    } loc(#loc117)
    cir.return loc(#loc50)
  } loc(#loc108)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_cat_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/string.h":149:1)
#loc4 = loc("/usr/include/string.h":150:14)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE665_Improper_Initialization__char_cat_12.c":23:1)
#loc8 = loc("CWE665_Improper_Initialization__char_cat_12.c":46:1)
#loc9 = loc("CWE665_Improper_Initialization__char_cat_12.c":25:5)
#loc10 = loc("CWE665_Improper_Initialization__char_cat_12.c":25:12)
#loc11 = loc("CWE665_Improper_Initialization__char_cat_12.c":26:5)
#loc12 = loc("CWE665_Improper_Initialization__char_cat_12.c":26:24)
#loc13 = loc("CWE665_Improper_Initialization__char_cat_12.c":27:12)
#loc14 = loc("CWE665_Improper_Initialization__char_cat_12.c":27:5)
#loc15 = loc("CWE665_Improper_Initialization__char_cat_12.c":28:5)
#loc16 = loc("CWE665_Improper_Initialization__char_cat_12.c":37:5)
#loc17 = loc("CWE665_Improper_Initialization__char_cat_12.c":28:8)
#loc18 = loc("CWE665_Improper_Initialization__char_cat_12.c":28:33)
#loc19 = loc("CWE665_Improper_Initialization__char_cat_12.c":29:5)
#loc20 = loc("CWE665_Improper_Initialization__char_cat_12.c":32:5)
#loc21 = loc("CWE665_Improper_Initialization__char_cat_12.c":34:5)
#loc22 = loc("CWE665_Improper_Initialization__char_cat_12.c":36:19)
#loc23 = loc("CWE665_Improper_Initialization__char_cat_12.c":36:9)
#loc24 = loc("CWE665_Improper_Initialization__char_cat_12.c":36:14)
#loc25 = loc("CWE665_Improper_Initialization__char_cat_12.c":36:15)
#loc26 = loc("CWE665_Improper_Initialization__char_cat_12.c":38:5)
#loc27 = loc("CWE665_Improper_Initialization__char_cat_12.c":45:5)
#loc28 = loc("CWE665_Improper_Initialization__char_cat_12.c":39:9)
#loc29 = loc("CWE665_Improper_Initialization__char_cat_12.c":39:24)
#loc30 = loc("CWE665_Improper_Initialization__char_cat_12.c":40:16)
#loc31 = loc("CWE665_Improper_Initialization__char_cat_12.c":40:24)
#loc32 = loc("CWE665_Improper_Initialization__char_cat_12.c":40:29)
#loc33 = loc("CWE665_Improper_Initialization__char_cat_12.c":40:33)
#loc34 = loc("CWE665_Improper_Initialization__char_cat_12.c":40:9)
#loc35 = loc("CWE665_Improper_Initialization__char_cat_12.c":40:34)
#loc36 = loc("CWE665_Improper_Initialization__char_cat_12.c":41:25)
#loc37 = loc("CWE665_Improper_Initialization__char_cat_12.c":41:16)
#loc38 = loc("CWE665_Improper_Initialization__char_cat_12.c":41:20)
#loc39 = loc("CWE665_Improper_Initialization__char_cat_12.c":41:9)
#loc40 = loc("CWE665_Improper_Initialization__char_cat_12.c":43:9)
#loc41 = loc("CWE665_Improper_Initialization__char_cat_12.c":43:16)
#loc42 = loc("CWE665_Improper_Initialization__char_cat_12.c":43:22)
#loc43 = loc("CWE665_Improper_Initialization__char_cat_12.c":44:19)
#loc44 = loc("CWE665_Improper_Initialization__char_cat_12.c":44:9)
#loc45 = loc("CWE665_Improper_Initialization__char_cat_12.c":79:1)
#loc46 = loc("CWE665_Improper_Initialization__char_cat_12.c":82:1)
#loc47 = loc("CWE665_Improper_Initialization__char_cat_12.c":81:5)
#loc48 = loc("CWE665_Improper_Initialization__char_cat_12.c":81:13)
#loc49 = loc("CWE665_Improper_Initialization__char_cat_12.c":54:1)
#loc50 = loc("CWE665_Improper_Initialization__char_cat_12.c":77:1)
#loc51 = loc("CWE665_Improper_Initialization__char_cat_12.c":56:5)
#loc52 = loc("CWE665_Improper_Initialization__char_cat_12.c":56:12)
#loc53 = loc("CWE665_Improper_Initialization__char_cat_12.c":57:5)
#loc54 = loc("CWE665_Improper_Initialization__char_cat_12.c":57:24)
#loc55 = loc("CWE665_Improper_Initialization__char_cat_12.c":58:12)
#loc56 = loc("CWE665_Improper_Initialization__char_cat_12.c":58:5)
#loc57 = loc("CWE665_Improper_Initialization__char_cat_12.c":59:5)
#loc58 = loc("CWE665_Improper_Initialization__char_cat_12.c":68:5)
#loc59 = loc("CWE665_Improper_Initialization__char_cat_12.c":59:8)
#loc60 = loc("CWE665_Improper_Initialization__char_cat_12.c":59:33)
#loc61 = loc("CWE665_Improper_Initialization__char_cat_12.c":60:5)
#loc62 = loc("CWE665_Improper_Initialization__char_cat_12.c":63:5)
#loc63 = loc("CWE665_Improper_Initialization__char_cat_12.c":65:5)
#loc64 = loc("CWE665_Improper_Initialization__char_cat_12.c":62:19)
#loc65 = loc("CWE665_Improper_Initialization__char_cat_12.c":62:9)
#loc66 = loc("CWE665_Improper_Initialization__char_cat_12.c":62:14)
#loc67 = loc("CWE665_Improper_Initialization__char_cat_12.c":62:15)
#loc68 = loc("CWE665_Improper_Initialization__char_cat_12.c":67:19)
#loc69 = loc("CWE665_Improper_Initialization__char_cat_12.c":67:9)
#loc70 = loc("CWE665_Improper_Initialization__char_cat_12.c":67:14)
#loc71 = loc("CWE665_Improper_Initialization__char_cat_12.c":67:15)
#loc72 = loc("CWE665_Improper_Initialization__char_cat_12.c":69:5)
#loc73 = loc("CWE665_Improper_Initialization__char_cat_12.c":76:5)
#loc74 = loc("CWE665_Improper_Initialization__char_cat_12.c":70:9)
#loc75 = loc("CWE665_Improper_Initialization__char_cat_12.c":70:24)
#loc76 = loc("CWE665_Improper_Initialization__char_cat_12.c":71:16)
#loc77 = loc("CWE665_Improper_Initialization__char_cat_12.c":71:24)
#loc78 = loc("CWE665_Improper_Initialization__char_cat_12.c":71:29)
#loc79 = loc("CWE665_Improper_Initialization__char_cat_12.c":71:33)
#loc80 = loc("CWE665_Improper_Initialization__char_cat_12.c":71:9)
#loc81 = loc("CWE665_Improper_Initialization__char_cat_12.c":71:34)
#loc82 = loc("CWE665_Improper_Initialization__char_cat_12.c":72:25)
#loc83 = loc("CWE665_Improper_Initialization__char_cat_12.c":72:16)
#loc84 = loc("CWE665_Improper_Initialization__char_cat_12.c":72:20)
#loc85 = loc("CWE665_Improper_Initialization__char_cat_12.c":72:9)
#loc86 = loc("CWE665_Improper_Initialization__char_cat_12.c":74:9)
#loc87 = loc("CWE665_Improper_Initialization__char_cat_12.c":74:16)
#loc88 = loc("CWE665_Improper_Initialization__char_cat_12.c":74:22)
#loc89 = loc("CWE665_Improper_Initialization__char_cat_12.c":75:19)
#loc90 = loc("CWE665_Improper_Initialization__char_cat_12.c":75:9)
#loc91 = loc(fused[#loc1, #loc2])
#loc92 = loc(fused[#loc3, #loc4])
#loc93 = loc(fused[#loc5, #loc6])
#loc94 = loc(fused[#loc7, #loc8])
#loc95 = loc(fused[#loc9, #loc10])
#loc96 = loc(fused[#loc11, #loc12])
#loc97 = loc(fused[#loc14, #loc13])
#loc98 = loc(fused[#loc15, #loc16])
#loc99 = loc(fused[#loc17, #loc18])
#loc100 = loc(fused[#loc19, #loc20, #loc21, #loc16])
#loc101 = loc(fused[#loc23, #loc22])
#loc102 = loc(fused[#loc26, #loc27])
#loc103 = loc(fused[#loc28, #loc29])
#loc104 = loc(fused[#loc34, #loc35])
#loc105 = loc(fused[#loc39, #loc36])
#loc106 = loc(fused[#loc45, #loc46])
#loc107 = loc(fused[#loc47, #loc48])
#loc108 = loc(fused[#loc49, #loc50])
#loc109 = loc(fused[#loc51, #loc52])
#loc110 = loc(fused[#loc53, #loc54])
#loc111 = loc(fused[#loc56, #loc55])
#loc112 = loc(fused[#loc57, #loc58])
#loc113 = loc(fused[#loc59, #loc60])
#loc114 = loc(fused[#loc61, #loc62, #loc63, #loc58])
#loc115 = loc(fused[#loc65, #loc64])
#loc116 = loc(fused[#loc69, #loc68])
#loc117 = loc(fused[#loc72, #loc73])
#loc118 = loc(fused[#loc74, #loc75])
#loc119 = loc(fused[#loc80, #loc81])
#loc120 = loc(fused[#loc85, #loc82])
