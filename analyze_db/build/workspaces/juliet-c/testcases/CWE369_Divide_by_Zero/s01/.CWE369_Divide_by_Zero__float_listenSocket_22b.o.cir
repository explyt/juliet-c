!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc7 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":27:59)
#loc8 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":27:65)
#loc30 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":49:64)
#loc31 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":49:70)
#loc59 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":72:64)
#loc60 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":72:70)
#loc86 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":90:63)
#loc87 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":90:69)
#loc104 = loc(fused[#loc7, #loc8])
#loc113 = loc(fused[#loc30, #loc31])
#loc123 = loc(fused[#loc59, #loc60])
#loc133 = loc(fused[#loc86, #loc87])
module @"/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_22b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" external @CWE369_Divide_by_Zero__float_listenSocket_22_badGlobal : !s32i {alignment = 4 : i64} loc(#loc101)
  cir.func private @printIntLine(!s32i) loc(#loc102)
  cir.func @CWE369_Divide_by_Zero__float_listenSocket_22_badSink(%arg0: !cir.float loc(fused[#loc7, #loc8])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc105)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc104)
    cir.store %arg0, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc11)
    cir.br ^bb1 loc(#loc106)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @CWE369_Divide_by_Zero__float_listenSocket_22_badGlobal : !cir.ptr<!s32i> loc(#loc101)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc14)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc14)
    cir.brcond %4 ^bb2, ^bb5 loc(#loc107)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc108)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc18)
    %6 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc19)
    %7 = cir.cast(floating, %6 : !cir.float), !cir.double loc(#loc19)
    %8 = cir.binop(div, %5, %7) : !cir.double loc(#loc109)
    %9 = cir.cast(float_to_int, %8 : !cir.double), !s32i loc(#loc109)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc105)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc20)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc21)
    cir.br ^bb4 loc(#loc17)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc13)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc13)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc6)
  } loc(#loc103)
  cir.global "private" external @CWE369_Divide_by_Zero__float_listenSocket_22_goodB2G1Global : !s32i {alignment = 4 : i64} loc(#loc110)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc111)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc26)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc27)
  cir.func @CWE369_Divide_by_Zero__float_listenSocket_22_goodB2G1Sink(%arg0: !cir.float loc(fused[#loc30, #loc31])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc114)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc113)
    cir.store %arg0, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc34)
    cir.br ^bb1 loc(#loc115)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @CWE369_Divide_by_Zero__float_listenSocket_22_goodB2G1Global : !cir.ptr<!s32i> loc(#loc110)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc37)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc116)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc26)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc26)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc41)
    cir.br ^bb9 loc(#loc39)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc117)
  ^bb4:  // pred: ^bb3
    %7 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc44)
    %8 = cir.cast(floating, %7 : !cir.float), !cir.double loc(#loc44)
    %9 = cir.fabs %8 : !cir.double loc(#loc44)
    %10 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc45)
    %11 = cir.cmp(gt, %9, %10) : !cir.double, !cir.bool loc(#loc118)
    cir.brcond %11 ^bb5, ^bb6 loc(#loc119)
  ^bb5:  // pred: ^bb4
    %12 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc50)
    %13 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc51)
    %14 = cir.cast(floating, %13 : !cir.float), !cir.double loc(#loc51)
    %15 = cir.binop(div, %12, %14) : !cir.double loc(#loc120)
    %16 = cir.cast(float_to_int, %15 : !cir.double), !s32i loc(#loc120)
    cir.store %16, %0 : !s32i, !cir.ptr<!s32i> loc(#loc114)
    %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc52)
    cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc53)
    cir.br ^bb7 loc(#loc48)
  ^bb6:  // pred: ^bb4
    %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc27)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc27)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc54)
    cir.br ^bb7 loc(#loc43)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc43)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc36)
  ^bb9:  // 2 preds: ^bb2, ^bb8
    cir.br ^bb10 loc(#loc36)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc29)
  } loc(#loc112)
  cir.global "private" external @CWE369_Divide_by_Zero__float_listenSocket_22_goodB2G2Global : !s32i {alignment = 4 : i64} loc(#loc121)
  cir.func @CWE369_Divide_by_Zero__float_listenSocket_22_goodB2G2Sink(%arg0: !cir.float loc(fused[#loc59, #loc60])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc124)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc123)
    cir.store %arg0, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc63)
    cir.br ^bb1 loc(#loc125)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @CWE369_Divide_by_Zero__float_listenSocket_22_goodB2G2Global : !cir.ptr<!s32i> loc(#loc121)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc66)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc66)
    cir.brcond %4 ^bb2, ^bb8 loc(#loc126)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc127)
  ^bb3:  // pred: ^bb2
    %5 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc70)
    %6 = cir.cast(floating, %5 : !cir.float), !cir.double loc(#loc70)
    %7 = cir.fabs %6 : !cir.double loc(#loc70)
    %8 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc71)
    %9 = cir.cmp(gt, %7, %8) : !cir.double, !cir.bool loc(#loc128)
    cir.brcond %9 ^bb4, ^bb5 loc(#loc129)
  ^bb4:  // pred: ^bb3
    %10 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc76)
    %11 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc77)
    %12 = cir.cast(floating, %11 : !cir.float), !cir.double loc(#loc77)
    %13 = cir.binop(div, %10, %12) : !cir.double loc(#loc130)
    %14 = cir.cast(float_to_int, %13 : !cir.double), !s32i loc(#loc130)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc124)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc78)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc79)
    cir.br ^bb6 loc(#loc74)
  ^bb5:  // pred: ^bb3
    %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc80)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    cir.br ^bb6 loc(#loc69)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc69)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc65)
  ^bb8:  // 2 preds: ^bb1, ^bb7
    cir.br ^bb9 loc(#loc65)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc58)
  } loc(#loc122)
  cir.global "private" external @CWE369_Divide_by_Zero__float_listenSocket_22_goodG2BGlobal : !s32i {alignment = 4 : i64} loc(#loc131)
  cir.func @CWE369_Divide_by_Zero__float_listenSocket_22_goodG2BSink(%arg0: !cir.float loc(fused[#loc86, #loc87])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc134)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data", init] {alignment = 4 : i64} loc(#loc133)
    cir.store %arg0, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc90)
    cir.br ^bb1 loc(#loc135)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @CWE369_Divide_by_Zero__float_listenSocket_22_goodG2BGlobal : !cir.ptr<!s32i> loc(#loc131)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc93)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc93)
    cir.brcond %4 ^bb2, ^bb5 loc(#loc136)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc137)
  ^bb3:  // pred: ^bb2
    %5 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc97)
    %6 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc98)
    %7 = cir.cast(floating, %6 : !cir.float), !cir.double loc(#loc98)
    %8 = cir.binop(div, %5, %7) : !cir.double loc(#loc138)
    %9 = cir.cast(float_to_int, %8 : !cir.double), !s32i loc(#loc138)
    cir.store %9, %0 : !s32i, !cir.ptr<!s32i> loc(#loc134)
    %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc100)
    cir.br ^bb4 loc(#loc96)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc92)
  ^bb5:  // 2 preds: ^bb1, ^bb4
    cir.br ^bb6 loc(#loc92)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc85)
  } loc(#loc132)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_22b.c":0:0)
#loc1 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":25:1)
#loc2 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":25:12)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":27:1)
#loc6 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":37:1)
#loc9 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":33:13)
#loc10 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":33:44)
#loc11 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":28:1)
#loc12 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":29:5)
#loc13 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":36:5)
#loc14 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":29:8)
#loc15 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":30:5)
#loc16 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":31:9)
#loc17 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":35:9)
#loc18 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":33:32)
#loc19 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":33:40)
#loc20 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":34:26)
#loc21 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":34:13)
#loc22 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":44:1)
#loc23 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":44:12)
#loc24 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc25 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc26 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":54:19)
#loc27 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":66:23)
#loc28 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":49:1)
#loc29 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":69:1)
#loc32 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":61:13)
#loc33 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":61:44)
#loc34 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":50:1)
#loc35 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":51:5)
#loc36 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":68:5)
#loc37 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":51:8)
#loc38 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":52:5)
#loc39 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":55:5)
#loc40 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":57:5)
#loc41 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":54:9)
#loc42 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":59:9)
#loc43 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":67:9)
#loc44 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":59:17)
#loc45 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":59:25)
#loc46 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":59:12)
#loc47 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":60:9)
#loc48 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":63:9)
#loc49 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":65:9)
#loc50 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":61:32)
#loc51 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":61:40)
#loc52 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":62:26)
#loc53 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":62:13)
#loc54 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":66:13)
#loc55 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":45:1)
#loc56 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":45:12)
#loc57 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":72:1)
#loc58 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":87:1)
#loc61 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":79:13)
#loc62 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":79:44)
#loc63 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":73:1)
#loc64 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":74:5)
#loc65 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":86:5)
#loc66 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":74:8)
#loc67 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":75:5)
#loc68 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":77:9)
#loc69 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":85:9)
#loc70 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":77:17)
#loc71 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":77:25)
#loc72 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":77:12)
#loc73 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":78:9)
#loc74 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":81:9)
#loc75 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":83:9)
#loc76 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":79:32)
#loc77 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":79:40)
#loc78 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":80:26)
#loc79 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":80:13)
#loc80 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":84:23)
#loc81 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":84:13)
#loc82 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":46:1)
#loc83 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":46:12)
#loc84 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":90:1)
#loc85 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":100:1)
#loc88 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":96:13)
#loc89 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":96:44)
#loc90 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":91:1)
#loc91 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":92:5)
#loc92 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":99:5)
#loc93 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":92:8)
#loc94 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":93:5)
#loc95 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":94:9)
#loc96 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":98:9)
#loc97 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":96:32)
#loc98 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":96:40)
#loc99 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":97:26)
#loc100 = loc("CWE369_Divide_by_Zero__float_listenSocket_22b.c":97:13)
#loc101 = loc(fused[#loc1, #loc2])
#loc102 = loc(fused[#loc3, #loc4])
#loc103 = loc(fused[#loc5, #loc6])
#loc105 = loc(fused[#loc9, #loc10])
#loc106 = loc(fused[#loc12, #loc13])
#loc107 = loc(fused[#loc15, #loc13])
#loc108 = loc(fused[#loc16, #loc17])
#loc109 = loc(fused[#loc18, #loc19])
#loc110 = loc(fused[#loc22, #loc23])
#loc111 = loc(fused[#loc24, #loc25])
#loc112 = loc(fused[#loc28, #loc29])
#loc114 = loc(fused[#loc32, #loc33])
#loc115 = loc(fused[#loc35, #loc36])
#loc116 = loc(fused[#loc38, #loc39, #loc40, #loc36])
#loc117 = loc(fused[#loc42, #loc43])
#loc118 = loc(fused[#loc46, #loc45])
#loc119 = loc(fused[#loc47, #loc48, #loc49, #loc43])
#loc120 = loc(fused[#loc50, #loc51])
#loc121 = loc(fused[#loc55, #loc56])
#loc122 = loc(fused[#loc57, #loc58])
#loc124 = loc(fused[#loc61, #loc62])
#loc125 = loc(fused[#loc64, #loc65])
#loc126 = loc(fused[#loc67, #loc65])
#loc127 = loc(fused[#loc68, #loc69])
#loc128 = loc(fused[#loc72, #loc71])
#loc129 = loc(fused[#loc73, #loc74, #loc75, #loc69])
#loc130 = loc(fused[#loc76, #loc77])
#loc131 = loc(fused[#loc82, #loc83])
#loc132 = loc(fused[#loc84, #loc85])
#loc134 = loc(fused[#loc88, #loc89])
#loc135 = loc(fused[#loc91, #loc92])
#loc136 = loc(fused[#loc94, #loc92])
#loc137 = loc(fused[#loc95, #loc96])
#loc138 = loc(fused[#loc97, #loc98])
