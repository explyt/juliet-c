!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc106)
  cir.func  @_ZN67CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_333badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc108)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc109)
    %2 = cir.alloca !cir.array<!ty__twoIntsStruct x 50>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc110)
    %3 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc111)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc8)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc13)
    cir.store %4, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc112)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc114)
      %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc18)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc18)
      cir.store %7, %5 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc114)
      cir.scope {
        %8 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc116)
        cir.scope {
          %20 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc118)
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc29)
            %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc29)
            cir.store %22, %20 : !u64i, !cir.ptr<!u64i> loc(#loc120)
            cir.for : cond {
              %23 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc31)
              %24 = cir.const #cir.int<100> : !s32i loc(#loc32)
              %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc32)
              %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc121)
              cir.condition(%26) loc(#loc121)
            } body {
              %23 = cir.const #cir.int<0> : !s32i loc(#loc33)
              %24 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc34)
              %25 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc35)
              %26 = cir.ptr_stride(%25 : !cir.ptr<!ty__twoIntsStruct>, %24 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc35)
              %27 = cir.get_member %26[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
              cir.store %23, %27 : !s32i, !cir.ptr<!s32i> loc(#loc122)
              %28 = cir.const #cir.int<0> : !s32i loc(#loc37)
              %29 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc38)
              %30 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
              %31 = cir.ptr_stride(%30 : !cir.ptr<!ty__twoIntsStruct>, %29 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
              %32 = cir.get_member %31[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
              cir.store %28, %32 : !s32i, !cir.ptr<!s32i> loc(#loc123)
              cir.yield loc(#loc28)
            } step {
              %23 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc41)
              %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc42)
              cir.store %24, %20 : !u64i, !cir.ptr<!u64i> loc(#loc124)
              cir.yield loc(#loc119)
            } loc(#loc119)
          } loc(#loc119)
        } loc(#loc117)
        %9 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc43)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc43)
        %11 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc44)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc44)
        %13 = cir.const #cir.int<100> : !s32i loc(#loc45)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc45)
        %15 = cir.const #cir.int<8> : !u64i loc(#loc125)
        %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc126)
        cir.libc.memcpy %16 bytes from %12 to %10 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc127)
        %17 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc51)
        %19 = cir.ptr_stride(%17 : !cir.ptr<!ty__twoIntsStruct>, %18 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc52)
        cir.call @printStructLine(%19) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc53)
      } loc(#loc115)
    } loc(#loc113)
    cir.return loc(#loc4)
  } loc(#loc107)
  cir.func internal private  @_ZN67CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc129)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc130)
    %2 = cir.alloca !cir.array<!ty__twoIntsStruct x 50>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc131)
    %3 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc132)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc59)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc64)
    cir.store %4, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc133)
    cir.scope {
      %5 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc135)
      %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc69)
      %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc69)
      cir.store %7, %5 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc135)
      cir.scope {
        %8 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc137)
        cir.scope {
          %20 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc139)
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc80)
            %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc80)
            cir.store %22, %20 : !u64i, !cir.ptr<!u64i> loc(#loc141)
            cir.for : cond {
              %23 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc82)
              %24 = cir.const #cir.int<100> : !s32i loc(#loc83)
              %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc83)
              %26 = cir.cmp(lt, %23, %25) : !u64i, !cir.bool loc(#loc142)
              cir.condition(%26) loc(#loc142)
            } body {
              %23 = cir.const #cir.int<0> : !s32i loc(#loc84)
              %24 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc85)
              %25 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc86)
              %26 = cir.ptr_stride(%25 : !cir.ptr<!ty__twoIntsStruct>, %24 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc86)
              %27 = cir.get_member %26[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc36)
              cir.store %23, %27 : !s32i, !cir.ptr<!s32i> loc(#loc143)
              %28 = cir.const #cir.int<0> : !s32i loc(#loc87)
              %29 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc88)
              %30 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc89)
              %31 = cir.ptr_stride(%30 : !cir.ptr<!ty__twoIntsStruct>, %29 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc89)
              %32 = cir.get_member %31[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
              cir.store %28, %32 : !s32i, !cir.ptr<!s32i> loc(#loc144)
              cir.yield loc(#loc79)
            } step {
              %23 = cir.load %20 : !cir.ptr<!u64i>, !u64i loc(#loc90)
              %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc91)
              cir.store %24, %20 : !u64i, !cir.ptr<!u64i> loc(#loc145)
              cir.yield loc(#loc140)
            } loc(#loc140)
          } loc(#loc140)
        } loc(#loc138)
        %9 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc92)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc92)
        %11 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc93)
        %12 = cir.cast(bitcast, %11 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc93)
        %13 = cir.const #cir.int<100> : !s32i loc(#loc94)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc94)
        %15 = cir.const #cir.int<8> : !u64i loc(#loc146)
        %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc147)
        cir.libc.memcpy %16 bytes from %12 to %10 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc148)
        %17 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc99)
        %18 = cir.const #cir.int<0> : !s32i loc(#loc100)
        %19 = cir.ptr_stride(%17 : !cir.ptr<!ty__twoIntsStruct>, %18 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc101)
        cir.call @printStructLine(%19) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc102)
      } loc(#loc136)
    } loc(#loc134)
    cir.return loc(#loc55)
  } loc(#loc128)
  cir.func  @_ZN67CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_334goodEv() extra(#fn_attr) {
    cir.call @_ZN67CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33L7goodG2BEv() : () -> () loc(#loc105)
    cir.return loc(#loc104)
  } loc(#loc149)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":24:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":51:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":26:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":26:21)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":27:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":27:32)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":28:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":28:35)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":29:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":29:37)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":32:12)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":32:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":33:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":50:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":34:9)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":34:32)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":35:9)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":49:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":36:13)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":36:37)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":37:13)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":45:13)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":38:17)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":38:24)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":40:17)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":44:17)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":40:26)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":40:22)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":40:29)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":40:33)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":42:40)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":42:28)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":42:21)
#loc36 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":43:40)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":43:28)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":43:21)
#loc40 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":40:39)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":40:38)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":47:20)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":47:26)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":47:34)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":47:38)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":47:58)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":47:13)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":47:59)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":48:30)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":48:35)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":48:36)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":48:13)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":58:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":84:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":60:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":60:21)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":61:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":61:32)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":62:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":62:35)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":63:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":63:37)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":65:12)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":65:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":66:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":83:5)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":67:9)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":67:32)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":68:9)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":82:9)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":69:13)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":69:37)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":70:13)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":78:13)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":71:17)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":71:24)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":73:17)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":77:17)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":73:26)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":73:22)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":73:29)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":73:33)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":75:40)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":75:28)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":75:21)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":76:40)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":76:28)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":76:21)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":73:39)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":73:38)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":80:20)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":80:26)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":80:34)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":80:38)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":80:58)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":80:13)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":80:59)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":81:30)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":81:35)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":81:36)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":81:13)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":86:1)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":89:1)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_declare_memcpy_33.cpp":88:5)
#loc106 = loc(fused[#loc1, #loc2])
#loc107 = loc(fused[#loc3, #loc4])
#loc108 = loc(fused[#loc5, #loc6])
#loc109 = loc(fused[#loc7, #loc8])
#loc110 = loc(fused[#loc9, #loc10])
#loc111 = loc(fused[#loc11, #loc12])
#loc112 = loc(fused[#loc14, #loc13])
#loc113 = loc(fused[#loc15, #loc16])
#loc114 = loc(fused[#loc17, #loc18])
#loc115 = loc(fused[#loc19, #loc20])
#loc116 = loc(fused[#loc21, #loc22])
#loc117 = loc(fused[#loc23, #loc24])
#loc118 = loc(fused[#loc25, #loc26])
#loc119 = loc(fused[#loc27, #loc28])
#loc120 = loc(fused[#loc30, #loc29])
#loc121 = loc(fused[#loc31, #loc32])
#loc122 = loc(fused[#loc35, #loc33])
#loc123 = loc(fused[#loc39, #loc37])
#loc124 = loc(fused[#loc42, #loc41])
#loc125 = loc(fused[#loc46, #loc47])
#loc126 = loc(fused[#loc45, #loc47])
#loc127 = loc(fused[#loc48, #loc49])
#loc128 = loc(fused[#loc54, #loc55])
#loc129 = loc(fused[#loc56, #loc57])
#loc130 = loc(fused[#loc58, #loc59])
#loc131 = loc(fused[#loc60, #loc61])
#loc132 = loc(fused[#loc62, #loc63])
#loc133 = loc(fused[#loc65, #loc64])
#loc134 = loc(fused[#loc66, #loc67])
#loc135 = loc(fused[#loc68, #loc69])
#loc136 = loc(fused[#loc70, #loc71])
#loc137 = loc(fused[#loc72, #loc73])
#loc138 = loc(fused[#loc74, #loc75])
#loc139 = loc(fused[#loc76, #loc77])
#loc140 = loc(fused[#loc78, #loc79])
#loc141 = loc(fused[#loc81, #loc80])
#loc142 = loc(fused[#loc82, #loc83])
#loc143 = loc(fused[#loc86, #loc84])
#loc144 = loc(fused[#loc89, #loc87])
#loc145 = loc(fused[#loc91, #loc90])
#loc146 = loc(fused[#loc95, #loc96])
#loc147 = loc(fused[#loc94, #loc96])
#loc148 = loc(fused[#loc97, #loc98])
#loc149 = loc(fused[#loc103, #loc104])
