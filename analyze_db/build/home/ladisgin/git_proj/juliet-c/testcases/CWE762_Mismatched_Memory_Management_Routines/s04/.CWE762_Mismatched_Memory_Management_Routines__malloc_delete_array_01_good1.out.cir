!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc2 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":16:9)
#loc4 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":16:19)
#loc5 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":16:26)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":49:14)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":23:9)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":58:13)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":83:10)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":83:14)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":83:20)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":83:32)
#loc81 = loc(fused[#loc4, #loc5])
#loc97 = loc(fused[#loc57, #loc58])
#loc98 = loc(fused[#loc59, #loc60])
!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_013A3AGoodClass = !cir.struct<class "CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01::GoodClass" {!cir.ptr<!s8i>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s04/CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"GoodClass\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc1)
  cir.func linkonce_odr @_ZN68CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_019GoodClassC2EPc(%arg0: !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_013A3AGoodClass> loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":16:9), %arg1: !cir.ptr<!s8i> loc(fused[#loc4, #loc5])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_013A3AGoodClass>, !cir.ptr<!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_013A3AGoodClass>>, ["this", init] {alignment = 8 : i64} loc(#loc2)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["name", init] {alignment = 8 : i64} loc(#loc81)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_013A3AGoodClass>, !cir.ptr<!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_013A3AGoodClass>> loc(#loc6)
    cir.store %arg1, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc6)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_013A3AGoodClass>>, !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_013A3AGoodClass> loc(#loc2)
    %3 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc7)
    %4 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc8)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc9)
    %6 = cir.call @strlen(%5) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc8)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc10)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc10)
    %9 = cir.binop(add, %6, %8) : !u64i loc(#loc82)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc7)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc83)
    %12 = cir.get_member %2[0] {name = "name"} : !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_013A3AGoodClass> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc12)
    cir.store %11, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc84)
    cir.br ^bb1 loc(#loc85)
  ^bb1:  // pred: ^bb0
    %13 = cir.get_member %2[0] {name = "name"} : !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_013A3AGoodClass> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc12)
    %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc16)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc17)
    %16 = cir.cmp(eq, %14, %15) : !cir.ptr<!s8i>, !cir.bool loc(#loc86)
    cir.brcond %16 ^bb2, ^bb3 loc(#loc87)
  ^bb2:  // pred: ^bb1
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc20)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc22)
    cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr1) loc(#loc20)
    cir.br ^bb3 loc(#loc15)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc15)
  ^bb4:  // pred: ^bb3
    %20 = cir.get_member %2[0] {name = "name"} : !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_013A3AGoodClass> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc12)
    %21 = cir.load %20 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %23 = cir.call @strcpy(%21, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc25)
    cir.return loc(#loc3)
  } loc(#loc80)
  cir.func linkonce_odr @_ZN68CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_019GoodClass9printNameEv(%arg0: !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_013A3AGoodClass> loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":49:14)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_013A3AGoodClass>, !cir.ptr<!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_013A3AGoodClass>>, ["this", init] {alignment = 8 : i64} loc(#loc28)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_013A3AGoodClass>, !cir.ptr<!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_013A3AGoodClass>> loc(#loc29)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_013A3AGoodClass>>, !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_013A3AGoodClass> loc(#loc28)
    %2 = cir.get_member %1[0] {name = "name"} : !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_013A3AGoodClass> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc12)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc31)
    cir.return loc(#loc27)
  } loc(#loc88)
  cir.func linkonce_odr @_ZN68CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_019GoodClassD2Ev(%arg0: !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_013A3AGoodClass> loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":23:9)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_013A3AGoodClass>, !cir.ptr<!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_013A3AGoodClass>>, ["this", init] {alignment = 8 : i64} loc(#loc32)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_013A3AGoodClass>, !cir.ptr<!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_013A3AGoodClass>> loc(#loc34)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_013A3AGoodClass>>, !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_013A3AGoodClass> loc(#loc32)
    %2 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc35)
    %3 = cir.get_member %1[0] {name = "name"} : !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_013A3AGoodClass> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc12)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc35)
    cir.return loc(#loc33)
  } loc(#loc89)
  cir.func internal private @_ZN68CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01L5good1Ev() extra(#fn_attr) {
    %0 = cir.alloca !ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_013A3AGoodClass, !cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_013A3AGoodClass>, ["goodClassObject", init] {alignment = 8 : i64} loc(#loc91)
    %1 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc1)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc1)
    cir.call @_ZN68CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_019GoodClassC2EPc(%0, %2) : (!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_013A3AGoodClass>, !cir.ptr<!s8i>) -> () loc(#loc41)
    cir.br ^bb1 loc(#loc42)
  ^bb1:  // pred: ^bb0
    cir.try_call @_ZN68CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_019GoodClass9printNameEv(%0) ^bb2, ^bb3 : (!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_013A3AGoodClass>) -> () loc(#loc43)
  ^bb2:  // pred: ^bb1
    cir.br ^bb5 loc(#loc42)
  ^bb3:  // pred: ^bb1
    %exception_ptr, %type_id = cir.eh.inflight_exception cleanup loc(#loc42)
    cir.call @_ZN68CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_019GoodClassD2Ev(%0) : (!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_013A3AGoodClass>) -> () extra(#fn_attr1) loc(#loc89)
    cir.br ^bb4(%exception_ptr, %type_id : !cir.ptr<!void>, !u32i) loc(#loc42)
  ^bb4(%3: !cir.ptr<!void> loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":58:13), %4: !u32i loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":58:13)):  // pred: ^bb3
    cir.resume %3, %4 loc(#loc42)
  ^bb5:  // pred: ^bb2
    cir.call @_ZN68CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_019GoodClassD2Ev(%0) : (!cir.ptr<!ty_CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_013A3AGoodClass>) -> () extra(#fn_attr1) loc(#loc89)
    cir.return loc(#loc38)
  } loc(#loc90)
  cir.func @_ZN68CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_014goodEv() extra(#fn_attr) {
    cir.call @_ZN68CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01L5good1Ev() : () -> () loc(#loc46)
    cir.return loc(#loc45)
  } loc(#loc92)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc93)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc94)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc54)
  cir.func @main(%arg0: !s32i loc(fused[#loc57, #loc58]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc59, #loc60])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc97)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc98)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc56)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc61)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc61)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc62)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc63)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc63)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc64)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc53)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    cir.call @_ZN68CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_014goodEv() : () -> () loc(#loc66)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc54)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc68)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc99)
    %11 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    cir.return %11 : !s32i loc(#loc99)
  } loc(#loc96)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc100)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc101)
  cir.func private @exit(!s32i) extra(#fn_attr1) loc(#loc102)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc103)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc104)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s04/CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":0:0)
#loc1 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":60:32)
#loc3 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":21:9)
#loc6 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":17:9)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":18:34)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":18:41)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":18:48)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":18:54)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":18:55)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":55:16)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":18:13)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":19:13)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":19:47)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":19:23)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":19:31)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":19:17)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":19:37)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":19:38)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":19:44)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":19:43)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":20:26)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":20:32)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":20:13)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":49:9)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":52:9)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":50:9)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":51:23)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":51:13)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":27:9)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":24:9)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":26:13)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":26:18)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":58:1)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":62:1)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":60:5)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":60:43)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":60:15)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":61:21)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":64:1)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":67:1)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":66:5)
#loc47 = loc("/usr/include/stdlib.h":575:1)
#loc48 = loc("/usr/include/stdlib.h":575:41)
#loc49 = loc("/usr/include/time.h":76:1)
#loc50 = loc("/usr/include/time.h":76:38)
#loc51 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc52 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":88:15)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":90:15)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":83:1)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":93:1)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":84:1)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":86:27)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":86:22)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":86:5)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":88:5)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":89:5)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":90:5)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":92:12)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__malloc_delete_array_01_good1.cpp":92:5)
#loc70 = loc("/usr/include/stdlib.h":672:1)
#loc71 = loc("/usr/include/stdlib.h":672:45)
#loc72 = loc("/usr/include/string.h":407:1)
#loc73 = loc("/usr/include/string.h":408:33)
#loc74 = loc("/usr/include/stdlib.h":756:1)
#loc75 = loc("/usr/include/stdlib.h":756:70)
#loc76 = loc("/usr/include/string.h":141:1)
#loc77 = loc("/usr/include/string.h":142:14)
#loc78 = loc("/usr/include/stdlib.h":687:1)
#loc79 = loc("/usr/include/stdlib.h":687:32)
#loc80 = loc(fused[#loc2, #loc3])
#loc82 = loc(fused[#loc8, #loc10])
#loc83 = loc(fused[#loc7, #loc11])
#loc84 = loc(fused[#loc13, #loc11])
#loc85 = loc(fused[#loc14, #loc15])
#loc86 = loc(fused[#loc18, #loc17])
#loc87 = loc(fused[#loc19, #loc15])
#loc88 = loc(fused[#loc26, #loc27])
#loc89 = loc(fused[#loc32, #loc33])
#loc90 = loc(fused[#loc37, #loc38])
#loc91 = loc(fused[#loc39, #loc40])
#loc92 = loc(fused[#loc44, #loc45])
#loc93 = loc(fused[#loc47, #loc48])
#loc94 = loc(fused[#loc49, #loc50])
#loc95 = loc(fused[#loc51, #loc52])
#loc96 = loc(fused[#loc55, #loc56])
#loc99 = loc(fused[#loc69, #loc68])
#loc100 = loc(fused[#loc70, #loc71])
#loc101 = loc(fused[#loc72, #loc73])
#loc102 = loc(fused[#loc74, #loc75])
#loc103 = loc(fused[#loc76, #loc77])
#loc104 = loc(fused[#loc78, #loc79])
