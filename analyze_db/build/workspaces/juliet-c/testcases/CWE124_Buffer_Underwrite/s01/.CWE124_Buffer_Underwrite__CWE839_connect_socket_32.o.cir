!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc372)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc373)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc374)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc375)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc376)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc377)
  cir.func private @close(!s32i) -> !s32i loc(#loc378)
  cir.func private @printIntLine(!s32i) loc(#loc379)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc380)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc20)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_connect_socket_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc382)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc383)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc384)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc383)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc384)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc30)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc385)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc387)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc35)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc36)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc387)
      cir.scope {
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc389)
        %11 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc390)
        %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc391)
        %13 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc392)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc44)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc44)
        cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc391)
        cir.scope {
          cir.do {
            cir.scope {
              %16 = cir.const #cir.int<2> : !s32i loc(#loc51)
              %17 = cir.const #cir.int<1> : !s32i loc(#loc52)
              %18 = cir.const #cir.int<6> : !s32i loc(#loc53)
              %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc54)
              cir.store %19, %12 : !s32i, !cir.ptr<!s32i> loc(#loc395)
              cir.scope {
                %58 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc59)
                %59 = cir.const #cir.int<1> : !s32i loc(#loc60)
                %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc60)
                %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc397)
                cir.if %61 {
                  cir.break loc(#loc62)
                } loc(#loc398)
              } loc(#loc396)
              %20 = cir.cast(bitcast, %11 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc399)
              %21 = cir.const #cir.int<0> : !s32i loc(#loc65)
              %22 = cir.const #cir.int<16> : !u64i loc(#loc400)
              cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc401)
              %23 = cir.const #cir.int<2> : !s32i loc(#loc70)
              %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc70)
              %25 = cir.get_member %11[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
              cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc402)
              %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
              %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
              %28 = cir.call @inet_addr(%27) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc73)
              %29 = cir.get_member %11[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc74)
              %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc75)
              cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc403)
              %31 = cir.const #cir.int<27015> : !s32i loc(#loc78)
              %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc78)
              %33 = cir.call @htons(%32) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc79)
              %34 = cir.get_member %11[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
              cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc404)
              cir.scope {
                %58 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc85)
                %59 = cir.cast(bitcast, %11 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc406)
                %60 = cir.const #cir.int<16> : !u64i loc(#loc407)
                %61 = cir.cast(integral, %60 : !u64i), !u32i loc(#loc407)
                %62 = cir.call @connect(%58, %59, %61) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc90)
                %63 = cir.const #cir.int<1> : !s32i loc(#loc91)
                %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc91)
                %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc408)
                cir.if %65 {
                  cir.break loc(#loc93)
                } loc(#loc409)
              } loc(#loc405)
              %35 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc94)
              %36 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc95)
              %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc95)
              %38 = cir.const #cir.int<3> : !s32i loc(#loc96)
              %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc96)
              %40 = cir.const #cir.int<4> : !u64i loc(#loc96)
              %41 = cir.binop(mul, %39, %40) : !u64i loc(#loc96)
              %42 = cir.const #cir.int<2> : !s32i loc(#loc96)
              %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc96)
              %44 = cir.binop(add, %41, %43) : !u64i loc(#loc96)
              %45 = cir.const #cir.int<1> : !s32i loc(#loc97)
              %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc97)
              %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc410)
              %48 = cir.const #cir.int<0> : !s32i loc(#loc98)
              %49 = cir.call @recv(%35, %37, %47, %48) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc99)
              %50 = cir.cast(integral, %49 : !s64i), !s32i loc(#loc99)
              cir.store %50, %10 : !s32i, !cir.ptr<!s32i> loc(#loc411)
              cir.scope {
                %58 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc104)
                %59 = cir.const #cir.int<1> : !s32i loc(#loc105)
                %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc105)
                %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc413)
                %62 = cir.ternary(%61, true {
                  %63 = cir.const #true loc(#loc106)
                  cir.yield %63 : !cir.bool loc(#loc106)
                }, false {
                  %63 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc107)
                  %64 = cir.const #cir.int<0> : !s32i loc(#loc108)
                  %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc414)
                  %66 = cir.ternary(%65, true {
                    %67 = cir.const #true loc(#loc106)
                    cir.yield %67 : !cir.bool loc(#loc106)
                  }, false {
                    %67 = cir.const #false loc(#loc106)
                    cir.yield %67 : !cir.bool loc(#loc106)
                  }) : (!cir.bool) -> !cir.bool loc(#loc106)
                  cir.yield %66 : !cir.bool loc(#loc106)
                }) : (!cir.bool) -> !cir.bool loc(#loc106)
                cir.if %62 {
                  cir.break loc(#loc110)
                } loc(#loc415)
              } loc(#loc412)
              %51 = cir.const #cir.int<0> : !s32i loc(#loc111)
              %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc111)
              %53 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc112)
              %54 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc113)
              %55 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %53 : !s32i), !cir.ptr<!s8i> loc(#loc113)
              cir.store %52, %55 : !s8i, !cir.ptr<!s8i> loc(#loc416)
              %56 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc114)
              %57 = cir.call @atoi(%56) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc115)
              cir.store %57, %5 : !s32i, !cir.ptr<!s32i> loc(#loc417)
            } loc(#loc394)
            cir.yield loc(#loc48)
          } while {
            %16 = cir.const #cir.int<0> : !s32i loc(#loc118)
            %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc118)
            cir.condition(%17) loc(#loc118)
          } loc(#loc393)
        } loc(#loc393)
        cir.scope {
          %16 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc121)
          %17 = cir.const #cir.int<1> : !s32i loc(#loc122)
          %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc122)
          %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc419)
          cir.if %19 {
            %20 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc124)
            %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc125)
          } loc(#loc420)
        } loc(#loc418)
      } loc(#loc388)
      %8 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc126)
      %9 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc127)
      cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc421)
    } loc(#loc386)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc423)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc132)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc133)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc423)
      cir.scope {
        %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc425)
        %9 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc426)
        %10 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc426)
        cir.store %10, %9 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc426)
        cir.scope {
          %11 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc142)
          %12 = cir.const #cir.int<10> : !s32i loc(#loc143)
          %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc428)
          cir.if %13 {
            %14 = cir.const #cir.int<1> : !s32i loc(#loc147)
            %15 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc148)
            %16 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc149)
            %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc149)
            cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc430)
            cir.scope {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc152)
              cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc432)
              cir.for : cond {
                %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc154)
                %20 = cir.const #cir.int<10> : !s32i loc(#loc155)
                %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc433)
                cir.condition(%21) loc(#loc156)
              } body {
                cir.scope {
                  %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc158)
                  %20 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc159)
                  %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc159)
                  %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc159)
                  cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc160)
                } loc(#loc434)
                cir.yield loc(#loc151)
              } step {
                %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc161)
                %20 = cir.unary(inc, %19) nsw : !s32i, !s32i loc(#loc162)
                cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc435)
                cir.yield loc(#loc431)
              } loc(#loc431)
            } loc(#loc431)
          } else {
            %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc20)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc20)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc163)
          } loc(#loc429)
        } loc(#loc427)
      } loc(#loc424)
    } loc(#loc422)
    cir.return loc(#loc22)
  } loc(#loc381)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_connect_socket_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc437)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc166)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc438)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc168)
    cir.return loc(#loc165)
  } loc(#loc436)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc440)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc441)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc442)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc441)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc442)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc178)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc179)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc443)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc445)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc184)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc185)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc445)
      %8 = cir.const #cir.int<7> : !s32i loc(#loc186)
      cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc446)
      %9 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc188)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc189)
      cir.store %9, %10 : !s32i, !cir.ptr<!s32i> loc(#loc447)
    } loc(#loc444)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc449)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc194)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc195)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc449)
      cir.scope {
        %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc451)
        %9 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc452)
        %10 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc452)
        cir.store %10, %9 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc452)
        cir.scope {
          %11 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc204)
          %12 = cir.const #cir.int<10> : !s32i loc(#loc205)
          %13 = cir.cmp(lt, %11, %12) : !s32i, !cir.bool loc(#loc454)
          cir.if %13 {
            %14 = cir.const #cir.int<1> : !s32i loc(#loc209)
            %15 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc210)
            %16 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc211)
            %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc211)
            cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc456)
            cir.scope {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc214)
              cir.store %18, %8 : !s32i, !cir.ptr<!s32i> loc(#loc458)
              cir.for : cond {
                %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc216)
                %20 = cir.const #cir.int<10> : !s32i loc(#loc217)
                %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc459)
                cir.condition(%21) loc(#loc218)
              } body {
                cir.scope {
                  %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc220)
                  %20 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc221)
                  %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc221)
                  %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc221)
                  cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc222)
                } loc(#loc460)
                cir.yield loc(#loc213)
              } step {
                %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc223)
                %20 = cir.unary(inc, %19) nsw : !s32i, !s32i loc(#loc224)
                cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc461)
                cir.yield loc(#loc457)
              } loc(#loc457)
            } loc(#loc457)
          } else {
            %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc225)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc225)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc226)
          } loc(#loc455)
        } loc(#loc453)
      } loc(#loc450)
    } loc(#loc448)
    cir.return loc(#loc171)
  } loc(#loc439)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc227)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc463)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc464)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc465)
    cir.store %0, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc464)
    cir.store %0, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc465)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc236)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc237)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc466)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc468)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc242)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc243)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc468)
      cir.scope {
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc470)
        %11 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc471)
        %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc472)
        %13 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc473)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc251)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc251)
        cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc472)
        cir.scope {
          cir.do {
            cir.scope {
              %16 = cir.const #cir.int<2> : !s32i loc(#loc258)
              %17 = cir.const #cir.int<1> : !s32i loc(#loc259)
              %18 = cir.const #cir.int<6> : !s32i loc(#loc260)
              %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc261)
              cir.store %19, %12 : !s32i, !cir.ptr<!s32i> loc(#loc476)
              cir.scope {
                %58 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc266)
                %59 = cir.const #cir.int<1> : !s32i loc(#loc267)
                %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc267)
                %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc478)
                cir.if %61 {
                  cir.break loc(#loc269)
                } loc(#loc479)
              } loc(#loc477)
              %20 = cir.cast(bitcast, %11 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc480)
              %21 = cir.const #cir.int<0> : !s32i loc(#loc272)
              %22 = cir.const #cir.int<16> : !u64i loc(#loc481)
              cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc482)
              %23 = cir.const #cir.int<2> : !s32i loc(#loc277)
              %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc277)
              %25 = cir.get_member %11[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc71)
              cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc483)
              %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc279)
              %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc279)
              %28 = cir.call @inet_addr(%27) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc280)
              %29 = cir.get_member %11[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc74)
              %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc75)
              cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc484)
              %31 = cir.const #cir.int<27015> : !s32i loc(#loc283)
              %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc283)
              %33 = cir.call @htons(%32) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc284)
              %34 = cir.get_member %11[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
              cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc485)
              cir.scope {
                %58 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc289)
                %59 = cir.cast(bitcast, %11 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc487)
                %60 = cir.const #cir.int<16> : !u64i loc(#loc488)
                %61 = cir.cast(integral, %60 : !u64i), !u32i loc(#loc488)
                %62 = cir.call @connect(%58, %59, %61) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc294)
                %63 = cir.const #cir.int<1> : !s32i loc(#loc295)
                %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc295)
                %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc489)
                cir.if %65 {
                  cir.break loc(#loc297)
                } loc(#loc490)
              } loc(#loc486)
              %35 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc298)
              %36 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc299)
              %37 = cir.cast(bitcast, %36 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc299)
              %38 = cir.const #cir.int<3> : !s32i loc(#loc300)
              %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc300)
              %40 = cir.const #cir.int<4> : !u64i loc(#loc300)
              %41 = cir.binop(mul, %39, %40) : !u64i loc(#loc300)
              %42 = cir.const #cir.int<2> : !s32i loc(#loc300)
              %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc300)
              %44 = cir.binop(add, %41, %43) : !u64i loc(#loc300)
              %45 = cir.const #cir.int<1> : !s32i loc(#loc301)
              %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc301)
              %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc491)
              %48 = cir.const #cir.int<0> : !s32i loc(#loc302)
              %49 = cir.call @recv(%35, %37, %47, %48) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc303)
              %50 = cir.cast(integral, %49 : !s64i), !s32i loc(#loc303)
              cir.store %50, %10 : !s32i, !cir.ptr<!s32i> loc(#loc492)
              cir.scope {
                %58 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc308)
                %59 = cir.const #cir.int<1> : !s32i loc(#loc309)
                %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc309)
                %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc494)
                %62 = cir.ternary(%61, true {
                  %63 = cir.const #true loc(#loc310)
                  cir.yield %63 : !cir.bool loc(#loc310)
                }, false {
                  %63 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc311)
                  %64 = cir.const #cir.int<0> : !s32i loc(#loc312)
                  %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc495)
                  %66 = cir.ternary(%65, true {
                    %67 = cir.const #true loc(#loc310)
                    cir.yield %67 : !cir.bool loc(#loc310)
                  }, false {
                    %67 = cir.const #false loc(#loc310)
                    cir.yield %67 : !cir.bool loc(#loc310)
                  }) : (!cir.bool) -> !cir.bool loc(#loc310)
                  cir.yield %66 : !cir.bool loc(#loc310)
                }) : (!cir.bool) -> !cir.bool loc(#loc310)
                cir.if %62 {
                  cir.break loc(#loc314)
                } loc(#loc496)
              } loc(#loc493)
              %51 = cir.const #cir.int<0> : !s32i loc(#loc315)
              %52 = cir.cast(integral, %51 : !s32i), !s8i loc(#loc315)
              %53 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc316)
              %54 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc317)
              %55 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %53 : !s32i), !cir.ptr<!s8i> loc(#loc317)
              cir.store %52, %55 : !s8i, !cir.ptr<!s8i> loc(#loc497)
              %56 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc318)
              %57 = cir.call @atoi(%56) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc319)
              cir.store %57, %5 : !s32i, !cir.ptr<!s32i> loc(#loc498)
            } loc(#loc475)
            cir.yield loc(#loc255)
          } while {
            %16 = cir.const #cir.int<0> : !s32i loc(#loc322)
            %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc322)
            cir.condition(%17) loc(#loc322)
          } loc(#loc474)
        } loc(#loc474)
        cir.scope {
          %16 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc325)
          %17 = cir.const #cir.int<1> : !s32i loc(#loc326)
          %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc326)
          %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc500)
          cir.if %19 {
            %20 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc328)
            %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc329)
          } loc(#loc501)
        } loc(#loc499)
      } loc(#loc469)
      %8 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc330)
      %9 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc331)
      cir.store %8, %9 : !s32i, !cir.ptr<!s32i> loc(#loc502)
    } loc(#loc467)
    cir.scope {
      %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc504)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc336)
      %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc337)
      cir.store %7, %5 : !s32i, !cir.ptr<!s32i> loc(#loc504)
      cir.scope {
        %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc506)
        %9 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc507)
        %10 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc507)
        cir.store %10, %9 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc507)
        cir.scope {
          %11 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc346)
          %12 = cir.const #cir.int<0> : !s32i loc(#loc347)
          %13 = cir.cmp(ge, %11, %12) : !s32i, !cir.bool loc(#loc509)
          %14 = cir.ternary(%13, true {
            %15 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc349)
            %16 = cir.const #cir.int<10> : !s32i loc(#loc350)
            %17 = cir.cmp(lt, %15, %16) : !s32i, !cir.bool loc(#loc510)
            %18 = cir.ternary(%17, true {
              %19 = cir.const #true loc(#loc348)
              cir.yield %19 : !cir.bool loc(#loc348)
            }, false {
              %19 = cir.const #false loc(#loc348)
              cir.yield %19 : !cir.bool loc(#loc348)
            }) : (!cir.bool) -> !cir.bool loc(#loc348)
            cir.yield %18 : !cir.bool loc(#loc348)
          }, false {
            %15 = cir.const #false loc(#loc348)
            cir.yield %15 : !cir.bool loc(#loc348)
          }) : (!cir.bool) -> !cir.bool loc(#loc348)
          cir.if %14 {
            %15 = cir.const #cir.int<1> : !s32i loc(#loc355)
            %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc356)
            %17 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc357)
            %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc357)
            cir.store %15, %18 : !s32i, !cir.ptr<!s32i> loc(#loc512)
            cir.scope {
              %19 = cir.const #cir.int<0> : !s32i loc(#loc360)
              cir.store %19, %8 : !s32i, !cir.ptr<!s32i> loc(#loc514)
              cir.for : cond {
                %20 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc362)
                %21 = cir.const #cir.int<10> : !s32i loc(#loc363)
                %22 = cir.cmp(lt, %20, %21) : !s32i, !cir.bool loc(#loc515)
                cir.condition(%22) loc(#loc364)
              } body {
                cir.scope {
                  %20 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc366)
                  %21 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc367)
                  %22 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc367)
                  %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc367)
                  cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc368)
                } loc(#loc516)
                cir.yield loc(#loc359)
              } step {
                %20 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc369)
                %21 = cir.unary(inc, %20) nsw : !s32i, !s32i loc(#loc370)
                cir.store %21, %8 : !s32i, !cir.ptr<!s32i> loc(#loc517)
                cir.yield loc(#loc513)
              } loc(#loc513)
            } loc(#loc513)
          } else {
            %15 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc227)
            %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc227)
            cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc371)
          } loc(#loc511)
        } loc(#loc508)
      } loc(#loc505)
    } loc(#loc503)
    cir.return loc(#loc229)
  } loc(#loc462)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":79:53)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc19 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":129:27)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":44:1)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":133:1)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":46:5)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":46:9)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":47:5)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":47:22)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":48:5)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":48:22)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":50:13)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":50:12)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":50:5)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":51:5)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":110:5)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":52:9)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":52:21)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":52:20)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":53:9)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":108:9)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":58:13)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":58:17)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":59:13)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":59:32)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":60:13)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":60:36)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":61:13)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":61:45)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":62:13)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":97:21)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":63:13)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":96:13)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":72:40)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":72:49)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":72:62)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":72:33)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":72:17)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":72:73)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":73:17)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":76:17)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":73:21)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":73:38)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":74:17)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":75:21)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":77:24)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":77:25)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":77:34)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":77:37)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":77:51)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":77:17)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":77:52)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":78:38)
#loc71 = loc("/usr/include/netinet/in.h":249:5)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":78:17)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":79:43)
#loc74 = loc("/usr/include/netinet/in.h":251:20)
#loc75 = loc("/usr/include/netinet/in.h":33:15)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":79:17)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":79:63)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":80:42)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":80:36)
#loc80 = loc("/usr/include/netinet/in.h":250:15)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":80:17)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":80:50)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":81:17)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":84:17)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":81:29)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":81:62)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":81:63)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":81:72)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":81:86)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":81:21)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":81:92)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":82:17)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":83:21)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":87:35)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":87:50)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":87:63)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":87:81)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":87:84)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":87:30)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":87:17)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":87:85)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":88:17)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":91:17)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":88:21)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":88:35)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":88:48)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":88:51)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":88:65)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":89:17)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":90:21)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":93:43)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":93:29)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":93:17)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":95:29)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":95:24)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":95:17)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":95:40)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":97:20)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":98:13)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":101:13)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":98:17)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":98:34)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":99:13)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":100:30)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":100:17)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":109:21)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":109:10)
#loc128 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":109:9)
#loc129 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":111:5)
#loc130 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":132:5)
#loc131 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":112:9)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":112:21)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":112:20)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":113:9)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":131:9)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":114:13)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":114:17)
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":115:13)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":115:34)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":118:13)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":130:13)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":118:17)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":118:24)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":119:13)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":126:13)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":128:13)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":120:32)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":120:24)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":120:17)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":122:17)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":125:17)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":122:25)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":122:21)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":122:28)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":122:32)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":122:30)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":123:17)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":124:41)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":124:34)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":124:21)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":122:37)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":122:36)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":129:17)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":269:1)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":273:1)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":271:5)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":271:13)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":272:5)
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":272:13)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":140:1)
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":176:1)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":142:5)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":142:9)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":143:5)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":143:22)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":144:5)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":144:22)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":146:13)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":146:12)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":146:5)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":147:5)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":153:5)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":148:9)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":148:21)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":148:20)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":151:16)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":151:9)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":152:21)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":152:10)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":152:9)
#loc191 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":154:5)
#loc192 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":175:5)
#loc193 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":155:9)
#loc194 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":155:21)
#loc195 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":155:20)
#loc196 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":156:9)
#loc197 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":174:9)
#loc198 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":157:13)
#loc199 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":157:17)
#loc200 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":158:13)
#loc201 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":158:34)
#loc202 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":161:13)
#loc203 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":173:13)
#loc204 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":161:17)
#loc205 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":161:24)
#loc206 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":162:13)
#loc207 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":169:13)
#loc208 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":171:13)
#loc209 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":163:32)
#loc210 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":163:24)
#loc211 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":163:17)
#loc212 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":165:17)
#loc213 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":168:17)
#loc214 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":165:25)
#loc215 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":165:21)
#loc216 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":165:28)
#loc217 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":165:32)
#loc218 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":165:30)
#loc219 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":166:17)
#loc220 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":167:41)
#loc221 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":167:34)
#loc222 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":167:21)
#loc223 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":165:37)
#loc224 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":165:36)
#loc225 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":172:27)
#loc226 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":172:17)
#loc227 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":263:27)
#loc228 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":179:1)
#loc229 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":267:1)
#loc230 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":181:5)
#loc231 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":181:9)
#loc232 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":182:5)
#loc233 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":182:22)
#loc234 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":183:5)
#loc235 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":183:22)
#loc236 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":185:13)
#loc237 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":185:12)
#loc238 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":185:5)
#loc239 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":186:5)
#loc240 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":245:5)
#loc241 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":187:9)
#loc242 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":187:21)
#loc243 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":187:20)
#loc244 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":188:9)
#loc245 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":243:9)
#loc246 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":193:13)
#loc247 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":193:17)
#loc248 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":194:13)
#loc249 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":194:32)
#loc250 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":195:13)
#loc251 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":195:36)
#loc252 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":196:13)
#loc253 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":196:45)
#loc254 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":197:13)
#loc255 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":232:21)
#loc256 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":198:13)
#loc257 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":231:13)
#loc258 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":207:40)
#loc259 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":207:49)
#loc260 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":207:62)
#loc261 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":207:33)
#loc262 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":207:17)
#loc263 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":207:73)
#loc264 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":208:17)
#loc265 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":211:17)
#loc266 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":208:21)
#loc267 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":208:38)
#loc268 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":209:17)
#loc269 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":210:21)
#loc270 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":212:24)
#loc271 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":212:25)
#loc272 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":212:34)
#loc273 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":212:37)
#loc274 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":212:51)
#loc275 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":212:17)
#loc276 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":212:52)
#loc277 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":213:38)
#loc278 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":213:17)
#loc279 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":214:53)
#loc280 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":214:43)
#loc281 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":214:17)
#loc282 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":214:63)
#loc283 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":215:42)
#loc284 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":215:36)
#loc285 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":215:17)
#loc286 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":215:50)
#loc287 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":216:17)
#loc288 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":219:17)
#loc289 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":216:29)
#loc290 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":216:62)
#loc291 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":216:63)
#loc292 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":216:72)
#loc293 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":216:86)
#loc294 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":216:21)
#loc295 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":216:92)
#loc296 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":217:17)
#loc297 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":218:21)
#loc298 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":222:35)
#loc299 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":222:50)
#loc300 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":222:63)
#loc301 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":222:81)
#loc302 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":222:84)
#loc303 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":222:30)
#loc304 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":222:17)
#loc305 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":222:85)
#loc306 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":223:17)
#loc307 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":226:17)
#loc308 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":223:21)
#loc309 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":223:35)
#loc310 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":223:48)
#loc311 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":223:51)
#loc312 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":223:65)
#loc313 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":224:17)
#loc314 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":225:21)
#loc315 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":228:43)
#loc316 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":228:29)
#loc317 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":228:17)
#loc318 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":230:29)
#loc319 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":230:24)
#loc320 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":230:17)
#loc321 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":230:40)
#loc322 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":232:20)
#loc323 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":233:13)
#loc324 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":236:13)
#loc325 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":233:17)
#loc326 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":233:34)
#loc327 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":234:13)
#loc328 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":235:30)
#loc329 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":235:17)
#loc330 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":244:21)
#loc331 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":244:10)
#loc332 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":244:9)
#loc333 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":246:5)
#loc334 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":266:5)
#loc335 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":247:9)
#loc336 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":247:21)
#loc337 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":247:20)
#loc338 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":248:9)
#loc339 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":265:9)
#loc340 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":249:13)
#loc341 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":249:17)
#loc342 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":250:13)
#loc343 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":250:34)
#loc344 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":252:13)
#loc345 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":264:13)
#loc346 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":252:17)
#loc347 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":252:25)
#loc348 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":252:27)
#loc349 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":252:30)
#loc350 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":252:38)
#loc351 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":252:40)
#loc352 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":253:13)
#loc353 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":260:13)
#loc354 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":262:13)
#loc355 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":254:32)
#loc356 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":254:24)
#loc357 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":254:17)
#loc358 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":256:17)
#loc359 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":259:17)
#loc360 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":256:25)
#loc361 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":256:21)
#loc362 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":256:28)
#loc363 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":256:32)
#loc364 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":256:30)
#loc365 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":257:17)
#loc366 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":258:41)
#loc367 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":258:34)
#loc368 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":258:21)
#loc369 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":256:37)
#loc370 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":256:36)
#loc371 = loc("CWE124_Buffer_Underwrite__CWE839_connect_socket_32.c":263:17)
#loc372 = loc(fused[#loc1, #loc2])
#loc373 = loc(fused[#loc3, #loc4])
#loc374 = loc(fused[#loc6, #loc7])
#loc375 = loc(fused[#loc8, #loc9])
#loc376 = loc(fused[#loc10, #loc11])
#loc377 = loc(fused[#loc12, #loc13])
#loc378 = loc(fused[#loc14, #loc15])
#loc379 = loc(fused[#loc16, #loc17])
#loc380 = loc(fused[#loc18, #loc19])
#loc381 = loc(fused[#loc21, #loc22])
#loc382 = loc(fused[#loc23, #loc24])
#loc383 = loc(fused[#loc25, #loc26])
#loc384 = loc(fused[#loc27, #loc28])
#loc385 = loc(fused[#loc31, #loc29])
#loc386 = loc(fused[#loc32, #loc33])
#loc387 = loc(fused[#loc34, #loc35])
#loc388 = loc(fused[#loc37, #loc38])
#loc389 = loc(fused[#loc39, #loc40])
#loc390 = loc(fused[#loc41, #loc42])
#loc391 = loc(fused[#loc43, #loc44])
#loc392 = loc(fused[#loc45, #loc46])
#loc393 = loc(fused[#loc47, #loc48])
#loc394 = loc(fused[#loc49, #loc50])
#loc395 = loc(fused[#loc55, #loc56])
#loc396 = loc(fused[#loc57, #loc58])
#loc397 = loc(fused[#loc59, #loc60])
#loc398 = loc(fused[#loc61, #loc58])
#loc399 = loc(fused[#loc63, #loc64])
#loc400 = loc(fused[#loc66, #loc67])
#loc401 = loc(fused[#loc68, #loc69])
#loc402 = loc(fused[#loc72, #loc70])
#loc403 = loc(fused[#loc76, #loc77])
#loc404 = loc(fused[#loc81, #loc82])
#loc405 = loc(fused[#loc83, #loc84])
#loc406 = loc(fused[#loc86, #loc87])
#loc407 = loc(fused[#loc88, #loc89])
#loc408 = loc(fused[#loc90, #loc91])
#loc409 = loc(fused[#loc92, #loc84])
#loc410 = loc(fused[#loc96, #loc97])
#loc411 = loc(fused[#loc100, #loc101])
#loc412 = loc(fused[#loc102, #loc103])
#loc413 = loc(fused[#loc104, #loc105])
#loc414 = loc(fused[#loc107, #loc108])
#loc415 = loc(fused[#loc109, #loc103])
#loc416 = loc(fused[#loc113, #loc111])
#loc417 = loc(fused[#loc116, #loc117])
#loc418 = loc(fused[#loc119, #loc120])
#loc419 = loc(fused[#loc121, #loc122])
#loc420 = loc(fused[#loc123, #loc120])
#loc421 = loc(fused[#loc128, #loc126])
#loc422 = loc(fused[#loc129, #loc130])
#loc423 = loc(fused[#loc131, #loc132])
#loc424 = loc(fused[#loc134, #loc135])
#loc425 = loc(fused[#loc136, #loc137])
#loc426 = loc(fused[#loc138, #loc139])
#loc427 = loc(fused[#loc140, #loc141])
#loc428 = loc(fused[#loc142, #loc143])
#loc429 = loc(fused[#loc144, #loc145, #loc146, #loc141])
#loc430 = loc(fused[#loc149, #loc147])
#loc431 = loc(fused[#loc150, #loc151])
#loc432 = loc(fused[#loc153, #loc152])
#loc433 = loc(fused[#loc154, #loc155])
#loc434 = loc(fused[#loc157, #loc151])
#loc435 = loc(fused[#loc162, #loc161])
#loc436 = loc(fused[#loc164, #loc165])
#loc437 = loc(fused[#loc166, #loc167])
#loc438 = loc(fused[#loc168, #loc169])
#loc439 = loc(fused[#loc170, #loc171])
#loc440 = loc(fused[#loc172, #loc173])
#loc441 = loc(fused[#loc174, #loc175])
#loc442 = loc(fused[#loc176, #loc177])
#loc443 = loc(fused[#loc180, #loc178])
#loc444 = loc(fused[#loc181, #loc182])
#loc445 = loc(fused[#loc183, #loc184])
#loc446 = loc(fused[#loc187, #loc186])
#loc447 = loc(fused[#loc190, #loc188])
#loc448 = loc(fused[#loc191, #loc192])
#loc449 = loc(fused[#loc193, #loc194])
#loc450 = loc(fused[#loc196, #loc197])
#loc451 = loc(fused[#loc198, #loc199])
#loc452 = loc(fused[#loc200, #loc201])
#loc453 = loc(fused[#loc202, #loc203])
#loc454 = loc(fused[#loc204, #loc205])
#loc455 = loc(fused[#loc206, #loc207, #loc208, #loc203])
#loc456 = loc(fused[#loc211, #loc209])
#loc457 = loc(fused[#loc212, #loc213])
#loc458 = loc(fused[#loc215, #loc214])
#loc459 = loc(fused[#loc216, #loc217])
#loc460 = loc(fused[#loc219, #loc213])
#loc461 = loc(fused[#loc224, #loc223])
#loc462 = loc(fused[#loc228, #loc229])
#loc463 = loc(fused[#loc230, #loc231])
#loc464 = loc(fused[#loc232, #loc233])
#loc465 = loc(fused[#loc234, #loc235])
#loc466 = loc(fused[#loc238, #loc236])
#loc467 = loc(fused[#loc239, #loc240])
#loc468 = loc(fused[#loc241, #loc242])
#loc469 = loc(fused[#loc244, #loc245])
#loc470 = loc(fused[#loc246, #loc247])
#loc471 = loc(fused[#loc248, #loc249])
#loc472 = loc(fused[#loc250, #loc251])
#loc473 = loc(fused[#loc252, #loc253])
#loc474 = loc(fused[#loc254, #loc255])
#loc475 = loc(fused[#loc256, #loc257])
#loc476 = loc(fused[#loc262, #loc263])
#loc477 = loc(fused[#loc264, #loc265])
#loc478 = loc(fused[#loc266, #loc267])
#loc479 = loc(fused[#loc268, #loc265])
#loc480 = loc(fused[#loc270, #loc271])
#loc481 = loc(fused[#loc273, #loc274])
#loc482 = loc(fused[#loc275, #loc276])
#loc483 = loc(fused[#loc278, #loc277])
#loc484 = loc(fused[#loc281, #loc282])
#loc485 = loc(fused[#loc285, #loc286])
#loc486 = loc(fused[#loc287, #loc288])
#loc487 = loc(fused[#loc290, #loc291])
#loc488 = loc(fused[#loc292, #loc293])
#loc489 = loc(fused[#loc294, #loc295])
#loc490 = loc(fused[#loc296, #loc288])
#loc491 = loc(fused[#loc300, #loc301])
#loc492 = loc(fused[#loc304, #loc305])
#loc493 = loc(fused[#loc306, #loc307])
#loc494 = loc(fused[#loc308, #loc309])
#loc495 = loc(fused[#loc311, #loc312])
#loc496 = loc(fused[#loc313, #loc307])
#loc497 = loc(fused[#loc317, #loc315])
#loc498 = loc(fused[#loc320, #loc321])
#loc499 = loc(fused[#loc323, #loc324])
#loc500 = loc(fused[#loc325, #loc326])
#loc501 = loc(fused[#loc327, #loc324])
#loc502 = loc(fused[#loc332, #loc330])
#loc503 = loc(fused[#loc333, #loc334])
#loc504 = loc(fused[#loc335, #loc336])
#loc505 = loc(fused[#loc338, #loc339])
#loc506 = loc(fused[#loc340, #loc341])
#loc507 = loc(fused[#loc342, #loc343])
#loc508 = loc(fused[#loc344, #loc345])
#loc509 = loc(fused[#loc346, #loc347])
#loc510 = loc(fused[#loc349, #loc351])
#loc511 = loc(fused[#loc352, #loc353, #loc354, #loc345])
#loc512 = loc(fused[#loc357, #loc355])
#loc513 = loc(fused[#loc358, #loc359])
#loc514 = loc(fused[#loc361, #loc360])
#loc515 = loc(fused[#loc362, #loc363])
#loc516 = loc(fused[#loc365, #loc359])
#loc517 = loc(fused[#loc370, #loc369])
