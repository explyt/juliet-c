!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":173:10)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":173:14)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":173:20)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":173:32)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":141:23)
#true = #cir.bool<true> : !cir.bool
#loc311 = loc(fused[#loc101, #loc102])
#loc312 = loc(fused[#loc103, #loc104])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61b_badSource(!s32i) -> !s32i loc(#loc271)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc272)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc273)
  cir.func private @printIntLine(!s32i) loc(#loc274)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc275)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc11)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc276)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc278)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc279)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc280)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc23)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc281)
    %5 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc25)
    %6 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61b_badSource(%5) : (!s32i) -> !s32i loc(#loc26)
    cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc282)
    cir.br ^bb1 loc(#loc283)
  ^bb1:  // pred: ^bb0
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc31)
    %8 = cir.const #cir.int<10> : !s32i loc(#loc32)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc32)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc284)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc285)
    %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc31)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc286)
    cir.store %13, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc279)
    cir.br ^bb2 loc(#loc287)
  ^bb2:  // pred: ^bb1
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc37)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc38)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc38)
    %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s32i>, !cir.bool loc(#loc288)
    cir.brcond %17 ^bb3, ^bb4 loc(#loc289)
  ^bb3:  // pred: ^bb2
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc40)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc42)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc40)
    cir.br ^bb4 loc(#loc36)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc36)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc290)
  ^bb6:  // pred: ^bb5
    %21 = cir.const #cir.int<0> : !s32i loc(#loc45)
    cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc291)
    cir.br ^bb7 loc(#loc290)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc47)
    %23 = cir.const #cir.int<10> : !s32i loc(#loc48)
    %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc292)
    cir.brcond %24 ^bb8, ^bb12 loc(#loc49)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc293)
  ^bb9:  // pred: ^bb8
    %25 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc52)
    %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc53)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !s32i), !cir.ptr<!s32i> loc(#loc54)
    cir.store %25, %28 : !s32i, !cir.ptr<!s32i> loc(#loc294)
    cir.br ^bb10 loc(#loc44)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc44)
  ^bb11:  // pred: ^bb10
    %29 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc55)
    %30 = cir.unary(inc, %29) : !s32i, !s32i loc(#loc56)
    cir.store %30, %0 : !s32i, !cir.ptr<!s32i> loc(#loc295)
    cir.br ^bb7 loc(#loc290)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc44)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc296)
  ^bb14:  // pred: ^bb13
    %31 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc59)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc60)
    %33 = cir.cmp(ge, %31, %32) : !s32i, !cir.bool loc(#loc297)
    cir.brcond %33 ^bb15, ^bb24 loc(#loc298)
  ^bb15:  // pred: ^bb14
    %34 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc65)
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc66)
    %37 = cir.ptr_stride(%35 : !cir.ptr<!s32i>, %36 : !s32i), !cir.ptr<!s32i> loc(#loc67)
    cir.store %34, %37 : !s32i, !cir.ptr<!s32i> loc(#loc299)
    cir.br ^bb16 loc(#loc300)
  ^bb16:  // pred: ^bb15
    %38 = cir.const #cir.int<0> : !s32i loc(#loc70)
    cir.store %38, %0 : !s32i, !cir.ptr<!s32i> loc(#loc301)
    cir.br ^bb17 loc(#loc300)
  ^bb17:  // 2 preds: ^bb16, ^bb21
    %39 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    %40 = cir.const #cir.int<10> : !s32i loc(#loc73)
    %41 = cir.cmp(lt, %39, %40) : !s32i, !cir.bool loc(#loc302)
    cir.brcond %41 ^bb18, ^bb22 loc(#loc74)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc303)
  ^bb19:  // pred: ^bb18
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc76)
    %43 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc77)
    %44 = cir.ptr_stride(%42 : !cir.ptr<!s32i>, %43 : !s32i), !cir.ptr<!s32i> loc(#loc78)
    %45 = cir.load %44 : !cir.ptr<!s32i>, !s32i loc(#loc76)
    cir.call @printIntLine(%45) : (!s32i) -> () loc(#loc79)
    cir.br ^bb20 loc(#loc69)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc69)
  ^bb21:  // pred: ^bb20
    %46 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc80)
    %47 = cir.unary(inc, %46) : !s32i, !s32i loc(#loc81)
    cir.store %47, %0 : !s32i, !cir.ptr<!s32i> loc(#loc304)
    cir.br ^bb17 loc(#loc300)
  ^bb22:  // pred: ^bb17
    cir.br ^bb23 loc(#loc69)
  ^bb23:  // pred: ^bb22
    cir.br ^bb25 loc(#loc62)
  ^bb24:  // pred: ^bb14
    %48 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc11)
    %49 = cir.cast(array_to_ptrdecay, %48 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc11)
    cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    cir.br ^bb25 loc(#loc58)
  ^bb25:  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc58)
  ^bb26:  // pred: ^bb25
    %50 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc83)
    %51 = cir.cast(bitcast, %50 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc83)
    cir.call @free(%51) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc84)
    cir.br ^bb27 loc(#loc30)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc15)
  } loc(#loc277)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc306)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc87)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc307)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc89)
    cir.return loc(#loc86)
  } loc(#loc305)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc308)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc309)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc96)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc97)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc98)
  cir.func @main(%arg0: !s32i loc(fused[#loc101, #loc102]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc103, #loc104])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc311)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc312)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc100)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc105)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc105)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc106)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc107)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc107)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc108)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc95)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc95)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc109)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61_good : !cir.ptr<!cir.func<!void ()>> loc(#loc313)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61_good() : () -> () loc(#loc110)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc96)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc96)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc97)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc113)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc314)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61_bad() : () -> () loc(#loc114)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc98)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc117)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc315)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc315)
    cir.return %17 : !s32i loc(#loc315)
  } loc(#loc310)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61b_goodG2BSource(!s32i) -> !s32i loc(#loc316)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc318)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc319)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc320)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc129)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc130)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc321)
    %5 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc132)
    %6 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61b_goodG2BSource(%5) : (!s32i) -> !s32i loc(#loc133)
    cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc322)
    cir.br ^bb1 loc(#loc323)
  ^bb1:  // pred: ^bb0
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc138)
    %8 = cir.const #cir.int<10> : !s32i loc(#loc139)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc139)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc324)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc325)
    %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc138)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc326)
    cir.store %13, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc319)
    cir.br ^bb2 loc(#loc327)
  ^bb2:  // pred: ^bb1
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc144)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc145)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc145)
    %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s32i>, !cir.bool loc(#loc328)
    cir.brcond %17 ^bb3, ^bb4 loc(#loc329)
  ^bb3:  // pred: ^bb2
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc147)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc148)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc149)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc147)
    cir.br ^bb4 loc(#loc143)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc143)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc330)
  ^bb6:  // pred: ^bb5
    %21 = cir.const #cir.int<0> : !s32i loc(#loc152)
    cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc331)
    cir.br ^bb7 loc(#loc330)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc154)
    %23 = cir.const #cir.int<10> : !s32i loc(#loc155)
    %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc332)
    cir.brcond %24 ^bb8, ^bb12 loc(#loc156)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc333)
  ^bb9:  // pred: ^bb8
    %25 = cir.const #cir.int<0> : !s32i loc(#loc158)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc159)
    %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc160)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !s32i), !cir.ptr<!s32i> loc(#loc161)
    cir.store %25, %28 : !s32i, !cir.ptr<!s32i> loc(#loc334)
    cir.br ^bb10 loc(#loc151)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc151)
  ^bb11:  // pred: ^bb10
    %29 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc162)
    %30 = cir.unary(inc, %29) : !s32i, !s32i loc(#loc163)
    cir.store %30, %0 : !s32i, !cir.ptr<!s32i> loc(#loc335)
    cir.br ^bb7 loc(#loc330)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc151)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc336)
  ^bb14:  // pred: ^bb13
    %31 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc167)
    %33 = cir.cmp(ge, %31, %32) : !s32i, !cir.bool loc(#loc337)
    cir.brcond %33 ^bb15, ^bb24 loc(#loc338)
  ^bb15:  // pred: ^bb14
    %34 = cir.const #cir.int<1> : !s32i loc(#loc171)
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc172)
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc173)
    %37 = cir.ptr_stride(%35 : !cir.ptr<!s32i>, %36 : !s32i), !cir.ptr<!s32i> loc(#loc174)
    cir.store %34, %37 : !s32i, !cir.ptr<!s32i> loc(#loc339)
    cir.br ^bb16 loc(#loc340)
  ^bb16:  // pred: ^bb15
    %38 = cir.const #cir.int<0> : !s32i loc(#loc177)
    cir.store %38, %0 : !s32i, !cir.ptr<!s32i> loc(#loc341)
    cir.br ^bb17 loc(#loc340)
  ^bb17:  // 2 preds: ^bb16, ^bb21
    %39 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc179)
    %40 = cir.const #cir.int<10> : !s32i loc(#loc180)
    %41 = cir.cmp(lt, %39, %40) : !s32i, !cir.bool loc(#loc342)
    cir.brcond %41 ^bb18, ^bb22 loc(#loc181)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc343)
  ^bb19:  // pred: ^bb18
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc183)
    %43 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc184)
    %44 = cir.ptr_stride(%42 : !cir.ptr<!s32i>, %43 : !s32i), !cir.ptr<!s32i> loc(#loc185)
    %45 = cir.load %44 : !cir.ptr<!s32i>, !s32i loc(#loc183)
    cir.call @printIntLine(%45) : (!s32i) -> () loc(#loc186)
    cir.br ^bb20 loc(#loc176)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc176)
  ^bb21:  // pred: ^bb20
    %46 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc187)
    %47 = cir.unary(inc, %46) : !s32i, !s32i loc(#loc188)
    cir.store %47, %0 : !s32i, !cir.ptr<!s32i> loc(#loc344)
    cir.br ^bb17 loc(#loc340)
  ^bb22:  // pred: ^bb17
    cir.br ^bb23 loc(#loc176)
  ^bb23:  // pred: ^bb22
    cir.br ^bb25 loc(#loc169)
  ^bb24:  // pred: ^bb14
    %48 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc189)
    %49 = cir.cast(array_to_ptrdecay, %48 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc189)
    cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc190)
    cir.br ^bb25 loc(#loc165)
  ^bb25:  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc165)
  ^bb26:  // pred: ^bb25
    %50 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc191)
    %51 = cir.cast(bitcast, %50 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc191)
    cir.call @free(%51) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc192)
    cir.br ^bb27 loc(#loc137)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc122)
  } loc(#loc317)
  cir.func private @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61b_goodB2GSource(!s32i) -> !s32i loc(#loc345)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc195)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc347)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc348)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc349)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc204)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc205)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc350)
    %5 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc207)
    %6 = cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61b_goodB2GSource(%5) : (!s32i) -> !s32i loc(#loc208)
    cir.store %6, %2 : !s32i, !cir.ptr<!s32i> loc(#loc351)
    cir.br ^bb1 loc(#loc352)
  ^bb1:  // pred: ^bb0
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc213)
    %8 = cir.const #cir.int<10> : !s32i loc(#loc214)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc214)
    %10 = cir.const #cir.int<4> : !u64i loc(#loc353)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc354)
    %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc213)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc355)
    cir.store %13, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc348)
    cir.br ^bb2 loc(#loc356)
  ^bb2:  // pred: ^bb1
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc219)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc220)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc220)
    %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s32i>, !cir.bool loc(#loc357)
    cir.brcond %17 ^bb3, ^bb4 loc(#loc358)
  ^bb3:  // pred: ^bb2
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc222)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc223)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc224)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc222)
    cir.br ^bb4 loc(#loc218)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc218)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc359)
  ^bb6:  // pred: ^bb5
    %21 = cir.const #cir.int<0> : !s32i loc(#loc227)
    cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc360)
    cir.br ^bb7 loc(#loc359)
  ^bb7:  // 2 preds: ^bb6, ^bb11
    %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc229)
    %23 = cir.const #cir.int<10> : !s32i loc(#loc230)
    %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc361)
    cir.brcond %24 ^bb8, ^bb12 loc(#loc231)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc362)
  ^bb9:  // pred: ^bb8
    %25 = cir.const #cir.int<0> : !s32i loc(#loc233)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc234)
    %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc235)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %27 : !s32i), !cir.ptr<!s32i> loc(#loc236)
    cir.store %25, %28 : !s32i, !cir.ptr<!s32i> loc(#loc363)
    cir.br ^bb10 loc(#loc226)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc226)
  ^bb11:  // pred: ^bb10
    %29 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc237)
    %30 = cir.unary(inc, %29) : !s32i, !s32i loc(#loc238)
    cir.store %30, %0 : !s32i, !cir.ptr<!s32i> loc(#loc364)
    cir.br ^bb7 loc(#loc359)
  ^bb12:  // pred: ^bb7
    cir.br ^bb13 loc(#loc226)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc365)
  ^bb14:  // pred: ^bb13
    %31 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc241)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc242)
    %33 = cir.cmp(ge, %31, %32) : !s32i, !cir.bool loc(#loc366)
    cir.brcond %33 ^bb15, ^bb20 loc(#loc243)
  ^bb15:  // pred: ^bb14
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc244)
    %35 = cir.const #cir.int<10> : !s32i loc(#loc245)
    %36 = cir.cmp(lt, %34, %35) : !s32i, !cir.bool loc(#loc367)
    cir.brcond %36 ^bb16, ^bb17 loc(#loc243)
  ^bb16:  // pred: ^bb15
    %37 = cir.const #true loc(#loc243)
    cir.br ^bb18(%37 : !cir.bool) loc(#loc243)
  ^bb17:  // pred: ^bb15
    %38 = cir.const #false loc(#loc243)
    cir.br ^bb18(%38 : !cir.bool) loc(#loc243)
  ^bb18(%39: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":141:23)):  // 2 preds: ^bb16, ^bb17
    cir.br ^bb19 loc(#loc243)
  ^bb19:  // pred: ^bb18
    cir.br ^bb21(%39 : !cir.bool) loc(#loc243)
  ^bb20:  // pred: ^bb14
    %40 = cir.const #false loc(#loc243)
    cir.br ^bb21(%40 : !cir.bool) loc(#loc243)
  ^bb21(%41: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":141:23)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc243)
  ^bb22:  // pred: ^bb21
    cir.brcond %41 ^bb23, ^bb32 loc(#loc368)
  ^bb23:  // pred: ^bb22
    %42 = cir.const #cir.int<1> : !s32i loc(#loc250)
    %43 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc251)
    %44 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc252)
    %45 = cir.ptr_stride(%43 : !cir.ptr<!s32i>, %44 : !s32i), !cir.ptr<!s32i> loc(#loc253)
    cir.store %42, %45 : !s32i, !cir.ptr<!s32i> loc(#loc369)
    cir.br ^bb24 loc(#loc370)
  ^bb24:  // pred: ^bb23
    %46 = cir.const #cir.int<0> : !s32i loc(#loc256)
    cir.store %46, %0 : !s32i, !cir.ptr<!s32i> loc(#loc371)
    cir.br ^bb25 loc(#loc370)
  ^bb25:  // 2 preds: ^bb24, ^bb29
    %47 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc258)
    %48 = cir.const #cir.int<10> : !s32i loc(#loc259)
    %49 = cir.cmp(lt, %47, %48) : !s32i, !cir.bool loc(#loc372)
    cir.brcond %49 ^bb26, ^bb30 loc(#loc260)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc373)
  ^bb27:  // pred: ^bb26
    %50 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc262)
    %51 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc263)
    %52 = cir.ptr_stride(%50 : !cir.ptr<!s32i>, %51 : !s32i), !cir.ptr<!s32i> loc(#loc264)
    %53 = cir.load %52 : !cir.ptr<!s32i>, !s32i loc(#loc262)
    cir.call @printIntLine(%53) : (!s32i) -> () loc(#loc265)
    cir.br ^bb28 loc(#loc255)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc255)
  ^bb29:  // pred: ^bb28
    %54 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc266)
    %55 = cir.unary(inc, %54) : !s32i, !s32i loc(#loc267)
    cir.store %55, %0 : !s32i, !cir.ptr<!s32i> loc(#loc374)
    cir.br ^bb25 loc(#loc370)
  ^bb30:  // pred: ^bb25
    cir.br ^bb31 loc(#loc255)
  ^bb31:  // pred: ^bb30
    cir.br ^bb33 loc(#loc248)
  ^bb32:  // pred: ^bb22
    %56 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc195)
    %57 = cir.cast(array_to_ptrdecay, %56 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc195)
    cir.call @printLine(%57) : (!cir.ptr<!s8i>) -> () loc(#loc268)
    cir.br ^bb33 loc(#loc240)
  ^bb33:  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc240)
  ^bb34:  // pred: ^bb33
    %58 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc269)
    %59 = cir.cast(bitcast, %58 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc269)
    cir.call @free(%59) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc270)
    cir.br ^bb35 loc(#loc212)
  ^bb35:  // pred: ^bb34
    cir.return loc(#loc197)
  } loc(#loc346)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":45:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":45:85)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":75:23)
#loc12 = loc("/usr/include/stdlib.h":687:1)
#loc13 = loc("/usr/include/stdlib.h":687:32)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":47:1)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":79:1)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":54:9)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":54:13)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":55:9)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":55:54)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":49:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":49:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":51:13)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":51:12)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":51:5)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":52:84)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":52:12)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":52:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":52:88)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":53:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":78:5)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":55:31)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":55:38)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":55:43)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":55:53)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":56:9)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":56:39)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":56:13)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":56:23)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":56:29)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":56:30)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":56:36)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":56:35)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":58:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":61:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":58:18)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":58:14)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":58:21)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":58:25)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":58:23)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":59:9)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":60:25)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":60:13)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":60:20)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":60:21)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":58:30)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":58:29)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":64:9)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":76:9)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":64:13)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":64:21)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":65:9)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":72:9)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":74:9)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":66:28)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":66:13)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":66:20)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":66:24)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":68:13)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":71:13)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":68:21)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":68:17)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":68:24)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":68:28)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":68:26)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":69:13)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":70:30)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":70:37)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":70:38)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":70:17)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":68:33)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":68:32)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":75:13)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":77:14)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":77:9)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":158:1)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":162:1)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":160:5)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":160:13)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":161:5)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":161:13)
#loc91 = loc("/usr/include/stdlib.h":575:1)
#loc92 = loc("/usr/include/stdlib.h":575:41)
#loc93 = loc("/usr/include/time.h":76:1)
#loc94 = loc("/usr/include/time.h":76:38)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":178:15)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":180:15)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":183:15)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":185:15)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":173:1)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":188:1)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":174:1)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":176:27)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":176:22)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":176:5)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":178:5)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":179:5)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":179:71)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":180:5)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":183:5)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":184:5)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":184:70)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":185:5)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":187:12)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":187:5)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":86:1)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":86:89)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":88:1)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":120:1)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":95:9)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":95:13)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":96:9)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":96:54)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":90:5)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":90:9)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":92:13)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":92:12)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":92:5)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":93:88)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":93:12)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":93:5)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":93:92)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":94:5)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":119:5)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":96:31)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":96:38)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":96:43)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":96:53)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":97:9)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":97:39)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":97:13)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":97:23)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":97:29)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":97:30)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":97:36)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":97:35)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":99:9)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":102:9)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":99:18)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":99:14)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":99:21)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":99:25)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":99:23)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":100:9)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":101:25)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":101:13)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":101:20)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":101:21)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":99:30)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":99:29)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":105:9)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":117:9)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":105:13)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":105:21)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":106:9)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":113:9)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":115:9)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":107:28)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":107:13)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":107:20)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":107:24)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":109:13)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":112:13)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":109:21)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":109:17)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":109:24)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":109:28)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":109:26)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":110:13)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":111:30)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":111:37)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":111:38)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":111:17)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":109:33)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":109:32)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":116:23)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":116:13)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":118:14)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":118:9)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":123:1)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":123:89)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":152:23)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":125:1)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":156:1)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":132:9)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":132:13)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":133:9)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":133:54)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":127:5)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":127:9)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":129:13)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":129:12)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":129:5)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":130:88)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":130:12)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":130:5)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":130:92)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":131:5)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":155:5)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":133:31)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":133:38)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":133:43)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":133:53)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":134:9)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":134:39)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":134:13)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":134:23)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":134:29)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":134:30)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":134:36)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":134:35)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":136:9)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":139:9)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":136:18)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":136:14)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":136:21)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":136:25)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":136:23)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":137:9)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":138:25)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":138:13)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":138:20)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":138:21)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":136:30)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":136:29)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":141:9)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":153:9)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":141:13)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":141:21)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":141:26)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":141:34)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":141:36)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":142:9)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":149:9)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":151:9)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":143:28)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":143:13)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":143:20)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":143:24)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":145:13)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":148:13)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":145:21)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":145:17)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":145:24)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":145:28)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":145:26)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":146:13)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":147:30)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":147:37)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":147:38)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":147:17)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":145:33)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":145:32)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":152:13)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":154:14)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_listen_socket_61a.c":154:9)
#loc271 = loc(fused[#loc1, #loc2])
#loc272 = loc(fused[#loc3, #loc4])
#loc273 = loc(fused[#loc5, #loc6])
#loc274 = loc(fused[#loc7, #loc8])
#loc275 = loc(fused[#loc9, #loc10])
#loc276 = loc(fused[#loc12, #loc13])
#loc277 = loc(fused[#loc14, #loc15])
#loc278 = loc(fused[#loc16, #loc17])
#loc279 = loc(fused[#loc18, #loc19])
#loc280 = loc(fused[#loc20, #loc21])
#loc281 = loc(fused[#loc24, #loc22])
#loc282 = loc(fused[#loc27, #loc28])
#loc283 = loc(fused[#loc29, #loc30])
#loc284 = loc(fused[#loc33, #loc34])
#loc285 = loc(fused[#loc32, #loc34])
#loc286 = loc(fused[#loc31, #loc19])
#loc287 = loc(fused[#loc35, #loc36])
#loc288 = loc(fused[#loc37, #loc38])
#loc289 = loc(fused[#loc39, #loc36])
#loc290 = loc(fused[#loc43, #loc44])
#loc291 = loc(fused[#loc46, #loc45])
#loc292 = loc(fused[#loc47, #loc48])
#loc293 = loc(fused[#loc50, #loc44])
#loc294 = loc(fused[#loc52, #loc51])
#loc295 = loc(fused[#loc56, #loc55])
#loc296 = loc(fused[#loc57, #loc58])
#loc297 = loc(fused[#loc59, #loc60])
#loc298 = loc(fused[#loc61, #loc62, #loc63, #loc58])
#loc299 = loc(fused[#loc65, #loc64])
#loc300 = loc(fused[#loc68, #loc69])
#loc301 = loc(fused[#loc71, #loc70])
#loc302 = loc(fused[#loc72, #loc73])
#loc303 = loc(fused[#loc75, #loc69])
#loc304 = loc(fused[#loc81, #loc80])
#loc305 = loc(fused[#loc85, #loc86])
#loc306 = loc(fused[#loc87, #loc88])
#loc307 = loc(fused[#loc89, #loc90])
#loc308 = loc(fused[#loc91, #loc92])
#loc309 = loc(fused[#loc93, #loc94])
#loc310 = loc(fused[#loc99, #loc100])
#loc313 = loc(fused[#loc110, #loc111])
#loc314 = loc(fused[#loc114, #loc115])
#loc315 = loc(fused[#loc118, #loc117])
#loc316 = loc(fused[#loc119, #loc120])
#loc317 = loc(fused[#loc121, #loc122])
#loc318 = loc(fused[#loc123, #loc124])
#loc319 = loc(fused[#loc125, #loc126])
#loc320 = loc(fused[#loc127, #loc128])
#loc321 = loc(fused[#loc131, #loc129])
#loc322 = loc(fused[#loc134, #loc135])
#loc323 = loc(fused[#loc136, #loc137])
#loc324 = loc(fused[#loc140, #loc141])
#loc325 = loc(fused[#loc139, #loc141])
#loc326 = loc(fused[#loc138, #loc126])
#loc327 = loc(fused[#loc142, #loc143])
#loc328 = loc(fused[#loc144, #loc145])
#loc329 = loc(fused[#loc146, #loc143])
#loc330 = loc(fused[#loc150, #loc151])
#loc331 = loc(fused[#loc153, #loc152])
#loc332 = loc(fused[#loc154, #loc155])
#loc333 = loc(fused[#loc157, #loc151])
#loc334 = loc(fused[#loc159, #loc158])
#loc335 = loc(fused[#loc163, #loc162])
#loc336 = loc(fused[#loc164, #loc165])
#loc337 = loc(fused[#loc166, #loc167])
#loc338 = loc(fused[#loc168, #loc169, #loc170, #loc165])
#loc339 = loc(fused[#loc172, #loc171])
#loc340 = loc(fused[#loc175, #loc176])
#loc341 = loc(fused[#loc178, #loc177])
#loc342 = loc(fused[#loc179, #loc180])
#loc343 = loc(fused[#loc182, #loc176])
#loc344 = loc(fused[#loc188, #loc187])
#loc345 = loc(fused[#loc193, #loc194])
#loc346 = loc(fused[#loc196, #loc197])
#loc347 = loc(fused[#loc198, #loc199])
#loc348 = loc(fused[#loc200, #loc201])
#loc349 = loc(fused[#loc202, #loc203])
#loc350 = loc(fused[#loc206, #loc204])
#loc351 = loc(fused[#loc209, #loc210])
#loc352 = loc(fused[#loc211, #loc212])
#loc353 = loc(fused[#loc215, #loc216])
#loc354 = loc(fused[#loc214, #loc216])
#loc355 = loc(fused[#loc213, #loc201])
#loc356 = loc(fused[#loc217, #loc218])
#loc357 = loc(fused[#loc219, #loc220])
#loc358 = loc(fused[#loc221, #loc218])
#loc359 = loc(fused[#loc225, #loc226])
#loc360 = loc(fused[#loc228, #loc227])
#loc361 = loc(fused[#loc229, #loc230])
#loc362 = loc(fused[#loc232, #loc226])
#loc363 = loc(fused[#loc234, #loc233])
#loc364 = loc(fused[#loc238, #loc237])
#loc365 = loc(fused[#loc239, #loc240])
#loc366 = loc(fused[#loc241, #loc242])
#loc367 = loc(fused[#loc244, #loc246])
#loc368 = loc(fused[#loc247, #loc248, #loc249, #loc240])
#loc369 = loc(fused[#loc251, #loc250])
#loc370 = loc(fused[#loc254, #loc255])
#loc371 = loc(fused[#loc257, #loc256])
#loc372 = loc(fused[#loc258, #loc259])
#loc373 = loc(fused[#loc261, #loc255])
#loc374 = loc(fused[#loc267, #loc266])
