!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc50 = loc("CWE401_Memory_Leak__char_calloc_01.c":86:10)
#loc51 = loc("CWE401_Memory_Leak__char_calloc_01.c":86:14)
#loc52 = loc("CWE401_Memory_Leak__char_calloc_01.c":86:20)
#loc53 = loc("CWE401_Memory_Leak__char_calloc_01.c":86:32)
#loc129 = loc(fused[#loc50, #loc51])
#loc130 = loc(fused[#loc52, #loc53])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc110)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc111)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc112)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"A String\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc113)
  cir.func no_proto @CWE401_Memory_Leak__char_calloc_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc115)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc14)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc116)
    %2 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc16)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc17)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc17)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc117)
    %6 = cir.call @calloc(%4, %5) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc16)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc118)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc119)
    cir.br ^bb1 loc(#loc120)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc25)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc25)
    %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!s8i>, !cir.bool loc(#loc121)
    cir.brcond %11 ^bb2, ^bb3 loc(#loc122)
  ^bb2:  // pred: ^bb1
    %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc27)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc29)
    cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc27)
    cir.br ^bb3 loc(#loc23)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc23)
  ^bb4:  // pred: ^bb3
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc7)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc7)
    %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc31)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc33)
    cir.return loc(#loc11)
  } loc(#loc114)
  cir.func no_proto @CWE401_Memory_Leak__char_calloc_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc124)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc125)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    cir.return loc(#loc35)
  } loc(#loc123)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc126)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc127)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc47)
  cir.func @main(%arg0: !s32i loc(fused[#loc50, #loc51]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc52, #loc53])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc129)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc130)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc49)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc54)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc54)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc55)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc56)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc56)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc57)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc44)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %8 = cir.get_global @CWE401_Memory_Leak__char_calloc_01_good : !cir.ptr<!cir.func<!void ()>> loc(#loc131)
    cir.call @CWE401_Memory_Leak__char_calloc_01_good() : () -> () loc(#loc59)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc45)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc46)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %13 = cir.get_global @CWE401_Memory_Leak__char_calloc_01_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc132)
    cir.call @CWE401_Memory_Leak__char_calloc_01_bad() : () -> () loc(#loc63)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc47)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc66)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc133)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc133)
    cir.return %17 : !s32i loc(#loc133)
  } loc(#loc128)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc135)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc72)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc136)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc74)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc74)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc74)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc74)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc74)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc74)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc74)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc137)
    %9 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc76)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc78)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc78)
    %13 = cir.call @strcpy(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc76)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    cir.return loc(#loc69)
  } loc(#loc134)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc138)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc140)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc87)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc141)
    %2 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc89)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc90)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc90)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc142)
    %6 = cir.call @calloc(%4, %5) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc89)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc143)
    cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc144)
    cir.br ^bb1 loc(#loc145)
  ^bb1:  // pred: ^bb0
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc98)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc98)
    %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!s8i>, !cir.bool loc(#loc146)
    cir.brcond %11 ^bb2, ^bb3 loc(#loc147)
  ^bb2:  // pred: ^bb1
    %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc100)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc101)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc102)
    cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc100)
    cir.br ^bb3 loc(#loc96)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc96)
  ^bb4:  // pred: ^bb3
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    %16 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc104)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc104)
    %18 = cir.call @strcpy(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc105)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc108)
    cir.call @free(%21) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc109)
    cir.return loc(#loc84)
  } loc(#loc139)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__char_calloc_01.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":675:1)
#loc2 = loc("/usr/include/stdlib.h":676:14)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/string.h":141:1)
#loc6 = loc("/usr/include/string.h":142:14)
#loc7 = loc("CWE401_Memory_Leak__char_calloc_01.c":32:18)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE401_Memory_Leak__char_calloc_01.c":24:1)
#loc11 = loc("CWE401_Memory_Leak__char_calloc_01.c":36:1)
#loc12 = loc("CWE401_Memory_Leak__char_calloc_01.c":26:5)
#loc13 = loc("CWE401_Memory_Leak__char_calloc_01.c":26:12)
#loc14 = loc("CWE401_Memory_Leak__char_calloc_01.c":27:12)
#loc15 = loc("CWE401_Memory_Leak__char_calloc_01.c":27:5)
#loc16 = loc("CWE401_Memory_Leak__char_calloc_01.c":29:20)
#loc17 = loc("CWE401_Memory_Leak__char_calloc_01.c":29:27)
#loc18 = loc("CWE401_Memory_Leak__char_calloc_01.c":29:32)
#loc19 = loc("CWE401_Memory_Leak__char_calloc_01.c":29:43)
#loc20 = loc("CWE401_Memory_Leak__char_calloc_01.c":29:44)
#loc21 = loc("CWE401_Memory_Leak__char_calloc_01.c":29:5)
#loc22 = loc("CWE401_Memory_Leak__char_calloc_01.c":30:5)
#loc23 = loc("CWE401_Memory_Leak__char_calloc_01.c":30:33)
#loc24 = loc("CWE401_Memory_Leak__char_calloc_01.c":30:9)
#loc25 = loc("CWE401_Memory_Leak__char_calloc_01.c":30:17)
#loc26 = loc("CWE401_Memory_Leak__char_calloc_01.c":30:23)
#loc27 = loc("CWE401_Memory_Leak__char_calloc_01.c":30:24)
#loc28 = loc("CWE401_Memory_Leak__char_calloc_01.c":30:30)
#loc29 = loc("CWE401_Memory_Leak__char_calloc_01.c":30:29)
#loc30 = loc("CWE401_Memory_Leak__char_calloc_01.c":32:12)
#loc31 = loc("CWE401_Memory_Leak__char_calloc_01.c":32:5)
#loc32 = loc("CWE401_Memory_Leak__char_calloc_01.c":33:15)
#loc33 = loc("CWE401_Memory_Leak__char_calloc_01.c":33:5)
#loc34 = loc("CWE401_Memory_Leak__char_calloc_01.c":71:1)
#loc35 = loc("CWE401_Memory_Leak__char_calloc_01.c":75:1)
#loc36 = loc("CWE401_Memory_Leak__char_calloc_01.c":73:5)
#loc37 = loc("CWE401_Memory_Leak__char_calloc_01.c":73:13)
#loc38 = loc("CWE401_Memory_Leak__char_calloc_01.c":74:5)
#loc39 = loc("CWE401_Memory_Leak__char_calloc_01.c":74:13)
#loc40 = loc("/usr/include/stdlib.h":575:1)
#loc41 = loc("/usr/include/stdlib.h":575:41)
#loc42 = loc("/usr/include/time.h":76:1)
#loc43 = loc("/usr/include/time.h":76:38)
#loc44 = loc("CWE401_Memory_Leak__char_calloc_01.c":91:15)
#loc45 = loc("CWE401_Memory_Leak__char_calloc_01.c":93:15)
#loc46 = loc("CWE401_Memory_Leak__char_calloc_01.c":96:15)
#loc47 = loc("CWE401_Memory_Leak__char_calloc_01.c":98:15)
#loc48 = loc("CWE401_Memory_Leak__char_calloc_01.c":86:1)
#loc49 = loc("CWE401_Memory_Leak__char_calloc_01.c":101:1)
#loc54 = loc("CWE401_Memory_Leak__char_calloc_01.c":87:1)
#loc55 = loc("CWE401_Memory_Leak__char_calloc_01.c":89:27)
#loc56 = loc("CWE401_Memory_Leak__char_calloc_01.c":89:22)
#loc57 = loc("CWE401_Memory_Leak__char_calloc_01.c":89:5)
#loc58 = loc("CWE401_Memory_Leak__char_calloc_01.c":91:5)
#loc59 = loc("CWE401_Memory_Leak__char_calloc_01.c":92:5)
#loc60 = loc("CWE401_Memory_Leak__char_calloc_01.c":92:45)
#loc61 = loc("CWE401_Memory_Leak__char_calloc_01.c":93:5)
#loc62 = loc("CWE401_Memory_Leak__char_calloc_01.c":96:5)
#loc63 = loc("CWE401_Memory_Leak__char_calloc_01.c":97:5)
#loc64 = loc("CWE401_Memory_Leak__char_calloc_01.c":97:44)
#loc65 = loc("CWE401_Memory_Leak__char_calloc_01.c":98:5)
#loc66 = loc("CWE401_Memory_Leak__char_calloc_01.c":100:12)
#loc67 = loc("CWE401_Memory_Leak__char_calloc_01.c":100:5)
#loc68 = loc("CWE401_Memory_Leak__char_calloc_01.c":43:1)
#loc69 = loc("CWE401_Memory_Leak__char_calloc_01.c":54:1)
#loc70 = loc("CWE401_Memory_Leak__char_calloc_01.c":45:5)
#loc71 = loc("CWE401_Memory_Leak__char_calloc_01.c":45:12)
#loc72 = loc("CWE401_Memory_Leak__char_calloc_01.c":46:12)
#loc73 = loc("CWE401_Memory_Leak__char_calloc_01.c":46:5)
#loc74 = loc("CWE401_Memory_Leak__char_calloc_01.c":48:20)
#loc75 = loc("CWE401_Memory_Leak__char_calloc_01.c":48:5)
#loc76 = loc("CWE401_Memory_Leak__char_calloc_01.c":50:5)
#loc77 = loc("CWE401_Memory_Leak__char_calloc_01.c":50:12)
#loc78 = loc("CWE401_Memory_Leak__char_calloc_01.c":50:18)
#loc79 = loc("CWE401_Memory_Leak__char_calloc_01.c":51:15)
#loc80 = loc("CWE401_Memory_Leak__char_calloc_01.c":51:5)
#loc81 = loc("/usr/include/stdlib.h":687:1)
#loc82 = loc("/usr/include/stdlib.h":687:32)
#loc83 = loc("CWE401_Memory_Leak__char_calloc_01.c":57:1)
#loc84 = loc("CWE401_Memory_Leak__char_calloc_01.c":69:1)
#loc85 = loc("CWE401_Memory_Leak__char_calloc_01.c":59:5)
#loc86 = loc("CWE401_Memory_Leak__char_calloc_01.c":59:12)
#loc87 = loc("CWE401_Memory_Leak__char_calloc_01.c":60:12)
#loc88 = loc("CWE401_Memory_Leak__char_calloc_01.c":60:5)
#loc89 = loc("CWE401_Memory_Leak__char_calloc_01.c":62:20)
#loc90 = loc("CWE401_Memory_Leak__char_calloc_01.c":62:27)
#loc91 = loc("CWE401_Memory_Leak__char_calloc_01.c":62:32)
#loc92 = loc("CWE401_Memory_Leak__char_calloc_01.c":62:43)
#loc93 = loc("CWE401_Memory_Leak__char_calloc_01.c":62:44)
#loc94 = loc("CWE401_Memory_Leak__char_calloc_01.c":62:5)
#loc95 = loc("CWE401_Memory_Leak__char_calloc_01.c":63:5)
#loc96 = loc("CWE401_Memory_Leak__char_calloc_01.c":63:33)
#loc97 = loc("CWE401_Memory_Leak__char_calloc_01.c":63:9)
#loc98 = loc("CWE401_Memory_Leak__char_calloc_01.c":63:17)
#loc99 = loc("CWE401_Memory_Leak__char_calloc_01.c":63:23)
#loc100 = loc("CWE401_Memory_Leak__char_calloc_01.c":63:24)
#loc101 = loc("CWE401_Memory_Leak__char_calloc_01.c":63:30)
#loc102 = loc("CWE401_Memory_Leak__char_calloc_01.c":63:29)
#loc103 = loc("CWE401_Memory_Leak__char_calloc_01.c":65:12)
#loc104 = loc("CWE401_Memory_Leak__char_calloc_01.c":65:18)
#loc105 = loc("CWE401_Memory_Leak__char_calloc_01.c":65:5)
#loc106 = loc("CWE401_Memory_Leak__char_calloc_01.c":66:15)
#loc107 = loc("CWE401_Memory_Leak__char_calloc_01.c":66:5)
#loc108 = loc("CWE401_Memory_Leak__char_calloc_01.c":68:10)
#loc109 = loc("CWE401_Memory_Leak__char_calloc_01.c":68:5)
#loc110 = loc(fused[#loc1, #loc2])
#loc111 = loc(fused[#loc3, #loc4])
#loc112 = loc(fused[#loc5, #loc6])
#loc113 = loc(fused[#loc8, #loc9])
#loc114 = loc(fused[#loc10, #loc11])
#loc115 = loc(fused[#loc12, #loc13])
#loc116 = loc(fused[#loc15, #loc14])
#loc117 = loc(fused[#loc18, #loc19])
#loc118 = loc(fused[#loc16, #loc20])
#loc119 = loc(fused[#loc21, #loc20])
#loc120 = loc(fused[#loc22, #loc23])
#loc121 = loc(fused[#loc24, #loc25])
#loc122 = loc(fused[#loc26, #loc23])
#loc123 = loc(fused[#loc34, #loc35])
#loc124 = loc(fused[#loc36, #loc37])
#loc125 = loc(fused[#loc38, #loc39])
#loc126 = loc(fused[#loc40, #loc41])
#loc127 = loc(fused[#loc42, #loc43])
#loc128 = loc(fused[#loc48, #loc49])
#loc131 = loc(fused[#loc59, #loc60])
#loc132 = loc(fused[#loc63, #loc64])
#loc133 = loc(fused[#loc67, #loc66])
#loc134 = loc(fused[#loc68, #loc69])
#loc135 = loc(fused[#loc70, #loc71])
#loc136 = loc(fused[#loc73, #loc72])
#loc137 = loc(fused[#loc75, #loc74])
#loc138 = loc(fused[#loc81, #loc82])
#loc139 = loc(fused[#loc83, #loc84])
#loc140 = loc(fused[#loc85, #loc86])
#loc141 = loc(fused[#loc88, #loc87])
#loc142 = loc(fused[#loc91, #loc92])
#loc143 = loc(fused[#loc89, #loc93])
#loc144 = loc(fused[#loc94, #loc93])
#loc145 = loc(fused[#loc95, #loc96])
#loc146 = loc(fused[#loc97, #loc98])
#loc147 = loc(fused[#loc99, #loc96])
