!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc55 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":60:48)
#loc76 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":77:48)
#true = #cir.bool<true> : !cir.bool
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__binary_if_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc83)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc84)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"intOne == 5\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc5)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__binary_if_05_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["twoIntsStructPointer", init] {alignment = 8 : i64} loc(#loc86)
    cir.br ^bb1 loc(#loc87)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc83)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc12)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc12)
    cir.brcond %3 ^bb2, ^bb9 loc(#loc88)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc89)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc9)
    cir.store %4, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc86)
    cir.br ^bb4 loc(#loc90)
  ^bb4:  // pred: ^bb3
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc18)
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc19)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc19)
    %8 = cir.cmp(ne, %5, %7) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc91)
    %9 = cir.cast(bool_to_int, %8 : !cir.bool), !s32i loc(#loc91)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc20)
    %11 = cir.get_member %10[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc21)
    %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc22)
    %13 = cir.const #cir.int<5> : !s32i loc(#loc23)
    %14 = cir.cmp(eq, %12, %13) : !s32i, !cir.bool loc(#loc92)
    %15 = cir.cast(bool_to_int, %14 : !cir.bool), !s32i loc(#loc92)
    %16 = cir.binop(and, %9, %15) : !s32i loc(#loc93)
    %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc26)
    cir.brcond %17 ^bb5, ^bb6 loc(#loc94)
  ^bb5:  // pred: ^bb4
    %18 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc5)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc5)
    cir.call @printLine(%19) : (!cir.ptr<!s8i>) -> () loc(#loc28)
    cir.br ^bb6 loc(#loc17)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc17)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc15)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc11)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc11)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc7)
  } loc(#loc85)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__binary_if_05_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc96)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc31)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc97)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc33)
    cir.return loc(#loc30)
  } loc(#loc95)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc98)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc37)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["twoIntsStructPointer", init] {alignment = 8 : i64} loc(#loc100)
    cir.br ^bb1 loc(#loc101)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc98)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc44)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc44)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc102)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc37)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    cir.br ^bb18 loc(#loc46)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc103)
  ^bb4:  // pred: ^bb3
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
    cir.store %6, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc100)
    cir.br ^bb5 loc(#loc104)
  ^bb5:  // pred: ^bb4
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc53)
    %8 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc54)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc54)
    %10 = cir.cmp(ne, %7, %9) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc105)
    cir.brcond %10 ^bb6, ^bb11 loc(#loc55)
  ^bb6:  // pred: ^bb5
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc56)
    %12 = cir.get_member %11[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc21)
    %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc57)
    %14 = cir.const #cir.int<5> : !s32i loc(#loc58)
    %15 = cir.cmp(eq, %13, %14) : !s32i, !cir.bool loc(#loc106)
    cir.brcond %15 ^bb7, ^bb8 loc(#loc55)
  ^bb7:  // pred: ^bb6
    %16 = cir.const #true loc(#loc55)
    cir.br ^bb9(%16 : !cir.bool) loc(#loc55)
  ^bb8:  // pred: ^bb6
    %17 = cir.const #false loc(#loc55)
    cir.br ^bb9(%17 : !cir.bool) loc(#loc55)
  ^bb9(%18: !cir.bool loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":60:48)):  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc55)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12(%18 : !cir.bool) loc(#loc55)
  ^bb11:  // pred: ^bb5
    %19 = cir.const #false loc(#loc55)
    cir.br ^bb12(%19 : !cir.bool) loc(#loc55)
  ^bb12(%20: !cir.bool loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":60:48)):  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc55)
  ^bb13:  // pred: ^bb12
    cir.brcond %20 ^bb14, ^bb15 loc(#loc107)
  ^bb14:  // pred: ^bb13
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc60)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    cir.br ^bb15 loc(#loc52)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc52)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc50)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc43)
  ^bb18:  // 2 preds: ^bb2, ^bb17
    cir.br ^bb19 loc(#loc43)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc39)
  } loc(#loc99)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["twoIntsStructPointer", init] {alignment = 8 : i64} loc(#loc109)
    cir.br ^bb1 loc(#loc110)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc83)
    %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc68)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc68)
    cir.brcond %3 ^bb2, ^bb17 loc(#loc111)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc112)
  ^bb3:  // pred: ^bb2
    %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc65)
    cir.store %4, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc109)
    cir.br ^bb4 loc(#loc113)
  ^bb4:  // pred: ^bb3
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc74)
    %6 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc75)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc75)
    %8 = cir.cmp(ne, %5, %7) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc114)
    cir.brcond %8 ^bb5, ^bb10 loc(#loc76)
  ^bb5:  // pred: ^bb4
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc77)
    %10 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc21)
    %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc78)
    %12 = cir.const #cir.int<5> : !s32i loc(#loc79)
    %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc115)
    cir.brcond %13 ^bb6, ^bb7 loc(#loc76)
  ^bb6:  // pred: ^bb5
    %14 = cir.const #true loc(#loc76)
    cir.br ^bb8(%14 : !cir.bool) loc(#loc76)
  ^bb7:  // pred: ^bb5
    %15 = cir.const #false loc(#loc76)
    cir.br ^bb8(%15 : !cir.bool) loc(#loc76)
  ^bb8(%16: !cir.bool loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":77:48)):  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc76)
  ^bb9:  // pred: ^bb8
    cir.br ^bb11(%16 : !cir.bool) loc(#loc76)
  ^bb10:  // pred: ^bb4
    %17 = cir.const #false loc(#loc76)
    cir.br ^bb11(%17 : !cir.bool) loc(#loc76)
  ^bb11(%18: !cir.bool loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":77:48)):  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc76)
  ^bb12:  // pred: ^bb11
    cir.brcond %18 ^bb13, ^bb14 loc(#loc116)
  ^bb13:  // pred: ^bb12
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc81)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    cir.br ^bb14 loc(#loc73)
  ^bb14:  // 2 preds: ^bb12, ^bb13
    cir.br ^bb15 loc(#loc73)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc71)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc67)
  ^bb17:  // 2 preds: ^bb1, ^bb16
    cir.br ^bb18 loc(#loc67)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc63)
  } loc(#loc108)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__binary_if_05.c":0:0)
#loc1 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":21:1)
#loc2 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":21:25)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":36:27)
#loc6 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":26:1)
#loc7 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":40:1)
#loc8 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":31:13)
#loc9 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":31:51)
#loc10 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":28:5)
#loc11 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":39:5)
#loc12 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":28:8)
#loc13 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":29:5)
#loc14 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":30:9)
#loc15 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":38:9)
#loc16 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":34:13)
#loc17 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":37:13)
#loc18 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":34:18)
#loc19 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":34:42)
#loc20 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":34:51)
#loc21 = loc("../../testcasesupport/std_testcase.h":98:9)
#loc22 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":34:73)
#loc23 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":34:83)
#loc24 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":34:17)
#loc25 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":34:84)
#loc26 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":34:48)
#loc27 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":35:13)
#loc28 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":36:17)
#loc29 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":85:1)
#loc30 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":89:1)
#loc31 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":87:5)
#loc32 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":87:11)
#loc33 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":88:5)
#loc34 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":88:11)
#loc35 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":22:1)
#loc36 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":22:26)
#loc37 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":52:19)
#loc38 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":47:1)
#loc39 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":66:1)
#loc40 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":57:13)
#loc41 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":57:51)
#loc42 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":49:5)
#loc43 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":65:5)
#loc44 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":49:8)
#loc45 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":50:5)
#loc46 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":53:5)
#loc47 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":55:5)
#loc48 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":52:9)
#loc49 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":56:9)
#loc50 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":64:9)
#loc51 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":60:13)
#loc52 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":63:13)
#loc53 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":60:18)
#loc54 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":60:42)
#loc56 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":60:52)
#loc57 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":60:74)
#loc58 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":60:84)
#loc59 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":61:13)
#loc60 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":62:27)
#loc61 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":62:17)
#loc62 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":69:1)
#loc63 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":83:1)
#loc64 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":74:13)
#loc65 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":74:51)
#loc66 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":71:5)
#loc67 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":82:5)
#loc68 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":71:8)
#loc69 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":72:5)
#loc70 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":73:9)
#loc71 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":81:9)
#loc72 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":77:13)
#loc73 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":80:13)
#loc74 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":77:18)
#loc75 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":77:42)
#loc77 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":77:52)
#loc78 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":77:74)
#loc79 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":77:84)
#loc80 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":78:13)
#loc81 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":79:27)
#loc82 = loc("CWE476_NULL_Pointer_Dereference__binary_if_05.c":79:17)
#loc83 = loc(fused[#loc1, #loc2])
#loc84 = loc(fused[#loc3, #loc4])
#loc85 = loc(fused[#loc6, #loc7])
#loc86 = loc(fused[#loc8, #loc9])
#loc87 = loc(fused[#loc10, #loc11])
#loc88 = loc(fused[#loc13, #loc11])
#loc89 = loc(fused[#loc14, #loc15])
#loc90 = loc(fused[#loc16, #loc17])
#loc91 = loc(fused[#loc18, #loc19])
#loc92 = loc(fused[#loc20, #loc23])
#loc93 = loc(fused[#loc24, #loc25])
#loc94 = loc(fused[#loc27, #loc17])
#loc95 = loc(fused[#loc29, #loc30])
#loc96 = loc(fused[#loc31, #loc32])
#loc97 = loc(fused[#loc33, #loc34])
#loc98 = loc(fused[#loc35, #loc36])
#loc99 = loc(fused[#loc38, #loc39])
#loc100 = loc(fused[#loc40, #loc41])
#loc101 = loc(fused[#loc42, #loc43])
#loc102 = loc(fused[#loc45, #loc46, #loc47, #loc43])
#loc103 = loc(fused[#loc49, #loc50])
#loc104 = loc(fused[#loc51, #loc52])
#loc105 = loc(fused[#loc53, #loc54])
#loc106 = loc(fused[#loc56, #loc58])
#loc107 = loc(fused[#loc59, #loc52])
#loc108 = loc(fused[#loc62, #loc63])
#loc109 = loc(fused[#loc64, #loc65])
#loc110 = loc(fused[#loc66, #loc67])
#loc111 = loc(fused[#loc69, #loc67])
#loc112 = loc(fused[#loc70, #loc71])
#loc113 = loc(fused[#loc72, #loc73])
#loc114 = loc(fused[#loc74, #loc75])
#loc115 = loc(fused[#loc77, #loc79])
#loc116 = loc(fused[#loc80, #loc73])
