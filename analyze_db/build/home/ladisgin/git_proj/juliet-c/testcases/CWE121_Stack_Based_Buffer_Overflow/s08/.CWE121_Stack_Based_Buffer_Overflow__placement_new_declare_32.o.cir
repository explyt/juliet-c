!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc1 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc86 = loc("../../../testcasesupport/std_testcase.h":68:7)
!ty_OneIntClass = !cir.struct<class "OneIntClass" {!s32i} #cir.record.decl.ast>
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc1)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc1)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc1)
    cir.return loc(#loc1)
  } loc(#loc1)
  cir.func private @printIntLine(!s32i) loc(#loc130)
  cir.func @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_323badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc132)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc133)
    %2 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc134)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc135)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc136)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc137)
    %6 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc138)
    %7 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc139)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc136)
    cir.store %3, %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc137)
    cir.br ^bb1 loc(#loc140)
  ^bb1:  // pred: ^bb0
    %8 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc7)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
    %10 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc25)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc141)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
    %12 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc28)
    cir.store %11, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc142)
    cir.br ^bb2 loc(#loc23)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc143)
  ^bb3:  // pred: ^bb2
    %13 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc9)
    %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    cir.store %14, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc133)
    cir.br ^bb4 loc(#loc144)
  ^bb4:  // pred: ^bb3
    %15 = cir.const #cir.int<8> : !u64i loc(#loc145)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc145)
    cir.call @_ZN12TwoIntsClassC2Ev(%18) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc11)
    cir.store %18, %2 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc134)
    %19 = cir.const #cir.int<5> : !s32i loc(#loc37)
    %20 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc38)
    %21 = cir.get_member %20[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc39)
    cir.store %19, %21 : !s32i, !cir.ptr<!s32i> loc(#loc146)
    %22 = cir.const #cir.int<10> : !s32i loc(#loc40)
    %23 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc41)
    %24 = cir.get_member %23[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc42)
    cir.store %22, %24 : !s32i, !cir.ptr<!s32i> loc(#loc147)
    %25 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc43)
    %26 = cir.get_member %25[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc39)
    %27 = cir.load %26 : !cir.ptr<!s32i>, !s32i loc(#loc44)
    cir.call @printIntLine(%27) : (!s32i) -> () loc(#loc45)
    cir.br ^bb5 loc(#loc34)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc31)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc5)
  } loc(#loc131)
  cir.func internal private @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc149)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc150)
    %2 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc151)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc152)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc153)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc154)
    %6 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc155)
    %7 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc156)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc153)
    cir.store %3, %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc154)
    cir.br ^bb1 loc(#loc157)
  ^bb1:  // pred: ^bb0
    %8 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc49)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc66)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc149)
    %10 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc67)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc158)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
    %12 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc70)
    cir.store %11, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc159)
    cir.br ^bb2 loc(#loc65)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc160)
  ^bb3:  // pred: ^bb2
    %13 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc51)
    %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
    cir.store %14, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
    cir.br ^bb4 loc(#loc161)
  ^bb4:  // pred: ^bb3
    %15 = cir.const #cir.int<8> : !u64i loc(#loc162)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc78)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc162)
    cir.call @_ZN12TwoIntsClassC2Ev(%18) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc53)
    cir.store %18, %2 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc151)
    %19 = cir.const #cir.int<5> : !s32i loc(#loc79)
    %20 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc80)
    %21 = cir.get_member %20[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc39)
    cir.store %19, %21 : !s32i, !cir.ptr<!s32i> loc(#loc163)
    %22 = cir.const #cir.int<10> : !s32i loc(#loc81)
    %23 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc82)
    %24 = cir.get_member %23[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc42)
    cir.store %22, %24 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    %25 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc83)
    %26 = cir.get_member %25[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc39)
    %27 = cir.load %26 : !cir.ptr<!s32i>, !s32i loc(#loc84)
    cir.call @printIntLine(%27) : (!s32i) -> () loc(#loc85)
    cir.br ^bb5 loc(#loc76)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc73)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc47)
  } loc(#loc148)
  cir.func linkonce_odr @_ZN11OneIntClassC2Ev(%arg0: !cir.ptr<!ty_OneIntClass> loc("../../../testcasesupport/std_testcase.h":68:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["this", init] {alignment = 8 : i64} loc(#loc86)
    cir.store %arg0, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc86)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc86)
    cir.return loc(#loc86)
  } loc(#loc86)
  cir.func internal private @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc166)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc167)
    %2 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc168)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc169)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc170)
    %5 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc171)
    %6 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc172)
    %7 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc173)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc170)
    cir.store %3, %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc171)
    cir.br ^bb1 loc(#loc174)
  ^bb1:  // pred: ^bb0
    %8 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc90)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc166)
    %10 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc108)
    cir.store %10, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc175)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
    %12 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc111)
    cir.store %11, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc176)
    cir.br ^bb2 loc(#loc106)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc177)
  ^bb3:  // pred: ^bb2
    %13 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc92)
    %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
    cir.store %14, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc167)
    cir.br ^bb4 loc(#loc178)
  ^bb4:  // pred: ^bb3
    %15 = cir.const #cir.int<4> : !u64i loc(#loc179)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc119)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc179)
    cir.call @_ZN11OneIntClassC2Ev(%18) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr2) loc(#loc94)
    cir.store %18, %2 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc168)
    %19 = cir.const #cir.int<5> : !s32i loc(#loc120)
    %20 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc121)
    %21 = cir.get_member %20[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc122)
    cir.store %19, %21 : !s32i, !cir.ptr<!s32i> loc(#loc180)
    %22 = cir.load %2 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc123)
    %23 = cir.get_member %22[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc122)
    %24 = cir.load %23 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    cir.call @printIntLine(%24) : (!s32i) -> () loc(#loc125)
    cir.br ^bb5 loc(#loc117)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc114)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc88)
  } loc(#loc165)
  cir.func @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_324goodEv() extra(#fn_attr1) {
    cir.call @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32L7goodG2BEv() : () -> () loc(#loc128)
    cir.call @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32L7goodB2GEv() : () -> () loc(#loc129)
    cir.return loc(#loc127)
  } loc(#loc181)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":0:0)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":25:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":54:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":33:9)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":33:24)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":39:9)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":39:24)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":46:13)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":46:49)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":27:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":27:12)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":28:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":28:25)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":29:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":29:25)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":30:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":30:43)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":31:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":31:45)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":32:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":37:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":33:23)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":35:16)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":35:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":36:21)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":36:10)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":36:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":38:5)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":53:5)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":39:23)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":40:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":52:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":46:39)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":46:43)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":48:32)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":48:13)
#loc39 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":49:32)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":49:13)
#loc42 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":50:26)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":50:36)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":50:13)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":61:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":90:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":69:9)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":69:24)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":75:9)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":75:24)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":82:13)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":82:49)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":63:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":63:12)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":64:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":64:25)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":65:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":65:25)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":66:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":66:43)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":67:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":67:45)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":68:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":73:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":69:23)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":71:16)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":71:9)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":72:21)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":72:10)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":72:9)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":74:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":89:5)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":75:23)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":76:9)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":88:9)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":82:39)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":82:43)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":84:32)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":84:13)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":85:32)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":85:13)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":86:26)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":86:36)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":86:13)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":93:1)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":120:1)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":101:9)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":101:24)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":107:9)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":107:24)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":114:13)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":114:48)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":95:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":95:12)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":96:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":96:25)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":97:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":97:25)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":98:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":98:43)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":99:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":99:45)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":100:5)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":105:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":101:23)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":103:16)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":103:9)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":104:21)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":104:10)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":104:9)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":106:5)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":119:5)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":107:23)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":108:9)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":118:9)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":114:38)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":114:42)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":116:32)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":116:13)
#loc122 = loc("../../../testcasesupport/std_testcase.h":71:13)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":117:26)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":117:36)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":117:13)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":122:1)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":126:1)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":124:5)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_32.cpp":125:5)
#loc130 = loc(fused[#loc2, #loc3])
#loc131 = loc(fused[#loc4, #loc5])
#loc132 = loc(fused[#loc6, #loc7])
#loc133 = loc(fused[#loc8, #loc9])
#loc134 = loc(fused[#loc10, #loc11])
#loc135 = loc(fused[#loc12, #loc13])
#loc136 = loc(fused[#loc14, #loc15])
#loc137 = loc(fused[#loc16, #loc17])
#loc138 = loc(fused[#loc18, #loc19])
#loc139 = loc(fused[#loc20, #loc21])
#loc140 = loc(fused[#loc22, #loc23])
#loc141 = loc(fused[#loc26, #loc25])
#loc142 = loc(fused[#loc29, #loc27])
#loc143 = loc(fused[#loc30, #loc31])
#loc144 = loc(fused[#loc33, #loc34])
#loc145 = loc(fused[#loc35, #loc11])
#loc146 = loc(fused[#loc38, #loc37])
#loc147 = loc(fused[#loc41, #loc40])
#loc148 = loc(fused[#loc46, #loc47])
#loc149 = loc(fused[#loc48, #loc49])
#loc150 = loc(fused[#loc50, #loc51])
#loc151 = loc(fused[#loc52, #loc53])
#loc152 = loc(fused[#loc54, #loc55])
#loc153 = loc(fused[#loc56, #loc57])
#loc154 = loc(fused[#loc58, #loc59])
#loc155 = loc(fused[#loc60, #loc61])
#loc156 = loc(fused[#loc62, #loc63])
#loc157 = loc(fused[#loc64, #loc65])
#loc158 = loc(fused[#loc68, #loc67])
#loc159 = loc(fused[#loc71, #loc69])
#loc160 = loc(fused[#loc72, #loc73])
#loc161 = loc(fused[#loc75, #loc76])
#loc162 = loc(fused[#loc77, #loc53])
#loc163 = loc(fused[#loc80, #loc79])
#loc164 = loc(fused[#loc82, #loc81])
#loc165 = loc(fused[#loc87, #loc88])
#loc166 = loc(fused[#loc89, #loc90])
#loc167 = loc(fused[#loc91, #loc92])
#loc168 = loc(fused[#loc93, #loc94])
#loc169 = loc(fused[#loc95, #loc96])
#loc170 = loc(fused[#loc97, #loc98])
#loc171 = loc(fused[#loc99, #loc100])
#loc172 = loc(fused[#loc101, #loc102])
#loc173 = loc(fused[#loc103, #loc104])
#loc174 = loc(fused[#loc105, #loc106])
#loc175 = loc(fused[#loc109, #loc108])
#loc176 = loc(fused[#loc112, #loc110])
#loc177 = loc(fused[#loc113, #loc114])
#loc178 = loc(fused[#loc116, #loc117])
#loc179 = loc(fused[#loc118, #loc94])
#loc180 = loc(fused[#loc121, #loc120])
#loc181 = loc(fused[#loc126, #loc127])
