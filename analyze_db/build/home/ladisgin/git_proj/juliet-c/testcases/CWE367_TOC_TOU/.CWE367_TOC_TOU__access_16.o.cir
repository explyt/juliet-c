!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__access_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc173)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc174)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc175)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc7)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc176)
  cir.func private @access(!cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc177)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc178)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc179)
  cir.func private @write(!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc180)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Bad Sink...\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc18)
  cir.func private @close(!s32i) -> !s32i loc(#loc181)
  cir.func no_proto @CWE367_TOC_TOU__access_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc183)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc184)
    cir.br ^bb1 loc(#loc185)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc185)
  ^bb2:  // pred: ^bb1
    %2 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc29)
    cir.brcond %3 ^bb3, ^bb30 loc(#loc29)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc186)
  ^bb4:  // pred: ^bb3
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc183)
    cir.store %4, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc183)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc32)
    cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc184)
    cir.br ^bb5 loc(#loc187)
  ^bb5:  // pred: ^bb4
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc35)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc36)
    %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc174)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc37)
    %11 = cir.call @fgets(%7, %8, %10) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc38)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc39)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc39)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc188)
    cir.brcond %14 ^bb6, ^bb7 loc(#loc189)
  ^bb6:  // pred: ^bb5
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc7)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc41)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc42)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc42)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc43)
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc44)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc44)
    cir.store %18, %21 : !s8i, !cir.ptr<!s8i> loc(#loc190)
    cir.br ^bb7 loc(#loc34)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc34)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc191)
  ^bb9:  // pred: ^bb8
    %22 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc47)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc48)
    %24 = cir.call @strlen(%23) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc47)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc49)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc49)
    %27 = cir.cmp(gt, %24, %26) : !u64i, !cir.bool loc(#loc192)
    cir.brcond %27 ^bb10, ^bb11 loc(#loc193)
  ^bb10:  // pred: ^bb9
    %28 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc51)
    %30 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc52)
    %31 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc53)
    %32 = cir.call @strlen(%31) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc52)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc54)
    %35 = cir.binop(sub, %32, %34) : !u64i loc(#loc194)
    %36 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc55)
    %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc55)
    cir.store %29, %37 : !s8i, !cir.ptr<!s8i> loc(#loc195)
    cir.br ^bb11 loc(#loc46)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc46)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc196)
  ^bb13:  // pred: ^bb12
    %38 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc58)
    %39 = cir.const #cir.int<2> : !s32i loc(#loc59)
    %40 = cir.call @access(%38, %39) : (!cir.ptr<!s8i>, !s32i) -> !s32i extra(#fn_attr) loc(#loc60)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc61)
    %42 = cir.unary(minus, %41) : !s32i, !s32i loc(#loc62)
    %43 = cir.cmp(eq, %40, %42) : !s32i, !cir.bool loc(#loc197)
    cir.brcond %43 ^bb14, ^bb15 loc(#loc198)
  ^bb14:  // pred: ^bb13
    %44 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc64)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc65)
    cir.call @exit(%45) : (!s32i) -> () extra(#fn_attr) loc(#loc64)
    cir.br ^bb15 loc(#loc57)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc57)
  ^bb16:  // pred: ^bb15
    %46 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc66)
    %47 = cir.const #cir.int<2> : !s32i loc(#loc67)
    %48 = cir.call @open(%46, %47) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc68)
    cir.store %48, %1 : !s32i, !cir.ptr<!s32i> loc(#loc199)
    cir.br ^bb17 loc(#loc200)
  ^bb17:  // pred: ^bb16
    %49 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc73)
    %50 = cir.const #cir.int<1> : !s32i loc(#loc74)
    %51 = cir.unary(minus, %50) : !s32i, !s32i loc(#loc75)
    %52 = cir.cmp(eq, %49, %51) : !s32i, !cir.bool loc(#loc201)
    cir.brcond %52 ^bb18, ^bb19 loc(#loc202)
  ^bb18:  // pred: ^bb17
    %53 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc77)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc78)
    cir.call @exit(%54) : (!s32i) -> () extra(#fn_attr) loc(#loc77)
    cir.br ^bb19 loc(#loc72)
  ^bb19:  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc72)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc203)
  ^bb21:  // pred: ^bb20
    %55 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc81)
    %56 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc18)
    %57 = cir.cast(array_to_ptrdecay, %56 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc18)
    %58 = cir.cast(bitcast, %57 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
    %59 = cir.const #cir.int<11> : !u64i loc(#loc204)
    %60 = cir.call @write(%55, %58, %59) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc84)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc85)
    %62 = cir.unary(minus, %61) : !s32i, !s32i loc(#loc86)
    %63 = cir.cast(integral, %62 : !s32i), !s64i loc(#loc86)
    %64 = cir.cmp(eq, %60, %63) : !s64i, !cir.bool loc(#loc205)
    cir.brcond %64 ^bb22, ^bb23 loc(#loc206)
  ^bb22:  // pred: ^bb21
    %65 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc88)
    %66 = cir.const #cir.int<1> : !s32i loc(#loc89)
    cir.call @exit(%66) : (!s32i) -> () extra(#fn_attr) loc(#loc88)
    cir.br ^bb23 loc(#loc80)
  ^bb23:  // 2 preds: ^bb21, ^bb22
    cir.br ^bb24 loc(#loc80)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc207)
  ^bb25:  // pred: ^bb24
    %67 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc92)
    %68 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %69 = cir.unary(minus, %68) : !s32i, !s32i loc(#loc94)
    %70 = cir.cmp(ne, %67, %69) : !s32i, !cir.bool loc(#loc208)
    cir.brcond %70 ^bb26, ^bb27 loc(#loc209)
  ^bb26:  // pred: ^bb25
    %71 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    %72 = cir.call @close(%71) : (!s32i) -> !s32i loc(#loc97)
    cir.br ^bb27 loc(#loc91)
  ^bb27:  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc91)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc31)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc98)
  ^bb30:  // 2 preds: ^bb2, ^bb29
    cir.br ^bb31 loc(#loc28)
  ^bb31:  // pred: ^bb30
    cir.return loc(#loc22)
  } loc(#loc182)
  cir.func no_proto @CWE367_TOC_TOU__access_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc211)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc101)
    cir.return loc(#loc100)
  } loc(#loc210)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Good Sink...\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc103)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc213)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc214)
    cir.br ^bb1 loc(#loc215)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc215)
  ^bb2:  // pred: ^bb1
    %2 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc112)
    cir.brcond %3 ^bb3, ^bb26 loc(#loc112)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc216)
  ^bb4:  // pred: ^bb3
    %4 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc213)
    cir.store %4, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc213)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %6 = cir.unary(minus, %5) : !s32i, !s32i loc(#loc115)
    cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc214)
    cir.br ^bb5 loc(#loc217)
  ^bb5:  // pred: ^bb4
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc118)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc119)
    %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc174)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc120)
    %11 = cir.call @fgets(%7, %8, %10) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc121)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc122)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc122)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s8i>, !cir.bool loc(#loc218)
    cir.brcond %14 ^bb6, ^bb7 loc(#loc219)
  ^bb6:  // pred: ^bb5
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc124)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc124)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc125)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc126)
    %18 = cir.cast(integral, %17 : !s32i), !s8i loc(#loc126)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc127)
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc128)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc128)
    cir.store %18, %21 : !s8i, !cir.ptr<!s8i> loc(#loc220)
    cir.br ^bb7 loc(#loc117)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc117)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc221)
  ^bb9:  // pred: ^bb8
    %22 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc131)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc132)
    %24 = cir.call @strlen(%23) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc131)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc133)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc133)
    %27 = cir.cmp(gt, %24, %26) : !u64i, !cir.bool loc(#loc222)
    cir.brcond %27 ^bb10, ^bb11 loc(#loc223)
  ^bb10:  // pred: ^bb9
    %28 = cir.const #cir.int<0> : !s32i loc(#loc135)
    %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc135)
    %30 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc136)
    %31 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc137)
    %32 = cir.call @strlen(%31) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc136)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc138)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc138)
    %35 = cir.binop(sub, %32, %34) : !u64i loc(#loc224)
    %36 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc139)
    %37 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %35 : !u64i), !cir.ptr<!s8i> loc(#loc139)
    cir.store %29, %37 : !s8i, !cir.ptr<!s8i> loc(#loc225)
    cir.br ^bb11 loc(#loc130)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc130)
  ^bb12:  // pred: ^bb11
    %38 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc140)
    %39 = cir.const #cir.int<2> : !s32i loc(#loc141)
    %40 = cir.call @open(%38, %39) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc142)
    cir.store %40, %1 : !s32i, !cir.ptr<!s32i> loc(#loc226)
    cir.br ^bb13 loc(#loc227)
  ^bb13:  // pred: ^bb12
    %41 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc147)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc148)
    %43 = cir.unary(minus, %42) : !s32i, !s32i loc(#loc149)
    %44 = cir.cmp(eq, %41, %43) : !s32i, !cir.bool loc(#loc228)
    cir.brcond %44 ^bb14, ^bb15 loc(#loc229)
  ^bb14:  // pred: ^bb13
    %45 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc151)
    %46 = cir.const #cir.int<1> : !s32i loc(#loc152)
    cir.call @exit(%46) : (!s32i) -> () extra(#fn_attr) loc(#loc151)
    cir.br ^bb15 loc(#loc146)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc146)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc230)
  ^bb17:  // pred: ^bb16
    %47 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc155)
    %48 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc103)
    %49 = cir.cast(array_to_ptrdecay, %48 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc103)
    %50 = cir.cast(bitcast, %49 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc103)
    %51 = cir.const #cir.int<12> : !u64i loc(#loc231)
    %52 = cir.call @write(%47, %50, %51) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc158)
    %53 = cir.const #cir.int<1> : !s32i loc(#loc159)
    %54 = cir.unary(minus, %53) : !s32i, !s32i loc(#loc160)
    %55 = cir.cast(integral, %54 : !s32i), !s64i loc(#loc160)
    %56 = cir.cmp(eq, %52, %55) : !s64i, !cir.bool loc(#loc232)
    cir.brcond %56 ^bb18, ^bb19 loc(#loc233)
  ^bb18:  // pred: ^bb17
    %57 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc162)
    %58 = cir.const #cir.int<1> : !s32i loc(#loc163)
    cir.call @exit(%58) : (!s32i) -> () extra(#fn_attr) loc(#loc162)
    cir.br ^bb19 loc(#loc154)
  ^bb19:  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc154)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc234)
  ^bb21:  // pred: ^bb20
    %59 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    %60 = cir.const #cir.int<1> : !s32i loc(#loc167)
    %61 = cir.unary(minus, %60) : !s32i, !s32i loc(#loc168)
    %62 = cir.cmp(ne, %59, %61) : !s32i, !cir.bool loc(#loc235)
    cir.brcond %62 ^bb22, ^bb23 loc(#loc236)
  ^bb22:  // pred: ^bb21
    %63 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc170)
    %64 = cir.call @close(%63) : (!s32i) -> !s32i loc(#loc171)
    cir.br ^bb23 loc(#loc165)
  ^bb23:  // 2 preds: ^bb21, ^bb22
    cir.br ^bb24 loc(#loc165)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc114)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc172)
  ^bb26:  // 2 preds: ^bb2, ^bb25
    cir.br ^bb27 loc(#loc111)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc105)
  } loc(#loc212)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__access_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE367_TOC_TOU__access_16.c":53:27)
#loc8 = loc("/usr/include/string.h":407:1)
#loc9 = loc("/usr/include/string.h":408:33)
#loc10 = loc("/usr/include/unistd.h":287:1)
#loc11 = loc("/usr/include/unistd.h":287:60)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("/usr/include/fcntl.h":209:1)
#loc15 = loc("/usr/include/fcntl.h":209:56)
#loc16 = loc("/usr/include/unistd.h":378:1)
#loc17 = loc("/usr/include/unistd.h":378:62)
#loc18 = loc("CWE367_TOC_TOU__access_16.c":71:33)
#loc19 = loc("/usr/include/unistd.h":358:1)
#loc20 = loc("/usr/include/unistd.h":358:27)
#loc21 = loc("CWE367_TOC_TOU__access_16.c":44:1)
#loc22 = loc("CWE367_TOC_TOU__access_16.c":82:1)
#loc23 = loc("CWE367_TOC_TOU__access_16.c":49:13)
#loc24 = loc("CWE367_TOC_TOU__access_16.c":49:34)
#loc25 = loc("CWE367_TOC_TOU__access_16.c":50:13)
#loc26 = loc("CWE367_TOC_TOU__access_16.c":50:29)
#loc27 = loc("CWE367_TOC_TOU__access_16.c":46:5)
#loc28 = loc("CWE367_TOC_TOU__access_16.c":81:5)
#loc29 = loc("CWE367_TOC_TOU__access_16.c":46:11)
#loc30 = loc("CWE367_TOC_TOU__access_16.c":48:9)
#loc31 = loc("CWE367_TOC_TOU__access_16.c":79:9)
#loc32 = loc("CWE367_TOC_TOU__access_16.c":50:28)
#loc33 = loc("CWE367_TOC_TOU__access_16.c":51:13)
#loc34 = loc("CWE367_TOC_TOU__access_16.c":56:13)
#loc35 = loc("CWE367_TOC_TOU__access_16.c":51:23)
#loc36 = loc("CWE367_TOC_TOU__access_16.c":51:33)
#loc37 = loc("CWE367_TOC_TOU__access_16.c":51:38)
#loc38 = loc("CWE367_TOC_TOU__access_16.c":51:17)
#loc39 = loc("CWE367_TOC_TOU__access_16.c":51:48)
#loc40 = loc("CWE367_TOC_TOU__access_16.c":52:13)
#loc41 = loc("CWE367_TOC_TOU__access_16.c":53:17)
#loc42 = loc("CWE367_TOC_TOU__access_16.c":55:31)
#loc43 = loc("CWE367_TOC_TOU__access_16.c":55:26)
#loc44 = loc("CWE367_TOC_TOU__access_16.c":55:17)
#loc45 = loc("CWE367_TOC_TOU__access_16.c":57:13)
#loc46 = loc("CWE367_TOC_TOU__access_16.c":60:13)
#loc47 = loc("CWE367_TOC_TOU__access_16.c":57:17)
#loc48 = loc("CWE367_TOC_TOU__access_16.c":57:24)
#loc49 = loc("CWE367_TOC_TOU__access_16.c":57:36)
#loc50 = loc("CWE367_TOC_TOU__access_16.c":58:13)
#loc51 = loc("CWE367_TOC_TOU__access_16.c":59:48)
#loc52 = loc("CWE367_TOC_TOU__access_16.c":59:26)
#loc53 = loc("CWE367_TOC_TOU__access_16.c":59:33)
#loc54 = loc("CWE367_TOC_TOU__access_16.c":59:43)
#loc55 = loc("CWE367_TOC_TOU__access_16.c":59:17)
#loc56 = loc("CWE367_TOC_TOU__access_16.c":62:13)
#loc57 = loc("CWE367_TOC_TOU__access_16.c":65:13)
#loc58 = loc("CWE367_TOC_TOU__access_16.c":62:24)
#loc59 = loc("CWE367_TOC_TOU__access_16.c":62:34)
#loc60 = loc("CWE367_TOC_TOU__access_16.c":62:17)
#loc61 = loc("CWE367_TOC_TOU__access_16.c":62:44)
#loc62 = loc("CWE367_TOC_TOU__access_16.c":62:43)
#loc63 = loc("CWE367_TOC_TOU__access_16.c":63:13)
#loc64 = loc("CWE367_TOC_TOU__access_16.c":64:17)
#loc65 = loc("CWE367_TOC_TOU__access_16.c":64:22)
#loc66 = loc("CWE367_TOC_TOU__access_16.c":66:30)
#loc67 = loc("CWE367_TOC_TOU__access_16.c":66:40)
#loc68 = loc("CWE367_TOC_TOU__access_16.c":66:25)
#loc69 = loc("CWE367_TOC_TOU__access_16.c":66:13)
#loc70 = loc("CWE367_TOC_TOU__access_16.c":66:46)
#loc71 = loc("CWE367_TOC_TOU__access_16.c":67:13)
#loc72 = loc("CWE367_TOC_TOU__access_16.c":70:13)
#loc73 = loc("CWE367_TOC_TOU__access_16.c":67:17)
#loc74 = loc("CWE367_TOC_TOU__access_16.c":67:30)
#loc75 = loc("CWE367_TOC_TOU__access_16.c":67:29)
#loc76 = loc("CWE367_TOC_TOU__access_16.c":68:13)
#loc77 = loc("CWE367_TOC_TOU__access_16.c":69:17)
#loc78 = loc("CWE367_TOC_TOU__access_16.c":69:22)
#loc79 = loc("CWE367_TOC_TOU__access_16.c":71:13)
#loc80 = loc("CWE367_TOC_TOU__access_16.c":74:13)
#loc81 = loc("CWE367_TOC_TOU__access_16.c":71:23)
#loc82 = loc("CWE367_TOC_TOU__access_16.c":71:50)
#loc83 = loc("CWE367_TOC_TOU__access_16.c":71:72)
#loc84 = loc("CWE367_TOC_TOU__access_16.c":71:17)
#loc85 = loc("CWE367_TOC_TOU__access_16.c":71:79)
#loc86 = loc("CWE367_TOC_TOU__access_16.c":71:78)
#loc87 = loc("CWE367_TOC_TOU__access_16.c":72:13)
#loc88 = loc("CWE367_TOC_TOU__access_16.c":73:17)
#loc89 = loc("CWE367_TOC_TOU__access_16.c":73:22)
#loc90 = loc("CWE367_TOC_TOU__access_16.c":75:13)
#loc91 = loc("CWE367_TOC_TOU__access_16.c":78:13)
#loc92 = loc("CWE367_TOC_TOU__access_16.c":75:17)
#loc93 = loc("CWE367_TOC_TOU__access_16.c":75:30)
#loc94 = loc("CWE367_TOC_TOU__access_16.c":75:29)
#loc95 = loc("CWE367_TOC_TOU__access_16.c":76:13)
#loc96 = loc("CWE367_TOC_TOU__access_16.c":77:23)
#loc97 = loc("CWE367_TOC_TOU__access_16.c":77:17)
#loc98 = loc("CWE367_TOC_TOU__access_16.c":80:9)
#loc99 = loc("CWE367_TOC_TOU__access_16.c":125:1)
#loc100 = loc("CWE367_TOC_TOU__access_16.c":128:1)
#loc101 = loc("CWE367_TOC_TOU__access_16.c":127:5)
#loc102 = loc("CWE367_TOC_TOU__access_16.c":127:11)
#loc103 = loc("CWE367_TOC_TOU__access_16.c":112:33)
#loc104 = loc("CWE367_TOC_TOU__access_16.c":89:1)
#loc105 = loc("CWE367_TOC_TOU__access_16.c":123:1)
#loc106 = loc("CWE367_TOC_TOU__access_16.c":94:13)
#loc107 = loc("CWE367_TOC_TOU__access_16.c":94:34)
#loc108 = loc("CWE367_TOC_TOU__access_16.c":95:13)
#loc109 = loc("CWE367_TOC_TOU__access_16.c":95:29)
#loc110 = loc("CWE367_TOC_TOU__access_16.c":91:5)
#loc111 = loc("CWE367_TOC_TOU__access_16.c":122:5)
#loc112 = loc("CWE367_TOC_TOU__access_16.c":91:11)
#loc113 = loc("CWE367_TOC_TOU__access_16.c":93:9)
#loc114 = loc("CWE367_TOC_TOU__access_16.c":120:9)
#loc115 = loc("CWE367_TOC_TOU__access_16.c":95:28)
#loc116 = loc("CWE367_TOC_TOU__access_16.c":96:13)
#loc117 = loc("CWE367_TOC_TOU__access_16.c":101:13)
#loc118 = loc("CWE367_TOC_TOU__access_16.c":96:23)
#loc119 = loc("CWE367_TOC_TOU__access_16.c":96:33)
#loc120 = loc("CWE367_TOC_TOU__access_16.c":96:38)
#loc121 = loc("CWE367_TOC_TOU__access_16.c":96:17)
#loc122 = loc("CWE367_TOC_TOU__access_16.c":96:48)
#loc123 = loc("CWE367_TOC_TOU__access_16.c":97:13)
#loc124 = loc("CWE367_TOC_TOU__access_16.c":98:27)
#loc125 = loc("CWE367_TOC_TOU__access_16.c":98:17)
#loc126 = loc("CWE367_TOC_TOU__access_16.c":100:31)
#loc127 = loc("CWE367_TOC_TOU__access_16.c":100:26)
#loc128 = loc("CWE367_TOC_TOU__access_16.c":100:17)
#loc129 = loc("CWE367_TOC_TOU__access_16.c":102:13)
#loc130 = loc("CWE367_TOC_TOU__access_16.c":105:13)
#loc131 = loc("CWE367_TOC_TOU__access_16.c":102:17)
#loc132 = loc("CWE367_TOC_TOU__access_16.c":102:24)
#loc133 = loc("CWE367_TOC_TOU__access_16.c":102:36)
#loc134 = loc("CWE367_TOC_TOU__access_16.c":103:13)
#loc135 = loc("CWE367_TOC_TOU__access_16.c":104:48)
#loc136 = loc("CWE367_TOC_TOU__access_16.c":104:26)
#loc137 = loc("CWE367_TOC_TOU__access_16.c":104:33)
#loc138 = loc("CWE367_TOC_TOU__access_16.c":104:43)
#loc139 = loc("CWE367_TOC_TOU__access_16.c":104:17)
#loc140 = loc("CWE367_TOC_TOU__access_16.c":107:30)
#loc141 = loc("CWE367_TOC_TOU__access_16.c":107:40)
#loc142 = loc("CWE367_TOC_TOU__access_16.c":107:25)
#loc143 = loc("CWE367_TOC_TOU__access_16.c":107:13)
#loc144 = loc("CWE367_TOC_TOU__access_16.c":107:46)
#loc145 = loc("CWE367_TOC_TOU__access_16.c":108:13)
#loc146 = loc("CWE367_TOC_TOU__access_16.c":111:13)
#loc147 = loc("CWE367_TOC_TOU__access_16.c":108:17)
#loc148 = loc("CWE367_TOC_TOU__access_16.c":108:30)
#loc149 = loc("CWE367_TOC_TOU__access_16.c":108:29)
#loc150 = loc("CWE367_TOC_TOU__access_16.c":109:13)
#loc151 = loc("CWE367_TOC_TOU__access_16.c":110:17)
#loc152 = loc("CWE367_TOC_TOU__access_16.c":110:22)
#loc153 = loc("CWE367_TOC_TOU__access_16.c":112:13)
#loc154 = loc("CWE367_TOC_TOU__access_16.c":115:13)
#loc155 = loc("CWE367_TOC_TOU__access_16.c":112:23)
#loc156 = loc("CWE367_TOC_TOU__access_16.c":112:51)
#loc157 = loc("CWE367_TOC_TOU__access_16.c":112:74)
#loc158 = loc("CWE367_TOC_TOU__access_16.c":112:17)
#loc159 = loc("CWE367_TOC_TOU__access_16.c":112:81)
#loc160 = loc("CWE367_TOC_TOU__access_16.c":112:80)
#loc161 = loc("CWE367_TOC_TOU__access_16.c":113:13)
#loc162 = loc("CWE367_TOC_TOU__access_16.c":114:17)
#loc163 = loc("CWE367_TOC_TOU__access_16.c":114:22)
#loc164 = loc("CWE367_TOC_TOU__access_16.c":116:13)
#loc165 = loc("CWE367_TOC_TOU__access_16.c":119:13)
#loc166 = loc("CWE367_TOC_TOU__access_16.c":116:17)
#loc167 = loc("CWE367_TOC_TOU__access_16.c":116:30)
#loc168 = loc("CWE367_TOC_TOU__access_16.c":116:29)
#loc169 = loc("CWE367_TOC_TOU__access_16.c":117:13)
#loc170 = loc("CWE367_TOC_TOU__access_16.c":118:23)
#loc171 = loc("CWE367_TOC_TOU__access_16.c":118:17)
#loc172 = loc("CWE367_TOC_TOU__access_16.c":121:9)
#loc173 = loc(fused[#loc1, #loc2])
#loc174 = loc(fused[#loc3, #loc4])
#loc175 = loc(fused[#loc5, #loc6])
#loc176 = loc(fused[#loc8, #loc9])
#loc177 = loc(fused[#loc10, #loc11])
#loc178 = loc(fused[#loc12, #loc13])
#loc179 = loc(fused[#loc14, #loc15])
#loc180 = loc(fused[#loc16, #loc17])
#loc181 = loc(fused[#loc19, #loc20])
#loc182 = loc(fused[#loc21, #loc22])
#loc183 = loc(fused[#loc23, #loc24])
#loc184 = loc(fused[#loc25, #loc26])
#loc185 = loc(fused[#loc27, #loc28])
#loc186 = loc(fused[#loc30, #loc31])
#loc187 = loc(fused[#loc33, #loc34])
#loc188 = loc(fused[#loc38, #loc39])
#loc189 = loc(fused[#loc40, #loc34])
#loc190 = loc(fused[#loc44, #loc42])
#loc191 = loc(fused[#loc45, #loc46])
#loc192 = loc(fused[#loc47, #loc49])
#loc193 = loc(fused[#loc50, #loc46])
#loc194 = loc(fused[#loc52, #loc54])
#loc195 = loc(fused[#loc55, #loc51])
#loc196 = loc(fused[#loc56, #loc57])
#loc197 = loc(fused[#loc60, #loc61])
#loc198 = loc(fused[#loc63, #loc57])
#loc199 = loc(fused[#loc69, #loc70])
#loc200 = loc(fused[#loc71, #loc72])
#loc201 = loc(fused[#loc73, #loc74])
#loc202 = loc(fused[#loc76, #loc72])
#loc203 = loc(fused[#loc79, #loc80])
#loc204 = loc(fused[#loc82, #loc83])
#loc205 = loc(fused[#loc84, #loc85])
#loc206 = loc(fused[#loc87, #loc80])
#loc207 = loc(fused[#loc90, #loc91])
#loc208 = loc(fused[#loc92, #loc93])
#loc209 = loc(fused[#loc95, #loc91])
#loc210 = loc(fused[#loc99, #loc100])
#loc211 = loc(fused[#loc101, #loc102])
#loc212 = loc(fused[#loc104, #loc105])
#loc213 = loc(fused[#loc106, #loc107])
#loc214 = loc(fused[#loc108, #loc109])
#loc215 = loc(fused[#loc110, #loc111])
#loc216 = loc(fused[#loc113, #loc114])
#loc217 = loc(fused[#loc116, #loc117])
#loc218 = loc(fused[#loc121, #loc122])
#loc219 = loc(fused[#loc123, #loc117])
#loc220 = loc(fused[#loc128, #loc126])
#loc221 = loc(fused[#loc129, #loc130])
#loc222 = loc(fused[#loc131, #loc133])
#loc223 = loc(fused[#loc134, #loc130])
#loc224 = loc(fused[#loc136, #loc138])
#loc225 = loc(fused[#loc139, #loc135])
#loc226 = loc(fused[#loc143, #loc144])
#loc227 = loc(fused[#loc145, #loc146])
#loc228 = loc(fused[#loc147, #loc148])
#loc229 = loc(fused[#loc150, #loc146])
#loc230 = loc(fused[#loc153, #loc154])
#loc231 = loc(fused[#loc156, #loc157])
#loc232 = loc(fused[#loc158, #loc159])
#loc233 = loc(fused[#loc161, #loc154])
#loc234 = loc(fused[#loc164, #loc165])
#loc235 = loc(fused[#loc166, #loc167])
#loc236 = loc(fused[#loc169, #loc165])
