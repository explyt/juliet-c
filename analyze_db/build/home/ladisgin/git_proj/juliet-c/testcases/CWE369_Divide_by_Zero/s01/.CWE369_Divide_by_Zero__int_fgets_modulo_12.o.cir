!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_modulo_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc193)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc194)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc195)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc196)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc197)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc11)
  cir.func private @printIntLine(!s32i) loc(#loc198)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc14)
  cir.func no_proto @CWE369_Divide_by_Zero__int_fgets_modulo_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc200)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc201)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %3 = cir.unary(minus, %2) : !s32i, !s32i loc(#loc22)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc202)
    cir.br ^bb1 loc(#loc203)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc204)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc204)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc26)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc26)
    cir.brcond %7 ^bb2, ^bb10 loc(#loc205)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc206)
  ^bb3:  // pred: ^bb2
    %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc200)
    cir.store %8, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc200)
    cir.br ^bb4 loc(#loc207)
  ^bb4:  // pred: ^bb3
    %9 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc35)
    %10 = cir.const #cir.int<3> : !s32i loc(#loc36)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc36)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc36)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc36)
    %14 = cir.const #cir.int<2> : !s32i loc(#loc36)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc36)
    %16 = cir.binop(add, %13, %15) : !u64i loc(#loc36)
    %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc36)
    %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc195)
    %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc37)
    %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc38)
    %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc39)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc39)
    %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc208)
    cir.brcond %23 ^bb5, ^bb6 loc(#loc209)
  ^bb5:  // pred: ^bb4
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc43)
    %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc44)
    cir.store %25, %1 : !s32i, !cir.ptr<!s32i> loc(#loc210)
    cir.br ^bb7 loc(#loc41)
  ^bb6:  // pred: ^bb4
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc11)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc11)
    cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc47)
    cir.br ^bb7 loc(#loc34)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc34)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc32)
  ^bb9:  // pred: ^bb8
    cir.br ^bb11 loc(#loc29)
  ^bb10:  // pred: ^bb1
    %28 = cir.const #cir.int<7> : !s32i loc(#loc48)
    cir.store %28, %1 : !s32i, !cir.ptr<!s32i> loc(#loc211)
    cir.br ^bb11 loc(#loc25)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc25)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc212)
  ^bb13:  // pred: ^bb12
    %29 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc213)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc213)
    %31 = cir.call %30() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc52)
    %32 = cir.cast(int_to_bool, %31 : !s32i), !cir.bool loc(#loc52)
    cir.brcond %32 ^bb14, ^bb15 loc(#loc214)
  ^bb14:  // pred: ^bb13
    %33 = cir.const #cir.int<100> : !s32i loc(#loc57)
    %34 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc58)
    %35 = cir.binop(rem, %33, %34) : !s32i loc(#loc215)
    cir.call @printIntLine(%35) : (!s32i) -> () loc(#loc59)
    cir.br ^bb21 loc(#loc55)
  ^bb15:  // pred: ^bb13
    cir.br ^bb16 loc(#loc216)
  ^bb16:  // pred: ^bb15
    %36 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %38 = cir.cmp(ne, %36, %37) : !s32i, !cir.bool loc(#loc217)
    cir.brcond %38 ^bb17, ^bb18 loc(#loc218)
  ^bb17:  // pred: ^bb16
    %39 = cir.const #cir.int<100> : !s32i loc(#loc67)
    %40 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc68)
    %41 = cir.binop(rem, %39, %40) : !s32i loc(#loc219)
    cir.call @printIntLine(%41) : (!s32i) -> () loc(#loc69)
    cir.br ^bb19 loc(#loc65)
  ^bb18:  // pred: ^bb16
    %42 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc14)
    %43 = cir.cast(array_to_ptrdecay, %42 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc14)
    cir.call @printLine(%43) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    cir.br ^bb19 loc(#loc61)
  ^bb19:  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc61)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc51)
  ^bb21:  // 2 preds: ^bb14, ^bb20
    cir.br ^bb22 loc(#loc51)
  ^bb22:  // pred: ^bb21
    cir.return loc(#loc16)
  } loc(#loc199)
  cir.func no_proto @CWE369_Divide_by_Zero__int_fgets_modulo_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc221)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc73)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc222)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc75)
    cir.return loc(#loc72)
  } loc(#loc220)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc224)
    %1 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc225)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc226)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc85)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc86)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc227)
    cir.br ^bb1 loc(#loc228)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc229)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc229)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc90)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc90)
    cir.brcond %8 ^bb2, ^bb10 loc(#loc230)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc231)
  ^bb3:  // pred: ^bb2
    %9 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc224)
    cir.store %9, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc224)
    cir.br ^bb4 loc(#loc232)
  ^bb4:  // pred: ^bb3
    %10 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc99)
    %11 = cir.const #cir.int<3> : !s32i loc(#loc100)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc100)
    %13 = cir.const #cir.int<4> : !u64i loc(#loc100)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc100)
    %15 = cir.const #cir.int<2> : !s32i loc(#loc100)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc100)
    %17 = cir.binop(add, %14, %16) : !u64i loc(#loc100)
    %18 = cir.cast(integral, %17 : !u64i), !s32i loc(#loc100)
    %19 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc195)
    %20 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc101)
    %21 = cir.call @fgets(%10, %18, %20) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc102)
    %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc103)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc103)
    %24 = cir.cmp(ne, %21, %23) : !cir.ptr<!s8i>, !cir.bool loc(#loc233)
    cir.brcond %24 ^bb5, ^bb6 loc(#loc234)
  ^bb5:  // pred: ^bb4
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc107)
    %26 = cir.call @atoi(%25) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc108)
    cir.store %26, %2 : !s32i, !cir.ptr<!s32i> loc(#loc235)
    cir.br ^bb7 loc(#loc105)
  ^bb6:  // pred: ^bb4
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc111)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc111)
    cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    cir.br ^bb7 loc(#loc98)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc98)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc96)
  ^bb9:  // pred: ^bb8
    cir.br ^bb18 loc(#loc93)
  ^bb10:  // pred: ^bb1
    cir.br ^bb11 loc(#loc236)
  ^bb11:  // pred: ^bb10
    %29 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc225)
    cir.store %29, %1 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc225)
    cir.br ^bb12 loc(#loc237)
  ^bb12:  // pred: ^bb11
    %30 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc117)
    %31 = cir.const #cir.int<3> : !s32i loc(#loc118)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc118)
    %33 = cir.const #cir.int<4> : !u64i loc(#loc118)
    %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc118)
    %35 = cir.const #cir.int<2> : !s32i loc(#loc118)
    %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc118)
    %37 = cir.binop(add, %34, %36) : !u64i loc(#loc118)
    %38 = cir.cast(integral, %37 : !u64i), !s32i loc(#loc118)
    %39 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc195)
    %40 = cir.load %39 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc119)
    %41 = cir.call @fgets(%30, %38, %40) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc120)
    %42 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc121)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc121)
    %44 = cir.cmp(ne, %41, %43) : !cir.ptr<!s8i>, !cir.bool loc(#loc238)
    cir.brcond %44 ^bb13, ^bb14 loc(#loc239)
  ^bb13:  // pred: ^bb12
    %45 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc125)
    %46 = cir.call @atoi(%45) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc126)
    cir.store %46, %2 : !s32i, !cir.ptr<!s32i> loc(#loc240)
    cir.br ^bb15 loc(#loc123)
  ^bb14:  // pred: ^bb12
    %47 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc129)
    %48 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc129)
    cir.call @printLine(%48) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    cir.br ^bb15 loc(#loc116)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc116)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc114)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc89)
  ^bb18:  // 2 preds: ^bb9, ^bb17
    cir.br ^bb19 loc(#loc89)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc241)
  ^bb20:  // pred: ^bb19
    %49 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc242)
    %50 = cir.cast(bitcast, %49 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc242)
    %51 = cir.call %50() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc133)
    %52 = cir.cast(int_to_bool, %51 : !s32i), !cir.bool loc(#loc133)
    cir.brcond %52 ^bb21, ^bb27 loc(#loc243)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc244)
  ^bb22:  // pred: ^bb21
    %53 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc140)
    %54 = cir.const #cir.int<0> : !s32i loc(#loc141)
    %55 = cir.cmp(ne, %53, %54) : !s32i, !cir.bool loc(#loc245)
    cir.brcond %55 ^bb23, ^bb24 loc(#loc246)
  ^bb23:  // pred: ^bb22
    %56 = cir.const #cir.int<100> : !s32i loc(#loc145)
    %57 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    %58 = cir.binop(rem, %56, %57) : !s32i loc(#loc247)
    cir.call @printIntLine(%58) : (!s32i) -> () loc(#loc147)
    cir.br ^bb25 loc(#loc143)
  ^bb24:  // pred: ^bb22
    %59 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc148)
    %60 = cir.cast(array_to_ptrdecay, %59 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc148)
    cir.call @printLine(%60) : (!cir.ptr<!s8i>) -> () loc(#loc149)
    cir.br ^bb25 loc(#loc139)
  ^bb25:  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc139)
  ^bb26:  // pred: ^bb25
    cir.br ^bb33 loc(#loc136)
  ^bb27:  // pred: ^bb20
    cir.br ^bb28 loc(#loc248)
  ^bb28:  // pred: ^bb27
    %61 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    %62 = cir.const #cir.int<0> : !s32i loc(#loc153)
    %63 = cir.cmp(ne, %61, %62) : !s32i, !cir.bool loc(#loc249)
    cir.brcond %63 ^bb29, ^bb30 loc(#loc250)
  ^bb29:  // pred: ^bb28
    %64 = cir.const #cir.int<100> : !s32i loc(#loc157)
    %65 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    %66 = cir.binop(rem, %64, %65) : !s32i loc(#loc251)
    cir.call @printIntLine(%66) : (!s32i) -> () loc(#loc159)
    cir.br ^bb31 loc(#loc155)
  ^bb30:  // pred: ^bb28
    %67 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc160)
    %68 = cir.cast(array_to_ptrdecay, %67 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc160)
    cir.call @printLine(%68) : (!cir.ptr<!s8i>) -> () loc(#loc161)
    cir.br ^bb31 loc(#loc151)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc151)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc132)
  ^bb33:  // 2 preds: ^bb26, ^bb32
    cir.br ^bb34 loc(#loc132)
  ^bb34:  // pred: ^bb33
    cir.return loc(#loc78)
  } loc(#loc223)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc253)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc166)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc167)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc254)
    cir.br ^bb1 loc(#loc255)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc256)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc256)
    %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc171)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc171)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc257)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<7> : !s32i loc(#loc176)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc258)
    cir.br ^bb4 loc(#loc174)
  ^bb3:  // pred: ^bb1
    %8 = cir.const #cir.int<7> : !s32i loc(#loc178)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc259)
    cir.br ^bb4 loc(#loc170)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc170)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc260)
  ^bb6:  // pred: ^bb5
    %9 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc261)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc261)
    %11 = cir.call %10() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc182)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc182)
    cir.brcond %12 ^bb7, ^bb8 loc(#loc262)
  ^bb7:  // pred: ^bb6
    %13 = cir.const #cir.int<100> : !s32i loc(#loc187)
    %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc188)
    %15 = cir.binop(rem, %13, %14) : !s32i loc(#loc263)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc189)
    cir.br ^bb9 loc(#loc185)
  ^bb8:  // pred: ^bb6
    %16 = cir.const #cir.int<100> : !s32i loc(#loc190)
    %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc191)
    %18 = cir.binop(rem, %16, %17) : !s32i loc(#loc264)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc192)
    cir.br ^bb9 loc(#loc181)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc181)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc163)
  } loc(#loc252)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__int_fgets_modulo_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("/usr/include/stdlib.h":105:1)
#loc8 = loc("/usr/include/stdlib.h":106:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":41:27)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":64:23)
#loc15 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":24:1)
#loc16 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":67:1)
#loc17 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":32:13)
#loc18 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":32:49)
#loc19 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":26:5)
#loc20 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":26:9)
#loc21 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":28:13)
#loc22 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":28:12)
#loc23 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":28:5)
#loc24 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":29:5)
#loc25 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":49:5)
#loc26 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":29:8)
#loc27 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":29:33)
#loc28 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":30:5)
#loc29 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":44:5)
#loc30 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":46:5)
#loc31 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":31:9)
#loc32 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":43:9)
#loc33 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":34:13)
#loc34 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":42:13)
#loc35 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":34:23)
#loc36 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":34:36)
#loc37 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":34:53)
#loc38 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":34:17)
#loc39 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":34:63)
#loc40 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":35:13)
#loc41 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":38:13)
#loc42 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":40:13)
#loc43 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":37:29)
#loc44 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":37:24)
#loc45 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":37:17)
#loc46 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":37:40)
#loc47 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":41:17)
#loc48 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":48:16)
#loc49 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":48:9)
#loc50 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":50:5)
#loc51 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":66:5)
#loc52 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":50:8)
#loc53 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":50:33)
#loc54 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":51:5)
#loc55 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":54:5)
#loc56 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":56:5)
#loc57 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":53:22)
#loc58 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":53:28)
#loc59 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":53:9)
#loc60 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":58:9)
#loc61 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":65:9)
#loc62 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":58:13)
#loc63 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":58:21)
#loc64 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":59:9)
#loc65 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":61:9)
#loc66 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":63:9)
#loc67 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":60:26)
#loc68 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":60:32)
#loc69 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":60:13)
#loc70 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":64:13)
#loc71 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":169:1)
#loc72 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":173:1)
#loc73 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":171:5)
#loc74 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":171:13)
#loc75 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":172:5)
#loc76 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":172:13)
#loc77 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":76:1)
#loc78 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":137:1)
#loc79 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":84:13)
#loc80 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":84:49)
#loc81 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":100:13)
#loc82 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":100:49)
#loc83 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":78:5)
#loc84 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":78:9)
#loc85 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":80:13)
#loc86 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":80:12)
#loc87 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":80:5)
#loc88 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":81:5)
#loc89 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":112:5)
#loc90 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":81:8)
#loc91 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":81:33)
#loc92 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":82:5)
#loc93 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":96:5)
#loc94 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":98:5)
#loc95 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":83:9)
#loc96 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":95:9)
#loc97 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":86:13)
#loc98 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":94:13)
#loc99 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":86:23)
#loc100 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":86:36)
#loc101 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":86:53)
#loc102 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":86:17)
#loc103 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":86:63)
#loc104 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":87:13)
#loc105 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":90:13)
#loc106 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":92:13)
#loc107 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":89:29)
#loc108 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":89:24)
#loc109 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":89:17)
#loc110 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":89:40)
#loc111 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":93:27)
#loc112 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":93:17)
#loc113 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":99:9)
#loc114 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":111:9)
#loc115 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":102:13)
#loc116 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":110:13)
#loc117 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":102:23)
#loc118 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":102:36)
#loc119 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":102:53)
#loc120 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":102:17)
#loc121 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":102:63)
#loc122 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":103:13)
#loc123 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":106:13)
#loc124 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":108:13)
#loc125 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":105:29)
#loc126 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":105:24)
#loc127 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":105:17)
#loc128 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":105:40)
#loc129 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":109:27)
#loc130 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":109:17)
#loc131 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":113:5)
#loc132 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":136:5)
#loc133 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":113:8)
#loc134 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":113:33)
#loc135 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":114:5)
#loc136 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":124:5)
#loc137 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":126:5)
#loc138 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":116:9)
#loc139 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":123:9)
#loc140 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":116:13)
#loc141 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":116:21)
#loc142 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":117:9)
#loc143 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":119:9)
#loc144 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":121:9)
#loc145 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":118:26)
#loc146 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":118:32)
#loc147 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":118:13)
#loc148 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":122:23)
#loc149 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":122:13)
#loc150 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":128:9)
#loc151 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":135:9)
#loc152 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":128:13)
#loc153 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":128:21)
#loc154 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":129:9)
#loc155 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":131:9)
#loc156 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":133:9)
#loc157 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":130:26)
#loc158 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":130:32)
#loc159 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":130:13)
#loc160 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":134:23)
#loc161 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":134:13)
#loc162 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":142:1)
#loc163 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":167:1)
#loc164 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":144:5)
#loc165 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":144:9)
#loc166 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":146:13)
#loc167 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":146:12)
#loc168 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":146:5)
#loc169 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":147:5)
#loc170 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":156:5)
#loc171 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":147:8)
#loc172 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":147:33)
#loc173 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":148:5)
#loc174 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":151:5)
#loc175 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":153:5)
#loc176 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":150:16)
#loc177 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":150:9)
#loc178 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":155:16)
#loc179 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":155:9)
#loc180 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":157:5)
#loc181 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":166:5)
#loc182 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":157:8)
#loc183 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":157:33)
#loc184 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":158:5)
#loc185 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":161:5)
#loc186 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":163:5)
#loc187 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":160:22)
#loc188 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":160:28)
#loc189 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":160:9)
#loc190 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":165:22)
#loc191 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":165:28)
#loc192 = loc("CWE369_Divide_by_Zero__int_fgets_modulo_12.c":165:9)
#loc193 = loc(fused[#loc1, #loc2])
#loc194 = loc(fused[#loc3, #loc4])
#loc195 = loc(fused[#loc5, #loc6])
#loc196 = loc(fused[#loc7, #loc8])
#loc197 = loc(fused[#loc9, #loc10])
#loc198 = loc(fused[#loc12, #loc13])
#loc199 = loc(fused[#loc15, #loc16])
#loc200 = loc(fused[#loc17, #loc18])
#loc201 = loc(fused[#loc19, #loc20])
#loc202 = loc(fused[#loc23, #loc21])
#loc203 = loc(fused[#loc24, #loc25])
#loc204 = loc(fused[#loc26, #loc27])
#loc205 = loc(fused[#loc28, #loc29, #loc30, #loc25])
#loc206 = loc(fused[#loc31, #loc32])
#loc207 = loc(fused[#loc33, #loc34])
#loc208 = loc(fused[#loc38, #loc39])
#loc209 = loc(fused[#loc40, #loc41, #loc42, #loc34])
#loc210 = loc(fused[#loc45, #loc46])
#loc211 = loc(fused[#loc49, #loc48])
#loc212 = loc(fused[#loc50, #loc51])
#loc213 = loc(fused[#loc52, #loc53])
#loc214 = loc(fused[#loc54, #loc55, #loc56, #loc51])
#loc215 = loc(fused[#loc57, #loc58])
#loc216 = loc(fused[#loc60, #loc61])
#loc217 = loc(fused[#loc62, #loc63])
#loc218 = loc(fused[#loc64, #loc65, #loc66, #loc61])
#loc219 = loc(fused[#loc67, #loc68])
#loc220 = loc(fused[#loc71, #loc72])
#loc221 = loc(fused[#loc73, #loc74])
#loc222 = loc(fused[#loc75, #loc76])
#loc223 = loc(fused[#loc77, #loc78])
#loc224 = loc(fused[#loc79, #loc80])
#loc225 = loc(fused[#loc81, #loc82])
#loc226 = loc(fused[#loc83, #loc84])
#loc227 = loc(fused[#loc87, #loc85])
#loc228 = loc(fused[#loc88, #loc89])
#loc229 = loc(fused[#loc90, #loc91])
#loc230 = loc(fused[#loc92, #loc93, #loc94, #loc89])
#loc231 = loc(fused[#loc95, #loc96])
#loc232 = loc(fused[#loc97, #loc98])
#loc233 = loc(fused[#loc102, #loc103])
#loc234 = loc(fused[#loc104, #loc105, #loc106, #loc98])
#loc235 = loc(fused[#loc109, #loc110])
#loc236 = loc(fused[#loc113, #loc114])
#loc237 = loc(fused[#loc115, #loc116])
#loc238 = loc(fused[#loc120, #loc121])
#loc239 = loc(fused[#loc122, #loc123, #loc124, #loc116])
#loc240 = loc(fused[#loc127, #loc128])
#loc241 = loc(fused[#loc131, #loc132])
#loc242 = loc(fused[#loc133, #loc134])
#loc243 = loc(fused[#loc135, #loc136, #loc137, #loc132])
#loc244 = loc(fused[#loc138, #loc139])
#loc245 = loc(fused[#loc140, #loc141])
#loc246 = loc(fused[#loc142, #loc143, #loc144, #loc139])
#loc247 = loc(fused[#loc145, #loc146])
#loc248 = loc(fused[#loc150, #loc151])
#loc249 = loc(fused[#loc152, #loc153])
#loc250 = loc(fused[#loc154, #loc155, #loc156, #loc151])
#loc251 = loc(fused[#loc157, #loc158])
#loc252 = loc(fused[#loc162, #loc163])
#loc253 = loc(fused[#loc164, #loc165])
#loc254 = loc(fused[#loc168, #loc166])
#loc255 = loc(fused[#loc169, #loc170])
#loc256 = loc(fused[#loc171, #loc172])
#loc257 = loc(fused[#loc173, #loc174, #loc175, #loc170])
#loc258 = loc(fused[#loc177, #loc176])
#loc259 = loc(fused[#loc179, #loc178])
#loc260 = loc(fused[#loc180, #loc181])
#loc261 = loc(fused[#loc182, #loc183])
#loc262 = loc(fused[#loc184, #loc185, #loc186, #loc181])
#loc263 = loc(fused[#loc187, #loc188])
#loc264 = loc(fused[#loc190, #loc191])
