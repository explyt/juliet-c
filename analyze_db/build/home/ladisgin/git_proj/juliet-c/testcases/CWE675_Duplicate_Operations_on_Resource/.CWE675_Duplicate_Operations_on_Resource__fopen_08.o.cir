!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__fopen_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"BadSource_fopen.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc4)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc151)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__fopen_08_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc153)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc154)
    cir.br ^bb1 loc(#loc155)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc156)
    %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc15)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc15)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc157)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc18)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc3)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc3)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc4)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc4)
    %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc18)
    cir.store %10, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc158)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc21)
    %12 = cir.call @fclose(%11) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc22)
    cir.br ^bb3 loc(#loc14)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc14)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc159)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc160)
    %14 = cir.call %13() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc25)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc25)
    cir.brcond %15 ^bb6, ^bb7 loc(#loc161)
  ^bb6:  // pred: ^bb5
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
    %17 = cir.call @fclose(%16) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc29)
    cir.br ^bb7 loc(#loc24)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc24)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc8)
  } loc(#loc152)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__fopen_08_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc163)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc32)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc164)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc165)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc166)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    cir.return loc(#loc31)
  } loc(#loc162)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc41)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc42)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc168)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc168)
    cir.return %2 : !s32i loc(#loc168)
  } loc(#loc167)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc169)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc46)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc171)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc51)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc172)
    cir.br ^bb1 loc(#loc173)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc174)
    %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc55)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc55)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc175)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc58)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc59)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc59)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc60)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc60)
    %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc58)
    cir.store %10, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc176)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc63)
    %12 = cir.call @fclose(%11) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc64)
    cir.br ^bb3 loc(#loc54)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc54)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc177)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc178)
    %14 = cir.call %13() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc67)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc67)
    cir.brcond %15 ^bb6, ^bb7 loc(#loc179)
  ^bb6:  // pred: ^bb5
    %16 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc46)
    %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    cir.br ^bb8 loc(#loc70)
  ^bb7:  // pred: ^bb5
    cir.br ^bb8 loc(#loc66)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc66)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc48)
  } loc(#loc170)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc74)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc75)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc181)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc181)
    cir.return %2 : !s32i loc(#loc181)
  } loc(#loc180)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc183)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc81)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc184)
    cir.br ^bb1 loc(#loc185)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc186)
    %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc85)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc85)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc187)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc88)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc89)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc89)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc90)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc90)
    %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc88)
    cir.store %10, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc188)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc93)
    %12 = cir.call @fclose(%11) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc94)
    cir.br ^bb3 loc(#loc84)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc84)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc189)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc190)
    %14 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc97)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc97)
    cir.brcond %15 ^bb6, ^bb7 loc(#loc191)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc96)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc96)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc78)
  } loc(#loc182)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"GoodSource_fopen.txt\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc100)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc193)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc105)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc194)
    cir.br ^bb1 loc(#loc195)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc196)
    %3 = cir.call @staticReturnsFalse() : () -> !s32i loc(#loc109)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc109)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc197)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc114)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc114)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    cir.br ^bb4 loc(#loc112)
  ^bb3:  // pred: ^bb1
    %7 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc116)
    %8 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc100)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc100)
    %10 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc117)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc117)
    %12 = cir.call @fopen(%9, %11) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc116)
    cir.store %12, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc198)
    cir.br ^bb4 loc(#loc108)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc108)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc199)
  ^bb6:  // pred: ^bb5
    %13 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc200)
    %14 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc122)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc122)
    cir.brcond %15 ^bb7, ^bb8 loc(#loc201)
  ^bb7:  // pred: ^bb6
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc125)
    %17 = cir.call @fclose(%16) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc126)
    cir.br ^bb8 loc(#loc121)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc121)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc102)
  } loc(#loc192)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc203)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc131)
    cir.store %1, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc204)
    cir.br ^bb1 loc(#loc205)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc206)
    %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc135)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc135)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc207)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc138)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc139)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc139)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc140)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc140)
    %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc138)
    cir.store %10, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc208)
    cir.br ^bb3 loc(#loc134)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc134)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc209)
  ^bb5:  // pred: ^bb4
    %11 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc210)
    %12 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc145)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc145)
    cir.brcond %13 ^bb6, ^bb7 loc(#loc211)
  ^bb6:  // pred: ^bb5
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc148)
    %15 = cir.call @fclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc149)
    cir.br ^bb7 loc(#loc144)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc144)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc128)
  } loc(#loc202)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__fopen_08.c":0:0)
#loc1 = loc("/usr/include/stdio.h":264:1)
#loc2 = loc("/usr/include/stdio.h":266:3)
#loc3 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":41:22)
#loc4 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":41:45)
#loc5 = loc("/usr/include/stdio.h":184:1)
#loc6 = loc("/usr/include/stdio.h":184:36)
#loc7 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":35:1)
#loc8 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":50:1)
#loc9 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":37:5)
#loc10 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":37:12)
#loc11 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":38:12)
#loc12 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":38:5)
#loc13 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":39:5)
#loc14 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":44:5)
#loc15 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":39:8)
#loc16 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":39:26)
#loc17 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":40:5)
#loc18 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":41:16)
#loc19 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":41:9)
#loc20 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":41:49)
#loc21 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":43:16)
#loc22 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":43:9)
#loc23 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":45:5)
#loc24 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":49:5)
#loc25 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":45:8)
#loc26 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":45:26)
#loc27 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":46:5)
#loc28 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":48:16)
#loc29 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":48:9)
#loc30 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":138:1)
#loc31 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":144:1)
#loc32 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":140:5)
#loc33 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":140:14)
#loc34 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":141:5)
#loc35 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":141:14)
#loc36 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":142:5)
#loc37 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":142:14)
#loc38 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":143:5)
#loc39 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":143:14)
#loc40 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":23:1)
#loc41 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":26:1)
#loc42 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":25:12)
#loc43 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":25:5)
#loc44 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc45 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc46 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":70:19)
#loc47 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":57:1)
#loc48 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":78:1)
#loc49 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":59:5)
#loc50 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":59:12)
#loc51 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":60:12)
#loc52 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":60:5)
#loc53 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":61:5)
#loc54 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":66:5)
#loc55 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":61:8)
#loc56 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":61:26)
#loc57 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":62:5)
#loc58 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":63:16)
#loc59 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":63:22)
#loc60 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":63:45)
#loc61 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":63:9)
#loc62 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":63:49)
#loc63 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":65:16)
#loc64 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":65:9)
#loc65 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":67:5)
#loc66 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":77:5)
#loc67 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":67:8)
#loc68 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":67:27)
#loc69 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":68:5)
#loc70 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":71:5)
#loc71 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":73:5)
#loc72 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":70:9)
#loc73 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":28:1)
#loc74 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":31:1)
#loc75 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":30:12)
#loc76 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":30:5)
#loc77 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":81:1)
#loc78 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":97:1)
#loc79 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":83:5)
#loc80 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":83:12)
#loc81 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":84:12)
#loc82 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":84:5)
#loc83 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":85:5)
#loc84 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":90:5)
#loc85 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":85:8)
#loc86 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":85:26)
#loc87 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":86:5)
#loc88 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":87:16)
#loc89 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":87:22)
#loc90 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":87:45)
#loc91 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":87:9)
#loc92 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":87:49)
#loc93 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":89:16)
#loc94 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":89:9)
#loc95 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":91:5)
#loc96 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":96:5)
#loc97 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":91:8)
#loc98 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":91:26)
#loc99 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":92:5)
#loc100 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":112:22)
#loc101 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":100:1)
#loc102 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":119:1)
#loc103 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":102:5)
#loc104 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":102:12)
#loc105 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":103:12)
#loc106 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":103:5)
#loc107 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":104:5)
#loc108 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":113:5)
#loc109 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":104:8)
#loc110 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":104:27)
#loc111 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":105:5)
#loc112 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":108:5)
#loc113 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":110:5)
#loc114 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":107:19)
#loc115 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":107:9)
#loc116 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":112:16)
#loc117 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":112:46)
#loc118 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":112:9)
#loc119 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":112:50)
#loc120 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":114:5)
#loc121 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":118:5)
#loc122 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":114:8)
#loc123 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":114:26)
#loc124 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":115:5)
#loc125 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":117:16)
#loc126 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":117:9)
#loc127 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":122:1)
#loc128 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":136:1)
#loc129 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":124:5)
#loc130 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":124:12)
#loc131 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":125:12)
#loc132 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":125:5)
#loc133 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":126:5)
#loc134 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":130:5)
#loc135 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":126:8)
#loc136 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":126:26)
#loc137 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":127:5)
#loc138 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":129:16)
#loc139 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":129:22)
#loc140 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":129:46)
#loc141 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":129:9)
#loc142 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":129:50)
#loc143 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":131:5)
#loc144 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":135:5)
#loc145 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":131:8)
#loc146 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":131:26)
#loc147 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":132:5)
#loc148 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":134:16)
#loc149 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_08.c":134:9)
#loc150 = loc(fused[#loc1, #loc2])
#loc151 = loc(fused[#loc5, #loc6])
#loc152 = loc(fused[#loc7, #loc8])
#loc153 = loc(fused[#loc9, #loc10])
#loc154 = loc(fused[#loc12, #loc11])
#loc155 = loc(fused[#loc13, #loc14])
#loc156 = loc(fused[#loc15, #loc16])
#loc157 = loc(fused[#loc17, #loc14])
#loc158 = loc(fused[#loc19, #loc20])
#loc159 = loc(fused[#loc23, #loc24])
#loc160 = loc(fused[#loc25, #loc26])
#loc161 = loc(fused[#loc27, #loc24])
#loc162 = loc(fused[#loc30, #loc31])
#loc163 = loc(fused[#loc32, #loc33])
#loc164 = loc(fused[#loc34, #loc35])
#loc165 = loc(fused[#loc36, #loc37])
#loc166 = loc(fused[#loc38, #loc39])
#loc167 = loc(fused[#loc40, #loc41])
#loc168 = loc(fused[#loc43, #loc42])
#loc169 = loc(fused[#loc44, #loc45])
#loc170 = loc(fused[#loc47, #loc48])
#loc171 = loc(fused[#loc49, #loc50])
#loc172 = loc(fused[#loc52, #loc51])
#loc173 = loc(fused[#loc53, #loc54])
#loc174 = loc(fused[#loc55, #loc56])
#loc175 = loc(fused[#loc57, #loc54])
#loc176 = loc(fused[#loc61, #loc62])
#loc177 = loc(fused[#loc65, #loc66])
#loc178 = loc(fused[#loc67, #loc68])
#loc179 = loc(fused[#loc69, #loc70, #loc71, #loc66])
#loc180 = loc(fused[#loc73, #loc74])
#loc181 = loc(fused[#loc76, #loc75])
#loc182 = loc(fused[#loc77, #loc78])
#loc183 = loc(fused[#loc79, #loc80])
#loc184 = loc(fused[#loc82, #loc81])
#loc185 = loc(fused[#loc83, #loc84])
#loc186 = loc(fused[#loc85, #loc86])
#loc187 = loc(fused[#loc87, #loc84])
#loc188 = loc(fused[#loc91, #loc92])
#loc189 = loc(fused[#loc95, #loc96])
#loc190 = loc(fused[#loc97, #loc98])
#loc191 = loc(fused[#loc99, #loc96])
#loc192 = loc(fused[#loc101, #loc102])
#loc193 = loc(fused[#loc103, #loc104])
#loc194 = loc(fused[#loc106, #loc105])
#loc195 = loc(fused[#loc107, #loc108])
#loc196 = loc(fused[#loc109, #loc110])
#loc197 = loc(fused[#loc111, #loc112, #loc113, #loc108])
#loc198 = loc(fused[#loc118, #loc119])
#loc199 = loc(fused[#loc120, #loc121])
#loc200 = loc(fused[#loc122, #loc123])
#loc201 = loc(fused[#loc124, #loc121])
#loc202 = loc(fused[#loc127, #loc128])
#loc203 = loc(fused[#loc129, #loc130])
#loc204 = loc(fused[#loc132, #loc131])
#loc205 = loc(fused[#loc133, #loc134])
#loc206 = loc(fused[#loc135, #loc136])
#loc207 = loc(fused[#loc137, #loc134])
#loc208 = loc(fused[#loc141, #loc142])
#loc209 = loc(fused[#loc143, #loc144])
#loc210 = loc(fused[#loc145, #loc146])
#loc211 = loc(fused[#loc147, #loc144])
