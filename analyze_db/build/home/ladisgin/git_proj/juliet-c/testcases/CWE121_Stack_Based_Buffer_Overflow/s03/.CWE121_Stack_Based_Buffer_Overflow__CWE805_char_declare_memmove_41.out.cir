!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":23:81)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":23:88)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":52:85)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":52:92)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":92:10)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":92:14)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":92:20)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":92:32)
#loc135 = loc(fused[#loc5, #loc6])
#loc151 = loc(fused[#loc54, #loc55])
#loc165 = loc(fused[#loc99, #loc100])
#loc166 = loc(fused[#loc101, #loc102])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc133)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc136)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc135)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc9)
    cir.br ^bb1 loc(#loc137)
  ^bb1:  // pred: ^bb0
    %2 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc12)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc12)
    %4 = cir.const #cir.int<67> : !s32i loc(#loc13)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc14)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc14)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc14)
    cir.libc.memset %8 bytes from %3 set to %4 : !cir.ptr<!void>, !s32i, !u64i loc(#loc138)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc18)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc18)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc19)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc19)
    %14 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc21)
    %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc21)
    cir.store %10, %15 : !s8i, !cir.ptr<!s8i> loc(#loc139)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc22)
    %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc23)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc24)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc24)
    %22 = cir.const #cir.int<1> : !u64i loc(#loc140)
    %23 = cir.binop(mul, %21, %22) : !u64i loc(#loc141)
    cir.libc.memmove %23 bytes from %19 to %17 : !cir.ptr<!void>, !u64i loc(#loc142)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc29)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    %27 = cir.const #cir.int<100> : !s32i loc(#loc31)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc31)
    %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc33)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc143)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc35)
    cir.br ^bb2 loc(#loc11)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc4)
  } loc(#loc134)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc145)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc146)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc147)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc44)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc148)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc46)
    %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc46)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc48)
    %8 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc49)
    cir.store %5, %8 : !s8i, !cir.ptr<!s8i> loc(#loc149)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41_badSink(%9) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    cir.return loc(#loc37)
  } loc(#loc144)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc54, #loc55])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc152)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc151)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc58)
    cir.br ^bb1 loc(#loc153)
  ^bb1:  // pred: ^bb0
    %2 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc61)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc61)
    %4 = cir.const #cir.int<67> : !s32i loc(#loc62)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc63)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc63)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc63)
    cir.libc.memset %8 bytes from %3 set to %4 : !cir.ptr<!void>, !s32i, !u64i loc(#loc154)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc67)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc67)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc68)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc68)
    %14 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc70)
    %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc70)
    cir.store %10, %15 : !s8i, !cir.ptr<!s8i> loc(#loc155)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc71)
    %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc72)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc72)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc73)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc73)
    %22 = cir.const #cir.int<1> : !u64i loc(#loc156)
    %23 = cir.binop(mul, %21, %22) : !u64i loc(#loc157)
    cir.libc.memmove %23 bytes from %19 to %17 : !cir.ptr<!void>, !u64i loc(#loc158)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc78)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc78)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
    %27 = cir.const #cir.int<100> : !s32i loc(#loc80)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc81)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc80)
    %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc82)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc159)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    cir.br ^bb2 loc(#loc60)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc53)
  } loc(#loc150)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc161)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc87)
    cir.return loc(#loc86)
  } loc(#loc160)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc162)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc163)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc93)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc94)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc96)
  cir.func @main(%arg0: !s32i loc(fused[#loc99, #loc100]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc101, #loc102])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc165)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc166)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc98)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc103)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc103)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc104)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc105)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc105)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc106)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc93)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc93)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41_good : !cir.ptr<!cir.func<!void ()>> loc(#loc167)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41_good() : () -> () loc(#loc108)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc94)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc94)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc95)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc95)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc168)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41_bad() : () -> () loc(#loc112)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc96)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc96)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc115)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    cir.return %17 : !s32i loc(#loc169)
  } loc(#loc164)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc171)
    %1 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc172)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc173)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc125)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc174)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc127)
    %5 = cir.cast(integral, %4 : !s32i), !s8i loc(#loc127)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc129)
    %8 = cir.ptr_stride(%6 : !cir.ptr<!s8i>, %7 : !s32i), !cir.ptr<!s8i> loc(#loc130)
    cir.store %5, %8 : !s8i, !cir.ptr<!s8i> loc(#loc175)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41_goodG2BSink(%9) : (!cir.ptr<!s8i>) -> () loc(#loc132)
    cir.return loc(#loc118)
  } loc(#loc170)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":23:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":34:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":26:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":26:24)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":24:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":25:5)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":33:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":27:16)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":27:24)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":27:29)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":27:33)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":27:9)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":27:34)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":28:25)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":28:16)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":28:20)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":28:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":30:17)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":30:23)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":30:31)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":30:35)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":30:46)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":30:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":30:47)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":31:23)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":31:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":31:14)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":31:18)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":31:19)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":32:19)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":32:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":36:1)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":46:1)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":38:5)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":38:12)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":39:5)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":39:26)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":40:5)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":40:28)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":43:12)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":43:5)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":44:15)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":44:5)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":44:10)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":44:11)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":45:80)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":45:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":52:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":63:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":55:9)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":55:24)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":53:1)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":54:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":62:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":56:16)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":56:24)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":56:29)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":56:33)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":56:9)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":56:34)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":57:25)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":57:16)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":57:20)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":57:9)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":59:17)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":59:23)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":59:31)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":59:35)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":59:46)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":59:9)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":59:47)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":60:23)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":60:9)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":60:14)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":60:18)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":60:19)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":61:19)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":61:9)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":77:1)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":80:1)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":79:5)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":79:13)
#loc89 = loc("/usr/include/stdlib.h":575:1)
#loc90 = loc("/usr/include/stdlib.h":575:41)
#loc91 = loc("/usr/include/time.h":76:1)
#loc92 = loc("/usr/include/time.h":76:38)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":97:15)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":99:15)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":102:15)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":104:15)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":92:1)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":107:1)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":93:1)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":95:27)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":95:22)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":95:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":97:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":98:5)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":98:77)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":99:5)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":102:5)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":103:5)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":103:76)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":104:5)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":106:12)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":106:5)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":66:1)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":75:1)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":68:5)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":68:12)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":69:5)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":69:26)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":70:5)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":70:28)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":72:12)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":72:5)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":73:15)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":73:5)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":73:10)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":73:11)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":74:84)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_declare_memmove_41.c":74:5)
#loc133 = loc(fused[#loc1, #loc2])
#loc134 = loc(fused[#loc3, #loc4])
#loc136 = loc(fused[#loc7, #loc8])
#loc137 = loc(fused[#loc10, #loc11])
#loc138 = loc(fused[#loc16, #loc17])
#loc139 = loc(fused[#loc21, #loc18])
#loc140 = loc(fused[#loc25, #loc26])
#loc141 = loc(fused[#loc24, #loc26])
#loc142 = loc(fused[#loc27, #loc28])
#loc143 = loc(fused[#loc30, #loc29])
#loc144 = loc(fused[#loc36, #loc37])
#loc145 = loc(fused[#loc38, #loc39])
#loc146 = loc(fused[#loc40, #loc41])
#loc147 = loc(fused[#loc42, #loc43])
#loc148 = loc(fused[#loc45, #loc44])
#loc149 = loc(fused[#loc47, #loc46])
#loc150 = loc(fused[#loc52, #loc53])
#loc152 = loc(fused[#loc56, #loc57])
#loc153 = loc(fused[#loc59, #loc60])
#loc154 = loc(fused[#loc65, #loc66])
#loc155 = loc(fused[#loc70, #loc67])
#loc156 = loc(fused[#loc74, #loc75])
#loc157 = loc(fused[#loc73, #loc75])
#loc158 = loc(fused[#loc76, #loc77])
#loc159 = loc(fused[#loc79, #loc78])
#loc160 = loc(fused[#loc85, #loc86])
#loc161 = loc(fused[#loc87, #loc88])
#loc162 = loc(fused[#loc89, #loc90])
#loc163 = loc(fused[#loc91, #loc92])
#loc164 = loc(fused[#loc97, #loc98])
#loc167 = loc(fused[#loc108, #loc109])
#loc168 = loc(fused[#loc112, #loc113])
#loc169 = loc(fused[#loc116, #loc115])
#loc170 = loc(fused[#loc117, #loc118])
#loc171 = loc(fused[#loc119, #loc120])
#loc172 = loc(fused[#loc121, #loc122])
#loc173 = loc(fused[#loc123, #loc124])
#loc174 = loc(fused[#loc126, #loc125])
#loc175 = loc(fused[#loc128, #loc127])
