!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc354)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc355)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc356)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc357)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc358)
  cir.func private @__isoc23_strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc359)
  cir.func private @close(!s32i) -> !s32i loc(#loc360)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc361)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc362)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc20)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc363)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc23)
  cir.func @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_323badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc365)
    %1 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc366)
    %2 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc367)
    cir.store %0, %1 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc366)
    cir.store %0, %2 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc367)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc32)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc32)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc368)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc370)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc37)
      %7 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc38)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc370)
      cir.scope {
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc372)
        %11 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc373)
        %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc374)
        %13 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc375)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc46)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc46)
        cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc374)
        cir.scope {
          cir.do {
            cir.scope {
              %16 = cir.const #cir.int<2> : !s32i loc(#loc53)
              %17 = cir.const #cir.int<1> : !u32i loc(#loc54)
              %18 = cir.cast(integral, %17 : !u32i), !s32i loc(#loc54)
              %19 = cir.const #cir.int<6> : !u32i loc(#loc55)
              %20 = cir.cast(integral, %19 : !u32i), !s32i loc(#loc55)
              %21 = cir.call @socket(%16, %18, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc56)
              cir.store %21, %12 : !s32i, !cir.ptr<!s32i> loc(#loc378)
              cir.scope {
                %62 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc61)
                %63 = cir.const #cir.int<1> : !s32i loc(#loc62)
                %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc62)
                %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc380)
                cir.if %65 {
                  cir.break loc(#loc64)
                } loc(#loc381)
              } loc(#loc379)
              %22 = cir.cast(bitcast, %11 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc382)
              %23 = cir.const #cir.int<0> : !s32i loc(#loc67)
              %24 = cir.const #cir.int<16> : !u64i loc(#loc383)
              cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc384)
              %25 = cir.const #cir.int<2> : !s32i loc(#loc72)
              %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc72)
              %27 = cir.get_member %11[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
              cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc385)
              %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
              %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
              %30 = cir.call @inet_addr(%29) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc75)
              %31 = cir.get_member %11[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
              %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
              cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc386)
              %33 = cir.const #cir.int<27015> : !s32i loc(#loc80)
              %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc80)
              %35 = cir.call @htons(%34) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc81)
              %36 = cir.get_member %11[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
              cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc387)
              cir.scope {
                %62 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc87)
                %63 = cir.cast(bitcast, %11 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc389)
                %64 = cir.const #cir.int<16> : !u64i loc(#loc390)
                %65 = cir.cast(integral, %64 : !u64i), !u32i loc(#loc390)
                %66 = cir.call @connect(%62, %63, %65) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc92)
                %67 = cir.const #cir.int<1> : !s32i loc(#loc93)
                %68 = cir.unary(minus, %67) nsw : !s32i, !s32i loc(#loc93)
                %69 = cir.cmp(eq, %66, %68) : !s32i, !cir.bool loc(#loc391)
                cir.if %69 {
                  cir.break loc(#loc95)
                } loc(#loc392)
              } loc(#loc388)
              %37 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc96)
              %38 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc97)
              %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc97)
              %40 = cir.const #cir.int<3> : !s32i loc(#loc98)
              %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc98)
              %42 = cir.const #cir.int<8> : !u64i loc(#loc98)
              %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc98)
              %44 = cir.const #cir.int<2> : !s32i loc(#loc98)
              %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc98)
              %46 = cir.binop(add, %43, %45) : !u64i loc(#loc98)
              %47 = cir.const #cir.int<1> : !s32i loc(#loc99)
              %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc99)
              %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc393)
              %50 = cir.const #cir.int<0> : !s32i loc(#loc100)
              %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc101)
              %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc101)
              cir.store %52, %10 : !s32i, !cir.ptr<!s32i> loc(#loc394)
              cir.scope {
                %62 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc106)
                %63 = cir.const #cir.int<1> : !s32i loc(#loc107)
                %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc107)
                %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc396)
                %66 = cir.ternary(%65, true {
                  %67 = cir.const #true loc(#loc108)
                  cir.yield %67 : !cir.bool loc(#loc108)
                }, false {
                  %67 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc109)
                  %68 = cir.const #cir.int<0> : !s32i loc(#loc110)
                  %69 = cir.cmp(eq, %67, %68) : !s32i, !cir.bool loc(#loc397)
                  %70 = cir.ternary(%69, true {
                    %71 = cir.const #true loc(#loc108)
                    cir.yield %71 : !cir.bool loc(#loc108)
                  }, false {
                    %71 = cir.const #false loc(#loc108)
                    cir.yield %71 : !cir.bool loc(#loc108)
                  }) : (!cir.bool) -> !cir.bool loc(#loc108)
                  cir.yield %70 : !cir.bool loc(#loc108)
                }) : (!cir.bool) -> !cir.bool loc(#loc108)
                cir.if %66 {
                  cir.break loc(#loc112)
                } loc(#loc398)
              } loc(#loc395)
              %53 = cir.const #cir.int<0> : !s8i loc(#loc113)
              %54 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc114)
              %55 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc115)
              %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !s32i), !cir.ptr<!s8i> loc(#loc115)
              cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc399)
              %57 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc116)
              %58 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc117)
              %59 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc118)
              %60 = cir.const #cir.int<0> : !s32i loc(#loc119)
              %61 = cir.call @__isoc23_strtoul(%58, %59, %60) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc116)
              cir.store %61, %5 : !u64i, !cir.ptr<!u64i> loc(#loc400)
            } loc(#loc377)
            cir.yield loc(#loc50)
          } while {
            %16 = cir.const #cir.int<0> : !s32i loc(#loc122)
            %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc122)
            cir.condition(%17) loc(#loc122)
          } loc(#loc376)
        } loc(#loc376)
        cir.scope {
          %16 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc125)
          %17 = cir.const #cir.int<1> : !s32i loc(#loc126)
          %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc126)
          %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc402)
          cir.if %19 {
            %20 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc128)
            %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc129)
          } loc(#loc403)
        } loc(#loc401)
      } loc(#loc371)
      %8 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc130)
      %9 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc131)
      cir.store %8, %9 : !u64i, !cir.ptr<!u64i> loc(#loc404)
    } loc(#loc369)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc406)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc136)
      %7 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc137)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc406)
      cir.scope {
        %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc408)
        cir.scope {
          %9 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc144)
          %10 = cir.const #cir.int<5> : !u64i loc(#loc410)
          %11 = cir.cmp(gt, %9, %10) : !u64i, !cir.bool loc(#loc411)
          cir.if %11 {
            %12 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc150)
            %13 = cir.call @_Znam(%12) : (!u64i) -> !cir.ptr<!void> loc(#loc151)
            %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc413)
            cir.store %14, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc414)
            %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc155)
            %16 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
            %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc20)
            %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc20)
            %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc155)
            %20 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
            cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc158)
            %21 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
            cir.delete.array %21 : <!s8i> loc(#loc159)
          } else {
            %12 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc23)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc23)
            cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc160)
          } loc(#loc412)
        } loc(#loc409)
      } loc(#loc407)
    } loc(#loc405)
    cir.return loc(#loc25)
  } loc(#loc364)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc416)
    %1 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc417)
    %2 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc418)
    cir.store %0, %1 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc417)
    cir.store %0, %2 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc418)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc169)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc169)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc419)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc421)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc174)
      %7 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc175)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc421)
      %8 = cir.const #cir.int<20> : !s32i loc(#loc176)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc176)
      cir.store %9, %5 : !u64i, !cir.ptr<!u64i> loc(#loc422)
      %10 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc178)
      %11 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc179)
      cir.store %10, %11 : !u64i, !cir.ptr<!u64i> loc(#loc423)
    } loc(#loc420)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc425)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc184)
      %7 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc185)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc425)
      cir.scope {
        %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc427)
        cir.scope {
          %9 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc192)
          %10 = cir.const #cir.int<5> : !u64i loc(#loc429)
          %11 = cir.cmp(gt, %9, %10) : !u64i, !cir.bool loc(#loc430)
          cir.if %11 {
            %12 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc198)
            %13 = cir.call @_Znam(%12) : (!u64i) -> !cir.ptr<!void> loc(#loc199)
            %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc432)
            cir.store %14, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc433)
            %15 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc203)
            %16 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc204)
            %17 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc205)
            %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc205)
            %19 = cir.call @strcpy(%16, %18) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc203)
            %20 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc206)
            cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc207)
            %21 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc208)
            cir.delete.array %21 : <!s8i> loc(#loc208)
          } else {
            %12 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc209)
            %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc209)
            cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc210)
          } loc(#loc431)
        } loc(#loc428)
      } loc(#loc426)
    } loc(#loc424)
    cir.return loc(#loc162)
  } loc(#loc415)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc211)
  cir.func internal private @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc435)
    %1 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc436)
    %2 = cir.alloca !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc437)
    cir.store %0, %1 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc436)
    cir.store %0, %2 : !cir.ptr<!u64i>, !cir.ptr<!cir.ptr<!u64i>> loc(#loc437)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc220)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc220)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc438)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc440)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc225)
      %7 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc226)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc440)
      cir.scope {
        %10 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc442)
        %11 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc443)
        %12 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc444)
        %13 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc445)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc234)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc234)
        cir.store %15, %12 : !s32i, !cir.ptr<!s32i> loc(#loc444)
        cir.scope {
          cir.do {
            cir.scope {
              %16 = cir.const #cir.int<2> : !s32i loc(#loc241)
              %17 = cir.const #cir.int<1> : !u32i loc(#loc242)
              %18 = cir.cast(integral, %17 : !u32i), !s32i loc(#loc242)
              %19 = cir.const #cir.int<6> : !u32i loc(#loc243)
              %20 = cir.cast(integral, %19 : !u32i), !s32i loc(#loc243)
              %21 = cir.call @socket(%16, %18, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc244)
              cir.store %21, %12 : !s32i, !cir.ptr<!s32i> loc(#loc448)
              cir.scope {
                %62 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc249)
                %63 = cir.const #cir.int<1> : !s32i loc(#loc250)
                %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc250)
                %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc450)
                cir.if %65 {
                  cir.break loc(#loc252)
                } loc(#loc451)
              } loc(#loc449)
              %22 = cir.cast(bitcast, %11 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc452)
              %23 = cir.const #cir.int<0> : !s32i loc(#loc255)
              %24 = cir.const #cir.int<16> : !u64i loc(#loc453)
              cir.libc.memset %24 bytes from %22 set to %23 : !cir.ptr<!void>, !s32i, !u64i loc(#loc454)
              %25 = cir.const #cir.int<2> : !s32i loc(#loc260)
              %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc260)
              %27 = cir.get_member %11[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc73)
              cir.store %26, %27 : !u16i, !cir.ptr<!u16i> loc(#loc455)
              %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc262)
              %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc262)
              %30 = cir.call @inet_addr(%29) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc263)
              %31 = cir.get_member %11[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc76)
              %32 = cir.get_member %31[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc77)
              cir.store %30, %32 : !u32i, !cir.ptr<!u32i> loc(#loc456)
              %33 = cir.const #cir.int<27015> : !s32i loc(#loc266)
              %34 = cir.cast(integral, %33 : !s32i), !u16i loc(#loc266)
              %35 = cir.call @htons(%34) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc267)
              %36 = cir.get_member %11[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc82)
              cir.store %35, %36 : !u16i, !cir.ptr<!u16i> loc(#loc457)
              cir.scope {
                %62 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc272)
                %63 = cir.cast(bitcast, %11 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc459)
                %64 = cir.const #cir.int<16> : !u64i loc(#loc460)
                %65 = cir.cast(integral, %64 : !u64i), !u32i loc(#loc460)
                %66 = cir.call @connect(%62, %63, %65) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc277)
                %67 = cir.const #cir.int<1> : !s32i loc(#loc278)
                %68 = cir.unary(minus, %67) nsw : !s32i, !s32i loc(#loc278)
                %69 = cir.cmp(eq, %66, %68) : !s32i, !cir.bool loc(#loc461)
                cir.if %69 {
                  cir.break loc(#loc280)
                } loc(#loc462)
              } loc(#loc458)
              %37 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc281)
              %38 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc282)
              %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc282)
              %40 = cir.const #cir.int<3> : !s32i loc(#loc283)
              %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc283)
              %42 = cir.const #cir.int<8> : !u64i loc(#loc283)
              %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc283)
              %44 = cir.const #cir.int<2> : !s32i loc(#loc283)
              %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc283)
              %46 = cir.binop(add, %43, %45) : !u64i loc(#loc283)
              %47 = cir.const #cir.int<1> : !s32i loc(#loc284)
              %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc284)
              %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc463)
              %50 = cir.const #cir.int<0> : !s32i loc(#loc285)
              %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc286)
              %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc286)
              cir.store %52, %10 : !s32i, !cir.ptr<!s32i> loc(#loc464)
              cir.scope {
                %62 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc291)
                %63 = cir.const #cir.int<1> : !s32i loc(#loc292)
                %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc292)
                %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc466)
                %66 = cir.ternary(%65, true {
                  %67 = cir.const #true loc(#loc293)
                  cir.yield %67 : !cir.bool loc(#loc293)
                }, false {
                  %67 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc294)
                  %68 = cir.const #cir.int<0> : !s32i loc(#loc295)
                  %69 = cir.cmp(eq, %67, %68) : !s32i, !cir.bool loc(#loc467)
                  %70 = cir.ternary(%69, true {
                    %71 = cir.const #true loc(#loc293)
                    cir.yield %71 : !cir.bool loc(#loc293)
                  }, false {
                    %71 = cir.const #false loc(#loc293)
                    cir.yield %71 : !cir.bool loc(#loc293)
                  }) : (!cir.bool) -> !cir.bool loc(#loc293)
                  cir.yield %70 : !cir.bool loc(#loc293)
                }) : (!cir.bool) -> !cir.bool loc(#loc293)
                cir.if %66 {
                  cir.break loc(#loc297)
                } loc(#loc468)
              } loc(#loc465)
              %53 = cir.const #cir.int<0> : !s8i loc(#loc298)
              %54 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc299)
              %55 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc300)
              %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !s32i), !cir.ptr<!s8i> loc(#loc300)
              cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc469)
              %57 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc301)
              %58 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc302)
              %59 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc303)
              %60 = cir.const #cir.int<0> : !s32i loc(#loc304)
              %61 = cir.call @__isoc23_strtoul(%58, %59, %60) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc301)
              cir.store %61, %5 : !u64i, !cir.ptr<!u64i> loc(#loc470)
            } loc(#loc447)
            cir.yield loc(#loc238)
          } while {
            %16 = cir.const #cir.int<0> : !s32i loc(#loc307)
            %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc307)
            cir.condition(%17) loc(#loc307)
          } loc(#loc446)
        } loc(#loc446)
        cir.scope {
          %16 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc310)
          %17 = cir.const #cir.int<1> : !s32i loc(#loc311)
          %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc311)
          %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc472)
          cir.if %19 {
            %20 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc313)
            %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc314)
          } loc(#loc473)
        } loc(#loc471)
      } loc(#loc441)
      %8 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc315)
      %9 = cir.load deref %1 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc316)
      cir.store %8, %9 : !u64i, !cir.ptr<!u64i> loc(#loc474)
    } loc(#loc439)
    cir.scope {
      %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data", init] {alignment = 8 : i64} loc(#loc476)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!u64i>>, !cir.ptr<!u64i> loc(#loc321)
      %7 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc322)
      cir.store %7, %5 : !u64i, !cir.ptr<!u64i> loc(#loc476)
      cir.scope {
        %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc478)
        cir.scope {
          %9 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc329)
          %10 = cir.const #cir.int<5> : !u64i loc(#loc480)
          %11 = cir.cmp(gt, %9, %10) : !u64i, !cir.bool loc(#loc481)
          %12 = cir.ternary(%11, true {
            %13 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc333)
            %14 = cir.const #cir.int<100> : !s32i loc(#loc334)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc334)
            %16 = cir.cmp(lt, %13, %15) : !u64i, !cir.bool loc(#loc482)
            %17 = cir.ternary(%16, true {
              %18 = cir.const #true loc(#loc332)
              cir.yield %18 : !cir.bool loc(#loc332)
            }, false {
              %18 = cir.const #false loc(#loc332)
              cir.yield %18 : !cir.bool loc(#loc332)
            }) : (!cir.bool) -> !cir.bool loc(#loc332)
            cir.yield %17 : !cir.bool loc(#loc332)
          }, false {
            %13 = cir.const #false loc(#loc332)
            cir.yield %13 : !cir.bool loc(#loc332)
          }) : (!cir.bool) -> !cir.bool loc(#loc332)
          cir.if %12 {
            %13 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc338)
            %14 = cir.call @_Znam(%13) : (!u64i) -> !cir.ptr<!void> loc(#loc339)
            %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc484)
            cir.store %15, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc485)
            %16 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc343)
            %17 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc344)
            %18 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc345)
            %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc345)
            %20 = cir.call @strcpy(%17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc343)
            %21 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc346)
            cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc347)
            %22 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc348)
            cir.delete.array %22 : <!s8i> loc(#loc348)
          } else {
            %13 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc211)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc211)
            cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc349)
          } loc(#loc483)
        } loc(#loc479)
      } loc(#loc477)
    } loc(#loc475)
    cir.return loc(#loc213)
  } loc(#loc434)
  cir.func @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_324goodEv() extra(#fn_attr1) {
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32L7goodG2BEv() : () -> () loc(#loc352)
    cir.call @_ZN57CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32L7goodB2GEv() : () -> () loc(#loc353)
    cir.return loc(#loc351)
  } loc(#loc486)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s01/CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":88:53)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":219:1)
#loc13 = loc("/usr/include/stdlib.h":223:6)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc17 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc18 = loc("/usr/include/string.h":141:1)
#loc19 = loc("/usr/include/string.h":142:14)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":131:34)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc22 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":137:27)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":53:1)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":141:1)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":55:5)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":55:12)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":56:5)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":56:25)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":57:5)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":57:25)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":59:12)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":59:5)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":60:5)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":119:5)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":61:9)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":61:24)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":61:23)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":62:9)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":117:9)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":67:13)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":67:17)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":68:13)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":68:32)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":69:13)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":69:36)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":70:13)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":70:45)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":71:13)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":106:21)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":72:13)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":105:13)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":81:40)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":81:49)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":81:62)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":81:33)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":81:17)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":81:73)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":82:17)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":85:17)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":82:21)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":82:38)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":83:17)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":84:21)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":86:24)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":86:25)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":86:34)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":86:37)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":86:51)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":86:17)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":86:52)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":87:38)
#loc73 = loc("/usr/include/netinet/in.h":249:5)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":87:17)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":88:43)
#loc76 = loc("/usr/include/netinet/in.h":251:20)
#loc77 = loc("/usr/include/netinet/in.h":33:15)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":88:17)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":88:63)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":89:42)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":89:36)
#loc82 = loc("/usr/include/netinet/in.h":250:15)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":89:17)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":89:50)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":90:17)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":93:17)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":90:29)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":90:62)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":90:63)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":90:72)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":90:86)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":90:21)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":90:92)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":91:17)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":92:21)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":96:35)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":96:50)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":96:63)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":96:81)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":96:84)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":96:30)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":96:17)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":96:85)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":97:17)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":100:17)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":97:21)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":97:35)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":97:48)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":97:51)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":97:65)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":98:17)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":99:21)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":102:43)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":102:29)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":102:17)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":104:24)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":104:32)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":104:45)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":104:51)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":104:17)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":104:52)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":106:20)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":107:13)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":110:13)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":107:17)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":107:34)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":108:13)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":109:30)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":109:17)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":118:21)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":118:10)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":118:9)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":120:5)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":140:5)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":121:9)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":121:24)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":121:23)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":122:9)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":139:9)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":123:13)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":123:20)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":127:13)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":138:13)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":127:17)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":127:24)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":127:43)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":128:13)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":134:13)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":136:13)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":129:37)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":53:6)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":129:28)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":129:41)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":129:17)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":131:17)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":131:24)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":132:27)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":132:17)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":133:27)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":137:17)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":148:1)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":182:1)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":150:5)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":150:12)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":151:5)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":151:25)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":152:5)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":152:25)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":154:12)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":154:5)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":155:5)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":160:5)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":156:9)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":156:24)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":156:23)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":158:16)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":158:9)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":159:21)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":159:10)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":159:9)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":161:5)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":181:5)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":162:9)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":162:24)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":162:23)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":163:9)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":180:9)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":164:13)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":164:20)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":168:13)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":179:13)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":168:17)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":168:24)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":168:43)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":169:13)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":175:13)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":177:13)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":170:37)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":148:13)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":170:28)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":170:41)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":170:17)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":172:17)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":172:24)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":172:34)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":173:27)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":173:17)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":174:27)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":178:27)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":178:17)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":269:27)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":185:1)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":273:1)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":187:5)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":187:12)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":188:5)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":188:25)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":189:5)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":189:25)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":191:12)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":191:5)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":192:5)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":251:5)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":193:9)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":193:24)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":193:23)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":194:9)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":249:9)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":199:13)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":199:17)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":200:13)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":200:32)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":201:13)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":201:36)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":202:13)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":202:45)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":203:13)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":238:21)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":204:13)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":237:13)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":213:40)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":213:49)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":213:62)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":213:33)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":213:17)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":213:73)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":214:17)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":217:17)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":214:21)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":214:38)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":215:17)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":216:21)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":218:24)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":218:25)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":218:34)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":218:37)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":218:51)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":218:17)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":218:52)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":219:38)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":219:17)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":220:53)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":220:43)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":220:17)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":220:63)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":221:42)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":221:36)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":221:17)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":221:50)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":222:17)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":225:17)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":222:29)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":222:62)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":222:63)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":222:72)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":222:86)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":222:21)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":222:92)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":223:17)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":224:21)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":228:35)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":228:50)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":228:63)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":228:81)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":228:84)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":228:30)
#loc287 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":228:17)
#loc288 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":228:85)
#loc289 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":229:17)
#loc290 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":232:17)
#loc291 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":229:21)
#loc292 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":229:35)
#loc293 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":229:48)
#loc294 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":229:51)
#loc295 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":229:65)
#loc296 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":230:17)
#loc297 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":231:21)
#loc298 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":234:43)
#loc299 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":234:29)
#loc300 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":234:17)
#loc301 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":236:24)
#loc302 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":236:32)
#loc303 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":236:45)
#loc304 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":236:51)
#loc305 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":236:17)
#loc306 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":236:52)
#loc307 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":238:20)
#loc308 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":239:13)
#loc309 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":242:13)
#loc310 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":239:17)
#loc311 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":239:34)
#loc312 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":240:13)
#loc313 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":241:30)
#loc314 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":241:17)
#loc315 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":250:21)
#loc316 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":250:10)
#loc317 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":250:9)
#loc318 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":252:5)
#loc319 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":272:5)
#loc320 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":253:9)
#loc321 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":253:24)
#loc322 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":253:23)
#loc323 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":254:9)
#loc324 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":271:9)
#loc325 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":255:13)
#loc326 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":255:20)
#loc327 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":259:13)
#loc328 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":270:13)
#loc329 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":259:17)
#loc330 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":259:24)
#loc331 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":259:43)
#loc332 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":259:45)
#loc333 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":259:48)
#loc334 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":259:55)
#loc335 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":260:13)
#loc336 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":266:13)
#loc337 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":268:13)
#loc338 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":261:37)
#loc339 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":185:13)
#loc340 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":261:28)
#loc341 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":261:41)
#loc342 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":261:17)
#loc343 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":263:17)
#loc344 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":263:24)
#loc345 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":263:34)
#loc346 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":264:27)
#loc347 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":264:17)
#loc348 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":265:27)
#loc349 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":269:17)
#loc350 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":275:1)
#loc351 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":279:1)
#loc352 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":277:5)
#loc353 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_connect_socket_32.cpp":278:5)
#loc354 = loc(fused[#loc1, #loc2])
#loc355 = loc(fused[#loc3, #loc4])
#loc356 = loc(fused[#loc6, #loc7])
#loc357 = loc(fused[#loc8, #loc9])
#loc358 = loc(fused[#loc10, #loc11])
#loc359 = loc(fused[#loc12, #loc13])
#loc360 = loc(fused[#loc14, #loc15])
#loc361 = loc(fused[#loc16, #loc17])
#loc362 = loc(fused[#loc18, #loc19])
#loc363 = loc(fused[#loc21, #loc22])
#loc364 = loc(fused[#loc24, #loc25])
#loc365 = loc(fused[#loc26, #loc27])
#loc366 = loc(fused[#loc28, #loc29])
#loc367 = loc(fused[#loc30, #loc31])
#loc368 = loc(fused[#loc33, #loc32])
#loc369 = loc(fused[#loc34, #loc35])
#loc370 = loc(fused[#loc36, #loc37])
#loc371 = loc(fused[#loc39, #loc40])
#loc372 = loc(fused[#loc41, #loc42])
#loc373 = loc(fused[#loc43, #loc44])
#loc374 = loc(fused[#loc45, #loc46])
#loc375 = loc(fused[#loc47, #loc48])
#loc376 = loc(fused[#loc49, #loc50])
#loc377 = loc(fused[#loc51, #loc52])
#loc378 = loc(fused[#loc57, #loc58])
#loc379 = loc(fused[#loc59, #loc60])
#loc380 = loc(fused[#loc61, #loc62])
#loc381 = loc(fused[#loc63, #loc60])
#loc382 = loc(fused[#loc65, #loc66])
#loc383 = loc(fused[#loc68, #loc69])
#loc384 = loc(fused[#loc70, #loc71])
#loc385 = loc(fused[#loc74, #loc72])
#loc386 = loc(fused[#loc78, #loc79])
#loc387 = loc(fused[#loc83, #loc84])
#loc388 = loc(fused[#loc85, #loc86])
#loc389 = loc(fused[#loc88, #loc89])
#loc390 = loc(fused[#loc90, #loc91])
#loc391 = loc(fused[#loc92, #loc93])
#loc392 = loc(fused[#loc94, #loc86])
#loc393 = loc(fused[#loc98, #loc99])
#loc394 = loc(fused[#loc102, #loc103])
#loc395 = loc(fused[#loc104, #loc105])
#loc396 = loc(fused[#loc106, #loc107])
#loc397 = loc(fused[#loc109, #loc110])
#loc398 = loc(fused[#loc111, #loc105])
#loc399 = loc(fused[#loc115, #loc113])
#loc400 = loc(fused[#loc120, #loc121])
#loc401 = loc(fused[#loc123, #loc124])
#loc402 = loc(fused[#loc125, #loc126])
#loc403 = loc(fused[#loc127, #loc124])
#loc404 = loc(fused[#loc132, #loc130])
#loc405 = loc(fused[#loc133, #loc134])
#loc406 = loc(fused[#loc135, #loc136])
#loc407 = loc(fused[#loc138, #loc139])
#loc408 = loc(fused[#loc140, #loc141])
#loc409 = loc(fused[#loc142, #loc143])
#loc410 = loc(fused[#loc145, #loc146])
#loc411 = loc(fused[#loc144, #loc146])
#loc412 = loc(fused[#loc147, #loc148, #loc149, #loc143])
#loc413 = loc(fused[#loc152, #loc153])
#loc414 = loc(fused[#loc154, #loc153])
#loc415 = loc(fused[#loc161, #loc162])
#loc416 = loc(fused[#loc163, #loc164])
#loc417 = loc(fused[#loc165, #loc166])
#loc418 = loc(fused[#loc167, #loc168])
#loc419 = loc(fused[#loc170, #loc169])
#loc420 = loc(fused[#loc171, #loc172])
#loc421 = loc(fused[#loc173, #loc174])
#loc422 = loc(fused[#loc177, #loc176])
#loc423 = loc(fused[#loc180, #loc178])
#loc424 = loc(fused[#loc181, #loc182])
#loc425 = loc(fused[#loc183, #loc184])
#loc426 = loc(fused[#loc186, #loc187])
#loc427 = loc(fused[#loc188, #loc189])
#loc428 = loc(fused[#loc190, #loc191])
#loc429 = loc(fused[#loc193, #loc194])
#loc430 = loc(fused[#loc192, #loc194])
#loc431 = loc(fused[#loc195, #loc196, #loc197, #loc191])
#loc432 = loc(fused[#loc200, #loc201])
#loc433 = loc(fused[#loc202, #loc201])
#loc434 = loc(fused[#loc212, #loc213])
#loc435 = loc(fused[#loc214, #loc215])
#loc436 = loc(fused[#loc216, #loc217])
#loc437 = loc(fused[#loc218, #loc219])
#loc438 = loc(fused[#loc221, #loc220])
#loc439 = loc(fused[#loc222, #loc223])
#loc440 = loc(fused[#loc224, #loc225])
#loc441 = loc(fused[#loc227, #loc228])
#loc442 = loc(fused[#loc229, #loc230])
#loc443 = loc(fused[#loc231, #loc232])
#loc444 = loc(fused[#loc233, #loc234])
#loc445 = loc(fused[#loc235, #loc236])
#loc446 = loc(fused[#loc237, #loc238])
#loc447 = loc(fused[#loc239, #loc240])
#loc448 = loc(fused[#loc245, #loc246])
#loc449 = loc(fused[#loc247, #loc248])
#loc450 = loc(fused[#loc249, #loc250])
#loc451 = loc(fused[#loc251, #loc248])
#loc452 = loc(fused[#loc253, #loc254])
#loc453 = loc(fused[#loc256, #loc257])
#loc454 = loc(fused[#loc258, #loc259])
#loc455 = loc(fused[#loc261, #loc260])
#loc456 = loc(fused[#loc264, #loc265])
#loc457 = loc(fused[#loc268, #loc269])
#loc458 = loc(fused[#loc270, #loc271])
#loc459 = loc(fused[#loc273, #loc274])
#loc460 = loc(fused[#loc275, #loc276])
#loc461 = loc(fused[#loc277, #loc278])
#loc462 = loc(fused[#loc279, #loc271])
#loc463 = loc(fused[#loc283, #loc284])
#loc464 = loc(fused[#loc287, #loc288])
#loc465 = loc(fused[#loc289, #loc290])
#loc466 = loc(fused[#loc291, #loc292])
#loc467 = loc(fused[#loc294, #loc295])
#loc468 = loc(fused[#loc296, #loc290])
#loc469 = loc(fused[#loc300, #loc298])
#loc470 = loc(fused[#loc305, #loc306])
#loc471 = loc(fused[#loc308, #loc309])
#loc472 = loc(fused[#loc310, #loc311])
#loc473 = loc(fused[#loc312, #loc309])
#loc474 = loc(fused[#loc317, #loc315])
#loc475 = loc(fused[#loc318, #loc319])
#loc476 = loc(fused[#loc320, #loc321])
#loc477 = loc(fused[#loc323, #loc324])
#loc478 = loc(fused[#loc325, #loc326])
#loc479 = loc(fused[#loc327, #loc328])
#loc480 = loc(fused[#loc330, #loc331])
#loc481 = loc(fused[#loc329, #loc331])
#loc482 = loc(fused[#loc333, #loc334])
#loc483 = loc(fused[#loc335, #loc336, #loc337, #loc328])
#loc484 = loc(fused[#loc340, #loc341])
#loc485 = loc(fused[#loc342, #loc341])
#loc486 = loc(fused[#loc350, #loc351])
