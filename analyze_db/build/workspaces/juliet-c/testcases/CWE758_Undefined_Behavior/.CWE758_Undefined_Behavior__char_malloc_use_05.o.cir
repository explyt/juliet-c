!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__char_malloc_use_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc127)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc128)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc129)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc130)
  cir.func private @printHexCharLine(!s8i) loc(#loc131)
  cir.func no_proto @CWE758_Undefined_Behavior__char_malloc_use_05_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc127)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc15)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc15)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["pointer", init] {alignment = 8 : i64} loc(#loc136)
          %4 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc137)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc23)
          %6 = cir.const #cir.int<1> : !u64i loc(#loc138)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc23)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc139)
          cir.store %8, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc136)
          cir.scope {
            %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
            %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
            %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc29)
            %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s8i>, !cir.bool loc(#loc141)
            cir.if %18 {
              %19 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc31)
              %20 = cir.const #cir.int<1> : !s32i loc(#loc32)
              %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc33)
              cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
            } loc(#loc142)
          } loc(#loc140)
          %9 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
          %10 = cir.load %9 : !cir.ptr<!s8i>, !s8i loc(#loc34)
          cir.store %10, %4 : !s8i, !cir.ptr<!s8i> loc(#loc137)
          %11 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc35)
          %12 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
          cir.call @free(%13) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc35)
          %14 = cir.load %4 : !cir.ptr<!s8i>, !s8i loc(#loc37)
          cir.call @printHexCharLine(%14) : (!s8i) -> () loc(#loc38)
        } loc(#loc135)
      } loc(#loc134)
    } loc(#loc133)
    cir.return loc(#loc12)
  } loc(#loc132)
  cir.func no_proto @CWE758_Undefined_Behavior__char_malloc_use_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc144)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc41)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc145)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc43)
    cir.return loc(#loc40)
  } loc(#loc143)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc146)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc147)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc49)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc146)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc54)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc54)
      cir.if %2 {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc49)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc49)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc58)
      } else {
        cir.scope {
          %3 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc152)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["pointer", init] {alignment = 8 : i64} loc(#loc153)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc65)
          %6 = cir.const #cir.int<1> : !u64i loc(#loc154)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc65)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc155)
          cir.store %8, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc153)
          cir.scope {
            %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc71)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc71)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc157)
            cir.if %19 {
              %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc73)
              %21 = cir.const #cir.int<1> : !s32i loc(#loc74)
              %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc75)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc73)
            } loc(#loc158)
          } loc(#loc156)
          %9 = cir.const #cir.int<5> : !s32i loc(#loc76)
          %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc76)
          cir.store %10, %3 : !s8i, !cir.ptr<!s8i> loc(#loc159)
          %11 = cir.load %3 : !cir.ptr<!s8i>, !s8i loc(#loc78)
          %12 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
          cir.store %11, %12 : !s8i, !cir.ptr<!s8i> loc(#loc160)
          cir.scope {
            %16 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc162)
            %17 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
            %18 = cir.load %17 : !cir.ptr<!s8i>, !s8i loc(#loc85)
            cir.store %18, %16 : !s8i, !cir.ptr<!s8i> loc(#loc162)
            %19 = cir.load %16 : !cir.ptr<!s8i>, !s8i loc(#loc86)
            cir.call @printHexCharLine(%19) : (!s8i) -> () loc(#loc87)
          } loc(#loc161)
          %13 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc88)
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc89)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc89)
          cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc88)
        } loc(#loc151)
      } loc(#loc150)
    } loc(#loc149)
    cir.return loc(#loc51)
  } loc(#loc148)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc127)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc94)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc94)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc167)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["pointer", init] {alignment = 8 : i64} loc(#loc168)
          %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc102)
          %6 = cir.const #cir.int<1> : !u64i loc(#loc169)
          %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc102)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc170)
          cir.store %8, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc168)
          cir.scope {
            %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc108)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc108)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc172)
            cir.if %19 {
              %20 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc110)
              %21 = cir.const #cir.int<1> : !s32i loc(#loc111)
              %22 = cir.unary(minus, %21) nsw : !s32i, !s32i loc(#loc112)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc110)
            } loc(#loc173)
          } loc(#loc171)
          %9 = cir.const #cir.int<5> : !s32i loc(#loc113)
          %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc113)
          cir.store %10, %3 : !s8i, !cir.ptr<!s8i> loc(#loc174)
          %11 = cir.load %3 : !cir.ptr<!s8i>, !s8i loc(#loc115)
          %12 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
          cir.store %11, %12 : !s8i, !cir.ptr<!s8i> loc(#loc175)
          cir.scope {
            %16 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc177)
            %17 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
            %18 = cir.load %17 : !cir.ptr<!s8i>, !s8i loc(#loc122)
            cir.store %18, %16 : !s8i, !cir.ptr<!s8i> loc(#loc177)
            %19 = cir.load %16 : !cir.ptr<!s8i>, !s8i loc(#loc123)
            cir.call @printHexCharLine(%19) : (!s8i) -> () loc(#loc124)
          } loc(#loc176)
          %13 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc125)
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc126)
          cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc125)
        } loc(#loc166)
      } loc(#loc165)
    } loc(#loc164)
    cir.return loc(#loc91)
  } loc(#loc163)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__char_malloc_use_05.c":0:0)
#loc1 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":21:1)
#loc2 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":21:25)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("../../testcasesupport/std_testcase_io.h":30:1)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":30:35)
#loc11 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":26:1)
#loc12 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":38:1)
#loc13 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":28:5)
#loc14 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":37:5)
#loc15 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":28:8)
#loc16 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":29:5)
#loc17 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":30:9)
#loc18 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":36:9)
#loc19 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":31:13)
#loc20 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":31:57)
#loc21 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":33:13)
#loc22 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":33:26)
#loc23 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":31:38)
#loc24 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":31:45)
#loc25 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":31:56)
#loc26 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":32:13)
#loc27 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":32:44)
#loc28 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":32:17)
#loc29 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":32:28)
#loc30 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":32:34)
#loc31 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":32:35)
#loc32 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":32:41)
#loc33 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":32:40)
#loc34 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":33:25)
#loc35 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":34:13)
#loc36 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":34:18)
#loc37 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":35:30)
#loc38 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":35:13)
#loc39 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":89:1)
#loc40 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":93:1)
#loc41 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":91:5)
#loc42 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":91:11)
#loc43 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":92:5)
#loc44 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":92:11)
#loc45 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":22:1)
#loc46 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":22:26)
#loc47 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc48 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc49 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":50:19)
#loc50 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":45:1)
#loc51 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":67:1)
#loc52 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":47:5)
#loc53 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":66:5)
#loc54 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":47:8)
#loc55 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":48:5)
#loc56 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":51:5)
#loc57 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":53:5)
#loc58 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":50:9)
#loc59 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":54:9)
#loc60 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":65:9)
#loc61 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":55:13)
#loc62 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":55:18)
#loc63 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":56:13)
#loc64 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":56:57)
#loc65 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":56:38)
#loc66 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":56:45)
#loc67 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":56:56)
#loc68 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":57:13)
#loc69 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":57:44)
#loc70 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":57:17)
#loc71 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":57:28)
#loc72 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":57:34)
#loc73 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":57:35)
#loc74 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":57:41)
#loc75 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":57:40)
#loc76 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":58:20)
#loc77 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":58:13)
#loc78 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":59:24)
#loc79 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":59:14)
#loc80 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":59:13)
#loc81 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":60:13)
#loc82 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":63:13)
#loc83 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":61:17)
#loc84 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":61:30)
#loc85 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":61:29)
#loc86 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":62:34)
#loc87 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":62:17)
#loc88 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":64:13)
#loc89 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":64:18)
#loc90 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":70:1)
#loc91 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":87:1)
#loc92 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":72:5)
#loc93 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":86:5)
#loc94 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":72:8)
#loc95 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":73:5)
#loc96 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":74:9)
#loc97 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":85:9)
#loc98 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":75:13)
#loc99 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":75:18)
#loc100 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":76:13)
#loc101 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":76:57)
#loc102 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":76:38)
#loc103 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":76:45)
#loc104 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":76:56)
#loc105 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":77:13)
#loc106 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":77:44)
#loc107 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":77:17)
#loc108 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":77:28)
#loc109 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":77:34)
#loc110 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":77:35)
#loc111 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":77:41)
#loc112 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":77:40)
#loc113 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":78:20)
#loc114 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":78:13)
#loc115 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":79:24)
#loc116 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":79:14)
#loc117 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":79:13)
#loc118 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":80:13)
#loc119 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":83:13)
#loc120 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":81:17)
#loc121 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":81:30)
#loc122 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":81:29)
#loc123 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":82:34)
#loc124 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":82:17)
#loc125 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":84:13)
#loc126 = loc("CWE758_Undefined_Behavior__char_malloc_use_05.c":84:18)
#loc127 = loc(fused[#loc1, #loc2])
#loc128 = loc(fused[#loc3, #loc4])
#loc129 = loc(fused[#loc5, #loc6])
#loc130 = loc(fused[#loc7, #loc8])
#loc131 = loc(fused[#loc9, #loc10])
#loc132 = loc(fused[#loc11, #loc12])
#loc133 = loc(fused[#loc13, #loc14])
#loc134 = loc(fused[#loc16, #loc14])
#loc135 = loc(fused[#loc17, #loc18])
#loc136 = loc(fused[#loc19, #loc20])
#loc137 = loc(fused[#loc21, #loc22])
#loc138 = loc(fused[#loc24, #loc25])
#loc139 = loc(fused[#loc23, #loc20])
#loc140 = loc(fused[#loc26, #loc27])
#loc141 = loc(fused[#loc28, #loc29])
#loc142 = loc(fused[#loc30, #loc27])
#loc143 = loc(fused[#loc39, #loc40])
#loc144 = loc(fused[#loc41, #loc42])
#loc145 = loc(fused[#loc43, #loc44])
#loc146 = loc(fused[#loc45, #loc46])
#loc147 = loc(fused[#loc47, #loc48])
#loc148 = loc(fused[#loc50, #loc51])
#loc149 = loc(fused[#loc52, #loc53])
#loc150 = loc(fused[#loc55, #loc56, #loc57, #loc53])
#loc151 = loc(fused[#loc59, #loc60])
#loc152 = loc(fused[#loc61, #loc62])
#loc153 = loc(fused[#loc63, #loc64])
#loc154 = loc(fused[#loc66, #loc67])
#loc155 = loc(fused[#loc65, #loc64])
#loc156 = loc(fused[#loc68, #loc69])
#loc157 = loc(fused[#loc70, #loc71])
#loc158 = loc(fused[#loc72, #loc69])
#loc159 = loc(fused[#loc77, #loc76])
#loc160 = loc(fused[#loc80, #loc78])
#loc161 = loc(fused[#loc81, #loc82])
#loc162 = loc(fused[#loc83, #loc84])
#loc163 = loc(fused[#loc90, #loc91])
#loc164 = loc(fused[#loc92, #loc93])
#loc165 = loc(fused[#loc95, #loc93])
#loc166 = loc(fused[#loc96, #loc97])
#loc167 = loc(fused[#loc98, #loc99])
#loc168 = loc(fused[#loc100, #loc101])
#loc169 = loc(fused[#loc103, #loc104])
#loc170 = loc(fused[#loc102, #loc101])
#loc171 = loc(fused[#loc105, #loc106])
#loc172 = loc(fused[#loc107, #loc108])
#loc173 = loc(fused[#loc109, #loc106])
#loc174 = loc(fused[#loc114, #loc113])
#loc175 = loc(fused[#loc117, #loc115])
#loc176 = loc(fused[#loc118, #loc119])
#loc177 = loc(fused[#loc120, #loc121])
