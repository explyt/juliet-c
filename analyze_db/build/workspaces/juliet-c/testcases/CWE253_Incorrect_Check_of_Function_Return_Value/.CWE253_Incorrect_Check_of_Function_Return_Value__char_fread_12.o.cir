!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc114)
  cir.func private @fread(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc115)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc116)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc117)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fread failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc9)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc120)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc120)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc14)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc14)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc123)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc124)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc123)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc123)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc24)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc124)
          cir.scope {
            %8 = cir.get_global @fread : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc27)
            %9 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc126)
            %11 = cir.const #cir.int<1> : !u64i loc(#loc127)
            %12 = cir.const #cir.int<100> : !s32i loc(#loc32)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc33)
            %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc32)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc32)
            %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc116)
            %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc34)
            %18 = cir.call @fread(%10, %11, %15, %17) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc27)
            %19 = cir.const #cir.int<0> : !s32i loc(#loc35)
            %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc35)
            %21 = cir.cmp(eq, %18, %20) : !u64i, !cir.bool loc(#loc128)
            cir.if %21 {
              %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc9)
              %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc37)
            } loc(#loc129)
          } loc(#loc125)
        } loc(#loc122)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc131)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc132)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc131)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc131)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc43)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
          cir.scope {
            %8 = cir.get_global @fread : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc46)
            %9 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc134)
            %11 = cir.const #cir.int<1> : !u64i loc(#loc135)
            %12 = cir.const #cir.int<100> : !s32i loc(#loc51)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc52)
            %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc51)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc51)
            %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc116)
            %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc53)
            %18 = cir.call @fread(%10, %11, %15, %17) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc46)
            %19 = cir.const #cir.int<100> : !s32i loc(#loc54)
            %20 = cir.const #cir.int<1> : !s32i loc(#loc55)
            %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc54)
            %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc54)
            %23 = cir.cmp(ne, %18, %22) : !u64i, !cir.bool loc(#loc136)
            cir.if %23 {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc57)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc57)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc58)
            } loc(#loc137)
          } loc(#loc133)
        } loc(#loc130)
      } loc(#loc121)
    } loc(#loc119)
    cir.return loc(#loc11)
  } loc(#loc118)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc139)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc61)
    cir.return loc(#loc60)
  } loc(#loc138)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc142)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc142)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc67)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc67)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc145)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc146)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc145)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc145)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc77)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
          cir.scope {
            %8 = cir.get_global @fread : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc80)
            %9 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc148)
            %11 = cir.const #cir.int<1> : !u64i loc(#loc149)
            %12 = cir.const #cir.int<100> : !s32i loc(#loc85)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc86)
            %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc85)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc85)
            %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc116)
            %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc87)
            %18 = cir.call @fread(%10, %11, %15, %17) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc80)
            %19 = cir.const #cir.int<100> : !s32i loc(#loc88)
            %20 = cir.const #cir.int<1> : !s32i loc(#loc89)
            %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc88)
            %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc88)
            %23 = cir.cmp(ne, %18, %22) : !u64i, !cir.bool loc(#loc150)
            cir.if %23 {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc91)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc91)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc92)
            } loc(#loc151)
          } loc(#loc147)
        } loc(#loc144)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc153)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc154)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc153)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc153)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc98)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc154)
          cir.scope {
            %8 = cir.get_global @fread : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc101)
            %9 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc156)
            %11 = cir.const #cir.int<1> : !u64i loc(#loc157)
            %12 = cir.const #cir.int<100> : !s32i loc(#loc106)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc107)
            %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc106)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc106)
            %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc116)
            %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc108)
            %18 = cir.call @fread(%10, %11, %15, %17) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc101)
            %19 = cir.const #cir.int<100> : !s32i loc(#loc109)
            %20 = cir.const #cir.int<1> : !s32i loc(#loc110)
            %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc109)
            %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc109)
            %23 = cir.cmp(ne, %18, %22) : !u64i, !cir.bool loc(#loc158)
            cir.if %23 {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc112)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc112)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc113)
            } loc(#loc159)
          } loc(#loc155)
        } loc(#loc152)
      } loc(#loc143)
    } loc(#loc141)
    cir.return loc(#loc64)
  } loc(#loc140)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":738:1)
#loc4 = loc("/usr/include/stdio.h":740:3)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":37:27)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":24:1)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":55:1)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":26:5)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":54:5)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":26:8)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":26:33)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":27:5)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":40:5)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":42:5)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":28:9)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":39:9)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":31:13)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":31:36)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":32:13)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":32:27)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":35:13)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":38:13)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":35:17)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":35:31)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":35:23)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":35:37)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":35:48)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":35:60)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":35:64)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":35:68)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":35:78)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":36:13)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":37:17)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":43:9)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":53:9)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":46:13)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":46:36)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":47:13)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":47:27)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":49:13)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":52:13)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":49:17)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":49:31)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":49:23)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":49:37)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":49:48)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":49:60)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":49:64)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":49:68)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":49:78)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":49:82)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":50:13)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":51:27)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":51:17)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":94:1)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":97:1)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":96:5)
#loc62 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":96:11)
#loc63 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":62:1)
#loc64 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":92:1)
#loc65 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":64:5)
#loc66 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":91:5)
#loc67 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":64:8)
#loc68 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":64:33)
#loc69 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":65:5)
#loc70 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":77:5)
#loc71 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":79:5)
#loc72 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":66:9)
#loc73 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":76:9)
#loc74 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":69:13)
#loc75 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":69:36)
#loc76 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":70:13)
#loc77 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":70:27)
#loc78 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":72:13)
#loc79 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":75:13)
#loc80 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":72:17)
#loc81 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":72:31)
#loc82 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":72:23)
#loc83 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":72:37)
#loc84 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":72:48)
#loc85 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":72:60)
#loc86 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":72:64)
#loc87 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":72:68)
#loc88 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":72:78)
#loc89 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":72:82)
#loc90 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":73:13)
#loc91 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":74:27)
#loc92 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":74:17)
#loc93 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":80:9)
#loc94 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":90:9)
#loc95 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":83:13)
#loc96 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":83:36)
#loc97 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":84:13)
#loc98 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":84:27)
#loc99 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":86:13)
#loc100 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":89:13)
#loc101 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":86:17)
#loc102 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":86:31)
#loc103 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":86:23)
#loc104 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":86:37)
#loc105 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":86:48)
#loc106 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":86:60)
#loc107 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":86:64)
#loc108 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":86:68)
#loc109 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":86:78)
#loc110 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":86:82)
#loc111 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":87:13)
#loc112 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":88:27)
#loc113 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_fread_12.c":88:17)
#loc114 = loc(fused[#loc1, #loc2])
#loc115 = loc(fused[#loc3, #loc4])
#loc116 = loc(fused[#loc5, #loc6])
#loc117 = loc(fused[#loc7, #loc8])
#loc118 = loc(fused[#loc10, #loc11])
#loc119 = loc(fused[#loc12, #loc13])
#loc120 = loc(fused[#loc14, #loc15])
#loc121 = loc(fused[#loc16, #loc17, #loc18, #loc13])
#loc122 = loc(fused[#loc19, #loc20])
#loc123 = loc(fused[#loc21, #loc22])
#loc124 = loc(fused[#loc23, #loc24])
#loc125 = loc(fused[#loc25, #loc26])
#loc126 = loc(fused[#loc29, #loc28])
#loc127 = loc(fused[#loc30, #loc31])
#loc128 = loc(fused[#loc27, #loc35])
#loc129 = loc(fused[#loc36, #loc26])
#loc130 = loc(fused[#loc38, #loc39])
#loc131 = loc(fused[#loc40, #loc41])
#loc132 = loc(fused[#loc42, #loc43])
#loc133 = loc(fused[#loc44, #loc45])
#loc134 = loc(fused[#loc48, #loc47])
#loc135 = loc(fused[#loc49, #loc50])
#loc136 = loc(fused[#loc46, #loc55])
#loc137 = loc(fused[#loc56, #loc45])
#loc138 = loc(fused[#loc59, #loc60])
#loc139 = loc(fused[#loc61, #loc62])
#loc140 = loc(fused[#loc63, #loc64])
#loc141 = loc(fused[#loc65, #loc66])
#loc142 = loc(fused[#loc67, #loc68])
#loc143 = loc(fused[#loc69, #loc70, #loc71, #loc66])
#loc144 = loc(fused[#loc72, #loc73])
#loc145 = loc(fused[#loc74, #loc75])
#loc146 = loc(fused[#loc76, #loc77])
#loc147 = loc(fused[#loc78, #loc79])
#loc148 = loc(fused[#loc82, #loc81])
#loc149 = loc(fused[#loc83, #loc84])
#loc150 = loc(fused[#loc80, #loc89])
#loc151 = loc(fused[#loc90, #loc79])
#loc152 = loc(fused[#loc93, #loc94])
#loc153 = loc(fused[#loc95, #loc96])
#loc154 = loc(fused[#loc97, #loc98])
#loc155 = loc(fused[#loc99, #loc100])
#loc156 = loc(fused[#loc103, #loc102])
#loc157 = loc(fused[#loc104, #loc105])
#loc158 = loc(fused[#loc101, #loc110])
#loc159 = loc(fused[#loc111, #loc100])
