!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc58 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":89:10)
#loc59 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":89:14)
#loc60 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":89:20)
#loc61 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":89:32)
#loc144 = loc(fused[#loc58, #loc59])
#loc145 = loc(fused[#loc60, #loc61])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE242_Use_of_Inherently_Dangerous_Function/CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @gets(...) -> !s32i loc(#loc)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc121)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Error Condition: alter control flow to indicate action taken\00" : !cir.array<!s8i x 61>> : !cir.array<!s8i x 61> {alignment = 1 : i64} loc(#loc3)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc122)
  cir.func no_proto @CWE242_Use_of_Inherently_Dangerous_Function__basic_17_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc124)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc12)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc126)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc14)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc15)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc127)
        cir.condition(%4) loc(#loc16)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc130)
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc131)
            %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc24)
            %5 = cir.get_global @gets : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc132)
            %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>)>> loc(#loc132)
            %7 = cir.call %6(%4) : (!cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>)>>, !cir.ptr<!s8i>) -> !s32i loc(#loc25)
            %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc25)
            %9 = cir.cast(int_to_ptr, %8 : !u64i), !cir.ptr<!s8i> loc(#loc25)
            cir.store %9, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc133)
            cir.scope {
              %18 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
              %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc31)
              %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc31)
              %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s8i>, !cir.bool loc(#loc135)
              cir.if %21 {
                %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc3)
                %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc3)
                cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc33)
                %24 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc34)
                %25 = cir.const #cir.int<1> : !s32i loc(#loc35)
                cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc34)
              } loc(#loc136)
            } loc(#loc134)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc36)
            %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc36)
            %12 = cir.const #cir.int<10> : !s32i loc(#loc37)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc38)
            %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc37)
            %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc39)
            %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc39)
            cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc137)
            %17 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc40)
            cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc41)
          } loc(#loc129)
        } loc(#loc128)
        cir.yield loc(#loc11)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc42)
        %3 = cir.unary(inc, %2) : !s32i, !s32i loc(#loc43)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc138)
        cir.yield loc(#loc125)
      } loc(#loc125)
    } loc(#loc125)
    cir.return loc(#loc7)
  } loc(#loc123)
  cir.func no_proto @CWE242_Use_of_Inherently_Dangerous_Function__basic_17_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc140)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc46)
    cir.return loc(#loc45)
  } loc(#loc139)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc141)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc142)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc53)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc55)
  cir.func @main(%arg0: !s32i loc(fused[#loc58, #loc59]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc60, #loc61])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc144)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc145)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc57)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc62)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc62)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc63)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc64)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc64)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc65)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc52)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc52)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %8 = cir.get_global @CWE242_Use_of_Inherently_Dangerous_Function__basic_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc146)
    cir.call @CWE242_Use_of_Inherently_Dangerous_Function__basic_17_good() : () -> () loc(#loc67)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc53)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc53)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc54)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    %13 = cir.get_global @CWE242_Use_of_Inherently_Dangerous_Function__basic_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc147)
    cir.call @CWE242_Use_of_Inherently_Dangerous_Function__basic_17_bad() : () -> () loc(#loc71)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc55)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc74)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc148)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc148)
    cir.return %17 : !s32i loc(#loc148)
  } loc(#loc143)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc149)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc150)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc152)
    cir.scope {
      %1 = cir.const #cir.int<0> : !s32i loc(#loc86)
      cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc154)
      cir.for : cond {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc88)
        %3 = cir.const #cir.int<1> : !s32i loc(#loc89)
        %4 = cir.cmp(lt, %2, %3) : !s32i, !cir.bool loc(#loc155)
        cir.condition(%4) loc(#loc90)
      } body {
        cir.scope {
          cir.scope {
            %2 = cir.alloca !cir.array<!s8i x 10>, !cir.ptr<!cir.array<!s8i x 10>>, ["dest"] {alignment = 1 : i64} loc(#loc158)
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["result"] {alignment = 8 : i64} loc(#loc159)
            %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc98)
            %5 = cir.const #cir.int<10> : !s32i loc(#loc99)
            %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc150)
            %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc100)
            %8 = cir.call @fgets(%4, %5, %7) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc101)
            cir.store %8, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc160)
            cir.scope {
              %17 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
              %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc107)
              %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc107)
              %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc162)
              cir.if %20 {
                %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 61>> loc(#loc109)
                %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 61>>), !cir.ptr<!s8i> loc(#loc109)
                cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc110)
                %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc111)
                %24 = cir.const #cir.int<1> : !s32i loc(#loc112)
                cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc111)
              } loc(#loc163)
            } loc(#loc161)
            %9 = cir.const #cir.int<0> : !s32i loc(#loc113)
            %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc113)
            %11 = cir.const #cir.int<10> : !s32i loc(#loc114)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc115)
            %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc114)
            %14 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc116)
            %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc116)
            cir.store %10, %15 : !s8i, !cir.ptr<!s8i> loc(#loc164)
            %16 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc117)
            cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc118)
          } loc(#loc157)
        } loc(#loc156)
        cir.yield loc(#loc85)
      } step {
        %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc119)
        %3 = cir.unary(inc, %2) : !s32i, !s32i loc(#loc120)
        cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc165)
        cir.yield loc(#loc153)
      } loc(#loc153)
    } loc(#loc153)
    cir.return loc(#loc81)
  } loc(#loc151)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE242_Use_of_Inherently_Dangerous_Function/CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":38:27)
#loc4 = loc("/usr/include/stdlib.h":756:1)
#loc5 = loc("/usr/include/stdlib.h":756:70)
#loc6 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":22:1)
#loc7 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":45:1)
#loc8 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":24:5)
#loc9 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":24:9)
#loc10 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":25:5)
#loc11 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":44:5)
#loc12 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":25:13)
#loc13 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":25:9)
#loc14 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":25:16)
#loc15 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":25:20)
#loc16 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":25:18)
#loc17 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":26:5)
#loc18 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":27:9)
#loc19 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":43:9)
#loc20 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":28:13)
#loc21 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":28:32)
#loc22 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":29:13)
#loc23 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":29:19)
#loc24 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":33:27)
#loc25 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":33:22)
#loc26 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":33:31)
#loc27 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":33:13)
#loc28 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":35:13)
#loc29 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":40:13)
#loc30 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":35:17)
#loc31 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":35:27)
#loc32 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":36:13)
#loc33 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":38:17)
#loc34 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":39:17)
#loc35 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":39:22)
#loc36 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":41:33)
#loc37 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":41:18)
#loc38 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":41:28)
#loc39 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":41:13)
#loc40 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":42:23)
#loc41 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":42:13)
#loc42 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":25:24)
#loc43 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":25:23)
#loc44 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":75:1)
#loc45 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":78:1)
#loc46 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":77:5)
#loc47 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":77:11)
#loc48 = loc("/usr/include/stdlib.h":575:1)
#loc49 = loc("/usr/include/stdlib.h":575:41)
#loc50 = loc("/usr/include/time.h":76:1)
#loc51 = loc("/usr/include/time.h":76:38)
#loc52 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":94:15)
#loc53 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":96:15)
#loc54 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":99:15)
#loc55 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":101:15)
#loc56 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":89:1)
#loc57 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":104:1)
#loc62 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":90:1)
#loc63 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":92:27)
#loc64 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":92:22)
#loc65 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":92:5)
#loc66 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":94:5)
#loc67 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":95:5)
#loc68 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":95:64)
#loc69 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":96:5)
#loc70 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":99:5)
#loc71 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":100:5)
#loc72 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":100:63)
#loc73 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":101:5)
#loc74 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":103:12)
#loc75 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":103:5)
#loc76 = loc("/usr/include/stdio.h":654:1)
#loc77 = loc("/usr/include/stdio.h":655:59)
#loc78 = loc("/usr/include/stdio.h":149:1)
#loc79 = loc("/usr/include/stdio.h":149:14)
#loc80 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":52:1)
#loc81 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":73:1)
#loc82 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":54:5)
#loc83 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":54:9)
#loc84 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":55:5)
#loc85 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":72:5)
#loc86 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":55:13)
#loc87 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":55:9)
#loc88 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":55:16)
#loc89 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":55:20)
#loc90 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":55:18)
#loc91 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":56:5)
#loc92 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":57:9)
#loc93 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":71:9)
#loc94 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":58:13)
#loc95 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":58:32)
#loc96 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":59:13)
#loc97 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":59:19)
#loc98 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":61:28)
#loc99 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":61:34)
#loc100 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":61:45)
#loc101 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":61:22)
#loc102 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":61:13)
#loc103 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":61:50)
#loc104 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":63:13)
#loc105 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":68:13)
#loc106 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":63:17)
#loc107 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":63:27)
#loc108 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":64:13)
#loc109 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":66:27)
#loc110 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":66:17)
#loc111 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":67:17)
#loc112 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":67:22)
#loc113 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":69:33)
#loc114 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":69:18)
#loc115 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":69:28)
#loc116 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":69:13)
#loc117 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":70:23)
#loc118 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":70:13)
#loc119 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":55:24)
#loc120 = loc("CWE242_Use_of_Inherently_Dangerous_Function__basic_17.c":55:23)
#loc121 = loc(fused[#loc1, #loc2])
#loc122 = loc(fused[#loc4, #loc5])
#loc123 = loc(fused[#loc6, #loc7])
#loc124 = loc(fused[#loc8, #loc9])
#loc125 = loc(fused[#loc10, #loc11])
#loc126 = loc(fused[#loc13, #loc12])
#loc127 = loc(fused[#loc14, #loc15])
#loc128 = loc(fused[#loc17, #loc11])
#loc129 = loc(fused[#loc18, #loc19])
#loc130 = loc(fused[#loc20, #loc21])
#loc131 = loc(fused[#loc22, #loc23])
#loc132 = loc(fused[#loc25, #loc26])
#loc133 = loc(fused[#loc27, #loc26])
#loc134 = loc(fused[#loc28, #loc29])
#loc135 = loc(fused[#loc30, #loc31])
#loc136 = loc(fused[#loc32, #loc29])
#loc137 = loc(fused[#loc39, #loc36])
#loc138 = loc(fused[#loc43, #loc42])
#loc139 = loc(fused[#loc44, #loc45])
#loc140 = loc(fused[#loc46, #loc47])
#loc141 = loc(fused[#loc48, #loc49])
#loc142 = loc(fused[#loc50, #loc51])
#loc143 = loc(fused[#loc56, #loc57])
#loc146 = loc(fused[#loc67, #loc68])
#loc147 = loc(fused[#loc71, #loc72])
#loc148 = loc(fused[#loc75, #loc74])
#loc149 = loc(fused[#loc76, #loc77])
#loc150 = loc(fused[#loc78, #loc79])
#loc151 = loc(fused[#loc80, #loc81])
#loc152 = loc(fused[#loc82, #loc83])
#loc153 = loc(fused[#loc84, #loc85])
#loc154 = loc(fused[#loc87, #loc86])
#loc155 = loc(fused[#loc88, #loc89])
#loc156 = loc(fused[#loc91, #loc85])
#loc157 = loc(fused[#loc92, #loc93])
#loc158 = loc(fused[#loc94, #loc95])
#loc159 = loc(fused[#loc96, #loc97])
#loc160 = loc(fused[#loc102, #loc103])
#loc161 = loc(fused[#loc104, #loc105])
#loc162 = loc(fused[#loc106, #loc107])
#loc163 = loc(fused[#loc108, #loc105])
#loc164 = loc(fused[#loc116, #loc113])
#loc165 = loc(fused[#loc120, #loc119])
