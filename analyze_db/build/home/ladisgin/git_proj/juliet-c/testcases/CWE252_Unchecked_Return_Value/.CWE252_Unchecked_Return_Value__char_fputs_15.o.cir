!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fputs_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fputs(!cir.ptr<!s8i>, !cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"string\00" : !cir.array<!s8i x 7>> : !cir.array<!s8i x 7> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" external @stdout : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc65)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc8)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fputs_15_bad() extra(#fn_attr) {
    cir.br ^bb1 loc(#loc68)
  ^bb1:  // pred: ^bb0
    %0 = cir.const #cir.int<6> : !s32i loc(#loc13)
    cir.br ^bb2 loc(#loc11)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %0 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc11)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc14)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc3)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc3)
    %3 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc65)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc15)
    %5 = cir.call @fputs(%2, %4) : (!cir.ptr<!s8i>, !cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc16)
    cir.br ^bb6 loc(#loc17)
  ^bb5:  // pred: ^bb2
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc8)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc8)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc18)
    cir.br ^bb6 loc(#loc19)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc12)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc10)
  } loc(#loc67)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fputs_15_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc70)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc22)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc71)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc24)
    cir.return loc(#loc21)
  } loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"fputs failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc26)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.br ^bb1 loc(#loc73)
  ^bb1:  // pred: ^bb0
    %0 = cir.const #cir.int<5> : !s32i loc(#loc31)
    cir.br ^bb2 loc(#loc29)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %0 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc29)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc32)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %1 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc33)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc33)
    cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc34)
    cir.br ^bb10 loc(#loc35)
  ^bb5:  // pred: ^bb2
    cir.br ^bb6 loc(#loc74)
  ^bb6:  // pred: ^bb5
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc38)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc38)
    %5 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc65)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc39)
    %7 = cir.call @fputs(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc40)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc41)
    %10 = cir.cmp(eq, %7, %9) : !s32i, !cir.bool loc(#loc75)
    cir.brcond %10 ^bb7, ^bb8 loc(#loc76)
  ^bb7:  // pred: ^bb6
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc26)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc26)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    cir.br ^bb8 loc(#loc37)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc37)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc44)
  ^bb10:  // 2 preds: ^bb4, ^bb9
    cir.br ^bb11 loc(#loc30)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc28)
  } loc(#loc72)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.br ^bb1 loc(#loc78)
  ^bb1:  // pred: ^bb0
    %0 = cir.const #cir.int<6> : !s32i loc(#loc49)
    cir.br ^bb2 loc(#loc47)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %0 : !s32i, ^bb9 [
      6: ^bb4
    ] loc(#loc47)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc50)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc79)
  ^bb5:  // pred: ^bb4
    %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 7>> loc(#loc53)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 7>>), !cir.ptr<!s8i> loc(#loc53)
    %3 = cir.get_global @stdout : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc65)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc54)
    %5 = cir.call @fputs(%2, %4) : (!cir.ptr<!s8i>, !cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc55)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %7 = cir.unary(minus, %6) : !s32i, !s32i loc(#loc56)
    %8 = cir.cmp(eq, %5, %7) : !s32i, !cir.bool loc(#loc80)
    cir.brcond %8 ^bb6, ^bb7 loc(#loc81)
  ^bb6:  // pred: ^bb5
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc58)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    cir.br ^bb7 loc(#loc52)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc52)
  ^bb8:  // pred: ^bb7
    cir.br ^bb10 loc(#loc60)
  ^bb9:  // pred: ^bb2
    %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc61)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    cir.br ^bb10 loc(#loc63)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc48)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc46)
  } loc(#loc77)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fputs_15.c":0:0)
#loc1 = loc("/usr/include/stdio.h":707:1)
#loc2 = loc("/usr/include/stdio.h":708:3)
#loc3 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":30:15)
#loc4 = loc("/usr/include/stdio.h":150:1)
#loc5 = loc("/usr/include/stdio.h":150:14)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":34:19)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":24:1)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":37:1)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":26:5)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":36:5)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":26:12)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":28:5)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":30:25)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":30:9)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":31:9)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":34:9)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":35:9)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":81:1)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":85:1)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":83:5)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":83:11)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":84:5)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":84:11)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":56:23)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":44:1)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":60:1)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":46:5)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":59:5)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":46:12)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":48:5)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":50:19)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":50:9)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":51:9)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":54:9)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":57:9)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":54:19)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":54:29)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":54:13)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":54:40)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":55:9)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":56:13)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":58:9)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":63:1)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":79:1)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":65:5)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":78:5)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":65:12)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":67:5)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":69:9)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":72:9)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":69:19)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":69:29)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":69:13)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":69:40)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":70:9)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":71:23)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":71:13)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":73:9)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":76:19)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":76:9)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_fputs_15.c":77:9)
#loc64 = loc(fused[#loc1, #loc2])
#loc65 = loc(fused[#loc4, #loc5])
#loc66 = loc(fused[#loc6, #loc7])
#loc67 = loc(fused[#loc9, #loc10])
#loc68 = loc(fused[#loc11, #loc12])
#loc69 = loc(fused[#loc20, #loc21])
#loc70 = loc(fused[#loc22, #loc23])
#loc71 = loc(fused[#loc24, #loc25])
#loc72 = loc(fused[#loc27, #loc28])
#loc73 = loc(fused[#loc29, #loc30])
#loc74 = loc(fused[#loc36, #loc37])
#loc75 = loc(fused[#loc40, #loc41])
#loc76 = loc(fused[#loc42, #loc37])
#loc77 = loc(fused[#loc45, #loc46])
#loc78 = loc(fused[#loc47, #loc48])
#loc79 = loc(fused[#loc51, #loc52])
#loc80 = loc(fused[#loc55, #loc56])
#loc81 = loc(fused[#loc57, #loc52])
