!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private @__const.goodG2B2.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc125)
  cir.global "private" constant cir_private @__const.goodG2B1.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc126)
  cir.global "private" constant cir_private @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15_bad.source = #cir.const_array<"AAAAAAAAAA\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> loc(#loc127)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc128)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc9)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc129)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc127)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc131)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc132)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc17)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc17)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc17)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc17)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc17)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc133)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc17)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc17)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
    %11 = cir.const #cir.int<10> : !s32i loc(#loc19)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc19)
    %13 = cir.binop(add, %11, %12) nsw : !s32i loc(#loc19)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc19)
    %15 = cir.const #cir.int<1> : !u64i loc(#loc19)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc19)
    %17 = cir.alloca !u8i, !cir.ptr<!u8i>, %16 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc19)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc19)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc19)
    cir.store %19, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc133)
    cir.br ^bb1 loc(#loc134)
  ^bb1:  // pred: ^bb0
    %20 = cir.const #cir.int<6> : !s32i loc(#loc22)
    cir.br ^bb2 loc(#loc20)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %20 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc20)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc23)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %21 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    cir.store %21, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc135)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc26)
    %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc26)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc29)
    cir.store %23, %26 : !s8i, !cir.ptr<!s8i> loc(#loc136)
    cir.br ^bb6 loc(#loc30)
  ^bb5:  // pred: ^bb2
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc9)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc9)
    cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc31)
    cir.br ^bb6 loc(#loc32)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc21)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc137)
  ^bb8:  // pred: ^bb7
    %29 = cir.get_global @__const.CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15_bad.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc127)
    cir.copy %29 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc127)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc35)
    %32 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc36)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
    %34 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc37)
    %35 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc38)
    %36 = cir.call @strlen(%35) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc37)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc39)
    %39 = cir.binop(add, %36, %38) : !u64i loc(#loc138)
    %40 = cir.const #cir.int<1> : !u64i loc(#loc139)
    %41 = cir.binop(mul, %39, %40) : !u64i loc(#loc140)
    cir.libc.memcpy %41 bytes from %33 to %31 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc141)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    cir.br ^bb9 loc(#loc34)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc13)
  } loc(#loc130)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc143)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc49)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc144)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc51)
    cir.return loc(#loc48)
  } loc(#loc142)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc126)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc146)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc147)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc58)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc58)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc58)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc58)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc58)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc148)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc58)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc58)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
    %11 = cir.const #cir.int<10> : !s32i loc(#loc60)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc60)
    %13 = cir.binop(add, %11, %12) nsw : !s32i loc(#loc60)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc60)
    %15 = cir.const #cir.int<1> : !u64i loc(#loc60)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc60)
    %17 = cir.alloca !u8i, !cir.ptr<!u8i>, %16 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc60)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc60)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc60)
    cir.store %19, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc148)
    cir.br ^bb1 loc(#loc149)
  ^bb1:  // pred: ^bb0
    %20 = cir.const #cir.int<5> : !s32i loc(#loc63)
    cir.br ^bb2 loc(#loc61)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %20 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc61)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc64)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc65)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    cir.br ^bb6 loc(#loc67)
  ^bb5:  // pred: ^bb2
    %23 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
    cir.store %23, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc70)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc73)
    cir.store %25, %28 : !s8i, !cir.ptr<!s8i> loc(#loc151)
    cir.br ^bb6 loc(#loc74)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc62)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc152)
  ^bb8:  // pred: ^bb7
    %29 = cir.get_global @__const.goodG2B1.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc126)
    cir.copy %29 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc126)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc77)
    %32 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc78)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc78)
    %34 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc79)
    %35 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc80)
    %36 = cir.call @strlen(%35) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc79)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc81)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc81)
    %39 = cir.binop(add, %36, %38) : !u64i loc(#loc153)
    %40 = cir.const #cir.int<1> : !u64i loc(#loc154)
    %41 = cir.binop(mul, %39, %40) : !u64i loc(#loc155)
    cir.libc.memcpy %41 bytes from %33 to %31 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc156)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
    cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    cir.br ^bb9 loc(#loc76)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc54)
  } loc(#loc145)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 11>, !cir.ptr<!cir.array<!s8i x 11>>, ["source"] {alignment = 1 : i64} loc(#loc125)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc158)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc159)
    %3 = cir.const #cir.int<10> : !s32i loc(#loc94)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc94)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc94)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc94)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc94)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc160)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc94)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc94)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc159)
    %11 = cir.const #cir.int<10> : !s32i loc(#loc96)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc96)
    %13 = cir.binop(add, %11, %12) nsw : !s32i loc(#loc96)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc96)
    %15 = cir.const #cir.int<1> : !u64i loc(#loc96)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc96)
    %17 = cir.alloca !u8i, !cir.ptr<!u8i>, %16 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc96)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc96)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc96)
    cir.store %19, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc160)
    cir.br ^bb1 loc(#loc161)
  ^bb1:  // pred: ^bb0
    %20 = cir.const #cir.int<6> : !s32i loc(#loc99)
    cir.br ^bb2 loc(#loc97)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %20 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc97)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc100)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %21 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
    cir.store %21, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc162)
    %22 = cir.const #cir.int<0> : !s32i loc(#loc103)
    %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc103)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc105)
    %26 = cir.ptr_stride(%24 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc106)
    cir.store %23, %26 : !s8i, !cir.ptr<!s8i> loc(#loc163)
    cir.br ^bb6 loc(#loc107)
  ^bb5:  // pred: ^bb2
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc108)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc108)
    cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc109)
    cir.br ^bb6 loc(#loc110)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc98)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc164)
  ^bb8:  // pred: ^bb7
    %29 = cir.get_global @__const.goodG2B2.source : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc125)
    cir.copy %29 to %0 : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc125)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc113)
    %32 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc114)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc114)
    %34 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc115)
    %35 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc116)
    %36 = cir.call @strlen(%35) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc115)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc117)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc117)
    %39 = cir.binop(add, %36, %38) : !u64i loc(#loc165)
    %40 = cir.const #cir.int<1> : !u64i loc(#loc166)
    %41 = cir.binop(mul, %39, %40) : !u64i loc(#loc167)
    cir.libc.memcpy %41 bytes from %33 to %31 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc168)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
    cir.call @printLine(%42) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    cir.br ^bb9 loc(#loc112)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc90)
  } loc(#loc157)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s02/CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":107:9)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":107:29)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":79:9)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":79:29)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":47:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":47:29)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":43:19)
#loc10 = loc("/usr/include/string.h":407:1)
#loc11 = loc("/usr/include/string.h":408:33)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":28:1)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":53:1)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":30:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":30:12)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":31:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":31:36)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":32:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":32:37)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":33:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":45:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":33:12)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":35:5)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":38:16)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":38:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":39:19)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":39:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":39:14)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":39:15)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":40:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":43:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":44:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":46:5)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":52:5)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":50:16)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":50:22)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":50:31)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":50:38)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":50:48)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":50:53)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":50:64)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":50:30)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":50:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":50:65)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":51:19)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":51:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":115:1)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":119:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":117:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":117:14)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":118:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":118:14)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":60:1)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":85:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":62:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":62:12)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":63:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":63:36)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":64:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":64:37)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":65:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":77:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":65:12)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":67:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":69:19)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":69:9)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":70:9)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":74:16)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":74:9)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":75:19)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":75:9)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":75:14)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":75:15)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":76:9)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":78:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":84:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":82:16)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":82:22)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":82:31)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":82:38)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":82:48)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":82:53)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":82:64)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":82:30)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":82:9)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":82:65)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":83:19)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":83:9)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":88:1)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":113:1)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":90:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":90:12)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":91:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":91:36)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":92:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":92:37)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":93:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":105:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":93:12)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":95:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":98:16)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":98:9)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":99:19)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":99:9)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":99:14)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":99:15)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":100:9)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":103:19)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":103:9)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":104:9)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":106:5)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":112:5)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":110:16)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":110:22)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":110:31)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":110:38)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":110:48)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":110:53)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":110:64)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":110:30)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":110:9)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":110:65)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":111:19)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE193_char_alloca_memcpy_15.c":111:9)
#loc125 = loc(fused[#loc1, #loc2])
#loc126 = loc(fused[#loc3, #loc4])
#loc127 = loc(fused[#loc5, #loc6])
#loc128 = loc(fused[#loc7, #loc8])
#loc129 = loc(fused[#loc10, #loc11])
#loc130 = loc(fused[#loc12, #loc13])
#loc131 = loc(fused[#loc14, #loc15])
#loc132 = loc(fused[#loc16, #loc17])
#loc133 = loc(fused[#loc18, #loc19])
#loc134 = loc(fused[#loc20, #loc21])
#loc135 = loc(fused[#loc25, #loc24])
#loc136 = loc(fused[#loc27, #loc26])
#loc137 = loc(fused[#loc33, #loc34])
#loc138 = loc(fused[#loc37, #loc39])
#loc139 = loc(fused[#loc40, #loc41])
#loc140 = loc(fused[#loc42, #loc41])
#loc141 = loc(fused[#loc43, #loc44])
#loc142 = loc(fused[#loc47, #loc48])
#loc143 = loc(fused[#loc49, #loc50])
#loc144 = loc(fused[#loc51, #loc52])
#loc145 = loc(fused[#loc53, #loc54])
#loc146 = loc(fused[#loc55, #loc56])
#loc147 = loc(fused[#loc57, #loc58])
#loc148 = loc(fused[#loc59, #loc60])
#loc149 = loc(fused[#loc61, #loc62])
#loc150 = loc(fused[#loc69, #loc68])
#loc151 = loc(fused[#loc71, #loc70])
#loc152 = loc(fused[#loc75, #loc76])
#loc153 = loc(fused[#loc79, #loc81])
#loc154 = loc(fused[#loc82, #loc83])
#loc155 = loc(fused[#loc84, #loc83])
#loc156 = loc(fused[#loc85, #loc86])
#loc157 = loc(fused[#loc89, #loc90])
#loc158 = loc(fused[#loc91, #loc92])
#loc159 = loc(fused[#loc93, #loc94])
#loc160 = loc(fused[#loc95, #loc96])
#loc161 = loc(fused[#loc97, #loc98])
#loc162 = loc(fused[#loc102, #loc101])
#loc163 = loc(fused[#loc104, #loc103])
#loc164 = loc(fused[#loc111, #loc112])
#loc165 = loc(fused[#loc115, #loc117])
#loc166 = loc(fused[#loc118, #loc119])
#loc167 = loc(fused[#loc120, #loc119])
#loc168 = loc(fused[#loc121, #loc122])
