!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc120 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":97:48)
#loc267 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":189:48)
#loc410 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":287:48)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc506)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc507)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc508)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc509)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc510)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc511)
  cir.func private @atof(!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc512)
  cir.func private @close(!s32i) -> !s32i loc(#loc513)
  cir.func private @printIntLine(!s32i) loc(#loc514)
  cir.func no_proto @CWE369_Divide_by_Zero__float_listenSocket_02_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc516)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc517)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc518)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc519)
    %4 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc520)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc521)
    %6 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc522)
    %7 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc35)
    cir.store %7, %6 : !cir.float, !cir.ptr<!cir.float> loc(#loc523)
    cir.br ^bb1 loc(#loc524)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc39)
    cir.brcond %9 ^bb2, ^bb46 loc(#loc525)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc526)
  ^bb3:  // pred: ^bb2
    %10 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc26)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc518)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc28)
    cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc519)
    cir.br ^bb4 loc(#loc527)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc527)
  ^bb5:  // pred: ^bb34
    %14 = cir.const #cir.int<0> : !s32i loc(#loc45)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc45)
    cir.brcond %15 ^bb6, ^bb35 loc(#loc45)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %16 = cir.const #cir.int<2> : !s32i loc(#loc46)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc47)
    %18 = cir.const #cir.int<6> : !s32i loc(#loc48)
    %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc49)
    cir.store %19, %2 : !s32i, !cir.ptr<!s32i> loc(#loc528)
    cir.br ^bb7 loc(#loc529)
  ^bb7:  // pred: ^bb6
    %20 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc54)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc55)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc55)
    %23 = cir.cmp(eq, %20, %22) : !s32i, !cir.bool loc(#loc530)
    cir.brcond %23 ^bb8, ^bb9 loc(#loc531)
  ^bb8:  // pred: ^bb7
    cir.br ^bb35 loc(#loc57)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc53)
  ^bb10:  // pred: ^bb9
    %24 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc532)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc60)
    %26 = cir.const #cir.int<16> : !u64i loc(#loc533)
    cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc534)
    %27 = cir.const #cir.int<2> : !s32i loc(#loc65)
    %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc65)
    %29 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
    cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc535)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc68)
    %32 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc69)
    %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc70)
    cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc536)
    %34 = cir.const #cir.int<27015> : !s32i loc(#loc72)
    %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc72)
    %36 = cir.call @htons(%35) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc73)
    %37 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
    cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc537)
    cir.br ^bb11 loc(#loc538)
  ^bb11:  // pred: ^bb10
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    %39 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc539)
    %40 = cir.const #cir.int<16> : !u64i loc(#loc540)
    %41 = cir.cast(integral, %40 : !u64i), !u32i loc(#loc540)
    %42 = cir.call @bind(%38, %39, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc84)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc85)
    %44 = cir.unary(minus, %43) : !s32i, !s32i loc(#loc85)
    %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc541)
    cir.brcond %45 ^bb12, ^bb13 loc(#loc542)
  ^bb12:  // pred: ^bb11
    cir.br ^bb35 loc(#loc87)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc78)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc543)
  ^bb15:  // pred: ^bb14
    %46 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc90)
    %47 = cir.const #cir.int<5> : !s32i loc(#loc91)
    %48 = cir.call @listen(%46, %47) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc92)
    %49 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %50 = cir.unary(minus, %49) : !s32i, !s32i loc(#loc93)
    %51 = cir.cmp(eq, %48, %50) : !s32i, !cir.bool loc(#loc544)
    cir.brcond %51 ^bb16, ^bb17 loc(#loc545)
  ^bb16:  // pred: ^bb15
    cir.br ^bb35 loc(#loc95)
  ^bb17:  // pred: ^bb15
    cir.br ^bb18 loc(#loc89)
  ^bb18:  // pred: ^bb17
    %52 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    %53 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc97)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc98)
    %55 = cir.call @accept(%52, %53, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc99)
    cir.store %55, %3 : !s32i, !cir.ptr<!s32i> loc(#loc546)
    cir.br ^bb19 loc(#loc547)
  ^bb19:  // pred: ^bb18
    %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %58 = cir.unary(minus, %57) : !s32i, !s32i loc(#loc105)
    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc548)
    cir.brcond %59 ^bb20, ^bb21 loc(#loc549)
  ^bb20:  // pred: ^bb19
    cir.br ^bb35 loc(#loc107)
  ^bb21:  // pred: ^bb19
    cir.br ^bb22 loc(#loc103)
  ^bb22:  // pred: ^bb21
    %60 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc108)
    %61 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc109)
    %62 = cir.cast(bitcast, %61 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc109)
    %63 = cir.const #cir.int<20> : !s32i loc(#loc110)
    %64 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %65 = cir.binop(sub, %63, %64) nsw : !s32i loc(#loc110)
    %66 = cir.cast(integral, %65 : !s32i), !u64i loc(#loc110)
    %67 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %68 = cir.call @recv(%60, %62, %66, %67) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc113)
    %69 = cir.cast(integral, %68 : !s64i), !s32i loc(#loc113)
    cir.store %69, %0 : !s32i, !cir.ptr<!s32i> loc(#loc550)
    cir.br ^bb23 loc(#loc551)
  ^bb23:  // pred: ^bb22
    %70 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc118)
    %71 = cir.const #cir.int<1> : !s32i loc(#loc119)
    %72 = cir.unary(minus, %71) : !s32i, !s32i loc(#loc119)
    %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc552)
    cir.brcond %73 ^bb24, ^bb25 loc(#loc120)
  ^bb24:  // pred: ^bb23
    %74 = cir.const #true loc(#loc120)
    cir.br ^bb30(%74 : !cir.bool) loc(#loc120)
  ^bb25:  // pred: ^bb23
    %75 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc121)
    %76 = cir.const #cir.int<0> : !s32i loc(#loc122)
    %77 = cir.cmp(eq, %75, %76) : !s32i, !cir.bool loc(#loc553)
    cir.brcond %77 ^bb26, ^bb27 loc(#loc120)
  ^bb26:  // pred: ^bb25
    %78 = cir.const #true loc(#loc120)
    cir.br ^bb28(%78 : !cir.bool) loc(#loc120)
  ^bb27:  // pred: ^bb25
    %79 = cir.const #false loc(#loc120)
    cir.br ^bb28(%79 : !cir.bool) loc(#loc120)
  ^bb28(%80: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":97:48)):  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc120)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30(%80 : !cir.bool) loc(#loc120)
  ^bb30(%81: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":97:48)):  // 2 preds: ^bb24, ^bb29
    cir.br ^bb31 loc(#loc120)
  ^bb31:  // pred: ^bb30
    cir.brcond %81 ^bb32, ^bb33 loc(#loc554)
  ^bb32:  // pred: ^bb31
    cir.br ^bb35 loc(#loc124)
  ^bb33:  // pred: ^bb31
    cir.br ^bb34 loc(#loc117)
  ^bb34:  // pred: ^bb33
    %82 = cir.const #cir.int<0> : !s32i loc(#loc125)
    %83 = cir.cast(integral, %82 : !s32i), !s8i loc(#loc125)
    %84 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    %85 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc127)
    %86 = cir.ptr_stride(%85 : !cir.ptr<!s8i>, %84 : !s32i), !cir.ptr<!s8i> loc(#loc127)
    cir.store %83, %86 : !s8i, !cir.ptr<!s8i> loc(#loc555)
    %87 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc128)
    %88 = cir.call @atof(%87) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc129)
    %89 = cir.cast(floating, %88 : !cir.double), !cir.float loc(#loc129)
    cir.store %89, %6 : !cir.float, !cir.ptr<!cir.float> loc(#loc556)
    cir.br ^bb5 loc(#loc44)
  ^bb35:  // 6 preds: ^bb5, ^bb8, ^bb12, ^bb16, ^bb20, ^bb32
    cir.br ^bb36 loc(#loc44)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc557)
  ^bb37:  // pred: ^bb36
    %90 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc134)
    %91 = cir.const #cir.int<1> : !s32i loc(#loc135)
    %92 = cir.unary(minus, %91) : !s32i, !s32i loc(#loc135)
    %93 = cir.cmp(ne, %90, %92) : !s32i, !cir.bool loc(#loc558)
    cir.brcond %93 ^bb38, ^bb39 loc(#loc559)
  ^bb38:  // pred: ^bb37
    %94 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    %95 = cir.call @close(%94) : (!s32i) -> !s32i loc(#loc138)
    cir.br ^bb39 loc(#loc133)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc133)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc560)
  ^bb41:  // pred: ^bb40
    %96 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc141)
    %97 = cir.const #cir.int<1> : !s32i loc(#loc142)
    %98 = cir.unary(minus, %97) : !s32i, !s32i loc(#loc142)
    %99 = cir.cmp(ne, %96, %98) : !s32i, !cir.bool loc(#loc561)
    cir.brcond %99 ^bb42, ^bb43 loc(#loc562)
  ^bb42:  // pred: ^bb41
    %100 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    %101 = cir.call @close(%100) : (!s32i) -> !s32i loc(#loc145)
    cir.br ^bb43 loc(#loc140)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc140)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc42)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc38)
  ^bb46:  // 2 preds: ^bb1, ^bb45
    cir.br ^bb47 loc(#loc38)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc563)
  ^bb48:  // pred: ^bb47
    %102 = cir.const #cir.int<1> : !s32i loc(#loc148)
    %103 = cir.cast(int_to_bool, %102 : !s32i), !cir.bool loc(#loc148)
    cir.brcond %103 ^bb49, ^bb52 loc(#loc564)
  ^bb49:  // pred: ^bb48
    cir.br ^bb50 loc(#loc565)
  ^bb50:  // pred: ^bb49
    %104 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc152)
    %105 = cir.load %6 : !cir.ptr<!cir.float>, !cir.float loc(#loc153)
    %106 = cir.cast(floating, %105 : !cir.float), !cir.double loc(#loc153)
    %107 = cir.binop(div, %104, %106) : !cir.double loc(#loc566)
    %108 = cir.cast(float_to_int, %107 : !cir.double), !s32i loc(#loc566)
    cir.store %108, %5 : !s32i, !cir.ptr<!s32i> loc(#loc521)
    %109 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc154)
    cir.call @printIntLine(%109) : (!s32i) -> () loc(#loc155)
    cir.br ^bb51 loc(#loc151)
  ^bb51:  // pred: ^bb50
    cir.br ^bb52 loc(#loc147)
  ^bb52:  // 2 preds: ^bb48, ^bb51
    cir.br ^bb53 loc(#loc147)
  ^bb53:  // pred: ^bb52
    cir.return loc(#loc20)
  } loc(#loc515)
  cir.func no_proto @CWE369_Divide_by_Zero__float_listenSocket_02_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc568)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc158)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc569)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc160)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc570)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc162)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc571)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc164)
    cir.return loc(#loc157)
  } loc(#loc567)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc572)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc168)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc169)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc574)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc575)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc576)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc577)
    %4 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc578)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc579)
    %6 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc580)
    %7 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc186)
    cir.store %7, %6 : !cir.float, !cir.ptr<!cir.float> loc(#loc581)
    cir.br ^bb1 loc(#loc582)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.int<1> : !s32i loc(#loc190)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc190)
    cir.brcond %9 ^bb2, ^bb46 loc(#loc583)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc584)
  ^bb3:  // pred: ^bb2
    %10 = cir.const #cir.int<1> : !s32i loc(#loc177)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc177)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc576)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc179)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc179)
    cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc577)
    cir.br ^bb4 loc(#loc585)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc585)
  ^bb5:  // pred: ^bb34
    %14 = cir.const #cir.int<0> : !s32i loc(#loc196)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc196)
    cir.brcond %15 ^bb6, ^bb35 loc(#loc196)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %16 = cir.const #cir.int<2> : !s32i loc(#loc197)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc198)
    %18 = cir.const #cir.int<6> : !s32i loc(#loc199)
    %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc200)
    cir.store %19, %2 : !s32i, !cir.ptr<!s32i> loc(#loc586)
    cir.br ^bb7 loc(#loc587)
  ^bb7:  // pred: ^bb6
    %20 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc205)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc206)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc206)
    %23 = cir.cmp(eq, %20, %22) : !s32i, !cir.bool loc(#loc588)
    cir.brcond %23 ^bb8, ^bb9 loc(#loc589)
  ^bb8:  // pred: ^bb7
    cir.br ^bb35 loc(#loc208)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc204)
  ^bb10:  // pred: ^bb9
    %24 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc590)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc211)
    %26 = cir.const #cir.int<16> : !u64i loc(#loc591)
    cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc592)
    %27 = cir.const #cir.int<2> : !s32i loc(#loc216)
    %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc216)
    %29 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
    cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc593)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc218)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc218)
    %32 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc69)
    %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc70)
    cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc594)
    %34 = cir.const #cir.int<27015> : !s32i loc(#loc220)
    %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc220)
    %36 = cir.call @htons(%35) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc221)
    %37 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
    cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc595)
    cir.br ^bb11 loc(#loc596)
  ^bb11:  // pred: ^bb10
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc226)
    %39 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc597)
    %40 = cir.const #cir.int<16> : !u64i loc(#loc598)
    %41 = cir.cast(integral, %40 : !u64i), !u32i loc(#loc598)
    %42 = cir.call @bind(%38, %39, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc231)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc232)
    %44 = cir.unary(minus, %43) : !s32i, !s32i loc(#loc232)
    %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc599)
    cir.brcond %45 ^bb12, ^bb13 loc(#loc600)
  ^bb12:  // pred: ^bb11
    cir.br ^bb35 loc(#loc234)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc225)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc601)
  ^bb15:  // pred: ^bb14
    %46 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc237)
    %47 = cir.const #cir.int<5> : !s32i loc(#loc238)
    %48 = cir.call @listen(%46, %47) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc239)
    %49 = cir.const #cir.int<1> : !s32i loc(#loc240)
    %50 = cir.unary(minus, %49) : !s32i, !s32i loc(#loc240)
    %51 = cir.cmp(eq, %48, %50) : !s32i, !cir.bool loc(#loc602)
    cir.brcond %51 ^bb16, ^bb17 loc(#loc603)
  ^bb16:  // pred: ^bb15
    cir.br ^bb35 loc(#loc242)
  ^bb17:  // pred: ^bb15
    cir.br ^bb18 loc(#loc236)
  ^bb18:  // pred: ^bb17
    %52 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc243)
    %53 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc244)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc245)
    %55 = cir.call @accept(%52, %53, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc246)
    cir.store %55, %3 : !s32i, !cir.ptr<!s32i> loc(#loc604)
    cir.br ^bb19 loc(#loc605)
  ^bb19:  // pred: ^bb18
    %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc251)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc252)
    %58 = cir.unary(minus, %57) : !s32i, !s32i loc(#loc252)
    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc606)
    cir.brcond %59 ^bb20, ^bb21 loc(#loc607)
  ^bb20:  // pred: ^bb19
    cir.br ^bb35 loc(#loc254)
  ^bb21:  // pred: ^bb19
    cir.br ^bb22 loc(#loc250)
  ^bb22:  // pred: ^bb21
    %60 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc255)
    %61 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc256)
    %62 = cir.cast(bitcast, %61 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc256)
    %63 = cir.const #cir.int<20> : !s32i loc(#loc257)
    %64 = cir.const #cir.int<1> : !s32i loc(#loc258)
    %65 = cir.binop(sub, %63, %64) nsw : !s32i loc(#loc257)
    %66 = cir.cast(integral, %65 : !s32i), !u64i loc(#loc257)
    %67 = cir.const #cir.int<0> : !s32i loc(#loc259)
    %68 = cir.call @recv(%60, %62, %66, %67) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc260)
    %69 = cir.cast(integral, %68 : !s64i), !s32i loc(#loc260)
    cir.store %69, %0 : !s32i, !cir.ptr<!s32i> loc(#loc608)
    cir.br ^bb23 loc(#loc609)
  ^bb23:  // pred: ^bb22
    %70 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc265)
    %71 = cir.const #cir.int<1> : !s32i loc(#loc266)
    %72 = cir.unary(minus, %71) : !s32i, !s32i loc(#loc266)
    %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc610)
    cir.brcond %73 ^bb24, ^bb25 loc(#loc267)
  ^bb24:  // pred: ^bb23
    %74 = cir.const #true loc(#loc267)
    cir.br ^bb30(%74 : !cir.bool) loc(#loc267)
  ^bb25:  // pred: ^bb23
    %75 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc268)
    %76 = cir.const #cir.int<0> : !s32i loc(#loc269)
    %77 = cir.cmp(eq, %75, %76) : !s32i, !cir.bool loc(#loc611)
    cir.brcond %77 ^bb26, ^bb27 loc(#loc267)
  ^bb26:  // pred: ^bb25
    %78 = cir.const #true loc(#loc267)
    cir.br ^bb28(%78 : !cir.bool) loc(#loc267)
  ^bb27:  // pred: ^bb25
    %79 = cir.const #false loc(#loc267)
    cir.br ^bb28(%79 : !cir.bool) loc(#loc267)
  ^bb28(%80: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":189:48)):  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc267)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30(%80 : !cir.bool) loc(#loc267)
  ^bb30(%81: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":189:48)):  // 2 preds: ^bb24, ^bb29
    cir.br ^bb31 loc(#loc267)
  ^bb31:  // pred: ^bb30
    cir.brcond %81 ^bb32, ^bb33 loc(#loc612)
  ^bb32:  // pred: ^bb31
    cir.br ^bb35 loc(#loc271)
  ^bb33:  // pred: ^bb31
    cir.br ^bb34 loc(#loc264)
  ^bb34:  // pred: ^bb33
    %82 = cir.const #cir.int<0> : !s32i loc(#loc272)
    %83 = cir.cast(integral, %82 : !s32i), !s8i loc(#loc272)
    %84 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc273)
    %85 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc274)
    %86 = cir.ptr_stride(%85 : !cir.ptr<!s8i>, %84 : !s32i), !cir.ptr<!s8i> loc(#loc274)
    cir.store %83, %86 : !s8i, !cir.ptr<!s8i> loc(#loc613)
    %87 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc275)
    %88 = cir.call @atof(%87) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc276)
    %89 = cir.cast(floating, %88 : !cir.double), !cir.float loc(#loc276)
    cir.store %89, %6 : !cir.float, !cir.ptr<!cir.float> loc(#loc614)
    cir.br ^bb5 loc(#loc195)
  ^bb35:  // 6 preds: ^bb5, ^bb8, ^bb12, ^bb16, ^bb20, ^bb32
    cir.br ^bb36 loc(#loc195)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc615)
  ^bb37:  // pred: ^bb36
    %90 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc281)
    %91 = cir.const #cir.int<1> : !s32i loc(#loc282)
    %92 = cir.unary(minus, %91) : !s32i, !s32i loc(#loc282)
    %93 = cir.cmp(ne, %90, %92) : !s32i, !cir.bool loc(#loc616)
    cir.brcond %93 ^bb38, ^bb39 loc(#loc617)
  ^bb38:  // pred: ^bb37
    %94 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc284)
    %95 = cir.call @close(%94) : (!s32i) -> !s32i loc(#loc285)
    cir.br ^bb39 loc(#loc280)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc280)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc618)
  ^bb41:  // pred: ^bb40
    %96 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc288)
    %97 = cir.const #cir.int<1> : !s32i loc(#loc289)
    %98 = cir.unary(minus, %97) : !s32i, !s32i loc(#loc289)
    %99 = cir.cmp(ne, %96, %98) : !s32i, !cir.bool loc(#loc619)
    cir.brcond %99 ^bb42, ^bb43 loc(#loc620)
  ^bb42:  // pred: ^bb41
    %100 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc291)
    %101 = cir.call @close(%100) : (!s32i) -> !s32i loc(#loc292)
    cir.br ^bb43 loc(#loc287)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc287)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc193)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc189)
  ^bb46:  // 2 preds: ^bb1, ^bb45
    cir.br ^bb47 loc(#loc189)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc621)
  ^bb48:  // pred: ^bb47
    %102 = cir.const #cir.int<0> : !s32i loc(#loc295)
    %103 = cir.cast(int_to_bool, %102 : !s32i), !cir.bool loc(#loc295)
    cir.brcond %103 ^bb49, ^bb50 loc(#loc622)
  ^bb49:  // pred: ^bb48
    %104 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc168)
    %105 = cir.cast(array_to_ptrdecay, %104 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc168)
    cir.call @printLine(%105) : (!cir.ptr<!s8i>) -> () loc(#loc299)
    cir.br ^bb56 loc(#loc297)
  ^bb50:  // pred: ^bb48
    cir.br ^bb51 loc(#loc623)
  ^bb51:  // pred: ^bb50
    %106 = cir.load %6 : !cir.ptr<!cir.float>, !cir.float loc(#loc302)
    %107 = cir.cast(floating, %106 : !cir.float), !cir.double loc(#loc302)
    %108 = cir.fabs %107 : !cir.double loc(#loc302)
    %109 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc303)
    %110 = cir.cmp(gt, %108, %109) : !cir.double, !cir.bool loc(#loc624)
    cir.brcond %110 ^bb52, ^bb53 loc(#loc625)
  ^bb52:  // pred: ^bb51
    %111 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc308)
    %112 = cir.load %6 : !cir.ptr<!cir.float>, !cir.float loc(#loc309)
    %113 = cir.cast(floating, %112 : !cir.float), !cir.double loc(#loc309)
    %114 = cir.binop(div, %111, %113) : !cir.double loc(#loc626)
    %115 = cir.cast(float_to_int, %114 : !cir.double), !s32i loc(#loc626)
    cir.store %115, %5 : !s32i, !cir.ptr<!s32i> loc(#loc579)
    %116 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc310)
    cir.call @printIntLine(%116) : (!s32i) -> () loc(#loc311)
    cir.br ^bb54 loc(#loc306)
  ^bb53:  // pred: ^bb51
    %117 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc169)
    %118 = cir.cast(array_to_ptrdecay, %117 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc169)
    cir.call @printLine(%118) : (!cir.ptr<!s8i>) -> () loc(#loc312)
    cir.br ^bb54 loc(#loc301)
  ^bb54:  // 2 preds: ^bb52, ^bb53
    cir.br ^bb55 loc(#loc301)
  ^bb55:  // pred: ^bb54
    cir.br ^bb56 loc(#loc294)
  ^bb56:  // 2 preds: ^bb49, ^bb55
    cir.br ^bb57 loc(#loc294)
  ^bb57:  // pred: ^bb56
    cir.return loc(#loc171)
  } loc(#loc573)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc628)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc629)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc630)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc631)
    %4 = cir.alloca !cir.array<!s8i x 20>, !cir.ptr<!cir.array<!s8i x 20>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc632)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc633)
    %6 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc634)
    %7 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc329)
    cir.store %7, %6 : !cir.float, !cir.ptr<!cir.float> loc(#loc635)
    cir.br ^bb1 loc(#loc636)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.int<1> : !s32i loc(#loc333)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc333)
    cir.brcond %9 ^bb2, ^bb46 loc(#loc637)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc638)
  ^bb3:  // pred: ^bb2
    %10 = cir.const #cir.int<1> : !s32i loc(#loc320)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc320)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc630)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc322)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc322)
    cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc631)
    cir.br ^bb4 loc(#loc639)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc639)
  ^bb5:  // pred: ^bb34
    %14 = cir.const #cir.int<0> : !s32i loc(#loc339)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc339)
    cir.brcond %15 ^bb6, ^bb35 loc(#loc339)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %16 = cir.const #cir.int<2> : !s32i loc(#loc340)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc341)
    %18 = cir.const #cir.int<6> : !s32i loc(#loc342)
    %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc343)
    cir.store %19, %2 : !s32i, !cir.ptr<!s32i> loc(#loc640)
    cir.br ^bb7 loc(#loc641)
  ^bb7:  // pred: ^bb6
    %20 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc348)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc349)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc349)
    %23 = cir.cmp(eq, %20, %22) : !s32i, !cir.bool loc(#loc642)
    cir.brcond %23 ^bb8, ^bb9 loc(#loc643)
  ^bb8:  // pred: ^bb7
    cir.br ^bb35 loc(#loc351)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc347)
  ^bb10:  // pred: ^bb9
    %24 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc644)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc354)
    %26 = cir.const #cir.int<16> : !u64i loc(#loc645)
    cir.libc.memset %26 bytes from %24 set to %25 : !cir.ptr<!void>, !s32i, !u64i loc(#loc646)
    %27 = cir.const #cir.int<2> : !s32i loc(#loc359)
    %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc359)
    %29 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc66)
    cir.store %28, %29 : !u16i, !cir.ptr<!u16i> loc(#loc647)
    %30 = cir.const #cir.int<0> : !s32i loc(#loc361)
    %31 = cir.cast(integral, %30 : !s32i), !u32i loc(#loc361)
    %32 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc69)
    %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc70)
    cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc648)
    %34 = cir.const #cir.int<27015> : !s32i loc(#loc363)
    %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc363)
    %36 = cir.call @htons(%35) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc364)
    %37 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
    cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc649)
    cir.br ^bb11 loc(#loc650)
  ^bb11:  // pred: ^bb10
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc369)
    %39 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc651)
    %40 = cir.const #cir.int<16> : !u64i loc(#loc652)
    %41 = cir.cast(integral, %40 : !u64i), !u32i loc(#loc652)
    %42 = cir.call @bind(%38, %39, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc374)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc375)
    %44 = cir.unary(minus, %43) : !s32i, !s32i loc(#loc375)
    %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc653)
    cir.brcond %45 ^bb12, ^bb13 loc(#loc654)
  ^bb12:  // pred: ^bb11
    cir.br ^bb35 loc(#loc377)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc368)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc655)
  ^bb15:  // pred: ^bb14
    %46 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc380)
    %47 = cir.const #cir.int<5> : !s32i loc(#loc381)
    %48 = cir.call @listen(%46, %47) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc382)
    %49 = cir.const #cir.int<1> : !s32i loc(#loc383)
    %50 = cir.unary(minus, %49) : !s32i, !s32i loc(#loc383)
    %51 = cir.cmp(eq, %48, %50) : !s32i, !cir.bool loc(#loc656)
    cir.brcond %51 ^bb16, ^bb17 loc(#loc657)
  ^bb16:  // pred: ^bb15
    cir.br ^bb35 loc(#loc385)
  ^bb17:  // pred: ^bb15
    cir.br ^bb18 loc(#loc379)
  ^bb18:  // pred: ^bb17
    %52 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc386)
    %53 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc387)
    %54 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc388)
    %55 = cir.call @accept(%52, %53, %54) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc389)
    cir.store %55, %3 : !s32i, !cir.ptr<!s32i> loc(#loc658)
    cir.br ^bb19 loc(#loc659)
  ^bb19:  // pred: ^bb18
    %56 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc394)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc395)
    %58 = cir.unary(minus, %57) : !s32i, !s32i loc(#loc395)
    %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc660)
    cir.brcond %59 ^bb20, ^bb21 loc(#loc661)
  ^bb20:  // pred: ^bb19
    cir.br ^bb35 loc(#loc397)
  ^bb21:  // pred: ^bb19
    cir.br ^bb22 loc(#loc393)
  ^bb22:  // pred: ^bb21
    %60 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc398)
    %61 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc399)
    %62 = cir.cast(bitcast, %61 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc399)
    %63 = cir.const #cir.int<20> : !s32i loc(#loc400)
    %64 = cir.const #cir.int<1> : !s32i loc(#loc401)
    %65 = cir.binop(sub, %63, %64) nsw : !s32i loc(#loc400)
    %66 = cir.cast(integral, %65 : !s32i), !u64i loc(#loc400)
    %67 = cir.const #cir.int<0> : !s32i loc(#loc402)
    %68 = cir.call @recv(%60, %62, %66, %67) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc403)
    %69 = cir.cast(integral, %68 : !s64i), !s32i loc(#loc403)
    cir.store %69, %0 : !s32i, !cir.ptr<!s32i> loc(#loc662)
    cir.br ^bb23 loc(#loc663)
  ^bb23:  // pred: ^bb22
    %70 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc408)
    %71 = cir.const #cir.int<1> : !s32i loc(#loc409)
    %72 = cir.unary(minus, %71) : !s32i, !s32i loc(#loc409)
    %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc664)
    cir.brcond %73 ^bb24, ^bb25 loc(#loc410)
  ^bb24:  // pred: ^bb23
    %74 = cir.const #true loc(#loc410)
    cir.br ^bb30(%74 : !cir.bool) loc(#loc410)
  ^bb25:  // pred: ^bb23
    %75 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc411)
    %76 = cir.const #cir.int<0> : !s32i loc(#loc412)
    %77 = cir.cmp(eq, %75, %76) : !s32i, !cir.bool loc(#loc665)
    cir.brcond %77 ^bb26, ^bb27 loc(#loc410)
  ^bb26:  // pred: ^bb25
    %78 = cir.const #true loc(#loc410)
    cir.br ^bb28(%78 : !cir.bool) loc(#loc410)
  ^bb27:  // pred: ^bb25
    %79 = cir.const #false loc(#loc410)
    cir.br ^bb28(%79 : !cir.bool) loc(#loc410)
  ^bb28(%80: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":287:48)):  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc410)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30(%80 : !cir.bool) loc(#loc410)
  ^bb30(%81: !cir.bool loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":287:48)):  // 2 preds: ^bb24, ^bb29
    cir.br ^bb31 loc(#loc410)
  ^bb31:  // pred: ^bb30
    cir.brcond %81 ^bb32, ^bb33 loc(#loc666)
  ^bb32:  // pred: ^bb31
    cir.br ^bb35 loc(#loc414)
  ^bb33:  // pred: ^bb31
    cir.br ^bb34 loc(#loc407)
  ^bb34:  // pred: ^bb33
    %82 = cir.const #cir.int<0> : !s32i loc(#loc415)
    %83 = cir.cast(integral, %82 : !s32i), !s8i loc(#loc415)
    %84 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc416)
    %85 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc417)
    %86 = cir.ptr_stride(%85 : !cir.ptr<!s8i>, %84 : !s32i), !cir.ptr<!s8i> loc(#loc417)
    cir.store %83, %86 : !s8i, !cir.ptr<!s8i> loc(#loc667)
    %87 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc418)
    %88 = cir.call @atof(%87) : (!cir.ptr<!s8i>) -> !cir.double extra(#fn_attr) loc(#loc419)
    %89 = cir.cast(floating, %88 : !cir.double), !cir.float loc(#loc419)
    cir.store %89, %6 : !cir.float, !cir.ptr<!cir.float> loc(#loc668)
    cir.br ^bb5 loc(#loc338)
  ^bb35:  // 6 preds: ^bb5, ^bb8, ^bb12, ^bb16, ^bb20, ^bb32
    cir.br ^bb36 loc(#loc338)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc669)
  ^bb37:  // pred: ^bb36
    %90 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc424)
    %91 = cir.const #cir.int<1> : !s32i loc(#loc425)
    %92 = cir.unary(minus, %91) : !s32i, !s32i loc(#loc425)
    %93 = cir.cmp(ne, %90, %92) : !s32i, !cir.bool loc(#loc670)
    cir.brcond %93 ^bb38, ^bb39 loc(#loc671)
  ^bb38:  // pred: ^bb37
    %94 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc427)
    %95 = cir.call @close(%94) : (!s32i) -> !s32i loc(#loc428)
    cir.br ^bb39 loc(#loc423)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc423)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc672)
  ^bb41:  // pred: ^bb40
    %96 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc431)
    %97 = cir.const #cir.int<1> : !s32i loc(#loc432)
    %98 = cir.unary(minus, %97) : !s32i, !s32i loc(#loc432)
    %99 = cir.cmp(ne, %96, %98) : !s32i, !cir.bool loc(#loc673)
    cir.brcond %99 ^bb42, ^bb43 loc(#loc674)
  ^bb42:  // pred: ^bb41
    %100 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc434)
    %101 = cir.call @close(%100) : (!s32i) -> !s32i loc(#loc435)
    cir.br ^bb43 loc(#loc430)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc430)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc336)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc332)
  ^bb46:  // 2 preds: ^bb1, ^bb45
    cir.br ^bb47 loc(#loc332)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc675)
  ^bb48:  // pred: ^bb47
    %102 = cir.const #cir.int<1> : !s32i loc(#loc438)
    %103 = cir.cast(int_to_bool, %102 : !s32i), !cir.bool loc(#loc438)
    cir.brcond %103 ^bb49, ^bb55 loc(#loc676)
  ^bb49:  // pred: ^bb48
    cir.br ^bb50 loc(#loc677)
  ^bb50:  // pred: ^bb49
    %104 = cir.load %6 : !cir.ptr<!cir.float>, !cir.float loc(#loc442)
    %105 = cir.cast(floating, %104 : !cir.float), !cir.double loc(#loc442)
    %106 = cir.fabs %105 : !cir.double loc(#loc442)
    %107 = cir.const #cir.fp<9.9999999999999995E-7> : !cir.double loc(#loc443)
    %108 = cir.cmp(gt, %106, %107) : !cir.double, !cir.bool loc(#loc678)
    cir.brcond %108 ^bb51, ^bb52 loc(#loc679)
  ^bb51:  // pred: ^bb50
    %109 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc448)
    %110 = cir.load %6 : !cir.ptr<!cir.float>, !cir.float loc(#loc449)
    %111 = cir.cast(floating, %110 : !cir.float), !cir.double loc(#loc449)
    %112 = cir.binop(div, %109, %111) : !cir.double loc(#loc680)
    %113 = cir.cast(float_to_int, %112 : !cir.double), !s32i loc(#loc680)
    cir.store %113, %5 : !s32i, !cir.ptr<!s32i> loc(#loc633)
    %114 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc450)
    cir.call @printIntLine(%114) : (!s32i) -> () loc(#loc451)
    cir.br ^bb53 loc(#loc446)
  ^bb52:  // pred: ^bb50
    %115 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc452)
    %116 = cir.cast(array_to_ptrdecay, %115 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc452)
    cir.call @printLine(%116) : (!cir.ptr<!s8i>) -> () loc(#loc453)
    cir.br ^bb53 loc(#loc441)
  ^bb53:  // 2 preds: ^bb51, ^bb52
    cir.br ^bb54 loc(#loc441)
  ^bb54:  // pred: ^bb53
    cir.br ^bb55 loc(#loc437)
  ^bb55:  // 2 preds: ^bb48, ^bb54
    cir.br ^bb56 loc(#loc437)
  ^bb56:  // pred: ^bb55
    cir.return loc(#loc314)
  } loc(#loc627)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc682)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc683)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc460)
    cir.store %2, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc684)
    cir.br ^bb1 loc(#loc685)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<0> : !s32i loc(#loc464)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc464)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc686)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc468)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc468)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc469)
    cir.br ^bb4 loc(#loc466)
  ^bb3:  // pred: ^bb1
    %7 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc470)
    cir.store %7, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc687)
    cir.br ^bb4 loc(#loc463)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc463)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc688)
  ^bb6:  // pred: ^bb5
    %8 = cir.const #cir.int<1> : !s32i loc(#loc474)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc474)
    cir.brcond %9 ^bb7, ^bb10 loc(#loc689)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc690)
  ^bb8:  // pred: ^bb7
    %10 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc478)
    %11 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc479)
    %12 = cir.cast(floating, %11 : !cir.float), !cir.double loc(#loc479)
    %13 = cir.binop(div, %10, %12) : !cir.double loc(#loc691)
    %14 = cir.cast(float_to_int, %13 : !cir.double), !s32i loc(#loc691)
    cir.store %14, %0 : !s32i, !cir.ptr<!s32i> loc(#loc682)
    %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc480)
    cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc481)
    cir.br ^bb9 loc(#loc477)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc473)
  ^bb10:  // 2 preds: ^bb6, ^bb9
    cir.br ^bb11 loc(#loc473)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc455)
  } loc(#loc681)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc693)
    %1 = cir.alloca !cir.float, !cir.ptr<!cir.float>, ["data"] {alignment = 4 : i64} loc(#loc694)
    %2 = cir.const #cir.fp<0.000000e+00> : !cir.float loc(#loc488)
    cir.store %2, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc695)
    cir.br ^bb1 loc(#loc696)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<1> : !s32i loc(#loc492)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc492)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc697)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.fp<2.000000e+00> : !cir.float loc(#loc494)
    cir.store %5, %1 : !cir.float, !cir.ptr<!cir.float> loc(#loc698)
    cir.br ^bb3 loc(#loc491)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc491)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc699)
  ^bb5:  // pred: ^bb4
    %6 = cir.const #cir.int<1> : !s32i loc(#loc498)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc498)
    cir.brcond %7 ^bb6, ^bb9 loc(#loc700)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc701)
  ^bb7:  // pred: ^bb6
    %8 = cir.const #cir.fp<1.000000e+02> : !cir.double loc(#loc502)
    %9 = cir.load %1 : !cir.ptr<!cir.float>, !cir.float loc(#loc503)
    %10 = cir.cast(floating, %9 : !cir.float), !cir.double loc(#loc503)
    %11 = cir.binop(div, %8, %10) : !cir.double loc(#loc702)
    %12 = cir.cast(float_to_int, %11 : !cir.double), !s32i loc(#loc702)
    cir.store %12, %0 : !s32i, !cir.ptr<!s32i> loc(#loc693)
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc504)
    cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc505)
    cir.br ^bb8 loc(#loc501)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc497)
  ^bb9:  // 2 preds: ^bb5, ^bb8
    cir.br ^bb10 loc(#loc497)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc483)
  } loc(#loc692)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE369_Divide_by_Zero/s01/CWE369_Divide_by_Zero__float_listenSocket_02.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":404:1)
#loc4 = loc("/usr/include/netinet/in.h":405:40)
#loc5 = loc("/usr/include/sys/socket.h":112:1)
#loc6 = loc("/usr/include/sys/socket.h":113:6)
#loc7 = loc("/usr/include/sys/socket.h":296:1)
#loc8 = loc("/usr/include/sys/socket.h":296:39)
#loc9 = loc("/usr/include/sys/socket.h":306:1)
#loc10 = loc("/usr/include/sys/socket.h":307:38)
#loc11 = loc("/usr/include/sys/socket.h":145:1)
#loc12 = loc("/usr/include/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":102:1)
#loc14 = loc("/usr/include/stdlib.h":103:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc19 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":46:1)
#loc20 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":131:1)
#loc21 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":58:13)
#loc22 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":58:17)
#loc23 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":59:13)
#loc24 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":59:32)
#loc25 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":60:13)
#loc26 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":60:35)
#loc27 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":61:13)
#loc28 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":61:35)
#loc29 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":62:13)
#loc30 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":62:45)
#loc31 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":127:13)
#loc32 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":127:44)
#loc33 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":48:5)
#loc34 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":48:11)
#loc35 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":50:12)
#loc36 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":50:5)
#loc37 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":51:5)
#loc38 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":122:5)
#loc39 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":51:8)
#loc40 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":52:5)
#loc41 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":53:9)
#loc42 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":121:9)
#loc43 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":63:13)
#loc44 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":106:21)
#loc45 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":106:20)
#loc46 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":72:39)
#loc47 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":72:48)
#loc48 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":72:61)
#loc49 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":72:32)
#loc50 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":72:17)
#loc51 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":72:72)
#loc52 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":73:17)
#loc53 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":76:17)
#loc54 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":73:21)
#loc55 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":73:37)
#loc56 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":74:17)
#loc57 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":75:21)
#loc58 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":77:24)
#loc59 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":77:25)
#loc60 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":77:34)
#loc61 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":77:37)
#loc62 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":77:51)
#loc63 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":77:17)
#loc64 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":77:52)
#loc65 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":78:38)
#loc66 = loc("/usr/include/netinet/in.h":249:5)
#loc67 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":78:17)
#loc68 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":79:43)
#loc69 = loc("/usr/include/netinet/in.h":251:20)
#loc70 = loc("/usr/include/netinet/in.h":33:15)
#loc71 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":79:17)
#loc72 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":80:42)
#loc73 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":80:36)
#loc74 = loc("/usr/include/netinet/in.h":250:15)
#loc75 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":80:17)
#loc76 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":80:50)
#loc77 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":81:17)
#loc78 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":84:17)
#loc79 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":81:26)
#loc80 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":81:58)
#loc81 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":81:59)
#loc82 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":81:68)
#loc83 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":81:82)
#loc84 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":81:21)
#loc85 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":81:88)
#loc86 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":82:17)
#loc87 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":83:21)
#loc88 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":85:17)
#loc89 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":88:17)
#loc90 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":85:28)
#loc91 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":85:42)
#loc92 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":85:21)
#loc93 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":85:61)
#loc94 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":86:17)
#loc95 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":87:21)
#loc96 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":89:39)
#loc97 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":89:53)
#loc98 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":89:59)
#loc99 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":89:32)
#loc100 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":89:17)
#loc101 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":89:63)
#loc102 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":90:17)
#loc103 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":93:17)
#loc104 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":90:21)
#loc105 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":90:37)
#loc106 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":91:17)
#loc107 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":92:21)
#loc108 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":96:35)
#loc109 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":96:49)
#loc110 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":96:62)
#loc111 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":96:80)
#loc112 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":96:83)
#loc113 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":96:30)
#loc114 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":96:17)
#loc115 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":96:84)
#loc116 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":97:17)
#loc117 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":100:17)
#loc118 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":97:21)
#loc119 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":97:35)
#loc121 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":97:51)
#loc122 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":97:65)
#loc123 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":98:17)
#loc124 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":99:21)
#loc125 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":102:43)
#loc126 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":102:29)
#loc127 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":102:17)
#loc128 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":104:36)
#loc129 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":104:31)
#loc130 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":104:17)
#loc131 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":104:47)
#loc132 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":107:13)
#loc133 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":110:13)
#loc134 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":107:17)
#loc135 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":107:33)
#loc136 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":108:13)
#loc137 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":109:30)
#loc138 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":109:17)
#loc139 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":111:13)
#loc140 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":114:13)
#loc141 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":111:17)
#loc142 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":111:33)
#loc143 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":112:13)
#loc144 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":113:30)
#loc145 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":113:17)
#loc146 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":123:5)
#loc147 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":130:5)
#loc148 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":123:8)
#loc149 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":124:5)
#loc150 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":125:9)
#loc151 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":129:9)
#loc152 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":127:32)
#loc153 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":127:40)
#loc154 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":128:26)
#loc155 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":128:13)
#loc156 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":375:1)
#loc157 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":381:1)
#loc158 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":377:5)
#loc159 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":377:14)
#loc160 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":378:5)
#loc161 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":378:14)
#loc162 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":379:5)
#loc163 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":379:14)
#loc164 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":380:5)
#loc165 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":380:14)
#loc166 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc167 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc168 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":218:19)
#loc169 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":230:23)
#loc170 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":138:1)
#loc171 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":233:1)
#loc172 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":150:13)
#loc173 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":150:17)
#loc174 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":151:13)
#loc175 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":151:32)
#loc176 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":152:13)
#loc177 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":152:35)
#loc178 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":153:13)
#loc179 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":153:35)
#loc180 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":154:13)
#loc181 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":154:45)
#loc182 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":225:13)
#loc183 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":225:44)
#loc184 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":140:5)
#loc185 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":140:11)
#loc186 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":142:12)
#loc187 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":142:5)
#loc188 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":143:5)
#loc189 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":214:5)
#loc190 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":143:8)
#loc191 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":144:5)
#loc192 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":145:9)
#loc193 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":213:9)
#loc194 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":155:13)
#loc195 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":198:21)
#loc196 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":198:20)
#loc197 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":164:39)
#loc198 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":164:48)
#loc199 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":164:61)
#loc200 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":164:32)
#loc201 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":164:17)
#loc202 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":164:72)
#loc203 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":165:17)
#loc204 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":168:17)
#loc205 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":165:21)
#loc206 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":165:37)
#loc207 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":166:17)
#loc208 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":167:21)
#loc209 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":169:24)
#loc210 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":169:25)
#loc211 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":169:34)
#loc212 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":169:37)
#loc213 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":169:51)
#loc214 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":169:17)
#loc215 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":169:52)
#loc216 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":170:38)
#loc217 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":170:17)
#loc218 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":171:43)
#loc219 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":171:17)
#loc220 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":172:42)
#loc221 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":172:36)
#loc222 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":172:17)
#loc223 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":172:50)
#loc224 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":173:17)
#loc225 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":176:17)
#loc226 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":173:26)
#loc227 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":173:58)
#loc228 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":173:59)
#loc229 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":173:68)
#loc230 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":173:82)
#loc231 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":173:21)
#loc232 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":173:88)
#loc233 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":174:17)
#loc234 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":175:21)
#loc235 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":177:17)
#loc236 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":180:17)
#loc237 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":177:28)
#loc238 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":177:42)
#loc239 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":177:21)
#loc240 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":177:61)
#loc241 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":178:17)
#loc242 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":179:21)
#loc243 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":181:39)
#loc244 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":181:53)
#loc245 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":181:59)
#loc246 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":181:32)
#loc247 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":181:17)
#loc248 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":181:63)
#loc249 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":182:17)
#loc250 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":185:17)
#loc251 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":182:21)
#loc252 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":182:37)
#loc253 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":183:17)
#loc254 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":184:21)
#loc255 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":188:35)
#loc256 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":188:49)
#loc257 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":188:62)
#loc258 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":188:80)
#loc259 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":188:83)
#loc260 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":188:30)
#loc261 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":188:17)
#loc262 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":188:84)
#loc263 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":189:17)
#loc264 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":192:17)
#loc265 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":189:21)
#loc266 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":189:35)
#loc268 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":189:51)
#loc269 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":189:65)
#loc270 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":190:17)
#loc271 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":191:21)
#loc272 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":194:43)
#loc273 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":194:29)
#loc274 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":194:17)
#loc275 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":196:36)
#loc276 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":196:31)
#loc277 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":196:17)
#loc278 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":196:47)
#loc279 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":199:13)
#loc280 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":202:13)
#loc281 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":199:17)
#loc282 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":199:33)
#loc283 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":200:13)
#loc284 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":201:30)
#loc285 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":201:17)
#loc286 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":203:13)
#loc287 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":206:13)
#loc288 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":203:17)
#loc289 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":203:33)
#loc290 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":204:13)
#loc291 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":205:30)
#loc292 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":205:17)
#loc293 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":215:5)
#loc294 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":232:5)
#loc295 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":215:8)
#loc296 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":216:5)
#loc297 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":219:5)
#loc298 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":221:5)
#loc299 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":218:9)
#loc300 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":223:9)
#loc301 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":231:9)
#loc302 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":223:17)
#loc303 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":223:25)
#loc304 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":223:12)
#loc305 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":224:9)
#loc306 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":227:9)
#loc307 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":229:9)
#loc308 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":225:32)
#loc309 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":225:40)
#loc310 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":226:26)
#loc311 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":226:13)
#loc312 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":230:13)
#loc313 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":236:1)
#loc314 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":326:1)
#loc315 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":248:13)
#loc316 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":248:17)
#loc317 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":249:13)
#loc318 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":249:32)
#loc319 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":250:13)
#loc320 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":250:35)
#loc321 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":251:13)
#loc322 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":251:35)
#loc323 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":252:13)
#loc324 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":252:45)
#loc325 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":318:13)
#loc326 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":318:44)
#loc327 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":238:5)
#loc328 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":238:11)
#loc329 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":240:12)
#loc330 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":240:5)
#loc331 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":241:5)
#loc332 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":312:5)
#loc333 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":241:8)
#loc334 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":242:5)
#loc335 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":243:9)
#loc336 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":311:9)
#loc337 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":253:13)
#loc338 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":296:21)
#loc339 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":296:20)
#loc340 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":262:39)
#loc341 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":262:48)
#loc342 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":262:61)
#loc343 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":262:32)
#loc344 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":262:17)
#loc345 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":262:72)
#loc346 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":263:17)
#loc347 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":266:17)
#loc348 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":263:21)
#loc349 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":263:37)
#loc350 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":264:17)
#loc351 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":265:21)
#loc352 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":267:24)
#loc353 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":267:25)
#loc354 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":267:34)
#loc355 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":267:37)
#loc356 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":267:51)
#loc357 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":267:17)
#loc358 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":267:52)
#loc359 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":268:38)
#loc360 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":268:17)
#loc361 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":269:43)
#loc362 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":269:17)
#loc363 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":270:42)
#loc364 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":270:36)
#loc365 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":270:17)
#loc366 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":270:50)
#loc367 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":271:17)
#loc368 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":274:17)
#loc369 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":271:26)
#loc370 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":271:58)
#loc371 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":271:59)
#loc372 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":271:68)
#loc373 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":271:82)
#loc374 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":271:21)
#loc375 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":271:88)
#loc376 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":272:17)
#loc377 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":273:21)
#loc378 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":275:17)
#loc379 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":278:17)
#loc380 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":275:28)
#loc381 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":275:42)
#loc382 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":275:21)
#loc383 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":275:61)
#loc384 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":276:17)
#loc385 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":277:21)
#loc386 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":279:39)
#loc387 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":279:53)
#loc388 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":279:59)
#loc389 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":279:32)
#loc390 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":279:17)
#loc391 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":279:63)
#loc392 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":280:17)
#loc393 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":283:17)
#loc394 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":280:21)
#loc395 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":280:37)
#loc396 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":281:17)
#loc397 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":282:21)
#loc398 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":286:35)
#loc399 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":286:49)
#loc400 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":286:62)
#loc401 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":286:80)
#loc402 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":286:83)
#loc403 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":286:30)
#loc404 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":286:17)
#loc405 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":286:84)
#loc406 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":287:17)
#loc407 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":290:17)
#loc408 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":287:21)
#loc409 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":287:35)
#loc411 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":287:51)
#loc412 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":287:65)
#loc413 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":288:17)
#loc414 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":289:21)
#loc415 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":292:43)
#loc416 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":292:29)
#loc417 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":292:17)
#loc418 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":294:36)
#loc419 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":294:31)
#loc420 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":294:17)
#loc421 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":294:47)
#loc422 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":297:13)
#loc423 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":300:13)
#loc424 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":297:17)
#loc425 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":297:33)
#loc426 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":298:13)
#loc427 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":299:30)
#loc428 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":299:17)
#loc429 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":301:13)
#loc430 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":304:13)
#loc431 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":301:17)
#loc432 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":301:33)
#loc433 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":302:13)
#loc434 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":303:30)
#loc435 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":303:17)
#loc436 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":313:5)
#loc437 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":325:5)
#loc438 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":313:8)
#loc439 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":314:5)
#loc440 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":316:9)
#loc441 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":324:9)
#loc442 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":316:17)
#loc443 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":316:25)
#loc444 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":316:12)
#loc445 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":317:9)
#loc446 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":320:9)
#loc447 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":322:9)
#loc448 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":318:32)
#loc449 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":318:40)
#loc450 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":319:26)
#loc451 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":319:13)
#loc452 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":323:23)
#loc453 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":323:13)
#loc454 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":329:1)
#loc455 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":352:1)
#loc456 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":348:13)
#loc457 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":348:44)
#loc458 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":331:5)
#loc459 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":331:11)
#loc460 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":333:12)
#loc461 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":333:5)
#loc462 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":334:5)
#loc463 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":343:5)
#loc464 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":334:8)
#loc465 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":335:5)
#loc466 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":338:5)
#loc467 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":340:5)
#loc468 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":337:19)
#loc469 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":337:9)
#loc470 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":342:16)
#loc471 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":342:9)
#loc472 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":344:5)
#loc473 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":351:5)
#loc474 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":344:8)
#loc475 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":345:5)
#loc476 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":346:9)
#loc477 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":350:9)
#loc478 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":348:32)
#loc479 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":348:40)
#loc480 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":349:26)
#loc481 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":349:13)
#loc482 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":355:1)
#loc483 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":373:1)
#loc484 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":369:13)
#loc485 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":369:44)
#loc486 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":357:5)
#loc487 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":357:11)
#loc488 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":359:12)
#loc489 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":359:5)
#loc490 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":360:5)
#loc491 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":364:5)
#loc492 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":360:8)
#loc493 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":361:5)
#loc494 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":363:16)
#loc495 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":363:9)
#loc496 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":365:5)
#loc497 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":372:5)
#loc498 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":365:8)
#loc499 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":366:5)
#loc500 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":367:9)
#loc501 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":371:9)
#loc502 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":369:32)
#loc503 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":369:40)
#loc504 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":370:26)
#loc505 = loc("CWE369_Divide_by_Zero__float_listenSocket_02.c":370:13)
#loc506 = loc(fused[#loc1, #loc2])
#loc507 = loc(fused[#loc3, #loc4])
#loc508 = loc(fused[#loc5, #loc6])
#loc509 = loc(fused[#loc7, #loc8])
#loc510 = loc(fused[#loc9, #loc10])
#loc511 = loc(fused[#loc11, #loc12])
#loc512 = loc(fused[#loc13, #loc14])
#loc513 = loc(fused[#loc15, #loc16])
#loc514 = loc(fused[#loc17, #loc18])
#loc515 = loc(fused[#loc19, #loc20])
#loc516 = loc(fused[#loc21, #loc22])
#loc517 = loc(fused[#loc23, #loc24])
#loc518 = loc(fused[#loc25, #loc26])
#loc519 = loc(fused[#loc27, #loc28])
#loc520 = loc(fused[#loc29, #loc30])
#loc521 = loc(fused[#loc31, #loc32])
#loc522 = loc(fused[#loc33, #loc34])
#loc523 = loc(fused[#loc36, #loc35])
#loc524 = loc(fused[#loc37, #loc38])
#loc525 = loc(fused[#loc40, #loc38])
#loc526 = loc(fused[#loc41, #loc42])
#loc527 = loc(fused[#loc43, #loc44])
#loc528 = loc(fused[#loc50, #loc51])
#loc529 = loc(fused[#loc52, #loc53])
#loc530 = loc(fused[#loc54, #loc55])
#loc531 = loc(fused[#loc56, #loc53])
#loc532 = loc(fused[#loc58, #loc59])
#loc533 = loc(fused[#loc61, #loc62])
#loc534 = loc(fused[#loc63, #loc64])
#loc535 = loc(fused[#loc67, #loc65])
#loc536 = loc(fused[#loc71, #loc68])
#loc537 = loc(fused[#loc75, #loc76])
#loc538 = loc(fused[#loc77, #loc78])
#loc539 = loc(fused[#loc80, #loc81])
#loc540 = loc(fused[#loc82, #loc83])
#loc541 = loc(fused[#loc84, #loc85])
#loc542 = loc(fused[#loc86, #loc78])
#loc543 = loc(fused[#loc88, #loc89])
#loc544 = loc(fused[#loc92, #loc93])
#loc545 = loc(fused[#loc94, #loc89])
#loc546 = loc(fused[#loc100, #loc101])
#loc547 = loc(fused[#loc102, #loc103])
#loc548 = loc(fused[#loc104, #loc105])
#loc549 = loc(fused[#loc106, #loc103])
#loc550 = loc(fused[#loc114, #loc115])
#loc551 = loc(fused[#loc116, #loc117])
#loc552 = loc(fused[#loc118, #loc119])
#loc553 = loc(fused[#loc121, #loc122])
#loc554 = loc(fused[#loc123, #loc117])
#loc555 = loc(fused[#loc127, #loc125])
#loc556 = loc(fused[#loc130, #loc131])
#loc557 = loc(fused[#loc132, #loc133])
#loc558 = loc(fused[#loc134, #loc135])
#loc559 = loc(fused[#loc136, #loc133])
#loc560 = loc(fused[#loc139, #loc140])
#loc561 = loc(fused[#loc141, #loc142])
#loc562 = loc(fused[#loc143, #loc140])
#loc563 = loc(fused[#loc146, #loc147])
#loc564 = loc(fused[#loc149, #loc147])
#loc565 = loc(fused[#loc150, #loc151])
#loc566 = loc(fused[#loc152, #loc153])
#loc567 = loc(fused[#loc156, #loc157])
#loc568 = loc(fused[#loc158, #loc159])
#loc569 = loc(fused[#loc160, #loc161])
#loc570 = loc(fused[#loc162, #loc163])
#loc571 = loc(fused[#loc164, #loc165])
#loc572 = loc(fused[#loc166, #loc167])
#loc573 = loc(fused[#loc170, #loc171])
#loc574 = loc(fused[#loc172, #loc173])
#loc575 = loc(fused[#loc174, #loc175])
#loc576 = loc(fused[#loc176, #loc177])
#loc577 = loc(fused[#loc178, #loc179])
#loc578 = loc(fused[#loc180, #loc181])
#loc579 = loc(fused[#loc182, #loc183])
#loc580 = loc(fused[#loc184, #loc185])
#loc581 = loc(fused[#loc187, #loc186])
#loc582 = loc(fused[#loc188, #loc189])
#loc583 = loc(fused[#loc191, #loc189])
#loc584 = loc(fused[#loc192, #loc193])
#loc585 = loc(fused[#loc194, #loc195])
#loc586 = loc(fused[#loc201, #loc202])
#loc587 = loc(fused[#loc203, #loc204])
#loc588 = loc(fused[#loc205, #loc206])
#loc589 = loc(fused[#loc207, #loc204])
#loc590 = loc(fused[#loc209, #loc210])
#loc591 = loc(fused[#loc212, #loc213])
#loc592 = loc(fused[#loc214, #loc215])
#loc593 = loc(fused[#loc217, #loc216])
#loc594 = loc(fused[#loc219, #loc218])
#loc595 = loc(fused[#loc222, #loc223])
#loc596 = loc(fused[#loc224, #loc225])
#loc597 = loc(fused[#loc227, #loc228])
#loc598 = loc(fused[#loc229, #loc230])
#loc599 = loc(fused[#loc231, #loc232])
#loc600 = loc(fused[#loc233, #loc225])
#loc601 = loc(fused[#loc235, #loc236])
#loc602 = loc(fused[#loc239, #loc240])
#loc603 = loc(fused[#loc241, #loc236])
#loc604 = loc(fused[#loc247, #loc248])
#loc605 = loc(fused[#loc249, #loc250])
#loc606 = loc(fused[#loc251, #loc252])
#loc607 = loc(fused[#loc253, #loc250])
#loc608 = loc(fused[#loc261, #loc262])
#loc609 = loc(fused[#loc263, #loc264])
#loc610 = loc(fused[#loc265, #loc266])
#loc611 = loc(fused[#loc268, #loc269])
#loc612 = loc(fused[#loc270, #loc264])
#loc613 = loc(fused[#loc274, #loc272])
#loc614 = loc(fused[#loc277, #loc278])
#loc615 = loc(fused[#loc279, #loc280])
#loc616 = loc(fused[#loc281, #loc282])
#loc617 = loc(fused[#loc283, #loc280])
#loc618 = loc(fused[#loc286, #loc287])
#loc619 = loc(fused[#loc288, #loc289])
#loc620 = loc(fused[#loc290, #loc287])
#loc621 = loc(fused[#loc293, #loc294])
#loc622 = loc(fused[#loc296, #loc297, #loc298, #loc294])
#loc623 = loc(fused[#loc300, #loc301])
#loc624 = loc(fused[#loc304, #loc303])
#loc625 = loc(fused[#loc305, #loc306, #loc307, #loc301])
#loc626 = loc(fused[#loc308, #loc309])
#loc627 = loc(fused[#loc313, #loc314])
#loc628 = loc(fused[#loc315, #loc316])
#loc629 = loc(fused[#loc317, #loc318])
#loc630 = loc(fused[#loc319, #loc320])
#loc631 = loc(fused[#loc321, #loc322])
#loc632 = loc(fused[#loc323, #loc324])
#loc633 = loc(fused[#loc325, #loc326])
#loc634 = loc(fused[#loc327, #loc328])
#loc635 = loc(fused[#loc330, #loc329])
#loc636 = loc(fused[#loc331, #loc332])
#loc637 = loc(fused[#loc334, #loc332])
#loc638 = loc(fused[#loc335, #loc336])
#loc639 = loc(fused[#loc337, #loc338])
#loc640 = loc(fused[#loc344, #loc345])
#loc641 = loc(fused[#loc346, #loc347])
#loc642 = loc(fused[#loc348, #loc349])
#loc643 = loc(fused[#loc350, #loc347])
#loc644 = loc(fused[#loc352, #loc353])
#loc645 = loc(fused[#loc355, #loc356])
#loc646 = loc(fused[#loc357, #loc358])
#loc647 = loc(fused[#loc360, #loc359])
#loc648 = loc(fused[#loc362, #loc361])
#loc649 = loc(fused[#loc365, #loc366])
#loc650 = loc(fused[#loc367, #loc368])
#loc651 = loc(fused[#loc370, #loc371])
#loc652 = loc(fused[#loc372, #loc373])
#loc653 = loc(fused[#loc374, #loc375])
#loc654 = loc(fused[#loc376, #loc368])
#loc655 = loc(fused[#loc378, #loc379])
#loc656 = loc(fused[#loc382, #loc383])
#loc657 = loc(fused[#loc384, #loc379])
#loc658 = loc(fused[#loc390, #loc391])
#loc659 = loc(fused[#loc392, #loc393])
#loc660 = loc(fused[#loc394, #loc395])
#loc661 = loc(fused[#loc396, #loc393])
#loc662 = loc(fused[#loc404, #loc405])
#loc663 = loc(fused[#loc406, #loc407])
#loc664 = loc(fused[#loc408, #loc409])
#loc665 = loc(fused[#loc411, #loc412])
#loc666 = loc(fused[#loc413, #loc407])
#loc667 = loc(fused[#loc417, #loc415])
#loc668 = loc(fused[#loc420, #loc421])
#loc669 = loc(fused[#loc422, #loc423])
#loc670 = loc(fused[#loc424, #loc425])
#loc671 = loc(fused[#loc426, #loc423])
#loc672 = loc(fused[#loc429, #loc430])
#loc673 = loc(fused[#loc431, #loc432])
#loc674 = loc(fused[#loc433, #loc430])
#loc675 = loc(fused[#loc436, #loc437])
#loc676 = loc(fused[#loc439, #loc437])
#loc677 = loc(fused[#loc440, #loc441])
#loc678 = loc(fused[#loc444, #loc443])
#loc679 = loc(fused[#loc445, #loc446, #loc447, #loc441])
#loc680 = loc(fused[#loc448, #loc449])
#loc681 = loc(fused[#loc454, #loc455])
#loc682 = loc(fused[#loc456, #loc457])
#loc683 = loc(fused[#loc458, #loc459])
#loc684 = loc(fused[#loc461, #loc460])
#loc685 = loc(fused[#loc462, #loc463])
#loc686 = loc(fused[#loc465, #loc466, #loc467, #loc463])
#loc687 = loc(fused[#loc471, #loc470])
#loc688 = loc(fused[#loc472, #loc473])
#loc689 = loc(fused[#loc475, #loc473])
#loc690 = loc(fused[#loc476, #loc477])
#loc691 = loc(fused[#loc478, #loc479])
#loc692 = loc(fused[#loc482, #loc483])
#loc693 = loc(fused[#loc484, #loc485])
#loc694 = loc(fused[#loc486, #loc487])
#loc695 = loc(fused[#loc489, #loc488])
#loc696 = loc(fused[#loc490, #loc491])
#loc697 = loc(fused[#loc493, #loc491])
#loc698 = loc(fused[#loc495, #loc494])
#loc699 = loc(fused[#loc496, #loc497])
#loc700 = loc(fused[#loc499, #loc497])
#loc701 = loc(fused[#loc500, #loc501])
#loc702 = loc(fused[#loc502, #loc503])
