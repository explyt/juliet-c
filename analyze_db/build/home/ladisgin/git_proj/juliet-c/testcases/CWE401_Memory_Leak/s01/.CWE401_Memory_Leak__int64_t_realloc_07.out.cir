!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc70 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":162:10)
#loc71 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":162:14)
#loc72 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":162:20)
#loc73 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":162:32)
#loc262 = loc(fused[#loc70, #loc71])
#loc263 = loc(fused[#loc72, #loc73])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc232)
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc233)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc234)
  cir.func private @printLongLongLine(!s64i) loc(#loc235)
  cir.func no_proto @CWE401_Memory_Leak__int64_t_realloc_07_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc237)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc238)
    cir.br ^bb1 loc(#loc239)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc232)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc17)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc18)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc240)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc241)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc20)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc21)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc21)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc22)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc22)
    %11 = cir.const #cir.int<8> : !u64i loc(#loc242)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc243)
    %13 = cir.call @realloc(%8, %12) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc244)
    cir.store %14, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc245)
    cir.br ^bb3 loc(#loc246)
  ^bb3:  // pred: ^bb2
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc29)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc30)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc30)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s64i>, !cir.bool loc(#loc247)
    cir.brcond %18 ^bb4, ^bb5 loc(#loc248)
  ^bb4:  // pred: ^bb3
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc32)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc34)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc32)
    cir.br ^bb5 loc(#loc28)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc28)
  ^bb6:  // pred: ^bb5
    %22 = cir.const #cir.int<5> : !s64i loc(#loc35)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc36)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc37)
    %25 = cir.ptr_stride(%23 : !cir.ptr<!s64i>, %24 : !s32i), !cir.ptr<!s64i> loc(#loc38)
    cir.store %22, %25 : !s64i, !cir.ptr<!s64i> loc(#loc249)
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc39)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s64i>, %27 : !s32i), !cir.ptr<!s64i> loc(#loc41)
    %29 = cir.load %28 : !cir.ptr<!s64i>, !s64i loc(#loc39)
    cir.call @printLongLongLine(%29) : (!s64i) -> () loc(#loc42)
    cir.br ^bb7 loc(#loc16)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc16)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc250)
  ^bb9:  // pred: ^bb8
    %30 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc232)
    %31 = cir.load %30 : !cir.ptr<!s32i>, !s32i loc(#loc45)
    %32 = cir.const #cir.int<5> : !s32i loc(#loc46)
    %33 = cir.cmp(eq, %31, %32) : !s32i, !cir.bool loc(#loc251)
    cir.brcond %33 ^bb10, ^bb11 loc(#loc252)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc44)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc44)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc10)
  } loc(#loc236)
  cir.func no_proto @CWE401_Memory_Leak__int64_t_realloc_07_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc254)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc255)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc52)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc256)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc257)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc56)
    cir.return loc(#loc49)
  } loc(#loc253)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc258)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc259)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc260)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc67)
  cir.func @main(%arg0: !s32i loc(fused[#loc70, #loc71]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc72, #loc73])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc262)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc263)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc69)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc74)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc74)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc75)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc76)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc76)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc77)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc64)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %8 = cir.get_global @CWE401_Memory_Leak__int64_t_realloc_07_good : !cir.ptr<!cir.func<!void ()>> loc(#loc264)
    cir.call @CWE401_Memory_Leak__int64_t_realloc_07_good() : () -> () loc(#loc79)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc65)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc66)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %13 = cir.get_global @CWE401_Memory_Leak__int64_t_realloc_07_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc265)
    cir.call @CWE401_Memory_Leak__int64_t_realloc_07_bad() : () -> () loc(#loc83)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc67)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc86)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc266)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc266)
    cir.return %17 : !s32i loc(#loc266)
  } loc(#loc261)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc88)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc267)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc269)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc95)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc270)
    cir.br ^bb1 loc(#loc271)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc232)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc100)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc272)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc273)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc102)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc103)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc103)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc104)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc104)
    %11 = cir.const #cir.int<8> : !u64i loc(#loc274)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc275)
    %13 = cir.call @realloc(%8, %12) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc102)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc276)
    cir.store %14, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc277)
    cir.br ^bb3 loc(#loc278)
  ^bb3:  // pred: ^bb2
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc111)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc112)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc112)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s64i>, !cir.bool loc(#loc279)
    cir.brcond %18 ^bb4, ^bb5 loc(#loc280)
  ^bb4:  // pred: ^bb3
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc114)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc116)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc114)
    cir.br ^bb5 loc(#loc110)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc110)
  ^bb6:  // pred: ^bb5
    %22 = cir.const #cir.int<5> : !s64i loc(#loc117)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc118)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc119)
    %25 = cir.ptr_stride(%23 : !cir.ptr<!s64i>, %24 : !s32i), !cir.ptr<!s64i> loc(#loc120)
    cir.store %22, %25 : !s64i, !cir.ptr<!s64i> loc(#loc281)
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc121)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc122)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s64i>, %27 : !s32i), !cir.ptr<!s64i> loc(#loc123)
    %29 = cir.load %28 : !cir.ptr<!s64i>, !s64i loc(#loc121)
    cir.call @printLongLongLine(%29) : (!s64i) -> () loc(#loc124)
    cir.br ^bb7 loc(#loc98)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc98)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc282)
  ^bb9:  // pred: ^bb8
    %30 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc232)
    %31 = cir.load %30 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %32 = cir.const #cir.int<5> : !s32i loc(#loc128)
    %33 = cir.cmp(ne, %31, %32) : !s32i, !cir.bool loc(#loc283)
    cir.brcond %33 ^bb10, ^bb11 loc(#loc284)
  ^bb10:  // pred: ^bb9
    %34 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc88)
    %35 = cir.cast(array_to_ptrdecay, %34 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc88)
    cir.call @printLine(%35) : (!cir.ptr<!s8i>) -> () loc(#loc132)
    cir.br ^bb12 loc(#loc130)
  ^bb11:  // pred: ^bb9
    %36 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc133)
    %37 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc134)
    %38 = cir.cast(bitcast, %37 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc134)
    cir.call @free(%38) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc133)
    cir.br ^bb12 loc(#loc126)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc126)
  ^bb13:  // pred: ^bb12
    cir.return loc(#loc92)
  } loc(#loc268)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc286)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc139)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc287)
    cir.br ^bb1 loc(#loc288)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc232)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc143)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc144)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc289)
    cir.brcond %5 ^bb2, ^bb7 loc(#loc290)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @realloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!cir.ptr<!void>, !u64i)>> loc(#loc146)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc147)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc147)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc148)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc148)
    %11 = cir.const #cir.int<8> : !u64i loc(#loc291)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc292)
    %13 = cir.call @realloc(%8, %12) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc146)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc293)
    cir.store %14, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc294)
    cir.br ^bb3 loc(#loc295)
  ^bb3:  // pred: ^bb2
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc155)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc156)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc156)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!s64i>, !cir.bool loc(#loc296)
    cir.brcond %18 ^bb4, ^bb5 loc(#loc297)
  ^bb4:  // pred: ^bb3
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc158)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc159)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc160)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc158)
    cir.br ^bb5 loc(#loc154)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc154)
  ^bb6:  // pred: ^bb5
    %22 = cir.const #cir.int<5> : !s64i loc(#loc161)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc162)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc163)
    %25 = cir.ptr_stride(%23 : !cir.ptr<!s64i>, %24 : !s32i), !cir.ptr<!s64i> loc(#loc164)
    cir.store %22, %25 : !s64i, !cir.ptr<!s64i> loc(#loc298)
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc165)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc166)
    %28 = cir.ptr_stride(%26 : !cir.ptr<!s64i>, %27 : !s32i), !cir.ptr<!s64i> loc(#loc167)
    %29 = cir.load %28 : !cir.ptr<!s64i>, !s64i loc(#loc165)
    cir.call @printLongLongLine(%29) : (!s64i) -> () loc(#loc168)
    cir.br ^bb7 loc(#loc142)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc142)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc299)
  ^bb9:  // pred: ^bb8
    %30 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc232)
    %31 = cir.load %30 : !cir.ptr<!s32i>, !s32i loc(#loc171)
    %32 = cir.const #cir.int<5> : !s32i loc(#loc172)
    %33 = cir.cmp(eq, %31, %32) : !s32i, !cir.bool loc(#loc300)
    cir.brcond %33 ^bb10, ^bb11 loc(#loc301)
  ^bb10:  // pred: ^bb9
    %34 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc174)
    %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc175)
    %36 = cir.cast(bitcast, %35 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc175)
    cir.call @free(%36) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc174)
    cir.br ^bb11 loc(#loc170)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc170)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc136)
  } loc(#loc285)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc303)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc180)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc304)
    cir.br ^bb1 loc(#loc305)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc232)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc184)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc185)
    %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc306)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc307)
  ^bb2:  // pred: ^bb1
    %6 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc189)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc189)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc190)
    cir.br ^bb4 loc(#loc187)
  ^bb3:  // pred: ^bb1
    %8 = cir.const #cir.int<100> : !s32i loc(#loc191)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc191)
    %10 = cir.const #cir.int<8> : !u64i loc(#loc191)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc191)
    %12 = cir.alloca !u8i, !cir.ptr<!u8i>, %11 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc191)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc191)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc191)
    cir.store %14, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc308)
    %15 = cir.const #cir.int<5> : !s64i loc(#loc193)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc194)
    %17 = cir.const #cir.int<0> : !s32i loc(#loc195)
    %18 = cir.ptr_stride(%16 : !cir.ptr<!s64i>, %17 : !s32i), !cir.ptr<!s64i> loc(#loc196)
    cir.store %15, %18 : !s64i, !cir.ptr<!s64i> loc(#loc309)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc197)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc198)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s64i>, %20 : !s32i), !cir.ptr<!s64i> loc(#loc199)
    %22 = cir.load %21 : !cir.ptr<!s64i>, !s64i loc(#loc197)
    cir.call @printLongLongLine(%22) : (!s64i) -> () loc(#loc200)
    cir.br ^bb4 loc(#loc183)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc183)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc310)
  ^bb6:  // pred: ^bb5
    %23 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc232)
    %24 = cir.load %23 : !cir.ptr<!s32i>, !s32i loc(#loc203)
    %25 = cir.const #cir.int<5> : !s32i loc(#loc204)
    %26 = cir.cmp(eq, %24, %25) : !s32i, !cir.bool loc(#loc311)
    cir.brcond %26 ^bb7, ^bb8 loc(#loc312)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc202)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc202)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc177)
  } loc(#loc302)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data"] {alignment = 8 : i64} loc(#loc314)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc210)
    cir.store %1, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc315)
    cir.br ^bb1 loc(#loc316)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc232)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc214)
    %4 = cir.const #cir.int<5> : !s32i loc(#loc215)
    %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc317)
    cir.brcond %5 ^bb2, ^bb3 loc(#loc318)
  ^bb2:  // pred: ^bb1
    %6 = cir.const #cir.int<100> : !s32i loc(#loc217)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc217)
    %8 = cir.const #cir.int<8> : !u64i loc(#loc217)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc217)
    %10 = cir.alloca !u8i, !cir.ptr<!u8i>, %9 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc217)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc217)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc217)
    cir.store %12, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc319)
    %13 = cir.const #cir.int<5> : !s64i loc(#loc219)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc220)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc221)
    %16 = cir.ptr_stride(%14 : !cir.ptr<!s64i>, %15 : !s32i), !cir.ptr<!s64i> loc(#loc222)
    cir.store %13, %16 : !s64i, !cir.ptr<!s64i> loc(#loc320)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc223)
    %18 = cir.const #cir.int<0> : !s32i loc(#loc224)
    %19 = cir.ptr_stride(%17 : !cir.ptr<!s64i>, %18 : !s32i), !cir.ptr<!s64i> loc(#loc225)
    %20 = cir.load %19 : !cir.ptr<!s64i>, !s64i loc(#loc223)
    cir.call @printLongLongLine(%20) : (!s64i) -> () loc(#loc226)
    cir.br ^bb3 loc(#loc213)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc213)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc321)
  ^bb5:  // pred: ^bb4
    %21 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc232)
    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc229)
    %23 = cir.const #cir.int<5> : !s32i loc(#loc230)
    %24 = cir.cmp(eq, %22, %23) : !s32i, !cir.bool loc(#loc322)
    cir.brcond %24 ^bb6, ^bb7 loc(#loc323)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc228)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc228)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc207)
  } loc(#loc313)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int64_t_realloc_07.c":0:0)
#loc1 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":25:1)
#loc2 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":25:25)
#loc3 = loc("/usr/include/stdlib.h":683:1)
#loc4 = loc("/usr/include/stdlib.h":684:14)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc9 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":29:1)
#loc10 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":47:1)
#loc11 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":31:5)
#loc12 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":31:15)
#loc13 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":32:12)
#loc14 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":32:5)
#loc15 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":33:5)
#loc16 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":41:5)
#loc17 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":33:8)
#loc18 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":33:20)
#loc19 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":34:5)
#loc20 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":36:27)
#loc21 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":36:35)
#loc22 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":36:41)
#loc23 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":36:45)
#loc24 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":36:59)
#loc25 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":36:60)
#loc26 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":36:9)
#loc27 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":37:9)
#loc28 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":37:37)
#loc29 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":37:13)
#loc30 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":37:21)
#loc31 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":37:27)
#loc32 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":37:28)
#loc33 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":37:34)
#loc34 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":37:33)
#loc35 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":39:19)
#loc36 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":39:9)
#loc37 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":39:14)
#loc38 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":39:15)
#loc39 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":40:27)
#loc40 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":40:32)
#loc41 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":40:33)
#loc42 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":40:9)
#loc43 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":42:5)
#loc44 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":46:5)
#loc45 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":42:8)
#loc46 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":42:20)
#loc47 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":43:5)
#loc48 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":145:1)
#loc49 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":151:1)
#loc50 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":147:5)
#loc51 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":147:14)
#loc52 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":148:5)
#loc53 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":148:14)
#loc54 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":149:5)
#loc55 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":149:14)
#loc56 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":150:5)
#loc57 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":150:14)
#loc58 = loc("/usr/include/stdlib.h":575:1)
#loc59 = loc("/usr/include/stdlib.h":575:41)
#loc60 = loc("/usr/include/time.h":76:1)
#loc61 = loc("/usr/include/time.h":76:38)
#loc62 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc63 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc64 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":167:15)
#loc65 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":169:15)
#loc66 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":172:15)
#loc67 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":174:15)
#loc68 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":162:1)
#loc69 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":177:1)
#loc74 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":163:1)
#loc75 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":165:27)
#loc76 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":165:22)
#loc77 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":165:5)
#loc78 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":167:5)
#loc79 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":168:5)
#loc80 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":168:49)
#loc81 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":169:5)
#loc82 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":172:5)
#loc83 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":173:5)
#loc84 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":173:48)
#loc85 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":174:5)
#loc86 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":176:12)
#loc87 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":176:5)
#loc88 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":70:19)
#loc89 = loc("/usr/include/stdlib.h":687:1)
#loc90 = loc("/usr/include/stdlib.h":687:32)
#loc91 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":54:1)
#loc92 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":77:1)
#loc93 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":56:5)
#loc94 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":56:15)
#loc95 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":57:12)
#loc96 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":57:5)
#loc97 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":58:5)
#loc98 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":66:5)
#loc99 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":58:8)
#loc100 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":58:20)
#loc101 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":59:5)
#loc102 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":61:27)
#loc103 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":61:35)
#loc104 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":61:41)
#loc105 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":61:45)
#loc106 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":61:59)
#loc107 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":61:60)
#loc108 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":61:9)
#loc109 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":62:9)
#loc110 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":62:37)
#loc111 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":62:13)
#loc112 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":62:21)
#loc113 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":62:27)
#loc114 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":62:28)
#loc115 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":62:34)
#loc116 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":62:33)
#loc117 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":64:19)
#loc118 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":64:9)
#loc119 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":64:14)
#loc120 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":64:15)
#loc121 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":65:27)
#loc122 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":65:32)
#loc123 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":65:33)
#loc124 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":65:9)
#loc125 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":67:5)
#loc126 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":76:5)
#loc127 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":67:8)
#loc128 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":67:20)
#loc129 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":68:5)
#loc130 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":71:5)
#loc131 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":73:5)
#loc132 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":70:9)
#loc133 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":75:9)
#loc134 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":75:14)
#loc135 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":80:1)
#loc136 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":98:1)
#loc137 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":82:5)
#loc138 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":82:15)
#loc139 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":83:12)
#loc140 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":83:5)
#loc141 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":84:5)
#loc142 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":92:5)
#loc143 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":84:8)
#loc144 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":84:20)
#loc145 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":85:5)
#loc146 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":87:27)
#loc147 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":87:35)
#loc148 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":87:41)
#loc149 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":87:45)
#loc150 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":87:59)
#loc151 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":87:60)
#loc152 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":87:9)
#loc153 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":88:9)
#loc154 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":88:37)
#loc155 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":88:13)
#loc156 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":88:21)
#loc157 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":88:27)
#loc158 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":88:28)
#loc159 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":88:34)
#loc160 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":88:33)
#loc161 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":90:19)
#loc162 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":90:9)
#loc163 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":90:14)
#loc164 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":90:15)
#loc165 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":91:27)
#loc166 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":91:32)
#loc167 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":91:33)
#loc168 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":91:9)
#loc169 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":93:5)
#loc170 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":97:5)
#loc171 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":93:8)
#loc172 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":93:20)
#loc173 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":94:5)
#loc174 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":96:9)
#loc175 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":96:14)
#loc176 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":101:1)
#loc177 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":123:1)
#loc178 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":103:5)
#loc179 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":103:15)
#loc180 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":104:12)
#loc181 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":104:5)
#loc182 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":105:5)
#loc183 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":117:5)
#loc184 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":105:8)
#loc185 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":105:20)
#loc186 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":106:5)
#loc187 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":109:5)
#loc188 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":111:5)
#loc189 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":108:19)
#loc190 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":108:9)
#loc191 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":113:27)
#loc192 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":113:9)
#loc193 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":115:19)
#loc194 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":115:9)
#loc195 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":115:14)
#loc196 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":115:15)
#loc197 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":116:27)
#loc198 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":116:32)
#loc199 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":116:33)
#loc200 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":116:9)
#loc201 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":118:5)
#loc202 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":122:5)
#loc203 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":118:8)
#loc204 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":118:20)
#loc205 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":119:5)
#loc206 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":126:1)
#loc207 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":143:1)
#loc208 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":128:5)
#loc209 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":128:15)
#loc210 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":129:12)
#loc211 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":129:5)
#loc212 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":130:5)
#loc213 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":137:5)
#loc214 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":130:8)
#loc215 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":130:20)
#loc216 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":131:5)
#loc217 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":133:27)
#loc218 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":133:9)
#loc219 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":135:19)
#loc220 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":135:9)
#loc221 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":135:14)
#loc222 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":135:15)
#loc223 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":136:27)
#loc224 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":136:32)
#loc225 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":136:33)
#loc226 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":136:9)
#loc227 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":138:5)
#loc228 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":142:5)
#loc229 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":138:8)
#loc230 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":138:20)
#loc231 = loc("CWE401_Memory_Leak__int64_t_realloc_07.c":139:5)
#loc232 = loc(fused[#loc1, #loc2])
#loc233 = loc(fused[#loc3, #loc4])
#loc234 = loc(fused[#loc5, #loc6])
#loc235 = loc(fused[#loc7, #loc8])
#loc236 = loc(fused[#loc9, #loc10])
#loc237 = loc(fused[#loc11, #loc12])
#loc238 = loc(fused[#loc14, #loc13])
#loc239 = loc(fused[#loc15, #loc16])
#loc240 = loc(fused[#loc17, #loc18])
#loc241 = loc(fused[#loc19, #loc16])
#loc242 = loc(fused[#loc23, #loc24])
#loc243 = loc(fused[#loc22, #loc24])
#loc244 = loc(fused[#loc20, #loc25])
#loc245 = loc(fused[#loc26, #loc25])
#loc246 = loc(fused[#loc27, #loc28])
#loc247 = loc(fused[#loc29, #loc30])
#loc248 = loc(fused[#loc31, #loc28])
#loc249 = loc(fused[#loc36, #loc35])
#loc250 = loc(fused[#loc43, #loc44])
#loc251 = loc(fused[#loc45, #loc46])
#loc252 = loc(fused[#loc47, #loc44])
#loc253 = loc(fused[#loc48, #loc49])
#loc254 = loc(fused[#loc50, #loc51])
#loc255 = loc(fused[#loc52, #loc53])
#loc256 = loc(fused[#loc54, #loc55])
#loc257 = loc(fused[#loc56, #loc57])
#loc258 = loc(fused[#loc58, #loc59])
#loc259 = loc(fused[#loc60, #loc61])
#loc260 = loc(fused[#loc62, #loc63])
#loc261 = loc(fused[#loc68, #loc69])
#loc264 = loc(fused[#loc79, #loc80])
#loc265 = loc(fused[#loc83, #loc84])
#loc266 = loc(fused[#loc87, #loc86])
#loc267 = loc(fused[#loc89, #loc90])
#loc268 = loc(fused[#loc91, #loc92])
#loc269 = loc(fused[#loc93, #loc94])
#loc270 = loc(fused[#loc96, #loc95])
#loc271 = loc(fused[#loc97, #loc98])
#loc272 = loc(fused[#loc99, #loc100])
#loc273 = loc(fused[#loc101, #loc98])
#loc274 = loc(fused[#loc105, #loc106])
#loc275 = loc(fused[#loc104, #loc106])
#loc276 = loc(fused[#loc102, #loc107])
#loc277 = loc(fused[#loc108, #loc107])
#loc278 = loc(fused[#loc109, #loc110])
#loc279 = loc(fused[#loc111, #loc112])
#loc280 = loc(fused[#loc113, #loc110])
#loc281 = loc(fused[#loc118, #loc117])
#loc282 = loc(fused[#loc125, #loc126])
#loc283 = loc(fused[#loc127, #loc128])
#loc284 = loc(fused[#loc129, #loc130, #loc131, #loc126])
#loc285 = loc(fused[#loc135, #loc136])
#loc286 = loc(fused[#loc137, #loc138])
#loc287 = loc(fused[#loc140, #loc139])
#loc288 = loc(fused[#loc141, #loc142])
#loc289 = loc(fused[#loc143, #loc144])
#loc290 = loc(fused[#loc145, #loc142])
#loc291 = loc(fused[#loc149, #loc150])
#loc292 = loc(fused[#loc148, #loc150])
#loc293 = loc(fused[#loc146, #loc151])
#loc294 = loc(fused[#loc152, #loc151])
#loc295 = loc(fused[#loc153, #loc154])
#loc296 = loc(fused[#loc155, #loc156])
#loc297 = loc(fused[#loc157, #loc154])
#loc298 = loc(fused[#loc162, #loc161])
#loc299 = loc(fused[#loc169, #loc170])
#loc300 = loc(fused[#loc171, #loc172])
#loc301 = loc(fused[#loc173, #loc170])
#loc302 = loc(fused[#loc176, #loc177])
#loc303 = loc(fused[#loc178, #loc179])
#loc304 = loc(fused[#loc181, #loc180])
#loc305 = loc(fused[#loc182, #loc183])
#loc306 = loc(fused[#loc184, #loc185])
#loc307 = loc(fused[#loc186, #loc187, #loc188, #loc183])
#loc308 = loc(fused[#loc192, #loc191])
#loc309 = loc(fused[#loc194, #loc193])
#loc310 = loc(fused[#loc201, #loc202])
#loc311 = loc(fused[#loc203, #loc204])
#loc312 = loc(fused[#loc205, #loc202])
#loc313 = loc(fused[#loc206, #loc207])
#loc314 = loc(fused[#loc208, #loc209])
#loc315 = loc(fused[#loc211, #loc210])
#loc316 = loc(fused[#loc212, #loc213])
#loc317 = loc(fused[#loc214, #loc215])
#loc318 = loc(fused[#loc216, #loc213])
#loc319 = loc(fused[#loc218, #loc217])
#loc320 = loc(fused[#loc220, #loc219])
#loc321 = loc(fused[#loc227, #loc228])
#loc322 = loc(fused[#loc229, #loc230])
#loc323 = loc(fused[#loc231, #loc228])
