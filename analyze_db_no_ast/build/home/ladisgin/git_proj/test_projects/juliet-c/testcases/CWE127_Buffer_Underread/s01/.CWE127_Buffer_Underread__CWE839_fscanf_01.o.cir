!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_fscanf_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc100)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc101)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private  @printIntLine(!s32i) loc(#loc102)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc103)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"ERROR: Array index is too big.\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc10)
  cir.func no_proto  @CWE127_Buffer_Underread__CWE839_fscanf_01_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc105)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc16)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc106)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc18)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc101)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc19)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc18)
    cir.scope {
      %9 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc108)
      %10 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc108)
      cir.store %10, %9 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc108)
      cir.scope {
        %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc26)
        %12 = cir.const #cir.int<10> : !s32i loc(#loc27)
        %13 = cir.cmp(lt, %11, %12) : !s32i, !s32i loc(#loc110)
        %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc28)
        cir.if %14 {
          %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc32)
          %16 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc33)
          %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc33)
          %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc33)
          cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc34)
        } else {
          %15 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc10)
          %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc10)
          cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc35)
        } loc(#loc111)
      } loc(#loc109)
    } loc(#loc107)
    cir.return loc(#loc12)
  } loc(#loc104)
  cir.func no_proto  @CWE127_Buffer_Underread__CWE839_fscanf_01_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc113)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc114)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc37)
  } loc(#loc112)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc116)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc46)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc47)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc117)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc49)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc118)
    cir.scope {
      %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc120)
      %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc120)
      cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc120)
      cir.scope {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc57)
        %7 = cir.const #cir.int<10> : !s32i loc(#loc58)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !s32i loc(#loc122)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc59)
        cir.if %9 {
          %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc63)
          %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc64)
          %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc64)
          %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc64)
          cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc65)
        } else {
          %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc66)
          %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc66)
          cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc67)
        } loc(#loc123)
      } loc(#loc121)
    } loc(#loc119)
    cir.return loc(#loc43)
  } loc(#loc115)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc68)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc125)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc73)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc74)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc126)
    %3 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc76)
    %4 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc101)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc77)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc78)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc78)
    %8 = cir.call @__isoc99_fscanf(%5, %7, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc76)
    cir.scope {
      %9 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc128)
      %10 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc128)
      cir.store %10, %9 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc128)
      cir.scope {
        %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc85)
        %12 = cir.const #cir.int<0> : !s32i loc(#loc86)
        %13 = cir.cmp(ge, %11, %12) : !s32i, !s32i loc(#loc130)
        %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc87)
        %15 = cir.ternary(%14, true {
          %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc89)
          %17 = cir.const #cir.int<10> : !s32i loc(#loc90)
          %18 = cir.cmp(lt, %16, %17) : !s32i, !s32i loc(#loc131)
          %19 = cir.cast(int_to_bool, %18 : !s32i), !cir.bool loc(#loc92)
          %20 = cir.ternary(%19, true {
            %21 = cir.const #true loc(#loc88)
            cir.yield %21 : !cir.bool loc(#loc88)
          }, false {
            %21 = cir.const #false loc(#loc88)
            cir.yield %21 : !cir.bool loc(#loc88)
          }) : (!cir.bool) -> !cir.bool loc(#loc88)
          cir.yield %20 : !cir.bool loc(#loc88)
        }, false {
          %16 = cir.const #false loc(#loc88)
          cir.yield %16 : !cir.bool loc(#loc88)
        }) : (!cir.bool) -> !cir.bool loc(#loc88)
        cir.if %15 {
          %16 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc96)
          %17 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc97)
          %18 = cir.ptr_stride(%17 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc97)
          %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc97)
          cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc98)
        } else {
          %16 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc68)
          %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc68)
          cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc99)
        } loc(#loc132)
      } loc(#loc129)
    } loc(#loc127)
    cir.return loc(#loc70)
  } loc(#loc124)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE127_Buffer_Underread/s01/CWE127_Buffer_Underread__CWE839_fscanf_01.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":28:19)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":39:23)
#loc11 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":22:1)
#loc12 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":42:1)
#loc13 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":24:5)
#loc14 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":24:9)
#loc15 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":26:13)
#loc16 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":26:12)
#loc17 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":26:5)
#loc18 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":28:5)
#loc19 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":28:12)
#loc20 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":29:5)
#loc21 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":41:5)
#loc22 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":30:9)
#loc23 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":30:30)
#loc24 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":33:9)
#loc25 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":40:9)
#loc26 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":33:13)
#loc27 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":33:20)
#loc28 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":33:18)
#loc29 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":34:9)
#loc30 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":36:9)
#loc31 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":38:9)
#loc32 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":35:33)
#loc33 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":35:26)
#loc34 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":35:13)
#loc35 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":39:13)
#loc36 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":94:1)
#loc37 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":98:1)
#loc38 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":96:5)
#loc39 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":96:13)
#loc40 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":97:5)
#loc41 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":97:13)
#loc42 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":49:1)
#loc43 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":70:1)
#loc44 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":51:5)
#loc45 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":51:9)
#loc46 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":53:13)
#loc47 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":53:12)
#loc48 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":53:5)
#loc49 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":56:12)
#loc50 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":56:5)
#loc51 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":57:5)
#loc52 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":69:5)
#loc53 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":58:9)
#loc54 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":58:30)
#loc55 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":61:9)
#loc56 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":68:9)
#loc57 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":61:13)
#loc58 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":61:20)
#loc59 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":61:18)
#loc60 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":62:9)
#loc61 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":64:9)
#loc62 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":66:9)
#loc63 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":63:33)
#loc64 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":63:26)
#loc65 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":63:13)
#loc66 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":67:23)
#loc67 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":67:13)
#loc68 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":89:23)
#loc69 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":73:1)
#loc70 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":92:1)
#loc71 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":75:5)
#loc72 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":75:9)
#loc73 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":77:13)
#loc74 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":77:12)
#loc75 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":77:5)
#loc76 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":79:5)
#loc77 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":79:12)
#loc78 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":79:19)
#loc79 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":80:5)
#loc80 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":91:5)
#loc81 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":81:9)
#loc82 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":81:30)
#loc83 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":83:9)
#loc84 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":90:9)
#loc85 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":83:13)
#loc86 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":83:21)
#loc87 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":83:18)
#loc88 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":83:23)
#loc89 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":83:26)
#loc90 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":83:34)
#loc91 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":83:36)
#loc92 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":83:31)
#loc93 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":84:9)
#loc94 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":86:9)
#loc95 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":88:9)
#loc96 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":85:33)
#loc97 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":85:26)
#loc98 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":85:13)
#loc99 = loc("CWE127_Buffer_Underread__CWE839_fscanf_01.c":89:13)
#loc100 = loc(fused[#loc1, #loc2])
#loc101 = loc(fused[#loc3, #loc4])
#loc102 = loc(fused[#loc6, #loc7])
#loc103 = loc(fused[#loc8, #loc9])
#loc104 = loc(fused[#loc11, #loc12])
#loc105 = loc(fused[#loc13, #loc14])
#loc106 = loc(fused[#loc17, #loc15])
#loc107 = loc(fused[#loc20, #loc21])
#loc108 = loc(fused[#loc22, #loc23])
#loc109 = loc(fused[#loc24, #loc25])
#loc110 = loc(fused[#loc26, #loc27])
#loc111 = loc(fused[#loc29, #loc30, #loc31, #loc25])
#loc112 = loc(fused[#loc36, #loc37])
#loc113 = loc(fused[#loc38, #loc39])
#loc114 = loc(fused[#loc40, #loc41])
#loc115 = loc(fused[#loc42, #loc43])
#loc116 = loc(fused[#loc44, #loc45])
#loc117 = loc(fused[#loc48, #loc46])
#loc118 = loc(fused[#loc50, #loc49])
#loc119 = loc(fused[#loc51, #loc52])
#loc120 = loc(fused[#loc53, #loc54])
#loc121 = loc(fused[#loc55, #loc56])
#loc122 = loc(fused[#loc57, #loc58])
#loc123 = loc(fused[#loc60, #loc61, #loc62, #loc56])
#loc124 = loc(fused[#loc69, #loc70])
#loc125 = loc(fused[#loc71, #loc72])
#loc126 = loc(fused[#loc75, #loc73])
#loc127 = loc(fused[#loc79, #loc80])
#loc128 = loc(fused[#loc81, #loc82])
#loc129 = loc(fused[#loc83, #loc84])
#loc130 = loc(fused[#loc85, #loc86])
#loc131 = loc(fused[#loc89, #loc91])
#loc132 = loc(fused[#loc93, #loc94, #loc95, #loc84])
