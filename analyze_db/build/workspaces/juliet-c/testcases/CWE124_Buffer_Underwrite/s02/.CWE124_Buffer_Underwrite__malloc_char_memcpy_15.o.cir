!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc231)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc232)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc233)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE124_Buffer_Underwrite__malloc_char_memcpy_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc235)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc12)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc236)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc16)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc239)
            %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc22)
            %5 = cir.const #cir.int<100> : !s32i loc(#loc23)
            %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc23)
            %7 = cir.const #cir.int<1> : !u64i loc(#loc240)
            %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc241)
            %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc22)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc242)
            cir.store %10, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc239)
            cir.scope {
              %29 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
              %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
              %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc29)
              %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!s8i>, !cir.bool loc(#loc244)
              cir.if %32 {
                %33 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc31)
                %34 = cir.const #cir.int<1> : !s32i loc(#loc32)
                %35 = cir.unary(minus, %34) nsw : !s32i, !s32i loc(#loc33)
                cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
              } loc(#loc245)
            } loc(#loc243)
            %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
            %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc34)
            %13 = cir.const #cir.int<65> : !s32i loc(#loc35)
            %14 = cir.const #cir.int<100> : !s32i loc(#loc36)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc37)
            %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc36)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc36)
            cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc246)
            %18 = cir.const #cir.int<0> : !s32i loc(#loc40)
            %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc40)
            %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
            %21 = cir.const #cir.int<100> : !s32i loc(#loc42)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc43)
            %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc42)
            %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc44)
            cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc247)
            %25 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
            %26 = cir.const #cir.int<8> : !s32i loc(#loc46)
            %27 = cir.unary(minus, %26) : !s32i, !s32i loc(#loc46)
            %28 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %27 : !s32i), !cir.ptr<!s8i> loc(#loc47)
            cir.store %28, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc248)
          } loc(#loc238)
          cir.break loc(#loc49)
        } loc(#loc17)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc7)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc7)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc51)
          cir.break loc(#loc52)
        } loc(#loc50)
        cir.yield loc(#loc14)
      } loc(#loc14)
    } loc(#loc237)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc250)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc57)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc57)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc58)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc59)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc60)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc59)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc59)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc251)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc63)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc63)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc64)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc65)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc64)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc66)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc66)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc252)
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc67)
      %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc68)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc68)
      %21 = cir.const #cir.int<100> : !s32i loc(#loc69)
      %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc69)
      %23 = cir.const #cir.int<1> : !u64i loc(#loc253)
      %24 = cir.binop(mul, %22, %23) : !u64i loc(#loc254)
      cir.libc.memcpy %24 bytes from %20 to %18 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc255)
      %25 = cir.const #cir.int<0> : !s32i loc(#loc74)
      %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc74)
      %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
      %28 = cir.const #cir.int<100> : !s32i loc(#loc76)
      %29 = cir.const #cir.int<1> : !s32i loc(#loc77)
      %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc76)
      %31 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc78)
      cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc256)
      %32 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
      cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    } loc(#loc249)
    cir.return loc(#loc9)
  } loc(#loc234)
  cir.func no_proto @CWE124_Buffer_Underwrite__malloc_char_memcpy_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc258)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc83)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc259)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc85)
    cir.return loc(#loc82)
  } loc(#loc257)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc261)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc91)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc262)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc95)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc97)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc97)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc98)
          cir.break loc(#loc99)
        } loc(#loc96)
        cir.case(default, []) {
          cir.scope {
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc265)
            %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc105)
            %5 = cir.const #cir.int<100> : !s32i loc(#loc106)
            %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc106)
            %7 = cir.const #cir.int<1> : !u64i loc(#loc266)
            %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc267)
            %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc105)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc268)
            cir.store %10, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc265)
            cir.scope {
              %26 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
              %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc112)
              %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc112)
              %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc270)
              cir.if %29 {
                %30 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc114)
                %31 = cir.const #cir.int<1> : !s32i loc(#loc115)
                %32 = cir.unary(minus, %31) nsw : !s32i, !s32i loc(#loc116)
                cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc114)
              } loc(#loc271)
            } loc(#loc269)
            %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
            %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc117)
            %13 = cir.const #cir.int<65> : !s32i loc(#loc118)
            %14 = cir.const #cir.int<100> : !s32i loc(#loc119)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc120)
            %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc119)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc119)
            cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc272)
            %18 = cir.const #cir.int<0> : !s32i loc(#loc123)
            %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc123)
            %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc124)
            %21 = cir.const #cir.int<100> : !s32i loc(#loc125)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc126)
            %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc125)
            %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc127)
            cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc273)
            %25 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
            cir.store %25, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc274)
          } loc(#loc264)
          cir.break loc(#loc130)
        } loc(#loc100)
        cir.yield loc(#loc93)
      } loc(#loc93)
    } loc(#loc263)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc276)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc135)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc135)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc136)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc137)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc138)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc137)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc137)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc277)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc141)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc141)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc142)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc143)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc142)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc144)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc144)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc278)
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc145)
      %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc146)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc146)
      %21 = cir.const #cir.int<100> : !s32i loc(#loc147)
      %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc147)
      %23 = cir.const #cir.int<1> : !u64i loc(#loc279)
      %24 = cir.binop(mul, %22, %23) : !u64i loc(#loc280)
      cir.libc.memcpy %24 bytes from %20 to %18 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc281)
      %25 = cir.const #cir.int<0> : !s32i loc(#loc152)
      %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc152)
      %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc153)
      %28 = cir.const #cir.int<100> : !s32i loc(#loc154)
      %29 = cir.const #cir.int<1> : !s32i loc(#loc155)
      %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc154)
      %31 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc156)
      cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc282)
      %32 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
      cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc158)
    } loc(#loc275)
    cir.return loc(#loc88)
  } loc(#loc260)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc284)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc163)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc285)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc167)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc288)
            %4 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc173)
            %5 = cir.const #cir.int<100> : !s32i loc(#loc174)
            %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc174)
            %7 = cir.const #cir.int<1> : !u64i loc(#loc289)
            %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc290)
            %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc173)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc291)
            cir.store %10, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc288)
            cir.scope {
              %26 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
              %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc180)
              %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc180)
              %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc293)
              cir.if %29 {
                %30 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc182)
                %31 = cir.const #cir.int<1> : !s32i loc(#loc183)
                %32 = cir.unary(minus, %31) nsw : !s32i, !s32i loc(#loc184)
                cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc182)
              } loc(#loc294)
            } loc(#loc292)
            %11 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc185)
            %12 = cir.cast(bitcast, %11 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc185)
            %13 = cir.const #cir.int<65> : !s32i loc(#loc186)
            %14 = cir.const #cir.int<100> : !s32i loc(#loc187)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc188)
            %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc187)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc187)
            cir.libc.memset %17 bytes from %12 set to %13 : !cir.ptr<!void>, !s32i, !u64i loc(#loc295)
            %18 = cir.const #cir.int<0> : !s32i loc(#loc191)
            %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc191)
            %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc192)
            %21 = cir.const #cir.int<100> : !s32i loc(#loc193)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc194)
            %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc193)
            %24 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %23 : !s32i), !cir.ptr<!s8i> loc(#loc195)
            cir.store %19, %24 : !s8i, !cir.ptr<!s8i> loc(#loc296)
            %25 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc196)
            cir.store %25, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc297)
          } loc(#loc287)
          cir.break loc(#loc198)
        } loc(#loc168)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc200)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc200)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc201)
          cir.break loc(#loc202)
        } loc(#loc199)
        cir.yield loc(#loc165)
      } loc(#loc165)
    } loc(#loc286)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc299)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc207)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc207)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc208)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc209)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc210)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc209)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc209)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc300)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc213)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc213)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc214)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc215)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc214)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc216)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc216)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc301)
      %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc217)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc217)
      %19 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc218)
      %20 = cir.cast(bitcast, %19 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc218)
      %21 = cir.const #cir.int<100> : !s32i loc(#loc219)
      %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc219)
      %23 = cir.const #cir.int<1> : !u64i loc(#loc302)
      %24 = cir.binop(mul, %22, %23) : !u64i loc(#loc303)
      cir.libc.memcpy %24 bytes from %20 to %18 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc304)
      %25 = cir.const #cir.int<0> : !s32i loc(#loc224)
      %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc224)
      %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc225)
      %28 = cir.const #cir.int<100> : !s32i loc(#loc226)
      %29 = cir.const #cir.int<1> : !s32i loc(#loc227)
      %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc226)
      %31 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc228)
      cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc305)
      %32 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc229)
      cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc230)
    } loc(#loc298)
    cir.return loc(#loc160)
  } loc(#loc283)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE124_Buffer_Underwrite/s02/CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":41:19)
#loc8 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":23:1)
#loc9 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":56:1)
#loc10 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":25:5)
#loc11 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":25:12)
#loc12 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":26:12)
#loc13 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":26:5)
#loc14 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":27:5)
#loc15 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":43:5)
#loc16 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":27:12)
#loc17 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":29:5)
#loc18 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":30:5)
#loc19 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":37:5)
#loc20 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":31:9)
#loc21 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":31:60)
#loc22 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":31:37)
#loc23 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":31:44)
#loc24 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":31:48)
#loc25 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":31:59)
#loc26 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":32:9)
#loc27 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":32:43)
#loc28 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":32:13)
#loc29 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":32:27)
#loc30 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":32:33)
#loc31 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":32:34)
#loc32 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":32:40)
#loc33 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":32:39)
#loc34 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":33:16)
#loc35 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":33:28)
#loc36 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":33:33)
#loc37 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":33:37)
#loc38 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":33:9)
#loc39 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":33:38)
#loc40 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":34:29)
#loc41 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":34:9)
#loc42 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":34:20)
#loc43 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":34:24)
#loc44 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":34:25)
#loc45 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":36:16)
#loc46 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":36:29)
#loc47 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":36:27)
#loc48 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":36:9)
#loc49 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":38:5)
#loc50 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":39:5)
#loc51 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":41:9)
#loc52 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":42:9)
#loc53 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":44:5)
#loc54 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":55:5)
#loc55 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":45:9)
#loc56 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":45:24)
#loc57 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":46:16)
#loc58 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":46:24)
#loc59 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":46:29)
#loc60 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":46:33)
#loc61 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":46:9)
#loc62 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":46:34)
#loc63 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":47:25)
#loc64 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":47:16)
#loc65 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":47:20)
#loc66 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":47:9)
#loc67 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":49:16)
#loc68 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":49:22)
#loc69 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":49:30)
#loc70 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":49:34)
#loc71 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":49:45)
#loc72 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":49:9)
#loc73 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":49:46)
#loc74 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":51:23)
#loc75 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":51:9)
#loc76 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":51:14)
#loc77 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":51:18)
#loc78 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":51:19)
#loc79 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":52:19)
#loc80 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":52:9)
#loc81 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":134:1)
#loc82 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":138:1)
#loc83 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":136:5)
#loc84 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":136:14)
#loc85 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":137:5)
#loc86 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":137:14)
#loc87 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":63:1)
#loc88 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":96:1)
#loc89 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":65:5)
#loc90 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":65:12)
#loc91 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":66:12)
#loc92 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":66:5)
#loc93 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":67:5)
#loc94 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":83:5)
#loc95 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":67:12)
#loc96 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":69:5)
#loc97 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":71:19)
#loc98 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":71:9)
#loc99 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":72:9)
#loc100 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":73:5)
#loc101 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":74:5)
#loc102 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":81:5)
#loc103 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":75:9)
#loc104 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":75:60)
#loc105 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":75:37)
#loc106 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":75:44)
#loc107 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":75:48)
#loc108 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":75:59)
#loc109 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":76:9)
#loc110 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":76:43)
#loc111 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":76:13)
#loc112 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":76:27)
#loc113 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":76:33)
#loc114 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":76:34)
#loc115 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":76:40)
#loc116 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":76:39)
#loc117 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":77:16)
#loc118 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":77:28)
#loc119 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":77:33)
#loc120 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":77:37)
#loc121 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":77:9)
#loc122 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":77:38)
#loc123 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":78:29)
#loc124 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":78:9)
#loc125 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":78:20)
#loc126 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":78:24)
#loc127 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":78:25)
#loc128 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":80:16)
#loc129 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":80:9)
#loc130 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":82:5)
#loc131 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":84:5)
#loc132 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":95:5)
#loc133 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":85:9)
#loc134 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":85:24)
#loc135 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":86:16)
#loc136 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":86:24)
#loc137 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":86:29)
#loc138 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":86:33)
#loc139 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":86:9)
#loc140 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":86:34)
#loc141 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":87:25)
#loc142 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":87:16)
#loc143 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":87:20)
#loc144 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":87:9)
#loc145 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":89:16)
#loc146 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":89:22)
#loc147 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":89:30)
#loc148 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":89:34)
#loc149 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":89:45)
#loc150 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":89:9)
#loc151 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":89:46)
#loc152 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":91:23)
#loc153 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":91:9)
#loc154 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":91:14)
#loc155 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":91:18)
#loc156 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":91:19)
#loc157 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":92:19)
#loc158 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":92:9)
#loc159 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":99:1)
#loc160 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":132:1)
#loc161 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":101:5)
#loc162 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":101:12)
#loc163 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":102:12)
#loc164 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":102:5)
#loc165 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":103:5)
#loc166 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":119:5)
#loc167 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":103:12)
#loc168 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":105:5)
#loc169 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":106:5)
#loc170 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":113:5)
#loc171 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":107:9)
#loc172 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":107:60)
#loc173 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":107:37)
#loc174 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":107:44)
#loc175 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":107:48)
#loc176 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":107:59)
#loc177 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":108:9)
#loc178 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":108:43)
#loc179 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":108:13)
#loc180 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":108:27)
#loc181 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":108:33)
#loc182 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":108:34)
#loc183 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":108:40)
#loc184 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":108:39)
#loc185 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":109:16)
#loc186 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":109:28)
#loc187 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":109:33)
#loc188 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":109:37)
#loc189 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":109:9)
#loc190 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":109:38)
#loc191 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":110:29)
#loc192 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":110:9)
#loc193 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":110:20)
#loc194 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":110:24)
#loc195 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":110:25)
#loc196 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":112:16)
#loc197 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":112:9)
#loc198 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":114:5)
#loc199 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":115:5)
#loc200 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":117:19)
#loc201 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":117:9)
#loc202 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":118:9)
#loc203 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":120:5)
#loc204 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":131:5)
#loc205 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":121:9)
#loc206 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":121:24)
#loc207 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":122:16)
#loc208 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":122:24)
#loc209 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":122:29)
#loc210 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":122:33)
#loc211 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":122:9)
#loc212 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":122:34)
#loc213 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":123:25)
#loc214 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":123:16)
#loc215 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":123:20)
#loc216 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":123:9)
#loc217 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":125:16)
#loc218 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":125:22)
#loc219 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":125:30)
#loc220 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":125:34)
#loc221 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":125:45)
#loc222 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":125:9)
#loc223 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":125:46)
#loc224 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":127:23)
#loc225 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":127:9)
#loc226 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":127:14)
#loc227 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":127:18)
#loc228 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":127:19)
#loc229 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":128:19)
#loc230 = loc("CWE124_Buffer_Underwrite__malloc_char_memcpy_15.c":128:9)
#loc231 = loc(fused[#loc1, #loc2])
#loc232 = loc(fused[#loc3, #loc4])
#loc233 = loc(fused[#loc5, #loc6])
#loc234 = loc(fused[#loc8, #loc9])
#loc235 = loc(fused[#loc10, #loc11])
#loc236 = loc(fused[#loc13, #loc12])
#loc237 = loc(fused[#loc14, #loc15])
#loc238 = loc(fused[#loc18, #loc19])
#loc239 = loc(fused[#loc20, #loc21])
#loc240 = loc(fused[#loc24, #loc25])
#loc241 = loc(fused[#loc23, #loc25])
#loc242 = loc(fused[#loc22, #loc21])
#loc243 = loc(fused[#loc26, #loc27])
#loc244 = loc(fused[#loc28, #loc29])
#loc245 = loc(fused[#loc30, #loc27])
#loc246 = loc(fused[#loc38, #loc39])
#loc247 = loc(fused[#loc41, #loc40])
#loc248 = loc(fused[#loc48, #loc46])
#loc249 = loc(fused[#loc53, #loc54])
#loc250 = loc(fused[#loc55, #loc56])
#loc251 = loc(fused[#loc61, #loc62])
#loc252 = loc(fused[#loc66, #loc63])
#loc253 = loc(fused[#loc70, #loc71])
#loc254 = loc(fused[#loc69, #loc71])
#loc255 = loc(fused[#loc72, #loc73])
#loc256 = loc(fused[#loc75, #loc74])
#loc257 = loc(fused[#loc81, #loc82])
#loc258 = loc(fused[#loc83, #loc84])
#loc259 = loc(fused[#loc85, #loc86])
#loc260 = loc(fused[#loc87, #loc88])
#loc261 = loc(fused[#loc89, #loc90])
#loc262 = loc(fused[#loc92, #loc91])
#loc263 = loc(fused[#loc93, #loc94])
#loc264 = loc(fused[#loc101, #loc102])
#loc265 = loc(fused[#loc103, #loc104])
#loc266 = loc(fused[#loc107, #loc108])
#loc267 = loc(fused[#loc106, #loc108])
#loc268 = loc(fused[#loc105, #loc104])
#loc269 = loc(fused[#loc109, #loc110])
#loc270 = loc(fused[#loc111, #loc112])
#loc271 = loc(fused[#loc113, #loc110])
#loc272 = loc(fused[#loc121, #loc122])
#loc273 = loc(fused[#loc124, #loc123])
#loc274 = loc(fused[#loc129, #loc128])
#loc275 = loc(fused[#loc131, #loc132])
#loc276 = loc(fused[#loc133, #loc134])
#loc277 = loc(fused[#loc139, #loc140])
#loc278 = loc(fused[#loc144, #loc141])
#loc279 = loc(fused[#loc148, #loc149])
#loc280 = loc(fused[#loc147, #loc149])
#loc281 = loc(fused[#loc150, #loc151])
#loc282 = loc(fused[#loc153, #loc152])
#loc283 = loc(fused[#loc159, #loc160])
#loc284 = loc(fused[#loc161, #loc162])
#loc285 = loc(fused[#loc164, #loc163])
#loc286 = loc(fused[#loc165, #loc166])
#loc287 = loc(fused[#loc169, #loc170])
#loc288 = loc(fused[#loc171, #loc172])
#loc289 = loc(fused[#loc175, #loc176])
#loc290 = loc(fused[#loc174, #loc176])
#loc291 = loc(fused[#loc173, #loc172])
#loc292 = loc(fused[#loc177, #loc178])
#loc293 = loc(fused[#loc179, #loc180])
#loc294 = loc(fused[#loc181, #loc178])
#loc295 = loc(fused[#loc189, #loc190])
#loc296 = loc(fused[#loc192, #loc191])
#loc297 = loc(fused[#loc197, #loc196])
#loc298 = loc(fused[#loc203, #loc204])
#loc299 = loc(fused[#loc205, #loc206])
#loc300 = loc(fused[#loc211, #loc212])
#loc301 = loc(fused[#loc216, #loc213])
#loc302 = loc(fused[#loc220, #loc221])
#loc303 = loc(fused[#loc219, #loc221])
#loc304 = loc(fused[#loc222, #loc223])
#loc305 = loc(fused[#loc225, #loc224])
