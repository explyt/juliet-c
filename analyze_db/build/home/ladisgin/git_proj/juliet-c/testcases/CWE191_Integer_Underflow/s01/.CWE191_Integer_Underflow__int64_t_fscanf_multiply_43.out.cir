!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc9 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":26:23)
#loc10 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":26:32)
#loc36 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":50:27)
#loc37 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":50:36)
#loc61 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":70:27)
#loc62 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":70:36)
#loc113 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":115:10)
#loc114 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":115:14)
#loc115 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":115:20)
#loc116 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":115:32)
#loc133 = loc(fused[#loc9, #loc10])
#loc143 = loc(fused[#loc36, #loc37])
#loc153 = loc(fused[#loc61, #loc62])
#loc171 = loc(fused[#loc113, #loc114])
#loc172 = loc(fused[#loc115, #loc116])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc129)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc130)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc131)
  cir.func internal private @_ZN52CWE191_Integer_Underflow__int64_t_fscanf_multiply_43L9badSourceERl(%arg0: !cir.ptr<!s64i> loc(fused[#loc9, #loc10])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc133)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc11)
    %1 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc12)
    %2 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc130)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc13)
    %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc131)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc131)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc14)
    %7 = cir.call @__isoc23_fscanf(%3, %5, %6) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc12)
    cir.return loc(#loc8)
  } loc(#loc132)
  cir.func private @printLongLongLine(!s64i) loc(#loc134)
  cir.func @_ZN52CWE191_Integer_Underflow__int64_t_fscanf_multiply_433badEv() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc136)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc137)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc23)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc138)
    cir.call @_ZN52CWE191_Integer_Underflow__int64_t_fscanf_multiply_43L9badSourceERl(%1) : (!cir.ptr<!s64i>) -> () loc(#loc25)
    cir.br ^bb1 loc(#loc139)
  ^bb1:  // pred: ^bb0
    %3 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc28)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %5 = cir.cast(integral, %4 : !s32i), !s64i loc(#loc29)
    %6 = cir.cmp(lt, %3, %5) : !s64i, !cir.bool loc(#loc140)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc141)
  ^bb2:  // pred: ^bb1
    %7 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc31)
    %8 = cir.const #cir.int<2> : !s32i loc(#loc20)
    %9 = cir.cast(integral, %8 : !s32i), !s64i loc(#loc20)
    %10 = cir.binop(mul, %7, %9) nsw : !s64i loc(#loc31)
    cir.store %10, %0 : !s64i, !cir.ptr<!s64i> loc(#loc136)
    %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc32)
    cir.call @printLongLongLine(%11) : (!s64i) -> () loc(#loc33)
    cir.br ^bb3 loc(#loc27)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc27)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc18)
  } loc(#loc135)
  cir.func internal private @_ZN52CWE191_Integer_Underflow__int64_t_fscanf_multiply_43L13goodG2BSourceERl(%arg0: !cir.ptr<!s64i> loc(fused[#loc36, #loc37])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc143)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc38)
    %1 = cir.const #cir.int<2> : !s32i loc(#loc39)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc40)
    %3 = cir.cast(integral, %2 : !s32i), !s64i loc(#loc40)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc41)
    cir.store %3, %4 : !s64i, !cir.ptr<!s64i> loc(#loc144)
    cir.return loc(#loc35)
  } loc(#loc142)
  cir.func internal private @_ZN52CWE191_Integer_Underflow__int64_t_fscanf_multiply_43L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc146)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc147)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc48)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc148)
    cir.call @_ZN52CWE191_Integer_Underflow__int64_t_fscanf_multiply_43L13goodG2BSourceERl(%1) : (!cir.ptr<!s64i>) -> () loc(#loc50)
    cir.br ^bb1 loc(#loc149)
  ^bb1:  // pred: ^bb0
    %3 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc53)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %5 = cir.cast(integral, %4 : !s32i), !s64i loc(#loc54)
    %6 = cir.cmp(lt, %3, %5) : !s64i, !cir.bool loc(#loc150)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc151)
  ^bb2:  // pred: ^bb1
    %7 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc56)
    %8 = cir.const #cir.int<2> : !s32i loc(#loc45)
    %9 = cir.cast(integral, %8 : !s32i), !s64i loc(#loc45)
    %10 = cir.binop(mul, %7, %9) nsw : !s64i loc(#loc56)
    cir.store %10, %0 : !s64i, !cir.ptr<!s64i> loc(#loc146)
    %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc57)
    cir.call @printLongLongLine(%11) : (!s64i) -> () loc(#loc58)
    cir.br ^bb3 loc(#loc52)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc52)
  ^bb4:  // pred: ^bb3
    cir.return loc(#loc43)
  } loc(#loc145)
  cir.func internal private @_ZN52CWE191_Integer_Underflow__int64_t_fscanf_multiply_43L13goodB2GSourceERl(%arg0: !cir.ptr<!s64i> loc(fused[#loc61, #loc62])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init, const] {alignment = 8 : i64} loc(#loc153)
    cir.store %arg0, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc63)
    %1 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc64)
    %2 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc130)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc65)
    %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc154)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc154)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc68)
    %7 = cir.call @__isoc23_fscanf(%3, %5, %6) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc64)
    cir.return loc(#loc60)
  } loc(#loc152)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc69)
  cir.func internal private @_ZN52CWE191_Integer_Underflow__int64_t_fscanf_multiply_43L7goodB2GEv() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc156)
    %1 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc157)
    %2 = cir.const #cir.int<0> : !s64i loc(#loc76)
    cir.store %2, %1 : !s64i, !cir.ptr<!s64i> loc(#loc158)
    cir.call @_ZN52CWE191_Integer_Underflow__int64_t_fscanf_multiply_43L13goodB2GSourceERl(%1) : (!cir.ptr<!s64i>) -> () loc(#loc78)
    cir.br ^bb1 loc(#loc159)
  ^bb1:  // pred: ^bb0
    %3 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc81)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc82)
    %5 = cir.cast(integral, %4 : !s32i), !s64i loc(#loc82)
    %6 = cir.cmp(lt, %3, %5) : !s64i, !cir.bool loc(#loc160)
    cir.brcond %6 ^bb2, ^bb8 loc(#loc161)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc162)
  ^bb3:  // pred: ^bb2
    %7 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc86)
    %8 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc87)
    %9 = cir.unary(minus, %8) : !s64i, !s64i loc(#loc87)
    %10 = cir.const #cir.int<1> : !s64i loc(#loc87)
    %11 = cir.binop(sub, %9, %10) nsw : !s64i loc(#loc87)
    %12 = cir.const #cir.int<2> : !s32i loc(#loc88)
    %13 = cir.cast(integral, %12 : !s32i), !s64i loc(#loc88)
    %14 = cir.binop(div, %11, %13) : !s64i loc(#loc163)
    %15 = cir.cmp(gt, %7, %14) : !s64i, !cir.bool loc(#loc164)
    cir.brcond %15 ^bb4, ^bb5 loc(#loc165)
  ^bb4:  // pred: ^bb3
    %16 = cir.load %1 : !cir.ptr<!s64i>, !s64i loc(#loc93)
    %17 = cir.const #cir.int<2> : !s32i loc(#loc73)
    %18 = cir.cast(integral, %17 : !s32i), !s64i loc(#loc73)
    %19 = cir.binop(mul, %16, %18) nsw : !s64i loc(#loc93)
    cir.store %19, %0 : !s64i, !cir.ptr<!s64i> loc(#loc156)
    %20 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc94)
    cir.call @printLongLongLine(%20) : (!s64i) -> () loc(#loc95)
    cir.br ^bb6 loc(#loc91)
  ^bb5:  // pred: ^bb3
    %21 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc69)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    cir.br ^bb6 loc(#loc85)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc85)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc80)
  ^bb8:  // 2 preds: ^bb1, ^bb7
    cir.br ^bb9 loc(#loc80)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc71)
  } loc(#loc155)
  cir.func @_ZN52CWE191_Integer_Underflow__int64_t_fscanf_multiply_434goodEv() extra(#fn_attr) {
    cir.call @_ZN52CWE191_Integer_Underflow__int64_t_fscanf_multiply_43L7goodG2BEv() : () -> () loc(#loc99)
    cir.call @_ZN52CWE191_Integer_Underflow__int64_t_fscanf_multiply_43L7goodB2GEv() : () -> () loc(#loc100)
    cir.return loc(#loc98)
  } loc(#loc166)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc167)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc168)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc169)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc107)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc108)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc109)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc110)
  cir.func @main(%arg0: !s32i loc(fused[#loc113, #loc114]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc115, #loc116])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc171)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc172)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc112)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc117)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc117)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc118)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc119)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc119)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc120)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc107)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc107)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc121)
    cir.call @_ZN52CWE191_Integer_Underflow__int64_t_fscanf_multiply_434goodEv() : () -> () loc(#loc122)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc108)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc108)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc109)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc109)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    cir.call @_ZN52CWE191_Integer_Underflow__int64_t_fscanf_multiply_433badEv() : () -> () loc(#loc125)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc110)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc110)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc126)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc127)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc173)
    cir.return %15 : !s32i loc(#loc173)
  } loc(#loc170)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":0:0)
#loc1 = loc("/usr/include/stdio.h":442:1)
#loc2 = loc("/usr/include/stdio.h":444:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":29:20)
#loc6 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":29:24)
#loc7 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":26:1)
#loc8 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":30:1)
#loc11 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":27:1)
#loc12 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":29:5)
#loc13 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":29:13)
#loc14 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":29:33)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc17 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":32:1)
#loc18 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":43:1)
#loc19 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":40:9)
#loc20 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":40:33)
#loc21 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":34:5)
#loc22 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":34:13)
#loc23 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":35:12)
#loc24 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":35:5)
#loc25 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":36:5)
#loc26 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":37:5)
#loc27 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":42:5)
#loc28 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":37:8)
#loc29 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":37:15)
#loc30 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":38:5)
#loc31 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":40:26)
#loc32 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":41:27)
#loc33 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":41:9)
#loc34 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":50:1)
#loc35 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":54:1)
#loc38 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":51:1)
#loc39 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":53:13)
#loc40 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":53:12)
#loc41 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":53:5)
#loc42 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":56:1)
#loc43 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":67:1)
#loc44 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":64:9)
#loc45 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":64:33)
#loc46 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":58:5)
#loc47 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":58:13)
#loc48 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":59:12)
#loc49 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":59:5)
#loc50 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":60:5)
#loc51 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":61:5)
#loc52 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":66:5)
#loc53 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":61:8)
#loc54 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":61:15)
#loc55 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":62:5)
#loc56 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":64:26)
#loc57 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":65:27)
#loc58 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":65:9)
#loc59 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":70:1)
#loc60 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":74:1)
#loc63 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":71:1)
#loc64 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":73:5)
#loc65 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":73:13)
#loc66 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":73:20)
#loc67 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":73:24)
#loc68 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":73:33)
#loc69 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":91:23)
#loc70 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":76:1)
#loc71 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":94:1)
#loc72 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":86:13)
#loc73 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":86:37)
#loc74 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":78:5)
#loc75 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":78:13)
#loc76 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":79:12)
#loc77 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":79:5)
#loc78 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":80:5)
#loc79 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":81:5)
#loc80 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":93:5)
#loc81 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":81:8)
#loc82 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":81:15)
#loc83 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":82:5)
#loc84 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":84:9)
#loc85 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":92:9)
#loc86 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":84:13)
#loc87 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":84:21)
#loc88 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":84:31)
#loc89 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":84:32)
#loc90 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":85:9)
#loc91 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":88:9)
#loc92 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":90:9)
#loc93 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":86:30)
#loc94 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":87:31)
#loc95 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":87:13)
#loc96 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":91:13)
#loc97 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":96:1)
#loc98 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":100:1)
#loc99 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":98:5)
#loc100 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":99:5)
#loc101 = loc("/usr/include/stdlib.h":575:1)
#loc102 = loc("/usr/include/stdlib.h":575:41)
#loc103 = loc("/usr/include/time.h":76:1)
#loc104 = loc("/usr/include/time.h":76:38)
#loc105 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc106 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc107 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":120:15)
#loc108 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":122:15)
#loc109 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":125:15)
#loc110 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":127:15)
#loc111 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":115:1)
#loc112 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":130:1)
#loc117 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":116:1)
#loc118 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":118:27)
#loc119 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":118:22)
#loc120 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":118:5)
#loc121 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":120:5)
#loc122 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":121:5)
#loc123 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":122:5)
#loc124 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":125:5)
#loc125 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":126:5)
#loc126 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":127:5)
#loc127 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":129:12)
#loc128 = loc("CWE191_Integer_Underflow__int64_t_fscanf_multiply_43.cpp":129:5)
#loc129 = loc(fused[#loc1, #loc2])
#loc130 = loc(fused[#loc3, #loc4])
#loc131 = loc(fused[#loc5, #loc6])
#loc132 = loc(fused[#loc7, #loc8])
#loc134 = loc(fused[#loc15, #loc16])
#loc135 = loc(fused[#loc17, #loc18])
#loc136 = loc(fused[#loc19, #loc20])
#loc137 = loc(fused[#loc21, #loc22])
#loc138 = loc(fused[#loc24, #loc23])
#loc139 = loc(fused[#loc26, #loc27])
#loc140 = loc(fused[#loc28, #loc29])
#loc141 = loc(fused[#loc30, #loc27])
#loc142 = loc(fused[#loc34, #loc35])
#loc144 = loc(fused[#loc41, #loc39])
#loc145 = loc(fused[#loc42, #loc43])
#loc146 = loc(fused[#loc44, #loc45])
#loc147 = loc(fused[#loc46, #loc47])
#loc148 = loc(fused[#loc49, #loc48])
#loc149 = loc(fused[#loc51, #loc52])
#loc150 = loc(fused[#loc53, #loc54])
#loc151 = loc(fused[#loc55, #loc52])
#loc152 = loc(fused[#loc59, #loc60])
#loc154 = loc(fused[#loc66, #loc67])
#loc155 = loc(fused[#loc70, #loc71])
#loc156 = loc(fused[#loc72, #loc73])
#loc157 = loc(fused[#loc74, #loc75])
#loc158 = loc(fused[#loc77, #loc76])
#loc159 = loc(fused[#loc79, #loc80])
#loc160 = loc(fused[#loc81, #loc82])
#loc161 = loc(fused[#loc83, #loc80])
#loc162 = loc(fused[#loc84, #loc85])
#loc163 = loc(fused[#loc87, #loc88])
#loc164 = loc(fused[#loc86, #loc89])
#loc165 = loc(fused[#loc90, #loc91, #loc92, #loc85])
#loc166 = loc(fused[#loc97, #loc98])
#loc167 = loc(fused[#loc101, #loc102])
#loc168 = loc(fused[#loc103, #loc104])
#loc169 = loc(fused[#loc105, #loc106])
#loc170 = loc(fused[#loc111, #loc112])
#loc173 = loc(fused[#loc128, #loc127])
