!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func no_proto private  @globalReturnsTrue(...) -> !s32i loc(#loc183)
  cir.func private  @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc184)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc185)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc186)
  cir.func private  @printLongLongLine(!s64i) loc(#loc187)
  cir.func no_proto  @CWE190_Integer_Overflow__int64_t_fscanf_postinc_11_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc189)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc15)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc190)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc192)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc192)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc19)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc19)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc22)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc185)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc23)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc186)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc186)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc22)
      } loc(#loc193)
    } loc(#loc191)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc195)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc195)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc26)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc26)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc198)
          %7 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc33)
          %8 = cir.unary(inc, %7) : !s64i, !s64i loc(#loc34)
          cir.store %8, %0 : !s64i, !cir.ptr<!s64i> loc(#loc199)
          %9 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc32)
          cir.store %9, %6 : !s64i, !cir.ptr<!s64i> loc(#loc198)
          %10 = cir.load %6 : !cir.ptr<!s64i>, !s64i loc(#loc35)
          cir.call @printLongLongLine(%10) : (!s64i) -> () loc(#loc36)
        } loc(#loc197)
      } loc(#loc196)
    } loc(#loc194)
    cir.return loc(#loc12)
  } loc(#loc188)
  cir.func no_proto  @CWE190_Integer_Overflow__int64_t_fscanf_postinc_11_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc201)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc39)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc202)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc41)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc203)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc43)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc204)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    cir.return loc(#loc38)
  } loc(#loc200)
  cir.func no_proto private  @globalReturnsFalse(...) -> !s32i loc(#loc205)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc206)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc51)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc52)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc208)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc57)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc209)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc211)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc211)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc61)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc61)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc64)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc185)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc65)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc213)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc213)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc64)
      } loc(#loc212)
    } loc(#loc210)
    cir.scope {
      %2 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc215)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc215)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc70)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc70)
      cir.if %5 {
        %6 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc51)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc51)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc75)
      } else {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc78)
          %7 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc79)
          %8 = cir.cmp(lt, %6, %7) : !s64i, !s32i loc(#loc218)
          %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc80)
          cir.if %9 {
            %10 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc220)
            %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc86)
            %12 = cir.unary(inc, %11) : !s64i, !s64i loc(#loc87)
            cir.store %12, %0 : !s64i, !cir.ptr<!s64i> loc(#loc221)
            %13 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc85)
            cir.store %13, %10 : !s64i, !cir.ptr<!s64i> loc(#loc220)
            %14 = cir.load %10 : !cir.ptr<!s64i>, !s64i loc(#loc88)
            cir.call @printLongLongLine(%14) : (!s64i) -> () loc(#loc89)
          } else {
            %10 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc52)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc52)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc90)
          } loc(#loc219)
        } loc(#loc217)
      } loc(#loc216)
    } loc(#loc214)
    cir.return loc(#loc54)
  } loc(#loc207)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc223)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc95)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc224)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc226)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc226)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc99)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc99)
      cir.if %5 {
        %6 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc102)
        %7 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc185)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc103)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc228)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc228)
        %11 = cir.call @__isoc99_fscanf(%8, %10, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc102)
      } loc(#loc227)
    } loc(#loc225)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc230)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc230)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc108)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc108)
      cir.if %5 {
        cir.scope {
          %6 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc113)
          %7 = cir.const #cir.int<9223372036854775807> : !s64i loc(#loc114)
          %8 = cir.cmp(lt, %6, %7) : !s64i, !s32i loc(#loc233)
          %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc115)
          cir.if %9 {
            %10 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc235)
            %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc121)
            %12 = cir.unary(inc, %11) : !s64i, !s64i loc(#loc122)
            cir.store %12, %0 : !s64i, !cir.ptr<!s64i> loc(#loc236)
            %13 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc120)
            cir.store %13, %10 : !s64i, !cir.ptr<!s64i> loc(#loc235)
            %14 = cir.load %10 : !cir.ptr<!s64i>, !s64i loc(#loc123)
            cir.call @printLongLongLine(%14) : (!s64i) -> () loc(#loc124)
          } else {
            %10 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc125)
            %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc125)
            cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc126)
          } loc(#loc234)
        } loc(#loc232)
      } loc(#loc231)
    } loc(#loc229)
    cir.return loc(#loc92)
  } loc(#loc222)
  cir.func no_proto internal private  @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc238)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc131)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc239)
    cir.scope {
      %2 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc241)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc241)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc135)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc135)
      cir.if %5 {
        %6 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc140)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc140)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc141)
      } else {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc142)
        %7 = cir.cast(integral, %6 : !s32i), !s64i loc(#loc142)
        cir.store %7, %0 : !s64i, !cir.ptr<!s64i> loc(#loc243)
      } loc(#loc242)
    } loc(#loc240)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc245)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc245)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc146)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc146)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc248)
          %7 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc153)
          %8 = cir.unary(inc, %7) : !s64i, !s64i loc(#loc154)
          cir.store %8, %0 : !s64i, !cir.ptr<!s64i> loc(#loc249)
          %9 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc152)
          cir.store %9, %6 : !s64i, !cir.ptr<!s64i> loc(#loc248)
          %10 = cir.load %6 : !cir.ptr<!s64i>, !s64i loc(#loc155)
          cir.call @printLongLongLine(%10) : (!s64i) -> () loc(#loc156)
        } loc(#loc247)
      } loc(#loc246)
    } loc(#loc244)
    cir.return loc(#loc128)
  } loc(#loc237)
  cir.func no_proto internal private  @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc251)
    %1 = cir.const #cir.int<0> : !s64i loc(#loc161)
    cir.store %1, %0 : !s64i, !cir.ptr<!s64i> loc(#loc252)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc254)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc254)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc165)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc165)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc168)
        %7 = cir.cast(integral, %6 : !s32i), !s64i loc(#loc168)
        cir.store %7, %0 : !s64i, !cir.ptr<!s64i> loc(#loc256)
      } loc(#loc255)
    } loc(#loc253)
    cir.scope {
      %2 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc258)
      %3 = cir.cast(bitcast, %2 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc258)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc172)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc172)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s64i, !cir.ptr<!s64i>, ["result", init] {alignment = 8 : i64} loc(#loc261)
          %7 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc179)
          %8 = cir.unary(inc, %7) : !s64i, !s64i loc(#loc180)
          cir.store %8, %0 : !s64i, !cir.ptr<!s64i> loc(#loc262)
          %9 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc178)
          cir.store %9, %6 : !s64i, !cir.ptr<!s64i> loc(#loc261)
          %10 = cir.load %6 : !cir.ptr<!s64i>, !s64i loc(#loc181)
          cir.call @printLongLongLine(%10) : (!s64i) -> () loc(#loc182)
        } loc(#loc260)
      } loc(#loc259)
    } loc(#loc257)
    cir.return loc(#loc158)
  } loc(#loc250)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s06/CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":30:24)
#loc8 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":30:28)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc11 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":23:1)
#loc12 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":41:1)
#loc13 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":25:5)
#loc14 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":25:13)
#loc15 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":26:12)
#loc16 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":26:5)
#loc17 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":27:5)
#loc18 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":31:5)
#loc19 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":27:8)
#loc20 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":27:26)
#loc21 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":28:5)
#loc22 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":30:9)
#loc23 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":30:17)
#loc24 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":32:5)
#loc25 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":40:5)
#loc26 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":32:8)
#loc27 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":32:26)
#loc28 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":33:5)
#loc29 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":34:9)
#loc30 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":39:9)
#loc31 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":37:13)
#loc32 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":37:30)
#loc33 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":36:17)
#loc34 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":36:13)
#loc35 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":38:31)
#loc36 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":38:13)
#loc37 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":151:1)
#loc38 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":157:1)
#loc39 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":153:5)
#loc40 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":153:14)
#loc41 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":154:5)
#loc42 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":154:14)
#loc43 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":155:5)
#loc44 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":155:14)
#loc45 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":156:5)
#loc46 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":156:14)
#loc47 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc48 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc49 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc50 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc51 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":60:19)
#loc52 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":73:23)
#loc53 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":48:1)
#loc54 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":76:1)
#loc55 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":50:5)
#loc56 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":50:13)
#loc57 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":51:12)
#loc58 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":51:5)
#loc59 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":52:5)
#loc60 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":56:5)
#loc61 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":52:8)
#loc62 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":52:26)
#loc63 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":53:5)
#loc64 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":55:9)
#loc65 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":55:17)
#loc66 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":55:24)
#loc67 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":55:28)
#loc68 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":57:5)
#loc69 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":75:5)
#loc70 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":57:8)
#loc71 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":57:27)
#loc72 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":58:5)
#loc73 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":61:5)
#loc74 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":63:5)
#loc75 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":60:9)
#loc76 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":65:9)
#loc77 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":74:9)
#loc78 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":65:13)
#loc79 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":65:20)
#loc80 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":65:18)
#loc81 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":66:9)
#loc82 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":70:9)
#loc83 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":72:9)
#loc84 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":68:13)
#loc85 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":68:30)
#loc86 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":67:17)
#loc87 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":67:13)
#loc88 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":69:31)
#loc89 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":69:13)
#loc90 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":73:13)
#loc91 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":79:1)
#loc92 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":102:1)
#loc93 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":81:5)
#loc94 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":81:13)
#loc95 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":82:12)
#loc96 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":82:5)
#loc97 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":83:5)
#loc98 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":87:5)
#loc99 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":83:8)
#loc100 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":83:26)
#loc101 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":84:5)
#loc102 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":86:9)
#loc103 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":86:17)
#loc104 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":86:24)
#loc105 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":86:28)
#loc106 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":88:5)
#loc107 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":101:5)
#loc108 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":88:8)
#loc109 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":88:26)
#loc110 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":89:5)
#loc111 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":91:9)
#loc112 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":100:9)
#loc113 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":91:13)
#loc114 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":91:20)
#loc115 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":91:18)
#loc116 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":92:9)
#loc117 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":96:9)
#loc118 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":98:9)
#loc119 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":94:13)
#loc120 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":94:30)
#loc121 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":93:17)
#loc122 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":93:13)
#loc123 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":95:31)
#loc124 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":95:13)
#loc125 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":99:23)
#loc126 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":99:13)
#loc127 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":105:1)
#loc128 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":128:1)
#loc129 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":107:5)
#loc130 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":107:13)
#loc131 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":108:12)
#loc132 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":108:5)
#loc133 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":109:5)
#loc134 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":118:5)
#loc135 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":109:8)
#loc136 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":109:27)
#loc137 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":110:5)
#loc138 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":113:5)
#loc139 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":115:5)
#loc140 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":112:19)
#loc141 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":112:9)
#loc142 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":117:16)
#loc143 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":117:9)
#loc144 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":119:5)
#loc145 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":127:5)
#loc146 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":119:8)
#loc147 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":119:26)
#loc148 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":120:5)
#loc149 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":121:9)
#loc150 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":126:9)
#loc151 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":124:13)
#loc152 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":124:30)
#loc153 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":123:17)
#loc154 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":123:13)
#loc155 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":125:31)
#loc156 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":125:13)
#loc157 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":131:1)
#loc158 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":149:1)
#loc159 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":133:5)
#loc160 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":133:13)
#loc161 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":134:12)
#loc162 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":134:5)
#loc163 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":135:5)
#loc164 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":139:5)
#loc165 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":135:8)
#loc166 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":135:26)
#loc167 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":136:5)
#loc168 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":138:16)
#loc169 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":138:9)
#loc170 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":140:5)
#loc171 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":148:5)
#loc172 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":140:8)
#loc173 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":140:26)
#loc174 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":141:5)
#loc175 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":142:9)
#loc176 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":147:9)
#loc177 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":145:13)
#loc178 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":145:30)
#loc179 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":144:17)
#loc180 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":144:13)
#loc181 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":146:31)
#loc182 = loc("CWE190_Integer_Overflow__int64_t_fscanf_postinc_11.c":146:13)
#loc183 = loc(fused[#loc1, #loc2])
#loc184 = loc(fused[#loc3, #loc4])
#loc185 = loc(fused[#loc5, #loc6])
#loc186 = loc(fused[#loc7, #loc8])
#loc187 = loc(fused[#loc9, #loc10])
#loc188 = loc(fused[#loc11, #loc12])
#loc189 = loc(fused[#loc13, #loc14])
#loc190 = loc(fused[#loc16, #loc15])
#loc191 = loc(fused[#loc17, #loc18])
#loc192 = loc(fused[#loc19, #loc20])
#loc193 = loc(fused[#loc21, #loc18])
#loc194 = loc(fused[#loc24, #loc25])
#loc195 = loc(fused[#loc26, #loc27])
#loc196 = loc(fused[#loc28, #loc25])
#loc197 = loc(fused[#loc29, #loc30])
#loc198 = loc(fused[#loc31, #loc32])
#loc199 = loc(fused[#loc34, #loc33])
#loc200 = loc(fused[#loc37, #loc38])
#loc201 = loc(fused[#loc39, #loc40])
#loc202 = loc(fused[#loc41, #loc42])
#loc203 = loc(fused[#loc43, #loc44])
#loc204 = loc(fused[#loc45, #loc46])
#loc205 = loc(fused[#loc47, #loc48])
#loc206 = loc(fused[#loc49, #loc50])
#loc207 = loc(fused[#loc53, #loc54])
#loc208 = loc(fused[#loc55, #loc56])
#loc209 = loc(fused[#loc58, #loc57])
#loc210 = loc(fused[#loc59, #loc60])
#loc211 = loc(fused[#loc61, #loc62])
#loc212 = loc(fused[#loc63, #loc60])
#loc213 = loc(fused[#loc66, #loc67])
#loc214 = loc(fused[#loc68, #loc69])
#loc215 = loc(fused[#loc70, #loc71])
#loc216 = loc(fused[#loc72, #loc73, #loc74, #loc69])
#loc217 = loc(fused[#loc76, #loc77])
#loc218 = loc(fused[#loc78, #loc79])
#loc219 = loc(fused[#loc81, #loc82, #loc83, #loc77])
#loc220 = loc(fused[#loc84, #loc85])
#loc221 = loc(fused[#loc87, #loc86])
#loc222 = loc(fused[#loc91, #loc92])
#loc223 = loc(fused[#loc93, #loc94])
#loc224 = loc(fused[#loc96, #loc95])
#loc225 = loc(fused[#loc97, #loc98])
#loc226 = loc(fused[#loc99, #loc100])
#loc227 = loc(fused[#loc101, #loc98])
#loc228 = loc(fused[#loc104, #loc105])
#loc229 = loc(fused[#loc106, #loc107])
#loc230 = loc(fused[#loc108, #loc109])
#loc231 = loc(fused[#loc110, #loc107])
#loc232 = loc(fused[#loc111, #loc112])
#loc233 = loc(fused[#loc113, #loc114])
#loc234 = loc(fused[#loc116, #loc117, #loc118, #loc112])
#loc235 = loc(fused[#loc119, #loc120])
#loc236 = loc(fused[#loc122, #loc121])
#loc237 = loc(fused[#loc127, #loc128])
#loc238 = loc(fused[#loc129, #loc130])
#loc239 = loc(fused[#loc132, #loc131])
#loc240 = loc(fused[#loc133, #loc134])
#loc241 = loc(fused[#loc135, #loc136])
#loc242 = loc(fused[#loc137, #loc138, #loc139, #loc134])
#loc243 = loc(fused[#loc143, #loc142])
#loc244 = loc(fused[#loc144, #loc145])
#loc245 = loc(fused[#loc146, #loc147])
#loc246 = loc(fused[#loc148, #loc145])
#loc247 = loc(fused[#loc149, #loc150])
#loc248 = loc(fused[#loc151, #loc152])
#loc249 = loc(fused[#loc154, #loc153])
#loc250 = loc(fused[#loc157, #loc158])
#loc251 = loc(fused[#loc159, #loc160])
#loc252 = loc(fused[#loc162, #loc161])
#loc253 = loc(fused[#loc163, #loc164])
#loc254 = loc(fused[#loc165, #loc166])
#loc255 = loc(fused[#loc167, #loc164])
#loc256 = loc(fused[#loc169, #loc168])
#loc257 = loc(fused[#loc170, #loc171])
#loc258 = loc(fused[#loc172, #loc173])
#loc259 = loc(fused[#loc174, #loc171])
#loc260 = loc(fused[#loc175, #loc176])
#loc261 = loc(fused[#loc177, #loc178])
#loc262 = loc(fused[#loc180, #loc179])
