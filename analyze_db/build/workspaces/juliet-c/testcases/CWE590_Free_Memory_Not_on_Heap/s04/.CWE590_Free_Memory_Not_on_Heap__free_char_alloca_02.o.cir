!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc138)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc139)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc141)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc9)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc142)
    cir.scope {
      %6 = cir.const #cir.int<1> : !s32i loc(#loc13)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc13)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc146)
          %9 = cir.const #cir.int<100> : !s32i loc(#loc18)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc18)
          %11 = cir.const #cir.int<1> : !u64i loc(#loc18)
          %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc18)
          %13 = cir.alloca !u8i, !cir.ptr<!u8i>, %12 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc18)
          %14 = cir.cast(bitcast, %13 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc18)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc18)
          cir.store %15, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
          %16 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc19)
          %18 = cir.const #cir.int<65> : !s32i loc(#loc20)
          %19 = cir.const #cir.int<100> : !s32i loc(#loc21)
          %20 = cir.const #cir.int<1> : !s32i loc(#loc22)
          %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc21)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc21)
          cir.libc.memset %22 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc147)
          %23 = cir.const #cir.int<0> : !s32i loc(#loc25)
          %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc25)
          %25 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
          %26 = cir.const #cir.int<100> : !s32i loc(#loc27)
          %27 = cir.const #cir.int<1> : !s32i loc(#loc28)
          %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc27)
          %29 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc29)
          cir.store %24, %29 : !s8i, !cir.ptr<!s8i> loc(#loc148)
          %30 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
          cir.store %30, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc149)
        } loc(#loc145)
      } loc(#loc144)
    } loc(#loc143)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
    cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc33)
    %3 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc34)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc35)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc34)
    cir.return loc(#loc6)
  } loc(#loc140)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc151)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc38)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc152)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc40)
    cir.return loc(#loc37)
  } loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc42)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc153)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc45)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc154)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc156)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc52)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc157)
    cir.scope {
      %6 = cir.const #cir.int<0> : !s32i loc(#loc56)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc56)
      cir.if %7 {
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc42)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc42)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc60)
      } else {
        cir.scope {
          %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc161)
          %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc65)
          %10 = cir.const #cir.int<100> : !s32i loc(#loc66)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc66)
          %12 = cir.const #cir.int<1> : !u64i loc(#loc162)
          %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc163)
          %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc65)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc164)
          cir.store %15, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc161)
          cir.scope {
            %31 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
            %32 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc72)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc72)
            %34 = cir.cmp(eq, %31, %33) : !cir.ptr<!s8i>, !cir.bool loc(#loc166)
            cir.if %34 {
              %35 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc45)
              %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc45)
              cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc74)
              %37 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc75)
              %38 = cir.const #cir.int<1> : !s32i loc(#loc76)
              cir.call @exit(%38) : (!s32i) -> () extra(#fn_attr) loc(#loc75)
            } loc(#loc167)
          } loc(#loc165)
          %16 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc77)
          %18 = cir.const #cir.int<65> : !s32i loc(#loc78)
          %19 = cir.const #cir.int<100> : !s32i loc(#loc79)
          %20 = cir.const #cir.int<1> : !s32i loc(#loc80)
          %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc79)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc79)
          cir.libc.memset %22 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc168)
          %23 = cir.const #cir.int<0> : !s32i loc(#loc83)
          %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc83)
          %25 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
          %26 = cir.const #cir.int<100> : !s32i loc(#loc85)
          %27 = cir.const #cir.int<1> : !s32i loc(#loc86)
          %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc85)
          %29 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc87)
          cir.store %24, %29 : !s8i, !cir.ptr<!s8i> loc(#loc169)
          %30 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
          cir.store %30, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc170)
        } loc(#loc160)
      } loc(#loc159)
    } loc(#loc158)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
    cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %3 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc92)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc93)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc92)
    cir.return loc(#loc49)
  } loc(#loc155)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc172)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc98)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc173)
    cir.scope {
      %6 = cir.const #cir.int<1> : !s32i loc(#loc102)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc102)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc177)
          %9 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc108)
          %10 = cir.const #cir.int<100> : !s32i loc(#loc109)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc109)
          %12 = cir.const #cir.int<1> : !u64i loc(#loc178)
          %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc179)
          %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc108)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc180)
          cir.store %15, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc177)
          cir.scope {
            %31 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
            %32 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc115)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc115)
            %34 = cir.cmp(eq, %31, %33) : !cir.ptr<!s8i>, !cir.bool loc(#loc182)
            cir.if %34 {
              %35 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc117)
              %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc117)
              cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc118)
              %37 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc119)
              %38 = cir.const #cir.int<1> : !s32i loc(#loc120)
              cir.call @exit(%38) : (!s32i) -> () extra(#fn_attr) loc(#loc119)
            } loc(#loc183)
          } loc(#loc181)
          %16 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc121)
          %18 = cir.const #cir.int<65> : !s32i loc(#loc122)
          %19 = cir.const #cir.int<100> : !s32i loc(#loc123)
          %20 = cir.const #cir.int<1> : !s32i loc(#loc124)
          %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc123)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc123)
          cir.libc.memset %22 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc184)
          %23 = cir.const #cir.int<0> : !s32i loc(#loc127)
          %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc127)
          %25 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
          %26 = cir.const #cir.int<100> : !s32i loc(#loc129)
          %27 = cir.const #cir.int<1> : !s32i loc(#loc130)
          %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc129)
          %29 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc131)
          cir.store %24, %29 : !s8i, !cir.ptr<!s8i> loc(#loc185)
          %30 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
          cir.store %30, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc186)
        } loc(#loc176)
      } loc(#loc175)
    } loc(#loc174)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc134)
    cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc135)
    %3 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc136)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc137)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc136)
    cir.return loc(#loc95)
  } loc(#loc171)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":23:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":40:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":25:5)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":25:12)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":26:12)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":26:5)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":27:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":36:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":27:8)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":28:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":29:9)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":35:9)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":31:13)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":31:41)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":32:20)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":32:32)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":32:37)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":32:41)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":32:13)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":32:42)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":33:33)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":33:13)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":33:24)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":33:28)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":33:29)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":34:20)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":34:13)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":37:15)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":37:5)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":39:5)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":39:10)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":101:1)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":105:1)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":103:5)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":103:14)
#loc40 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":104:5)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":104:14)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":54:19)
#loc43 = loc("/usr/include/stdlib.h":672:1)
#loc44 = loc("/usr/include/stdlib.h":672:45)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":63:27)
#loc46 = loc("/usr/include/stdlib.h":756:1)
#loc47 = loc("/usr/include/stdlib.h":756:70)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":47:1)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":74:1)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":49:5)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":49:12)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":50:12)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":50:5)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":51:5)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":70:5)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":51:8)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":52:5)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":55:5)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":57:5)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":54:9)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":58:9)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":69:9)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":60:13)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":60:64)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":60:41)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":60:48)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":60:52)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":60:63)
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":61:13)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":65:13)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":61:17)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":61:31)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":62:13)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":63:17)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":64:17)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":64:22)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":66:20)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":66:32)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":66:37)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":66:41)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":66:13)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":66:42)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":67:33)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":67:13)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":67:24)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":67:28)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":67:29)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":68:20)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":68:13)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":71:15)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":71:5)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":73:5)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":73:10)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":77:1)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":99:1)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":79:5)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":79:12)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":80:12)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":80:5)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":81:5)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":95:5)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":81:8)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":82:5)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":83:9)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":94:9)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":85:13)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":85:64)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":85:41)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":85:48)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":85:52)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":85:63)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":86:13)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":90:13)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":86:17)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":86:31)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":87:13)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":88:27)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":88:17)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":89:17)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":89:22)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":91:20)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":91:32)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":91:37)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":91:41)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":91:13)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":91:42)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":92:33)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":92:13)
#loc129 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":92:24)
#loc130 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":92:28)
#loc131 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":92:29)
#loc132 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":93:20)
#loc133 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":93:13)
#loc134 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":96:15)
#loc135 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":96:5)
#loc136 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":98:5)
#loc137 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_alloca_02.c":98:10)
#loc138 = loc(fused[#loc1, #loc2])
#loc139 = loc(fused[#loc3, #loc4])
#loc140 = loc(fused[#loc5, #loc6])
#loc141 = loc(fused[#loc7, #loc8])
#loc142 = loc(fused[#loc10, #loc9])
#loc143 = loc(fused[#loc11, #loc12])
#loc144 = loc(fused[#loc14, #loc12])
#loc145 = loc(fused[#loc15, #loc16])
#loc146 = loc(fused[#loc17, #loc18])
#loc147 = loc(fused[#loc23, #loc24])
#loc148 = loc(fused[#loc26, #loc25])
#loc149 = loc(fused[#loc31, #loc30])
#loc150 = loc(fused[#loc36, #loc37])
#loc151 = loc(fused[#loc38, #loc39])
#loc152 = loc(fused[#loc40, #loc41])
#loc153 = loc(fused[#loc43, #loc44])
#loc154 = loc(fused[#loc46, #loc47])
#loc155 = loc(fused[#loc48, #loc49])
#loc156 = loc(fused[#loc50, #loc51])
#loc157 = loc(fused[#loc53, #loc52])
#loc158 = loc(fused[#loc54, #loc55])
#loc159 = loc(fused[#loc57, #loc58, #loc59, #loc55])
#loc160 = loc(fused[#loc61, #loc62])
#loc161 = loc(fused[#loc63, #loc64])
#loc162 = loc(fused[#loc67, #loc68])
#loc163 = loc(fused[#loc66, #loc68])
#loc164 = loc(fused[#loc65, #loc64])
#loc165 = loc(fused[#loc69, #loc70])
#loc166 = loc(fused[#loc71, #loc72])
#loc167 = loc(fused[#loc73, #loc70])
#loc168 = loc(fused[#loc81, #loc82])
#loc169 = loc(fused[#loc84, #loc83])
#loc170 = loc(fused[#loc89, #loc88])
#loc171 = loc(fused[#loc94, #loc95])
#loc172 = loc(fused[#loc96, #loc97])
#loc173 = loc(fused[#loc99, #loc98])
#loc174 = loc(fused[#loc100, #loc101])
#loc175 = loc(fused[#loc103, #loc101])
#loc176 = loc(fused[#loc104, #loc105])
#loc177 = loc(fused[#loc106, #loc107])
#loc178 = loc(fused[#loc110, #loc111])
#loc179 = loc(fused[#loc109, #loc111])
#loc180 = loc(fused[#loc108, #loc107])
#loc181 = loc(fused[#loc112, #loc113])
#loc182 = loc(fused[#loc114, #loc115])
#loc183 = loc(fused[#loc116, #loc113])
#loc184 = loc(fused[#loc125, #loc126])
#loc185 = loc(fused[#loc128, #loc127])
#loc186 = loc(fused[#loc133, #loc132])
