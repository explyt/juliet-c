!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc256)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc257)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc258)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc259)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc260)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc11)
  cir.func private @printIntLine(!s32i) loc(#loc261)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc14)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc15)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_fgets_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc263)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc21)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc264)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc266)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc266)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc25)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc25)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc269)
          %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc269)
          cir.store %8, %7 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc269)
          cir.scope {
            %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc36)
            %10 = cir.const #cir.int<3> : !s32i loc(#loc37)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc37)
            %12 = cir.const #cir.int<4> : !u64i loc(#loc37)
            %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc37)
            %14 = cir.const #cir.int<2> : !s32i loc(#loc37)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc37)
            %16 = cir.binop(add, %13, %15) : !u64i loc(#loc37)
            %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc37)
            %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc258)
            %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc38)
            %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc39)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc40)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc40)
            %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc271)
            cir.if %23 {
              %24 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc44)
              %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc45)
              cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc273)
            } else {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc11)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc11)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc48)
            } loc(#loc272)
          } loc(#loc270)
        } loc(#loc268)
      } else {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc49)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc274)
      } loc(#loc267)
    } loc(#loc265)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc276)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc276)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc53)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc53)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc279)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc279)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc279)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc64)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc65)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc281)
            cir.if %11 {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc69)
              %13 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc70)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc70)
              %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc70)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc71)
            } else {
              %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc14)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc14)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc72)
            } loc(#loc282)
          } loc(#loc280)
        } loc(#loc278)
      } else {
        cir.scope {
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc284)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc284)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc284)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc79)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc80)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc286)
            %12 = cir.ternary(%11, true {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc82)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc83)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc287)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc81)
                cir.yield %17 : !cir.bool loc(#loc81)
              }, false {
                %17 = cir.const #false loc(#loc81)
                cir.yield %17 : !cir.bool loc(#loc81)
              }) : (!cir.bool) -> !cir.bool loc(#loc81)
              cir.yield %16 : !cir.bool loc(#loc81)
            }, false {
              %13 = cir.const #false loc(#loc81)
              cir.yield %13 : !cir.bool loc(#loc81)
            }) : (!cir.bool) -> !cir.bool loc(#loc81)
            cir.if %12 {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc88)
              %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc89)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc89)
              %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc89)
              cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc90)
            } else {
              %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc15)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc15)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc91)
            } loc(#loc288)
          } loc(#loc285)
        } loc(#loc283)
      } loc(#loc277)
    } loc(#loc275)
    cir.return loc(#loc17)
  } loc(#loc262)
  cir.func no_proto @CWE126_Buffer_Overread__CWE129_fgets_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc290)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc94)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc291)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc96)
    cir.return loc(#loc93)
  } loc(#loc289)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc293)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc103)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc294)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc296)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc296)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc107)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc107)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc299)
          %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc299)
          cir.store %8, %7 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc299)
          cir.scope {
            %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc118)
            %10 = cir.const #cir.int<3> : !s32i loc(#loc119)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc119)
            %12 = cir.const #cir.int<4> : !u64i loc(#loc119)
            %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc119)
            %14 = cir.const #cir.int<2> : !s32i loc(#loc119)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc119)
            %16 = cir.binop(add, %13, %15) : !u64i loc(#loc119)
            %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc119)
            %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc258)
            %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc120)
            %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc121)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc122)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc122)
            %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc301)
            cir.if %23 {
              %24 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc126)
              %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc127)
              cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc303)
            } else {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc130)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc130)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc131)
            } loc(#loc302)
          } loc(#loc300)
        } loc(#loc298)
      } else {
        cir.scope {
          %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc305)
          %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc305)
          cir.store %8, %7 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc305)
          cir.scope {
            %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc138)
            %10 = cir.const #cir.int<3> : !s32i loc(#loc139)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc139)
            %12 = cir.const #cir.int<4> : !u64i loc(#loc139)
            %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc139)
            %14 = cir.const #cir.int<2> : !s32i loc(#loc139)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc139)
            %16 = cir.binop(add, %13, %15) : !u64i loc(#loc139)
            %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc139)
            %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc258)
            %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc140)
            %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc141)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc142)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc142)
            %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc307)
            cir.if %23 {
              %24 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc146)
              %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc147)
              cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc309)
            } else {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc150)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc150)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc151)
            } loc(#loc308)
          } loc(#loc306)
        } loc(#loc304)
      } loc(#loc297)
    } loc(#loc295)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc311)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc311)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc154)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc154)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc314)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc314)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc314)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc165)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc166)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc316)
            %12 = cir.ternary(%11, true {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc168)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc169)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc317)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc167)
                cir.yield %17 : !cir.bool loc(#loc167)
              }, false {
                %17 = cir.const #false loc(#loc167)
                cir.yield %17 : !cir.bool loc(#loc167)
              }) : (!cir.bool) -> !cir.bool loc(#loc167)
              cir.yield %16 : !cir.bool loc(#loc167)
            }, false {
              %13 = cir.const #false loc(#loc167)
              cir.yield %13 : !cir.bool loc(#loc167)
            }) : (!cir.bool) -> !cir.bool loc(#loc167)
            cir.if %12 {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc174)
              %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc175)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc175)
              %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc175)
              cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc176)
            } else {
              %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc177)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc177)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc178)
            } loc(#loc318)
          } loc(#loc315)
        } loc(#loc313)
      } else {
        cir.scope {
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc320)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc320)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc320)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc185)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc186)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc322)
            %12 = cir.ternary(%11, true {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc188)
              %14 = cir.const #cir.int<10> : !s32i loc(#loc189)
              %15 = cir.cmp(lt, %13, %14) : !s32i, !cir.bool loc(#loc323)
              %16 = cir.ternary(%15, true {
                %17 = cir.const #true loc(#loc187)
                cir.yield %17 : !cir.bool loc(#loc187)
              }, false {
                %17 = cir.const #false loc(#loc187)
                cir.yield %17 : !cir.bool loc(#loc187)
              }) : (!cir.bool) -> !cir.bool loc(#loc187)
              cir.yield %16 : !cir.bool loc(#loc187)
            }, false {
              %13 = cir.const #false loc(#loc187)
              cir.yield %13 : !cir.bool loc(#loc187)
            }) : (!cir.bool) -> !cir.bool loc(#loc187)
            cir.if %12 {
              %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc194)
              %14 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc195)
              %15 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc195)
              %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc195)
              cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc196)
            } else {
              %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc197)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc197)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc198)
            } loc(#loc324)
          } loc(#loc321)
        } loc(#loc319)
      } loc(#loc312)
    } loc(#loc310)
    cir.return loc(#loc99)
  } loc(#loc292)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc326)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc203)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc204)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc327)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc329)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc329)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc208)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc208)
      cir.if %6 {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc213)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc331)
      } else {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc215)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc332)
      } loc(#loc330)
    } loc(#loc328)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc334)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc334)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc219)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc219)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc337)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc337)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc337)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc230)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc231)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc339)
            cir.if %11 {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc235)
              %13 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc236)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc236)
              %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc236)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc237)
            } else {
              %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc238)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc238)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc239)
            } loc(#loc340)
          } loc(#loc338)
        } loc(#loc336)
      } else {
        cir.scope {
          %7 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc342)
          %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc342)
          cir.store %8, %7 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc342)
          cir.scope {
            %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc246)
            %10 = cir.const #cir.int<0> : !s32i loc(#loc247)
            %11 = cir.cmp(ge, %9, %10) : !s32i, !cir.bool loc(#loc344)
            cir.if %11 {
              %12 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc251)
              %13 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc252)
              %14 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc252)
              %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc252)
              cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc253)
            } else {
              %12 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc254)
              %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc254)
              cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc255)
            } loc(#loc345)
          } loc(#loc343)
        } loc(#loc341)
      } loc(#loc335)
    } loc(#loc333)
    cir.return loc(#loc200)
  } loc(#loc325)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("/usr/include/stdlib.h":105:1)
#loc8 = loc("/usr/include/stdlib.h":106:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":41:27)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":63:27)
#loc15 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":78:27)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":24:1)
#loc17 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":82:1)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":26:5)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":26:9)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":28:13)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":28:12)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":28:5)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":29:5)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":50:5)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":29:8)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":29:33)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":30:5)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":44:5)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":46:5)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":31:9)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":43:9)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":32:13)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":32:49)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":34:13)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":42:13)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":34:23)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":34:36)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":34:53)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":34:17)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":34:63)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":35:13)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":38:13)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":40:13)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":37:29)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":37:24)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":37:17)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":37:40)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":41:17)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":49:16)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":49:9)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":51:5)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":81:5)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":51:8)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":51:33)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":52:5)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":66:5)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":68:5)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":53:9)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":65:9)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":54:13)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":54:34)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":57:13)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":64:13)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":57:17)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":57:25)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":58:13)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":60:13)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":62:13)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":59:37)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":59:30)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":59:17)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":63:17)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":69:9)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":80:9)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":70:13)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":70:34)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":72:13)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":79:13)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":72:17)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":72:25)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":72:27)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":72:30)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":72:38)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":72:40)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":73:13)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":75:13)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":77:13)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":74:37)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":74:30)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":74:17)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":78:17)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":214:1)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":218:1)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":216:5)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":216:13)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":217:5)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":217:13)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":91:1)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":158:1)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":93:5)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":93:9)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":95:13)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":95:12)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":95:5)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":96:5)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":127:5)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":96:8)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":96:33)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":97:5)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":111:5)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":113:5)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":98:9)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":110:9)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":99:13)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":99:49)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":101:13)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":109:13)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":101:23)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":101:36)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":101:53)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":101:17)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":101:63)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":102:13)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":105:13)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":107:13)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":104:29)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":104:24)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":104:17)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":104:40)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":108:27)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":108:17)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":114:9)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":126:9)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":115:13)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":115:49)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":117:13)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":125:13)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":117:23)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":117:36)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":117:53)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":117:17)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":117:63)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":118:13)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":121:13)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":123:13)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":120:29)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":120:24)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":120:17)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":120:40)
#loc150 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":124:27)
#loc151 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":124:17)
#loc152 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":128:5)
#loc153 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":157:5)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":128:8)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":128:33)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":129:5)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":142:5)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":144:5)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":130:9)
#loc160 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":141:9)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":131:13)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":131:34)
#loc163 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":133:13)
#loc164 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":140:13)
#loc165 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":133:17)
#loc166 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":133:25)
#loc167 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":133:27)
#loc168 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":133:30)
#loc169 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":133:38)
#loc170 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":133:40)
#loc171 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":134:13)
#loc172 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":136:13)
#loc173 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":138:13)
#loc174 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":135:37)
#loc175 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":135:30)
#loc176 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":135:17)
#loc177 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":139:27)
#loc178 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":139:17)
#loc179 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":145:9)
#loc180 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":156:9)
#loc181 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":146:13)
#loc182 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":146:34)
#loc183 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":148:13)
#loc184 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":155:13)
#loc185 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":148:17)
#loc186 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":148:25)
#loc187 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":148:27)
#loc188 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":148:30)
#loc189 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":148:38)
#loc190 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":148:40)
#loc191 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":149:13)
#loc192 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":151:13)
#loc193 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":153:13)
#loc194 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":150:37)
#loc195 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":150:30)
#loc196 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":150:17)
#loc197 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":154:27)
#loc198 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":154:17)
#loc199 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":163:1)
#loc200 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":212:1)
#loc201 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":165:5)
#loc202 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":165:9)
#loc203 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":167:13)
#loc204 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":167:12)
#loc205 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":167:5)
#loc206 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":168:5)
#loc207 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":179:5)
#loc208 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":168:8)
#loc209 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":168:33)
#loc210 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":169:5)
#loc211 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":173:5)
#loc212 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":175:5)
#loc213 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":172:16)
#loc214 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":172:9)
#loc215 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":178:16)
#loc216 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":178:9)
#loc217 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":180:5)
#loc218 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":211:5)
#loc219 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":180:8)
#loc220 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":180:33)
#loc221 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":181:5)
#loc222 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":195:5)
#loc223 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":197:5)
#loc224 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":182:9)
#loc225 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":194:9)
#loc226 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":183:13)
#loc227 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":183:34)
#loc228 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":186:13)
#loc229 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":193:13)
#loc230 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":186:17)
#loc231 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":186:25)
#loc232 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":187:13)
#loc233 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":189:13)
#loc234 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":191:13)
#loc235 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":188:37)
#loc236 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":188:30)
#loc237 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":188:17)
#loc238 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":192:27)
#loc239 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":192:17)
#loc240 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":198:9)
#loc241 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":210:9)
#loc242 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":199:13)
#loc243 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":199:34)
#loc244 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":202:13)
#loc245 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":209:13)
#loc246 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":202:17)
#loc247 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":202:25)
#loc248 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":203:13)
#loc249 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":205:13)
#loc250 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":207:13)
#loc251 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":204:37)
#loc252 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":204:30)
#loc253 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":204:17)
#loc254 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":208:27)
#loc255 = loc("CWE126_Buffer_Overread__CWE129_fgets_12.c":208:17)
#loc256 = loc(fused[#loc1, #loc2])
#loc257 = loc(fused[#loc3, #loc4])
#loc258 = loc(fused[#loc5, #loc6])
#loc259 = loc(fused[#loc7, #loc8])
#loc260 = loc(fused[#loc9, #loc10])
#loc261 = loc(fused[#loc12, #loc13])
#loc262 = loc(fused[#loc16, #loc17])
#loc263 = loc(fused[#loc18, #loc19])
#loc264 = loc(fused[#loc22, #loc20])
#loc265 = loc(fused[#loc23, #loc24])
#loc266 = loc(fused[#loc25, #loc26])
#loc267 = loc(fused[#loc27, #loc28, #loc29, #loc24])
#loc268 = loc(fused[#loc30, #loc31])
#loc269 = loc(fused[#loc32, #loc33])
#loc270 = loc(fused[#loc34, #loc35])
#loc271 = loc(fused[#loc39, #loc40])
#loc272 = loc(fused[#loc41, #loc42, #loc43, #loc35])
#loc273 = loc(fused[#loc46, #loc47])
#loc274 = loc(fused[#loc50, #loc49])
#loc275 = loc(fused[#loc51, #loc52])
#loc276 = loc(fused[#loc53, #loc54])
#loc277 = loc(fused[#loc55, #loc56, #loc57, #loc52])
#loc278 = loc(fused[#loc58, #loc59])
#loc279 = loc(fused[#loc60, #loc61])
#loc280 = loc(fused[#loc62, #loc63])
#loc281 = loc(fused[#loc64, #loc65])
#loc282 = loc(fused[#loc66, #loc67, #loc68, #loc63])
#loc283 = loc(fused[#loc73, #loc74])
#loc284 = loc(fused[#loc75, #loc76])
#loc285 = loc(fused[#loc77, #loc78])
#loc286 = loc(fused[#loc79, #loc80])
#loc287 = loc(fused[#loc82, #loc84])
#loc288 = loc(fused[#loc85, #loc86, #loc87, #loc78])
#loc289 = loc(fused[#loc92, #loc93])
#loc290 = loc(fused[#loc94, #loc95])
#loc291 = loc(fused[#loc96, #loc97])
#loc292 = loc(fused[#loc98, #loc99])
#loc293 = loc(fused[#loc100, #loc101])
#loc294 = loc(fused[#loc104, #loc102])
#loc295 = loc(fused[#loc105, #loc106])
#loc296 = loc(fused[#loc107, #loc108])
#loc297 = loc(fused[#loc109, #loc110, #loc111, #loc106])
#loc298 = loc(fused[#loc112, #loc113])
#loc299 = loc(fused[#loc114, #loc115])
#loc300 = loc(fused[#loc116, #loc117])
#loc301 = loc(fused[#loc121, #loc122])
#loc302 = loc(fused[#loc123, #loc124, #loc125, #loc117])
#loc303 = loc(fused[#loc128, #loc129])
#loc304 = loc(fused[#loc132, #loc133])
#loc305 = loc(fused[#loc134, #loc135])
#loc306 = loc(fused[#loc136, #loc137])
#loc307 = loc(fused[#loc141, #loc142])
#loc308 = loc(fused[#loc143, #loc144, #loc145, #loc137])
#loc309 = loc(fused[#loc148, #loc149])
#loc310 = loc(fused[#loc152, #loc153])
#loc311 = loc(fused[#loc154, #loc155])
#loc312 = loc(fused[#loc156, #loc157, #loc158, #loc153])
#loc313 = loc(fused[#loc159, #loc160])
#loc314 = loc(fused[#loc161, #loc162])
#loc315 = loc(fused[#loc163, #loc164])
#loc316 = loc(fused[#loc165, #loc166])
#loc317 = loc(fused[#loc168, #loc170])
#loc318 = loc(fused[#loc171, #loc172, #loc173, #loc164])
#loc319 = loc(fused[#loc179, #loc180])
#loc320 = loc(fused[#loc181, #loc182])
#loc321 = loc(fused[#loc183, #loc184])
#loc322 = loc(fused[#loc185, #loc186])
#loc323 = loc(fused[#loc188, #loc190])
#loc324 = loc(fused[#loc191, #loc192, #loc193, #loc184])
#loc325 = loc(fused[#loc199, #loc200])
#loc326 = loc(fused[#loc201, #loc202])
#loc327 = loc(fused[#loc205, #loc203])
#loc328 = loc(fused[#loc206, #loc207])
#loc329 = loc(fused[#loc208, #loc209])
#loc330 = loc(fused[#loc210, #loc211, #loc212, #loc207])
#loc331 = loc(fused[#loc214, #loc213])
#loc332 = loc(fused[#loc216, #loc215])
#loc333 = loc(fused[#loc217, #loc218])
#loc334 = loc(fused[#loc219, #loc220])
#loc335 = loc(fused[#loc221, #loc222, #loc223, #loc218])
#loc336 = loc(fused[#loc224, #loc225])
#loc337 = loc(fused[#loc226, #loc227])
#loc338 = loc(fused[#loc228, #loc229])
#loc339 = loc(fused[#loc230, #loc231])
#loc340 = loc(fused[#loc232, #loc233, #loc234, #loc229])
#loc341 = loc(fused[#loc240, #loc241])
#loc342 = loc(fused[#loc242, #loc243])
#loc343 = loc(fused[#loc244, #loc245])
#loc344 = loc(fused[#loc246, #loc247])
#loc345 = loc(fused[#loc248, #loc249, #loc250, #loc245])
