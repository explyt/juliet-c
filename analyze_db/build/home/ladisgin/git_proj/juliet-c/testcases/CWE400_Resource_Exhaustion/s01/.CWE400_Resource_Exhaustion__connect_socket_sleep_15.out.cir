!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc156 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":401:10)
#loc157 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":401:14)
#loc158 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":401:20)
#loc159 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":401:32)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc540 = loc(fused[#loc156, #loc157])
#loc541 = loc(fused[#loc158, #loc159])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__connect_socket_sleep_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc486)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc487)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc488)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc489)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc490)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc491)
  cir.func private @close(!s32i) -> !s32i loc(#loc492)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc493)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc18)
  cir.func private @usleep(!u32i) -> !s32i loc(#loc494)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Sleep time possibly too long\00" : !cir.array<!s8i x 29>> : !cir.array<!s8i x 29> {alignment = 1 : i64} loc(#loc21)
  cir.func no_proto @CWE400_Resource_Exhaustion__connect_socket_sleep_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc496)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc27)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc497)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc31)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc500)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc501)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc502)
            %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc503)
            %8 = cir.const #cir.int<1> : !s32i loc(#loc40)
            %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc40)
            cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc502)
            cir.scope {
              cir.do {
                %10 = cir.const #cir.int<2> : !s32i loc(#loc45)
                %11 = cir.const #cir.int<1> : !s32i loc(#loc46)
                %12 = cir.const #cir.int<6> : !s32i loc(#loc47)
                %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc48)
                cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc505)
                cir.scope {
                  %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc53)
                  %53 = cir.const #cir.int<1> : !s32i loc(#loc54)
                  %54 = cir.unary(minus, %53) : !s32i, !s32i loc(#loc54)
                  %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc507)
                  cir.if %55 {
                    cir.break loc(#loc56)
                  } loc(#loc508)
                } loc(#loc506)
                %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc509)
                %15 = cir.const #cir.int<0> : !s32i loc(#loc59)
                %16 = cir.const #cir.int<16> : !u64i loc(#loc510)
                cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc511)
                %17 = cir.const #cir.int<2> : !s32i loc(#loc64)
                %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc64)
                %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
                cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc512)
                %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
                %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
                %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc67)
                %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
                %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
                cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc513)
                %25 = cir.const #cir.int<27015> : !s32i loc(#loc72)
                %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc72)
                %27 = cir.call @htons(%26) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc73)
                %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
                cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc514)
                cir.scope {
                  %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc79)
                  %53 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc516)
                  %54 = cir.const #cir.int<16> : !u64i loc(#loc517)
                  %55 = cir.cast(integral, %54 : !u64i), !u32i loc(#loc517)
                  %56 = cir.call @connect(%52, %53, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc84)
                  %57 = cir.const #cir.int<1> : !s32i loc(#loc85)
                  %58 = cir.unary(minus, %57) : !s32i, !s32i loc(#loc85)
                  %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc518)
                  cir.if %59 {
                    cir.break loc(#loc87)
                  } loc(#loc519)
                } loc(#loc515)
                %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc88)
                %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc89)
                %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc89)
                %32 = cir.const #cir.int<3> : !s32i loc(#loc90)
                %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc90)
                %34 = cir.const #cir.int<4> : !u64i loc(#loc90)
                %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc90)
                %36 = cir.const #cir.int<2> : !s32i loc(#loc90)
                %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc90)
                %38 = cir.binop(add, %35, %37) : !u64i loc(#loc90)
                %39 = cir.const #cir.int<1> : !s32i loc(#loc91)
                %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc91)
                %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc520)
                %42 = cir.const #cir.int<0> : !s32i loc(#loc92)
                %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc93)
                %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc93)
                cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc521)
                cir.scope {
                  %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc98)
                  %53 = cir.const #cir.int<1> : !s32i loc(#loc99)
                  %54 = cir.unary(minus, %53) : !s32i, !s32i loc(#loc99)
                  %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc523)
                  %56 = cir.ternary(%55, true {
                    %57 = cir.const #true loc(#loc100)
                    cir.yield %57 : !cir.bool loc(#loc100)
                  }, false {
                    %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc101)
                    %58 = cir.const #cir.int<0> : !s32i loc(#loc102)
                    %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc524)
                    %60 = cir.ternary(%59, true {
                      %61 = cir.const #true loc(#loc100)
                      cir.yield %61 : !cir.bool loc(#loc100)
                    }, false {
                      %61 = cir.const #false loc(#loc100)
                      cir.yield %61 : !cir.bool loc(#loc100)
                    }) : (!cir.bool) -> !cir.bool loc(#loc100)
                    cir.yield %60 : !cir.bool loc(#loc100)
                  }) : (!cir.bool) -> !cir.bool loc(#loc100)
                  cir.if %56 {
                    cir.break loc(#loc104)
                  } loc(#loc525)
                } loc(#loc522)
                %45 = cir.const #cir.int<0> : !s32i loc(#loc105)
                %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc105)
                %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc106)
                %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc107)
                %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc107)
                cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc526)
                %50 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc108)
                %51 = cir.call @atoi(%50) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc109)
                cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc527)
                cir.yield loc(#loc44)
              } while {
                %10 = cir.const #cir.int<0> : !s32i loc(#loc112)
                %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc112)
                cir.condition(%11) loc(#loc112)
              } loc(#loc504)
            } loc(#loc504)
            cir.scope {
              %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc115)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc116)
              %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc116)
              %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc529)
              cir.if %13 {
                %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc118)
                %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc119)
              } loc(#loc530)
            } loc(#loc528)
          } loc(#loc499)
          cir.break loc(#loc120)
        } loc(#loc32)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc18)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc18)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc122)
          cir.break loc(#loc123)
        } loc(#loc121)
        cir.yield loc(#loc29)
      } loc(#loc29)
    } loc(#loc498)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc126)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc128)
          %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc128)
          %6 = cir.call @usleep(%5) : (!u32i) -> !s32i loc(#loc129)
          %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc21)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc21)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc130)
          cir.break loc(#loc131)
        } loc(#loc127)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc133)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc133)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc134)
          cir.break loc(#loc135)
        } loc(#loc132)
        cir.yield loc(#loc124)
      } loc(#loc124)
    } loc(#loc531)
    cir.return loc(#loc23)
  } loc(#loc495)
  cir.func no_proto @CWE400_Resource_Exhaustion__connect_socket_sleep_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc533)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc138)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc534)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc140)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc535)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc142)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc536)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc144)
    cir.return loc(#loc137)
  } loc(#loc532)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc537)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc538)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc151)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc152)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc153)
  cir.func @main(%arg0: !s32i loc(fused[#loc156, #loc157]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc158, #loc159])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc540)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc541)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc155)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc160)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc160)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc161)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc162)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc162)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc163)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc150)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc150)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc164)
    %8 = cir.get_global @CWE400_Resource_Exhaustion__connect_socket_sleep_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc542)
    cir.call @CWE400_Resource_Exhaustion__connect_socket_sleep_15_good() : () -> () loc(#loc165)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc151)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc151)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc167)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc152)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc152)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc168)
    %13 = cir.get_global @CWE400_Resource_Exhaustion__connect_socket_sleep_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc543)
    cir.call @CWE400_Resource_Exhaustion__connect_socket_sleep_15_bad() : () -> () loc(#loc169)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc153)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc153)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc171)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc172)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc544)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc544)
    cir.return %17 : !s32i loc(#loc544)
  } loc(#loc539)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Sleep time OK\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc174)
  cir.global "private" constant cir_private dsolocal @".str.8" = #cir.const_array<"Sleep time too long\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc175)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc546)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc180)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc181)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc547)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc185)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc550)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc551)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc552)
            %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc553)
            %8 = cir.const #cir.int<1> : !s32i loc(#loc194)
            %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc194)
            cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc552)
            cir.scope {
              cir.do {
                %10 = cir.const #cir.int<2> : !s32i loc(#loc199)
                %11 = cir.const #cir.int<1> : !s32i loc(#loc200)
                %12 = cir.const #cir.int<6> : !s32i loc(#loc201)
                %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc202)
                cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc555)
                cir.scope {
                  %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc207)
                  %53 = cir.const #cir.int<1> : !s32i loc(#loc208)
                  %54 = cir.unary(minus, %53) : !s32i, !s32i loc(#loc208)
                  %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc557)
                  cir.if %55 {
                    cir.break loc(#loc210)
                  } loc(#loc558)
                } loc(#loc556)
                %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc559)
                %15 = cir.const #cir.int<0> : !s32i loc(#loc213)
                %16 = cir.const #cir.int<16> : !u64i loc(#loc560)
                cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc561)
                %17 = cir.const #cir.int<2> : !s32i loc(#loc218)
                %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc218)
                %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
                cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc562)
                %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc220)
                %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc220)
                %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc221)
                %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
                %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
                cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc563)
                %25 = cir.const #cir.int<27015> : !s32i loc(#loc224)
                %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc224)
                %27 = cir.call @htons(%26) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc225)
                %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
                cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc564)
                cir.scope {
                  %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc230)
                  %53 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc566)
                  %54 = cir.const #cir.int<16> : !u64i loc(#loc567)
                  %55 = cir.cast(integral, %54 : !u64i), !u32i loc(#loc567)
                  %56 = cir.call @connect(%52, %53, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc235)
                  %57 = cir.const #cir.int<1> : !s32i loc(#loc236)
                  %58 = cir.unary(minus, %57) : !s32i, !s32i loc(#loc236)
                  %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc568)
                  cir.if %59 {
                    cir.break loc(#loc238)
                  } loc(#loc569)
                } loc(#loc565)
                %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc239)
                %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc240)
                %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc240)
                %32 = cir.const #cir.int<3> : !s32i loc(#loc241)
                %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc241)
                %34 = cir.const #cir.int<4> : !u64i loc(#loc241)
                %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc241)
                %36 = cir.const #cir.int<2> : !s32i loc(#loc241)
                %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc241)
                %38 = cir.binop(add, %35, %37) : !u64i loc(#loc241)
                %39 = cir.const #cir.int<1> : !s32i loc(#loc242)
                %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc242)
                %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc570)
                %42 = cir.const #cir.int<0> : !s32i loc(#loc243)
                %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc244)
                %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc244)
                cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc571)
                cir.scope {
                  %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc249)
                  %53 = cir.const #cir.int<1> : !s32i loc(#loc250)
                  %54 = cir.unary(minus, %53) : !s32i, !s32i loc(#loc250)
                  %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc573)
                  %56 = cir.ternary(%55, true {
                    %57 = cir.const #true loc(#loc251)
                    cir.yield %57 : !cir.bool loc(#loc251)
                  }, false {
                    %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc252)
                    %58 = cir.const #cir.int<0> : !s32i loc(#loc253)
                    %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc574)
                    %60 = cir.ternary(%59, true {
                      %61 = cir.const #true loc(#loc251)
                      cir.yield %61 : !cir.bool loc(#loc251)
                    }, false {
                      %61 = cir.const #false loc(#loc251)
                      cir.yield %61 : !cir.bool loc(#loc251)
                    }) : (!cir.bool) -> !cir.bool loc(#loc251)
                    cir.yield %60 : !cir.bool loc(#loc251)
                  }) : (!cir.bool) -> !cir.bool loc(#loc251)
                  cir.if %56 {
                    cir.break loc(#loc255)
                  } loc(#loc575)
                } loc(#loc572)
                %45 = cir.const #cir.int<0> : !s32i loc(#loc256)
                %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc256)
                %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc257)
                %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc258)
                %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc258)
                cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc576)
                %50 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc259)
                %51 = cir.call @atoi(%50) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc260)
                cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc577)
                cir.yield loc(#loc198)
              } while {
                %10 = cir.const #cir.int<0> : !s32i loc(#loc263)
                %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc263)
                cir.condition(%11) loc(#loc263)
              } loc(#loc554)
            } loc(#loc554)
            cir.scope {
              %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc266)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc267)
              %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc267)
              %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc579)
              cir.if %13 {
                %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc269)
                %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc270)
              } loc(#loc580)
            } loc(#loc578)
          } loc(#loc549)
          cir.break loc(#loc271)
        } loc(#loc186)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc273)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc273)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc274)
          cir.break loc(#loc275)
        } loc(#loc272)
        cir.yield loc(#loc183)
      } loc(#loc183)
    } loc(#loc548)
    cir.scope {
      %3 = cir.const #cir.int<8> : !s32i loc(#loc278)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc280)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc280)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc281)
          cir.break loc(#loc282)
        } loc(#loc279)
        cir.case(default, []) {
          cir.scope {
            %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc286)
            %5 = cir.const #cir.int<0> : !s32i loc(#loc287)
            %6 = cir.cmp(gt, %4, %5) : !s32i, !cir.bool loc(#loc583)
            %7 = cir.ternary(%6, true {
              %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc289)
              %9 = cir.const #cir.int<2000> : !s32i loc(#loc290)
              %10 = cir.cmp(le, %8, %9) : !s32i, !cir.bool loc(#loc584)
              %11 = cir.ternary(%10, true {
                %12 = cir.const #true loc(#loc288)
                cir.yield %12 : !cir.bool loc(#loc288)
              }, false {
                %12 = cir.const #false loc(#loc288)
                cir.yield %12 : !cir.bool loc(#loc288)
              }) : (!cir.bool) -> !cir.bool loc(#loc288)
              cir.yield %11 : !cir.bool loc(#loc288)
            }, false {
              %8 = cir.const #false loc(#loc288)
              cir.yield %8 : !cir.bool loc(#loc288)
            }) : (!cir.bool) -> !cir.bool loc(#loc288)
            cir.if %7 {
              %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc294)
              %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc294)
              %10 = cir.call @usleep(%9) : (!u32i) -> !s32i loc(#loc295)
              %11 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc174)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc174)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc296)
            } else {
              %8 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc175)
              %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc175)
              cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc297)
            } loc(#loc585)
          } loc(#loc582)
          cir.break loc(#loc298)
        } loc(#loc283)
        cir.yield loc(#loc276)
      } loc(#loc276)
    } loc(#loc581)
    cir.return loc(#loc177)
  } loc(#loc545)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc587)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc303)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc304)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc588)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc308)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc591)
            %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc592)
            %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc593)
            %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc594)
            %8 = cir.const #cir.int<1> : !s32i loc(#loc317)
            %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc317)
            cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc593)
            cir.scope {
              cir.do {
                %10 = cir.const #cir.int<2> : !s32i loc(#loc322)
                %11 = cir.const #cir.int<1> : !s32i loc(#loc323)
                %12 = cir.const #cir.int<6> : !s32i loc(#loc324)
                %13 = cir.call @socket(%10, %11, %12) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc325)
                cir.store %13, %6 : !s32i, !cir.ptr<!s32i> loc(#loc596)
                cir.scope {
                  %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc330)
                  %53 = cir.const #cir.int<1> : !s32i loc(#loc331)
                  %54 = cir.unary(minus, %53) : !s32i, !s32i loc(#loc331)
                  %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc598)
                  cir.if %55 {
                    cir.break loc(#loc333)
                  } loc(#loc599)
                } loc(#loc597)
                %14 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc600)
                %15 = cir.const #cir.int<0> : !s32i loc(#loc336)
                %16 = cir.const #cir.int<16> : !u64i loc(#loc601)
                cir.libc.memset %16 bytes from %14 set to %15 : !cir.ptr<!void>, !s32i, !u64i loc(#loc602)
                %17 = cir.const #cir.int<2> : !s32i loc(#loc341)
                %18 = cir.cast(integral, %17 : !s32i), !u16i loc(#loc341)
                %19 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc65)
                cir.store %18, %19 : !u16i, !cir.ptr<!u16i> loc(#loc603)
                %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc343)
                %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc343)
                %22 = cir.call @inet_addr(%21) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc344)
                %23 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc68)
                %24 = cir.get_member %23[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc69)
                cir.store %22, %24 : !u32i, !cir.ptr<!u32i> loc(#loc604)
                %25 = cir.const #cir.int<27015> : !s32i loc(#loc347)
                %26 = cir.cast(integral, %25 : !s32i), !u16i loc(#loc347)
                %27 = cir.call @htons(%26) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc348)
                %28 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc74)
                cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc605)
                cir.scope {
                  %52 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc353)
                  %53 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc607)
                  %54 = cir.const #cir.int<16> : !u64i loc(#loc608)
                  %55 = cir.cast(integral, %54 : !u64i), !u32i loc(#loc608)
                  %56 = cir.call @connect(%52, %53, %55) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc358)
                  %57 = cir.const #cir.int<1> : !s32i loc(#loc359)
                  %58 = cir.unary(minus, %57) : !s32i, !s32i loc(#loc359)
                  %59 = cir.cmp(eq, %56, %58) : !s32i, !cir.bool loc(#loc609)
                  cir.if %59 {
                    cir.break loc(#loc361)
                  } loc(#loc610)
                } loc(#loc606)
                %29 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc362)
                %30 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc363)
                %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc363)
                %32 = cir.const #cir.int<3> : !s32i loc(#loc364)
                %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc364)
                %34 = cir.const #cir.int<4> : !u64i loc(#loc364)
                %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc364)
                %36 = cir.const #cir.int<2> : !s32i loc(#loc364)
                %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc364)
                %38 = cir.binop(add, %35, %37) : !u64i loc(#loc364)
                %39 = cir.const #cir.int<1> : !s32i loc(#loc365)
                %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc365)
                %41 = cir.binop(sub, %38, %40) : !u64i loc(#loc611)
                %42 = cir.const #cir.int<0> : !s32i loc(#loc366)
                %43 = cir.call @recv(%29, %31, %41, %42) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc367)
                %44 = cir.cast(integral, %43 : !s64i), !s32i loc(#loc367)
                cir.store %44, %4 : !s32i, !cir.ptr<!s32i> loc(#loc612)
                cir.scope {
                  %52 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc372)
                  %53 = cir.const #cir.int<1> : !s32i loc(#loc373)
                  %54 = cir.unary(minus, %53) : !s32i, !s32i loc(#loc373)
                  %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc614)
                  %56 = cir.ternary(%55, true {
                    %57 = cir.const #true loc(#loc374)
                    cir.yield %57 : !cir.bool loc(#loc374)
                  }, false {
                    %57 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc375)
                    %58 = cir.const #cir.int<0> : !s32i loc(#loc376)
                    %59 = cir.cmp(eq, %57, %58) : !s32i, !cir.bool loc(#loc615)
                    %60 = cir.ternary(%59, true {
                      %61 = cir.const #true loc(#loc374)
                      cir.yield %61 : !cir.bool loc(#loc374)
                    }, false {
                      %61 = cir.const #false loc(#loc374)
                      cir.yield %61 : !cir.bool loc(#loc374)
                    }) : (!cir.bool) -> !cir.bool loc(#loc374)
                    cir.yield %60 : !cir.bool loc(#loc374)
                  }) : (!cir.bool) -> !cir.bool loc(#loc374)
                  cir.if %56 {
                    cir.break loc(#loc378)
                  } loc(#loc616)
                } loc(#loc613)
                %45 = cir.const #cir.int<0> : !s32i loc(#loc379)
                %46 = cir.cast(integral, %45 : !s32i), !s8i loc(#loc379)
                %47 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc380)
                %48 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc381)
                %49 = cir.ptr_stride(%48 : !cir.ptr<!s8i>, %47 : !s32i), !cir.ptr<!s8i> loc(#loc381)
                cir.store %46, %49 : !s8i, !cir.ptr<!s8i> loc(#loc617)
                %50 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc382)
                %51 = cir.call @atoi(%50) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc383)
                cir.store %51, %0 : !s32i, !cir.ptr<!s32i> loc(#loc618)
                cir.yield loc(#loc321)
              } while {
                %10 = cir.const #cir.int<0> : !s32i loc(#loc386)
                %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc386)
                cir.condition(%11) loc(#loc386)
              } loc(#loc595)
            } loc(#loc595)
            cir.scope {
              %10 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc389)
              %11 = cir.const #cir.int<1> : !s32i loc(#loc390)
              %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc390)
              %13 = cir.cmp(ne, %10, %12) : !s32i, !cir.bool loc(#loc620)
              cir.if %13 {
                %14 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc392)
                %15 = cir.call @close(%14) : (!s32i) -> !s32i loc(#loc393)
              } loc(#loc621)
            } loc(#loc619)
          } loc(#loc590)
          cir.break loc(#loc394)
        } loc(#loc309)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc396)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc396)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc397)
          cir.break loc(#loc398)
        } loc(#loc395)
        cir.yield loc(#loc306)
      } loc(#loc306)
    } loc(#loc589)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc401)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.scope {
            %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc405)
            %5 = cir.const #cir.int<0> : !s32i loc(#loc406)
            %6 = cir.cmp(gt, %4, %5) : !s32i, !cir.bool loc(#loc624)
            %7 = cir.ternary(%6, true {
              %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc408)
              %9 = cir.const #cir.int<2000> : !s32i loc(#loc409)
              %10 = cir.cmp(le, %8, %9) : !s32i, !cir.bool loc(#loc625)
              %11 = cir.ternary(%10, true {
                %12 = cir.const #true loc(#loc407)
                cir.yield %12 : !cir.bool loc(#loc407)
              }, false {
                %12 = cir.const #false loc(#loc407)
                cir.yield %12 : !cir.bool loc(#loc407)
              }) : (!cir.bool) -> !cir.bool loc(#loc407)
              cir.yield %11 : !cir.bool loc(#loc407)
            }, false {
              %8 = cir.const #false loc(#loc407)
              cir.yield %8 : !cir.bool loc(#loc407)
            }) : (!cir.bool) -> !cir.bool loc(#loc407)
            cir.if %7 {
              %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc413)
              %9 = cir.cast(integral, %8 : !s32i), !u32i loc(#loc413)
              %10 = cir.call @usleep(%9) : (!u32i) -> !s32i loc(#loc414)
              %11 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc415)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc415)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc416)
            } else {
              %8 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc417)
              %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc417)
              cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc418)
            } loc(#loc626)
          } loc(#loc623)
          cir.break loc(#loc419)
        } loc(#loc402)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc421)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc421)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc422)
          cir.break loc(#loc423)
        } loc(#loc420)
        cir.yield loc(#loc399)
      } loc(#loc399)
    } loc(#loc622)
    cir.return loc(#loc300)
  } loc(#loc586)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc628)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc428)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc429)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc629)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc433)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc435)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc435)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc436)
          cir.break loc(#loc437)
        } loc(#loc434)
        cir.case(default, []) {
          %4 = cir.const #cir.int<20> : !s32i loc(#loc439)
          cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc631)
          cir.break loc(#loc441)
        } loc(#loc438)
        cir.yield loc(#loc431)
      } loc(#loc431)
    } loc(#loc630)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc444)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc446)
          %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc446)
          %6 = cir.call @usleep(%5) : (!u32i) -> !s32i loc(#loc447)
          %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc448)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc448)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc449)
          cir.break loc(#loc450)
        } loc(#loc445)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc452)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc452)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc453)
          cir.break loc(#loc454)
        } loc(#loc451)
        cir.yield loc(#loc442)
      } loc(#loc442)
    } loc(#loc632)
    cir.return loc(#loc425)
  } loc(#loc627)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc634)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc459)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc460)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc635)
    cir.scope {
      %3 = cir.const #cir.int<6> : !s32i loc(#loc464)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %4 = cir.const #cir.int<20> : !s32i loc(#loc466)
          cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc637)
          cir.break loc(#loc468)
        } loc(#loc465)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc470)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc470)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc471)
          cir.break loc(#loc472)
        } loc(#loc469)
        cir.yield loc(#loc462)
      } loc(#loc462)
    } loc(#loc636)
    cir.scope {
      %3 = cir.const #cir.int<7> : !s32i loc(#loc475)
      cir.switch (%3 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc477)
          %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc477)
          %6 = cir.call @usleep(%5) : (!u32i) -> !s32i loc(#loc478)
          %7 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 29>> loc(#loc479)
          %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 29>>), !cir.ptr<!s8i> loc(#loc479)
          cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc480)
          cir.break loc(#loc481)
        } loc(#loc476)
        cir.case(default, []) {
          %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc483)
          %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc483)
          cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc484)
          cir.break loc(#loc485)
        } loc(#loc482)
        cir.yield loc(#loc473)
      } loc(#loc473)
    } loc(#loc638)
    cir.return loc(#loc456)
  } loc(#loc633)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s01/CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":84:49)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc18 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":117:19)
#loc19 = loc("/usr/include/unistd.h":480:1)
#loc20 = loc("/usr/include/unistd.h":480:43)
#loc21 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":125:19)
#loc22 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":50:1)
#loc23 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":132:1)
#loc24 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":52:5)
#loc25 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":52:9)
#loc26 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":54:14)
#loc27 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":54:13)
#loc28 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":54:5)
#loc29 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":55:5)
#loc30 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":119:5)
#loc31 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":55:12)
#loc32 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":57:5)
#loc33 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":58:5)
#loc34 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":113:5)
#loc35 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":63:9)
#loc36 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":63:13)
#loc37 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":64:9)
#loc38 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":64:28)
#loc39 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":65:9)
#loc40 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":65:32)
#loc41 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":66:9)
#loc42 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":66:41)
#loc43 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":67:9)
#loc44 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":102:17)
#loc45 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":77:36)
#loc46 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":77:45)
#loc47 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":77:58)
#loc48 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":77:29)
#loc49 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":77:13)
#loc50 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":77:69)
#loc51 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":78:13)
#loc52 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":81:13)
#loc53 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":78:17)
#loc54 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":78:34)
#loc55 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":79:13)
#loc56 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":80:17)
#loc57 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":82:20)
#loc58 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":82:21)
#loc59 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":82:30)
#loc60 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":82:33)
#loc61 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":82:47)
#loc62 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":82:13)
#loc63 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":82:48)
#loc64 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":83:34)
#loc65 = loc("/usr/include/netinet/in.h":249:5)
#loc66 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":83:13)
#loc67 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":84:39)
#loc68 = loc("/usr/include/netinet/in.h":251:20)
#loc69 = loc("/usr/include/netinet/in.h":33:15)
#loc70 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":84:13)
#loc71 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":84:59)
#loc72 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":85:38)
#loc73 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":85:32)
#loc74 = loc("/usr/include/netinet/in.h":250:15)
#loc75 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":85:13)
#loc76 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":85:46)
#loc77 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":86:13)
#loc78 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":89:13)
#loc79 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":86:25)
#loc80 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":86:58)
#loc81 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":86:59)
#loc82 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":86:68)
#loc83 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":86:82)
#loc84 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":86:17)
#loc85 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":86:88)
#loc86 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":87:13)
#loc87 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":88:17)
#loc88 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":92:31)
#loc89 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":92:46)
#loc90 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":92:59)
#loc91 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":92:77)
#loc92 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":92:80)
#loc93 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":92:26)
#loc94 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":92:13)
#loc95 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":92:81)
#loc96 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":93:13)
#loc97 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":96:13)
#loc98 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":93:17)
#loc99 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":93:31)
#loc100 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":93:44)
#loc101 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":93:47)
#loc102 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":93:61)
#loc103 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":94:13)
#loc104 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":95:17)
#loc105 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":98:39)
#loc106 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":98:25)
#loc107 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":98:13)
#loc108 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":100:26)
#loc109 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":100:21)
#loc110 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":100:13)
#loc111 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":100:37)
#loc112 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":102:16)
#loc113 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":103:9)
#loc114 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":106:9)
#loc115 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":103:13)
#loc116 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":103:30)
#loc117 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":104:9)
#loc118 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":105:26)
#loc119 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":105:13)
#loc120 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":114:5)
#loc121 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":115:5)
#loc122 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":117:9)
#loc123 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":118:9)
#loc124 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":120:5)
#loc125 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":131:5)
#loc126 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":120:12)
#loc127 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":122:5)
#loc128 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":124:15)
#loc129 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":124:9)
#loc130 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":125:9)
#loc131 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":126:9)
#loc132 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":127:5)
#loc133 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":129:19)
#loc134 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":129:9)
#loc135 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":130:9)
#loc136 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":384:1)
#loc137 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":390:1)
#loc138 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":386:5)
#loc139 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":386:14)
#loc140 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":387:5)
#loc141 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":387:14)
#loc142 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":388:5)
#loc143 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":388:14)
#loc144 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":389:5)
#loc145 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":389:14)
#loc146 = loc("/usr/include/stdlib.h":575:1)
#loc147 = loc("/usr/include/stdlib.h":575:41)
#loc148 = loc("/usr/include/time.h":76:1)
#loc149 = loc("/usr/include/time.h":76:38)
#loc150 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":406:15)
#loc151 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":408:15)
#loc152 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":411:15)
#loc153 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":413:15)
#loc154 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":401:1)
#loc155 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":416:1)
#loc160 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":402:1)
#loc161 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":404:27)
#loc162 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":404:22)
#loc163 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":404:5)
#loc164 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":406:5)
#loc165 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":407:5)
#loc166 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":407:62)
#loc167 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":408:5)
#loc168 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":411:5)
#loc169 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":412:5)
#loc170 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":412:61)
#loc171 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":413:5)
#loc172 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":415:12)
#loc173 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":415:5)
#loc174 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":220:23)
#loc175 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":224:23)
#loc176 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":139:1)
#loc177 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":228:1)
#loc178 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":141:5)
#loc179 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":141:9)
#loc180 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":143:14)
#loc181 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":143:13)
#loc182 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":143:5)
#loc183 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":144:5)
#loc184 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":208:5)
#loc185 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":144:12)
#loc186 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":146:5)
#loc187 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":147:5)
#loc188 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":202:5)
#loc189 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":152:9)
#loc190 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":152:13)
#loc191 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":153:9)
#loc192 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":153:28)
#loc193 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":154:9)
#loc194 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":154:32)
#loc195 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":155:9)
#loc196 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":155:41)
#loc197 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":156:9)
#loc198 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":191:17)
#loc199 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":166:36)
#loc200 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":166:45)
#loc201 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":166:58)
#loc202 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":166:29)
#loc203 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":166:13)
#loc204 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":166:69)
#loc205 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":167:13)
#loc206 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":170:13)
#loc207 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":167:17)
#loc208 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":167:34)
#loc209 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":168:13)
#loc210 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":169:17)
#loc211 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":171:20)
#loc212 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":171:21)
#loc213 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":171:30)
#loc214 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":171:33)
#loc215 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":171:47)
#loc216 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":171:13)
#loc217 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":171:48)
#loc218 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":172:34)
#loc219 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":172:13)
#loc220 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":173:49)
#loc221 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":173:39)
#loc222 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":173:13)
#loc223 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":173:59)
#loc224 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":174:38)
#loc225 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":174:32)
#loc226 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":174:13)
#loc227 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":174:46)
#loc228 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":175:13)
#loc229 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":178:13)
#loc230 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":175:25)
#loc231 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":175:58)
#loc232 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":175:59)
#loc233 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":175:68)
#loc234 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":175:82)
#loc235 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":175:17)
#loc236 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":175:88)
#loc237 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":176:13)
#loc238 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":177:17)
#loc239 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":181:31)
#loc240 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":181:46)
#loc241 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":181:59)
#loc242 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":181:77)
#loc243 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":181:80)
#loc244 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":181:26)
#loc245 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":181:13)
#loc246 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":181:81)
#loc247 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":182:13)
#loc248 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":185:13)
#loc249 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":182:17)
#loc250 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":182:31)
#loc251 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":182:44)
#loc252 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":182:47)
#loc253 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":182:61)
#loc254 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":183:13)
#loc255 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":184:17)
#loc256 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":187:39)
#loc257 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":187:25)
#loc258 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":187:13)
#loc259 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":189:26)
#loc260 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":189:21)
#loc261 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":189:13)
#loc262 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":189:37)
#loc263 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":191:16)
#loc264 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":192:9)
#loc265 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":195:9)
#loc266 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":192:13)
#loc267 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":192:30)
#loc268 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":193:9)
#loc269 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":194:26)
#loc270 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":194:13)
#loc271 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":203:5)
#loc272 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":204:5)
#loc273 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":206:19)
#loc274 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":206:9)
#loc275 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":207:9)
#loc276 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":209:5)
#loc277 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":227:5)
#loc278 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":209:12)
#loc279 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":211:5)
#loc280 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":213:19)
#loc281 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":213:9)
#loc282 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":214:9)
#loc283 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":215:5)
#loc284 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":217:9)
#loc285 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":225:9)
#loc286 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":217:13)
#loc287 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":217:21)
#loc288 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":217:23)
#loc289 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":217:26)
#loc290 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":217:35)
#loc291 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":218:9)
#loc292 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":221:9)
#loc293 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":223:9)
#loc294 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":219:19)
#loc295 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":219:13)
#loc296 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":220:13)
#loc297 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":224:13)
#loc298 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":226:9)
#loc299 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":231:1)
#loc300 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":320:1)
#loc301 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":233:5)
#loc302 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":233:9)
#loc303 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":235:14)
#loc304 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":235:13)
#loc305 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":235:5)
#loc306 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":236:5)
#loc307 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":300:5)
#loc308 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":236:12)
#loc309 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":238:5)
#loc310 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":239:5)
#loc311 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":294:5)
#loc312 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":244:9)
#loc313 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":244:13)
#loc314 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":245:9)
#loc315 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":245:28)
#loc316 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":246:9)
#loc317 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":246:32)
#loc318 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":247:9)
#loc319 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":247:41)
#loc320 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":248:9)
#loc321 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":283:17)
#loc322 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":258:36)
#loc323 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":258:45)
#loc324 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":258:58)
#loc325 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":258:29)
#loc326 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":258:13)
#loc327 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":258:69)
#loc328 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":259:13)
#loc329 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":262:13)
#loc330 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":259:17)
#loc331 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":259:34)
#loc332 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":260:13)
#loc333 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":261:17)
#loc334 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":263:20)
#loc335 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":263:21)
#loc336 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":263:30)
#loc337 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":263:33)
#loc338 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":263:47)
#loc339 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":263:13)
#loc340 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":263:48)
#loc341 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":264:34)
#loc342 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":264:13)
#loc343 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":265:49)
#loc344 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":265:39)
#loc345 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":265:13)
#loc346 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":265:59)
#loc347 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":266:38)
#loc348 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":266:32)
#loc349 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":266:13)
#loc350 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":266:46)
#loc351 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":267:13)
#loc352 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":270:13)
#loc353 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":267:25)
#loc354 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":267:58)
#loc355 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":267:59)
#loc356 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":267:68)
#loc357 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":267:82)
#loc358 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":267:17)
#loc359 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":267:88)
#loc360 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":268:13)
#loc361 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":269:17)
#loc362 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":273:31)
#loc363 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":273:46)
#loc364 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":273:59)
#loc365 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":273:77)
#loc366 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":273:80)
#loc367 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":273:26)
#loc368 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":273:13)
#loc369 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":273:81)
#loc370 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":274:13)
#loc371 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":277:13)
#loc372 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":274:17)
#loc373 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":274:31)
#loc374 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":274:44)
#loc375 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":274:47)
#loc376 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":274:61)
#loc377 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":275:13)
#loc378 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":276:17)
#loc379 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":279:39)
#loc380 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":279:25)
#loc381 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":279:13)
#loc382 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":281:26)
#loc383 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":281:21)
#loc384 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":281:13)
#loc385 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":281:37)
#loc386 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":283:16)
#loc387 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":284:9)
#loc388 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":287:9)
#loc389 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":284:13)
#loc390 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":284:30)
#loc391 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":285:9)
#loc392 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":286:26)
#loc393 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":286:13)
#loc394 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":295:5)
#loc395 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":296:5)
#loc396 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":298:19)
#loc397 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":298:9)
#loc398 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":299:9)
#loc399 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":301:5)
#loc400 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":319:5)
#loc401 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":301:12)
#loc402 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":303:5)
#loc403 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":305:9)
#loc404 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":313:9)
#loc405 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":305:13)
#loc406 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":305:21)
#loc407 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":305:23)
#loc408 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":305:26)
#loc409 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":305:35)
#loc410 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":306:9)
#loc411 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":309:9)
#loc412 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":311:9)
#loc413 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":307:19)
#loc414 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":307:13)
#loc415 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":308:23)
#loc416 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":308:13)
#loc417 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":312:23)
#loc418 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":312:13)
#loc419 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":314:9)
#loc420 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":315:5)
#loc421 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":317:19)
#loc422 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":317:9)
#loc423 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":318:9)
#loc424 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":323:1)
#loc425 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":351:1)
#loc426 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":325:5)
#loc427 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":325:9)
#loc428 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":327:14)
#loc429 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":327:13)
#loc430 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":327:5)
#loc431 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":328:5)
#loc432 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":338:5)
#loc433 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":328:12)
#loc434 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":330:5)
#loc435 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":332:19)
#loc436 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":332:9)
#loc437 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":333:9)
#loc438 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":334:5)
#loc439 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":336:17)
#loc440 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":336:9)
#loc441 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":337:9)
#loc442 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":339:5)
#loc443 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":350:5)
#loc444 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":339:12)
#loc445 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":341:5)
#loc446 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":343:15)
#loc447 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":343:9)
#loc448 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":344:19)
#loc449 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":344:9)
#loc450 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":345:9)
#loc451 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":346:5)
#loc452 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":348:19)
#loc453 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":348:9)
#loc454 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":349:9)
#loc455 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":354:1)
#loc456 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":382:1)
#loc457 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":356:5)
#loc458 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":356:9)
#loc459 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":358:14)
#loc460 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":358:13)
#loc461 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":358:5)
#loc462 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":359:5)
#loc463 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":369:5)
#loc464 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":359:12)
#loc465 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":361:5)
#loc466 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":363:17)
#loc467 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":363:9)
#loc468 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":364:9)
#loc469 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":365:5)
#loc470 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":367:19)
#loc471 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":367:9)
#loc472 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":368:9)
#loc473 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":370:5)
#loc474 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":381:5)
#loc475 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":370:12)
#loc476 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":372:5)
#loc477 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":374:15)
#loc478 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":374:9)
#loc479 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":375:19)
#loc480 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":375:9)
#loc481 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":376:9)
#loc482 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":377:5)
#loc483 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":379:19)
#loc484 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":379:9)
#loc485 = loc("CWE400_Resource_Exhaustion__connect_socket_sleep_15.c":380:9)
#loc486 = loc(fused[#loc1, #loc2])
#loc487 = loc(fused[#loc3, #loc4])
#loc488 = loc(fused[#loc6, #loc7])
#loc489 = loc(fused[#loc8, #loc9])
#loc490 = loc(fused[#loc10, #loc11])
#loc491 = loc(fused[#loc12, #loc13])
#loc492 = loc(fused[#loc14, #loc15])
#loc493 = loc(fused[#loc16, #loc17])
#loc494 = loc(fused[#loc19, #loc20])
#loc495 = loc(fused[#loc22, #loc23])
#loc496 = loc(fused[#loc24, #loc25])
#loc497 = loc(fused[#loc28, #loc26])
#loc498 = loc(fused[#loc29, #loc30])
#loc499 = loc(fused[#loc33, #loc34])
#loc500 = loc(fused[#loc35, #loc36])
#loc501 = loc(fused[#loc37, #loc38])
#loc502 = loc(fused[#loc39, #loc40])
#loc503 = loc(fused[#loc41, #loc42])
#loc504 = loc(fused[#loc43, #loc44])
#loc505 = loc(fused[#loc49, #loc50])
#loc506 = loc(fused[#loc51, #loc52])
#loc507 = loc(fused[#loc53, #loc54])
#loc508 = loc(fused[#loc55, #loc52])
#loc509 = loc(fused[#loc57, #loc58])
#loc510 = loc(fused[#loc60, #loc61])
#loc511 = loc(fused[#loc62, #loc63])
#loc512 = loc(fused[#loc66, #loc64])
#loc513 = loc(fused[#loc70, #loc71])
#loc514 = loc(fused[#loc75, #loc76])
#loc515 = loc(fused[#loc77, #loc78])
#loc516 = loc(fused[#loc80, #loc81])
#loc517 = loc(fused[#loc82, #loc83])
#loc518 = loc(fused[#loc84, #loc85])
#loc519 = loc(fused[#loc86, #loc78])
#loc520 = loc(fused[#loc90, #loc91])
#loc521 = loc(fused[#loc94, #loc95])
#loc522 = loc(fused[#loc96, #loc97])
#loc523 = loc(fused[#loc98, #loc99])
#loc524 = loc(fused[#loc101, #loc102])
#loc525 = loc(fused[#loc103, #loc97])
#loc526 = loc(fused[#loc107, #loc105])
#loc527 = loc(fused[#loc110, #loc111])
#loc528 = loc(fused[#loc113, #loc114])
#loc529 = loc(fused[#loc115, #loc116])
#loc530 = loc(fused[#loc117, #loc114])
#loc531 = loc(fused[#loc124, #loc125])
#loc532 = loc(fused[#loc136, #loc137])
#loc533 = loc(fused[#loc138, #loc139])
#loc534 = loc(fused[#loc140, #loc141])
#loc535 = loc(fused[#loc142, #loc143])
#loc536 = loc(fused[#loc144, #loc145])
#loc537 = loc(fused[#loc146, #loc147])
#loc538 = loc(fused[#loc148, #loc149])
#loc539 = loc(fused[#loc154, #loc155])
#loc542 = loc(fused[#loc165, #loc166])
#loc543 = loc(fused[#loc169, #loc170])
#loc544 = loc(fused[#loc173, #loc172])
#loc545 = loc(fused[#loc176, #loc177])
#loc546 = loc(fused[#loc178, #loc179])
#loc547 = loc(fused[#loc182, #loc180])
#loc548 = loc(fused[#loc183, #loc184])
#loc549 = loc(fused[#loc187, #loc188])
#loc550 = loc(fused[#loc189, #loc190])
#loc551 = loc(fused[#loc191, #loc192])
#loc552 = loc(fused[#loc193, #loc194])
#loc553 = loc(fused[#loc195, #loc196])
#loc554 = loc(fused[#loc197, #loc198])
#loc555 = loc(fused[#loc203, #loc204])
#loc556 = loc(fused[#loc205, #loc206])
#loc557 = loc(fused[#loc207, #loc208])
#loc558 = loc(fused[#loc209, #loc206])
#loc559 = loc(fused[#loc211, #loc212])
#loc560 = loc(fused[#loc214, #loc215])
#loc561 = loc(fused[#loc216, #loc217])
#loc562 = loc(fused[#loc219, #loc218])
#loc563 = loc(fused[#loc222, #loc223])
#loc564 = loc(fused[#loc226, #loc227])
#loc565 = loc(fused[#loc228, #loc229])
#loc566 = loc(fused[#loc231, #loc232])
#loc567 = loc(fused[#loc233, #loc234])
#loc568 = loc(fused[#loc235, #loc236])
#loc569 = loc(fused[#loc237, #loc229])
#loc570 = loc(fused[#loc241, #loc242])
#loc571 = loc(fused[#loc245, #loc246])
#loc572 = loc(fused[#loc247, #loc248])
#loc573 = loc(fused[#loc249, #loc250])
#loc574 = loc(fused[#loc252, #loc253])
#loc575 = loc(fused[#loc254, #loc248])
#loc576 = loc(fused[#loc258, #loc256])
#loc577 = loc(fused[#loc261, #loc262])
#loc578 = loc(fused[#loc264, #loc265])
#loc579 = loc(fused[#loc266, #loc267])
#loc580 = loc(fused[#loc268, #loc265])
#loc581 = loc(fused[#loc276, #loc277])
#loc582 = loc(fused[#loc284, #loc285])
#loc583 = loc(fused[#loc286, #loc287])
#loc584 = loc(fused[#loc289, #loc290])
#loc585 = loc(fused[#loc291, #loc292, #loc293, #loc285])
#loc586 = loc(fused[#loc299, #loc300])
#loc587 = loc(fused[#loc301, #loc302])
#loc588 = loc(fused[#loc305, #loc303])
#loc589 = loc(fused[#loc306, #loc307])
#loc590 = loc(fused[#loc310, #loc311])
#loc591 = loc(fused[#loc312, #loc313])
#loc592 = loc(fused[#loc314, #loc315])
#loc593 = loc(fused[#loc316, #loc317])
#loc594 = loc(fused[#loc318, #loc319])
#loc595 = loc(fused[#loc320, #loc321])
#loc596 = loc(fused[#loc326, #loc327])
#loc597 = loc(fused[#loc328, #loc329])
#loc598 = loc(fused[#loc330, #loc331])
#loc599 = loc(fused[#loc332, #loc329])
#loc600 = loc(fused[#loc334, #loc335])
#loc601 = loc(fused[#loc337, #loc338])
#loc602 = loc(fused[#loc339, #loc340])
#loc603 = loc(fused[#loc342, #loc341])
#loc604 = loc(fused[#loc345, #loc346])
#loc605 = loc(fused[#loc349, #loc350])
#loc606 = loc(fused[#loc351, #loc352])
#loc607 = loc(fused[#loc354, #loc355])
#loc608 = loc(fused[#loc356, #loc357])
#loc609 = loc(fused[#loc358, #loc359])
#loc610 = loc(fused[#loc360, #loc352])
#loc611 = loc(fused[#loc364, #loc365])
#loc612 = loc(fused[#loc368, #loc369])
#loc613 = loc(fused[#loc370, #loc371])
#loc614 = loc(fused[#loc372, #loc373])
#loc615 = loc(fused[#loc375, #loc376])
#loc616 = loc(fused[#loc377, #loc371])
#loc617 = loc(fused[#loc381, #loc379])
#loc618 = loc(fused[#loc384, #loc385])
#loc619 = loc(fused[#loc387, #loc388])
#loc620 = loc(fused[#loc389, #loc390])
#loc621 = loc(fused[#loc391, #loc388])
#loc622 = loc(fused[#loc399, #loc400])
#loc623 = loc(fused[#loc403, #loc404])
#loc624 = loc(fused[#loc405, #loc406])
#loc625 = loc(fused[#loc408, #loc409])
#loc626 = loc(fused[#loc410, #loc411, #loc412, #loc404])
#loc627 = loc(fused[#loc424, #loc425])
#loc628 = loc(fused[#loc426, #loc427])
#loc629 = loc(fused[#loc430, #loc428])
#loc630 = loc(fused[#loc431, #loc432])
#loc631 = loc(fused[#loc440, #loc439])
#loc632 = loc(fused[#loc442, #loc443])
#loc633 = loc(fused[#loc455, #loc456])
#loc634 = loc(fused[#loc457, #loc458])
#loc635 = loc(fused[#loc461, #loc459])
#loc636 = loc(fused[#loc462, #loc463])
#loc637 = loc(fused[#loc467, #loc466])
#loc638 = loc(fused[#loc473, #loc474])
