!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc55 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":60:33)
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_open_64a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_64L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc94)
  cir.global "private" constant cir_private @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_643badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc95)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc96)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc97)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc98)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc99)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc13)
  cir.func private @_ZN51CWE23_Relative_Path_Traversal__char_console_open_647badSinkEPv(!cir.ptr<!void>) loc(#loc100)
  cir.func @_ZN51CWE23_Relative_Path_Traversal__char_console_open_643badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc102)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc103)
    %2 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc95)
    %3 = cir.get_global @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_643badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc95)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc95)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc22)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc104)
    cir.br ^bb1 loc(#loc105)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc26)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
    %7 = cir.call @strlen(%6) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc26)
    cir.store %7, %0 : !u64i, !cir.ptr<!u64i> loc(#loc102)
    cir.br ^bb2 loc(#loc106)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<4096> : !s32i loc(#loc30)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc30)
    %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc31)
    %11 = cir.binop(sub, %9, %10) : !u64i loc(#loc107)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc32)
    %14 = cir.cmp(gt, %11, %13) : !u64i, !cir.bool loc(#loc108)
    cir.brcond %14 ^bb3, ^bb21 loc(#loc109)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc110)
  ^bb4:  // pred: ^bb3
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    %16 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc37)
    %17 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %16 : !u64i), !cir.ptr<!s8i> loc(#loc38)
    %18 = cir.const #cir.int<4096> : !s32i loc(#loc39)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc39)
    %20 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc40)
    %21 = cir.binop(sub, %19, %20) : !u64i loc(#loc111)
    %22 = cir.cast(integral, %21 : !u64i), !s32i loc(#loc111)
    %23 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc98)
    %24 = cir.load %23 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc41)
    %25 = cir.call @fgets(%17, %22, %24) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc42)
    %26 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc43)
    %27 = cir.cmp(ne, %25, %26) : !cir.ptr<!s8i>, !cir.bool loc(#loc112)
    cir.brcond %27 ^bb5, ^bb18 loc(#loc113)
  ^bb5:  // pred: ^bb4
    %28 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc47)
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc48)
    %30 = cir.call @strlen(%29) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc47)
    cir.store %30, %0 : !u64i, !cir.ptr<!u64i> loc(#loc114)
    cir.br ^bb6 loc(#loc115)
  ^bb6:  // pred: ^bb5
    %31 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc53)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc54)
    %34 = cir.cmp(gt, %31, %33) : !u64i, !cir.bool loc(#loc116)
    cir.brcond %34 ^bb7, ^bb12 loc(#loc55)
  ^bb7:  // pred: ^bb6
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    %36 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc57)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc58)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc58)
    %39 = cir.binop(sub, %36, %38) : !u64i loc(#loc117)
    %40 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc59)
    %41 = cir.load %40 : !cir.ptr<!s8i>, !s8i loc(#loc56)
    %42 = cir.cast(integral, %41 : !s8i), !s32i loc(#loc56)
    %43 = cir.const #cir.int<10> : !s8i loc(#loc60)
    %44 = cir.cast(integral, %43 : !s8i), !s32i loc(#loc60)
    %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc118)
    cir.brcond %45 ^bb8, ^bb9 loc(#loc55)
  ^bb8:  // pred: ^bb7
    %46 = cir.const #true loc(#loc55)
    cir.br ^bb10(%46 : !cir.bool) loc(#loc55)
  ^bb9:  // pred: ^bb7
    %47 = cir.const #false loc(#loc55)
    cir.br ^bb10(%47 : !cir.bool) loc(#loc55)
  ^bb10(%48: !cir.bool loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":60:33)):  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc55)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13(%48 : !cir.bool) loc(#loc55)
  ^bb12:  // pred: ^bb6
    %49 = cir.const #false loc(#loc55)
    cir.br ^bb13(%49 : !cir.bool) loc(#loc55)
  ^bb13(%50: !cir.bool loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":60:33)):  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc55)
  ^bb14:  // pred: ^bb13
    cir.brcond %50 ^bb15, ^bb16 loc(#loc119)
  ^bb15:  // pred: ^bb14
    %51 = cir.const #cir.int<0> : !s8i loc(#loc62)
    %52 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
    %53 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc64)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc65)
    %55 = cir.cast(integral, %54 : !s32i), !u64i loc(#loc65)
    %56 = cir.binop(sub, %53, %55) : !u64i loc(#loc120)
    %57 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %56 : !u64i), !cir.ptr<!s8i> loc(#loc66)
    cir.store %51, %57 : !s8i, !cir.ptr<!s8i> loc(#loc121)
    cir.br ^bb16 loc(#loc52)
  ^bb16:  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc52)
  ^bb17:  // pred: ^bb16
    cir.br ^bb19 loc(#loc45)
  ^bb18:  // pred: ^bb4
    %58 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc13)
    %59 = cir.cast(array_to_ptrdecay, %58 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc13)
    cir.call @printLine(%59) : (!cir.ptr<!s8i>) -> () loc(#loc67)
    %60 = cir.const #cir.int<0> : !s8i loc(#loc68)
    %61 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
    %62 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc70)
    %63 = cir.ptr_stride(%61 : !cir.ptr<!s8i>, %62 : !u64i), !cir.ptr<!s8i> loc(#loc71)
    cir.store %60, %63 : !s8i, !cir.ptr<!s8i> loc(#loc122)
    cir.br ^bb19 loc(#loc35)
  ^bb19:  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc35)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc29)
  ^bb21:  // 2 preds: ^bb2, ^bb20
    cir.br ^bb22 loc(#loc29)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc25)
  ^bb23:  // pred: ^bb22
    %64 = cir.cast(bitcast, %1 : !cir.ptr<!cir.ptr<!s8i>>), !cir.ptr<!void> loc(#loc123)
    cir.call @_ZN51CWE23_Relative_Path_Traversal__char_console_open_647badSinkEPv(%64) : (!cir.ptr<!void>) -> () loc(#loc74)
    cir.return loc(#loc17)
  } loc(#loc101)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc124)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc77)
  cir.func private @_ZN51CWE23_Relative_Path_Traversal__char_console_open_6411goodG2BSinkEPv(!cir.ptr<!void>) loc(#loc125)
  cir.func internal private @_ZN51CWE23_Relative_Path_Traversal__char_console_open_64L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc127)
    %1 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc94)
    %2 = cir.get_global @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_64L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc94)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc94)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc84)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc128)
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc86)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc77)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc77)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc86)
    %9 = cir.cast(bitcast, %0 : !cir.ptr<!cir.ptr<!s8i>>), !cir.ptr<!void> loc(#loc129)
    cir.call @_ZN51CWE23_Relative_Path_Traversal__char_console_open_6411goodG2BSinkEPv(%9) : (!cir.ptr<!void>) -> () loc(#loc90)
    cir.return loc(#loc81)
  } loc(#loc126)
  cir.func @_ZN51CWE23_Relative_Path_Traversal__char_console_open_644goodEv() extra(#fn_attr1) {
    cir.call @_ZN51CWE23_Relative_Path_Traversal__char_console_open_64L7goodG2BEv() : () -> () loc(#loc93)
    cir.return loc(#loc92)
  } loc(#loc130)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":86:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":86:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":46:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":46:37)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("/usr/include/stdio.h":149:1)
#loc10 = loc("/usr/include/stdio.h":149:14)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":67:27)
#loc14 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":41:1)
#loc15 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":41:32)
#loc16 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":43:1)
#loc17 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":74:1)
#loc18 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":50:9)
#loc19 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":50:37)
#loc20 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":45:5)
#loc21 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":45:12)
#loc22 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":47:12)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":47:5)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":48:5)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":72:5)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":50:26)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":50:33)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":52:9)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":71:9)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":52:13)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":52:26)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":52:36)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":53:9)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":55:13)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":70:13)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":55:23)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":55:28)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":55:27)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":55:43)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":55:56)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":55:66)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":55:17)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":55:76)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":56:13)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":64:13)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":66:13)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":59:27)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":59:34)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":59:17)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":59:38)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":60:17)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":63:17)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":60:21)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":60:31)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":60:36)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":60:41)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":60:49)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":60:50)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":60:55)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":61:17)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":62:39)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":62:21)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":62:26)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":62:34)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":62:35)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":67:17)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":69:33)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":69:17)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":69:22)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":69:29)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":73:13)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":73:14)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":73:5)
#loc75 = loc("/usr/include/string.h":149:1)
#loc76 = loc("/usr/include/string.h":150:14)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":89:18)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":81:1)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":81:36)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":83:1)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":91:1)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":85:5)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":85:12)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":87:12)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":87:5)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":89:5)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":89:12)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":90:17)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":90:18)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":90:5)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":93:1)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":96:1)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_console_open_64a.cpp":95:5)
#loc94 = loc(fused[#loc1, #loc2])
#loc95 = loc(fused[#loc3, #loc4])
#loc96 = loc(fused[#loc5, #loc6])
#loc97 = loc(fused[#loc7, #loc8])
#loc98 = loc(fused[#loc9, #loc10])
#loc99 = loc(fused[#loc11, #loc12])
#loc100 = loc(fused[#loc14, #loc15])
#loc101 = loc(fused[#loc16, #loc17])
#loc102 = loc(fused[#loc18, #loc19])
#loc103 = loc(fused[#loc20, #loc21])
#loc104 = loc(fused[#loc23, #loc22])
#loc105 = loc(fused[#loc24, #loc25])
#loc106 = loc(fused[#loc28, #loc29])
#loc107 = loc(fused[#loc30, #loc31])
#loc108 = loc(fused[#loc30, #loc32])
#loc109 = loc(fused[#loc33, #loc29])
#loc110 = loc(fused[#loc34, #loc35])
#loc111 = loc(fused[#loc39, #loc40])
#loc112 = loc(fused[#loc42, #loc43])
#loc113 = loc(fused[#loc44, #loc45, #loc46, #loc35])
#loc114 = loc(fused[#loc49, #loc50])
#loc115 = loc(fused[#loc51, #loc52])
#loc116 = loc(fused[#loc53, #loc54])
#loc117 = loc(fused[#loc57, #loc58])
#loc118 = loc(fused[#loc56, #loc60])
#loc119 = loc(fused[#loc61, #loc52])
#loc120 = loc(fused[#loc64, #loc65])
#loc121 = loc(fused[#loc63, #loc62])
#loc122 = loc(fused[#loc69, #loc68])
#loc123 = loc(fused[#loc72, #loc73])
#loc124 = loc(fused[#loc75, #loc76])
#loc125 = loc(fused[#loc78, #loc79])
#loc126 = loc(fused[#loc80, #loc81])
#loc127 = loc(fused[#loc82, #loc83])
#loc128 = loc(fused[#loc85, #loc84])
#loc129 = loc(fused[#loc88, #loc89])
#loc130 = loc(fused[#loc91, #loc92])
