!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE377_Insecure_Temporary_File/CWE377_Insecure_Temporary_File__char_mktemp_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.good2.filename = #cir.const_array<"/tmp/fileXXXXXX\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> loc(#loc131)
  cir.global "private" constant cir_private @__const.good1.filename = #cir.const_array<"/tmp/fileXXXXXX\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> loc(#loc132)
  cir.global "private" constant cir_private @__const.CWE377_Insecure_Temporary_File__char_mktemp_08_bad.tmpl = #cir.const_array<"fnXXXXXX\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc133)
  cir.func private @mktemp(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc134)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc135)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc136)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc137)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Temporary file was opened...now closing file\00" : !cir.array<!s8i x 45>> : !cir.array<!s8i x 45> {alignment = 1 : i64} loc(#loc15)
  cir.func private @close(!s32i) -> !s32i loc(#loc138)
  cir.func no_proto @CWE377_Insecure_Temporary_File__char_mktemp_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename"] {alignment = 8 : i64} loc(#loc140)
    %1 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["tmpl"] {alignment = 1 : i64} loc(#loc133)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc141)
    cir.br ^bb1 loc(#loc142)
  ^bb1:  // pred: ^bb0
    %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc143)
    %4 = cir.call %3() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc26)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc26)
    cir.brcond %5 ^bb2, ^bb13 loc(#loc144)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc145)
  ^bb3:  // pred: ^bb2
    %6 = cir.get_global @__const.CWE377_Insecure_Temporary_File__char_mktemp_08_bad.tmpl : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc133)
    cir.copy %6 to %1 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc133)
    %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc31)
    %8 = cir.call @mktemp(%7) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc32)
    cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
    cir.br ^bb4 loc(#loc147)
  ^bb4:  // pred: ^bb3
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc38)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc38)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!s8i>, !cir.bool loc(#loc148)
    cir.brcond %12 ^bb5, ^bb6 loc(#loc149)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc40)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc41)
    cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc40)
    cir.br ^bb6 loc(#loc36)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc36)
  ^bb7:  // pred: ^bb6
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    %17 = cir.const #cir.int<2> : !s32i loc(#loc45)
    %18 = cir.const #cir.int<64> : !s32i loc(#loc46)
    %19 = cir.binop(or, %17, %18) : !s32i loc(#loc150)
    %20 = cir.const #cir.int<256> : !s32i loc(#loc47)
    %21 = cir.const #cir.int<128> : !s32i loc(#loc48)
    %22 = cir.binop(or, %20, %21) : !s32i loc(#loc151)
    %23 = cir.call @open(%16, %19, %22) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc49)
    cir.store %23, %2 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    cir.br ^bb8 loc(#loc153)
  ^bb8:  // pred: ^bb7
    %24 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc54)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc55)
    %26 = cir.unary(minus, %25) : !s32i, !s32i loc(#loc56)
    %27 = cir.cmp(ne, %24, %26) : !s32i, !cir.bool loc(#loc154)
    cir.brcond %27 ^bb9, ^bb10 loc(#loc155)
  ^bb9:  // pred: ^bb8
    %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 45>> loc(#loc15)
    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 45>>), !cir.ptr<!s8i> loc(#loc15)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %30 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc59)
    %31 = cir.call @close(%30) : (!s32i) -> !s32i loc(#loc60)
    cir.br ^bb10 loc(#loc53)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc53)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc30)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc25)
  ^bb13:  // 2 preds: ^bb1, ^bb12
    cir.br ^bb14 loc(#loc25)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc19)
  } loc(#loc139)
  cir.func no_proto @CWE377_Insecure_Temporary_File__char_mktemp_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc157)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc63)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc158)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc65)
    cir.return loc(#loc62)
  } loc(#loc156)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc68)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc69)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc160)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc160)
    cir.return %2 : !s32i loc(#loc160)
  } loc(#loc159)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc71)
  cir.func private @mkstemp(!cir.ptr<!s8i>) -> !s32i loc(#loc161)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 16>, !cir.ptr<!cir.array<!s8i x 16>>, ["filename"] {alignment = 16 : i64} loc(#loc132)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc163)
    cir.br ^bb1 loc(#loc164)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc165)
    %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc80)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc80)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc166)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc71)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    cir.br ^bb10 loc(#loc83)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc167)
  ^bb4:  // pred: ^bb3
    %7 = cir.get_global @__const.good1.filename : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc132)
    cir.copy %7 to %0 : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc132)
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc88)
    %9 = cir.call @mkstemp(%8) : (!cir.ptr<!s8i>) -> !s32i loc(#loc89)
    cir.store %9, %1 : !s32i, !cir.ptr<!s32i> loc(#loc163)
    %10 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc90)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    cir.br ^bb5 loc(#loc168)
  ^bb5:  // pred: ^bb4
    %11 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %13 = cir.unary(minus, %12) : !s32i, !s32i loc(#loc96)
    %14 = cir.cmp(ne, %11, %13) : !s32i, !cir.bool loc(#loc169)
    cir.brcond %14 ^bb6, ^bb7 loc(#loc170)
  ^bb6:  // pred: ^bb5
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 45>> loc(#loc98)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 45>>), !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc99)
    %17 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc100)
    %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc101)
    cir.br ^bb7 loc(#loc93)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc93)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc87)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc79)
  ^bb10:  // 2 preds: ^bb2, ^bb9
    cir.br ^bb11 loc(#loc79)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc75)
  } loc(#loc162)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc103)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc104)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc172)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc172)
    cir.return %2 : !s32i loc(#loc172)
  } loc(#loc171)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 16>, !cir.ptr<!cir.array<!s8i x 16>>, ["filename"] {alignment = 16 : i64} loc(#loc131)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc174)
    cir.br ^bb1 loc(#loc175)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc176)
    %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc112)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc112)
    cir.brcond %4 ^bb2, ^bb9 loc(#loc177)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc178)
  ^bb3:  // pred: ^bb2
    %5 = cir.get_global @__const.good2.filename : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc131)
    cir.copy %5 to %0 : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc131)
    %6 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc117)
    %7 = cir.call @mkstemp(%6) : (!cir.ptr<!s8i>) -> !s32i loc(#loc118)
    cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc174)
    %8 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc119)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    cir.br ^bb4 loc(#loc179)
  ^bb4:  // pred: ^bb3
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc123)
    %10 = cir.const #cir.int<1> : !s32i loc(#loc124)
    %11 = cir.unary(minus, %10) : !s32i, !s32i loc(#loc125)
    %12 = cir.cmp(ne, %9, %11) : !s32i, !cir.bool loc(#loc180)
    cir.brcond %12 ^bb5, ^bb6 loc(#loc181)
  ^bb5:  // pred: ^bb4
    %13 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 45>> loc(#loc127)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 45>>), !cir.ptr<!s8i> loc(#loc127)
    cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc128)
    %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    %16 = cir.call @close(%15) : (!s32i) -> !s32i loc(#loc130)
    cir.br ^bb6 loc(#loc122)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc122)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc116)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc111)
  ^bb9:  // 2 preds: ^bb1, ^bb8
    cir.br ^bb10 loc(#loc111)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc107)
  } loc(#loc173)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE377_Insecure_Temporary_File/CWE377_Insecure_Temporary_File__char_mktemp_08.c":0:0)
#loc1 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":123:13)
#loc2 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":123:31)
#loc3 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":103:13)
#loc4 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":103:31)
#loc5 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":69:13)
#loc6 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":69:27)
#loc7 = loc("/usr/include/stdlib.h":814:1)
#loc8 = loc("/usr/include/stdlib.h":814:48)
#loc9 = loc("/usr/include/stdlib.h":756:1)
#loc10 = loc("/usr/include/stdlib.h":756:70)
#loc11 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("/usr/include/fcntl.h":209:1)
#loc14 = loc("/usr/include/fcntl.h":209:56)
#loc15 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":81:27)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":63:1)
#loc19 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":86:1)
#loc20 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":68:13)
#loc21 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":68:20)
#loc22 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":70:13)
#loc23 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":70:17)
#loc24 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":65:5)
#loc25 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":85:5)
#loc26 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":65:8)
#loc27 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":65:26)
#loc28 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":66:5)
#loc29 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":67:9)
#loc30 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":84:9)
#loc31 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":71:31)
#loc32 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":71:24)
#loc33 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":71:13)
#loc34 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":71:35)
#loc35 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":72:13)
#loc36 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":75:13)
#loc37 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":72:17)
#loc38 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":72:29)
#loc39 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":73:13)
#loc40 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":74:17)
#loc41 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":74:22)
#loc42 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":76:23)
#loc43 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":76:13)
#loc44 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":78:29)
#loc45 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":78:39)
#loc46 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":78:46)
#loc47 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":78:55)
#loc48 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":78:63)
#loc49 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":78:24)
#loc50 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":78:13)
#loc51 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":78:71)
#loc52 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":79:13)
#loc53 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":83:13)
#loc54 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":79:17)
#loc55 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":79:30)
#loc56 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":79:29)
#loc57 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":80:13)
#loc58 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":81:17)
#loc59 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":82:23)
#loc60 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":82:17)
#loc61 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":137:1)
#loc62 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":141:1)
#loc63 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":139:5)
#loc64 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":139:11)
#loc65 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":140:5)
#loc66 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":140:11)
#loc67 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":51:1)
#loc68 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":54:1)
#loc69 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":53:12)
#loc70 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":53:5)
#loc71 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":98:19)
#loc72 = loc("/usr/include/stdlib.h":827:1)
#loc73 = loc("/usr/include/stdlib.h":827:39)
#loc74 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":93:1)
#loc75 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":115:1)
#loc76 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":106:13)
#loc77 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":106:44)
#loc78 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":95:5)
#loc79 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":114:5)
#loc80 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":95:8)
#loc81 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":95:27)
#loc82 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":96:5)
#loc83 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":99:5)
#loc84 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":101:5)
#loc85 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":98:9)
#loc86 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":102:9)
#loc87 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":113:9)
#loc88 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":106:36)
#loc89 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":106:28)
#loc90 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":107:23)
#loc91 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":107:13)
#loc92 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":108:13)
#loc93 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":112:13)
#loc94 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":108:17)
#loc95 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":108:30)
#loc96 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":108:29)
#loc97 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":109:13)
#loc98 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":110:27)
#loc99 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":110:17)
#loc100 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":111:23)
#loc101 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":111:17)
#loc102 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":56:1)
#loc103 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":59:1)
#loc104 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":58:12)
#loc105 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":58:5)
#loc106 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":118:1)
#loc107 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":135:1)
#loc108 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":126:13)
#loc109 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":126:44)
#loc110 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":120:5)
#loc111 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":134:5)
#loc112 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":120:8)
#loc113 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":120:26)
#loc114 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":121:5)
#loc115 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":122:9)
#loc116 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":133:9)
#loc117 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":126:36)
#loc118 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":126:28)
#loc119 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":127:23)
#loc120 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":127:13)
#loc121 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":128:13)
#loc122 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":132:13)
#loc123 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":128:17)
#loc124 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":128:30)
#loc125 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":128:29)
#loc126 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":129:13)
#loc127 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":130:27)
#loc128 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":130:17)
#loc129 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":131:23)
#loc130 = loc("CWE377_Insecure_Temporary_File__char_mktemp_08.c":131:17)
#loc131 = loc(fused[#loc1, #loc2])
#loc132 = loc(fused[#loc3, #loc4])
#loc133 = loc(fused[#loc5, #loc6])
#loc134 = loc(fused[#loc7, #loc8])
#loc135 = loc(fused[#loc9, #loc10])
#loc136 = loc(fused[#loc11, #loc12])
#loc137 = loc(fused[#loc13, #loc14])
#loc138 = loc(fused[#loc16, #loc17])
#loc139 = loc(fused[#loc18, #loc19])
#loc140 = loc(fused[#loc20, #loc21])
#loc141 = loc(fused[#loc22, #loc23])
#loc142 = loc(fused[#loc24, #loc25])
#loc143 = loc(fused[#loc26, #loc27])
#loc144 = loc(fused[#loc28, #loc25])
#loc145 = loc(fused[#loc29, #loc30])
#loc146 = loc(fused[#loc33, #loc34])
#loc147 = loc(fused[#loc35, #loc36])
#loc148 = loc(fused[#loc37, #loc38])
#loc149 = loc(fused[#loc39, #loc36])
#loc150 = loc(fused[#loc45, #loc46])
#loc151 = loc(fused[#loc47, #loc48])
#loc152 = loc(fused[#loc50, #loc51])
#loc153 = loc(fused[#loc52, #loc53])
#loc154 = loc(fused[#loc54, #loc55])
#loc155 = loc(fused[#loc57, #loc53])
#loc156 = loc(fused[#loc61, #loc62])
#loc157 = loc(fused[#loc63, #loc64])
#loc158 = loc(fused[#loc65, #loc66])
#loc159 = loc(fused[#loc67, #loc68])
#loc160 = loc(fused[#loc70, #loc69])
#loc161 = loc(fused[#loc72, #loc73])
#loc162 = loc(fused[#loc74, #loc75])
#loc163 = loc(fused[#loc76, #loc77])
#loc164 = loc(fused[#loc78, #loc79])
#loc165 = loc(fused[#loc80, #loc81])
#loc166 = loc(fused[#loc82, #loc83, #loc84, #loc79])
#loc167 = loc(fused[#loc86, #loc87])
#loc168 = loc(fused[#loc92, #loc93])
#loc169 = loc(fused[#loc94, #loc95])
#loc170 = loc(fused[#loc97, #loc93])
#loc171 = loc(fused[#loc102, #loc103])
#loc172 = loc(fused[#loc105, #loc104])
#loc173 = loc(fused[#loc106, #loc107])
#loc174 = loc(fused[#loc108, #loc109])
#loc175 = loc(fused[#loc110, #loc111])
#loc176 = loc(fused[#loc112, #loc113])
#loc177 = loc(fused[#loc114, #loc111])
#loc178 = loc(fused[#loc115, #loc116])
#loc179 = loc(fused[#loc121, #loc122])
#loc180 = loc(fused[#loc123, #loc124])
#loc181 = loc(fused[#loc126, #loc122])
