!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc83 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":138:10)
#loc84 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":138:14)
#loc85 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":138:20)
#loc86 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":138:32)
#loc262 = loc(fused[#loc83, #loc84])
#loc263 = loc(fused[#loc85, #loc86])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc229)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc230)
  cir.func private @printLongLongLine(!s64i) loc(#loc231)
  cir.func private @realloc(!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc232)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc233)
  cir.func no_proto @CWE401_Memory_Leak__malloc_realloc_int64_t_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc235)
    cir.br ^bb1 loc(#loc236)
  ^bb1:  // pred: ^bb0
    %1 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc237)
    %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc17)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %3 ^bb2, ^bb13 loc(#loc238)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc239)
  ^bb3:  // pred: ^bb2
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc22)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc23)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc23)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc240)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc241)
    %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc22)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc242)
    cir.store %10, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc235)
    cir.br ^bb4 loc(#loc243)
  ^bb4:  // pred: ^bb3
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc28)
    %12 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc29)
    %14 = cir.cmp(eq, %11, %13) : !cir.ptr<!s64i>, !cir.bool loc(#loc244)
    cir.brcond %14 ^bb5, ^bb6 loc(#loc245)
  ^bb5:  // pred: ^bb4
    %15 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc31)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc33)
    cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
    cir.br ^bb6 loc(#loc27)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc27)
  ^bb7:  // pred: ^bb6
    %18 = cir.const #cir.int<5> : !s64i loc(#loc34)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc35)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc36)
    %21 = cir.ptr_stride(%19 : !cir.ptr<!s64i>, %20 : !s32i), !cir.ptr<!s64i> loc(#loc37)
    cir.store %18, %21 : !s64i, !cir.ptr<!s64i> loc(#loc246)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc38)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc39)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s64i>, %23 : !s32i), !cir.ptr<!s64i> loc(#loc40)
    %25 = cir.load %24 : !cir.ptr<!s64i>, !s64i loc(#loc38)
    cir.call @printLongLongLine(%25) : (!s64i) -> () loc(#loc41)
    %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc42)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc42)
    %28 = cir.const #cir.int<130000> : !s32i loc(#loc43)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc43)
    %30 = cir.const #cir.int<8> : !u64i loc(#loc247)
    %31 = cir.binop(mul, %29, %30) : !u64i loc(#loc248)
    %32 = cir.call @realloc(%27, %31) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc47)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc249)
    cir.store %33, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc250)
    cir.br ^bb8 loc(#loc251)
  ^bb8:  // pred: ^bb7
    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc52)
    %35 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc53)
    %36 = cir.cast(bitcast, %35 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc53)
    %37 = cir.cmp(ne, %34, %36) : !cir.ptr<!s64i>, !cir.bool loc(#loc252)
    cir.brcond %37 ^bb9, ^bb10 loc(#loc253)
  ^bb9:  // pred: ^bb8
    %38 = cir.const #cir.int<10> : !s64i loc(#loc55)
    %39 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc56)
    %40 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %41 = cir.ptr_stride(%39 : !cir.ptr<!s64i>, %40 : !s32i), !cir.ptr<!s64i> loc(#loc58)
    cir.store %38, %41 : !s64i, !cir.ptr<!s64i> loc(#loc254)
    %42 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc59)
    %43 = cir.const #cir.int<0> : !s32i loc(#loc60)
    %44 = cir.ptr_stride(%42 : !cir.ptr<!s64i>, %43 : !s32i), !cir.ptr<!s64i> loc(#loc61)
    %45 = cir.load %44 : !cir.ptr<!s64i>, !s64i loc(#loc59)
    cir.call @printLongLongLine(%45) : (!s64i) -> () loc(#loc62)
    %46 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc63)
    %47 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc64)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc64)
    cir.call @free(%48) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc63)
    cir.br ^bb10 loc(#loc51)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc51)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc21)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc16)
  ^bb13:  // 2 preds: ^bb1, ^bb12
    cir.br ^bb14 loc(#loc16)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc12)
  } loc(#loc234)
  cir.func no_proto @CWE401_Memory_Leak__malloc_realloc_int64_t_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc256)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc67)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc257)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc69)
    cir.return loc(#loc66)
  } loc(#loc255)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc258)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc259)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc260)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc77)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc78)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc79)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc80)
  cir.func @main(%arg0: !s32i loc(fused[#loc83, #loc84]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc85, #loc86])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc262)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc263)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc82)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc87)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc87)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc88)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc89)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc89)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc90)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc77)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %8 = cir.get_global @CWE401_Memory_Leak__malloc_realloc_int64_t_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc264)
    cir.call @CWE401_Memory_Leak__malloc_realloc_int64_t_08_good() : () -> () loc(#loc92)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc78)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc79)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc95)
    %13 = cir.get_global @CWE401_Memory_Leak__malloc_realloc_int64_t_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc265)
    cir.call @CWE401_Memory_Leak__malloc_realloc_int64_t_08_bad() : () -> () loc(#loc96)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc80)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc99)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc266)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc266)
    cir.return %17 : !s32i loc(#loc266)
  } loc(#loc261)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc102)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc103)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc268)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc268)
    cir.return %2 : !s32i loc(#loc268)
  } loc(#loc267)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc105)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc270)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc271)
    cir.br ^bb1 loc(#loc272)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc273)
    %3 = cir.call %2() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc114)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc114)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc274)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc105)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc105)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    cir.br ^bb14 loc(#loc117)
  ^bb3:  // pred: ^bb1
    cir.br ^bb4 loc(#loc275)
  ^bb4:  // pred: ^bb3
    %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc122)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc123)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc123)
    %10 = cir.const #cir.int<8> : !u64i loc(#loc276)
    %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc277)
    %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc122)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc278)
    cir.store %13, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc270)
    cir.br ^bb5 loc(#loc279)
  ^bb5:  // pred: ^bb4
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc128)
    %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc129)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc129)
    %17 = cir.cmp(eq, %14, %16) : !cir.ptr<!s64i>, !cir.bool loc(#loc280)
    cir.brcond %17 ^bb6, ^bb7 loc(#loc281)
  ^bb6:  // pred: ^bb5
    %18 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc131)
    %19 = cir.const #cir.int<1> : !s32i loc(#loc132)
    %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc133)
    cir.call @exit(%20) : (!s32i) -> () extra(#fn_attr) loc(#loc131)
    cir.br ^bb7 loc(#loc127)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc127)
  ^bb8:  // pred: ^bb7
    %21 = cir.const #cir.int<5> : !s64i loc(#loc134)
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc135)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc136)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s64i>, %23 : !s32i), !cir.ptr<!s64i> loc(#loc137)
    cir.store %21, %24 : !s64i, !cir.ptr<!s64i> loc(#loc282)
    %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc138)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc139)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s64i>, %26 : !s32i), !cir.ptr<!s64i> loc(#loc140)
    %28 = cir.load %27 : !cir.ptr<!s64i>, !s64i loc(#loc138)
    cir.call @printLongLongLine(%28) : (!s64i) -> () loc(#loc141)
    %29 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc142)
    %30 = cir.cast(bitcast, %29 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc142)
    %31 = cir.const #cir.int<130000> : !s32i loc(#loc143)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc143)
    %33 = cir.const #cir.int<8> : !u64i loc(#loc283)
    %34 = cir.binop(mul, %32, %33) : !u64i loc(#loc284)
    %35 = cir.call @realloc(%30, %34) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc147)
    %36 = cir.cast(bitcast, %35 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc285)
    cir.store %36, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc286)
    cir.br ^bb9 loc(#loc287)
  ^bb9:  // pred: ^bb8
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc152)
    %38 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc153)
    %39 = cir.cast(bitcast, %38 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc153)
    %40 = cir.cmp(ne, %37, %39) : !cir.ptr<!s64i>, !cir.bool loc(#loc288)
    cir.brcond %40 ^bb10, ^bb11 loc(#loc289)
  ^bb10:  // pred: ^bb9
    %41 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc155)
    cir.store %41, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc290)
    %42 = cir.const #cir.int<10> : !s64i loc(#loc157)
    %43 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc158)
    %44 = cir.const #cir.int<0> : !s32i loc(#loc159)
    %45 = cir.ptr_stride(%43 : !cir.ptr<!s64i>, %44 : !s32i), !cir.ptr<!s64i> loc(#loc160)
    cir.store %42, %45 : !s64i, !cir.ptr<!s64i> loc(#loc291)
    %46 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc161)
    %47 = cir.const #cir.int<0> : !s32i loc(#loc162)
    %48 = cir.ptr_stride(%46 : !cir.ptr<!s64i>, %47 : !s32i), !cir.ptr<!s64i> loc(#loc163)
    %49 = cir.load %48 : !cir.ptr<!s64i>, !s64i loc(#loc161)
    cir.call @printLongLongLine(%49) : (!s64i) -> () loc(#loc164)
    cir.br ^bb11 loc(#loc151)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc151)
  ^bb12:  // pred: ^bb11
    %50 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc165)
    %51 = cir.cast(bitcast, %50 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc165)
    cir.call @free(%51) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc166)
    cir.br ^bb13 loc(#loc121)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc113)
  ^bb14:  // 2 preds: ^bb2, ^bb13
    cir.br ^bb15 loc(#loc113)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc107)
  } loc(#loc269)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc168)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc169)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc293)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc293)
    cir.return %2 : !s32i loc(#loc293)
  } loc(#loc292)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["data", init] {alignment = 8 : i64} loc(#loc295)
    %1 = cir.alloca !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>>, ["tmpData"] {alignment = 8 : i64} loc(#loc296)
    cir.br ^bb1 loc(#loc297)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc298)
    %3 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc179)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc179)
    cir.brcond %4 ^bb2, ^bb13 loc(#loc299)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc300)
  ^bb3:  // pred: ^bb2
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc184)
    %6 = cir.const #cir.int<100> : !s32i loc(#loc185)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc185)
    %8 = cir.const #cir.int<8> : !u64i loc(#loc301)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc302)
    %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc184)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc303)
    cir.store %11, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc295)
    cir.br ^bb4 loc(#loc304)
  ^bb4:  // pred: ^bb3
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc190)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc191)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc191)
    %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!s64i>, !cir.bool loc(#loc305)
    cir.brcond %15 ^bb5, ^bb6 loc(#loc306)
  ^bb5:  // pred: ^bb4
    %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc193)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc194)
    %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc195)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc193)
    cir.br ^bb6 loc(#loc189)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc189)
  ^bb7:  // pred: ^bb6
    %19 = cir.const #cir.int<5> : !s64i loc(#loc196)
    %20 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc197)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc198)
    %22 = cir.ptr_stride(%20 : !cir.ptr<!s64i>, %21 : !s32i), !cir.ptr<!s64i> loc(#loc199)
    cir.store %19, %22 : !s64i, !cir.ptr<!s64i> loc(#loc307)
    %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc200)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc201)
    %25 = cir.ptr_stride(%23 : !cir.ptr<!s64i>, %24 : !s32i), !cir.ptr<!s64i> loc(#loc202)
    %26 = cir.load %25 : !cir.ptr<!s64i>, !s64i loc(#loc200)
    cir.call @printLongLongLine(%26) : (!s64i) -> () loc(#loc203)
    %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc204)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc204)
    %29 = cir.const #cir.int<130000> : !s32i loc(#loc205)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc205)
    %31 = cir.const #cir.int<8> : !u64i loc(#loc308)
    %32 = cir.binop(mul, %30, %31) : !u64i loc(#loc309)
    %33 = cir.call @realloc(%28, %32) : (!cir.ptr<!void>, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc209)
    %34 = cir.cast(bitcast, %33 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc310)
    cir.store %34, %1 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc311)
    cir.br ^bb8 loc(#loc312)
  ^bb8:  // pred: ^bb7
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc214)
    %36 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc215)
    %37 = cir.cast(bitcast, %36 : !cir.ptr<!void>), !cir.ptr<!s64i> loc(#loc215)
    %38 = cir.cmp(ne, %35, %37) : !cir.ptr<!s64i>, !cir.bool loc(#loc313)
    cir.brcond %38 ^bb9, ^bb10 loc(#loc314)
  ^bb9:  // pred: ^bb8
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc217)
    cir.store %39, %0 : !cir.ptr<!s64i>, !cir.ptr<!cir.ptr<!s64i>> loc(#loc315)
    %40 = cir.const #cir.int<10> : !s64i loc(#loc219)
    %41 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc220)
    %42 = cir.const #cir.int<0> : !s32i loc(#loc221)
    %43 = cir.ptr_stride(%41 : !cir.ptr<!s64i>, %42 : !s32i), !cir.ptr<!s64i> loc(#loc222)
    cir.store %40, %43 : !s64i, !cir.ptr<!s64i> loc(#loc316)
    %44 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc223)
    %45 = cir.const #cir.int<0> : !s32i loc(#loc224)
    %46 = cir.ptr_stride(%44 : !cir.ptr<!s64i>, %45 : !s32i), !cir.ptr<!s64i> loc(#loc225)
    %47 = cir.load %46 : !cir.ptr<!s64i>, !s64i loc(#loc223)
    cir.call @printLongLongLine(%47) : (!s64i) -> () loc(#loc226)
    cir.br ^bb10 loc(#loc213)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc213)
  ^bb11:  // pred: ^bb10
    %48 = cir.load %0 : !cir.ptr<!cir.ptr<!s64i>>, !cir.ptr<!s64i> loc(#loc227)
    %49 = cir.cast(bitcast, %48 : !cir.ptr<!s64i>), !cir.ptr<!void> loc(#loc227)
    cir.call @free(%49) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc228)
    cir.br ^bb12 loc(#loc183)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc178)
  ^bb13:  // 2 preds: ^bb1, ^bb12
    cir.br ^bb14 loc(#loc178)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc172)
  } loc(#loc294)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":26:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":26:49)
#loc7 = loc("/usr/include/stdlib.h":683:1)
#loc8 = loc("/usr/include/stdlib.h":684:14)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":37:1)
#loc12 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":58:1)
#loc13 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":42:13)
#loc14 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":42:67)
#loc15 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":39:5)
#loc16 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":57:5)
#loc17 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":39:8)
#loc18 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":39:26)
#loc19 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":40:5)
#loc20 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":41:9)
#loc21 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":56:9)
#loc22 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":42:41)
#loc23 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":42:48)
#loc24 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":42:52)
#loc25 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":42:66)
#loc26 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":43:13)
#loc27 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":43:41)
#loc28 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":43:17)
#loc29 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":43:25)
#loc30 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":43:31)
#loc31 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":43:32)
#loc32 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":43:38)
#loc33 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":43:37)
#loc34 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":45:23)
#loc35 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":45:13)
#loc36 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":45:18)
#loc37 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":45:19)
#loc38 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":46:31)
#loc39 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":46:36)
#loc40 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":46:37)
#loc41 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":46:13)
#loc42 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":48:39)
#loc43 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":48:46)
#loc44 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":48:54)
#loc45 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":48:68)
#loc46 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":48:45)
#loc47 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":48:31)
#loc48 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":48:69)
#loc49 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":48:13)
#loc50 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":49:13)
#loc51 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":55:13)
#loc52 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":49:17)
#loc53 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":49:25)
#loc54 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":50:13)
#loc55 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":52:27)
#loc56 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":52:17)
#loc57 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":52:22)
#loc58 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":52:23)
#loc59 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":53:35)
#loc60 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":53:40)
#loc61 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":53:41)
#loc62 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":53:17)
#loc63 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":54:17)
#loc64 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":54:22)
#loc65 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":123:1)
#loc66 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":127:1)
#loc67 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":125:5)
#loc68 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":125:11)
#loc69 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":126:5)
#loc70 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":126:11)
#loc71 = loc("/usr/include/stdlib.h":575:1)
#loc72 = loc("/usr/include/stdlib.h":575:41)
#loc73 = loc("/usr/include/time.h":76:1)
#loc74 = loc("/usr/include/time.h":76:38)
#loc75 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc76 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc77 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":143:15)
#loc78 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":145:15)
#loc79 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":148:15)
#loc80 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":150:15)
#loc81 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":138:1)
#loc82 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":153:1)
#loc87 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":139:1)
#loc88 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":141:27)
#loc89 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":141:22)
#loc90 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":141:5)
#loc91 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":143:5)
#loc92 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":144:5)
#loc93 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":144:56)
#loc94 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":145:5)
#loc95 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":148:5)
#loc96 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":149:5)
#loc97 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":149:55)
#loc98 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":150:5)
#loc99 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":152:12)
#loc100 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":152:5)
#loc101 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":25:1)
#loc102 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":28:1)
#loc103 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":27:12)
#loc104 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":27:5)
#loc105 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":70:19)
#loc106 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":65:1)
#loc107 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":94:1)
#loc108 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":75:13)
#loc109 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":75:67)
#loc110 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":77:13)
#loc111 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":77:23)
#loc112 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":67:5)
#loc113 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":93:5)
#loc114 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":67:8)
#loc115 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":67:27)
#loc116 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":68:5)
#loc117 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":71:5)
#loc118 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":73:5)
#loc119 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":70:9)
#loc120 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":74:9)
#loc121 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":92:9)
#loc122 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":75:41)
#loc123 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":75:48)
#loc124 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":75:52)
#loc125 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":75:66)
#loc126 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":76:13)
#loc127 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":76:41)
#loc128 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":76:17)
#loc129 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":76:25)
#loc130 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":76:31)
#loc131 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":76:32)
#loc132 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":76:38)
#loc133 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":76:37)
#loc134 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":79:23)
#loc135 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":79:13)
#loc136 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":79:18)
#loc137 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":79:19)
#loc138 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":80:31)
#loc139 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":80:36)
#loc140 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":80:37)
#loc141 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":80:13)
#loc142 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":81:42)
#loc143 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":81:49)
#loc144 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":81:57)
#loc145 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":81:71)
#loc146 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":81:48)
#loc147 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":81:34)
#loc148 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":81:72)
#loc149 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":81:13)
#loc150 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":84:13)
#loc151 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":90:13)
#loc152 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":84:17)
#loc153 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":84:28)
#loc154 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":85:13)
#loc155 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":86:24)
#loc156 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":86:17)
#loc157 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":88:27)
#loc158 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":88:17)
#loc159 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":88:22)
#loc160 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":88:23)
#loc161 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":89:35)
#loc162 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":89:40)
#loc163 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":89:41)
#loc164 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":89:17)
#loc165 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":91:18)
#loc166 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":91:13)
#loc167 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":30:1)
#loc168 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":33:1)
#loc169 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":32:12)
#loc170 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":32:5)
#loc171 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":97:1)
#loc172 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":121:1)
#loc173 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":102:13)
#loc174 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":102:67)
#loc175 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":104:13)
#loc176 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":104:23)
#loc177 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":99:5)
#loc178 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":120:5)
#loc179 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":99:8)
#loc180 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":99:26)
#loc181 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":100:5)
#loc182 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":101:9)
#loc183 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":119:9)
#loc184 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":102:41)
#loc185 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":102:48)
#loc186 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":102:52)
#loc187 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":102:66)
#loc188 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":103:13)
#loc189 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":103:41)
#loc190 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":103:17)
#loc191 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":103:25)
#loc192 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":103:31)
#loc193 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":103:32)
#loc194 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":103:38)
#loc195 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":103:37)
#loc196 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":106:23)
#loc197 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":106:13)
#loc198 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":106:18)
#loc199 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":106:19)
#loc200 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":107:31)
#loc201 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":107:36)
#loc202 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":107:37)
#loc203 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":107:13)
#loc204 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":108:42)
#loc205 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":108:49)
#loc206 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":108:57)
#loc207 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":108:71)
#loc208 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":108:48)
#loc209 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":108:34)
#loc210 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":108:72)
#loc211 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":108:13)
#loc212 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":111:13)
#loc213 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":117:13)
#loc214 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":111:17)
#loc215 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":111:28)
#loc216 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":112:13)
#loc217 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":113:24)
#loc218 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":113:17)
#loc219 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":115:27)
#loc220 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":115:17)
#loc221 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":115:22)
#loc222 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":115:23)
#loc223 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":116:35)
#loc224 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":116:40)
#loc225 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":116:41)
#loc226 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":116:17)
#loc227 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":118:18)
#loc228 = loc("CWE401_Memory_Leak__malloc_realloc_int64_t_08.c":118:13)
#loc229 = loc(fused[#loc1, #loc2])
#loc230 = loc(fused[#loc3, #loc4])
#loc231 = loc(fused[#loc5, #loc6])
#loc232 = loc(fused[#loc7, #loc8])
#loc233 = loc(fused[#loc9, #loc10])
#loc234 = loc(fused[#loc11, #loc12])
#loc235 = loc(fused[#loc13, #loc14])
#loc236 = loc(fused[#loc15, #loc16])
#loc237 = loc(fused[#loc17, #loc18])
#loc238 = loc(fused[#loc19, #loc16])
#loc239 = loc(fused[#loc20, #loc21])
#loc240 = loc(fused[#loc24, #loc25])
#loc241 = loc(fused[#loc23, #loc25])
#loc242 = loc(fused[#loc22, #loc14])
#loc243 = loc(fused[#loc26, #loc27])
#loc244 = loc(fused[#loc28, #loc29])
#loc245 = loc(fused[#loc30, #loc27])
#loc246 = loc(fused[#loc35, #loc34])
#loc247 = loc(fused[#loc44, #loc45])
#loc248 = loc(fused[#loc46, #loc45])
#loc249 = loc(fused[#loc47, #loc48])
#loc250 = loc(fused[#loc49, #loc48])
#loc251 = loc(fused[#loc50, #loc51])
#loc252 = loc(fused[#loc52, #loc53])
#loc253 = loc(fused[#loc54, #loc51])
#loc254 = loc(fused[#loc56, #loc55])
#loc255 = loc(fused[#loc65, #loc66])
#loc256 = loc(fused[#loc67, #loc68])
#loc257 = loc(fused[#loc69, #loc70])
#loc258 = loc(fused[#loc71, #loc72])
#loc259 = loc(fused[#loc73, #loc74])
#loc260 = loc(fused[#loc75, #loc76])
#loc261 = loc(fused[#loc81, #loc82])
#loc264 = loc(fused[#loc92, #loc93])
#loc265 = loc(fused[#loc96, #loc97])
#loc266 = loc(fused[#loc100, #loc99])
#loc267 = loc(fused[#loc101, #loc102])
#loc268 = loc(fused[#loc104, #loc103])
#loc269 = loc(fused[#loc106, #loc107])
#loc270 = loc(fused[#loc108, #loc109])
#loc271 = loc(fused[#loc110, #loc111])
#loc272 = loc(fused[#loc112, #loc113])
#loc273 = loc(fused[#loc114, #loc115])
#loc274 = loc(fused[#loc116, #loc117, #loc118, #loc113])
#loc275 = loc(fused[#loc120, #loc121])
#loc276 = loc(fused[#loc124, #loc125])
#loc277 = loc(fused[#loc123, #loc125])
#loc278 = loc(fused[#loc122, #loc109])
#loc279 = loc(fused[#loc126, #loc127])
#loc280 = loc(fused[#loc128, #loc129])
#loc281 = loc(fused[#loc130, #loc127])
#loc282 = loc(fused[#loc135, #loc134])
#loc283 = loc(fused[#loc144, #loc145])
#loc284 = loc(fused[#loc146, #loc145])
#loc285 = loc(fused[#loc147, #loc148])
#loc286 = loc(fused[#loc149, #loc148])
#loc287 = loc(fused[#loc150, #loc151])
#loc288 = loc(fused[#loc152, #loc153])
#loc289 = loc(fused[#loc154, #loc151])
#loc290 = loc(fused[#loc156, #loc155])
#loc291 = loc(fused[#loc158, #loc157])
#loc292 = loc(fused[#loc167, #loc168])
#loc293 = loc(fused[#loc170, #loc169])
#loc294 = loc(fused[#loc171, #loc172])
#loc295 = loc(fused[#loc173, #loc174])
#loc296 = loc(fused[#loc175, #loc176])
#loc297 = loc(fused[#loc177, #loc178])
#loc298 = loc(fused[#loc179, #loc180])
#loc299 = loc(fused[#loc181, #loc178])
#loc300 = loc(fused[#loc182, #loc183])
#loc301 = loc(fused[#loc186, #loc187])
#loc302 = loc(fused[#loc185, #loc187])
#loc303 = loc(fused[#loc184, #loc174])
#loc304 = loc(fused[#loc188, #loc189])
#loc305 = loc(fused[#loc190, #loc191])
#loc306 = loc(fused[#loc192, #loc189])
#loc307 = loc(fused[#loc197, #loc196])
#loc308 = loc(fused[#loc206, #loc207])
#loc309 = loc(fused[#loc208, #loc207])
#loc310 = loc(fused[#loc209, #loc210])
#loc311 = loc(fused[#loc211, #loc210])
#loc312 = loc(fused[#loc212, #loc213])
#loc313 = loc(fused[#loc214, #loc215])
#loc314 = loc(fused[#loc216, #loc213])
#loc315 = loc(fused[#loc218, #loc217])
#loc316 = loc(fused[#loc220, #loc219])
