!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" external @globalFive : !s32i {alignment = 4 : i64} loc(#loc62)
  cir.func private @putchar(!s32i) -> !s32i loc(#loc63)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"putchar failed!\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc62)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc12)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc13)
      %3 = cir.cmp(eq, %1, %2) : !s32i, !cir.bool loc(#loc67)
      cir.if %3 {
        cir.scope {
          %4 = cir.const #cir.int<65> : !s32i loc(#loc17)
          %5 = cir.call @putchar(%4) : (!s32i) -> !s32i loc(#loc18)
          %6 = cir.const #cir.int<0> : !s32i loc(#loc19)
          %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc70)
          cir.if %7 {
            %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc7)
            %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc7)
            cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc21)
          } loc(#loc71)
        } loc(#loc69)
      } loc(#loc68)
    } loc(#loc66)
    cir.return loc(#loc9)
  } loc(#loc65)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc73)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc24)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc74)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc26)
    cir.return loc(#loc23)
  } loc(#loc72)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc28)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc62)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc33)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc34)
      %3 = cir.cmp(ne, %1, %2) : !s32i, !cir.bool loc(#loc77)
      cir.if %3 {
        %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc28)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc28)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc38)
      } else {
        cir.scope {
          %4 = cir.const #cir.int<65> : !s32i loc(#loc41)
          %5 = cir.call @putchar(%4) : (!s32i) -> !s32i loc(#loc42)
          %6 = cir.const #cir.int<1> : !s32i loc(#loc43)
          %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc43)
          %8 = cir.cmp(eq, %5, %7) : !s32i, !cir.bool loc(#loc80)
          cir.if %8 {
            %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc45)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc45)
            cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc46)
          } loc(#loc81)
        } loc(#loc79)
      } loc(#loc78)
    } loc(#loc76)
    cir.return loc(#loc30)
  } loc(#loc75)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @globalFive : !cir.ptr<!s32i> loc(#loc62)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc51)
      %2 = cir.const #cir.int<5> : !s32i loc(#loc52)
      %3 = cir.cmp(eq, %1, %2) : !s32i, !cir.bool loc(#loc84)
      cir.if %3 {
        cir.scope {
          %4 = cir.const #cir.int<65> : !s32i loc(#loc56)
          %5 = cir.call @putchar(%4) : (!s32i) -> !s32i loc(#loc57)
          %6 = cir.const #cir.int<1> : !s32i loc(#loc58)
          %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc58)
          %8 = cir.cmp(eq, %5, %7) : !s32i, !cir.bool loc(#loc87)
          cir.if %8 {
            %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc60)
            %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc60)
            cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc61)
          } loc(#loc88)
        } loc(#loc86)
      } loc(#loc85)
    } loc(#loc83)
    cir.return loc(#loc48)
  } loc(#loc82)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase.h":118:1)
#loc2 = loc("../../testcasesupport/std_testcase.h":118:12)
#loc3 = loc("/usr/include/stdio.h":618:1)
#loc4 = loc("/usr/include/stdio.h":618:28)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":32:23)
#loc8 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":24:1)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":35:1)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":26:5)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":34:5)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":26:8)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":26:20)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":27:5)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":30:9)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":33:9)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":30:26)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":30:13)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":30:34)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":31:9)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":32:13)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":72:1)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":76:1)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":74:5)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":74:11)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":75:5)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":75:11)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":47:19)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":42:1)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":57:1)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":44:5)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":56:5)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":44:8)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":44:20)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":45:5)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":48:5)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":50:5)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":47:9)
#loc39 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":52:9)
#loc40 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":55:9)
#loc41 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":52:26)
#loc42 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":52:13)
#loc43 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":52:34)
#loc44 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":53:9)
#loc45 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":54:23)
#loc46 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":54:13)
#loc47 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":60:1)
#loc48 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":70:1)
#loc49 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":62:5)
#loc50 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":69:5)
#loc51 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":62:8)
#loc52 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":62:20)
#loc53 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":63:5)
#loc54 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":65:9)
#loc55 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":68:9)
#loc56 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":65:26)
#loc57 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":65:13)
#loc58 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":65:34)
#loc59 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":66:9)
#loc60 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":67:23)
#loc61 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_putchar_14.c":67:13)
#loc62 = loc(fused[#loc1, #loc2])
#loc63 = loc(fused[#loc3, #loc4])
#loc64 = loc(fused[#loc5, #loc6])
#loc65 = loc(fused[#loc8, #loc9])
#loc66 = loc(fused[#loc10, #loc11])
#loc67 = loc(fused[#loc12, #loc13])
#loc68 = loc(fused[#loc14, #loc11])
#loc69 = loc(fused[#loc15, #loc16])
#loc70 = loc(fused[#loc18, #loc19])
#loc71 = loc(fused[#loc20, #loc16])
#loc72 = loc(fused[#loc22, #loc23])
#loc73 = loc(fused[#loc24, #loc25])
#loc74 = loc(fused[#loc26, #loc27])
#loc75 = loc(fused[#loc29, #loc30])
#loc76 = loc(fused[#loc31, #loc32])
#loc77 = loc(fused[#loc33, #loc34])
#loc78 = loc(fused[#loc35, #loc36, #loc37, #loc32])
#loc79 = loc(fused[#loc39, #loc40])
#loc80 = loc(fused[#loc42, #loc43])
#loc81 = loc(fused[#loc44, #loc40])
#loc82 = loc(fused[#loc47, #loc48])
#loc83 = loc(fused[#loc49, #loc50])
#loc84 = loc(fused[#loc51, #loc52])
#loc85 = loc(fused[#loc53, #loc50])
#loc86 = loc(fused[#loc54, #loc55])
#loc87 = loc(fused[#loc57, #loc58])
#loc88 = loc(fused[#loc59, #loc55])
