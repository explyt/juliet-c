!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc121 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":97:44)
#loc271 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":200:44)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc314)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc315)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc316)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc317)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc318)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc319)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc320)
  cir.func private @close(!s32i) -> !s32i loc(#loc321)
  cir.func private @printIntLine(!s32i) loc(#loc322)
  cir.func @_ZN50CWE369_Divide_by_Zero__int_listen_socket_modulo_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc324)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc325)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc326)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc327)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc328)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc329)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc330)
    %7 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc331)
    cir.store %6, %7 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc36)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc38)
    cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc332)
    cir.br ^bb1 loc(#loc333)
  ^bb1:  // pred: ^bb0
    %10 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc26)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc326)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc28)
    cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc327)
    cir.br ^bb2 loc(#loc334)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc334)
  ^bb3:  // pred: ^bb34
    %14 = cir.const #cir.int<0> : !s32i loc(#loc44)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc44)
    cir.brcond %15 ^bb4, ^bb35 loc(#loc44)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc335)
  ^bb5:  // pred: ^bb4
    %16 = cir.const #cir.int<2> : !s32i loc(#loc47)
    %17 = cir.const #cir.int<1> : !u32i loc(#loc48)
    %18 = cir.cast(integral, %17 : !u32i), !s32i loc(#loc48)
    %19 = cir.const #cir.int<6> : !u32i loc(#loc49)
    %20 = cir.cast(integral, %19 : !u32i), !s32i loc(#loc49)
    %21 = cir.call @socket(%16, %18, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc50)
    cir.store %21, %2 : !s32i, !cir.ptr<!s32i> loc(#loc336)
    cir.br ^bb6 loc(#loc337)
  ^bb6:  // pred: ^bb5
    %22 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc55)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %24 = cir.unary(minus, %23) nsw : !s32i, !s32i loc(#loc56)
    %25 = cir.cmp(eq, %22, %24) : !s32i, !cir.bool loc(#loc338)
    cir.brcond %25 ^bb7, ^bb8 loc(#loc339)
  ^bb7:  // pred: ^bb6
    cir.br ^bb35 loc(#loc58)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc54)
  ^bb9:  // pred: ^bb8
    %26 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc340)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc61)
    %28 = cir.const #cir.int<16> : !u64i loc(#loc341)
    cir.libc.memset %28 bytes from %26 set to %27 : !cir.ptr<!void>, !s32i, !u64i loc(#loc342)
    %29 = cir.const #cir.int<2> : !s32i loc(#loc66)
    %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc66)
    %31 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
    cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc343)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc69)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc69)
    %34 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
    %35 = cir.get_member %34[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
    cir.store %33, %35 : !u32i, !cir.ptr<!u32i> loc(#loc344)
    %36 = cir.const #cir.int<27015> : !s32i loc(#loc73)
    %37 = cir.cast(integral, %36 : !s32i), !u16i loc(#loc73)
    %38 = cir.call @htons(%37) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc74)
    %39 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
    cir.store %38, %39 : !u16i, !cir.ptr<!u16i> loc(#loc345)
    cir.br ^bb10 loc(#loc346)
  ^bb10:  // pred: ^bb9
    %40 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc80)
    %41 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc347)
    %42 = cir.const #cir.int<16> : !u64i loc(#loc348)
    %43 = cir.cast(integral, %42 : !u64i), !u32i loc(#loc348)
    %44 = cir.call @bind(%40, %41, %43) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc85)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %46 = cir.unary(minus, %45) nsw : !s32i, !s32i loc(#loc86)
    %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc349)
    cir.brcond %47 ^bb11, ^bb12 loc(#loc350)
  ^bb11:  // pred: ^bb10
    cir.br ^bb35 loc(#loc88)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc79)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc351)
  ^bb14:  // pred: ^bb13
    %48 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    %49 = cir.const #cir.int<5> : !s32i loc(#loc92)
    %50 = cir.call @listen(%48, %49) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc93)
    %51 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %52 = cir.unary(minus, %51) nsw : !s32i, !s32i loc(#loc94)
    %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc352)
    cir.brcond %53 ^bb15, ^bb16 loc(#loc353)
  ^bb15:  // pred: ^bb14
    cir.br ^bb35 loc(#loc96)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc90)
  ^bb17:  // pred: ^bb16
    %54 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc97)
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc98)
    %56 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc99)
    %57 = cir.call @accept(%54, %55, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc100)
    cir.store %57, %3 : !s32i, !cir.ptr<!s32i> loc(#loc354)
    cir.br ^bb18 loc(#loc355)
  ^bb18:  // pred: ^bb17
    %58 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc106)
    %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc106)
    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc356)
    cir.brcond %61 ^bb19, ^bb20 loc(#loc357)
  ^bb19:  // pred: ^bb18
    cir.br ^bb35 loc(#loc108)
  ^bb20:  // pred: ^bb18
    cir.br ^bb21 loc(#loc104)
  ^bb21:  // pred: ^bb20
    %62 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %63 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc110)
    %64 = cir.cast(bitcast, %63 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc110)
    %65 = cir.const #cir.int<3> : !s32i loc(#loc111)
    %66 = cir.cast(integral, %65 : !s32i), !u64i loc(#loc111)
    %67 = cir.const #cir.int<4> : !u64i loc(#loc111)
    %68 = cir.binop(mul, %66, %67) : !u64i loc(#loc111)
    %69 = cir.const #cir.int<2> : !s32i loc(#loc111)
    %70 = cir.cast(integral, %69 : !s32i), !u64i loc(#loc111)
    %71 = cir.binop(add, %68, %70) : !u64i loc(#loc111)
    %72 = cir.const #cir.int<1> : !s32i loc(#loc112)
    %73 = cir.cast(integral, %72 : !s32i), !u64i loc(#loc112)
    %74 = cir.binop(sub, %71, %73) : !u64i loc(#loc358)
    %75 = cir.const #cir.int<0> : !s32i loc(#loc113)
    %76 = cir.call @recv(%62, %64, %74, %75) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc114)
    %77 = cir.cast(integral, %76 : !s64i), !s32i loc(#loc114)
    cir.store %77, %0 : !s32i, !cir.ptr<!s32i> loc(#loc359)
    cir.br ^bb22 loc(#loc360)
  ^bb22:  // pred: ^bb21
    %78 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    %79 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %80 = cir.unary(minus, %79) nsw : !s32i, !s32i loc(#loc120)
    %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc361)
    cir.brcond %81 ^bb23, ^bb24 loc(#loc121)
  ^bb23:  // pred: ^bb22
    %82 = cir.const #true loc(#loc121)
    cir.br ^bb29(%82 : !cir.bool) loc(#loc121)
  ^bb24:  // pred: ^bb22
    %83 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc122)
    %84 = cir.const #cir.int<0> : !s32i loc(#loc123)
    %85 = cir.cmp(eq, %83, %84) : !s32i, !cir.bool loc(#loc362)
    cir.brcond %85 ^bb25, ^bb26 loc(#loc121)
  ^bb25:  // pred: ^bb24
    %86 = cir.const #true loc(#loc121)
    cir.br ^bb27(%86 : !cir.bool) loc(#loc121)
  ^bb26:  // pred: ^bb24
    %87 = cir.const #false loc(#loc121)
    cir.br ^bb27(%87 : !cir.bool) loc(#loc121)
  ^bb27(%88: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":97:44)):  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc121)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29(%88 : !cir.bool) loc(#loc121)
  ^bb29(%89: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":97:44)):  // 2 preds: ^bb23, ^bb28
    cir.br ^bb30 loc(#loc121)
  ^bb30:  // pred: ^bb29
    cir.brcond %89 ^bb31, ^bb32 loc(#loc363)
  ^bb31:  // pred: ^bb30
    cir.br ^bb35 loc(#loc125)
  ^bb32:  // pred: ^bb30
    cir.br ^bb33 loc(#loc118)
  ^bb33:  // pred: ^bb32
    %90 = cir.const #cir.int<0> : !s8i loc(#loc126)
    %91 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %92 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc128)
    %93 = cir.ptr_stride(%92 : !cir.ptr<!s8i>, %91 : !s32i), !cir.ptr<!s8i> loc(#loc128)
    cir.store %90, %93 : !s8i, !cir.ptr<!s8i> loc(#loc364)
    %94 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc129)
    %95 = cir.call @atoi(%94) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc130)
    cir.store %95, %6 : !s32i, !cir.ptr<!s32i> loc(#loc365)
    cir.br ^bb34 loc(#loc46)
  ^bb34:  // pred: ^bb33
    cir.br ^bb3 loc(#loc43)
  ^bb35:  // 6 preds: ^bb3, ^bb7, ^bb11, ^bb15, ^bb19, ^bb31
    cir.br ^bb36 loc(#loc43)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc366)
  ^bb37:  // pred: ^bb36
    %96 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    %97 = cir.const #cir.int<1> : !s32i loc(#loc136)
    %98 = cir.unary(minus, %97) nsw : !s32i, !s32i loc(#loc136)
    %99 = cir.cmp(ne, %96, %98) : !s32i, !cir.bool loc(#loc367)
    cir.brcond %99 ^bb38, ^bb39 loc(#loc368)
  ^bb38:  // pred: ^bb37
    %100 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc138)
    %101 = cir.call @close(%100) : (!s32i) -> !s32i loc(#loc139)
    cir.br ^bb39 loc(#loc134)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc134)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc369)
  ^bb41:  // pred: ^bb40
    %102 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc142)
    %103 = cir.const #cir.int<1> : !s32i loc(#loc143)
    %104 = cir.unary(minus, %103) nsw : !s32i, !s32i loc(#loc143)
    %105 = cir.cmp(ne, %102, %104) : !s32i, !cir.bool loc(#loc370)
    cir.brcond %105 ^bb42, ^bb43 loc(#loc371)
  ^bb42:  // pred: ^bb41
    %106 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    %107 = cir.call @close(%106) : (!s32i) -> !s32i loc(#loc146)
    cir.br ^bb43 loc(#loc141)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc141)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc41)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc372)
  ^bb46:  // pred: ^bb45
    %108 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc32)
    %109 = cir.load %108 : !cir.ptr<!s32i>, !s32i loc(#loc32)
    cir.store %109, %5 : !s32i, !cir.ptr<!s32i> loc(#loc329)
    %110 = cir.const #cir.int<100> : !s32i loc(#loc149)
    %111 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    %112 = cir.binop(rem, %110, %111) : !s32i loc(#loc373)
    cir.call @printIntLine(%112) : (!s32i) -> () loc(#loc151)
    cir.br ^bb47 loc(#loc148)
  ^bb47:  // pred: ^bb46
    cir.return loc(#loc20)
  } loc(#loc323)
  cir.func internal private @_ZN50CWE369_Divide_by_Zero__int_listen_socket_modulo_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc375)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc376)
    %2 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc377)
    cir.store %1, %2 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc159)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc160)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc161)
    cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc378)
    %5 = cir.const #cir.int<7> : !s32i loc(#loc163)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc379)
    cir.br ^bb1 loc(#loc380)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc155)
    %7 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc155)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc375)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc167)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc168)
    %10 = cir.binop(rem, %8, %9) : !s32i loc(#loc381)
    cir.call @printIntLine(%10) : (!s32i) -> () loc(#loc169)
    cir.br ^bb2 loc(#loc166)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc153)
  } loc(#loc374)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc382)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"This would result in a divide by zero\00" : !cir.array<!s8i x 38>> : !cir.array<!s8i x 38> {alignment = 1 : i64} loc(#loc172)
  cir.func internal private @_ZN50CWE369_Divide_by_Zero__int_listen_socket_modulo_33L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc384)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc385)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc386)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc387)
    %4 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc388)
    %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc389)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc390)
    %7 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc391)
    cir.store %6, %7 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc190)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc191)
    %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc192)
    cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc392)
    cir.br ^bb1 loc(#loc393)
  ^bb1:  // pred: ^bb0
    %10 = cir.const #cir.int<1> : !s32i loc(#loc180)
    %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc180)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc386)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc182)
    %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc182)
    cir.store %13, %3 : !s32i, !cir.ptr<!s32i> loc(#loc387)
    cir.br ^bb2 loc(#loc394)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc394)
  ^bb3:  // pred: ^bb34
    %14 = cir.const #cir.int<0> : !s32i loc(#loc198)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc198)
    cir.brcond %15 ^bb4, ^bb35 loc(#loc198)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc395)
  ^bb5:  // pred: ^bb4
    %16 = cir.const #cir.int<2> : !s32i loc(#loc201)
    %17 = cir.const #cir.int<1> : !u32i loc(#loc202)
    %18 = cir.cast(integral, %17 : !u32i), !s32i loc(#loc202)
    %19 = cir.const #cir.int<6> : !u32i loc(#loc203)
    %20 = cir.cast(integral, %19 : !u32i), !s32i loc(#loc203)
    %21 = cir.call @socket(%16, %18, %20) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc204)
    cir.store %21, %2 : !s32i, !cir.ptr<!s32i> loc(#loc396)
    cir.br ^bb6 loc(#loc397)
  ^bb6:  // pred: ^bb5
    %22 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc209)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc210)
    %24 = cir.unary(minus, %23) nsw : !s32i, !s32i loc(#loc210)
    %25 = cir.cmp(eq, %22, %24) : !s32i, !cir.bool loc(#loc398)
    cir.brcond %25 ^bb7, ^bb8 loc(#loc399)
  ^bb7:  // pred: ^bb6
    cir.br ^bb35 loc(#loc212)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc208)
  ^bb9:  // pred: ^bb8
    %26 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc400)
    %27 = cir.const #cir.int<0> : !s32i loc(#loc215)
    %28 = cir.const #cir.int<16> : !u64i loc(#loc401)
    cir.libc.memset %28 bytes from %26 set to %27 : !cir.ptr<!void>, !s32i, !u64i loc(#loc402)
    %29 = cir.const #cir.int<2> : !s32i loc(#loc220)
    %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc220)
    %31 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc67)
    cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc403)
    %32 = cir.const #cir.int<0> : !s32i loc(#loc222)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc222)
    %34 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc70)
    %35 = cir.get_member %34[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc71)
    cir.store %33, %35 : !u32i, !cir.ptr<!u32i> loc(#loc404)
    %36 = cir.const #cir.int<27015> : !s32i loc(#loc224)
    %37 = cir.cast(integral, %36 : !s32i), !u16i loc(#loc224)
    %38 = cir.call @htons(%37) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc225)
    %39 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
    cir.store %38, %39 : !u16i, !cir.ptr<!u16i> loc(#loc405)
    cir.br ^bb10 loc(#loc406)
  ^bb10:  // pred: ^bb9
    %40 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc230)
    %41 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc407)
    %42 = cir.const #cir.int<16> : !u64i loc(#loc408)
    %43 = cir.cast(integral, %42 : !u64i), !u32i loc(#loc408)
    %44 = cir.call @bind(%40, %41, %43) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc235)
    %45 = cir.const #cir.int<1> : !s32i loc(#loc236)
    %46 = cir.unary(minus, %45) nsw : !s32i, !s32i loc(#loc236)
    %47 = cir.cmp(eq, %44, %46) : !s32i, !cir.bool loc(#loc409)
    cir.brcond %47 ^bb11, ^bb12 loc(#loc410)
  ^bb11:  // pred: ^bb10
    cir.br ^bb35 loc(#loc238)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc229)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc411)
  ^bb14:  // pred: ^bb13
    %48 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc241)
    %49 = cir.const #cir.int<5> : !s32i loc(#loc242)
    %50 = cir.call @listen(%48, %49) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc243)
    %51 = cir.const #cir.int<1> : !s32i loc(#loc244)
    %52 = cir.unary(minus, %51) nsw : !s32i, !s32i loc(#loc244)
    %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc412)
    cir.brcond %53 ^bb15, ^bb16 loc(#loc413)
  ^bb15:  // pred: ^bb14
    cir.br ^bb35 loc(#loc246)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc240)
  ^bb17:  // pred: ^bb16
    %54 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc247)
    %55 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc248)
    %56 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc249)
    %57 = cir.call @accept(%54, %55, %56) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc250)
    cir.store %57, %3 : !s32i, !cir.ptr<!s32i> loc(#loc414)
    cir.br ^bb18 loc(#loc415)
  ^bb18:  // pred: ^bb17
    %58 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc255)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc256)
    %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc256)
    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc416)
    cir.brcond %61 ^bb19, ^bb20 loc(#loc417)
  ^bb19:  // pred: ^bb18
    cir.br ^bb35 loc(#loc258)
  ^bb20:  // pred: ^bb18
    cir.br ^bb21 loc(#loc254)
  ^bb21:  // pred: ^bb20
    %62 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc259)
    %63 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc260)
    %64 = cir.cast(bitcast, %63 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc260)
    %65 = cir.const #cir.int<3> : !s32i loc(#loc261)
    %66 = cir.cast(integral, %65 : !s32i), !u64i loc(#loc261)
    %67 = cir.const #cir.int<4> : !u64i loc(#loc261)
    %68 = cir.binop(mul, %66, %67) : !u64i loc(#loc261)
    %69 = cir.const #cir.int<2> : !s32i loc(#loc261)
    %70 = cir.cast(integral, %69 : !s32i), !u64i loc(#loc261)
    %71 = cir.binop(add, %68, %70) : !u64i loc(#loc261)
    %72 = cir.const #cir.int<1> : !s32i loc(#loc262)
    %73 = cir.cast(integral, %72 : !s32i), !u64i loc(#loc262)
    %74 = cir.binop(sub, %71, %73) : !u64i loc(#loc418)
    %75 = cir.const #cir.int<0> : !s32i loc(#loc263)
    %76 = cir.call @recv(%62, %64, %74, %75) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc264)
    %77 = cir.cast(integral, %76 : !s64i), !s32i loc(#loc264)
    cir.store %77, %0 : !s32i, !cir.ptr<!s32i> loc(#loc419)
    cir.br ^bb22 loc(#loc420)
  ^bb22:  // pred: ^bb21
    %78 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc269)
    %79 = cir.const #cir.int<1> : !s32i loc(#loc270)
    %80 = cir.unary(minus, %79) nsw : !s32i, !s32i loc(#loc270)
    %81 = cir.cmp(eq, %78, %80) : !s32i, !cir.bool loc(#loc421)
    cir.brcond %81 ^bb23, ^bb24 loc(#loc271)
  ^bb23:  // pred: ^bb22
    %82 = cir.const #true loc(#loc271)
    cir.br ^bb29(%82 : !cir.bool) loc(#loc271)
  ^bb24:  // pred: ^bb22
    %83 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc272)
    %84 = cir.const #cir.int<0> : !s32i loc(#loc273)
    %85 = cir.cmp(eq, %83, %84) : !s32i, !cir.bool loc(#loc422)
    cir.brcond %85 ^bb25, ^bb26 loc(#loc271)
  ^bb25:  // pred: ^bb24
    %86 = cir.const #true loc(#loc271)
    cir.br ^bb27(%86 : !cir.bool) loc(#loc271)
  ^bb26:  // pred: ^bb24
    %87 = cir.const #false loc(#loc271)
    cir.br ^bb27(%87 : !cir.bool) loc(#loc271)
  ^bb27(%88: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":200:44)):  // 2 preds: ^bb25, ^bb26
    cir.br ^bb28 loc(#loc271)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29(%88 : !cir.bool) loc(#loc271)
  ^bb29(%89: !cir.bool loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":200:44)):  // 2 preds: ^bb23, ^bb28
    cir.br ^bb30 loc(#loc271)
  ^bb30:  // pred: ^bb29
    cir.brcond %89 ^bb31, ^bb32 loc(#loc423)
  ^bb31:  // pred: ^bb30
    cir.br ^bb35 loc(#loc275)
  ^bb32:  // pred: ^bb30
    cir.br ^bb33 loc(#loc268)
  ^bb33:  // pred: ^bb32
    %90 = cir.const #cir.int<0> : !s8i loc(#loc276)
    %91 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc277)
    %92 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc278)
    %93 = cir.ptr_stride(%92 : !cir.ptr<!s8i>, %91 : !s32i), !cir.ptr<!s8i> loc(#loc278)
    cir.store %90, %93 : !s8i, !cir.ptr<!s8i> loc(#loc424)
    %94 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc279)
    %95 = cir.call @atoi(%94) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc280)
    cir.store %95, %6 : !s32i, !cir.ptr<!s32i> loc(#loc425)
    cir.br ^bb34 loc(#loc200)
  ^bb34:  // pred: ^bb33
    cir.br ^bb3 loc(#loc197)
  ^bb35:  // 6 preds: ^bb3, ^bb7, ^bb11, ^bb15, ^bb19, ^bb31
    cir.br ^bb36 loc(#loc197)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc426)
  ^bb37:  // pred: ^bb36
    %96 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc285)
    %97 = cir.const #cir.int<1> : !s32i loc(#loc286)
    %98 = cir.unary(minus, %97) nsw : !s32i, !s32i loc(#loc286)
    %99 = cir.cmp(ne, %96, %98) : !s32i, !cir.bool loc(#loc427)
    cir.brcond %99 ^bb38, ^bb39 loc(#loc428)
  ^bb38:  // pred: ^bb37
    %100 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc288)
    %101 = cir.call @close(%100) : (!s32i) -> !s32i loc(#loc289)
    cir.br ^bb39 loc(#loc284)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc284)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc429)
  ^bb41:  // pred: ^bb40
    %102 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc292)
    %103 = cir.const #cir.int<1> : !s32i loc(#loc293)
    %104 = cir.unary(minus, %103) nsw : !s32i, !s32i loc(#loc293)
    %105 = cir.cmp(ne, %102, %104) : !s32i, !cir.bool loc(#loc430)
    cir.brcond %105 ^bb42, ^bb43 loc(#loc431)
  ^bb42:  // pred: ^bb41
    %106 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc295)
    %107 = cir.call @close(%106) : (!s32i) -> !s32i loc(#loc296)
    cir.br ^bb43 loc(#loc291)
  ^bb43:  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc291)
  ^bb44:  // pred: ^bb43
    cir.br ^bb45 loc(#loc195)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc432)
  ^bb46:  // pred: ^bb45
    %108 = cir.load %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc186)
    %109 = cir.load %108 : !cir.ptr<!s32i>, !s32i loc(#loc186)
    cir.store %109, %5 : !s32i, !cir.ptr<!s32i> loc(#loc389)
    cir.br ^bb47 loc(#loc433)
  ^bb47:  // pred: ^bb46
    %110 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc301)
    %111 = cir.const #cir.int<0> : !s32i loc(#loc302)
    %112 = cir.cmp(ne, %110, %111) : !s32i, !cir.bool loc(#loc434)
    cir.brcond %112 ^bb48, ^bb49 loc(#loc435)
  ^bb48:  // pred: ^bb47
    %113 = cir.const #cir.int<100> : !s32i loc(#loc306)
    %114 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc307)
    %115 = cir.binop(rem, %113, %114) : !s32i loc(#loc436)
    cir.call @printIntLine(%115) : (!s32i) -> () loc(#loc308)
    cir.br ^bb50 loc(#loc304)
  ^bb49:  // pred: ^bb47
    %116 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 38>> loc(#loc172)
    %117 = cir.cast(array_to_ptrdecay, %116 : !cir.ptr<!cir.array<!s8i x 38>>), !cir.ptr<!s8i> loc(#loc172)
    cir.call @printLine(%117) : (!cir.ptr<!s8i>) -> () loc(#loc309)
    cir.br ^bb50 loc(#loc300)
  ^bb50:  // 2 preds: ^bb48, ^bb49
    cir.br ^bb51 loc(#loc300)
  ^bb51:  // pred: ^bb50
    cir.br ^bb52 loc(#loc298)
  ^bb52:  // pred: ^bb51
    cir.return loc(#loc174)
  } loc(#loc383)
  cir.func @_ZN50CWE369_Divide_by_Zero__int_listen_socket_modulo_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN50CWE369_Divide_by_Zero__int_listen_socket_modulo_33L7goodG2BEv() : () -> () loc(#loc312)
    cir.call @_ZN50CWE369_Divide_by_Zero__int_listen_socket_modulo_33L7goodB2GEv() : () -> () loc(#loc313)
    cir.return loc(#loc311)
  } loc(#loc437)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE369_Divide_by_Zero/s02/CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc18 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc19 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":47:1)
#loc20 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":127:1)
#loc21 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":58:9)
#loc22 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":58:13)
#loc23 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":59:9)
#loc24 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":59:28)
#loc25 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":60:9)
#loc26 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":60:31)
#loc27 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":61:9)
#loc28 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":61:31)
#loc29 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":62:9)
#loc30 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":62:41)
#loc31 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":123:9)
#loc32 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":123:20)
#loc33 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":49:5)
#loc34 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":49:9)
#loc35 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":50:5)
#loc36 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":50:20)
#loc37 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":52:13)
#loc38 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":52:12)
#loc39 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":52:5)
#loc40 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":53:5)
#loc41 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":121:5)
#loc42 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":63:9)
#loc43 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":106:17)
#loc44 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":106:16)
#loc45 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":64:9)
#loc46 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":105:9)
#loc47 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":73:35)
#loc48 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":73:44)
#loc49 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":73:57)
#loc50 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":73:28)
#loc51 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":73:13)
#loc52 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":73:68)
#loc53 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":74:13)
#loc54 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":77:13)
#loc55 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":74:17)
#loc56 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":74:33)
#loc57 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":75:13)
#loc58 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":76:17)
#loc59 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":78:20)
#loc60 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":78:21)
#loc61 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":78:30)
#loc62 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":78:33)
#loc63 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":78:47)
#loc64 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":78:13)
#loc65 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":78:48)
#loc66 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":79:34)
#loc67 = loc("/usr/include/netinet/in.h":249:5)
#loc68 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":79:13)
#loc69 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":80:39)
#loc70 = loc("/usr/include/netinet/in.h":251:20)
#loc71 = loc("/usr/include/netinet/in.h":33:15)
#loc72 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":80:13)
#loc73 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":81:38)
#loc74 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":81:32)
#loc75 = loc("/usr/include/netinet/in.h":250:15)
#loc76 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":81:13)
#loc77 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":81:46)
#loc78 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":82:13)
#loc79 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":85:13)
#loc80 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":82:22)
#loc81 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":82:54)
#loc82 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":82:55)
#loc83 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":82:64)
#loc84 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":82:78)
#loc85 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":82:17)
#loc86 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":82:84)
#loc87 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":83:13)
#loc88 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":84:17)
#loc89 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":86:13)
#loc90 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":89:13)
#loc91 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":86:24)
#loc92 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":86:38)
#loc93 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":86:17)
#loc94 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":86:57)
#loc95 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":87:13)
#loc96 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":88:17)
#loc97 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":90:35)
#loc98 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":90:49)
#loc99 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":90:55)
#loc100 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":90:28)
#loc101 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":90:13)
#loc102 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":90:59)
#loc103 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":91:13)
#loc104 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":94:13)
#loc105 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":91:17)
#loc106 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":91:33)
#loc107 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":92:13)
#loc108 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":93:17)
#loc109 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":96:31)
#loc110 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":96:45)
#loc111 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":96:58)
#loc112 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":96:76)
#loc113 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":96:79)
#loc114 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":96:26)
#loc115 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":96:13)
#loc116 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":96:80)
#loc117 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":97:13)
#loc118 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":100:13)
#loc119 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":97:17)
#loc120 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":97:31)
#loc122 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":97:47)
#loc123 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":97:61)
#loc124 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":98:13)
#loc125 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":99:17)
#loc126 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":102:39)
#loc127 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":102:25)
#loc128 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":102:13)
#loc129 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":104:25)
#loc130 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":104:20)
#loc131 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":104:13)
#loc132 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":104:36)
#loc133 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":107:9)
#loc134 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":110:9)
#loc135 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":107:13)
#loc136 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":107:29)
#loc137 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":108:9)
#loc138 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":109:26)
#loc139 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":109:13)
#loc140 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":111:9)
#loc141 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":114:9)
#loc142 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":111:13)
#loc143 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":111:29)
#loc144 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":112:9)
#loc145 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":113:26)
#loc146 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":113:13)
#loc147 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":122:5)
#loc148 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":126:5)
#loc149 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":125:22)
#loc150 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":125:28)
#loc151 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":125:9)
#loc152 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":134:1)
#loc153 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":147:1)
#loc154 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":143:9)
#loc155 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":143:20)
#loc156 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":136:5)
#loc157 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":136:9)
#loc158 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":137:5)
#loc159 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":137:20)
#loc160 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":139:13)
#loc161 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":139:12)
#loc162 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":139:5)
#loc163 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":141:12)
#loc164 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":141:5)
#loc165 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":142:5)
#loc166 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":146:5)
#loc167 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":145:22)
#loc168 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":145:28)
#loc169 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":145:9)
#loc170 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc171 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc172 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":234:23)
#loc173 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":150:1)
#loc174 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":237:1)
#loc175 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":161:9)
#loc176 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":161:13)
#loc177 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":162:9)
#loc178 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":162:28)
#loc179 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":163:9)
#loc180 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":163:31)
#loc181 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":164:9)
#loc182 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":164:31)
#loc183 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":165:9)
#loc184 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":165:41)
#loc185 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":226:9)
#loc186 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":226:20)
#loc187 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":152:5)
#loc188 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":152:9)
#loc189 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":153:5)
#loc190 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":153:20)
#loc191 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":155:13)
#loc192 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":155:12)
#loc193 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":155:5)
#loc194 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":156:5)
#loc195 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":224:5)
#loc196 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":166:9)
#loc197 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":209:17)
#loc198 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":209:16)
#loc199 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":167:9)
#loc200 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":208:9)
#loc201 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":176:35)
#loc202 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":176:44)
#loc203 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":176:57)
#loc204 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":176:28)
#loc205 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":176:13)
#loc206 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":176:68)
#loc207 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":177:13)
#loc208 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":180:13)
#loc209 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":177:17)
#loc210 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":177:33)
#loc211 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":178:13)
#loc212 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":179:17)
#loc213 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":181:20)
#loc214 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":181:21)
#loc215 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":181:30)
#loc216 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":181:33)
#loc217 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":181:47)
#loc218 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":181:13)
#loc219 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":181:48)
#loc220 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":182:34)
#loc221 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":182:13)
#loc222 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":183:39)
#loc223 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":183:13)
#loc224 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":184:38)
#loc225 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":184:32)
#loc226 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":184:13)
#loc227 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":184:46)
#loc228 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":185:13)
#loc229 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":188:13)
#loc230 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":185:22)
#loc231 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":185:54)
#loc232 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":185:55)
#loc233 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":185:64)
#loc234 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":185:78)
#loc235 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":185:17)
#loc236 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":185:84)
#loc237 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":186:13)
#loc238 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":187:17)
#loc239 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":189:13)
#loc240 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":192:13)
#loc241 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":189:24)
#loc242 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":189:38)
#loc243 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":189:17)
#loc244 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":189:57)
#loc245 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":190:13)
#loc246 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":191:17)
#loc247 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":193:35)
#loc248 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":193:49)
#loc249 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":193:55)
#loc250 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":193:28)
#loc251 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":193:13)
#loc252 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":193:59)
#loc253 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":194:13)
#loc254 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":197:13)
#loc255 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":194:17)
#loc256 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":194:33)
#loc257 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":195:13)
#loc258 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":196:17)
#loc259 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":199:31)
#loc260 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":199:45)
#loc261 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":199:58)
#loc262 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":199:76)
#loc263 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":199:79)
#loc264 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":199:26)
#loc265 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":199:13)
#loc266 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":199:80)
#loc267 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":200:13)
#loc268 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":203:13)
#loc269 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":200:17)
#loc270 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":200:31)
#loc272 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":200:47)
#loc273 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":200:61)
#loc274 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":201:13)
#loc275 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":202:17)
#loc276 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":205:39)
#loc277 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":205:25)
#loc278 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":205:13)
#loc279 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":207:25)
#loc280 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":207:20)
#loc281 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":207:13)
#loc282 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":207:36)
#loc283 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":210:9)
#loc284 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":213:9)
#loc285 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":210:13)
#loc286 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":210:29)
#loc287 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":211:9)
#loc288 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":212:26)
#loc289 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":212:13)
#loc290 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":214:9)
#loc291 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":217:9)
#loc292 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":214:13)
#loc293 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":214:29)
#loc294 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":215:9)
#loc295 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":216:26)
#loc296 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":216:13)
#loc297 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":225:5)
#loc298 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":236:5)
#loc299 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":228:9)
#loc300 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":235:9)
#loc301 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":228:13)
#loc302 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":228:21)
#loc303 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":229:9)
#loc304 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":231:9)
#loc305 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":233:9)
#loc306 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":230:26)
#loc307 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":230:32)
#loc308 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":230:13)
#loc309 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":234:13)
#loc310 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":239:1)
#loc311 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":243:1)
#loc312 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":241:5)
#loc313 = loc("CWE369_Divide_by_Zero__int_listen_socket_modulo_33.cpp":242:5)
#loc314 = loc(fused[#loc1, #loc2])
#loc315 = loc(fused[#loc3, #loc4])
#loc316 = loc(fused[#loc5, #loc6])
#loc317 = loc(fused[#loc7, #loc8])
#loc318 = loc(fused[#loc9, #loc10])
#loc319 = loc(fused[#loc11, #loc12])
#loc320 = loc(fused[#loc13, #loc14])
#loc321 = loc(fused[#loc15, #loc16])
#loc322 = loc(fused[#loc17, #loc18])
#loc323 = loc(fused[#loc19, #loc20])
#loc324 = loc(fused[#loc21, #loc22])
#loc325 = loc(fused[#loc23, #loc24])
#loc326 = loc(fused[#loc25, #loc26])
#loc327 = loc(fused[#loc27, #loc28])
#loc328 = loc(fused[#loc29, #loc30])
#loc329 = loc(fused[#loc31, #loc32])
#loc330 = loc(fused[#loc33, #loc34])
#loc331 = loc(fused[#loc35, #loc36])
#loc332 = loc(fused[#loc39, #loc37])
#loc333 = loc(fused[#loc40, #loc41])
#loc334 = loc(fused[#loc42, #loc43])
#loc335 = loc(fused[#loc45, #loc46])
#loc336 = loc(fused[#loc51, #loc52])
#loc337 = loc(fused[#loc53, #loc54])
#loc338 = loc(fused[#loc55, #loc56])
#loc339 = loc(fused[#loc57, #loc54])
#loc340 = loc(fused[#loc59, #loc60])
#loc341 = loc(fused[#loc62, #loc63])
#loc342 = loc(fused[#loc64, #loc65])
#loc343 = loc(fused[#loc68, #loc66])
#loc344 = loc(fused[#loc72, #loc69])
#loc345 = loc(fused[#loc76, #loc77])
#loc346 = loc(fused[#loc78, #loc79])
#loc347 = loc(fused[#loc81, #loc82])
#loc348 = loc(fused[#loc83, #loc84])
#loc349 = loc(fused[#loc85, #loc86])
#loc350 = loc(fused[#loc87, #loc79])
#loc351 = loc(fused[#loc89, #loc90])
#loc352 = loc(fused[#loc93, #loc94])
#loc353 = loc(fused[#loc95, #loc90])
#loc354 = loc(fused[#loc101, #loc102])
#loc355 = loc(fused[#loc103, #loc104])
#loc356 = loc(fused[#loc105, #loc106])
#loc357 = loc(fused[#loc107, #loc104])
#loc358 = loc(fused[#loc111, #loc112])
#loc359 = loc(fused[#loc115, #loc116])
#loc360 = loc(fused[#loc117, #loc118])
#loc361 = loc(fused[#loc119, #loc120])
#loc362 = loc(fused[#loc122, #loc123])
#loc363 = loc(fused[#loc124, #loc118])
#loc364 = loc(fused[#loc128, #loc126])
#loc365 = loc(fused[#loc131, #loc132])
#loc366 = loc(fused[#loc133, #loc134])
#loc367 = loc(fused[#loc135, #loc136])
#loc368 = loc(fused[#loc137, #loc134])
#loc369 = loc(fused[#loc140, #loc141])
#loc370 = loc(fused[#loc142, #loc143])
#loc371 = loc(fused[#loc144, #loc141])
#loc372 = loc(fused[#loc147, #loc148])
#loc373 = loc(fused[#loc149, #loc150])
#loc374 = loc(fused[#loc152, #loc153])
#loc375 = loc(fused[#loc154, #loc155])
#loc376 = loc(fused[#loc156, #loc157])
#loc377 = loc(fused[#loc158, #loc159])
#loc378 = loc(fused[#loc162, #loc160])
#loc379 = loc(fused[#loc164, #loc163])
#loc380 = loc(fused[#loc165, #loc166])
#loc381 = loc(fused[#loc167, #loc168])
#loc382 = loc(fused[#loc170, #loc171])
#loc383 = loc(fused[#loc173, #loc174])
#loc384 = loc(fused[#loc175, #loc176])
#loc385 = loc(fused[#loc177, #loc178])
#loc386 = loc(fused[#loc179, #loc180])
#loc387 = loc(fused[#loc181, #loc182])
#loc388 = loc(fused[#loc183, #loc184])
#loc389 = loc(fused[#loc185, #loc186])
#loc390 = loc(fused[#loc187, #loc188])
#loc391 = loc(fused[#loc189, #loc190])
#loc392 = loc(fused[#loc193, #loc191])
#loc393 = loc(fused[#loc194, #loc195])
#loc394 = loc(fused[#loc196, #loc197])
#loc395 = loc(fused[#loc199, #loc200])
#loc396 = loc(fused[#loc205, #loc206])
#loc397 = loc(fused[#loc207, #loc208])
#loc398 = loc(fused[#loc209, #loc210])
#loc399 = loc(fused[#loc211, #loc208])
#loc400 = loc(fused[#loc213, #loc214])
#loc401 = loc(fused[#loc216, #loc217])
#loc402 = loc(fused[#loc218, #loc219])
#loc403 = loc(fused[#loc221, #loc220])
#loc404 = loc(fused[#loc223, #loc222])
#loc405 = loc(fused[#loc226, #loc227])
#loc406 = loc(fused[#loc228, #loc229])
#loc407 = loc(fused[#loc231, #loc232])
#loc408 = loc(fused[#loc233, #loc234])
#loc409 = loc(fused[#loc235, #loc236])
#loc410 = loc(fused[#loc237, #loc229])
#loc411 = loc(fused[#loc239, #loc240])
#loc412 = loc(fused[#loc243, #loc244])
#loc413 = loc(fused[#loc245, #loc240])
#loc414 = loc(fused[#loc251, #loc252])
#loc415 = loc(fused[#loc253, #loc254])
#loc416 = loc(fused[#loc255, #loc256])
#loc417 = loc(fused[#loc257, #loc254])
#loc418 = loc(fused[#loc261, #loc262])
#loc419 = loc(fused[#loc265, #loc266])
#loc420 = loc(fused[#loc267, #loc268])
#loc421 = loc(fused[#loc269, #loc270])
#loc422 = loc(fused[#loc272, #loc273])
#loc423 = loc(fused[#loc274, #loc268])
#loc424 = loc(fused[#loc278, #loc276])
#loc425 = loc(fused[#loc281, #loc282])
#loc426 = loc(fused[#loc283, #loc284])
#loc427 = loc(fused[#loc285, #loc286])
#loc428 = loc(fused[#loc287, #loc284])
#loc429 = loc(fused[#loc290, #loc291])
#loc430 = loc(fused[#loc292, #loc293])
#loc431 = loc(fused[#loc294, #loc291])
#loc432 = loc(fused[#loc297, #loc298])
#loc433 = loc(fused[#loc299, #loc300])
#loc434 = loc(fused[#loc301, #loc302])
#loc435 = loc(fused[#loc303, #loc304, #loc305, #loc300])
#loc436 = loc(fused[#loc306, #loc307])
#loc437 = loc(fused[#loc310, #loc311])
