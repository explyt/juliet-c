!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":21:66)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":21:82)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":46:70)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":46:86)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc86 = loc(fused[#loc7, #loc8])
#loc101 = loc(fused[#loc47, #loc48])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc83)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc84)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41_badSink(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc86)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc9)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc10)
    cir.call @printStructLine(%1) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc11)
    %2 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc12)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc13)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc13)
    cir.call @free(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc12)
    cir.return loc(#loc6)
  } loc(#loc85)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc87)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc88)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc90)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc22)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc91)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc24)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc92)
    %4 = cir.call @malloc(%3) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc24)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc93)
    cir.store %5, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc94)
    cir.br ^bb1 loc(#loc95)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc31)
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc32)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
    %9 = cir.cmp(eq, %6, %8) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc96)
    cir.brcond %9 ^bb2, ^bb3 loc(#loc97)
  ^bb2:  // pred: ^bb1
    %10 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc34)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc35)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc36)
    cir.call @exit(%12) : (!s32i) -> () extra(#fn_attr) loc(#loc34)
    cir.br ^bb3 loc(#loc30)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc30)
  ^bb4:  // pred: ^bb3
    %13 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc38)
    %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc39)
    cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc98)
    %16 = cir.const #cir.int<2> : !s32i loc(#loc40)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
    %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
    cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc99)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc43)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41_badSink(%19) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc44)
    cir.return loc(#loc19)
  } loc(#loc89)
  cir.func @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41_goodG2BSink(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc47, #loc48])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc101)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc49)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
    cir.call @printStructLine(%1) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc51)
    %2 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc52)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc53)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc53)
    cir.call @free(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc52)
    cir.return loc(#loc46)
  } loc(#loc100)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc103)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc56)
    cir.return loc(#loc55)
  } loc(#loc102)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc105)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc62)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc106)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc64)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc107)
    %4 = cir.call @malloc(%3) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc64)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc108)
    cir.store %5, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc109)
    cir.br ^bb1 loc(#loc110)
  ^bb1:  // pred: ^bb0
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc71)
    %7 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc72)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc72)
    %9 = cir.cmp(eq, %6, %8) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc111)
    cir.brcond %9 ^bb2, ^bb3 loc(#loc112)
  ^bb2:  // pred: ^bb1
    %10 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc74)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc75)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc76)
    cir.call @exit(%12) : (!s32i) -> () extra(#fn_attr) loc(#loc74)
    cir.br ^bb3 loc(#loc70)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc70)
  ^bb4:  // pred: ^bb3
    %13 = cir.const #cir.int<1> : !s32i loc(#loc77)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc78)
    %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc39)
    cir.store %13, %15 : !s32i, !cir.ptr<!s32i> loc(#loc113)
    %16 = cir.const #cir.int<2> : !s32i loc(#loc79)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc80)
    %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
    cir.store %16, %18 : !s32i, !cir.ptr<!s32i> loc(#loc114)
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc81)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41_goodG2BSink(%19) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc82)
    cir.return loc(#loc59)
  } loc(#loc104)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":21:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":26:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":22:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":24:21)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":24:5)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":25:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":25:10)
#loc14 = loc("/usr/include/stdlib.h":672:1)
#loc15 = loc("/usr/include/stdlib.h":672:45)
#loc16 = loc("/usr/include/stdlib.h":756:1)
#loc17 = loc("/usr/include/stdlib.h":756:70)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":28:1)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":40:1)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":30:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":30:21)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":32:12)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":32:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":35:29)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":35:36)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":35:47)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":35:48)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":35:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":36:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":36:33)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":36:9)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":36:17)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":36:23)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":36:24)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":36:30)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":36:29)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":37:20)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":37:5)
#loc39 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":38:20)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":38:5)
#loc42 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":39:65)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":39:5)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":46:1)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":51:1)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":47:1)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":49:21)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":49:5)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":50:5)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":50:10)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":67:1)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":70:1)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":69:5)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":69:13)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":54:1)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":65:1)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":56:5)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":56:21)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":58:12)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":58:5)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":60:29)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":60:36)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":60:48)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":60:49)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":60:5)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":61:5)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":61:33)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":61:9)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":61:17)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":61:23)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":61:24)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":61:30)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":61:29)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":62:20)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":62:5)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":63:20)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":63:5)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":64:69)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_41.c":64:5)
#loc83 = loc(fused[#loc1, #loc2])
#loc84 = loc(fused[#loc3, #loc4])
#loc85 = loc(fused[#loc5, #loc6])
#loc87 = loc(fused[#loc14, #loc15])
#loc88 = loc(fused[#loc16, #loc17])
#loc89 = loc(fused[#loc18, #loc19])
#loc90 = loc(fused[#loc20, #loc21])
#loc91 = loc(fused[#loc23, #loc22])
#loc92 = loc(fused[#loc25, #loc26])
#loc93 = loc(fused[#loc24, #loc27])
#loc94 = loc(fused[#loc28, #loc27])
#loc95 = loc(fused[#loc29, #loc30])
#loc96 = loc(fused[#loc31, #loc32])
#loc97 = loc(fused[#loc33, #loc30])
#loc98 = loc(fused[#loc38, #loc37])
#loc99 = loc(fused[#loc41, #loc40])
#loc100 = loc(fused[#loc45, #loc46])
#loc102 = loc(fused[#loc54, #loc55])
#loc103 = loc(fused[#loc56, #loc57])
#loc104 = loc(fused[#loc58, #loc59])
#loc105 = loc(fused[#loc60, #loc61])
#loc106 = loc(fused[#loc63, #loc62])
#loc107 = loc(fused[#loc65, #loc66])
#loc108 = loc(fused[#loc64, #loc67])
#loc109 = loc(fused[#loc68, #loc67])
#loc110 = loc(fused[#loc69, #loc70])
#loc111 = loc(fused[#loc71, #loc72])
#loc112 = loc(fused[#loc73, #loc70])
#loc113 = loc(fused[#loc78, #loc77])
#loc114 = loc(fused[#loc80, #loc79])
