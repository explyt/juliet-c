!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_68b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" external @CWE191_Integer_Underflow__char_rand_predec_68_badData : !s8i {alignment = 1 : i64} loc(#loc54)
  cir.func private @printHexCharLine(!s8i) loc(#loc55)
  cir.func no_proto @CWE191_Integer_Underflow__char_rand_predec_68b_badSink() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc57)
    %1 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc58)
    %2 = cir.get_global @CWE191_Integer_Underflow__char_rand_predec_68_badData : !cir.ptr<!s8i> loc(#loc54)
    %3 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc10)
    cir.store %3, %1 : !s8i, !cir.ptr<!s8i> loc(#loc58)
    cir.br ^bb1 loc(#loc59)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc13)
    %5 = cir.unary(dec, %4) : !s8i, !s8i loc(#loc13)
    cir.store %5, %1 : !s8i, !cir.ptr<!s8i> loc(#loc60)
    %6 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc8)
    cir.store %6, %0 : !s8i, !cir.ptr<!s8i> loc(#loc57)
    %7 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc15)
    cir.call @printHexCharLine(%7) : (!s8i) -> () loc(#loc16)
    cir.br ^bb2 loc(#loc12)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc6)
  } loc(#loc56)
  cir.global "private" external @CWE191_Integer_Underflow__char_rand_predec_68_goodG2BData : !s8i {alignment = 1 : i64} loc(#loc61)
  cir.func no_proto @CWE191_Integer_Underflow__char_rand_predec_68b_goodG2BSink() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc63)
    %1 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc64)
    %2 = cir.get_global @CWE191_Integer_Underflow__char_rand_predec_68_goodG2BData : !cir.ptr<!s8i> loc(#loc61)
    %3 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc24)
    cir.store %3, %1 : !s8i, !cir.ptr<!s8i> loc(#loc64)
    cir.br ^bb1 loc(#loc65)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc27)
    %5 = cir.unary(dec, %4) : !s8i, !s8i loc(#loc27)
    cir.store %5, %1 : !s8i, !cir.ptr<!s8i> loc(#loc66)
    %6 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc22)
    cir.store %6, %0 : !s8i, !cir.ptr<!s8i> loc(#loc63)
    %7 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc29)
    cir.call @printHexCharLine(%7) : (!s8i) -> () loc(#loc30)
    cir.br ^bb2 loc(#loc26)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc20)
  } loc(#loc62)
  cir.global "private" external @CWE191_Integer_Underflow__char_rand_predec_68_goodB2GData : !s8i {alignment = 1 : i64} loc(#loc67)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc35)
  cir.func no_proto @CWE191_Integer_Underflow__char_rand_predec_68b_goodB2GSink() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc70)
    %1 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc71)
    %2 = cir.get_global @CWE191_Integer_Underflow__char_rand_predec_68_goodB2GData : !cir.ptr<!s8i> loc(#loc67)
    %3 = cir.load %2 : !cir.ptr<!s8i>, !s8i loc(#loc41)
    cir.store %3, %1 : !s8i, !cir.ptr<!s8i> loc(#loc71)
    cir.br ^bb1 loc(#loc72)
  ^bb1:  // pred: ^bb0
    %4 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc44)
    %5 = cir.cast(integral, %4 : !s8i), !s32i loc(#loc44)
    %6 = cir.const #cir.int<127> : !s32i loc(#loc45)
    %7 = cir.unary(minus, %6) nsw : !s32i, !s32i loc(#loc45)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc45)
    %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc45)
    %10 = cir.cmp(gt, %5, %9) : !s32i, !cir.bool loc(#loc73)
    cir.brcond %10 ^bb2, ^bb3 loc(#loc74)
  ^bb2:  // pred: ^bb1
    %11 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc49)
    %12 = cir.unary(dec, %11) : !s8i, !s8i loc(#loc49)
    cir.store %12, %1 : !s8i, !cir.ptr<!s8i> loc(#loc75)
    %13 = cir.load %1 : !cir.ptr<!s8i>, !s8i loc(#loc39)
    cir.store %13, %0 : !s8i, !cir.ptr<!s8i> loc(#loc70)
    %14 = cir.load %0 : !cir.ptr<!s8i>, !s8i loc(#loc51)
    cir.call @printHexCharLine(%14) : (!s8i) -> () loc(#loc52)
    cir.br ^bb4 loc(#loc47)
  ^bb3:  // pred: ^bb1
    %15 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc35)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc35)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    cir.br ^bb4 loc(#loc43)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc43)
  ^bb5:  // pred: ^bb4
    cir.return loc(#loc37)
  } loc(#loc69)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s05/CWE191_Integer_Underflow__char_rand_predec_68b.c":0:0)
#loc1 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":20:1)
#loc2 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":20:13)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc5 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":26:1)
#loc6 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":35:1)
#loc7 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":32:9)
#loc8 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":32:23)
#loc9 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":28:5)
#loc10 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":28:17)
#loc11 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":29:5)
#loc12 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":34:5)
#loc13 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":31:9)
#loc14 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":31:11)
#loc15 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":33:26)
#loc16 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":33:9)
#loc17 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":21:1)
#loc18 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":21:13)
#loc19 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":42:1)
#loc20 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":51:1)
#loc21 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":48:9)
#loc22 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":48:23)
#loc23 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":44:5)
#loc24 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":44:17)
#loc25 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":45:5)
#loc26 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":50:5)
#loc27 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":47:9)
#loc28 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":47:11)
#loc29 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":49:26)
#loc30 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":49:9)
#loc31 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":22:1)
#loc32 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":22:13)
#loc33 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc34 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc35 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":66:19)
#loc36 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":54:1)
#loc37 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":68:1)
#loc38 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":61:9)
#loc39 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":61:23)
#loc40 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":56:5)
#loc41 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":56:17)
#loc42 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":58:5)
#loc43 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":67:5)
#loc44 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":58:9)
#loc45 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":58:16)
#loc46 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":59:5)
#loc47 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":63:5)
#loc48 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":65:5)
#loc49 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":60:9)
#loc50 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":60:11)
#loc51 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":62:26)
#loc52 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":62:9)
#loc53 = loc("CWE191_Integer_Underflow__char_rand_predec_68b.c":66:9)
#loc54 = loc(fused[#loc1, #loc2])
#loc55 = loc(fused[#loc3, #loc4])
#loc56 = loc(fused[#loc5, #loc6])
#loc57 = loc(fused[#loc7, #loc8])
#loc58 = loc(fused[#loc9, #loc10])
#loc59 = loc(fused[#loc11, #loc12])
#loc60 = loc(fused[#loc13, #loc14])
#loc61 = loc(fused[#loc17, #loc18])
#loc62 = loc(fused[#loc19, #loc20])
#loc63 = loc(fused[#loc21, #loc22])
#loc64 = loc(fused[#loc23, #loc24])
#loc65 = loc(fused[#loc25, #loc26])
#loc66 = loc(fused[#loc27, #loc28])
#loc67 = loc(fused[#loc31, #loc32])
#loc68 = loc(fused[#loc33, #loc34])
#loc69 = loc(fused[#loc36, #loc37])
#loc70 = loc(fused[#loc38, #loc39])
#loc71 = loc(fused[#loc40, #loc41])
#loc72 = loc(fused[#loc42, #loc43])
#loc73 = loc(fused[#loc44, #loc45])
#loc74 = loc(fused[#loc46, #loc47, #loc48, #loc43])
#loc75 = loc(fused[#loc49, #loc50])
