!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc103 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":253:10)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":253:14)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":253:20)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":253:32)
#true = #cir.bool<true> : !cir.bool
#loc461 = loc(fused[#loc103, #loc104])
#loc462 = loc(fused[#loc105, #loc106])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc417)
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc418)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"output_bad.txt\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc5)
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc419)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc8)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc420)
  cir.func private @fwrite(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc421)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"This is the sentence we are printing to the file. \00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc13)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc422)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_fwrite_05_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc424)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc21)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc425)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc417)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc25)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc25)
      cir.if %5 {
        %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc27)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc27)
        %8 = cir.binop(and, %6, %7) : !s32i loc(#loc27)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc27)
        %10 = cir.ternary(%9, true {
          %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc27)
          %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc27)
          %14 = cir.const #cir.int<30> : !s32i loc(#loc27)
          %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc27)
          %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc27)
          %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc27)
          %18 = cir.const #cir.int<15> : !s32i loc(#loc27)
          %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc27)
          %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc27)
          %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc27)
          %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc27)
          %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc27)
          cir.yield %23 : !u32i loc(#loc27)
        }, false {
          %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc27)
          %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc27)
          %14 = cir.const #cir.int<30> : !s32i loc(#loc27)
          %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc27)
          %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc27)
          %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc27)
          %18 = cir.const #cir.int<15> : !s32i loc(#loc27)
          %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc27)
          %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc27)
          %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc27)
          %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc27)
          %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc27)
          %24 = cir.unary(minus, %23) : !u32i, !u32i loc(#loc27)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc27)
          %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc27)
          %27 = cir.binop(sub, %24, %26) : !u32i loc(#loc27)
          cir.yield %27 : !u32i loc(#loc27)
        }) : (!cir.bool) -> !u32i loc(#loc27)
        %11 = cir.cast(integral, %10 : !u32i), !s32i loc(#loc27)
        cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc428)
      } loc(#loc427)
    } loc(#loc426)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc417)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc31)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc31)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc432)
          %7 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc433)
          %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc434)
          %9 = cir.const #cir.int<0> : !s32i loc(#loc36)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc36)
          cir.store %10, %6 : !u64i, !cir.ptr<!u64i> loc(#loc432)
          %11 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc38)
          cir.store %11, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc433)
          %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc5)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc5)
          cir.store %13, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc434)
          %14 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc40)
          %15 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
          %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc8)
          %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc8)
          %18 = cir.call @fopen(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc40)
          cir.store %18, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc435)
          cir.scope {
            %19 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc46)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc47)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc47)
            %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc437)
            cir.if %22 {
              %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc49)
              %24 = cir.const #cir.int<1> : !s32i loc(#loc50)
              cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc49)
            } loc(#loc438)
          } loc(#loc436)
          cir.scope {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc53)
            %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc53)
            cir.store %20, %6 : !u64i, !cir.ptr<!u64i> loc(#loc440)
            cir.for : cond {
              %21 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc55)
              %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc56)
              %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc56)
              %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc441)
              cir.condition(%24) loc(#loc57)
            } body {
              cir.scope {
                cir.scope {
                  %21 = cir.const #cir.int<50> : !u64i loc(#loc444)
                  %22 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc63)
                  %23 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc13)
                  %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc13)
                  %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc13)
                  %26 = cir.const #cir.int<1> : !u64i loc(#loc445)
                  %27 = cir.const #cir.int<50> : !u64i loc(#loc446)
                  %28 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc68)
                  %29 = cir.call @fwrite(%25, %26, %27, %28) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc63)
                  %30 = cir.cmp(ne, %21, %29) : !u64i, !cir.bool loc(#loc447)
                  cir.if %30 {
                    %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc71)
                    %32 = cir.const #cir.int<1> : !s32i loc(#loc72)
                    cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc71)
                  } loc(#loc448)
                } loc(#loc443)
              } loc(#loc442)
              cir.yield loc(#loc52)
            } step {
              %21 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc73)
              %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc74)
              cir.store %22, %6 : !u64i, !cir.ptr<!u64i> loc(#loc449)
              cir.yield loc(#loc439)
            } loc(#loc439)
          } loc(#loc439)
          cir.scope {
            %19 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc77)
            %20 = cir.cast(ptr_to_bool, %19 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc77)
            cir.if %20 {
              %21 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc79)
              %22 = cir.call @fclose(%21) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc80)
            } loc(#loc451)
          } loc(#loc450)
        } loc(#loc431)
      } loc(#loc430)
    } loc(#loc429)
    cir.return loc(#loc17)
  } loc(#loc423)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_fwrite_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc453)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc83)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc454)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc85)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc455)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc87)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc456)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc89)
    cir.return loc(#loc82)
  } loc(#loc452)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc457)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc458)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc459)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc97)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc98)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc99)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc100)
  cir.func @main(%arg0: !s32i loc(fused[#loc103, #loc104]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc105, #loc106])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc461)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc462)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc102)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc107)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc107)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc108)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc109)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc109)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc110)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc97)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    %8 = cir.get_global @CWE400_Resource_Exhaustion__rand_fwrite_05_good : !cir.ptr<!cir.func<!void ()>> loc(#loc463)
    cir.call @CWE400_Resource_Exhaustion__rand_fwrite_05_good() : () -> () loc(#loc112)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc98)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc99)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    %13 = cir.get_global @CWE400_Resource_Exhaustion__rand_fwrite_05_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc464)
    cir.call @CWE400_Resource_Exhaustion__rand_fwrite_05_bad() : () -> () loc(#loc116)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc100)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc100)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc118)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc119)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc465)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc465)
    cir.return %17 : !s32i loc(#loc465)
  } loc(#loc460)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc466)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc123)
  cir.global "private" constant cir_private dsolocal @".str.8" = #cir.const_array<"output_good.txt\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc124)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc468)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc129)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc130)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc469)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc417)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc134)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc134)
      cir.if %5 {
        %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc136)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc136)
        %8 = cir.binop(and, %6, %7) : !s32i loc(#loc136)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc136)
        %10 = cir.ternary(%9, true {
          %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc136)
          %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc136)
          %14 = cir.const #cir.int<30> : !s32i loc(#loc136)
          %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc136)
          %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc136)
          %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc136)
          %18 = cir.const #cir.int<15> : !s32i loc(#loc136)
          %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc136)
          %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc136)
          %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc136)
          %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc136)
          %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc136)
          cir.yield %23 : !u32i loc(#loc136)
        }, false {
          %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc136)
          %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc136)
          %14 = cir.const #cir.int<30> : !s32i loc(#loc136)
          %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc136)
          %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc136)
          %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc136)
          %18 = cir.const #cir.int<15> : !s32i loc(#loc136)
          %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc136)
          %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc136)
          %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc136)
          %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc136)
          %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc136)
          %24 = cir.unary(minus, %23) : !u32i, !u32i loc(#loc136)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc136)
          %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc136)
          %27 = cir.binop(sub, %24, %26) : !u32i loc(#loc136)
          cir.yield %27 : !u32i loc(#loc136)
        }) : (!cir.bool) -> !u32i loc(#loc136)
        %11 = cir.cast(integral, %10 : !u32i), !s32i loc(#loc136)
        cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc472)
      } loc(#loc471)
    } loc(#loc470)
    cir.scope {
      %3 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc466)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc140)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc140)
      cir.if %5 {
        %6 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc123)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc123)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc144)
      } else {
        cir.scope {
          %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc476)
          %7 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc477)
          %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc478)
          %9 = cir.const #cir.int<0> : !s32i loc(#loc148)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc148)
          cir.store %10, %6 : !u64i, !cir.ptr<!u64i> loc(#loc476)
          %11 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc150)
          cir.store %11, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc477)
          %12 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc124)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc124)
          cir.store %13, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc478)
          cir.scope {
            %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc154)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc155)
            %16 = cir.cmp(gt, %14, %15) : !s32i, !cir.bool loc(#loc480)
            %17 = cir.ternary(%16, true {
              %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc157)
              %19 = cir.const #cir.int<20> : !s32i loc(#loc158)
              %20 = cir.cmp(le, %18, %19) : !s32i, !cir.bool loc(#loc481)
              %21 = cir.ternary(%20, true {
                %22 = cir.const #true loc(#loc156)
                cir.yield %22 : !cir.bool loc(#loc156)
              }, false {
                %22 = cir.const #false loc(#loc156)
                cir.yield %22 : !cir.bool loc(#loc156)
              }) : (!cir.bool) -> !cir.bool loc(#loc156)
              cir.yield %21 : !cir.bool loc(#loc156)
            }, false {
              %18 = cir.const #false loc(#loc156)
              cir.yield %18 : !cir.bool loc(#loc156)
            }) : (!cir.bool) -> !cir.bool loc(#loc156)
            cir.if %17 {
              %18 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc160)
              %19 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
              %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc162)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc162)
              %22 = cir.call @fopen(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc160)
              cir.store %22, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc483)
              cir.scope {
                %23 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc167)
                %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc168)
                %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc168)
                %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc485)
                cir.if %26 {
                  %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc170)
                  %28 = cir.const #cir.int<1> : !s32i loc(#loc171)
                  cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc170)
                } loc(#loc486)
              } loc(#loc484)
              cir.scope {
                %23 = cir.const #cir.int<0> : !s32i loc(#loc174)
                %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc174)
                cir.store %24, %6 : !u64i, !cir.ptr<!u64i> loc(#loc488)
                cir.for : cond {
                  %25 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc176)
                  %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc177)
                  %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc177)
                  %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc489)
                  cir.condition(%28) loc(#loc178)
                } body {
                  cir.scope {
                    cir.scope {
                      %25 = cir.const #cir.int<50> : !u64i loc(#loc492)
                      %26 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc184)
                      %27 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc185)
                      %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc185)
                      %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc185)
                      %30 = cir.const #cir.int<1> : !u64i loc(#loc493)
                      %31 = cir.const #cir.int<50> : !u64i loc(#loc494)
                      %32 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc190)
                      %33 = cir.call @fwrite(%29, %30, %31, %32) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc184)
                      %34 = cir.cmp(ne, %25, %33) : !u64i, !cir.bool loc(#loc495)
                      cir.if %34 {
                        %35 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc192)
                        %36 = cir.const #cir.int<1> : !s32i loc(#loc193)
                        cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc192)
                      } loc(#loc496)
                    } loc(#loc491)
                  } loc(#loc490)
                  cir.yield loc(#loc173)
                } step {
                  %25 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc194)
                  %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc195)
                  cir.store %26, %6 : !u64i, !cir.ptr<!u64i> loc(#loc497)
                  cir.yield loc(#loc487)
                } loc(#loc487)
              } loc(#loc487)
              cir.scope {
                %23 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc198)
                %24 = cir.cast(ptr_to_bool, %23 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc198)
                cir.if %24 {
                  %25 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc200)
                  %26 = cir.call @fclose(%25) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc201)
                } loc(#loc499)
              } loc(#loc498)
            } loc(#loc482)
          } loc(#loc479)
        } loc(#loc475)
      } loc(#loc474)
    } loc(#loc473)
    cir.return loc(#loc126)
  } loc(#loc467)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc501)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc206)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc207)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc502)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc417)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc211)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc211)
      cir.if %5 {
        %6 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc213)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc213)
        %8 = cir.binop(and, %6, %7) : !s32i loc(#loc213)
        %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc213)
        %10 = cir.ternary(%9, true {
          %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc213)
          %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc213)
          %14 = cir.const #cir.int<30> : !s32i loc(#loc213)
          %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc213)
          %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc213)
          %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc213)
          %18 = cir.const #cir.int<15> : !s32i loc(#loc213)
          %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc213)
          %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc213)
          %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc213)
          %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc213)
          %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc213)
          cir.yield %23 : !u32i loc(#loc213)
        }, false {
          %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc213)
          %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc213)
          %14 = cir.const #cir.int<30> : !s32i loc(#loc213)
          %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc213)
          %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc213)
          %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc213)
          %18 = cir.const #cir.int<15> : !s32i loc(#loc213)
          %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc213)
          %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc213)
          %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc213)
          %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc213)
          %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc213)
          %24 = cir.unary(minus, %23) : !u32i, !u32i loc(#loc213)
          %25 = cir.const #cir.int<1> : !s32i loc(#loc213)
          %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc213)
          %27 = cir.binop(sub, %24, %26) : !u32i loc(#loc213)
          cir.yield %27 : !u32i loc(#loc213)
        }) : (!cir.bool) -> !u32i loc(#loc213)
        %11 = cir.cast(integral, %10 : !u32i), !s32i loc(#loc213)
        cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc505)
      } loc(#loc504)
    } loc(#loc503)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc417)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc217)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc217)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc509)
          %7 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc510)
          %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc511)
          %9 = cir.const #cir.int<0> : !s32i loc(#loc222)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc222)
          cir.store %10, %6 : !u64i, !cir.ptr<!u64i> loc(#loc509)
          %11 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc224)
          cir.store %11, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc510)
          %12 = cir.get_global @".str.8" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc226)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc226)
          cir.store %13, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc511)
          cir.scope {
            %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc229)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc230)
            %16 = cir.cmp(gt, %14, %15) : !s32i, !cir.bool loc(#loc513)
            %17 = cir.ternary(%16, true {
              %18 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc232)
              %19 = cir.const #cir.int<20> : !s32i loc(#loc233)
              %20 = cir.cmp(le, %18, %19) : !s32i, !cir.bool loc(#loc514)
              %21 = cir.ternary(%20, true {
                %22 = cir.const #true loc(#loc231)
                cir.yield %22 : !cir.bool loc(#loc231)
              }, false {
                %22 = cir.const #false loc(#loc231)
                cir.yield %22 : !cir.bool loc(#loc231)
              }) : (!cir.bool) -> !cir.bool loc(#loc231)
              cir.yield %21 : !cir.bool loc(#loc231)
            }, false {
              %18 = cir.const #false loc(#loc231)
              cir.yield %18 : !cir.bool loc(#loc231)
            }) : (!cir.bool) -> !cir.bool loc(#loc231)
            cir.if %17 {
              %18 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc235)
              %19 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc236)
              %20 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc237)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc237)
              %22 = cir.call @fopen(%19, %21) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc235)
              cir.store %22, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc516)
              cir.scope {
                %23 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc242)
                %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc243)
                %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc243)
                %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc518)
                cir.if %26 {
                  %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc245)
                  %28 = cir.const #cir.int<1> : !s32i loc(#loc246)
                  cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc245)
                } loc(#loc519)
              } loc(#loc517)
              cir.scope {
                %23 = cir.const #cir.int<0> : !s32i loc(#loc249)
                %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc249)
                cir.store %24, %6 : !u64i, !cir.ptr<!u64i> loc(#loc521)
                cir.for : cond {
                  %25 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc251)
                  %26 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc252)
                  %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc252)
                  %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc522)
                  cir.condition(%28) loc(#loc253)
                } body {
                  cir.scope {
                    cir.scope {
                      %25 = cir.const #cir.int<50> : !u64i loc(#loc525)
                      %26 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc259)
                      %27 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc260)
                      %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc260)
                      %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc260)
                      %30 = cir.const #cir.int<1> : !u64i loc(#loc526)
                      %31 = cir.const #cir.int<50> : !u64i loc(#loc527)
                      %32 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc265)
                      %33 = cir.call @fwrite(%29, %30, %31, %32) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc259)
                      %34 = cir.cmp(ne, %25, %33) : !u64i, !cir.bool loc(#loc528)
                      cir.if %34 {
                        %35 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc267)
                        %36 = cir.const #cir.int<1> : !s32i loc(#loc268)
                        cir.call @exit(%36) : (!s32i) -> () extra(#fn_attr) loc(#loc267)
                      } loc(#loc529)
                    } loc(#loc524)
                  } loc(#loc523)
                  cir.yield loc(#loc248)
                } step {
                  %25 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc269)
                  %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc270)
                  cir.store %26, %6 : !u64i, !cir.ptr<!u64i> loc(#loc530)
                  cir.yield loc(#loc520)
                } loc(#loc520)
              } loc(#loc520)
              cir.scope {
                %23 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc273)
                %24 = cir.cast(ptr_to_bool, %23 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc273)
                cir.if %24 {
                  %25 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc275)
                  %26 = cir.call @fclose(%25) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc276)
                } loc(#loc532)
              } loc(#loc531)
            } loc(#loc515)
          } loc(#loc512)
        } loc(#loc508)
      } loc(#loc507)
    } loc(#loc506)
    cir.return loc(#loc203)
  } loc(#loc500)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc534)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc281)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc282)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc535)
    cir.scope {
      %3 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc466)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc286)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc286)
      cir.if %5 {
        %6 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc290)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc290)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc291)
      } else {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc292)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc538)
      } loc(#loc537)
    } loc(#loc536)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc417)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc296)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc296)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc542)
          %7 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc543)
          %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc544)
          %9 = cir.const #cir.int<0> : !s32i loc(#loc301)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc301)
          cir.store %10, %6 : !u64i, !cir.ptr<!u64i> loc(#loc542)
          %11 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc303)
          cir.store %11, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc543)
          %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc305)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc305)
          cir.store %13, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc544)
          %14 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc306)
          %15 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc307)
          %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc308)
          %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc308)
          %18 = cir.call @fopen(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc306)
          cir.store %18, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc545)
          cir.scope {
            %19 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc313)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc314)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc314)
            %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc547)
            cir.if %22 {
              %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc316)
              %24 = cir.const #cir.int<1> : !s32i loc(#loc317)
              cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc316)
            } loc(#loc548)
          } loc(#loc546)
          cir.scope {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc320)
            %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc320)
            cir.store %20, %6 : !u64i, !cir.ptr<!u64i> loc(#loc550)
            cir.for : cond {
              %21 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc322)
              %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc323)
              %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc323)
              %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc551)
              cir.condition(%24) loc(#loc324)
            } body {
              cir.scope {
                cir.scope {
                  %21 = cir.const #cir.int<50> : !u64i loc(#loc554)
                  %22 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc330)
                  %23 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc331)
                  %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc331)
                  %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc331)
                  %26 = cir.const #cir.int<1> : !u64i loc(#loc555)
                  %27 = cir.const #cir.int<50> : !u64i loc(#loc556)
                  %28 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc336)
                  %29 = cir.call @fwrite(%25, %26, %27, %28) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc330)
                  %30 = cir.cmp(ne, %21, %29) : !u64i, !cir.bool loc(#loc557)
                  cir.if %30 {
                    %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc339)
                    %32 = cir.const #cir.int<1> : !s32i loc(#loc340)
                    cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc339)
                  } loc(#loc558)
                } loc(#loc553)
              } loc(#loc552)
              cir.yield loc(#loc319)
            } step {
              %21 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc341)
              %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc342)
              cir.store %22, %6 : !u64i, !cir.ptr<!u64i> loc(#loc559)
              cir.yield loc(#loc549)
            } loc(#loc549)
          } loc(#loc549)
          cir.scope {
            %19 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc345)
            %20 = cir.cast(ptr_to_bool, %19 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc345)
            cir.if %20 {
              %21 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc347)
              %22 = cir.call @fclose(%21) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc348)
            } loc(#loc561)
          } loc(#loc560)
        } loc(#loc541)
      } loc(#loc540)
    } loc(#loc539)
    cir.return loc(#loc278)
  } loc(#loc533)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc563)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc353)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc354)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc564)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc417)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc358)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc358)
      cir.if %5 {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc360)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc567)
      } loc(#loc566)
    } loc(#loc565)
    cir.scope {
      %3 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc417)
      %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc364)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc364)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc571)
          %7 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pFile", init] {alignment = 8 : i64} loc(#loc572)
          %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["filename", init] {alignment = 8 : i64} loc(#loc573)
          %9 = cir.const #cir.int<0> : !s32i loc(#loc369)
          %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc369)
          cir.store %10, %6 : !u64i, !cir.ptr<!u64i> loc(#loc571)
          %11 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc371)
          cir.store %11, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc572)
          %12 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc373)
          %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc373)
          cir.store %13, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc573)
          %14 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc374)
          %15 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc375)
          %16 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc376)
          %17 = cir.cast(array_to_ptrdecay, %16 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc376)
          %18 = cir.call @fopen(%15, %17) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc374)
          cir.store %18, %7 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc574)
          cir.scope {
            %19 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc381)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc382)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc382)
            %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc576)
            cir.if %22 {
              %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc384)
              %24 = cir.const #cir.int<1> : !s32i loc(#loc385)
              cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc384)
            } loc(#loc577)
          } loc(#loc575)
          cir.scope {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc388)
            %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc388)
            cir.store %20, %6 : !u64i, !cir.ptr<!u64i> loc(#loc579)
            cir.for : cond {
              %21 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc390)
              %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc391)
              %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc391)
              %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc580)
              cir.condition(%24) loc(#loc392)
            } body {
              cir.scope {
                cir.scope {
                  %21 = cir.const #cir.int<50> : !u64i loc(#loc583)
                  %22 = cir.get_global @fwrite : !cir.ptr<!cir.func<!u64i (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>)>> loc(#loc398)
                  %23 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc399)
                  %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc399)
                  %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc399)
                  %26 = cir.const #cir.int<1> : !u64i loc(#loc584)
                  %27 = cir.const #cir.int<50> : !u64i loc(#loc585)
                  %28 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc404)
                  %29 = cir.call @fwrite(%25, %26, %27, %28) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc398)
                  %30 = cir.cmp(ne, %21, %29) : !u64i, !cir.bool loc(#loc586)
                  cir.if %30 {
                    %31 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc407)
                    %32 = cir.const #cir.int<1> : !s32i loc(#loc408)
                    cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc407)
                  } loc(#loc587)
                } loc(#loc582)
              } loc(#loc581)
              cir.yield loc(#loc387)
            } step {
              %21 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc409)
              %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc410)
              cir.store %22, %6 : !u64i, !cir.ptr<!u64i> loc(#loc588)
              cir.yield loc(#loc578)
            } loc(#loc578)
          } loc(#loc578)
          cir.scope {
            %19 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc413)
            %20 = cir.cast(ptr_to_bool, %19 : !cir.ptr<!ty__IO_FILE>), !cir.bool loc(#loc413)
            cir.if %20 {
              %21 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc415)
              %22 = cir.call @fclose(%21) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc416)
            } loc(#loc590)
          } loc(#loc589)
        } loc(#loc570)
      } loc(#loc569)
    } loc(#loc568)
    cir.return loc(#loc350)
  } loc(#loc562)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_fwrite_05.c":0:0)
#loc1 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":25:1)
#loc2 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":25:25)
#loc3 = loc("/usr/include/stdlib.h":573:1)
#loc4 = loc("/usr/include/stdlib.h":573:24)
#loc5 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":45:36)
#loc6 = loc("/usr/include/stdio.h":264:1)
#loc7 = loc("/usr/include/stdio.h":266:3)
#loc8 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":46:37)
#loc9 = loc("/usr/include/stdlib.h":756:1)
#loc10 = loc("/usr/include/stdlib.h":756:70)
#loc11 = loc("/usr/include/stdio.h":735:1)
#loc12 = loc("/usr/include/stdio.h":736:43)
#loc13 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":55:48)
#loc14 = loc("/usr/include/stdio.h":184:1)
#loc15 = loc("/usr/include/stdio.h":184:36)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":30:1)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":66:1)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":32:5)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":32:9)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":34:14)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":34:13)
#loc22 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":34:5)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":35:5)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":39:5)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":35:8)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":36:5)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":38:17)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":38:9)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":40:5)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":65:5)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":40:8)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":41:5)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":42:9)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":64:9)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":43:13)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":43:24)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":44:13)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":44:27)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":45:13)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":46:21)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":46:27)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":46:13)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":46:41)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":47:13)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":50:13)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":47:17)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":47:26)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":48:13)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":49:17)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":49:22)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":53:13)
#loc52 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":59:13)
#loc53 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":53:22)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":53:18)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":53:25)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":53:37)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":53:27)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":54:13)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":55:17)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":58:17)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":55:21)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":55:36)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":55:41)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":55:58)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":55:69)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":55:72)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":55:87)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":55:90)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":55:95)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":56:17)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":57:21)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":57:26)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":53:45)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":53:44)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":60:13)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":63:13)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":60:17)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":61:13)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":62:24)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":62:17)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":236:1)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":242:1)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":238:5)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":238:14)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":239:5)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":239:14)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":240:5)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":240:14)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":241:5)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":241:14)
#loc91 = loc("/usr/include/stdlib.h":575:1)
#loc92 = loc("/usr/include/stdlib.h":575:41)
#loc93 = loc("/usr/include/time.h":76:1)
#loc94 = loc("/usr/include/time.h":76:38)
#loc95 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc96 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":258:15)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":260:15)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":263:15)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":265:15)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":253:1)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":268:1)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":254:1)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":256:27)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":256:22)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":256:5)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":258:5)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":259:5)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":259:53)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":260:5)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":263:5)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":264:5)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":264:52)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":265:5)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":267:12)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":267:5)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":26:1)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":26:26)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":86:19)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":93:36)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":73:1)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":113:1)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":75:5)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":75:9)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":77:14)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":77:13)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":77:5)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":78:5)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":82:5)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":78:8)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":79:5)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":81:17)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":81:9)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":83:5)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":112:5)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":83:8)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":84:5)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":87:5)
#loc143 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":89:5)
#loc144 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":86:9)
#loc145 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":90:9)
#loc146 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":111:9)
#loc147 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":91:13)
#loc148 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":91:24)
#loc149 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":92:13)
#loc150 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":92:27)
#loc151 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":93:13)
#loc152 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":95:13)
#loc153 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":110:13)
#loc154 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":95:17)
#loc155 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":95:25)
#loc156 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":95:27)
#loc157 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":95:30)
#loc158 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":95:39)
#loc159 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":96:13)
#loc160 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":97:25)
#loc161 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":97:31)
#loc162 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":97:41)
#loc163 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":97:17)
#loc164 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":97:45)
#loc165 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":98:17)
#loc166 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":101:17)
#loc167 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":98:21)
#loc168 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":98:30)
#loc169 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":99:17)
#loc170 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":100:21)
#loc171 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":100:26)
#loc172 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":102:17)
#loc173 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":105:17)
#loc174 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":102:26)
#loc175 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":102:22)
#loc176 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":102:29)
#loc177 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":102:41)
#loc178 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":102:31)
#loc179 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":103:17)
#loc180 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":104:21)
#loc181 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":104:108)
#loc182 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":104:25)
#loc183 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":104:40)
#loc184 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":104:45)
#loc185 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":104:52)
#loc186 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":104:62)
#loc187 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":104:73)
#loc188 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":104:76)
#loc189 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":104:91)
#loc190 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":104:94)
#loc191 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":104:99)
#loc192 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":104:102)
#loc193 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":104:107)
#loc194 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":102:49)
#loc195 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":102:48)
#loc196 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":106:17)
#loc197 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":109:17)
#loc198 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":106:21)
#loc199 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":107:17)
#loc200 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":108:28)
#loc201 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":108:21)
#loc202 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":116:1)
#loc203 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":151:1)
#loc204 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":118:5)
#loc205 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":118:9)
#loc206 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":120:14)
#loc207 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":120:13)
#loc208 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":120:5)
#loc209 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":121:5)
#loc210 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":125:5)
#loc211 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":121:8)
#loc212 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":122:5)
#loc213 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":124:17)
#loc214 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":124:9)
#loc215 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":126:5)
#loc216 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":150:5)
#loc217 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":126:8)
#loc218 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":127:5)
#loc219 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":128:9)
#loc220 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":149:9)
#loc221 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":129:13)
#loc222 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":129:24)
#loc223 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":130:13)
#loc224 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":130:27)
#loc225 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":131:13)
#loc226 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":131:36)
#loc227 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":133:13)
#loc228 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":148:13)
#loc229 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":133:17)
#loc230 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":133:25)
#loc231 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":133:27)
#loc232 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":133:30)
#loc233 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":133:39)
#loc234 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":134:13)
#loc235 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":135:25)
#loc236 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":135:31)
#loc237 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":135:41)
#loc238 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":135:17)
#loc239 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":135:45)
#loc240 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":136:17)
#loc241 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":139:17)
#loc242 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":136:21)
#loc243 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":136:30)
#loc244 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":137:17)
#loc245 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":138:21)
#loc246 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":138:26)
#loc247 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":140:17)
#loc248 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":143:17)
#loc249 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":140:26)
#loc250 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":140:22)
#loc251 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":140:29)
#loc252 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":140:41)
#loc253 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":140:31)
#loc254 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":141:17)
#loc255 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":142:21)
#loc256 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":142:108)
#loc257 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":142:25)
#loc258 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":142:40)
#loc259 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":142:45)
#loc260 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":142:52)
#loc261 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":142:62)
#loc262 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":142:73)
#loc263 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":142:76)
#loc264 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":142:91)
#loc265 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":142:94)
#loc266 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":142:99)
#loc267 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":142:102)
#loc268 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":142:107)
#loc269 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":140:49)
#loc270 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":140:48)
#loc271 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":144:17)
#loc272 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":147:17)
#loc273 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":144:21)
#loc274 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":145:17)
#loc275 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":146:28)
#loc276 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":146:21)
#loc277 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":154:1)
#loc278 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":195:1)
#loc279 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":156:5)
#loc280 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":156:9)
#loc281 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":158:14)
#loc282 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":158:13)
#loc283 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":158:5)
#loc284 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":159:5)
#loc285 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":168:5)
#loc286 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":159:8)
#loc287 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":160:5)
#loc288 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":163:5)
#loc289 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":165:5)
#loc290 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":162:19)
#loc291 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":162:9)
#loc292 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":167:17)
#loc293 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":167:9)
#loc294 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":169:5)
#loc295 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":194:5)
#loc296 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":169:8)
#loc297 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":170:5)
#loc298 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":171:9)
#loc299 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":193:9)
#loc300 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":172:13)
#loc301 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":172:24)
#loc302 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":173:13)
#loc303 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":173:27)
#loc304 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":174:13)
#loc305 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":174:36)
#loc306 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":175:21)
#loc307 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":175:27)
#loc308 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":175:37)
#loc309 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":175:13)
#loc310 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":175:41)
#loc311 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":176:13)
#loc312 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":179:13)
#loc313 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":176:17)
#loc314 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":176:26)
#loc315 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":177:13)
#loc316 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":178:17)
#loc317 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":178:22)
#loc318 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":182:13)
#loc319 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":188:13)
#loc320 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":182:22)
#loc321 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":182:18)
#loc322 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":182:25)
#loc323 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":182:37)
#loc324 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":182:27)
#loc325 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":183:13)
#loc326 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":184:17)
#loc327 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":187:17)
#loc328 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":184:21)
#loc329 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":184:36)
#loc330 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":184:41)
#loc331 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":184:48)
#loc332 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":184:58)
#loc333 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":184:69)
#loc334 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":184:72)
#loc335 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":184:87)
#loc336 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":184:90)
#loc337 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":184:95)
#loc338 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":185:17)
#loc339 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":186:21)
#loc340 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":186:26)
#loc341 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":182:45)
#loc342 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":182:44)
#loc343 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":189:13)
#loc344 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":192:13)
#loc345 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":189:17)
#loc346 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":190:13)
#loc347 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":191:24)
#loc348 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":191:17)
#loc349 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":198:1)
#loc350 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":234:1)
#loc351 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":200:5)
#loc352 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":200:9)
#loc353 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":202:14)
#loc354 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":202:13)
#loc355 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":202:5)
#loc356 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":203:5)
#loc357 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":207:5)
#loc358 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":203:8)
#loc359 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":204:5)
#loc360 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":206:17)
#loc361 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":206:9)
#loc362 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":208:5)
#loc363 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":233:5)
#loc364 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":208:8)
#loc365 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":209:5)
#loc366 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":210:9)
#loc367 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":232:9)
#loc368 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":211:13)
#loc369 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":211:24)
#loc370 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":212:13)
#loc371 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":212:27)
#loc372 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":213:13)
#loc373 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":213:36)
#loc374 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":214:21)
#loc375 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":214:27)
#loc376 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":214:37)
#loc377 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":214:13)
#loc378 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":214:41)
#loc379 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":215:13)
#loc380 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":218:13)
#loc381 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":215:17)
#loc382 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":215:26)
#loc383 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":216:13)
#loc384 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":217:17)
#loc385 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":217:22)
#loc386 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":221:13)
#loc387 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":227:13)
#loc388 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":221:22)
#loc389 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":221:18)
#loc390 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":221:25)
#loc391 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":221:37)
#loc392 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":221:27)
#loc393 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":222:13)
#loc394 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":223:17)
#loc395 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":226:17)
#loc396 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":223:21)
#loc397 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":223:36)
#loc398 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":223:41)
#loc399 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":223:48)
#loc400 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":223:58)
#loc401 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":223:69)
#loc402 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":223:72)
#loc403 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":223:87)
#loc404 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":223:90)
#loc405 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":223:95)
#loc406 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":224:17)
#loc407 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":225:21)
#loc408 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":225:26)
#loc409 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":221:45)
#loc410 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":221:44)
#loc411 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":228:13)
#loc412 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":231:13)
#loc413 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":228:17)
#loc414 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":229:13)
#loc415 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":230:24)
#loc416 = loc("CWE400_Resource_Exhaustion__rand_fwrite_05.c":230:17)
#loc417 = loc(fused[#loc1, #loc2])
#loc418 = loc(fused[#loc3, #loc4])
#loc419 = loc(fused[#loc6, #loc7])
#loc420 = loc(fused[#loc9, #loc10])
#loc421 = loc(fused[#loc11, #loc12])
#loc422 = loc(fused[#loc14, #loc15])
#loc423 = loc(fused[#loc16, #loc17])
#loc424 = loc(fused[#loc18, #loc19])
#loc425 = loc(fused[#loc22, #loc20])
#loc426 = loc(fused[#loc23, #loc24])
#loc427 = loc(fused[#loc26, #loc24])
#loc428 = loc(fused[#loc28, #loc27])
#loc429 = loc(fused[#loc29, #loc30])
#loc430 = loc(fused[#loc32, #loc30])
#loc431 = loc(fused[#loc33, #loc34])
#loc432 = loc(fused[#loc35, #loc36])
#loc433 = loc(fused[#loc37, #loc38])
#loc434 = loc(fused[#loc39, #loc5])
#loc435 = loc(fused[#loc42, #loc43])
#loc436 = loc(fused[#loc44, #loc45])
#loc437 = loc(fused[#loc46, #loc47])
#loc438 = loc(fused[#loc48, #loc45])
#loc439 = loc(fused[#loc51, #loc52])
#loc440 = loc(fused[#loc54, #loc53])
#loc441 = loc(fused[#loc55, #loc56])
#loc442 = loc(fused[#loc58, #loc52])
#loc443 = loc(fused[#loc59, #loc60])
#loc444 = loc(fused[#loc61, #loc62])
#loc445 = loc(fused[#loc64, #loc65])
#loc446 = loc(fused[#loc66, #loc67])
#loc447 = loc(fused[#loc61, #loc69])
#loc448 = loc(fused[#loc70, #loc60])
#loc449 = loc(fused[#loc74, #loc73])
#loc450 = loc(fused[#loc75, #loc76])
#loc451 = loc(fused[#loc78, #loc76])
#loc452 = loc(fused[#loc81, #loc82])
#loc453 = loc(fused[#loc83, #loc84])
#loc454 = loc(fused[#loc85, #loc86])
#loc455 = loc(fused[#loc87, #loc88])
#loc456 = loc(fused[#loc89, #loc90])
#loc457 = loc(fused[#loc91, #loc92])
#loc458 = loc(fused[#loc93, #loc94])
#loc459 = loc(fused[#loc95, #loc96])
#loc460 = loc(fused[#loc101, #loc102])
#loc463 = loc(fused[#loc112, #loc113])
#loc464 = loc(fused[#loc116, #loc117])
#loc465 = loc(fused[#loc120, #loc119])
#loc466 = loc(fused[#loc121, #loc122])
#loc467 = loc(fused[#loc125, #loc126])
#loc468 = loc(fused[#loc127, #loc128])
#loc469 = loc(fused[#loc131, #loc129])
#loc470 = loc(fused[#loc132, #loc133])
#loc471 = loc(fused[#loc135, #loc133])
#loc472 = loc(fused[#loc137, #loc136])
#loc473 = loc(fused[#loc138, #loc139])
#loc474 = loc(fused[#loc141, #loc142, #loc143, #loc139])
#loc475 = loc(fused[#loc145, #loc146])
#loc476 = loc(fused[#loc147, #loc148])
#loc477 = loc(fused[#loc149, #loc150])
#loc478 = loc(fused[#loc151, #loc124])
#loc479 = loc(fused[#loc152, #loc153])
#loc480 = loc(fused[#loc154, #loc155])
#loc481 = loc(fused[#loc157, #loc158])
#loc482 = loc(fused[#loc159, #loc153])
#loc483 = loc(fused[#loc163, #loc164])
#loc484 = loc(fused[#loc165, #loc166])
#loc485 = loc(fused[#loc167, #loc168])
#loc486 = loc(fused[#loc169, #loc166])
#loc487 = loc(fused[#loc172, #loc173])
#loc488 = loc(fused[#loc175, #loc174])
#loc489 = loc(fused[#loc176, #loc177])
#loc490 = loc(fused[#loc179, #loc173])
#loc491 = loc(fused[#loc180, #loc181])
#loc492 = loc(fused[#loc182, #loc183])
#loc493 = loc(fused[#loc186, #loc187])
#loc494 = loc(fused[#loc188, #loc189])
#loc495 = loc(fused[#loc182, #loc191])
#loc496 = loc(fused[#loc192, #loc181])
#loc497 = loc(fused[#loc195, #loc194])
#loc498 = loc(fused[#loc196, #loc197])
#loc499 = loc(fused[#loc199, #loc197])
#loc500 = loc(fused[#loc202, #loc203])
#loc501 = loc(fused[#loc204, #loc205])
#loc502 = loc(fused[#loc208, #loc206])
#loc503 = loc(fused[#loc209, #loc210])
#loc504 = loc(fused[#loc212, #loc210])
#loc505 = loc(fused[#loc214, #loc213])
#loc506 = loc(fused[#loc215, #loc216])
#loc507 = loc(fused[#loc218, #loc216])
#loc508 = loc(fused[#loc219, #loc220])
#loc509 = loc(fused[#loc221, #loc222])
#loc510 = loc(fused[#loc223, #loc224])
#loc511 = loc(fused[#loc225, #loc226])
#loc512 = loc(fused[#loc227, #loc228])
#loc513 = loc(fused[#loc229, #loc230])
#loc514 = loc(fused[#loc232, #loc233])
#loc515 = loc(fused[#loc234, #loc228])
#loc516 = loc(fused[#loc238, #loc239])
#loc517 = loc(fused[#loc240, #loc241])
#loc518 = loc(fused[#loc242, #loc243])
#loc519 = loc(fused[#loc244, #loc241])
#loc520 = loc(fused[#loc247, #loc248])
#loc521 = loc(fused[#loc250, #loc249])
#loc522 = loc(fused[#loc251, #loc252])
#loc523 = loc(fused[#loc254, #loc248])
#loc524 = loc(fused[#loc255, #loc256])
#loc525 = loc(fused[#loc257, #loc258])
#loc526 = loc(fused[#loc261, #loc262])
#loc527 = loc(fused[#loc263, #loc264])
#loc528 = loc(fused[#loc257, #loc266])
#loc529 = loc(fused[#loc267, #loc256])
#loc530 = loc(fused[#loc270, #loc269])
#loc531 = loc(fused[#loc271, #loc272])
#loc532 = loc(fused[#loc274, #loc272])
#loc533 = loc(fused[#loc277, #loc278])
#loc534 = loc(fused[#loc279, #loc280])
#loc535 = loc(fused[#loc283, #loc281])
#loc536 = loc(fused[#loc284, #loc285])
#loc537 = loc(fused[#loc287, #loc288, #loc289, #loc285])
#loc538 = loc(fused[#loc293, #loc292])
#loc539 = loc(fused[#loc294, #loc295])
#loc540 = loc(fused[#loc297, #loc295])
#loc541 = loc(fused[#loc298, #loc299])
#loc542 = loc(fused[#loc300, #loc301])
#loc543 = loc(fused[#loc302, #loc303])
#loc544 = loc(fused[#loc304, #loc305])
#loc545 = loc(fused[#loc309, #loc310])
#loc546 = loc(fused[#loc311, #loc312])
#loc547 = loc(fused[#loc313, #loc314])
#loc548 = loc(fused[#loc315, #loc312])
#loc549 = loc(fused[#loc318, #loc319])
#loc550 = loc(fused[#loc321, #loc320])
#loc551 = loc(fused[#loc322, #loc323])
#loc552 = loc(fused[#loc325, #loc319])
#loc553 = loc(fused[#loc326, #loc327])
#loc554 = loc(fused[#loc328, #loc329])
#loc555 = loc(fused[#loc332, #loc333])
#loc556 = loc(fused[#loc334, #loc335])
#loc557 = loc(fused[#loc328, #loc337])
#loc558 = loc(fused[#loc338, #loc327])
#loc559 = loc(fused[#loc342, #loc341])
#loc560 = loc(fused[#loc343, #loc344])
#loc561 = loc(fused[#loc346, #loc344])
#loc562 = loc(fused[#loc349, #loc350])
#loc563 = loc(fused[#loc351, #loc352])
#loc564 = loc(fused[#loc355, #loc353])
#loc565 = loc(fused[#loc356, #loc357])
#loc566 = loc(fused[#loc359, #loc357])
#loc567 = loc(fused[#loc361, #loc360])
#loc568 = loc(fused[#loc362, #loc363])
#loc569 = loc(fused[#loc365, #loc363])
#loc570 = loc(fused[#loc366, #loc367])
#loc571 = loc(fused[#loc368, #loc369])
#loc572 = loc(fused[#loc370, #loc371])
#loc573 = loc(fused[#loc372, #loc373])
#loc574 = loc(fused[#loc377, #loc378])
#loc575 = loc(fused[#loc379, #loc380])
#loc576 = loc(fused[#loc381, #loc382])
#loc577 = loc(fused[#loc383, #loc380])
#loc578 = loc(fused[#loc386, #loc387])
#loc579 = loc(fused[#loc389, #loc388])
#loc580 = loc(fused[#loc390, #loc391])
#loc581 = loc(fused[#loc393, #loc387])
#loc582 = loc(fused[#loc394, #loc395])
#loc583 = loc(fused[#loc396, #loc397])
#loc584 = loc(fused[#loc400, #loc401])
#loc585 = loc(fused[#loc402, #loc403])
#loc586 = loc(fused[#loc396, #loc405])
#loc587 = loc(fused[#loc406, #loc395])
#loc588 = loc(fused[#loc410, #loc409])
#loc589 = loc(fused[#loc411, #loc412])
#loc590 = loc(fused[#loc414, #loc412])
