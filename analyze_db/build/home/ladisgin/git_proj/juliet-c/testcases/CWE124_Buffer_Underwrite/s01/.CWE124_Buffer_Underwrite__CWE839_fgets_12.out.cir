!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc138 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":265:10)
#loc139 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":265:14)
#loc140 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":265:20)
#loc141 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":265:32)
#true = #cir.bool<true> : !cir.bool
#loc427 = loc(fused[#loc138, #loc139])
#loc428 = loc(fused[#loc140, #loc141])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_fgets_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc374)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc375)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc376)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc377)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc378)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc11)
  cir.func private @printIntLine(!s32i) loc(#loc379)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc14)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc15)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_fgets_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc381)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc21)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc382)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc384)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc384)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc25)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc25)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc387)
          %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc387)
          cir.store %8, %7 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc387)
          cir.scope {
            %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc36)
            %10 = cir.const #cir.int<3> : !s32i loc(#loc37)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc37)
            %12 = cir.const #cir.int<4> : !u64i loc(#loc37)
            %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc37)
            %14 = cir.const #cir.int<2> : !s32i loc(#loc37)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc37)
            %16 = cir.binop(add, %13, %15) : !u64i loc(#loc37)
            %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc37)
            %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc376)
            %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc38)
            %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc39)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc40)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc40)
            %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc389)
            cir.if %23 {
              %24 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc44)
              %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc45)
              cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc391)
            } else {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc11)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc11)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc48)
            } loc(#loc390)
          } loc(#loc388)
        } loc(#loc386)
      } else {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc49)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc392)
      } loc(#loc385)
    } loc(#loc383)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc394)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc394)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc53)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc53)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc397)
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc398)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc398)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc398)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc66)
            %11 = cir.const #cir.int<10> : !s32i loc(#loc67)
            %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc400)
            cir.if %12 {
              %13 = cir.const #cir.int<1> : !s32i loc(#loc71)
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc72)
              %15 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc73)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc73)
              cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc402)
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc76)
                cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc404)
                cir.for : cond {
                  %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc78)
                  %19 = cir.const #cir.int<10> : !s32i loc(#loc79)
                  %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc405)
                  cir.condition(%20) loc(#loc80)
                } body {
                  cir.scope {
                    %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc82)
                    %19 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc83)
                    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc83)
                    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc83)
                    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc84)
                  } loc(#loc406)
                  cir.yield loc(#loc75)
                } step {
                  %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc85)
                  %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc86)
                  cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc407)
                  cir.yield loc(#loc403)
                } loc(#loc403)
              } loc(#loc403)
            } else {
              %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc14)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc14)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc87)
            } loc(#loc401)
          } loc(#loc399)
        } loc(#loc396)
      } else {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc409)
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc410)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc410)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc410)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc96)
            %11 = cir.const #cir.int<0> : !s32i loc(#loc97)
            %12 = cir.cmp(ge, %10, %11) : !s32i, !cir.bool loc(#loc412)
            %13 = cir.ternary(%12, true {
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc99)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc100)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc413)
              %17 = cir.ternary(%16, true {
                %18 = cir.const #true loc(#loc98)
                cir.yield %18 : !cir.bool loc(#loc98)
              }, false {
                %18 = cir.const #false loc(#loc98)
                cir.yield %18 : !cir.bool loc(#loc98)
              }) : (!cir.bool) -> !cir.bool loc(#loc98)
              cir.yield %17 : !cir.bool loc(#loc98)
            }, false {
              %14 = cir.const #false loc(#loc98)
              cir.yield %14 : !cir.bool loc(#loc98)
            }) : (!cir.bool) -> !cir.bool loc(#loc98)
            cir.if %13 {
              %14 = cir.const #cir.int<1> : !s32i loc(#loc105)
              %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc106)
              %16 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc107)
              %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc107)
              cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc415)
              cir.scope {
                %18 = cir.const #cir.int<0> : !s32i loc(#loc110)
                cir.store %18, %7 : !s32i, !cir.ptr<!s32i> loc(#loc417)
                cir.for : cond {
                  %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc112)
                  %20 = cir.const #cir.int<10> : !s32i loc(#loc113)
                  %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc418)
                  cir.condition(%21) loc(#loc114)
                } body {
                  cir.scope {
                    %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc116)
                    %20 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc117)
                    %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc117)
                    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc117)
                    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc118)
                  } loc(#loc419)
                  cir.yield loc(#loc109)
                } step {
                  %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc119)
                  %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc120)
                  cir.store %20, %7 : !s32i, !cir.ptr<!s32i> loc(#loc420)
                  cir.yield loc(#loc416)
                } loc(#loc416)
              } loc(#loc416)
            } else {
              %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc15)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc15)
              cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc121)
            } loc(#loc414)
          } loc(#loc411)
        } loc(#loc408)
      } loc(#loc395)
    } loc(#loc393)
    cir.return loc(#loc17)
  } loc(#loc380)
  cir.func no_proto @CWE124_Buffer_Underwrite__CWE839_fgets_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc422)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc124)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc423)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc126)
    cir.return loc(#loc123)
  } loc(#loc421)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc424)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc425)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc132)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc133)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc134)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc135)
  cir.func @main(%arg0: !s32i loc(fused[#loc138, #loc139]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc140, #loc141])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc427)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc428)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc137)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc142)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc142)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc143)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc144)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc144)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc145)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc132)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc132)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc146)
    %8 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_fgets_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc429)
    cir.call @CWE124_Buffer_Underwrite__CWE839_fgets_12_good() : () -> () loc(#loc147)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc133)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc133)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc149)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc134)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc134)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc150)
    %13 = cir.get_global @CWE124_Buffer_Underwrite__CWE839_fgets_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc430)
    cir.call @CWE124_Buffer_Underwrite__CWE839_fgets_12_bad() : () -> () loc(#loc151)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc135)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc135)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc153)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc154)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc431)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc431)
    cir.return %17 : !s32i loc(#loc431)
  } loc(#loc426)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc433)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc160)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc161)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc434)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc436)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc436)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc165)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc165)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc439)
          %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc439)
          cir.store %8, %7 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc439)
          cir.scope {
            %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc176)
            %10 = cir.const #cir.int<3> : !s32i loc(#loc177)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc177)
            %12 = cir.const #cir.int<4> : !u64i loc(#loc177)
            %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc177)
            %14 = cir.const #cir.int<2> : !s32i loc(#loc177)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc177)
            %16 = cir.binop(add, %13, %15) : !u64i loc(#loc177)
            %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc177)
            %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc376)
            %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc178)
            %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc179)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc180)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc180)
            %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc441)
            cir.if %23 {
              %24 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc184)
              %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc185)
              cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc443)
            } else {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc188)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc188)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc189)
            } loc(#loc442)
          } loc(#loc440)
        } loc(#loc438)
      } else {
        cir.scope {
          %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc445)
          %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc445)
          cir.store %8, %7 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc445)
          cir.scope {
            %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc196)
            %10 = cir.const #cir.int<3> : !s32i loc(#loc197)
            %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc197)
            %12 = cir.const #cir.int<4> : !u64i loc(#loc197)
            %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc197)
            %14 = cir.const #cir.int<2> : !s32i loc(#loc197)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc197)
            %16 = cir.binop(add, %13, %15) : !u64i loc(#loc197)
            %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc197)
            %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc376)
            %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc198)
            %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc199)
            %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc200)
            %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc200)
            %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!s8i>, !cir.bool loc(#loc447)
            cir.if %23 {
              %24 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc204)
              %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc205)
              cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc449)
            } else {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc208)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc208)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc209)
            } loc(#loc448)
          } loc(#loc446)
        } loc(#loc444)
      } loc(#loc437)
    } loc(#loc435)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc451)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc451)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc212)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc212)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc454)
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc455)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc455)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc455)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc225)
            %11 = cir.const #cir.int<0> : !s32i loc(#loc226)
            %12 = cir.cmp(ge, %10, %11) : !s32i, !cir.bool loc(#loc457)
            %13 = cir.ternary(%12, true {
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc228)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc229)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc458)
              %17 = cir.ternary(%16, true {
                %18 = cir.const #true loc(#loc227)
                cir.yield %18 : !cir.bool loc(#loc227)
              }, false {
                %18 = cir.const #false loc(#loc227)
                cir.yield %18 : !cir.bool loc(#loc227)
              }) : (!cir.bool) -> !cir.bool loc(#loc227)
              cir.yield %17 : !cir.bool loc(#loc227)
            }, false {
              %14 = cir.const #false loc(#loc227)
              cir.yield %14 : !cir.bool loc(#loc227)
            }) : (!cir.bool) -> !cir.bool loc(#loc227)
            cir.if %13 {
              %14 = cir.const #cir.int<1> : !s32i loc(#loc234)
              %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc235)
              %16 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc236)
              %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc236)
              cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc460)
              cir.scope {
                %18 = cir.const #cir.int<0> : !s32i loc(#loc239)
                cir.store %18, %7 : !s32i, !cir.ptr<!s32i> loc(#loc462)
                cir.for : cond {
                  %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc241)
                  %20 = cir.const #cir.int<10> : !s32i loc(#loc242)
                  %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc463)
                  cir.condition(%21) loc(#loc243)
                } body {
                  cir.scope {
                    %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc245)
                    %20 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc246)
                    %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc246)
                    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc246)
                    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc247)
                  } loc(#loc464)
                  cir.yield loc(#loc238)
                } step {
                  %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc248)
                  %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc249)
                  cir.store %20, %7 : !s32i, !cir.ptr<!s32i> loc(#loc465)
                  cir.yield loc(#loc461)
                } loc(#loc461)
              } loc(#loc461)
            } else {
              %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc250)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc250)
              cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc251)
            } loc(#loc459)
          } loc(#loc456)
        } loc(#loc453)
      } else {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc467)
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc468)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc468)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc468)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc260)
            %11 = cir.const #cir.int<0> : !s32i loc(#loc261)
            %12 = cir.cmp(ge, %10, %11) : !s32i, !cir.bool loc(#loc470)
            %13 = cir.ternary(%12, true {
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc263)
              %15 = cir.const #cir.int<10> : !s32i loc(#loc264)
              %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc471)
              %17 = cir.ternary(%16, true {
                %18 = cir.const #true loc(#loc262)
                cir.yield %18 : !cir.bool loc(#loc262)
              }, false {
                %18 = cir.const #false loc(#loc262)
                cir.yield %18 : !cir.bool loc(#loc262)
              }) : (!cir.bool) -> !cir.bool loc(#loc262)
              cir.yield %17 : !cir.bool loc(#loc262)
            }, false {
              %14 = cir.const #false loc(#loc262)
              cir.yield %14 : !cir.bool loc(#loc262)
            }) : (!cir.bool) -> !cir.bool loc(#loc262)
            cir.if %13 {
              %14 = cir.const #cir.int<1> : !s32i loc(#loc269)
              %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc270)
              %16 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc271)
              %17 = cir.ptr_stride(%16 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc271)
              cir.store %14, %17 : !s32i, !cir.ptr<!s32i> loc(#loc473)
              cir.scope {
                %18 = cir.const #cir.int<0> : !s32i loc(#loc274)
                cir.store %18, %7 : !s32i, !cir.ptr<!s32i> loc(#loc475)
                cir.for : cond {
                  %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc276)
                  %20 = cir.const #cir.int<10> : !s32i loc(#loc277)
                  %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc476)
                  cir.condition(%21) loc(#loc278)
                } body {
                  cir.scope {
                    %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc280)
                    %20 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc281)
                    %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc281)
                    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc281)
                    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc282)
                  } loc(#loc477)
                  cir.yield loc(#loc273)
                } step {
                  %19 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc283)
                  %20 = cir.unary(inc, %19) : !s32i, !s32i loc(#loc284)
                  cir.store %20, %7 : !s32i, !cir.ptr<!s32i> loc(#loc478)
                  cir.yield loc(#loc474)
                } loc(#loc474)
              } loc(#loc474)
            } else {
              %14 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc285)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc285)
              cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc286)
            } loc(#loc472)
          } loc(#loc469)
        } loc(#loc466)
      } loc(#loc452)
    } loc(#loc450)
    cir.return loc(#loc157)
  } loc(#loc432)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc480)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc291)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc292)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc481)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc483)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc483)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc296)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc296)
      cir.if %6 {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc301)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc485)
      } else {
        %7 = cir.const #cir.int<7> : !s32i loc(#loc303)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc486)
      } loc(#loc484)
    } loc(#loc482)
    cir.scope {
      %3 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc488)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc488)
      %5 = cir.call %4() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc307)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc307)
      cir.if %6 {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc491)
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc492)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc492)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc492)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc320)
            %11 = cir.const #cir.int<10> : !s32i loc(#loc321)
            %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc494)
            cir.if %12 {
              %13 = cir.const #cir.int<1> : !s32i loc(#loc325)
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc326)
              %15 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc327)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc327)
              cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc496)
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc330)
                cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc498)
                cir.for : cond {
                  %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc332)
                  %19 = cir.const #cir.int<10> : !s32i loc(#loc333)
                  %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc499)
                  cir.condition(%20) loc(#loc334)
                } body {
                  cir.scope {
                    %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc336)
                    %19 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc337)
                    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc337)
                    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc337)
                    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc338)
                  } loc(#loc500)
                  cir.yield loc(#loc329)
                } step {
                  %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc339)
                  %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc340)
                  cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc501)
                  cir.yield loc(#loc497)
                } loc(#loc497)
              } loc(#loc497)
            } else {
              %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc341)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc341)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc342)
            } loc(#loc495)
          } loc(#loc493)
        } loc(#loc490)
      } else {
        cir.scope {
          %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc503)
          %8 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc504)
          %9 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc504)
          cir.store %9, %8 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc504)
          cir.scope {
            %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc351)
            %11 = cir.const #cir.int<10> : !s32i loc(#loc352)
            %12 = cir.cmp(lt, %10, %11) : !s32i, !cir.bool loc(#loc506)
            cir.if %12 {
              %13 = cir.const #cir.int<1> : !s32i loc(#loc356)
              %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc357)
              %15 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc358)
              %16 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc358)
              cir.store %13, %16 : !s32i, !cir.ptr<!s32i> loc(#loc508)
              cir.scope {
                %17 = cir.const #cir.int<0> : !s32i loc(#loc361)
                cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc510)
                cir.for : cond {
                  %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc363)
                  %19 = cir.const #cir.int<10> : !s32i loc(#loc364)
                  %20 = cir.cmp(lt, %18, %19) : !s32i, !cir.bool loc(#loc511)
                  cir.condition(%20) loc(#loc365)
                } body {
                  cir.scope {
                    %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc367)
                    %19 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc368)
                    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc368)
                    %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc368)
                    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc369)
                  } loc(#loc512)
                  cir.yield loc(#loc360)
                } step {
                  %18 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc370)
                  %19 = cir.unary(inc, %18) : !s32i, !s32i loc(#loc371)
                  cir.store %19, %7 : !s32i, !cir.ptr<!s32i> loc(#loc513)
                  cir.yield loc(#loc509)
                } loc(#loc509)
              } loc(#loc509)
            } else {
              %13 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc372)
              %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc372)
              cir.call @printLine(%14) : (!cir.ptr<!s8i>) -> () loc(#loc373)
            } loc(#loc507)
          } loc(#loc505)
        } loc(#loc502)
      } loc(#loc489)
    } loc(#loc487)
    cir.return loc(#loc288)
  } loc(#loc479)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE124_Buffer_Underwrite/s01/CWE124_Buffer_Underwrite__CWE839_fgets_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("/usr/include/stdlib.h":105:1)
#loc8 = loc("/usr/include/stdlib.h":106:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":41:27)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":69:27)
#loc15 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":90:27)
#loc16 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":24:1)
#loc17 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":94:1)
#loc18 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":26:5)
#loc19 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":26:9)
#loc20 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":28:13)
#loc21 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":28:12)
#loc22 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":28:5)
#loc23 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":29:5)
#loc24 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":50:5)
#loc25 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":29:8)
#loc26 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":29:33)
#loc27 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":30:5)
#loc28 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":44:5)
#loc29 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":46:5)
#loc30 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":31:9)
#loc31 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":43:9)
#loc32 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":32:13)
#loc33 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":32:49)
#loc34 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":34:13)
#loc35 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":42:13)
#loc36 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":34:23)
#loc37 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":34:36)
#loc38 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":34:53)
#loc39 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":34:17)
#loc40 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":34:63)
#loc41 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":35:13)
#loc42 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":38:13)
#loc43 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":40:13)
#loc44 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":37:29)
#loc45 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":37:24)
#loc46 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":37:17)
#loc47 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":37:40)
#loc48 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":41:17)
#loc49 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":49:16)
#loc50 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":49:9)
#loc51 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":51:5)
#loc52 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":93:5)
#loc53 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":51:8)
#loc54 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":51:33)
#loc55 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":52:5)
#loc56 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":72:5)
#loc57 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":74:5)
#loc58 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":53:9)
#loc59 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":71:9)
#loc60 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":54:13)
#loc61 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":54:17)
#loc62 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":55:13)
#loc63 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":55:34)
#loc64 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":58:13)
#loc65 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":70:13)
#loc66 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":58:17)
#loc67 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":58:24)
#loc68 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":59:13)
#loc69 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":66:13)
#loc70 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":68:13)
#loc71 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":60:32)
#loc72 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":60:24)
#loc73 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":60:17)
#loc74 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":62:17)
#loc75 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":65:17)
#loc76 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":62:25)
#loc77 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":62:21)
#loc78 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":62:28)
#loc79 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":62:32)
#loc80 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":62:30)
#loc81 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":63:17)
#loc82 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":64:41)
#loc83 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":64:34)
#loc84 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":64:21)
#loc85 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":62:37)
#loc86 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":62:36)
#loc87 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":69:17)
#loc88 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":75:9)
#loc89 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":92:9)
#loc90 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":76:13)
#loc91 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":76:17)
#loc92 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":77:13)
#loc93 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":77:34)
#loc94 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":79:13)
#loc95 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":91:13)
#loc96 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":79:17)
#loc97 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":79:25)
#loc98 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":79:27)
#loc99 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":79:30)
#loc100 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":79:38)
#loc101 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":79:40)
#loc102 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":80:13)
#loc103 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":87:13)
#loc104 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":89:13)
#loc105 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":81:32)
#loc106 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":81:24)
#loc107 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":81:17)
#loc108 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":83:17)
#loc109 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":86:17)
#loc110 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":83:25)
#loc111 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":83:21)
#loc112 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":83:28)
#loc113 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":83:32)
#loc114 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":83:30)
#loc115 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":84:17)
#loc116 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":85:41)
#loc117 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":85:34)
#loc118 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":85:21)
#loc119 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":83:37)
#loc120 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":83:36)
#loc121 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":90:17)
#loc122 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":250:1)
#loc123 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":254:1)
#loc124 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":252:5)
#loc125 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":252:13)
#loc126 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":253:5)
#loc127 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":253:13)
#loc128 = loc("/usr/include/stdlib.h":575:1)
#loc129 = loc("/usr/include/stdlib.h":575:41)
#loc130 = loc("/usr/include/time.h":76:1)
#loc131 = loc("/usr/include/time.h":76:38)
#loc132 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":270:15)
#loc133 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":272:15)
#loc134 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":275:15)
#loc135 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":277:15)
#loc136 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":265:1)
#loc137 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":280:1)
#loc142 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":266:1)
#loc143 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":268:27)
#loc144 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":268:22)
#loc145 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":268:5)
#loc146 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":270:5)
#loc147 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":271:5)
#loc148 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":271:52)
#loc149 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":272:5)
#loc150 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":275:5)
#loc151 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":276:5)
#loc152 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":276:51)
#loc153 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":277:5)
#loc154 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":279:12)
#loc155 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":279:5)
#loc156 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":103:1)
#loc157 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":182:1)
#loc158 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":105:5)
#loc159 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":105:9)
#loc160 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":107:13)
#loc161 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":107:12)
#loc162 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":107:5)
#loc163 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":108:5)
#loc164 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":139:5)
#loc165 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":108:8)
#loc166 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":108:33)
#loc167 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":109:5)
#loc168 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":123:5)
#loc169 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":125:5)
#loc170 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":110:9)
#loc171 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":122:9)
#loc172 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":111:13)
#loc173 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":111:49)
#loc174 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":113:13)
#loc175 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":121:13)
#loc176 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":113:23)
#loc177 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":113:36)
#loc178 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":113:53)
#loc179 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":113:17)
#loc180 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":113:63)
#loc181 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":114:13)
#loc182 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":117:13)
#loc183 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":119:13)
#loc184 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":116:29)
#loc185 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":116:24)
#loc186 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":116:17)
#loc187 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":116:40)
#loc188 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":120:27)
#loc189 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":120:17)
#loc190 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":126:9)
#loc191 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":138:9)
#loc192 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":127:13)
#loc193 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":127:49)
#loc194 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":129:13)
#loc195 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":137:13)
#loc196 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":129:23)
#loc197 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":129:36)
#loc198 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":129:53)
#loc199 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":129:17)
#loc200 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":129:63)
#loc201 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":130:13)
#loc202 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":133:13)
#loc203 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":135:13)
#loc204 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":132:29)
#loc205 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":132:24)
#loc206 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":132:17)
#loc207 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":132:40)
#loc208 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":136:27)
#loc209 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":136:17)
#loc210 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":140:5)
#loc211 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":181:5)
#loc212 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":140:8)
#loc213 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":140:33)
#loc214 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":141:5)
#loc215 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":160:5)
#loc216 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":162:5)
#loc217 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":142:9)
#loc218 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":159:9)
#loc219 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":143:13)
#loc220 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":143:17)
#loc221 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":144:13)
#loc222 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":144:34)
#loc223 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":146:13)
#loc224 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":158:13)
#loc225 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":146:17)
#loc226 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":146:25)
#loc227 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":146:27)
#loc228 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":146:30)
#loc229 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":146:38)
#loc230 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":146:40)
#loc231 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":147:13)
#loc232 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":154:13)
#loc233 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":156:13)
#loc234 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":148:32)
#loc235 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":148:24)
#loc236 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":148:17)
#loc237 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":150:17)
#loc238 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":153:17)
#loc239 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":150:25)
#loc240 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":150:21)
#loc241 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":150:28)
#loc242 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":150:32)
#loc243 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":150:30)
#loc244 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":151:17)
#loc245 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":152:41)
#loc246 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":152:34)
#loc247 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":152:21)
#loc248 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":150:37)
#loc249 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":150:36)
#loc250 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":157:27)
#loc251 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":157:17)
#loc252 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":163:9)
#loc253 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":180:9)
#loc254 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":164:13)
#loc255 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":164:17)
#loc256 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":165:13)
#loc257 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":165:34)
#loc258 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":167:13)
#loc259 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":179:13)
#loc260 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":167:17)
#loc261 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":167:25)
#loc262 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":167:27)
#loc263 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":167:30)
#loc264 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":167:38)
#loc265 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":167:40)
#loc266 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":168:13)
#loc267 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":175:13)
#loc268 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":177:13)
#loc269 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":169:32)
#loc270 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":169:24)
#loc271 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":169:17)
#loc272 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":171:17)
#loc273 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":174:17)
#loc274 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":171:25)
#loc275 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":171:21)
#loc276 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":171:28)
#loc277 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":171:32)
#loc278 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":171:30)
#loc279 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":172:17)
#loc280 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":173:41)
#loc281 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":173:34)
#loc282 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":173:21)
#loc283 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":171:37)
#loc284 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":171:36)
#loc285 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":178:27)
#loc286 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":178:17)
#loc287 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":187:1)
#loc288 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":248:1)
#loc289 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":189:5)
#loc290 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":189:9)
#loc291 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":191:13)
#loc292 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":191:12)
#loc293 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":191:5)
#loc294 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":192:5)
#loc295 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":203:5)
#loc296 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":192:8)
#loc297 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":192:33)
#loc298 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":193:5)
#loc299 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":197:5)
#loc300 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":199:5)
#loc301 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":196:16)
#loc302 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":196:9)
#loc303 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":202:16)
#loc304 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":202:9)
#loc305 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":204:5)
#loc306 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":247:5)
#loc307 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":204:8)
#loc308 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":204:33)
#loc309 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":205:5)
#loc310 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":225:5)
#loc311 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":227:5)
#loc312 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":206:9)
#loc313 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":224:9)
#loc314 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":207:13)
#loc315 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":207:17)
#loc316 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":208:13)
#loc317 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":208:34)
#loc318 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":211:13)
#loc319 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":223:13)
#loc320 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":211:17)
#loc321 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":211:24)
#loc322 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":212:13)
#loc323 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":219:13)
#loc324 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":221:13)
#loc325 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":213:32)
#loc326 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":213:24)
#loc327 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":213:17)
#loc328 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":215:17)
#loc329 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":218:17)
#loc330 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":215:25)
#loc331 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":215:21)
#loc332 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":215:28)
#loc333 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":215:32)
#loc334 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":215:30)
#loc335 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":216:17)
#loc336 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":217:41)
#loc337 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":217:34)
#loc338 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":217:21)
#loc339 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":215:37)
#loc340 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":215:36)
#loc341 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":222:27)
#loc342 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":222:17)
#loc343 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":228:9)
#loc344 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":246:9)
#loc345 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":229:13)
#loc346 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":229:17)
#loc347 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":230:13)
#loc348 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":230:34)
#loc349 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":233:13)
#loc350 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":245:13)
#loc351 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":233:17)
#loc352 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":233:24)
#loc353 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":234:13)
#loc354 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":241:13)
#loc355 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":243:13)
#loc356 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":235:32)
#loc357 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":235:24)
#loc358 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":235:17)
#loc359 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":237:17)
#loc360 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":240:17)
#loc361 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":237:25)
#loc362 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":237:21)
#loc363 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":237:28)
#loc364 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":237:32)
#loc365 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":237:30)
#loc366 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":238:17)
#loc367 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":239:41)
#loc368 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":239:34)
#loc369 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":239:21)
#loc370 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":237:37)
#loc371 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":237:36)
#loc372 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":244:27)
#loc373 = loc("CWE124_Buffer_Underwrite__CWE839_fgets_12.c":244:17)
#loc374 = loc(fused[#loc1, #loc2])
#loc375 = loc(fused[#loc3, #loc4])
#loc376 = loc(fused[#loc5, #loc6])
#loc377 = loc(fused[#loc7, #loc8])
#loc378 = loc(fused[#loc9, #loc10])
#loc379 = loc(fused[#loc12, #loc13])
#loc380 = loc(fused[#loc16, #loc17])
#loc381 = loc(fused[#loc18, #loc19])
#loc382 = loc(fused[#loc22, #loc20])
#loc383 = loc(fused[#loc23, #loc24])
#loc384 = loc(fused[#loc25, #loc26])
#loc385 = loc(fused[#loc27, #loc28, #loc29, #loc24])
#loc386 = loc(fused[#loc30, #loc31])
#loc387 = loc(fused[#loc32, #loc33])
#loc388 = loc(fused[#loc34, #loc35])
#loc389 = loc(fused[#loc39, #loc40])
#loc390 = loc(fused[#loc41, #loc42, #loc43, #loc35])
#loc391 = loc(fused[#loc46, #loc47])
#loc392 = loc(fused[#loc50, #loc49])
#loc393 = loc(fused[#loc51, #loc52])
#loc394 = loc(fused[#loc53, #loc54])
#loc395 = loc(fused[#loc55, #loc56, #loc57, #loc52])
#loc396 = loc(fused[#loc58, #loc59])
#loc397 = loc(fused[#loc60, #loc61])
#loc398 = loc(fused[#loc62, #loc63])
#loc399 = loc(fused[#loc64, #loc65])
#loc400 = loc(fused[#loc66, #loc67])
#loc401 = loc(fused[#loc68, #loc69, #loc70, #loc65])
#loc402 = loc(fused[#loc73, #loc71])
#loc403 = loc(fused[#loc74, #loc75])
#loc404 = loc(fused[#loc77, #loc76])
#loc405 = loc(fused[#loc78, #loc79])
#loc406 = loc(fused[#loc81, #loc75])
#loc407 = loc(fused[#loc86, #loc85])
#loc408 = loc(fused[#loc88, #loc89])
#loc409 = loc(fused[#loc90, #loc91])
#loc410 = loc(fused[#loc92, #loc93])
#loc411 = loc(fused[#loc94, #loc95])
#loc412 = loc(fused[#loc96, #loc97])
#loc413 = loc(fused[#loc99, #loc101])
#loc414 = loc(fused[#loc102, #loc103, #loc104, #loc95])
#loc415 = loc(fused[#loc107, #loc105])
#loc416 = loc(fused[#loc108, #loc109])
#loc417 = loc(fused[#loc111, #loc110])
#loc418 = loc(fused[#loc112, #loc113])
#loc419 = loc(fused[#loc115, #loc109])
#loc420 = loc(fused[#loc120, #loc119])
#loc421 = loc(fused[#loc122, #loc123])
#loc422 = loc(fused[#loc124, #loc125])
#loc423 = loc(fused[#loc126, #loc127])
#loc424 = loc(fused[#loc128, #loc129])
#loc425 = loc(fused[#loc130, #loc131])
#loc426 = loc(fused[#loc136, #loc137])
#loc429 = loc(fused[#loc147, #loc148])
#loc430 = loc(fused[#loc151, #loc152])
#loc431 = loc(fused[#loc155, #loc154])
#loc432 = loc(fused[#loc156, #loc157])
#loc433 = loc(fused[#loc158, #loc159])
#loc434 = loc(fused[#loc162, #loc160])
#loc435 = loc(fused[#loc163, #loc164])
#loc436 = loc(fused[#loc165, #loc166])
#loc437 = loc(fused[#loc167, #loc168, #loc169, #loc164])
#loc438 = loc(fused[#loc170, #loc171])
#loc439 = loc(fused[#loc172, #loc173])
#loc440 = loc(fused[#loc174, #loc175])
#loc441 = loc(fused[#loc179, #loc180])
#loc442 = loc(fused[#loc181, #loc182, #loc183, #loc175])
#loc443 = loc(fused[#loc186, #loc187])
#loc444 = loc(fused[#loc190, #loc191])
#loc445 = loc(fused[#loc192, #loc193])
#loc446 = loc(fused[#loc194, #loc195])
#loc447 = loc(fused[#loc199, #loc200])
#loc448 = loc(fused[#loc201, #loc202, #loc203, #loc195])
#loc449 = loc(fused[#loc206, #loc207])
#loc450 = loc(fused[#loc210, #loc211])
#loc451 = loc(fused[#loc212, #loc213])
#loc452 = loc(fused[#loc214, #loc215, #loc216, #loc211])
#loc453 = loc(fused[#loc217, #loc218])
#loc454 = loc(fused[#loc219, #loc220])
#loc455 = loc(fused[#loc221, #loc222])
#loc456 = loc(fused[#loc223, #loc224])
#loc457 = loc(fused[#loc225, #loc226])
#loc458 = loc(fused[#loc228, #loc230])
#loc459 = loc(fused[#loc231, #loc232, #loc233, #loc224])
#loc460 = loc(fused[#loc236, #loc234])
#loc461 = loc(fused[#loc237, #loc238])
#loc462 = loc(fused[#loc240, #loc239])
#loc463 = loc(fused[#loc241, #loc242])
#loc464 = loc(fused[#loc244, #loc238])
#loc465 = loc(fused[#loc249, #loc248])
#loc466 = loc(fused[#loc252, #loc253])
#loc467 = loc(fused[#loc254, #loc255])
#loc468 = loc(fused[#loc256, #loc257])
#loc469 = loc(fused[#loc258, #loc259])
#loc470 = loc(fused[#loc260, #loc261])
#loc471 = loc(fused[#loc263, #loc265])
#loc472 = loc(fused[#loc266, #loc267, #loc268, #loc259])
#loc473 = loc(fused[#loc271, #loc269])
#loc474 = loc(fused[#loc272, #loc273])
#loc475 = loc(fused[#loc275, #loc274])
#loc476 = loc(fused[#loc276, #loc277])
#loc477 = loc(fused[#loc279, #loc273])
#loc478 = loc(fused[#loc284, #loc283])
#loc479 = loc(fused[#loc287, #loc288])
#loc480 = loc(fused[#loc289, #loc290])
#loc481 = loc(fused[#loc293, #loc291])
#loc482 = loc(fused[#loc294, #loc295])
#loc483 = loc(fused[#loc296, #loc297])
#loc484 = loc(fused[#loc298, #loc299, #loc300, #loc295])
#loc485 = loc(fused[#loc302, #loc301])
#loc486 = loc(fused[#loc304, #loc303])
#loc487 = loc(fused[#loc305, #loc306])
#loc488 = loc(fused[#loc307, #loc308])
#loc489 = loc(fused[#loc309, #loc310, #loc311, #loc306])
#loc490 = loc(fused[#loc312, #loc313])
#loc491 = loc(fused[#loc314, #loc315])
#loc492 = loc(fused[#loc316, #loc317])
#loc493 = loc(fused[#loc318, #loc319])
#loc494 = loc(fused[#loc320, #loc321])
#loc495 = loc(fused[#loc322, #loc323, #loc324, #loc319])
#loc496 = loc(fused[#loc327, #loc325])
#loc497 = loc(fused[#loc328, #loc329])
#loc498 = loc(fused[#loc331, #loc330])
#loc499 = loc(fused[#loc332, #loc333])
#loc500 = loc(fused[#loc335, #loc329])
#loc501 = loc(fused[#loc340, #loc339])
#loc502 = loc(fused[#loc343, #loc344])
#loc503 = loc(fused[#loc345, #loc346])
#loc504 = loc(fused[#loc347, #loc348])
#loc505 = loc(fused[#loc349, #loc350])
#loc506 = loc(fused[#loc351, #loc352])
#loc507 = loc(fused[#loc353, #loc354, #loc355, #loc350])
#loc508 = loc(fused[#loc358, #loc356])
#loc509 = loc(fused[#loc359, #loc360])
#loc510 = loc(fused[#loc362, #loc361])
#loc511 = loc(fused[#loc363, #loc364])
#loc512 = loc(fused[#loc366, #loc360])
#loc513 = loc(fused[#loc371, #loc370])
