!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc103 = loc("../../testcasesupport/std_testcase.h":61:7)
!ty_TwoIntsClass = !cir.record<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__class_08.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func internal private @_ZL17staticReturnsTruev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc2)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc3)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc176)
    cir.return %2 : !s32i loc(#loc176)
  } loc(#loc175)
  cir.func private @printIntLine(!s32i) loc(#loc177)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc178)
  cir.func @_ZN41CWE476_NULL_Pointer_Dereference__class_083badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc180)
    cir.scope {
      %1 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc15)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc182)
      cir.if %2 {
        %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc18)
        cir.store %3, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc184)
      } loc(#loc183)
    } loc(#loc181)
    cir.scope {
      %1 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc22)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc186)
      cir.if %2 {
        %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc25)
        %4 = cir.get_member %3[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc26)
        %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc27)
        cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc28)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc29)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc29)
        cir.call @_ZdlPv(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc30)
      } loc(#loc187)
    } loc(#loc185)
    cir.return loc(#loc10)
  } loc(#loc179)
  cir.func internal private @_ZL18staticReturnsFalsev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc32)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc33)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc189)
    cir.return %2 : !s32i loc(#loc189)
  } loc(#loc188)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc190)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc37)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data is NULL\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc38)
  cir.func internal private @_ZN41CWE476_NULL_Pointer_Dereference__class_08L8goodB2G1Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc192)
    cir.scope {
      %1 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc45)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc194)
      cir.if %2 {
        %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc48)
        cir.store %3, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc196)
      } loc(#loc195)
    } loc(#loc193)
    cir.scope {
      %1 = cir.call @_ZL18staticReturnsFalsev() : () -> !s32i loc(#loc52)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc198)
      cir.if %2 {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc37)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc37)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc57)
      } else {
        cir.scope {
          %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc60)
          %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc61)
          %5 = cir.cmp(ne, %3, %4) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc201)
          cir.if %5 {
            %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc65)
            %7 = cir.get_member %6[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc26)
            %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc66)
            cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc67)
            %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc68)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc68)
            cir.call @_ZdlPv(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc69)
          } else {
            %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc38)
            %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc38)
            cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc70)
          } loc(#loc202)
        } loc(#loc200)
      } loc(#loc199)
    } loc(#loc197)
    cir.return loc(#loc40)
  } loc(#loc191)
  cir.func internal private @_ZN41CWE476_NULL_Pointer_Dereference__class_08L8goodB2G2Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc204)
    cir.scope {
      %1 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc77)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc206)
      cir.if %2 {
        %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc80)
        cir.store %3, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc208)
      } loc(#loc207)
    } loc(#loc205)
    cir.scope {
      %1 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc84)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc210)
      cir.if %2 {
        cir.scope {
          %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc89)
          %4 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc90)
          %5 = cir.cmp(ne, %3, %4) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc213)
          cir.if %5 {
            %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc94)
            %7 = cir.get_member %6[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc26)
            %8 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc95)
            cir.call @printIntLine(%8) : (!s32i) -> () loc(#loc96)
            %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc97)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc97)
            cir.call @_ZdlPv(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc98)
          } else {
            %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc99)
            %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc99)
            cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc100)
          } loc(#loc214)
        } loc(#loc212)
      } loc(#loc211)
    } loc(#loc209)
    cir.return loc(#loc72)
  } loc(#loc203)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc215)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc103)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc103)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc103)
    cir.return loc(#loc103)
  } loc(#loc103)
  cir.func internal private @_ZN41CWE476_NULL_Pointer_Dereference__class_08L8goodG2B1Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc217)
    cir.scope {
      %1 = cir.call @_ZL18staticReturnsFalsev() : () -> !s32i loc(#loc110)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc219)
      cir.if %2 {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc115)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc115)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc116)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["tmpData", init] {alignment = 8 : i64} loc(#loc222)
          %4 = cir.const #cir.int<8> : !u64i loc(#loc223)
          %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc222)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc223)
          cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc120)
          cir.store %6, %3 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc222)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc122)
          %8 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc123)
          %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc26)
          cir.store %7, %9 : !s32i, !cir.ptr<!s32i> loc(#loc224)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc124)
          %11 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc125)
          %12 = cir.get_member %11[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc126)
          cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc225)
          %13 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc127)
          cir.store %13, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc226)
        } loc(#loc221)
      } loc(#loc220)
    } loc(#loc218)
    cir.scope {
      %1 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc131)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc228)
      cir.if %2 {
        %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc134)
        %4 = cir.get_member %3[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc26)
        %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc135)
        cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc136)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc137)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc137)
        cir.call @_ZdlPv(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc138)
      } loc(#loc229)
    } loc(#loc227)
    cir.return loc(#loc105)
  } loc(#loc216)
  cir.func internal private @_ZN41CWE476_NULL_Pointer_Dereference__class_08L8goodG2B2Ev() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc231)
    cir.scope {
      %1 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc145)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc233)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["tmpData", init] {alignment = 8 : i64} loc(#loc236)
          %4 = cir.const #cir.int<8> : !u64i loc(#loc237)
          %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc236)
          %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc237)
          cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr1) loc(#loc151)
          cir.store %6, %3 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc236)
          %7 = cir.const #cir.int<0> : !s32i loc(#loc153)
          %8 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc154)
          %9 = cir.get_member %8[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc26)
          cir.store %7, %9 : !s32i, !cir.ptr<!s32i> loc(#loc238)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc155)
          %11 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc156)
          %12 = cir.get_member %11[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc126)
          cir.store %10, %12 : !s32i, !cir.ptr<!s32i> loc(#loc239)
          %13 = cir.load %3 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc157)
          cir.store %13, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc240)
        } loc(#loc235)
      } loc(#loc234)
    } loc(#loc232)
    cir.scope {
      %1 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc161)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc242)
      cir.if %2 {
        %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc164)
        %4 = cir.get_member %3[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc26)
        %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc165)
        cir.call @printIntLine(%5) : (!s32i) -> () loc(#loc166)
        %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc167)
        %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc167)
        cir.call @_ZdlPv(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc168)
      } loc(#loc243)
    } loc(#loc241)
    cir.return loc(#loc140)
  } loc(#loc230)
  cir.func @_ZN41CWE476_NULL_Pointer_Dereference__class_084goodEv() extra(#fn_attr) {
    cir.call @_ZN41CWE476_NULL_Pointer_Dereference__class_08L8goodB2G1Ev() : () -> () loc(#loc171)
    cir.call @_ZN41CWE476_NULL_Pointer_Dereference__class_08L8goodB2G2Ev() : () -> () loc(#loc172)
    cir.call @_ZN41CWE476_NULL_Pointer_Dereference__class_08L8goodG2B1Ev() : () -> () loc(#loc173)
    cir.call @_ZN41CWE476_NULL_Pointer_Dereference__class_08L8goodG2B2Ev() : () -> () loc(#loc174)
    cir.return loc(#loc170)
  } loc(#loc244)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__class_08.cpp":0:0)
#loc1 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":23:1)
#loc2 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":26:1)
#loc3 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":25:12)
#loc4 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":25:5)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc8 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc9 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":38:1)
#loc10 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":53:1)
#loc11 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":40:5)
#loc12 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":40:20)
#loc13 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":41:5)
#loc14 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":45:5)
#loc15 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":41:8)
#loc16 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":41:26)
#loc17 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":42:5)
#loc18 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":44:16)
#loc19 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":44:9)
#loc20 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":46:5)
#loc21 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":52:5)
#loc22 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":46:8)
#loc23 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":46:26)
#loc24 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":47:5)
#loc25 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":49:22)
#loc26 = loc("../../testcasesupport/std_testcase.h":64:13)
#loc27 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":49:28)
#loc28 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":49:9)
#loc29 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":51:16)
#loc30 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":38:6)
#loc31 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":28:1)
#loc32 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":31:1)
#loc33 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":30:12)
#loc34 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":30:5)
#loc35 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc36 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc37 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":71:19)
#loc38 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":83:23)
#loc39 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":60:1)
#loc40 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":86:1)
#loc41 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":62:5)
#loc42 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":62:20)
#loc43 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":63:5)
#loc44 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":67:5)
#loc45 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":63:8)
#loc46 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":63:26)
#loc47 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":64:5)
#loc48 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":66:16)
#loc49 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":66:9)
#loc50 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":68:5)
#loc51 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":85:5)
#loc52 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":68:8)
#loc53 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":68:27)
#loc54 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":69:5)
#loc55 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":72:5)
#loc56 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":74:5)
#loc57 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":71:9)
#loc58 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":76:9)
#loc59 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":84:9)
#loc60 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":76:13)
#loc61 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":76:21)
#loc62 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":77:9)
#loc63 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":80:9)
#loc64 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":82:9)
#loc65 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":78:26)
#loc66 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":78:32)
#loc67 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":78:13)
#loc68 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":79:20)
#loc69 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":60:13)
#loc70 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":83:13)
#loc71 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":89:1)
#loc72 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":110:1)
#loc73 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":91:5)
#loc74 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":91:20)
#loc75 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":92:5)
#loc76 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":96:5)
#loc77 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":92:8)
#loc78 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":92:26)
#loc79 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":93:5)
#loc80 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":95:16)
#loc81 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":95:9)
#loc82 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":97:5)
#loc83 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":109:5)
#loc84 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":97:8)
#loc85 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":97:26)
#loc86 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":98:5)
#loc87 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":100:9)
#loc88 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":108:9)
#loc89 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":100:13)
#loc90 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":100:21)
#loc91 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":101:9)
#loc92 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":104:9)
#loc93 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":106:9)
#loc94 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":102:26)
#loc95 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":102:32)
#loc96 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":102:13)
#loc97 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":103:20)
#loc98 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":89:13)
#loc99 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":107:23)
#loc100 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":107:13)
#loc101 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc102 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc104 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":113:1)
#loc105 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":138:1)
#loc106 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":115:5)
#loc107 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":115:20)
#loc108 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":116:5)
#loc109 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":130:5)
#loc110 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":116:8)
#loc111 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":116:27)
#loc112 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":117:5)
#loc113 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":120:5)
#loc114 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":122:5)
#loc115 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":119:19)
#loc116 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":119:9)
#loc117 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":123:9)
#loc118 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":129:9)
#loc119 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":124:13)
#loc120 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":124:42)
#loc121 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":124:38)
#loc122 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":125:31)
#loc123 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":125:13)
#loc124 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":126:31)
#loc125 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":126:13)
#loc126 = loc("../../testcasesupport/std_testcase.h":65:13)
#loc127 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":128:20)
#loc128 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":128:13)
#loc129 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":131:5)
#loc130 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":137:5)
#loc131 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":131:8)
#loc132 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":131:26)
#loc133 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":132:5)
#loc134 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":134:22)
#loc135 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":134:28)
#loc136 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":134:9)
#loc137 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":136:16)
#loc138 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":113:13)
#loc139 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":141:1)
#loc140 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":161:1)
#loc141 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":143:5)
#loc142 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":143:20)
#loc143 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":144:5)
#loc144 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":153:5)
#loc145 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":144:8)
#loc146 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":144:26)
#loc147 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":145:5)
#loc148 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":146:9)
#loc149 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":152:9)
#loc150 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":147:13)
#loc151 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":147:42)
#loc152 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":147:38)
#loc153 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":148:31)
#loc154 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":148:13)
#loc155 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":149:31)
#loc156 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":149:13)
#loc157 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":151:20)
#loc158 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":151:13)
#loc159 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":154:5)
#loc160 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":160:5)
#loc161 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":154:8)
#loc162 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":154:26)
#loc163 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":155:5)
#loc164 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":157:22)
#loc165 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":157:28)
#loc166 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":157:9)
#loc167 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":159:16)
#loc168 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":141:13)
#loc169 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":163:1)
#loc170 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":169:1)
#loc171 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":165:5)
#loc172 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":166:5)
#loc173 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":167:5)
#loc174 = loc("CWE476_NULL_Pointer_Dereference__class_08.cpp":168:5)
#loc175 = loc(fused[#loc1, #loc2])
#loc176 = loc(fused[#loc4, #loc3])
#loc177 = loc(fused[#loc5, #loc6])
#loc178 = loc(fused[#loc7, #loc8])
#loc179 = loc(fused[#loc9, #loc10])
#loc180 = loc(fused[#loc11, #loc12])
#loc181 = loc(fused[#loc13, #loc14])
#loc182 = loc(fused[#loc15, #loc16])
#loc183 = loc(fused[#loc17, #loc14])
#loc184 = loc(fused[#loc19, #loc18])
#loc185 = loc(fused[#loc20, #loc21])
#loc186 = loc(fused[#loc22, #loc23])
#loc187 = loc(fused[#loc24, #loc21])
#loc188 = loc(fused[#loc31, #loc32])
#loc189 = loc(fused[#loc34, #loc33])
#loc190 = loc(fused[#loc35, #loc36])
#loc191 = loc(fused[#loc39, #loc40])
#loc192 = loc(fused[#loc41, #loc42])
#loc193 = loc(fused[#loc43, #loc44])
#loc194 = loc(fused[#loc45, #loc46])
#loc195 = loc(fused[#loc47, #loc44])
#loc196 = loc(fused[#loc49, #loc48])
#loc197 = loc(fused[#loc50, #loc51])
#loc198 = loc(fused[#loc52, #loc53])
#loc199 = loc(fused[#loc54, #loc55, #loc56, #loc51])
#loc200 = loc(fused[#loc58, #loc59])
#loc201 = loc(fused[#loc60, #loc61])
#loc202 = loc(fused[#loc62, #loc63, #loc64, #loc59])
#loc203 = loc(fused[#loc71, #loc72])
#loc204 = loc(fused[#loc73, #loc74])
#loc205 = loc(fused[#loc75, #loc76])
#loc206 = loc(fused[#loc77, #loc78])
#loc207 = loc(fused[#loc79, #loc76])
#loc208 = loc(fused[#loc81, #loc80])
#loc209 = loc(fused[#loc82, #loc83])
#loc210 = loc(fused[#loc84, #loc85])
#loc211 = loc(fused[#loc86, #loc83])
#loc212 = loc(fused[#loc87, #loc88])
#loc213 = loc(fused[#loc89, #loc90])
#loc214 = loc(fused[#loc91, #loc92, #loc93, #loc88])
#loc215 = loc(fused[#loc101, #loc102])
#loc216 = loc(fused[#loc104, #loc105])
#loc217 = loc(fused[#loc106, #loc107])
#loc218 = loc(fused[#loc108, #loc109])
#loc219 = loc(fused[#loc110, #loc111])
#loc220 = loc(fused[#loc112, #loc113, #loc114, #loc109])
#loc221 = loc(fused[#loc117, #loc118])
#loc222 = loc(fused[#loc119, #loc120])
#loc223 = loc(fused[#loc121, #loc120])
#loc224 = loc(fused[#loc123, #loc122])
#loc225 = loc(fused[#loc125, #loc124])
#loc226 = loc(fused[#loc128, #loc127])
#loc227 = loc(fused[#loc129, #loc130])
#loc228 = loc(fused[#loc131, #loc132])
#loc229 = loc(fused[#loc133, #loc130])
#loc230 = loc(fused[#loc139, #loc140])
#loc231 = loc(fused[#loc141, #loc142])
#loc232 = loc(fused[#loc143, #loc144])
#loc233 = loc(fused[#loc145, #loc146])
#loc234 = loc(fused[#loc147, #loc144])
#loc235 = loc(fused[#loc148, #loc149])
#loc236 = loc(fused[#loc150, #loc151])
#loc237 = loc(fused[#loc152, #loc151])
#loc238 = loc(fused[#loc154, #loc153])
#loc239 = loc(fused[#loc156, #loc155])
#loc240 = loc(fused[#loc158, #loc157])
#loc241 = loc(fused[#loc159, #loc160])
#loc242 = loc(fused[#loc161, #loc162])
#loc243 = loc(fused[#loc163, #loc160])
#loc244 = loc(fused[#loc169, #loc170])
