!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":126:10)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":126:14)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":126:20)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":126:32)
#loc234 = loc(fused[#loc79, #loc80])
#loc235 = loc(fused[#loc81, #loc82])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc205)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc206)
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc207)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc7)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc208)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc209)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc211)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc16)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc212)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc20)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc21)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc214)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc23)
        %6 = cir.const #cir.int<50> : !s32i loc(#loc24)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc24)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc216)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc217)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc23)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc218)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc219)
        cir.scope {
          %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
          %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc32)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc32)
          %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc221)
          cir.if %20 {
            %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc34)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc35)
            %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc36)
            cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc34)
          } loc(#loc222)
        } loc(#loc220)
        %12 = cir.const #cir.int<0> : !s32i loc(#loc37)
        %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc37)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
        %15 = cir.const #cir.int<0> : !s32i loc(#loc39)
        %16 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc40)
        cir.store %13, %16 : !s8i, !cir.ptr<!s8i> loc(#loc223)
      } loc(#loc215)
    } loc(#loc213)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc225)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc45)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc45)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc46)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc47)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc48)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc47)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc47)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc226)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc51)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc51)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc52)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc53)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc52)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc54)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc227)
      %17 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc55)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
      %19 = cir.const #cir.int<100> : !s32i loc(#loc57)
      %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc57)
      %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc7)
      %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc7)
      %23 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc58)
      %24 = cir.call @snprintf(%18, %20, %22, %23) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc55)
      %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
      cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc60)
      %26 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc61)
      %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
      %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc62)
      cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc61)
    } loc(#loc224)
    cir.return loc(#loc13)
  } loc(#loc210)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc229)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc65)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc230)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc67)
    cir.return loc(#loc64)
  } loc(#loc228)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc231)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc232)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc73)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc74)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc75)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc76)
  cir.func @main(%arg0: !s32i loc(fused[#loc79, #loc80]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc81, #loc82])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc234)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc235)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc78)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc83)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc83)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc84)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc85)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc85)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc86)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc73)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc87)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06_good : !cir.ptr<!cir.func<!void ()>> loc(#loc236)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06_good() : () -> () loc(#loc88)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc74)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc90)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc75)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc91)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc237)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06_bad() : () -> () loc(#loc92)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc76)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc95)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc238)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc238)
    cir.return %17 : !s32i loc(#loc238)
  } loc(#loc233)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc97)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc240)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc102)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc241)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc106)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc107)
      %4 = cir.cmp(ne, %2, %3) : !s32i, !cir.bool loc(#loc243)
      cir.if %4 {
        %5 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc97)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc97)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc111)
      } else {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc112)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc113)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc113)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc245)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc246)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc112)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc247)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc248)
        cir.scope {
          %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc120)
          %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc121)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc121)
          %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc250)
          cir.if %20 {
            %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc123)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc124)
            %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc125)
            cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc123)
          } loc(#loc251)
        } loc(#loc249)
        %12 = cir.const #cir.int<0> : !s32i loc(#loc126)
        %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc126)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc127)
        %15 = cir.const #cir.int<0> : !s32i loc(#loc128)
        %16 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc129)
        cir.store %13, %16 : !s8i, !cir.ptr<!s8i> loc(#loc252)
      } loc(#loc244)
    } loc(#loc242)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc254)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc134)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc134)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc135)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc136)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc137)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc136)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc136)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc255)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc140)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc140)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc141)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc142)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc141)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc143)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc143)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc256)
      %17 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc144)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
      %19 = cir.const #cir.int<100> : !s32i loc(#loc146)
      %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc146)
      %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc147)
      %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc147)
      %23 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc148)
      %24 = cir.call @snprintf(%18, %20, %22, %23) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc144)
      %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc149)
      cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc150)
      %26 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc151)
      %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
      %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc152)
      cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc151)
    } loc(#loc253)
    cir.return loc(#loc99)
  } loc(#loc239)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc258)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc157)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc259)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc161)
      %3 = cir.const #cir.int<5> : !s32i loc(#loc162)
      %4 = cir.cmp(eq, %2, %3) : !s32i, !cir.bool loc(#loc261)
      cir.if %4 {
        %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc164)
        %6 = cir.const #cir.int<100> : !s32i loc(#loc165)
        %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc165)
        %8 = cir.const #cir.int<1> : !u64i loc(#loc263)
        %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc264)
        %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc164)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc265)
        cir.store %11, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc266)
        cir.scope {
          %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc172)
          %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc173)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc173)
          %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc268)
          cir.if %20 {
            %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc175)
            %22 = cir.const #cir.int<1> : !s32i loc(#loc176)
            %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc177)
            cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc175)
          } loc(#loc269)
        } loc(#loc267)
        %12 = cir.const #cir.int<0> : !s32i loc(#loc178)
        %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc178)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
        %15 = cir.const #cir.int<0> : !s32i loc(#loc180)
        %16 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc181)
        cir.store %13, %16 : !s8i, !cir.ptr<!s8i> loc(#loc270)
      } loc(#loc262)
    } loc(#loc260)
    cir.scope {
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc272)
      %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc186)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc186)
      %5 = cir.const #cir.int<67> : !s32i loc(#loc187)
      %6 = cir.const #cir.int<100> : !s32i loc(#loc188)
      %7 = cir.const #cir.int<1> : !s32i loc(#loc189)
      %8 = cir.binop(sub, %6, %7) nsw : !s32i loc(#loc188)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc188)
      cir.libc.memset %9 bytes from %4 set to %5 : !cir.ptr<!void>, !s32i, !u64i loc(#loc273)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc192)
      %11 = cir.cast(integral, %10 : !s32i), !s8i loc(#loc192)
      %12 = cir.const #cir.int<100> : !s32i loc(#loc193)
      %13 = cir.const #cir.int<1> : !s32i loc(#loc194)
      %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc193)
      %15 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc195)
      %16 = cir.ptr_stride(%15 : !cir.ptr<!s8i>, %14 : !s32i), !cir.ptr<!s8i> loc(#loc195)
      cir.store %11, %16 : !s8i, !cir.ptr<!s8i> loc(#loc274)
      %17 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc196)
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc197)
      %19 = cir.const #cir.int<100> : !s32i loc(#loc198)
      %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc198)
      %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc199)
      %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc199)
      %23 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc200)
      %24 = cir.call @snprintf(%18, %20, %22, %23) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc196)
      %25 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc201)
      cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc202)
      %26 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc203)
      %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc204)
      %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc204)
      cir.call @free(%28) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc203)
    } loc(#loc271)
    cir.return loc(#loc154)
  } loc(#loc257)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdio.h":385:1)
#loc6 = loc("/usr/include/stdio.h":387:62)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":49:29)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc10 = loc("/usr/include/stdlib.h":687:1)
#loc11 = loc("/usr/include/stdlib.h":687:32)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":33:1)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":53:1)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":35:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":35:12)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":36:12)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":36:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":37:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":43:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":37:8)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":37:27)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":38:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":40:24)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":40:31)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":40:34)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":40:45)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":40:46)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":40:9)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":41:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":41:37)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":41:13)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":41:21)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":41:27)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":41:28)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":41:34)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":41:33)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":42:19)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":42:9)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":42:14)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":42:15)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":44:5)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":52:5)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":45:9)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":45:24)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":46:16)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":46:24)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":46:29)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":46:33)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":46:9)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":46:34)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":47:25)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":47:16)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":47:20)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":47:9)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":49:9)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":49:18)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":49:24)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":49:35)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":50:19)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":50:9)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":51:9)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":51:14)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":110:1)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":114:1)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":112:5)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":112:14)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":113:5)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":113:14)
#loc69 = loc("/usr/include/stdlib.h":575:1)
#loc70 = loc("/usr/include/stdlib.h":575:41)
#loc71 = loc("/usr/include/time.h":76:1)
#loc72 = loc("/usr/include/time.h":76:38)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":131:15)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":133:15)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":136:15)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":138:15)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":126:1)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":141:1)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":127:1)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":129:27)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":129:22)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":129:5)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":131:5)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":132:5)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":132:71)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":133:5)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":136:5)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":137:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":137:70)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":138:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":140:12)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":140:5)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":67:19)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":60:1)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":85:1)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":62:5)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":62:12)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":63:12)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":63:5)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":64:5)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":75:5)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":64:8)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":64:27)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":65:5)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":68:5)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":70:5)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":67:9)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":72:24)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":72:31)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":72:35)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":72:46)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":72:47)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":72:9)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":73:9)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":73:37)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":73:13)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":73:21)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":73:27)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":73:28)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":73:34)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":73:33)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":74:19)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":74:9)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":74:14)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":74:15)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":76:5)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":84:5)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":77:9)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":77:24)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":78:16)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":78:24)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":78:29)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":78:33)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":78:9)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":78:34)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":79:25)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":79:16)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":79:20)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":79:9)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":81:9)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":81:18)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":81:24)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":81:29)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":81:35)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":82:19)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":82:9)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":83:9)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":83:14)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":88:1)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":108:1)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":90:5)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":90:12)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":91:12)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":91:5)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":92:5)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":98:5)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":92:8)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":92:27)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":93:5)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":95:24)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":95:31)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":95:35)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":95:46)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":95:47)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":95:9)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":96:9)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":96:37)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":96:13)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":96:21)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":96:27)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":96:28)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":96:34)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":96:33)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":97:19)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":97:9)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":97:14)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":97:15)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":99:5)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":107:5)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":100:9)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":100:24)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":101:16)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":101:24)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":101:29)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":101:33)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":101:9)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":101:34)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":102:25)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":102:16)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":102:20)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":102:9)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":104:9)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":104:18)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":104:24)
#loc199 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":104:29)
#loc200 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":104:35)
#loc201 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":105:19)
#loc202 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":105:9)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":106:9)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_char_snprintf_06.c":106:14)
#loc205 = loc(fused[#loc1, #loc2])
#loc206 = loc(fused[#loc3, #loc4])
#loc207 = loc(fused[#loc5, #loc6])
#loc208 = loc(fused[#loc8, #loc9])
#loc209 = loc(fused[#loc10, #loc11])
#loc210 = loc(fused[#loc12, #loc13])
#loc211 = loc(fused[#loc14, #loc15])
#loc212 = loc(fused[#loc17, #loc16])
#loc213 = loc(fused[#loc18, #loc19])
#loc214 = loc(fused[#loc20, #loc21])
#loc215 = loc(fused[#loc22, #loc19])
#loc216 = loc(fused[#loc25, #loc26])
#loc217 = loc(fused[#loc24, #loc26])
#loc218 = loc(fused[#loc23, #loc27])
#loc219 = loc(fused[#loc28, #loc27])
#loc220 = loc(fused[#loc29, #loc30])
#loc221 = loc(fused[#loc31, #loc32])
#loc222 = loc(fused[#loc33, #loc30])
#loc223 = loc(fused[#loc38, #loc37])
#loc224 = loc(fused[#loc41, #loc42])
#loc225 = loc(fused[#loc43, #loc44])
#loc226 = loc(fused[#loc49, #loc50])
#loc227 = loc(fused[#loc54, #loc51])
#loc228 = loc(fused[#loc63, #loc64])
#loc229 = loc(fused[#loc65, #loc66])
#loc230 = loc(fused[#loc67, #loc68])
#loc231 = loc(fused[#loc69, #loc70])
#loc232 = loc(fused[#loc71, #loc72])
#loc233 = loc(fused[#loc77, #loc78])
#loc236 = loc(fused[#loc88, #loc89])
#loc237 = loc(fused[#loc92, #loc93])
#loc238 = loc(fused[#loc96, #loc95])
#loc239 = loc(fused[#loc98, #loc99])
#loc240 = loc(fused[#loc100, #loc101])
#loc241 = loc(fused[#loc103, #loc102])
#loc242 = loc(fused[#loc104, #loc105])
#loc243 = loc(fused[#loc106, #loc107])
#loc244 = loc(fused[#loc108, #loc109, #loc110, #loc105])
#loc245 = loc(fused[#loc114, #loc115])
#loc246 = loc(fused[#loc113, #loc115])
#loc247 = loc(fused[#loc112, #loc116])
#loc248 = loc(fused[#loc117, #loc116])
#loc249 = loc(fused[#loc118, #loc119])
#loc250 = loc(fused[#loc120, #loc121])
#loc251 = loc(fused[#loc122, #loc119])
#loc252 = loc(fused[#loc127, #loc126])
#loc253 = loc(fused[#loc130, #loc131])
#loc254 = loc(fused[#loc132, #loc133])
#loc255 = loc(fused[#loc138, #loc139])
#loc256 = loc(fused[#loc143, #loc140])
#loc257 = loc(fused[#loc153, #loc154])
#loc258 = loc(fused[#loc155, #loc156])
#loc259 = loc(fused[#loc158, #loc157])
#loc260 = loc(fused[#loc159, #loc160])
#loc261 = loc(fused[#loc161, #loc162])
#loc262 = loc(fused[#loc163, #loc160])
#loc263 = loc(fused[#loc166, #loc167])
#loc264 = loc(fused[#loc165, #loc167])
#loc265 = loc(fused[#loc164, #loc168])
#loc266 = loc(fused[#loc169, #loc168])
#loc267 = loc(fused[#loc170, #loc171])
#loc268 = loc(fused[#loc172, #loc173])
#loc269 = loc(fused[#loc174, #loc171])
#loc270 = loc(fused[#loc179, #loc178])
#loc271 = loc(fused[#loc182, #loc183])
#loc272 = loc(fused[#loc184, #loc185])
#loc273 = loc(fused[#loc190, #loc191])
#loc274 = loc(fused[#loc195, #loc192])
