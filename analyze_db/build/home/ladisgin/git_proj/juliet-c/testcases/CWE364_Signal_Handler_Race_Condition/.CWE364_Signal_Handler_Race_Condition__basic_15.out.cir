!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc15 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":28:23)
#loc16 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":28:27)
#loc100 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":207:10)
#loc101 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":207:14)
#loc102 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":207:20)
#loc103 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":207:32)
#loc120 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":36:24)
#loc121 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":36:28)
!ty__structSigAtomic = !cir.struct<struct "_structSigAtomic" {!s32i} #cir.record.decl.ast>
#loc261 = loc(fused[#loc15, #loc16])
#loc293 = loc(fused[#loc100, #loc101])
#loc294 = loc(fused[#loc102, #loc103])
#loc299 = loc(fused[#loc120, #loc121])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE364_Signal_Handler_Race_Condition/CWE364_Signal_Handler_Race_Condition__basic_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global external dsolocal @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicBad = #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> {alignment = 8 : i64} loc(#loc254)
  cir.global external dsolocal @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood = #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> {alignment = 8 : i64} loc(#loc255)
  cir.func private @signal(!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc256)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc257)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc258)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc259)
  cir.func internal private @helperBad(%arg0: !s32i loc(fused[#loc15, #loc16])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["sig", init] {alignment = 4 : i64} loc(#loc261)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc17)
    cir.scope {
      %1 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc254)
      %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc20)
      %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc21)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc21)
      %5 = cir.cmp(ne, %2, %4) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc263)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc23)
        %7 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc254)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc24)
        %9 = cir.get_member %8[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
        cir.store %6, %9 : !s32i, !cir.ptr<!s32i> loc(#loc265)
      } loc(#loc264)
    } loc(#loc262)
    cir.return loc(#loc14)
  } loc(#loc260)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc266)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc28)
  cir.func no_proto @CWE364_Signal_Handler_Race_Condition__basic_15_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc33)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc270)
            %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc38)
            cir.store %2, %1 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc270)
            %3 = cir.const #cir.int<2> : !s32i loc(#loc39)
            %4 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc40)
            %5 = cir.call @signal(%3, %4) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc41)
            cir.scope {
              %19 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc254)
              %20 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc44)
              %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc45)
              %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc45)
              %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc272)
              cir.if %23 {
                %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc47)
                %25 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc254)
                %26 = cir.load %25 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc48)
                %27 = cir.cast(bitcast, %26 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc48)
                cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc47)
                %28 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc49)
                %29 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc254)
                cir.store %28, %29 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc274)
              } loc(#loc273)
            } loc(#loc271)
            %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc51)
            %7 = cir.const #cir.int<4> : !u64i loc(#loc275)
            %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc51)
            %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc276)
            cir.store %9, %1 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc277)
            cir.scope {
              %19 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc58)
              %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc59)
              %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc59)
              %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc279)
              cir.if %22 {
                %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc61)
                %24 = cir.const #cir.int<1> : !s32i loc(#loc62)
                %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc63)
                cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc61)
              } loc(#loc280)
            } loc(#loc278)
            %10 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc64)
            %11 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc254)
            cir.store %10, %11 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc281)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc66)
            %13 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc254)
            %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc67)
            %15 = cir.get_member %14[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
            cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc282)
            %16 = cir.const #cir.int<2> : !s32i loc(#loc68)
            %17 = cir.get_global @helperBad : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc69)
            %18 = cir.call @signal(%16, %17) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc70)
            cir.scope {
              %19 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc254)
              %20 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc73)
              %21 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc74)
              %22 = cir.cast(bitcast, %21 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc74)
              %23 = cir.cmp(ne, %20, %22) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc284)
              cir.if %23 {
                %24 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc76)
                %25 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc254)
                %26 = cir.load %25 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc77)
                %27 = cir.cast(bitcast, %26 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc77)
                cir.call @free(%27) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc76)
                %28 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc78)
                %29 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicBad : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc254)
                cir.store %28, %29 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc286)
              } loc(#loc285)
            } loc(#loc283)
          } loc(#loc269)
          cir.break loc(#loc80)
        } loc(#loc34)
        cir.case(default, []) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc28)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc28)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc82)
          cir.break loc(#loc83)
        } loc(#loc81)
        cir.yield loc(#loc31)
      } loc(#loc31)
    } loc(#loc268)
    cir.return loc(#loc30)
  } loc(#loc267)
  cir.func no_proto @CWE364_Signal_Handler_Race_Condition__basic_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc288)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc86)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<!void ()>> loc(#loc289)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc88)
    cir.return loc(#loc85)
  } loc(#loc287)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc290)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc291)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc94)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc95)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc96)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc97)
  cir.func @main(%arg0: !s32i loc(fused[#loc100, #loc101]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc102, #loc103])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc293)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc294)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc99)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc104)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc104)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc105)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc106)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc106)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc107)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc94)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc94)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc108)
    %8 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc295)
    cir.call @CWE364_Signal_Handler_Race_Condition__basic_15_good() : () -> () loc(#loc109)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc95)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc95)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc111)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc96)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc96)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc112)
    %13 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc296)
    cir.call @CWE364_Signal_Handler_Race_Condition__basic_15_bad() : () -> () loc(#loc113)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc97)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc115)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc116)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc297)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc297)
    cir.return %17 : !s32i loc(#loc297)
  } loc(#loc292)
  cir.func internal private @helperGood(%arg0: !s32i loc(fused[#loc120, #loc121])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["sig", init] {alignment = 4 : i64} loc(#loc299)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc122)
    cir.scope {
      %1 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc255)
      %2 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc125)
      %3 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc126)
      %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc126)
      %5 = cir.cmp(ne, %2, %4) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc301)
      cir.if %5 {
        %6 = cir.const #cir.int<2> : !s32i loc(#loc128)
        %7 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc255)
        %8 = cir.load %7 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc129)
        %9 = cir.get_member %8[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
        cir.store %6, %9 : !s32i, !cir.ptr<!s32i> loc(#loc303)
      } loc(#loc302)
    } loc(#loc300)
    cir.return loc(#loc119)
  } loc(#loc298)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<5> : !s32i loc(#loc134)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc136)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc136)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc137)
          cir.break loc(#loc138)
        } loc(#loc135)
        cir.case(default, []) {
          cir.scope {
            %1 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc307)
            %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc143)
            cir.store %2, %1 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc307)
            %3 = cir.const #cir.int<2> : !s32i loc(#loc144)
            %4 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc145)
            %5 = cir.call @signal(%3, %4) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc146)
            cir.scope {
              %25 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc255)
              %26 = cir.load %25 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc149)
              %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc150)
              %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc150)
              %29 = cir.cmp(ne, %26, %28) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc309)
              cir.if %29 {
                %30 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc152)
                %31 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc255)
                %32 = cir.load %31 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc153)
                %33 = cir.cast(bitcast, %32 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc153)
                cir.call @free(%33) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc152)
                %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc154)
                %35 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc255)
                cir.store %34, %35 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc311)
              } loc(#loc310)
            } loc(#loc308)
            %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc156)
            %7 = cir.const #cir.int<4> : !u64i loc(#loc312)
            %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc156)
            %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc313)
            cir.store %9, %1 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc314)
            cir.scope {
              %25 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc163)
              %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc164)
              %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc164)
              %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc316)
              cir.if %28 {
                %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc166)
                %30 = cir.const #cir.int<1> : !s32i loc(#loc167)
                %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc168)
                cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc166)
              } loc(#loc317)
            } loc(#loc315)
            %10 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc169)
            %11 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc255)
            cir.store %10, %11 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc318)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc171)
            %13 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc255)
            %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc172)
            %15 = cir.get_member %14[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
            cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc319)
            %16 = cir.const #cir.int<2> : !s32i loc(#loc173)
            %17 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc174)
            %18 = cir.call @signal(%16, %17) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc175)
            %19 = cir.const #cir.int<2> : !s32i loc(#loc176)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc177)
            %21 = cir.call @signal(%19, %20) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc178)
            cir.scope {
              %25 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc255)
              %26 = cir.load %25 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc181)
              %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc182)
              %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc182)
              %29 = cir.cmp(ne, %26, %28) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc321)
              cir.if %29 {
                %30 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc184)
                %31 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc255)
                %32 = cir.load %31 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc185)
                %33 = cir.cast(bitcast, %32 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc185)
                cir.call @free(%33) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc184)
                %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc186)
                %35 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc255)
                cir.store %34, %35 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc323)
              } loc(#loc322)
            } loc(#loc320)
            %22 = cir.const #cir.int<2> : !s32i loc(#loc188)
            %23 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc189)
            %24 = cir.call @signal(%22, %23) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc190)
          } loc(#loc306)
          cir.break loc(#loc191)
        } loc(#loc139)
        cir.yield loc(#loc132)
      } loc(#loc132)
    } loc(#loc305)
    cir.return loc(#loc131)
  } loc(#loc304)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.const #cir.int<6> : !s32i loc(#loc196)
      cir.switch (%0 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          cir.scope {
            %1 = cir.alloca !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, ["gStructSigAtomic", init] {alignment = 8 : i64} loc(#loc327)
            %2 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc201)
            cir.store %2, %1 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc327)
            %3 = cir.const #cir.int<2> : !s32i loc(#loc202)
            %4 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc203)
            %5 = cir.call @signal(%3, %4) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc204)
            cir.scope {
              %25 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc255)
              %26 = cir.load %25 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc207)
              %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc208)
              %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc208)
              %29 = cir.cmp(ne, %26, %28) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc329)
              cir.if %29 {
                %30 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc210)
                %31 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc255)
                %32 = cir.load %31 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc211)
                %33 = cir.cast(bitcast, %32 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc211)
                cir.call @free(%33) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc210)
                %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc212)
                %35 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc255)
                cir.store %34, %35 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc331)
              } loc(#loc330)
            } loc(#loc328)
            %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc214)
            %7 = cir.const #cir.int<4> : !u64i loc(#loc332)
            %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc214)
            %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc333)
            cir.store %9, %1 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc334)
            cir.scope {
              %25 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc221)
              %26 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc222)
              %27 = cir.cast(bitcast, %26 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc222)
              %28 = cir.cmp(eq, %25, %27) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc336)
              cir.if %28 {
                %29 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc224)
                %30 = cir.const #cir.int<1> : !s32i loc(#loc225)
                %31 = cir.unary(minus, %30) : !s32i, !s32i loc(#loc226)
                cir.call @exit(%31) : (!s32i) -> () extra(#fn_attr) loc(#loc224)
              } loc(#loc337)
            } loc(#loc335)
            %10 = cir.load %1 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc227)
            %11 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc255)
            cir.store %10, %11 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc338)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc229)
            %13 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc255)
            %14 = cir.load %13 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc230)
            %15 = cir.get_member %14[0] {name = "val"} : !cir.ptr<!ty__structSigAtomic> -> !cir.ptr<!s32i> loc(#loc25)
            cir.store %12, %15 : !s32i, !cir.ptr<!s32i> loc(#loc339)
            %16 = cir.const #cir.int<2> : !s32i loc(#loc231)
            %17 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc232)
            %18 = cir.call @signal(%16, %17) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc233)
            %19 = cir.const #cir.int<2> : !s32i loc(#loc234)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc235)
            %21 = cir.call @signal(%19, %20) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc236)
            cir.scope {
              %25 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc255)
              %26 = cir.load %25 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc239)
              %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc240)
              %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty__structSigAtomic> loc(#loc240)
              %29 = cir.cmp(ne, %26, %28) : !cir.ptr<!ty__structSigAtomic>, !cir.bool loc(#loc341)
              cir.if %29 {
                %30 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc242)
                %31 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc255)
                %32 = cir.load %31 : !cir.ptr<!cir.ptr<!ty__structSigAtomic>>, !cir.ptr<!ty__structSigAtomic> loc(#loc243)
                %33 = cir.cast(bitcast, %32 : !cir.ptr<!ty__structSigAtomic>), !cir.ptr<!void> loc(#loc243)
                cir.call @free(%33) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc242)
                %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty__structSigAtomic> loc(#loc244)
                %35 = cir.get_global @CWE364_Signal_Handler_Race_Condition__basic_15StructSigAtomicGood : !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc255)
                cir.store %34, %35 : !cir.ptr<!ty__structSigAtomic>, !cir.ptr<!cir.ptr<!ty__structSigAtomic>> loc(#loc343)
              } loc(#loc342)
            } loc(#loc340)
            %22 = cir.const #cir.int<2> : !s32i loc(#loc246)
            %23 = cir.get_global @helperGood : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc247)
            %24 = cir.call @signal(%22, %23) : (!s32i, !cir.ptr<!cir.func<!void (!s32i)>>) -> !cir.ptr<!cir.func<!void (!s32i)>> extra(#fn_attr) loc(#loc248)
          } loc(#loc326)
          cir.break loc(#loc249)
        } loc(#loc197)
        cir.case(default, []) {
          %1 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc251)
          %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc251)
          cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc252)
          cir.break loc(#loc253)
        } loc(#loc250)
        cir.yield loc(#loc194)
      } loc(#loc194)
    } loc(#loc325)
    cir.return loc(#loc193)
  } loc(#loc324)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE364_Signal_Handler_Race_Condition/CWE364_Signal_Handler_Race_Condition__basic_15.c":0:0)
#loc1 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":25:1)
#loc2 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":25:85)
#loc3 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":26:1)
#loc4 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":26:86)
#loc5 = loc("/usr/include/signal.h":88:1)
#loc6 = loc("/usr/include/signal.h":89:6)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("/usr/include/stdlib.h":672:1)
#loc10 = loc("/usr/include/stdlib.h":672:45)
#loc11 = loc("/usr/include/stdlib.h":756:1)
#loc12 = loc("/usr/include/stdlib.h":756:70)
#loc13 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":28:1)
#loc14 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":34:1)
#loc17 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":29:1)
#loc18 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":30:5)
#loc19 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":33:5)
#loc20 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":30:9)
#loc21 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":30:77)
#loc22 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":31:5)
#loc23 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":32:81)
#loc24 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":32:9)
#loc25 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":22:18)
#loc26 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc27 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc28 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":89:19)
#loc29 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":46:1)
#loc30 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":92:1)
#loc31 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":48:5)
#loc32 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":91:5)
#loc33 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":48:12)
#loc34 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":50:5)
#loc35 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":51:5)
#loc36 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":85:5)
#loc37 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":52:9)
#loc38 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":52:45)
#loc39 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":53:16)
#loc40 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":53:24)
#loc41 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":53:9)
#loc42 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":54:9)
#loc43 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":58:9)
#loc44 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":54:13)
#loc45 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":54:81)
#loc46 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":55:9)
#loc47 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":56:13)
#loc48 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":56:18)
#loc49 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":57:80)
#loc50 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":57:13)
#loc51 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":59:46)
#loc52 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":59:53)
#loc53 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":59:75)
#loc54 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":59:76)
#loc55 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":59:9)
#loc56 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":60:9)
#loc57 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":60:49)
#loc58 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":60:13)
#loc59 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":60:33)
#loc60 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":60:39)
#loc61 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":60:40)
#loc62 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":60:46)
#loc63 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":60:45)
#loc64 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":61:76)
#loc65 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":61:9)
#loc66 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":62:81)
#loc67 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":62:9)
#loc68 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":70:16)
#loc69 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":70:24)
#loc70 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":70:9)
#loc71 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":80:9)
#loc72 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":84:9)
#loc73 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":80:13)
#loc74 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":80:81)
#loc75 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":81:9)
#loc76 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":82:13)
#loc77 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":82:18)
#loc78 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":83:80)
#loc79 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":83:13)
#loc80 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":86:5)
#loc81 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":87:5)
#loc82 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":89:9)
#loc83 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":90:9)
#loc84 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":192:1)
#loc85 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":196:1)
#loc86 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":194:5)
#loc87 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":194:11)
#loc88 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":195:5)
#loc89 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":195:11)
#loc90 = loc("/usr/include/stdlib.h":575:1)
#loc91 = loc("/usr/include/stdlib.h":575:41)
#loc92 = loc("/usr/include/time.h":76:1)
#loc93 = loc("/usr/include/time.h":76:38)
#loc94 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":212:15)
#loc95 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":214:15)
#loc96 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":217:15)
#loc97 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":219:15)
#loc98 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":207:1)
#loc99 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":222:1)
#loc104 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":208:1)
#loc105 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":210:27)
#loc106 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":210:22)
#loc107 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":210:5)
#loc108 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":212:5)
#loc109 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":213:5)
#loc110 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":213:57)
#loc111 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":214:5)
#loc112 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":217:5)
#loc113 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":218:5)
#loc114 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":218:56)
#loc115 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":219:5)
#loc116 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":221:12)
#loc117 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":221:5)
#loc118 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":36:1)
#loc119 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":42:1)
#loc122 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":37:1)
#loc123 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":38:5)
#loc124 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":41:5)
#loc125 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":38:9)
#loc126 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":38:78)
#loc127 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":39:5)
#loc128 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":40:82)
#loc129 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":40:9)
#loc130 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":99:1)
#loc131 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":143:1)
#loc132 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":101:5)
#loc133 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":142:5)
#loc134 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":101:12)
#loc135 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":103:5)
#loc136 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":105:19)
#loc137 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":105:9)
#loc138 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":106:9)
#loc139 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":107:5)
#loc140 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":108:5)
#loc141 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":140:5)
#loc142 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":109:9)
#loc143 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":109:45)
#loc144 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":110:16)
#loc145 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":110:24)
#loc146 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":110:9)
#loc147 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":111:9)
#loc148 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":115:9)
#loc149 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":111:13)
#loc150 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":111:82)
#loc151 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":112:9)
#loc152 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":113:13)
#loc153 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":113:18)
#loc154 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":114:81)
#loc155 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":114:13)
#loc156 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":116:46)
#loc157 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":116:53)
#loc158 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":116:75)
#loc159 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":116:76)
#loc160 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":116:9)
#loc161 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":117:9)
#loc162 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":117:49)
#loc163 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":117:13)
#loc164 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":117:33)
#loc165 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":117:39)
#loc166 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":117:40)
#loc167 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":117:46)
#loc168 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":117:45)
#loc169 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":118:77)
#loc170 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":118:9)
#loc171 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":119:82)
#loc172 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":119:9)
#loc173 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":127:16)
#loc174 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":127:24)
#loc175 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":127:9)
#loc176 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":133:16)
#loc177 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":133:24)
#loc178 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":133:9)
#loc179 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":134:9)
#loc180 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":138:9)
#loc181 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":134:13)
#loc182 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":134:82)
#loc183 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":135:9)
#loc184 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":136:13)
#loc185 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":136:18)
#loc186 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":137:81)
#loc187 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":137:13)
#loc188 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":139:16)
#loc189 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":139:24)
#loc190 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":139:9)
#loc191 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":141:5)
#loc192 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":146:1)
#loc193 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":190:1)
#loc194 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":148:5)
#loc195 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":189:5)
#loc196 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":148:12)
#loc197 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":150:5)
#loc198 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":151:5)
#loc199 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":183:5)
#loc200 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":152:9)
#loc201 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":152:45)
#loc202 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":153:16)
#loc203 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":153:24)
#loc204 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":153:9)
#loc205 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":154:9)
#loc206 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":158:9)
#loc207 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":154:13)
#loc208 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":154:82)
#loc209 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":155:9)
#loc210 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":156:13)
#loc211 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":156:18)
#loc212 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":157:81)
#loc213 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":157:13)
#loc214 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":159:46)
#loc215 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":159:53)
#loc216 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":159:75)
#loc217 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":159:76)
#loc218 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":159:9)
#loc219 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":160:9)
#loc220 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":160:49)
#loc221 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":160:13)
#loc222 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":160:33)
#loc223 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":160:39)
#loc224 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":160:40)
#loc225 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":160:46)
#loc226 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":160:45)
#loc227 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":161:77)
#loc228 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":161:9)
#loc229 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":162:82)
#loc230 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":162:9)
#loc231 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":170:16)
#loc232 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":170:24)
#loc233 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":170:9)
#loc234 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":176:16)
#loc235 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":176:24)
#loc236 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":176:9)
#loc237 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":177:9)
#loc238 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":181:9)
#loc239 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":177:13)
#loc240 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":177:82)
#loc241 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":178:9)
#loc242 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":179:13)
#loc243 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":179:18)
#loc244 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":180:81)
#loc245 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":180:13)
#loc246 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":182:16)
#loc247 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":182:24)
#loc248 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":182:9)
#loc249 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":184:5)
#loc250 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":185:5)
#loc251 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":187:19)
#loc252 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":187:9)
#loc253 = loc("CWE364_Signal_Handler_Race_Condition__basic_15.c":188:9)
#loc254 = loc(fused[#loc1, #loc2])
#loc255 = loc(fused[#loc3, #loc4])
#loc256 = loc(fused[#loc5, #loc6])
#loc257 = loc(fused[#loc7, #loc8])
#loc258 = loc(fused[#loc9, #loc10])
#loc259 = loc(fused[#loc11, #loc12])
#loc260 = loc(fused[#loc13, #loc14])
#loc262 = loc(fused[#loc18, #loc19])
#loc263 = loc(fused[#loc20, #loc21])
#loc264 = loc(fused[#loc22, #loc19])
#loc265 = loc(fused[#loc24, #loc23])
#loc266 = loc(fused[#loc26, #loc27])
#loc267 = loc(fused[#loc29, #loc30])
#loc268 = loc(fused[#loc31, #loc32])
#loc269 = loc(fused[#loc35, #loc36])
#loc270 = loc(fused[#loc37, #loc38])
#loc271 = loc(fused[#loc42, #loc43])
#loc272 = loc(fused[#loc44, #loc45])
#loc273 = loc(fused[#loc46, #loc43])
#loc274 = loc(fused[#loc50, #loc49])
#loc275 = loc(fused[#loc52, #loc53])
#loc276 = loc(fused[#loc51, #loc54])
#loc277 = loc(fused[#loc55, #loc54])
#loc278 = loc(fused[#loc56, #loc57])
#loc279 = loc(fused[#loc58, #loc59])
#loc280 = loc(fused[#loc60, #loc57])
#loc281 = loc(fused[#loc65, #loc64])
#loc282 = loc(fused[#loc67, #loc66])
#loc283 = loc(fused[#loc71, #loc72])
#loc284 = loc(fused[#loc73, #loc74])
#loc285 = loc(fused[#loc75, #loc72])
#loc286 = loc(fused[#loc79, #loc78])
#loc287 = loc(fused[#loc84, #loc85])
#loc288 = loc(fused[#loc86, #loc87])
#loc289 = loc(fused[#loc88, #loc89])
#loc290 = loc(fused[#loc90, #loc91])
#loc291 = loc(fused[#loc92, #loc93])
#loc292 = loc(fused[#loc98, #loc99])
#loc295 = loc(fused[#loc109, #loc110])
#loc296 = loc(fused[#loc113, #loc114])
#loc297 = loc(fused[#loc117, #loc116])
#loc298 = loc(fused[#loc118, #loc119])
#loc300 = loc(fused[#loc123, #loc124])
#loc301 = loc(fused[#loc125, #loc126])
#loc302 = loc(fused[#loc127, #loc124])
#loc303 = loc(fused[#loc129, #loc128])
#loc304 = loc(fused[#loc130, #loc131])
#loc305 = loc(fused[#loc132, #loc133])
#loc306 = loc(fused[#loc140, #loc141])
#loc307 = loc(fused[#loc142, #loc143])
#loc308 = loc(fused[#loc147, #loc148])
#loc309 = loc(fused[#loc149, #loc150])
#loc310 = loc(fused[#loc151, #loc148])
#loc311 = loc(fused[#loc155, #loc154])
#loc312 = loc(fused[#loc157, #loc158])
#loc313 = loc(fused[#loc156, #loc159])
#loc314 = loc(fused[#loc160, #loc159])
#loc315 = loc(fused[#loc161, #loc162])
#loc316 = loc(fused[#loc163, #loc164])
#loc317 = loc(fused[#loc165, #loc162])
#loc318 = loc(fused[#loc170, #loc169])
#loc319 = loc(fused[#loc172, #loc171])
#loc320 = loc(fused[#loc179, #loc180])
#loc321 = loc(fused[#loc181, #loc182])
#loc322 = loc(fused[#loc183, #loc180])
#loc323 = loc(fused[#loc187, #loc186])
#loc324 = loc(fused[#loc192, #loc193])
#loc325 = loc(fused[#loc194, #loc195])
#loc326 = loc(fused[#loc198, #loc199])
#loc327 = loc(fused[#loc200, #loc201])
#loc328 = loc(fused[#loc205, #loc206])
#loc329 = loc(fused[#loc207, #loc208])
#loc330 = loc(fused[#loc209, #loc206])
#loc331 = loc(fused[#loc213, #loc212])
#loc332 = loc(fused[#loc215, #loc216])
#loc333 = loc(fused[#loc214, #loc217])
#loc334 = loc(fused[#loc218, #loc217])
#loc335 = loc(fused[#loc219, #loc220])
#loc336 = loc(fused[#loc221, #loc222])
#loc337 = loc(fused[#loc223, #loc220])
#loc338 = loc(fused[#loc228, #loc227])
#loc339 = loc(fused[#loc230, #loc229])
#loc340 = loc(fused[#loc237, #loc238])
#loc341 = loc(fused[#loc239, #loc240])
#loc342 = loc(fused[#loc241, #loc238])
#loc343 = loc(fused[#loc245, #loc244])
