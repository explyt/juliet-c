!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc54 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":77:10)
#loc55 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":77:14)
#loc56 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":77:20)
#loc57 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":77:32)
#loc144 = loc(fused[#loc54, #loc55])
#loc145 = loc(fused[#loc56, #loc57])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc124)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc125)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc126)
  cir.func private @printIntLine(!s32i) loc(#loc127)
  cir.func no_proto @CWE758_Undefined_Behavior__int_pointer_malloc_use_16_bad() extra(#fn_attr1) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc13)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc13)
        cir.condition(%1) loc(#loc13)
      } do {
        cir.scope {
          %0 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc131)
          %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc132)
          %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc20)
          %3 = cir.const #cir.int<8> : !u64i loc(#loc133)
          %4 = cir.call @malloc(%3) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc134)
          cir.store %5, %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc131)
          cir.scope {
            %13 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc25)
            %14 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc26)
            %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc26)
            %16 = cir.cmp(eq, %13, %15) : !cir.ptr<!cir.ptr<!s32i>>, !cir.bool loc(#loc136)
            cir.if %16 {
              %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc28)
              %18 = cir.const #cir.int<1> : !s32i loc(#loc29)
              %19 = cir.unary(minus, %18) : !s32i, !s32i loc(#loc30)
              cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc28)
            } loc(#loc137)
          } loc(#loc135)
          %6 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc19)
          %7 = cir.load %6 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc31)
          cir.store %7, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc132)
          %8 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc32)
          %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc33)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!cir.ptr<!s32i>>), !cir.ptr<!void> loc(#loc33)
          cir.call @free(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc32)
          %11 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc34)
          %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc35)
          cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc36)
        } loc(#loc130)
        cir.break loc(#loc37)
      } loc(#loc129)
    } loc(#loc129)
    cir.return loc(#loc10)
  } loc(#loc128)
  cir.func no_proto @CWE758_Undefined_Behavior__int_pointer_malloc_use_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc139)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc39)
  } loc(#loc138)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc140)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc141)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc142)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc51)
  cir.func @main(%arg0: !s32i loc(fused[#loc54, #loc55]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc56, #loc57])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc144)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc145)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc53)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc58)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc58)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc59)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc60)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc60)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc61)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc48)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %8 = cir.get_global @CWE758_Undefined_Behavior__int_pointer_malloc_use_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc146)
    cir.call @CWE758_Undefined_Behavior__int_pointer_malloc_use_16_good() : () -> () loc(#loc63)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc49)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc50)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %13 = cir.get_global @CWE758_Undefined_Behavior__int_pointer_malloc_use_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc147)
    cir.call @CWE758_Undefined_Behavior__int_pointer_malloc_use_16_bad() : () -> () loc(#loc67)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc51)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc70)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc148)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc148)
    cir.return %17 : !s32i loc(#loc148)
  } loc(#loc143)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc76)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc76)
        cir.condition(%1) loc(#loc76)
      } do {
        cir.scope {
          %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc152)
          %1 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc153)
          %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc83)
          %3 = cir.const #cir.int<8> : !u64i loc(#loc154)
          %4 = cir.call @malloc(%3) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc83)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc155)
          cir.store %5, %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc153)
          cir.scope {
            %17 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc88)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc89)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc89)
            %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!cir.ptr<!s32i>>, !cir.bool loc(#loc157)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc91)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc92)
              %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc93)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc91)
            } loc(#loc158)
          } loc(#loc156)
          %6 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc94)
          %7 = cir.const #cir.int<4> : !u64i loc(#loc159)
          %8 = cir.call @malloc(%7) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc94)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc160)
          cir.store %9, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc161)
          cir.scope {
            %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc101)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc102)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc102)
            %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s32i>, !cir.bool loc(#loc163)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc104)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc105)
              %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc106)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc104)
            } loc(#loc164)
          } loc(#loc162)
          %10 = cir.const #cir.int<5> : !s32i loc(#loc107)
          %11 = cir.load deref %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc108)
          cir.store %10, %11 : !s32i, !cir.ptr<!s32i> loc(#loc165)
          %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc110)
          %13 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc111)
          cir.store %12, %13 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc166)
          cir.scope {
            %17 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc168)
            %18 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc116)
            %19 = cir.load %18 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc117)
            cir.store %19, %17 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc168)
            %20 = cir.load deref %17 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc118)
            %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc119)
            cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc120)
          } loc(#loc167)
          %14 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc121)
          %15 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc122)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!cir.ptr<!s32i>>), !cir.ptr<!void> loc(#loc122)
          cir.call @free(%16) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc121)
        } loc(#loc151)
        cir.break loc(#loc123)
      } loc(#loc150)
    } loc(#loc150)
    cir.return loc(#loc73)
  } loc(#loc149)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc9 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":20:1)
#loc10 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":33:1)
#loc11 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":22:5)
#loc12 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":32:5)
#loc13 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":22:11)
#loc14 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":24:9)
#loc15 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":30:9)
#loc16 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":25:13)
#loc17 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":25:60)
#loc18 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":27:13)
#loc19 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":27:27)
#loc20 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":25:40)
#loc21 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":25:47)
#loc22 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":25:59)
#loc23 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":26:13)
#loc24 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":26:44)
#loc25 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":26:17)
#loc26 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":26:28)
#loc27 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":26:34)
#loc28 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":26:35)
#loc29 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":26:41)
#loc30 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":26:40)
#loc31 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":27:26)
#loc32 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":28:13)
#loc33 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":28:18)
#loc34 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":29:27)
#loc35 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":29:26)
#loc36 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":29:13)
#loc37 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":31:9)
#loc38 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":63:1)
#loc39 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":66:1)
#loc40 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":65:5)
#loc41 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":65:11)
#loc42 = loc("/usr/include/stdlib.h":575:1)
#loc43 = loc("/usr/include/stdlib.h":575:41)
#loc44 = loc("/usr/include/time.h":76:1)
#loc45 = loc("/usr/include/time.h":76:38)
#loc46 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc47 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc48 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":82:15)
#loc49 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":84:15)
#loc50 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":87:15)
#loc51 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":89:15)
#loc52 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":77:1)
#loc53 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":92:1)
#loc58 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":78:1)
#loc59 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":80:27)
#loc60 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":80:22)
#loc61 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":80:5)
#loc62 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":82:5)
#loc63 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":83:5)
#loc64 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":83:63)
#loc65 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":84:5)
#loc66 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":87:5)
#loc67 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":88:5)
#loc68 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":88:62)
#loc69 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":89:5)
#loc70 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":91:12)
#loc71 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":91:5)
#loc72 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":40:1)
#loc73 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":61:1)
#loc74 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":42:5)
#loc75 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":60:5)
#loc76 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":42:11)
#loc77 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":44:9)
#loc78 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":58:9)
#loc79 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":45:13)
#loc80 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":45:19)
#loc81 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":46:13)
#loc82 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":46:60)
#loc83 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":46:40)
#loc84 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":46:47)
#loc85 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":46:59)
#loc86 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":47:13)
#loc87 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":47:44)
#loc88 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":47:17)
#loc89 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":47:28)
#loc90 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":47:34)
#loc91 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":47:35)
#loc92 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":47:41)
#loc93 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":47:40)
#loc94 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":49:27)
#loc95 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":49:34)
#loc96 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":49:44)
#loc97 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":49:45)
#loc98 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":49:13)
#loc99 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":50:13)
#loc100 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":50:41)
#loc101 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":50:17)
#loc102 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":50:25)
#loc103 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":50:31)
#loc104 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":50:32)
#loc105 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":50:38)
#loc106 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":50:37)
#loc107 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":51:21)
#loc108 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":51:14)
#loc109 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":51:13)
#loc110 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":52:24)
#loc111 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":52:14)
#loc112 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":52:13)
#loc113 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":53:13)
#loc114 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":56:13)
#loc115 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":54:17)
#loc116 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":54:31)
#loc117 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":54:30)
#loc118 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":55:31)
#loc119 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":55:30)
#loc120 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":55:17)
#loc121 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":57:13)
#loc122 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":57:18)
#loc123 = loc("CWE758_Undefined_Behavior__int_pointer_malloc_use_16.c":59:9)
#loc124 = loc(fused[#loc1, #loc2])
#loc125 = loc(fused[#loc3, #loc4])
#loc126 = loc(fused[#loc5, #loc6])
#loc127 = loc(fused[#loc7, #loc8])
#loc128 = loc(fused[#loc9, #loc10])
#loc129 = loc(fused[#loc11, #loc12])
#loc130 = loc(fused[#loc14, #loc15])
#loc131 = loc(fused[#loc16, #loc17])
#loc132 = loc(fused[#loc18, #loc19])
#loc133 = loc(fused[#loc21, #loc22])
#loc134 = loc(fused[#loc20, #loc17])
#loc135 = loc(fused[#loc23, #loc24])
#loc136 = loc(fused[#loc25, #loc26])
#loc137 = loc(fused[#loc27, #loc24])
#loc138 = loc(fused[#loc38, #loc39])
#loc139 = loc(fused[#loc40, #loc41])
#loc140 = loc(fused[#loc42, #loc43])
#loc141 = loc(fused[#loc44, #loc45])
#loc142 = loc(fused[#loc46, #loc47])
#loc143 = loc(fused[#loc52, #loc53])
#loc146 = loc(fused[#loc63, #loc64])
#loc147 = loc(fused[#loc67, #loc68])
#loc148 = loc(fused[#loc71, #loc70])
#loc149 = loc(fused[#loc72, #loc73])
#loc150 = loc(fused[#loc74, #loc75])
#loc151 = loc(fused[#loc77, #loc78])
#loc152 = loc(fused[#loc79, #loc80])
#loc153 = loc(fused[#loc81, #loc82])
#loc154 = loc(fused[#loc84, #loc85])
#loc155 = loc(fused[#loc83, #loc82])
#loc156 = loc(fused[#loc86, #loc87])
#loc157 = loc(fused[#loc88, #loc89])
#loc158 = loc(fused[#loc90, #loc87])
#loc159 = loc(fused[#loc95, #loc96])
#loc160 = loc(fused[#loc94, #loc97])
#loc161 = loc(fused[#loc98, #loc97])
#loc162 = loc(fused[#loc99, #loc100])
#loc163 = loc(fused[#loc101, #loc102])
#loc164 = loc(fused[#loc103, #loc100])
#loc165 = loc(fused[#loc109, #loc107])
#loc166 = loc(fused[#loc112, #loc110])
#loc167 = loc(fused[#loc113, #loc114])
#loc168 = loc(fused[#loc115, #loc116])
