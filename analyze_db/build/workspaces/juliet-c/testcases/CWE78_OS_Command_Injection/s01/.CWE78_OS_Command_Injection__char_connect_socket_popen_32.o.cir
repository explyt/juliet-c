!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_popen_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc238)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_connect_socket_popen_32_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc239)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc240)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc241)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc242)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc11)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc243)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc244)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc245)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc246)
  cir.func private @close(!s32i) -> !s32i loc(#loc247)
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc248)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc24)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc249)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_popen_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc251)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc252)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc253)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc239)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc252)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc253)
    %4 = cir.get_global @__const.CWE78_OS_Command_Injection__char_connect_socket_popen_32_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc239)
    cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc239)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc35)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc254)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc256)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc40)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc256)
      cir.scope {
        %11 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc258)
        %12 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc259)
        %13 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc260)
        %14 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc261)
        %15 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc262)
        %16 = cir.const #cir.int<1> : !s32i loc(#loc51)
        %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc51)
        cir.store %17, %14 : !s32i, !cir.ptr<!s32i> loc(#loc261)
        %18 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc54)
        %19 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
        %20 = cir.call @strlen(%19) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc54)
        cir.store %20, %15 : !u64i, !cir.ptr<!u64i> loc(#loc262)
        cir.scope {
          cir.do {
            cir.scope {
              %21 = cir.const #cir.int<2> : !s32i loc(#loc60)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc61)
              %23 = cir.const #cir.int<6> : !s32i loc(#loc62)
              %24 = cir.call @socket(%21, %22, %23) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc63)
              cir.store %24, %14 : !s32i, !cir.ptr<!s32i> loc(#loc265)
              cir.scope {
                %75 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc68)
                %76 = cir.const #cir.int<1> : !s32i loc(#loc69)
                %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc69)
                %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc267)
                cir.if %78 {
                  cir.break loc(#loc71)
                } loc(#loc268)
              } loc(#loc266)
              %25 = cir.cast(bitcast, %12 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc269)
              %26 = cir.const #cir.int<0> : !s32i loc(#loc74)
              %27 = cir.const #cir.int<16> : !u64i loc(#loc270)
              cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc271)
              %28 = cir.const #cir.int<2> : !s32i loc(#loc79)
              %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc79)
              %30 = cir.get_member %12[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc80)
              cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc272)
              %31 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc11)
              %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc11)
              %33 = cir.call @inet_addr(%32) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc82)
              %34 = cir.get_member %12[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc83)
              %35 = cir.get_member %34[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc84)
              cir.store %33, %35 : !u32i, !cir.ptr<!u32i> loc(#loc273)
              %36 = cir.const #cir.int<27015> : !s32i loc(#loc87)
              %37 = cir.cast(integral, %36 : !s32i), !u16i loc(#loc87)
              %38 = cir.call @htons(%37) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc88)
              %39 = cir.get_member %12[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc89)
              cir.store %38, %39 : !u16i, !cir.ptr<!u16i> loc(#loc274)
              cir.scope {
                %75 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc94)
                %76 = cir.cast(bitcast, %12 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc276)
                %77 = cir.const #cir.int<16> : !u64i loc(#loc277)
                %78 = cir.cast(integral, %77 : !u64i), !u32i loc(#loc277)
                %79 = cir.call @connect(%75, %76, %78) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc99)
                %80 = cir.const #cir.int<1> : !s32i loc(#loc100)
                %81 = cir.unary(minus, %80) nsw : !s32i, !s32i loc(#loc100)
                %82 = cir.cmp(eq, %79, %81) : !s32i, !cir.bool loc(#loc278)
                cir.if %82 {
                  cir.break loc(#loc102)
                } loc(#loc279)
              } loc(#loc275)
              %40 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc103)
              %41 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
              %42 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc105)
              %43 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc106)
              %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc280)
              %45 = cir.const #cir.int<1> : !u64i loc(#loc281)
              %46 = cir.const #cir.int<100> : !s32i loc(#loc111)
              %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc111)
              %48 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc112)
              %49 = cir.binop(sub, %47, %48) : !u64i loc(#loc282)
              %50 = cir.const #cir.int<1> : !s32i loc(#loc113)
              %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc113)
              %52 = cir.binop(sub, %49, %51) : !u64i loc(#loc283)
              %53 = cir.binop(mul, %45, %52) : !u64i loc(#loc284)
              %54 = cir.const #cir.int<0> : !s32i loc(#loc115)
              %55 = cir.call @recv(%40, %44, %53, %54) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc116)
              %56 = cir.cast(integral, %55 : !s64i), !s32i loc(#loc116)
              cir.store %56, %11 : !s32i, !cir.ptr<!s32i> loc(#loc285)
              cir.scope {
                %75 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc121)
                %76 = cir.const #cir.int<1> : !s32i loc(#loc122)
                %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc122)
                %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc287)
                %79 = cir.ternary(%78, true {
                  %80 = cir.const #true loc(#loc123)
                  cir.yield %80 : !cir.bool loc(#loc123)
                }, false {
                  %80 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc124)
                  %81 = cir.const #cir.int<0> : !s32i loc(#loc125)
                  %82 = cir.cmp(eq, %80, %81) : !s32i, !cir.bool loc(#loc288)
                  %83 = cir.ternary(%82, true {
                    %84 = cir.const #true loc(#loc123)
                    cir.yield %84 : !cir.bool loc(#loc123)
                  }, false {
                    %84 = cir.const #false loc(#loc123)
                    cir.yield %84 : !cir.bool loc(#loc123)
                  }) : (!cir.bool) -> !cir.bool loc(#loc123)
                  cir.yield %83 : !cir.bool loc(#loc123)
                }) : (!cir.bool) -> !cir.bool loc(#loc123)
                cir.if %79 {
                  cir.break loc(#loc127)
                } loc(#loc289)
              } loc(#loc286)
              %57 = cir.const #cir.int<0> : !s32i loc(#loc128)
              %58 = cir.cast(integral, %57 : !s32i), !s8i loc(#loc128)
              %59 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
              %60 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc130)
              %61 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc131)
              %62 = cir.cast(integral, %61 : !s32i), !u64i loc(#loc131)
              %63 = cir.const #cir.int<1> : !u64i loc(#loc290)
              %64 = cir.binop(div, %62, %63) : !u64i loc(#loc291)
              %65 = cir.binop(add, %60, %64) : !u64i loc(#loc292)
              %66 = cir.ptr_stride(%59 : !cir.ptr<!s8i>, %65 : !u64i), !cir.ptr<!s8i> loc(#loc134)
              cir.store %58, %66 : !s8i, !cir.ptr<!s8i> loc(#loc293)
              %67 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc135)
              %68 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
              %69 = cir.const #cir.int<13> : !s32i loc(#loc137)
              %70 = cir.call @strchr(%68, %69) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc135)
              cir.store %70, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc294)
              cir.scope {
                %75 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
                %76 = cir.cast(ptr_to_bool, %75 : !cir.ptr<!s8i>), !cir.bool loc(#loc142)
                cir.if %76 {
                  %77 = cir.const #cir.int<0> : !s32i loc(#loc144)
                  %78 = cir.cast(integral, %77 : !s32i), !s8i loc(#loc144)
                  %79 = cir.load deref %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc145)
                  cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc297)
                } loc(#loc296)
              } loc(#loc295)
              %71 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc147)
              %72 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc148)
              %73 = cir.const #cir.int<10> : !s32i loc(#loc149)
              %74 = cir.call @strchr(%72, %73) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc147)
              cir.store %74, %13 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc298)
              cir.scope {
                %75 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
                %76 = cir.cast(ptr_to_bool, %75 : !cir.ptr<!s8i>), !cir.bool loc(#loc154)
                cir.if %76 {
                  %77 = cir.const #cir.int<0> : !s32i loc(#loc156)
                  %78 = cir.cast(integral, %77 : !s32i), !s8i loc(#loc156)
                  %79 = cir.load deref %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc157)
                  cir.store %78, %79 : !s8i, !cir.ptr<!s8i> loc(#loc301)
                } loc(#loc300)
              } loc(#loc299)
            } loc(#loc264)
            cir.yield loc(#loc57)
          } while {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc159)
            %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc159)
            cir.condition(%22) loc(#loc159)
          } loc(#loc263)
        } loc(#loc263)
        cir.scope {
          %21 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc162)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc163)
          %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc163)
          %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc303)
          cir.if %24 {
            %25 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc165)
            %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc166)
          } loc(#loc304)
        } loc(#loc302)
      } loc(#loc257)
      %9 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc168)
      cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc305)
    } loc(#loc255)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc307)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc173)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc174)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc307)
      cir.scope {
        %9 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc309)
        %10 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc179)
        %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc24)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc24)
        %13 = cir.call @popen(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc180)
        cir.store %13, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc310)
        cir.scope {
          %14 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc185)
          %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc186)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc186)
          %17 = cir.cmp(ne, %14, %16) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc312)
          cir.if %17 {
            %18 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc188)
            %19 = cir.call @pclose(%18) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc189)
          } loc(#loc313)
        } loc(#loc311)
      } loc(#loc308)
    } loc(#loc306)
    cir.return loc(#loc28)
  } loc(#loc250)
  cir.func no_proto @CWE78_OS_Command_Injection__char_connect_socket_popen_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc315)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc192)
    cir.return loc(#loc191)
  } loc(#loc314)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc316)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc196)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc318)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc319)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc320)
    %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc238)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc319)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc320)
    %4 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc238)
    cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc238)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc205)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc321)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc323)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc210)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc211)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc323)
      %9 = cir.get_global @strcat : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc212)
      %10 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc213)
      %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc196)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc196)
      %13 = cir.call @strcat(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc212)
      %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc214)
      %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc215)
      cir.store %14, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc324)
    } loc(#loc322)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc326)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc220)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc221)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc326)
      cir.scope {
        %9 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc328)
        %10 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc226)
        %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc227)
        %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc227)
        %13 = cir.call @popen(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc228)
        cir.store %13, %9 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc329)
        cir.scope {
          %14 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc233)
          %15 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc234)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc234)
          %17 = cir.cmp(ne, %14, %16) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc331)
          cir.if %17 {
            %18 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc236)
            %19 = cir.call @pclose(%18) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc237)
          } loc(#loc332)
        } loc(#loc330)
      } loc(#loc327)
    } loc(#loc325)
    cir.return loc(#loc198)
  } loc(#loc317)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":161:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":161:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":64:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":64:26)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc9 = loc("/usr/include/arpa/inet.h":34:1)
#loc10 = loc("/usr/include/arpa/inet.h":34:47)
#loc11 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":95:53)
#loc12 = loc("/usr/include/netinet/in.h":402:1)
#loc13 = loc("/usr/include/netinet/in.h":403:40)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc17 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc18 = loc("/usr/include/string.h":246:1)
#loc19 = loc("/usr/include/string.h":247:33)
#loc20 = loc("/usr/include/unistd.h":358:1)
#loc21 = loc("/usr/include/unistd.h":358:27)
#loc22 = loc("/usr/include/stdio.h":903:1)
#loc23 = loc("/usr/include/stdio.h":904:3)
#loc24 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":142:32)
#loc25 = loc("/usr/include/stdio.h":897:1)
#loc26 = loc("/usr/include/stdio.h":897:36)
#loc27 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":59:1)
#loc28 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":149:1)
#loc29 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":61:5)
#loc30 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":61:12)
#loc31 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":62:5)
#loc32 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":62:25)
#loc33 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":63:5)
#loc34 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":63:25)
#loc35 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":65:12)
#loc36 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":65:5)
#loc37 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":66:5)
#loc38 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":136:5)
#loc39 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":67:9)
#loc40 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":67:24)
#loc41 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":67:23)
#loc42 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":68:9)
#loc43 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":134:9)
#loc44 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":73:13)
#loc45 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":73:17)
#loc46 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":74:13)
#loc47 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":74:32)
#loc48 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":75:13)
#loc49 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":75:19)
#loc50 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":76:13)
#loc51 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":76:36)
#loc52 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":77:13)
#loc53 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":77:41)
#loc54 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":77:30)
#loc55 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":77:37)
#loc56 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":78:13)
#loc57 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":123:21)
#loc58 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":79:13)
#loc59 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":122:13)
#loc60 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":88:40)
#loc61 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":88:49)
#loc62 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":88:62)
#loc63 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":88:33)
#loc64 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":88:17)
#loc65 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":88:73)
#loc66 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":89:17)
#loc67 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":92:17)
#loc68 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":89:21)
#loc69 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":89:38)
#loc70 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":90:17)
#loc71 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":91:21)
#loc72 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":93:24)
#loc73 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":93:25)
#loc74 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":93:34)
#loc75 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":93:37)
#loc76 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":93:51)
#loc77 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":93:17)
#loc78 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":93:52)
#loc79 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":94:38)
#loc80 = loc("/usr/include/netinet/in.h":249:5)
#loc81 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":94:17)
#loc82 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":95:43)
#loc83 = loc("/usr/include/netinet/in.h":251:20)
#loc84 = loc("/usr/include/netinet/in.h":33:15)
#loc85 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":95:17)
#loc86 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":95:63)
#loc87 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":96:42)
#loc88 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":96:36)
#loc89 = loc("/usr/include/netinet/in.h":250:15)
#loc90 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":96:17)
#loc91 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":96:50)
#loc92 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":97:17)
#loc93 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":100:17)
#loc94 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":97:29)
#loc95 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":97:62)
#loc96 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":97:63)
#loc97 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":97:72)
#loc98 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":97:86)
#loc99 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":97:21)
#loc100 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":97:92)
#loc101 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":98:17)
#loc102 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":99:21)
#loc103 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:35)
#loc104 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:59)
#loc105 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:66)
#loc106 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:64)
#loc107 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:50)
#loc108 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:73)
#loc109 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:76)
#loc110 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:87)
#loc111 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:92)
#loc112 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:98)
#loc113 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:108)
#loc114 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:109)
#loc115 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:112)
#loc116 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:30)
#loc117 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:17)
#loc118 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":104:113)
#loc119 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":105:17)
#loc120 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":108:17)
#loc121 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":105:21)
#loc122 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":105:35)
#loc123 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":105:48)
#loc124 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":105:51)
#loc125 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":105:65)
#loc126 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":106:17)
#loc127 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":107:21)
#loc128 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":110:61)
#loc129 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":110:17)
#loc130 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":110:22)
#loc131 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":110:32)
#loc132 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":110:45)
#loc133 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":110:56)
#loc134 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":110:57)
#loc135 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":112:27)
#loc136 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":112:34)
#loc137 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":112:40)
#loc138 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":112:17)
#loc139 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":112:44)
#loc140 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":113:17)
#loc141 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":116:17)
#loc142 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":113:21)
#loc143 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":114:17)
#loc144 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":115:32)
#loc145 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":115:22)
#loc146 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":115:21)
#loc147 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":117:27)
#loc148 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":117:34)
#loc149 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":117:40)
#loc150 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":117:17)
#loc151 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":117:44)
#loc152 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":118:17)
#loc153 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":121:17)
#loc154 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":118:21)
#loc155 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":119:17)
#loc156 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":120:32)
#loc157 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":120:22)
#loc158 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":120:21)
#loc159 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":123:20)
#loc160 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":124:13)
#loc161 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":127:13)
#loc162 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":124:17)
#loc163 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":124:34)
#loc164 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":125:13)
#loc165 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":126:30)
#loc166 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":126:17)
#loc167 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":135:21)
#loc168 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":135:10)
#loc169 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":135:9)
#loc170 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":137:5)
#loc171 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":148:5)
#loc172 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":138:9)
#loc173 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":138:24)
#loc174 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":138:23)
#loc175 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":139:9)
#loc176 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":147:9)
#loc177 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":140:13)
#loc178 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":140:19)
#loc179 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":142:26)
#loc180 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":142:20)
#loc181 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":142:13)
#loc182 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":142:35)
#loc183 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":143:13)
#loc184 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":146:13)
#loc185 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":143:17)
#loc186 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":143:25)
#loc187 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":144:13)
#loc188 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":145:24)
#loc189 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":145:17)
#loc190 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":183:1)
#loc191 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":186:1)
#loc192 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":185:5)
#loc193 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":185:13)
#loc194 = loc("/usr/include/string.h":149:1)
#loc195 = loc("/usr/include/string.h":150:14)
#loc196 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":166:22)
#loc197 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":156:1)
#loc198 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":181:1)
#loc199 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":158:5)
#loc200 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":158:12)
#loc201 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":159:5)
#loc202 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":159:25)
#loc203 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":160:5)
#loc204 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":160:25)
#loc205 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":162:12)
#loc206 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":162:5)
#loc207 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":163:5)
#loc208 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":168:5)
#loc209 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":164:9)
#loc210 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":164:24)
#loc211 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":164:23)
#loc212 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":166:9)
#loc213 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":166:16)
#loc214 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":167:21)
#loc215 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":167:10)
#loc216 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":167:9)
#loc217 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":169:5)
#loc218 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":180:5)
#loc219 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":170:9)
#loc220 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":170:24)
#loc221 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":170:23)
#loc222 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":171:9)
#loc223 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":179:9)
#loc224 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":172:13)
#loc225 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":172:19)
#loc226 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":174:26)
#loc227 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":174:32)
#loc228 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":174:20)
#loc229 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":174:13)
#loc230 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":174:35)
#loc231 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":175:13)
#loc232 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":178:13)
#loc233 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":175:17)
#loc234 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":175:25)
#loc235 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":176:13)
#loc236 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":177:24)
#loc237 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_32.c":177:17)
#loc238 = loc(fused[#loc1, #loc2])
#loc239 = loc(fused[#loc3, #loc4])
#loc240 = loc(fused[#loc5, #loc6])
#loc241 = loc(fused[#loc7, #loc8])
#loc242 = loc(fused[#loc9, #loc10])
#loc243 = loc(fused[#loc12, #loc13])
#loc244 = loc(fused[#loc14, #loc15])
#loc245 = loc(fused[#loc16, #loc17])
#loc246 = loc(fused[#loc18, #loc19])
#loc247 = loc(fused[#loc20, #loc21])
#loc248 = loc(fused[#loc22, #loc23])
#loc249 = loc(fused[#loc25, #loc26])
#loc250 = loc(fused[#loc27, #loc28])
#loc251 = loc(fused[#loc29, #loc30])
#loc252 = loc(fused[#loc31, #loc32])
#loc253 = loc(fused[#loc33, #loc34])
#loc254 = loc(fused[#loc36, #loc35])
#loc255 = loc(fused[#loc37, #loc38])
#loc256 = loc(fused[#loc39, #loc40])
#loc257 = loc(fused[#loc42, #loc43])
#loc258 = loc(fused[#loc44, #loc45])
#loc259 = loc(fused[#loc46, #loc47])
#loc260 = loc(fused[#loc48, #loc49])
#loc261 = loc(fused[#loc50, #loc51])
#loc262 = loc(fused[#loc52, #loc53])
#loc263 = loc(fused[#loc56, #loc57])
#loc264 = loc(fused[#loc58, #loc59])
#loc265 = loc(fused[#loc64, #loc65])
#loc266 = loc(fused[#loc66, #loc67])
#loc267 = loc(fused[#loc68, #loc69])
#loc268 = loc(fused[#loc70, #loc67])
#loc269 = loc(fused[#loc72, #loc73])
#loc270 = loc(fused[#loc75, #loc76])
#loc271 = loc(fused[#loc77, #loc78])
#loc272 = loc(fused[#loc81, #loc79])
#loc273 = loc(fused[#loc85, #loc86])
#loc274 = loc(fused[#loc90, #loc91])
#loc275 = loc(fused[#loc92, #loc93])
#loc276 = loc(fused[#loc95, #loc96])
#loc277 = loc(fused[#loc97, #loc98])
#loc278 = loc(fused[#loc99, #loc100])
#loc279 = loc(fused[#loc101, #loc93])
#loc280 = loc(fused[#loc107, #loc108])
#loc281 = loc(fused[#loc109, #loc110])
#loc282 = loc(fused[#loc111, #loc112])
#loc283 = loc(fused[#loc111, #loc113])
#loc284 = loc(fused[#loc109, #loc114])
#loc285 = loc(fused[#loc117, #loc118])
#loc286 = loc(fused[#loc119, #loc120])
#loc287 = loc(fused[#loc121, #loc122])
#loc288 = loc(fused[#loc124, #loc125])
#loc289 = loc(fused[#loc126, #loc120])
#loc290 = loc(fused[#loc132, #loc133])
#loc291 = loc(fused[#loc131, #loc133])
#loc292 = loc(fused[#loc130, #loc133])
#loc293 = loc(fused[#loc129, #loc128])
#loc294 = loc(fused[#loc138, #loc139])
#loc295 = loc(fused[#loc140, #loc141])
#loc296 = loc(fused[#loc143, #loc141])
#loc297 = loc(fused[#loc146, #loc144])
#loc298 = loc(fused[#loc150, #loc151])
#loc299 = loc(fused[#loc152, #loc153])
#loc300 = loc(fused[#loc155, #loc153])
#loc301 = loc(fused[#loc158, #loc156])
#loc302 = loc(fused[#loc160, #loc161])
#loc303 = loc(fused[#loc162, #loc163])
#loc304 = loc(fused[#loc164, #loc161])
#loc305 = loc(fused[#loc169, #loc167])
#loc306 = loc(fused[#loc170, #loc171])
#loc307 = loc(fused[#loc172, #loc173])
#loc308 = loc(fused[#loc175, #loc176])
#loc309 = loc(fused[#loc177, #loc178])
#loc310 = loc(fused[#loc181, #loc182])
#loc311 = loc(fused[#loc183, #loc184])
#loc312 = loc(fused[#loc185, #loc186])
#loc313 = loc(fused[#loc187, #loc184])
#loc314 = loc(fused[#loc190, #loc191])
#loc315 = loc(fused[#loc192, #loc193])
#loc316 = loc(fused[#loc194, #loc195])
#loc317 = loc(fused[#loc197, #loc198])
#loc318 = loc(fused[#loc199, #loc200])
#loc319 = loc(fused[#loc201, #loc202])
#loc320 = loc(fused[#loc203, #loc204])
#loc321 = loc(fused[#loc206, #loc205])
#loc322 = loc(fused[#loc207, #loc208])
#loc323 = loc(fused[#loc209, #loc210])
#loc324 = loc(fused[#loc216, #loc214])
#loc325 = loc(fused[#loc217, #loc218])
#loc326 = loc(fused[#loc219, #loc220])
#loc327 = loc(fused[#loc222, #loc223])
#loc328 = loc(fused[#loc224, #loc225])
#loc329 = loc(fused[#loc229, #loc230])
#loc330 = loc(fused[#loc231, #loc232])
#loc331 = loc(fused[#loc233, #loc234])
#loc332 = loc(fused[#loc235, #loc232])
