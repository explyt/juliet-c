!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc8 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":59:72)
#loc9 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":59:81)
#loc32 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":78:76)
#loc33 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":78:85)
#loc58 = loc(fused[#loc8, #loc9])
#loc67 = loc(fused[#loc32, #loc33])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc55)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc3)
  cir.func private  @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc56)
  cir.func  @CWE78_OS_Command_Injection__char_connect_socket_popen_63b_badSink(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc8, #loc9])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc58)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc59)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc12)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc11)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc59)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc61)
      %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
      %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc3)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc3)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc19)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc62)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc24)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc25)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc25)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc64)
        %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc26)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc28)
          %15 = cir.call @pclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc29)
        } loc(#loc65)
      } loc(#loc63)
    } loc(#loc60)
    cir.return loc(#loc7)
  } loc(#loc57)
  cir.func  @CWE78_OS_Command_Injection__char_connect_socket_popen_63b_goodG2BSink(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc32, #loc33])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr", init] {alignment = 8 : i64} loc(#loc67)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc68)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc36)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc35)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc68)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc70)
      %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
      %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc43)
      %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc43)
      %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc44)
      cir.store %8, %4 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc71)
      cir.scope {
        %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc49)
        %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc50)
        %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc50)
        %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !s32i loc(#loc73)
        %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc51)
        cir.if %13 {
          %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc53)
          %15 = cir.call @pclose(%14) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc54)
        } loc(#loc74)
      } loc(#loc72)
    } loc(#loc69)
    cir.return loc(#loc31)
  } loc(#loc66)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":0:0)
#loc1 = loc("/usr/include/stdio.h":903:1)
#loc2 = loc("/usr/include/stdio.h":904:3)
#loc3 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":65:28)
#loc4 = loc("/usr/include/stdio.h":897:1)
#loc5 = loc("/usr/include/stdio.h":897:36)
#loc6 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":59:1)
#loc7 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":71:1)
#loc10 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":61:5)
#loc11 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":61:20)
#loc12 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":60:1)
#loc13 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":61:19)
#loc14 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":62:5)
#loc15 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":70:5)
#loc16 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":63:9)
#loc17 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":63:15)
#loc18 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":65:22)
#loc19 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":65:16)
#loc20 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":65:9)
#loc21 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":65:31)
#loc22 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":66:9)
#loc23 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":69:9)
#loc24 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":66:13)
#loc25 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":66:21)
#loc26 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":66:18)
#loc27 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":67:9)
#loc28 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":68:20)
#loc29 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":68:13)
#loc30 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":78:1)
#loc31 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":90:1)
#loc34 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":80:5)
#loc35 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":80:20)
#loc36 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":79:1)
#loc37 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":80:19)
#loc38 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":81:5)
#loc39 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":89:5)
#loc40 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":82:9)
#loc41 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":82:15)
#loc42 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":84:22)
#loc43 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":84:28)
#loc44 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":84:16)
#loc45 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":84:9)
#loc46 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":84:31)
#loc47 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":85:9)
#loc48 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":88:9)
#loc49 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":85:13)
#loc50 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":85:21)
#loc51 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":85:18)
#loc52 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":86:9)
#loc53 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":87:20)
#loc54 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_63b.c":87:13)
#loc55 = loc(fused[#loc1, #loc2])
#loc56 = loc(fused[#loc4, #loc5])
#loc57 = loc(fused[#loc6, #loc7])
#loc59 = loc(fused[#loc10, #loc11])
#loc60 = loc(fused[#loc14, #loc15])
#loc61 = loc(fused[#loc16, #loc17])
#loc62 = loc(fused[#loc20, #loc21])
#loc63 = loc(fused[#loc22, #loc23])
#loc64 = loc(fused[#loc24, #loc25])
#loc65 = loc(fused[#loc27, #loc23])
#loc66 = loc(fused[#loc30, #loc31])
#loc68 = loc(fused[#loc34, #loc35])
#loc69 = loc(fused[#loc38, #loc39])
#loc70 = loc(fused[#loc40, #loc41])
#loc71 = loc(fused[#loc45, #loc46])
#loc72 = loc(fused[#loc47, #loc48])
#loc73 = loc(fused[#loc49, #loc50])
#loc74 = loc(fused[#loc52, #loc48])
