!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc54 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":77:10)
#loc55 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":77:14)
#loc56 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":77:20)
#loc57 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":77:32)
#loc144 = loc(fused[#loc54, #loc55])
#loc145 = loc(fused[#loc56, #loc57])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc124)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc125)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc126)
  cir.func private @printDoubleLine(!cir.double) loc(#loc127)
  cir.func no_proto @CWE758_Undefined_Behavior__double_pointer_malloc_use_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc129)
    %1 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data", init] {alignment = 8 : i64} loc(#loc130)
    cir.br ^bb1 loc(#loc131)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc131)
  ^bb2:  // pred: ^bb1
    %2 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc17)
    cir.brcond %3 ^bb3, ^bb10 loc(#loc17)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc132)
  ^bb4:  // pred: ^bb3
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc20)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc133)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc134)
    cir.store %7, %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>> loc(#loc129)
    cir.br ^bb5 loc(#loc135)
  ^bb5:  // pred: ^bb4
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc25)
    %9 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc26)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc26)
    %11 = cir.cmp(eq, %8, %10) : !cir.ptr<!cir.ptr<!cir.double>>, !cir.bool loc(#loc136)
    cir.brcond %11 ^bb6, ^bb7 loc(#loc137)
  ^bb6:  // pred: ^bb5
    %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc28)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc30)
    cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr) loc(#loc28)
    cir.br ^bb7 loc(#loc24)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc24)
  ^bb8:  // pred: ^bb7
    %15 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc14)
    %16 = cir.load %15 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc31)
    cir.store %16, %1 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc130)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc32)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!cir.ptr<!cir.double>>), !cir.ptr<!void> loc(#loc32)
    cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc33)
    %19 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc34)
    %20 = cir.load %19 : !cir.ptr<!cir.double>, !cir.double loc(#loc35)
    cir.call @printDoubleLine(%20) : (!cir.double) -> () loc(#loc36)
    cir.br ^bb9 loc(#loc19)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc37)
  ^bb10:  // 2 preds: ^bb2, ^bb9
    cir.br ^bb11 loc(#loc16)
  ^bb11:  // pred: ^bb10
    cir.return loc(#loc10)
  } loc(#loc128)
  cir.func no_proto @CWE758_Undefined_Behavior__double_pointer_malloc_use_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc139)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc39)
  } loc(#loc138)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc140)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc141)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc142)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc51)
  cir.func @main(%arg0: !s32i loc(fused[#loc54, #loc55]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc56, #loc57])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc144)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc145)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc53)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc58)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc58)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc59)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc60)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc60)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc61)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc48)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %8 = cir.get_global @CWE758_Undefined_Behavior__double_pointer_malloc_use_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc146)
    cir.call @CWE758_Undefined_Behavior__double_pointer_malloc_use_16_good() : () -> () loc(#loc63)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc49)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc50)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %13 = cir.get_global @CWE758_Undefined_Behavior__double_pointer_malloc_use_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc147)
    cir.call @CWE758_Undefined_Behavior__double_pointer_malloc_use_16_bad() : () -> () loc(#loc67)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc51)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc70)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc148)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc148)
    cir.return %17 : !s32i loc(#loc148)
  } loc(#loc143)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc150)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc151)
    %2 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data", init] {alignment = 8 : i64} loc(#loc152)
    cir.br ^bb1 loc(#loc153)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc153)
  ^bb2:  // pred: ^bb1
    %3 = cir.const #cir.int<1> : !s32i loc(#loc82)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc82)
    cir.brcond %4 ^bb3, ^bb16 loc(#loc82)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc154)
  ^bb4:  // pred: ^bb3
    %5 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc85)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc155)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc85)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc156)
    cir.store %8, %1 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>> loc(#loc151)
    cir.br ^bb5 loc(#loc157)
  ^bb5:  // pred: ^bb4
    %9 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc90)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc91)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!cir.double>> loc(#loc91)
    %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!cir.ptr<!cir.double>>, !cir.bool loc(#loc158)
    cir.brcond %12 ^bb6, ^bb7 loc(#loc159)
  ^bb6:  // pred: ^bb5
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc93)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc95)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc93)
    cir.br ^bb7 loc(#loc89)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc89)
  ^bb8:  // pred: ^bb7
    %16 = cir.const #cir.int<8> : !u64i loc(#loc160)
    %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc98)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc161)
    cir.store %18, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc162)
    cir.br ^bb9 loc(#loc163)
  ^bb9:  // pred: ^bb8
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc103)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc104)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc104)
    %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!cir.double>, !cir.bool loc(#loc164)
    cir.brcond %22 ^bb10, ^bb11 loc(#loc165)
  ^bb10:  // pred: ^bb9
    %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc106)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc108)
    cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc106)
    cir.br ^bb11 loc(#loc102)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc102)
  ^bb12:  // pred: ^bb11
    %26 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc109)
    %27 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc110)
    cir.store %26, %27 : !cir.double, !cir.ptr<!cir.double> loc(#loc166)
    %28 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc112)
    %29 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc113)
    cir.store %28, %29 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc167)
    cir.br ^bb13 loc(#loc168)
  ^bb13:  // pred: ^bb12
    %30 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc79)
    %31 = cir.load %30 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc117)
    cir.store %31, %2 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc152)
    %32 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc118)
    %33 = cir.load %32 : !cir.ptr<!cir.double>, !cir.double loc(#loc119)
    cir.call @printDoubleLine(%33) : (!cir.double) -> () loc(#loc120)
    cir.br ^bb14 loc(#loc116)
  ^bb14:  // pred: ^bb13
    %34 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.double>>>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc121)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!cir.ptr<!cir.double>>), !cir.ptr<!void> loc(#loc121)
    cir.call @free(%35) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc122)
    cir.br ^bb15 loc(#loc84)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc123)
  ^bb16:  // 2 preds: ^bb2, ^bb15
    cir.br ^bb17 loc(#loc81)
  ^bb17:  // pred: ^bb16
    cir.return loc(#loc73)
  } loc(#loc149)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":38:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":38:41)
#loc9 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":20:1)
#loc10 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":33:1)
#loc11 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":25:13)
#loc12 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":25:69)
#loc13 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":27:13)
#loc14 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":27:30)
#loc15 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":22:5)
#loc16 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":32:5)
#loc17 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":22:11)
#loc18 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":24:9)
#loc19 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":30:9)
#loc20 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":25:46)
#loc21 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":25:53)
#loc22 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":25:68)
#loc23 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":26:13)
#loc24 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":26:44)
#loc25 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":26:17)
#loc26 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":26:28)
#loc27 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":26:34)
#loc28 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":26:35)
#loc29 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":26:41)
#loc30 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":26:40)
#loc31 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":27:29)
#loc32 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":28:18)
#loc33 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":28:13)
#loc34 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":29:30)
#loc35 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":29:29)
#loc36 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":29:13)
#loc37 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":31:9)
#loc38 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":63:1)
#loc39 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":66:1)
#loc40 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":65:5)
#loc41 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":65:11)
#loc42 = loc("/usr/include/stdlib.h":575:1)
#loc43 = loc("/usr/include/stdlib.h":575:41)
#loc44 = loc("/usr/include/time.h":76:1)
#loc45 = loc("/usr/include/time.h":76:38)
#loc46 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc47 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc48 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":82:15)
#loc49 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":84:15)
#loc50 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":87:15)
#loc51 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":89:15)
#loc52 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":77:1)
#loc53 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":92:1)
#loc58 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":78:1)
#loc59 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":80:27)
#loc60 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":80:22)
#loc61 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":80:5)
#loc62 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":82:5)
#loc63 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":83:5)
#loc64 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":83:66)
#loc65 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":84:5)
#loc66 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":87:5)
#loc67 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":88:5)
#loc68 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":88:65)
#loc69 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":89:5)
#loc70 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":91:12)
#loc71 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":91:5)
#loc72 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":40:1)
#loc73 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":61:1)
#loc74 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":45:13)
#loc75 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":45:22)
#loc76 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":46:13)
#loc77 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":46:69)
#loc78 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":54:17)
#loc79 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":54:34)
#loc80 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":42:5)
#loc81 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":60:5)
#loc82 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":42:11)
#loc83 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":44:9)
#loc84 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":58:9)
#loc85 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":46:46)
#loc86 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":46:53)
#loc87 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":46:68)
#loc88 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":47:13)
#loc89 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":47:44)
#loc90 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":47:17)
#loc91 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":47:28)
#loc92 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":47:34)
#loc93 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":47:35)
#loc94 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":47:41)
#loc95 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":47:40)
#loc96 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":49:37)
#loc97 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":49:50)
#loc98 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":49:30)
#loc99 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":49:51)
#loc100 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":49:13)
#loc101 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":50:13)
#loc102 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":50:41)
#loc103 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":50:17)
#loc104 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":50:25)
#loc105 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":50:31)
#loc106 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":50:32)
#loc107 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":50:38)
#loc108 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":50:37)
#loc109 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":51:21)
#loc110 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":51:14)
#loc111 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":51:13)
#loc112 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":52:24)
#loc113 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":52:14)
#loc114 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":52:13)
#loc115 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":53:13)
#loc116 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":56:13)
#loc117 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":54:33)
#loc118 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":55:34)
#loc119 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":55:33)
#loc120 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":55:17)
#loc121 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":57:18)
#loc122 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":57:13)
#loc123 = loc("CWE758_Undefined_Behavior__double_pointer_malloc_use_16.c":59:9)
#loc124 = loc(fused[#loc1, #loc2])
#loc125 = loc(fused[#loc3, #loc4])
#loc126 = loc(fused[#loc5, #loc6])
#loc127 = loc(fused[#loc7, #loc8])
#loc128 = loc(fused[#loc9, #loc10])
#loc129 = loc(fused[#loc11, #loc12])
#loc130 = loc(fused[#loc13, #loc14])
#loc131 = loc(fused[#loc15, #loc16])
#loc132 = loc(fused[#loc18, #loc19])
#loc133 = loc(fused[#loc21, #loc22])
#loc134 = loc(fused[#loc20, #loc12])
#loc135 = loc(fused[#loc23, #loc24])
#loc136 = loc(fused[#loc25, #loc26])
#loc137 = loc(fused[#loc27, #loc24])
#loc138 = loc(fused[#loc38, #loc39])
#loc139 = loc(fused[#loc40, #loc41])
#loc140 = loc(fused[#loc42, #loc43])
#loc141 = loc(fused[#loc44, #loc45])
#loc142 = loc(fused[#loc46, #loc47])
#loc143 = loc(fused[#loc52, #loc53])
#loc146 = loc(fused[#loc63, #loc64])
#loc147 = loc(fused[#loc67, #loc68])
#loc148 = loc(fused[#loc71, #loc70])
#loc149 = loc(fused[#loc72, #loc73])
#loc150 = loc(fused[#loc74, #loc75])
#loc151 = loc(fused[#loc76, #loc77])
#loc152 = loc(fused[#loc78, #loc79])
#loc153 = loc(fused[#loc80, #loc81])
#loc154 = loc(fused[#loc83, #loc84])
#loc155 = loc(fused[#loc86, #loc87])
#loc156 = loc(fused[#loc85, #loc77])
#loc157 = loc(fused[#loc88, #loc89])
#loc158 = loc(fused[#loc90, #loc91])
#loc159 = loc(fused[#loc92, #loc89])
#loc160 = loc(fused[#loc96, #loc97])
#loc161 = loc(fused[#loc98, #loc99])
#loc162 = loc(fused[#loc100, #loc99])
#loc163 = loc(fused[#loc101, #loc102])
#loc164 = loc(fused[#loc103, #loc104])
#loc165 = loc(fused[#loc105, #loc102])
#loc166 = loc(fused[#loc111, #loc109])
#loc167 = loc(fused[#loc114, #loc112])
#loc168 = loc(fused[#loc115, #loc116])
