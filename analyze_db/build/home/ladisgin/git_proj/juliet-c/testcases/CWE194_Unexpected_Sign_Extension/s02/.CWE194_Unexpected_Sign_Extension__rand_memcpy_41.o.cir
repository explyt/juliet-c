!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc5 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":21:63)
#loc6 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":21:69)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":45:19)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":53:67)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":53:73)
#loc104 = loc(fused[#loc5, #loc6])
#loc121 = loc(fused[#loc53, #loc54])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc102)
  cir.func @CWE194_Unexpected_Sign_Extension__rand_memcpy_41_badSink(%arg0: !s16i loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc105)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc106)
    %2 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc104)
    cir.store %arg0, %2 : !s16i, !cir.ptr<!s16i> loc(#loc11)
    cir.br ^bb1 loc(#loc107)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc106)
    cir.store %3, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc106)
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc14)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc14)
    %6 = cir.const #cir.int<65> : !s32i loc(#loc15)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc16)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc16)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc16)
    cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc108)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc20)
    %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc20)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc21)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc21)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc23)
    cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc109)
    cir.br ^bb2 loc(#loc110)
  ^bb2:  // pred: ^bb1
    %18 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc26)
    %19 = cir.cast(integral, %18 : !s16i), !s32i loc(#loc26)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc27)
    %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc111)
    cir.brcond %21 ^bb3, ^bb4 loc(#loc112)
  ^bb3:  // pred: ^bb2
    %22 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc29)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc29)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc30)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc30)
    %26 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc31)
    %27 = cir.cast(integral, %26 : !s16i), !u64i loc(#loc31)
    cir.libc.memcpy %27 bytes from %25 to %23 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc113)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc34)
    %30 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc35)
    %31 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc36)
    %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !s16i), !cir.ptr<!s8i> loc(#loc36)
    cir.store %29, %32 : !s8i, !cir.ptr<!s8i> loc(#loc114)
    cir.br ^bb4 loc(#loc25)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc25)
  ^bb5:  // pred: ^bb4
    %33 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc38)
    cir.br ^bb6 loc(#loc13)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc4)
  } loc(#loc103)
  cir.func private @rand() -> !s32i extra(#fn_attr1) loc(#loc115)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__rand_memcpy_41_bad() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc117)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc45)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc45)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc118)
    %3 = cir.call @rand() : () -> !s32i extra(#fn_attr1) loc(#loc47)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc47)
    %5 = cir.binop(and, %3, %4) : !s32i loc(#loc47)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc47)
    cir.brcond %6 ^bb1, ^bb2 loc(#loc47)
  ^bb1:  // pred: ^bb0
    %7 = cir.call @rand() : () -> !s32i extra(#fn_attr1) loc(#loc47)
    %8 = cir.cast(integral, %7 : !s32i), !u32i loc(#loc47)
    %9 = cir.const #cir.int<30> : !s32i loc(#loc47)
    %10 = cir.shift(left, %8 : !u32i, %9 : !s32i) -> !u32i loc(#loc47)
    %11 = cir.call @rand() : () -> !s32i extra(#fn_attr1) loc(#loc47)
    %12 = cir.cast(integral, %11 : !s32i), !u32i loc(#loc47)
    %13 = cir.const #cir.int<15> : !s32i loc(#loc47)
    %14 = cir.shift(left, %12 : !u32i, %13 : !s32i) -> !u32i loc(#loc47)
    %15 = cir.binop(xor, %10, %14) : !u32i loc(#loc47)
    %16 = cir.call @rand() : () -> !s32i extra(#fn_attr1) loc(#loc47)
    %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc47)
    %18 = cir.binop(xor, %15, %17) : !u32i loc(#loc47)
    cir.br ^bb3(%18 : !u32i) loc(#loc47)
  ^bb2:  // pred: ^bb0
    %19 = cir.call @rand() : () -> !s32i extra(#fn_attr1) loc(#loc47)
    %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc47)
    %21 = cir.const #cir.int<30> : !s32i loc(#loc47)
    %22 = cir.shift(left, %20 : !u32i, %21 : !s32i) -> !u32i loc(#loc47)
    %23 = cir.call @rand() : () -> !s32i extra(#fn_attr1) loc(#loc47)
    %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc47)
    %25 = cir.const #cir.int<15> : !s32i loc(#loc47)
    %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc47)
    %27 = cir.binop(xor, %22, %26) : !u32i loc(#loc47)
    %28 = cir.call @rand() : () -> !s32i extra(#fn_attr1) loc(#loc47)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc47)
    %30 = cir.binop(xor, %27, %29) : !u32i loc(#loc47)
    %31 = cir.unary(minus, %30) : !u32i, !u32i loc(#loc47)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc47)
    %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc47)
    %34 = cir.binop(sub, %31, %33) : !u32i loc(#loc47)
    cir.br ^bb3(%34 : !u32i) loc(#loc47)
  ^bb3(%35: !u32i loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":45:19)):  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc47)
  ^bb4:  // pred: ^bb3
    %36 = cir.cast(integral, %35 : !u32i), !s32i loc(#loc47)
    %37 = cir.cast(integral, %36 : !s32i), !s16i loc(#loc47)
    cir.store %37, %0 : !s16i, !cir.ptr<!s16i> loc(#loc119)
    %38 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc49)
    cir.call @CWE194_Unexpected_Sign_Extension__rand_memcpy_41_badSink(%38) : (!s16i) -> () loc(#loc50)
    cir.return loc(#loc42)
  } loc(#loc116)
  cir.func @CWE194_Unexpected_Sign_Extension__rand_memcpy_41_goodG2BSink(%arg0: !s16i loc(fused[#loc53, #loc54])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc122)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc123)
    %2 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data", init] {alignment = 2 : i64} loc(#loc121)
    cir.store %arg0, %2 : !s16i, !cir.ptr<!s16i> loc(#loc59)
    cir.br ^bb1 loc(#loc124)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc123)
    cir.store %3, %1 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc123)
    %4 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc62)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc62)
    %6 = cir.const #cir.int<65> : !s32i loc(#loc63)
    %7 = cir.const #cir.int<100> : !s32i loc(#loc64)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc65)
    %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc64)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc64)
    cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc125)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc68)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc69)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc70)
    %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc69)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc71)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc71)
    cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc126)
    cir.br ^bb2 loc(#loc127)
  ^bb2:  // pred: ^bb1
    %18 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc74)
    %19 = cir.cast(integral, %18 : !s16i), !s32i loc(#loc74)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc75)
    %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc128)
    cir.brcond %21 ^bb3, ^bb4 loc(#loc129)
  ^bb3:  // pred: ^bb2
    %22 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc77)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc77)
    %24 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc78)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc78)
    %26 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc79)
    %27 = cir.cast(integral, %26 : !s16i), !u64i loc(#loc79)
    cir.libc.memcpy %27 bytes from %25 to %23 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc130)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc82)
    %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc82)
    %30 = cir.load %2 : !cir.ptr<!s16i>, !s16i loc(#loc83)
    %31 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc84)
    %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !s16i), !cir.ptr<!s8i> loc(#loc84)
    cir.store %29, %32 : !s8i, !cir.ptr<!s8i> loc(#loc131)
    cir.br ^bb4 loc(#loc73)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc73)
  ^bb5:  // pred: ^bb4
    %33 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    cir.br ^bb6 loc(#loc61)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc52)
  } loc(#loc120)
  cir.func no_proto @CWE194_Unexpected_Sign_Extension__rand_memcpy_41_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc133)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc89)
    cir.return loc(#loc88)
  } loc(#loc132)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc135)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc95)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc95)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc136)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc97)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc98)
    %5 = cir.binop(sub, %3, %4) nsw : !s32i loc(#loc97)
    %6 = cir.cast(integral, %5 : !s32i), !s16i loc(#loc97)
    cir.store %6, %0 : !s16i, !cir.ptr<!s16i> loc(#loc137)
    %7 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc100)
    cir.call @CWE194_Unexpected_Sign_Extension__rand_memcpy_41_goodG2BSink(%7) : (!s16i) -> () loc(#loc101)
    cir.return loc(#loc92)
  } loc(#loc134)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":21:1)
#loc4 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":37:1)
#loc7 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":24:9)
#loc8 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":24:24)
#loc9 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":25:9)
#loc10 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":25:26)
#loc11 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":22:1)
#loc12 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":23:5)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":36:5)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":26:16)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":26:24)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":26:29)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":26:33)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":26:9)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":26:34)
#loc20 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":27:25)
#loc21 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":27:16)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":27:20)
#loc23 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":27:9)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":28:9)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":34:9)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":28:13)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":28:20)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":29:9)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":32:20)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":32:26)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":32:34)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":32:13)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":32:38)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":33:26)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":33:18)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":33:13)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":35:19)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":35:9)
#loc39 = loc("/usr/include/stdlib.h":573:1)
#loc40 = loc("/usr/include/stdlib.h":573:24)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":39:1)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":47:1)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":41:5)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":41:11)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":43:12)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":43:5)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":45:5)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":46:62)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":46:5)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":53:1)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":69:1)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":56:9)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":56:24)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":57:9)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":57:26)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":54:1)
#loc60 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":55:5)
#loc61 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":68:5)
#loc62 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":58:16)
#loc63 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":58:24)
#loc64 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":58:29)
#loc65 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":58:33)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":58:9)
#loc67 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":58:34)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":59:25)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":59:16)
#loc70 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":59:20)
#loc71 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":59:9)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":60:9)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":66:9)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":60:13)
#loc75 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":60:20)
#loc76 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":61:9)
#loc77 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":64:20)
#loc78 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":64:26)
#loc79 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":64:34)
#loc80 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":64:13)
#loc81 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":64:38)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":65:26)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":65:18)
#loc84 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":65:13)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":67:19)
#loc86 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":67:9)
#loc87 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":82:1)
#loc88 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":85:1)
#loc89 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":84:5)
#loc90 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":84:13)
#loc91 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":72:1)
#loc92 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":80:1)
#loc93 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":74:5)
#loc94 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":74:11)
#loc95 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":76:12)
#loc96 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":76:5)
#loc97 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":78:12)
#loc98 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":78:16)
#loc99 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":78:5)
#loc100 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":79:66)
#loc101 = loc("CWE194_Unexpected_Sign_Extension__rand_memcpy_41.c":79:5)
#loc102 = loc(fused[#loc1, #loc2])
#loc103 = loc(fused[#loc3, #loc4])
#loc105 = loc(fused[#loc7, #loc8])
#loc106 = loc(fused[#loc9, #loc10])
#loc107 = loc(fused[#loc12, #loc13])
#loc108 = loc(fused[#loc18, #loc19])
#loc109 = loc(fused[#loc23, #loc20])
#loc110 = loc(fused[#loc24, #loc25])
#loc111 = loc(fused[#loc26, #loc27])
#loc112 = loc(fused[#loc28, #loc25])
#loc113 = loc(fused[#loc32, #loc33])
#loc114 = loc(fused[#loc36, #loc34])
#loc115 = loc(fused[#loc39, #loc40])
#loc116 = loc(fused[#loc41, #loc42])
#loc117 = loc(fused[#loc43, #loc44])
#loc118 = loc(fused[#loc46, #loc45])
#loc119 = loc(fused[#loc48, #loc47])
#loc120 = loc(fused[#loc51, #loc52])
#loc122 = loc(fused[#loc55, #loc56])
#loc123 = loc(fused[#loc57, #loc58])
#loc124 = loc(fused[#loc60, #loc61])
#loc125 = loc(fused[#loc66, #loc67])
#loc126 = loc(fused[#loc71, #loc68])
#loc127 = loc(fused[#loc72, #loc73])
#loc128 = loc(fused[#loc74, #loc75])
#loc129 = loc(fused[#loc76, #loc73])
#loc130 = loc(fused[#loc80, #loc81])
#loc131 = loc(fused[#loc84, #loc82])
#loc132 = loc(fused[#loc87, #loc88])
#loc133 = loc(fused[#loc89, #loc90])
#loc134 = loc(fused[#loc91, #loc92])
#loc135 = loc(fused[#loc93, #loc94])
#loc136 = loc(fused[#loc96, #loc95])
#loc137 = loc(fused[#loc99, #loc98])
