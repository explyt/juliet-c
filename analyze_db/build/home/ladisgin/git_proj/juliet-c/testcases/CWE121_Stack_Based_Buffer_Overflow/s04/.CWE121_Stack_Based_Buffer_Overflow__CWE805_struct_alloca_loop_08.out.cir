!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":162:10)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":162:14)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":162:20)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":162:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc273 = loc(fused[#loc85, #loc86])
#loc274 = loc(fused[#loc87, #loc88])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc239)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc241)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc242)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc243)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc244)
    %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc245)
    %5 = cir.const #cir.int<50> : !s32i loc(#loc14)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc14)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc14)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc14)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %10 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc246)
    %11 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc14)
    cir.store %12, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc245)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc16)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc16)
    %15 = cir.const #cir.int<8> : !u64i loc(#loc16)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc16)
    %17 = cir.alloca !u8i, !cir.ptr<!u8i>, %16 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc16)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc16)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc16)
    cir.store %19, %10 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc246)
    cir.br ^bb1 loc(#loc247)
  ^bb1:  // pred: ^bb0
    %20 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc248)
    %21 = cir.call %20() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc19)
    %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %22 ^bb2, ^bb3 loc(#loc249)
  ^bb2:  // pred: ^bb1
    %23 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc22)
    cir.store %23, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc250)
    cir.br ^bb3 loc(#loc18)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc18)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc251)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc252)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc253)
  ^bb7:  // pred: ^bb6
    %24 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc30)
    cir.store %25, %1 : !u64i, !cir.ptr<!u64i> loc(#loc254)
    cir.br ^bb8 loc(#loc253)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %26 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc32)
    %27 = cir.const #cir.int<100> : !s32i loc(#loc33)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc33)
    %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc255)
    cir.brcond %29 ^bb9, ^bb13 loc(#loc34)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc256)
  ^bb10:  // pred: ^bb9
    %30 = cir.const #cir.int<0> : !s32i loc(#loc36)
    %31 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc37)
    %32 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc38)
    %33 = cir.ptr_stride(%32 : !cir.ptr<!ty__twoIntsStruct>, %31 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc38)
    %34 = cir.get_member %33[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc39)
    cir.store %30, %34 : !s32i, !cir.ptr<!s32i> loc(#loc257)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %36 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc41)
    %37 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc42)
    %38 = cir.ptr_stride(%37 : !cir.ptr<!ty__twoIntsStruct>, %36 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc42)
    %39 = cir.get_member %38[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc43)
    cir.store %35, %39 : !s32i, !cir.ptr<!s32i> loc(#loc258)
    cir.br ^bb11 loc(#loc29)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc29)
  ^bb12:  // pred: ^bb11
    %40 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc44)
    %41 = cir.unary(inc, %40) : !u64i, !u64i loc(#loc45)
    cir.store %41, %1 : !u64i, !cir.ptr<!u64i> loc(#loc259)
    cir.br ^bb8 loc(#loc253)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc29)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc27)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc260)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc261)
  ^bb17:  // pred: ^bb16
    %42 = cir.const #cir.int<0> : !s32i loc(#loc50)
    %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc50)
    cir.store %43, %2 : !u64i, !cir.ptr<!u64i> loc(#loc262)
    cir.br ^bb18 loc(#loc261)
  ^bb18:  // 2 preds: ^bb17, ^bb22
    %44 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc52)
    %45 = cir.const #cir.int<100> : !s32i loc(#loc53)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc53)
    %47 = cir.cmp(lt, %44, %46) : !u64i, !cir.bool loc(#loc263)
    cir.brcond %47 ^bb19, ^bb23 loc(#loc54)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc264)
  ^bb20:  // pred: ^bb19
    %48 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc56)
    %49 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc57)
    %50 = cir.ptr_stride(%48 : !cir.ptr<!ty__twoIntsStruct>, %49 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc58)
    %51 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc59)
    %52 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc60)
    %53 = cir.ptr_stride(%52 : !cir.ptr<!ty__twoIntsStruct>, %51 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc60)
    cir.copy %53 to %50 : !cir.ptr<!ty__twoIntsStruct> loc(#loc58)
    cir.br ^bb21 loc(#loc49)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc49)
  ^bb22:  // pred: ^bb21
    %54 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc61)
    %55 = cir.unary(inc, %54) : !u64i, !u64i loc(#loc62)
    cir.store %55, %2 : !u64i, !cir.ptr<!u64i> loc(#loc265)
    cir.br ^bb18 loc(#loc261)
  ^bb23:  // pred: ^bb18
    cir.br ^bb24 loc(#loc49)
  ^bb24:  // pred: ^bb23
    %56 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc63)
    %57 = cir.const #cir.int<0> : !s32i loc(#loc64)
    %58 = cir.ptr_stride(%56 : !cir.ptr<!ty__twoIntsStruct>, %57 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc65)
    cir.call @printStructLine(%58) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc66)
    cir.br ^bb25 loc(#loc47)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc25)
  ^bb26:  // pred: ^bb25
    cir.return loc(#loc4)
  } loc(#loc240)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc267)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc69)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc268)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc71)
    cir.return loc(#loc68)
  } loc(#loc266)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc269)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc270)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc271)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc79)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc80)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc81)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc82)
  cir.func @main(%arg0: !s32i loc(fused[#loc85, #loc86]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc87, #loc88])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc273)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc274)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc84)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc89)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc89)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc90)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc91)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc91)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc92)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc79)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc79)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc275)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08_good() : () -> () loc(#loc94)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc80)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc81)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc276)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08_bad() : () -> () loc(#loc98)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc82)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc100)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc101)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc277)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc277)
    cir.return %17 : !s32i loc(#loc277)
  } loc(#loc272)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc104)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc105)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc279)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc279)
    cir.return %2 : !s32i loc(#loc279)
  } loc(#loc278)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc107)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc281)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc282)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc283)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc284)
    %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc285)
    %5 = cir.const #cir.int<50> : !s32i loc(#loc119)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc119)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc119)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc119)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc119)
    %10 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc286)
    %11 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc119)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc119)
    cir.store %12, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc285)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc121)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc121)
    %15 = cir.const #cir.int<8> : !u64i loc(#loc121)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc121)
    %17 = cir.alloca !u8i, !cir.ptr<!u8i>, %16 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc121)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc121)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc121)
    cir.store %19, %10 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc286)
    cir.br ^bb1 loc(#loc287)
  ^bb1:  // pred: ^bb0
    %20 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc288)
    %21 = cir.call %20() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc124)
    %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc124)
    cir.brcond %22 ^bb2, ^bb3 loc(#loc289)
  ^bb2:  // pred: ^bb1
    %23 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc107)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc107)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc129)
    cir.br ^bb4 loc(#loc127)
  ^bb3:  // pred: ^bb1
    %25 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc130)
    cir.store %25, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc290)
    cir.br ^bb4 loc(#loc123)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc123)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc291)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc292)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc293)
  ^bb8:  // pred: ^bb7
    %26 = cir.const #cir.int<0> : !s32i loc(#loc138)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc138)
    cir.store %27, %1 : !u64i, !cir.ptr<!u64i> loc(#loc294)
    cir.br ^bb9 loc(#loc293)
  ^bb9:  // 2 preds: ^bb8, ^bb13
    %28 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc140)
    %29 = cir.const #cir.int<100> : !s32i loc(#loc141)
    %30 = cir.cast(integral, %29 : !s32i), !u64i loc(#loc141)
    %31 = cir.cmp(lt, %28, %30) : !u64i, !cir.bool loc(#loc295)
    cir.brcond %31 ^bb10, ^bb14 loc(#loc142)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc296)
  ^bb11:  // pred: ^bb10
    %32 = cir.const #cir.int<0> : !s32i loc(#loc144)
    %33 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc145)
    %34 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc146)
    %35 = cir.ptr_stride(%34 : !cir.ptr<!ty__twoIntsStruct>, %33 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc146)
    %36 = cir.get_member %35[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc39)
    cir.store %32, %36 : !s32i, !cir.ptr<!s32i> loc(#loc297)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc147)
    %38 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc148)
    %39 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc149)
    %40 = cir.ptr_stride(%39 : !cir.ptr<!ty__twoIntsStruct>, %38 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc149)
    %41 = cir.get_member %40[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc43)
    cir.store %37, %41 : !s32i, !cir.ptr<!s32i> loc(#loc298)
    cir.br ^bb12 loc(#loc137)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc137)
  ^bb13:  // pred: ^bb12
    %42 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc150)
    %43 = cir.unary(inc, %42) : !u64i, !u64i loc(#loc151)
    cir.store %43, %1 : !u64i, !cir.ptr<!u64i> loc(#loc299)
    cir.br ^bb9 loc(#loc293)
  ^bb14:  // pred: ^bb9
    cir.br ^bb15 loc(#loc137)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc135)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc300)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc301)
  ^bb18:  // pred: ^bb17
    %44 = cir.const #cir.int<0> : !s32i loc(#loc156)
    %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc156)
    cir.store %45, %2 : !u64i, !cir.ptr<!u64i> loc(#loc302)
    cir.br ^bb19 loc(#loc301)
  ^bb19:  // 2 preds: ^bb18, ^bb23
    %46 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc158)
    %47 = cir.const #cir.int<100> : !s32i loc(#loc159)
    %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc159)
    %49 = cir.cmp(lt, %46, %48) : !u64i, !cir.bool loc(#loc303)
    cir.brcond %49 ^bb20, ^bb24 loc(#loc160)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc304)
  ^bb21:  // pred: ^bb20
    %50 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc162)
    %51 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc163)
    %52 = cir.ptr_stride(%50 : !cir.ptr<!ty__twoIntsStruct>, %51 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc164)
    %53 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc165)
    %54 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc166)
    %55 = cir.ptr_stride(%54 : !cir.ptr<!ty__twoIntsStruct>, %53 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc166)
    cir.copy %55 to %52 : !cir.ptr<!ty__twoIntsStruct> loc(#loc164)
    cir.br ^bb22 loc(#loc155)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc155)
  ^bb23:  // pred: ^bb22
    %56 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc167)
    %57 = cir.unary(inc, %56) : !u64i, !u64i loc(#loc168)
    cir.store %57, %2 : !u64i, !cir.ptr<!u64i> loc(#loc305)
    cir.br ^bb19 loc(#loc301)
  ^bb24:  // pred: ^bb19
    cir.br ^bb25 loc(#loc155)
  ^bb25:  // pred: ^bb24
    %58 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc169)
    %59 = cir.const #cir.int<0> : !s32i loc(#loc170)
    %60 = cir.ptr_stride(%58 : !cir.ptr<!ty__twoIntsStruct>, %59 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc171)
    cir.call @printStructLine(%60) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc172)
    cir.br ^bb26 loc(#loc153)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc133)
  ^bb27:  // pred: ^bb26
    cir.return loc(#loc109)
  } loc(#loc280)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc174)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc175)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc307)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc307)
    cir.return %2 : !s32i loc(#loc307)
  } loc(#loc306)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc309)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc310)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc311)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc312)
    %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc313)
    %5 = cir.const #cir.int<50> : !s32i loc(#loc188)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc188)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc188)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc188)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc188)
    %10 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc314)
    %11 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc188)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc188)
    cir.store %12, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc313)
    %13 = cir.const #cir.int<100> : !s32i loc(#loc190)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc190)
    %15 = cir.const #cir.int<8> : !u64i loc(#loc190)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc190)
    %17 = cir.alloca !u8i, !cir.ptr<!u8i>, %16 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc190)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc190)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc190)
    cir.store %19, %10 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc314)
    cir.br ^bb1 loc(#loc315)
  ^bb1:  // pred: ^bb0
    %20 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc316)
    %21 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc193)
    %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc193)
    cir.brcond %22 ^bb2, ^bb3 loc(#loc317)
  ^bb2:  // pred: ^bb1
    %23 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc196)
    cir.store %23, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc318)
    cir.br ^bb3 loc(#loc192)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc192)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc319)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc320)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc321)
  ^bb7:  // pred: ^bb6
    %24 = cir.const #cir.int<0> : !s32i loc(#loc204)
    %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc204)
    cir.store %25, %1 : !u64i, !cir.ptr<!u64i> loc(#loc322)
    cir.br ^bb8 loc(#loc321)
  ^bb8:  // 2 preds: ^bb7, ^bb12
    %26 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc206)
    %27 = cir.const #cir.int<100> : !s32i loc(#loc207)
    %28 = cir.cast(integral, %27 : !s32i), !u64i loc(#loc207)
    %29 = cir.cmp(lt, %26, %28) : !u64i, !cir.bool loc(#loc323)
    cir.brcond %29 ^bb9, ^bb13 loc(#loc208)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc324)
  ^bb10:  // pred: ^bb9
    %30 = cir.const #cir.int<0> : !s32i loc(#loc210)
    %31 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc211)
    %32 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc212)
    %33 = cir.ptr_stride(%32 : !cir.ptr<!ty__twoIntsStruct>, %31 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc212)
    %34 = cir.get_member %33[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc39)
    cir.store %30, %34 : !s32i, !cir.ptr<!s32i> loc(#loc325)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc213)
    %36 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc214)
    %37 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc215)
    %38 = cir.ptr_stride(%37 : !cir.ptr<!ty__twoIntsStruct>, %36 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc215)
    %39 = cir.get_member %38[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc43)
    cir.store %35, %39 : !s32i, !cir.ptr<!s32i> loc(#loc326)
    cir.br ^bb11 loc(#loc203)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc203)
  ^bb12:  // pred: ^bb11
    %40 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc216)
    %41 = cir.unary(inc, %40) : !u64i, !u64i loc(#loc217)
    cir.store %41, %1 : !u64i, !cir.ptr<!u64i> loc(#loc327)
    cir.br ^bb8 loc(#loc321)
  ^bb13:  // pred: ^bb8
    cir.br ^bb14 loc(#loc203)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc201)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc328)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc329)
  ^bb17:  // pred: ^bb16
    %42 = cir.const #cir.int<0> : !s32i loc(#loc222)
    %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc222)
    cir.store %43, %2 : !u64i, !cir.ptr<!u64i> loc(#loc330)
    cir.br ^bb18 loc(#loc329)
  ^bb18:  // 2 preds: ^bb17, ^bb22
    %44 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc224)
    %45 = cir.const #cir.int<100> : !s32i loc(#loc225)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc225)
    %47 = cir.cmp(lt, %44, %46) : !u64i, !cir.bool loc(#loc331)
    cir.brcond %47 ^bb19, ^bb23 loc(#loc226)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc332)
  ^bb20:  // pred: ^bb19
    %48 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc228)
    %49 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc229)
    %50 = cir.ptr_stride(%48 : !cir.ptr<!ty__twoIntsStruct>, %49 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc230)
    %51 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc231)
    %52 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc232)
    %53 = cir.ptr_stride(%52 : !cir.ptr<!ty__twoIntsStruct>, %51 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc232)
    cir.copy %53 to %50 : !cir.ptr<!ty__twoIntsStruct> loc(#loc230)
    cir.br ^bb21 loc(#loc221)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc221)
  ^bb22:  // pred: ^bb21
    %54 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc233)
    %55 = cir.unary(inc, %54) : !u64i, !u64i loc(#loc234)
    cir.store %55, %2 : !u64i, !cir.ptr<!u64i> loc(#loc333)
    cir.br ^bb18 loc(#loc329)
  ^bb23:  // pred: ^bb18
    cir.br ^bb24 loc(#loc221)
  ^bb24:  // pred: ^bb23
    %56 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc235)
    %57 = cir.const #cir.int<0> : !s32i loc(#loc236)
    %58 = cir.ptr_stride(%56 : !cir.ptr<!ty__twoIntsStruct>, %57 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc237)
    cir.call @printStructLine(%58) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc238)
    cir.br ^bb25 loc(#loc219)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc199)
  ^bb26:  // pred: ^bb25
    cir.return loc(#loc178)
  } loc(#loc308)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":35:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":67:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":47:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":47:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":49:13)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":49:20)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":58:13)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":58:20)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":37:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":37:21)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":38:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":38:54)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":39:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":39:55)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":40:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":45:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":40:8)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":40:26)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":41:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":44:16)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":44:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":46:5)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":66:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":48:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":56:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":51:13)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":55:13)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":51:22)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":51:18)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":51:25)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":51:29)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":51:27)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":52:13)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":53:36)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":53:24)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":53:17)
#loc39 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":54:36)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":54:24)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":54:17)
#loc43 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":51:35)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":51:34)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":57:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":65:9)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":60:13)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":63:13)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":60:22)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":60:18)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":60:25)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":60:29)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":60:27)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":61:13)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":62:17)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":62:22)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":62:23)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":62:34)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":62:27)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":60:35)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":60:34)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":64:30)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":64:35)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":64:36)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":64:13)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":146:1)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":150:1)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":148:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":148:14)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":149:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":149:14)
#loc73 = loc("/usr/include/stdlib.h":575:1)
#loc74 = loc("/usr/include/stdlib.h":575:41)
#loc75 = loc("/usr/include/time.h":76:1)
#loc76 = loc("/usr/include/time.h":76:38)
#loc77 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc78 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":167:15)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":169:15)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":172:15)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":174:15)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":162:1)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":177:1)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":163:1)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":165:27)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":165:22)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":165:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":167:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":168:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":168:75)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":169:5)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":172:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":173:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":173:74)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":174:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":176:12)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":176:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":23:1)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":26:1)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":25:12)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":25:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":82:19)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":74:1)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":110:1)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":90:9)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":90:33)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":92:13)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":92:20)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":101:13)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":101:20)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":76:5)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":76:21)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":77:5)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":77:54)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":78:5)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":78:55)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":79:5)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":88:5)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":79:8)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":79:27)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":80:5)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":83:5)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":85:5)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":82:9)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":87:16)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":87:9)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":89:5)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":109:5)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":91:9)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":99:9)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":94:13)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":98:13)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":94:22)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":94:18)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":94:25)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":94:29)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":94:27)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":95:13)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":96:36)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":96:24)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":96:17)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":97:36)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":97:24)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":97:17)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":94:35)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":94:34)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":100:9)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":108:9)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":103:13)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":106:13)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":103:22)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":103:18)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":103:25)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":103:29)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":103:27)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":104:13)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":105:17)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":105:22)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":105:23)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":105:34)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":105:27)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":103:35)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":103:34)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":107:30)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":107:35)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":107:36)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":107:13)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":28:1)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":31:1)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":30:12)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":30:5)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":113:1)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":144:1)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":124:9)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":124:33)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":126:13)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":126:20)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":135:13)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":135:20)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":115:5)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":115:21)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":116:5)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":116:54)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":117:5)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":117:55)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":118:5)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":122:5)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":118:8)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":118:26)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":119:5)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":121:16)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":121:9)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":123:5)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":143:5)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":125:9)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":133:9)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":128:13)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":132:13)
#loc204 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":128:22)
#loc205 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":128:18)
#loc206 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":128:25)
#loc207 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":128:29)
#loc208 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":128:27)
#loc209 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":129:13)
#loc210 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":130:36)
#loc211 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":130:24)
#loc212 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":130:17)
#loc213 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":131:36)
#loc214 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":131:24)
#loc215 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":131:17)
#loc216 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":128:35)
#loc217 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":128:34)
#loc218 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":134:9)
#loc219 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":142:9)
#loc220 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":137:13)
#loc221 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":140:13)
#loc222 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":137:22)
#loc223 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":137:18)
#loc224 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":137:25)
#loc225 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":137:29)
#loc226 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":137:27)
#loc227 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":138:13)
#loc228 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":139:17)
#loc229 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":139:22)
#loc230 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":139:23)
#loc231 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":139:34)
#loc232 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":139:27)
#loc233 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":137:35)
#loc234 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":137:34)
#loc235 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":141:30)
#loc236 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":141:35)
#loc237 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":141:36)
#loc238 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_loop_08.c":141:13)
#loc239 = loc(fused[#loc1, #loc2])
#loc240 = loc(fused[#loc3, #loc4])
#loc241 = loc(fused[#loc5, #loc6])
#loc242 = loc(fused[#loc7, #loc8])
#loc243 = loc(fused[#loc9, #loc10])
#loc244 = loc(fused[#loc11, #loc12])
#loc245 = loc(fused[#loc13, #loc14])
#loc246 = loc(fused[#loc15, #loc16])
#loc247 = loc(fused[#loc17, #loc18])
#loc248 = loc(fused[#loc19, #loc20])
#loc249 = loc(fused[#loc21, #loc18])
#loc250 = loc(fused[#loc23, #loc22])
#loc251 = loc(fused[#loc24, #loc25])
#loc252 = loc(fused[#loc26, #loc27])
#loc253 = loc(fused[#loc28, #loc29])
#loc254 = loc(fused[#loc31, #loc30])
#loc255 = loc(fused[#loc32, #loc33])
#loc256 = loc(fused[#loc35, #loc29])
#loc257 = loc(fused[#loc38, #loc36])
#loc258 = loc(fused[#loc42, #loc40])
#loc259 = loc(fused[#loc45, #loc44])
#loc260 = loc(fused[#loc46, #loc47])
#loc261 = loc(fused[#loc48, #loc49])
#loc262 = loc(fused[#loc51, #loc50])
#loc263 = loc(fused[#loc52, #loc53])
#loc264 = loc(fused[#loc55, #loc49])
#loc265 = loc(fused[#loc62, #loc61])
#loc266 = loc(fused[#loc67, #loc68])
#loc267 = loc(fused[#loc69, #loc70])
#loc268 = loc(fused[#loc71, #loc72])
#loc269 = loc(fused[#loc73, #loc74])
#loc270 = loc(fused[#loc75, #loc76])
#loc271 = loc(fused[#loc77, #loc78])
#loc272 = loc(fused[#loc83, #loc84])
#loc275 = loc(fused[#loc94, #loc95])
#loc276 = loc(fused[#loc98, #loc99])
#loc277 = loc(fused[#loc102, #loc101])
#loc278 = loc(fused[#loc103, #loc104])
#loc279 = loc(fused[#loc106, #loc105])
#loc280 = loc(fused[#loc108, #loc109])
#loc281 = loc(fused[#loc110, #loc111])
#loc282 = loc(fused[#loc112, #loc113])
#loc283 = loc(fused[#loc114, #loc115])
#loc284 = loc(fused[#loc116, #loc117])
#loc285 = loc(fused[#loc118, #loc119])
#loc286 = loc(fused[#loc120, #loc121])
#loc287 = loc(fused[#loc122, #loc123])
#loc288 = loc(fused[#loc124, #loc125])
#loc289 = loc(fused[#loc126, #loc127, #loc128, #loc123])
#loc290 = loc(fused[#loc131, #loc130])
#loc291 = loc(fused[#loc132, #loc133])
#loc292 = loc(fused[#loc134, #loc135])
#loc293 = loc(fused[#loc136, #loc137])
#loc294 = loc(fused[#loc139, #loc138])
#loc295 = loc(fused[#loc140, #loc141])
#loc296 = loc(fused[#loc143, #loc137])
#loc297 = loc(fused[#loc146, #loc144])
#loc298 = loc(fused[#loc149, #loc147])
#loc299 = loc(fused[#loc151, #loc150])
#loc300 = loc(fused[#loc152, #loc153])
#loc301 = loc(fused[#loc154, #loc155])
#loc302 = loc(fused[#loc157, #loc156])
#loc303 = loc(fused[#loc158, #loc159])
#loc304 = loc(fused[#loc161, #loc155])
#loc305 = loc(fused[#loc168, #loc167])
#loc306 = loc(fused[#loc173, #loc174])
#loc307 = loc(fused[#loc176, #loc175])
#loc308 = loc(fused[#loc177, #loc178])
#loc309 = loc(fused[#loc179, #loc180])
#loc310 = loc(fused[#loc181, #loc182])
#loc311 = loc(fused[#loc183, #loc184])
#loc312 = loc(fused[#loc185, #loc186])
#loc313 = loc(fused[#loc187, #loc188])
#loc314 = loc(fused[#loc189, #loc190])
#loc315 = loc(fused[#loc191, #loc192])
#loc316 = loc(fused[#loc193, #loc194])
#loc317 = loc(fused[#loc195, #loc192])
#loc318 = loc(fused[#loc197, #loc196])
#loc319 = loc(fused[#loc198, #loc199])
#loc320 = loc(fused[#loc200, #loc201])
#loc321 = loc(fused[#loc202, #loc203])
#loc322 = loc(fused[#loc205, #loc204])
#loc323 = loc(fused[#loc206, #loc207])
#loc324 = loc(fused[#loc209, #loc203])
#loc325 = loc(fused[#loc212, #loc210])
#loc326 = loc(fused[#loc215, #loc213])
#loc327 = loc(fused[#loc217, #loc216])
#loc328 = loc(fused[#loc218, #loc219])
#loc329 = loc(fused[#loc220, #loc221])
#loc330 = loc(fused[#loc223, #loc222])
#loc331 = loc(fused[#loc224, #loc225])
#loc332 = loc(fused[#loc227, #loc221])
#loc333 = loc(fused[#loc234, #loc233])
