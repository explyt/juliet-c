!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc22 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":30:17)
#loc69 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":58:17)
#loc85 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":70:27)
#loc115 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":90:17)
#loc128 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":97:27)
#true = #cir.bool<true> : !cir.bool
module @"/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_for_loop_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc218)
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc219)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc220)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_for_loop_11_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc222)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc223)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc14)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc15)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc224)
    cir.br ^bb1 loc(#loc225)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc226)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc226)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc19)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc19)
    cir.brcond %7 ^bb2, ^bb7 loc(#loc227)
  ^bb2:  // pred: ^bb1
    %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %10 = cir.binop(and, %8, %9) : !s32i loc(#loc22)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc22)
    cir.brcond %11 ^bb3, ^bb4 loc(#loc22)
  ^bb3:  // pred: ^bb2
    %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
    %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc22)
    %14 = cir.const #cir.int<30> : !s32i loc(#loc22)
    %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc22)
    %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
    %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc22)
    %18 = cir.const #cir.int<15> : !s32i loc(#loc22)
    %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc22)
    %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc22)
    %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
    %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc22)
    %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc22)
    cir.br ^bb5(%23 : !u32i) loc(#loc22)
  ^bb4:  // pred: ^bb2
    %24 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
    %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc22)
    %26 = cir.const #cir.int<30> : !s32i loc(#loc22)
    %27 = cir.shift(left, %25 : !u32i, %26 : !s32i) -> !u32i loc(#loc22)
    %28 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc22)
    %30 = cir.const #cir.int<15> : !s32i loc(#loc22)
    %31 = cir.shift(left, %29 : !u32i, %30 : !s32i) -> !u32i loc(#loc22)
    %32 = cir.binop(xor, %27, %31) : !u32i loc(#loc22)
    %33 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc22)
    %34 = cir.cast(integral, %33 : !s32i), !u32i loc(#loc22)
    %35 = cir.binop(xor, %32, %34) : !u32i loc(#loc22)
    %36 = cir.unary(minus, %35) : !u32i, !u32i loc(#loc22)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %38 = cir.cast(integral, %37 : !s32i), !u32i loc(#loc22)
    %39 = cir.binop(sub, %36, %38) : !u32i loc(#loc22)
    cir.br ^bb5(%39 : !u32i) loc(#loc22)
  ^bb5(%40: !u32i loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":30:17)):  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc22)
  ^bb6:  // pred: ^bb5
    %41 = cir.cast(integral, %40 : !u32i), !s32i loc(#loc22)
    cir.store %41, %1 : !s32i, !cir.ptr<!s32i> loc(#loc228)
    cir.br ^bb7 loc(#loc18)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc18)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc229)
  ^bb9:  // pred: ^bb8
    %42 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc230)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc230)
    %44 = cir.call %43() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc26)
    %45 = cir.cast(int_to_bool, %44 : !s32i), !cir.bool loc(#loc26)
    cir.brcond %45 ^bb10, ^bb21 loc(#loc231)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc232)
  ^bb11:  // pred: ^bb10
    %46 = cir.const #cir.int<0> : !s32i loc(#loc11)
    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc11)
    cir.store %47, %0 : !u64i, !cir.ptr<!u64i> loc(#loc222)
    cir.br ^bb12 loc(#loc233)
  ^bb12:  // pred: ^bb11
    %48 = cir.const #cir.int<0> : !s32i loc(#loc33)
    %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc33)
    cir.store %49, %0 : !u64i, !cir.ptr<!u64i> loc(#loc234)
    cir.br ^bb13 loc(#loc233)
  ^bb13:  // 2 preds: ^bb12, ^bb17
    %50 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc35)
    %51 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc36)
    %52 = cir.cast(integral, %51 : !s32i), !u64i loc(#loc36)
    %53 = cir.cmp(lt, %50, %52) : !u64i, !cir.bool loc(#loc235)
    cir.brcond %53 ^bb14, ^bb18 loc(#loc37)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc236)
  ^bb15:  // pred: ^bb14
    %54 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc7)
    %55 = cir.cast(array_to_ptrdecay, %54 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%55) : (!cir.ptr<!s8i>) -> () loc(#loc39)
    cir.br ^bb16 loc(#loc32)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc32)
  ^bb17:  // pred: ^bb16
    %56 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc40)
    %57 = cir.unary(inc, %56) : !u64i, !u64i loc(#loc41)
    cir.store %57, %0 : !u64i, !cir.ptr<!u64i> loc(#loc237)
    cir.br ^bb13 loc(#loc233)
  ^bb18:  // pred: ^bb13
    cir.br ^bb19 loc(#loc32)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc30)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc25)
  ^bb21:  // 2 preds: ^bb9, ^bb20
    cir.br ^bb22 loc(#loc25)
  ^bb22:  // pred: ^bb21
    cir.return loc(#loc9)
  } loc(#loc221)
  cir.func no_proto @CWE400_Resource_Exhaustion__rand_for_loop_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<()>> loc(#loc239)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc44)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<()>> loc(#loc240)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc46)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc241)
    cir.call %2() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc48)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc242)
    cir.call %3() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc50)
    cir.return loc(#loc43)
  } loc(#loc238)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc243)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc54)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc245)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc246)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc61)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc62)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc247)
    cir.br ^bb1 loc(#loc248)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc249)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc249)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc66)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc66)
    cir.brcond %7 ^bb2, ^bb7 loc(#loc250)
  ^bb2:  // pred: ^bb1
    %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc69)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %10 = cir.binop(and, %8, %9) : !s32i loc(#loc69)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc69)
    cir.brcond %11 ^bb3, ^bb4 loc(#loc69)
  ^bb3:  // pred: ^bb2
    %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc69)
    %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc69)
    %14 = cir.const #cir.int<30> : !s32i loc(#loc69)
    %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc69)
    %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc69)
    %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc69)
    %18 = cir.const #cir.int<15> : !s32i loc(#loc69)
    %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc69)
    %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc69)
    %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc69)
    %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc69)
    %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc69)
    cir.br ^bb5(%23 : !u32i) loc(#loc69)
  ^bb4:  // pred: ^bb2
    %24 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc69)
    %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc69)
    %26 = cir.const #cir.int<30> : !s32i loc(#loc69)
    %27 = cir.shift(left, %25 : !u32i, %26 : !s32i) -> !u32i loc(#loc69)
    %28 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc69)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc69)
    %30 = cir.const #cir.int<15> : !s32i loc(#loc69)
    %31 = cir.shift(left, %29 : !u32i, %30 : !s32i) -> !u32i loc(#loc69)
    %32 = cir.binop(xor, %27, %31) : !u32i loc(#loc69)
    %33 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc69)
    %34 = cir.cast(integral, %33 : !s32i), !u32i loc(#loc69)
    %35 = cir.binop(xor, %32, %34) : !u32i loc(#loc69)
    %36 = cir.unary(minus, %35) : !u32i, !u32i loc(#loc69)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %38 = cir.cast(integral, %37 : !s32i), !u32i loc(#loc69)
    %39 = cir.binop(sub, %36, %38) : !u32i loc(#loc69)
    cir.br ^bb5(%39 : !u32i) loc(#loc69)
  ^bb5(%40: !u32i loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":58:17)):  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc69)
  ^bb6:  // pred: ^bb5
    %41 = cir.cast(integral, %40 : !u32i), !s32i loc(#loc69)
    cir.store %41, %1 : !s32i, !cir.ptr<!s32i> loc(#loc251)
    cir.br ^bb7 loc(#loc65)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc65)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc252)
  ^bb9:  // pred: ^bb8
    %42 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc253)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc253)
    %44 = cir.call %43() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc73)
    %45 = cir.cast(int_to_bool, %44 : !s32i), !cir.bool loc(#loc73)
    cir.brcond %45 ^bb10, ^bb11 loc(#loc254)
  ^bb10:  // pred: ^bb9
    %46 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc54)
    %47 = cir.cast(array_to_ptrdecay, %46 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc54)
    cir.call @printLine(%47) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    cir.br ^bb34 loc(#loc76)
  ^bb11:  // pred: ^bb9
    cir.br ^bb12 loc(#loc255)
  ^bb12:  // pred: ^bb11
    %48 = cir.const #cir.int<0> : !s32i loc(#loc58)
    %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc58)
    cir.store %49, %0 : !u64i, !cir.ptr<!u64i> loc(#loc245)
    cir.br ^bb13 loc(#loc256)
  ^bb13:  // pred: ^bb12
    %50 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    %51 = cir.const #cir.int<0> : !s32i loc(#loc84)
    %52 = cir.cmp(gt, %50, %51) : !s32i, !cir.bool loc(#loc257)
    cir.brcond %52 ^bb14, ^bb19 loc(#loc85)
  ^bb14:  // pred: ^bb13
    %53 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc86)
    %54 = cir.const #cir.int<20> : !s32i loc(#loc87)
    %55 = cir.cmp(le, %53, %54) : !s32i, !cir.bool loc(#loc258)
    cir.brcond %55 ^bb15, ^bb16 loc(#loc85)
  ^bb15:  // pred: ^bb14
    %56 = cir.const #true loc(#loc85)
    cir.br ^bb17(%56 : !cir.bool) loc(#loc85)
  ^bb16:  // pred: ^bb14
    %57 = cir.const #false loc(#loc85)
    cir.br ^bb17(%57 : !cir.bool) loc(#loc85)
  ^bb17(%58: !cir.bool loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":70:27)):  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc85)
  ^bb18:  // pred: ^bb17
    cir.br ^bb20(%58 : !cir.bool) loc(#loc85)
  ^bb19:  // pred: ^bb13
    %59 = cir.const #false loc(#loc85)
    cir.br ^bb20(%59 : !cir.bool) loc(#loc85)
  ^bb20(%60: !cir.bool loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":70:27)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc85)
  ^bb21:  // pred: ^bb20
    cir.brcond %60 ^bb22, ^bb31 loc(#loc259)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc260)
  ^bb23:  // pred: ^bb22
    %61 = cir.const #cir.int<0> : !s32i loc(#loc91)
    %62 = cir.cast(integral, %61 : !s32i), !u64i loc(#loc91)
    cir.store %62, %0 : !u64i, !cir.ptr<!u64i> loc(#loc261)
    cir.br ^bb24 loc(#loc260)
  ^bb24:  // 2 preds: ^bb23, ^bb28
    %63 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc93)
    %64 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc94)
    %65 = cir.cast(integral, %64 : !s32i), !u64i loc(#loc94)
    %66 = cir.cmp(lt, %63, %65) : !u64i, !cir.bool loc(#loc262)
    cir.brcond %66 ^bb25, ^bb29 loc(#loc95)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc263)
  ^bb26:  // pred: ^bb25
    %67 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc97)
    %68 = cir.cast(array_to_ptrdecay, %67 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%68) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    cir.br ^bb27 loc(#loc90)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28 loc(#loc90)
  ^bb28:  // pred: ^bb27
    %69 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc99)
    %70 = cir.unary(inc, %69) : !u64i, !u64i loc(#loc100)
    cir.store %70, %0 : !u64i, !cir.ptr<!u64i> loc(#loc264)
    cir.br ^bb24 loc(#loc260)
  ^bb29:  // pred: ^bb24
    cir.br ^bb30 loc(#loc90)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc82)
  ^bb31:  // 2 preds: ^bb21, ^bb30
    cir.br ^bb32 loc(#loc82)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc80)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc72)
  ^bb34:  // 2 preds: ^bb10, ^bb33
    cir.br ^bb35 loc(#loc72)
  ^bb35:  // pred: ^bb34
    cir.return loc(#loc56)
  } loc(#loc244)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc266)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc267)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc107)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc108)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc268)
    cir.br ^bb1 loc(#loc269)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc270)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc270)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc112)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc112)
    cir.brcond %7 ^bb2, ^bb7 loc(#loc271)
  ^bb2:  // pred: ^bb1
    %8 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc115)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %10 = cir.binop(and, %8, %9) : !s32i loc(#loc115)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc115)
    cir.brcond %11 ^bb3, ^bb4 loc(#loc115)
  ^bb3:  // pred: ^bb2
    %12 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc115)
    %13 = cir.cast(integral, %12 : !s32i), !u32i loc(#loc115)
    %14 = cir.const #cir.int<30> : !s32i loc(#loc115)
    %15 = cir.shift(left, %13 : !u32i, %14 : !s32i) -> !u32i loc(#loc115)
    %16 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc115)
    %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc115)
    %18 = cir.const #cir.int<15> : !s32i loc(#loc115)
    %19 = cir.shift(left, %17 : !u32i, %18 : !s32i) -> !u32i loc(#loc115)
    %20 = cir.binop(xor, %15, %19) : !u32i loc(#loc115)
    %21 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc115)
    %22 = cir.cast(integral, %21 : !s32i), !u32i loc(#loc115)
    %23 = cir.binop(xor, %20, %22) : !u32i loc(#loc115)
    cir.br ^bb5(%23 : !u32i) loc(#loc115)
  ^bb4:  // pred: ^bb2
    %24 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc115)
    %25 = cir.cast(integral, %24 : !s32i), !u32i loc(#loc115)
    %26 = cir.const #cir.int<30> : !s32i loc(#loc115)
    %27 = cir.shift(left, %25 : !u32i, %26 : !s32i) -> !u32i loc(#loc115)
    %28 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc115)
    %29 = cir.cast(integral, %28 : !s32i), !u32i loc(#loc115)
    %30 = cir.const #cir.int<15> : !s32i loc(#loc115)
    %31 = cir.shift(left, %29 : !u32i, %30 : !s32i) -> !u32i loc(#loc115)
    %32 = cir.binop(xor, %27, %31) : !u32i loc(#loc115)
    %33 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc115)
    %34 = cir.cast(integral, %33 : !s32i), !u32i loc(#loc115)
    %35 = cir.binop(xor, %32, %34) : !u32i loc(#loc115)
    %36 = cir.unary(minus, %35) : !u32i, !u32i loc(#loc115)
    %37 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %38 = cir.cast(integral, %37 : !s32i), !u32i loc(#loc115)
    %39 = cir.binop(sub, %36, %38) : !u32i loc(#loc115)
    cir.br ^bb5(%39 : !u32i) loc(#loc115)
  ^bb5(%40: !u32i loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":90:17)):  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc115)
  ^bb6:  // pred: ^bb5
    %41 = cir.cast(integral, %40 : !u32i), !s32i loc(#loc115)
    cir.store %41, %1 : !s32i, !cir.ptr<!s32i> loc(#loc272)
    cir.br ^bb7 loc(#loc111)
  ^bb7:  // 2 preds: ^bb1, ^bb6
    cir.br ^bb8 loc(#loc111)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc273)
  ^bb9:  // pred: ^bb8
    %42 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc274)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc274)
    %44 = cir.call %43() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc119)
    %45 = cir.cast(int_to_bool, %44 : !s32i), !cir.bool loc(#loc119)
    cir.brcond %45 ^bb10, ^bb33 loc(#loc275)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc276)
  ^bb11:  // pred: ^bb10
    %46 = cir.const #cir.int<0> : !s32i loc(#loc104)
    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc104)
    cir.store %47, %0 : !u64i, !cir.ptr<!u64i> loc(#loc266)
    cir.br ^bb12 loc(#loc277)
  ^bb12:  // pred: ^bb11
    %48 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc126)
    %49 = cir.const #cir.int<0> : !s32i loc(#loc127)
    %50 = cir.cmp(gt, %48, %49) : !s32i, !cir.bool loc(#loc278)
    cir.brcond %50 ^bb13, ^bb18 loc(#loc128)
  ^bb13:  // pred: ^bb12
    %51 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    %52 = cir.const #cir.int<20> : !s32i loc(#loc130)
    %53 = cir.cmp(le, %51, %52) : !s32i, !cir.bool loc(#loc279)
    cir.brcond %53 ^bb14, ^bb15 loc(#loc128)
  ^bb14:  // pred: ^bb13
    %54 = cir.const #true loc(#loc128)
    cir.br ^bb16(%54 : !cir.bool) loc(#loc128)
  ^bb15:  // pred: ^bb13
    %55 = cir.const #false loc(#loc128)
    cir.br ^bb16(%55 : !cir.bool) loc(#loc128)
  ^bb16(%56: !cir.bool loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":97:27)):  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc128)
  ^bb17:  // pred: ^bb16
    cir.br ^bb19(%56 : !cir.bool) loc(#loc128)
  ^bb18:  // pred: ^bb12
    %57 = cir.const #false loc(#loc128)
    cir.br ^bb19(%57 : !cir.bool) loc(#loc128)
  ^bb19(%58: !cir.bool loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":97:27)):  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc128)
  ^bb20:  // pred: ^bb19
    cir.brcond %58 ^bb21, ^bb30 loc(#loc280)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc281)
  ^bb22:  // pred: ^bb21
    %59 = cir.const #cir.int<0> : !s32i loc(#loc134)
    %60 = cir.cast(integral, %59 : !s32i), !u64i loc(#loc134)
    cir.store %60, %0 : !u64i, !cir.ptr<!u64i> loc(#loc282)
    cir.br ^bb23 loc(#loc281)
  ^bb23:  // 2 preds: ^bb22, ^bb27
    %61 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc136)
    %62 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    %63 = cir.cast(integral, %62 : !s32i), !u64i loc(#loc137)
    %64 = cir.cmp(lt, %61, %63) : !u64i, !cir.bool loc(#loc283)
    cir.brcond %64 ^bb24, ^bb28 loc(#loc138)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc284)
  ^bb25:  // pred: ^bb24
    %65 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc140)
    %66 = cir.cast(array_to_ptrdecay, %65 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc140)
    cir.call @printLine(%66) : (!cir.ptr<!s8i>) -> () loc(#loc141)
    cir.br ^bb26 loc(#loc133)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc133)
  ^bb27:  // pred: ^bb26
    %67 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc142)
    %68 = cir.unary(inc, %67) : !u64i, !u64i loc(#loc143)
    cir.store %68, %0 : !u64i, !cir.ptr<!u64i> loc(#loc285)
    cir.br ^bb23 loc(#loc281)
  ^bb28:  // pred: ^bb23
    cir.br ^bb29 loc(#loc133)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc125)
  ^bb30:  // 2 preds: ^bb20, ^bb29
    cir.br ^bb31 loc(#loc125)
  ^bb31:  // pred: ^bb30
    cir.br ^bb32 loc(#loc123)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc118)
  ^bb33:  // 2 preds: ^bb9, ^bb32
    cir.br ^bb34 loc(#loc118)
  ^bb34:  // pred: ^bb33
    cir.return loc(#loc102)
  } loc(#loc265)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc287)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc288)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc150)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc151)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc289)
    cir.br ^bb1 loc(#loc290)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc291)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc291)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc155)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc155)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc292)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc160)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc160)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc161)
    cir.br ^bb4 loc(#loc158)
  ^bb3:  // pred: ^bb1
    %10 = cir.const #cir.int<20> : !s32i loc(#loc162)
    cir.store %10, %1 : !s32i, !cir.ptr<!s32i> loc(#loc293)
    cir.br ^bb4 loc(#loc154)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc154)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc294)
  ^bb6:  // pred: ^bb5
    %11 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc295)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc295)
    %13 = cir.call %12() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc166)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc166)
    cir.brcond %14 ^bb7, ^bb18 loc(#loc296)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc297)
  ^bb8:  // pred: ^bb7
    %15 = cir.const #cir.int<0> : !s32i loc(#loc147)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc147)
    cir.store %16, %0 : !u64i, !cir.ptr<!u64i> loc(#loc287)
    cir.br ^bb9 loc(#loc298)
  ^bb9:  // pred: ^bb8
    %17 = cir.const #cir.int<0> : !s32i loc(#loc173)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc173)
    cir.store %18, %0 : !u64i, !cir.ptr<!u64i> loc(#loc299)
    cir.br ^bb10 loc(#loc298)
  ^bb10:  // 2 preds: ^bb9, ^bb14
    %19 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc175)
    %20 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc176)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc176)
    %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc300)
    cir.brcond %22 ^bb11, ^bb15 loc(#loc177)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc301)
  ^bb12:  // pred: ^bb11
    %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc179)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc179)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc180)
    cir.br ^bb13 loc(#loc172)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc172)
  ^bb14:  // pred: ^bb13
    %25 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc181)
    %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc182)
    cir.store %26, %0 : !u64i, !cir.ptr<!u64i> loc(#loc302)
    cir.br ^bb10 loc(#loc298)
  ^bb15:  // pred: ^bb10
    cir.br ^bb16 loc(#loc172)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc170)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc165)
  ^bb18:  // 2 preds: ^bb6, ^bb17
    cir.br ^bb19 loc(#loc165)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc145)
  } loc(#loc286)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i", init] {alignment = 8 : i64} loc(#loc304)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["count"] {alignment = 4 : i64} loc(#loc305)
    %2 = cir.const #cir.int<1> : !s32i loc(#loc189)
    %3 = cir.unary(minus, %2) nsw : !s32i, !s32i loc(#loc190)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc306)
    cir.br ^bb1 loc(#loc307)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc308)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc308)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc194)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc194)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc309)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<20> : !s32i loc(#loc197)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc310)
    cir.br ^bb3 loc(#loc193)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc193)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc311)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc312)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc312)
    %11 = cir.call %10() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc201)
    %12 = cir.cast(int_to_bool, %11 : !s32i), !cir.bool loc(#loc201)
    cir.brcond %12 ^bb6, ^bb17 loc(#loc313)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc314)
  ^bb7:  // pred: ^bb6
    %13 = cir.const #cir.int<0> : !s32i loc(#loc186)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc186)
    cir.store %14, %0 : !u64i, !cir.ptr<!u64i> loc(#loc304)
    cir.br ^bb8 loc(#loc315)
  ^bb8:  // pred: ^bb7
    %15 = cir.const #cir.int<0> : !s32i loc(#loc208)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc208)
    cir.store %16, %0 : !u64i, !cir.ptr<!u64i> loc(#loc316)
    cir.br ^bb9 loc(#loc315)
  ^bb9:  // 2 preds: ^bb8, ^bb13
    %17 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc210)
    %18 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc211)
    %19 = cir.cast(integral, %18 : !s32i), !u64i loc(#loc211)
    %20 = cir.cmp(lt, %17, %19) : !u64i, !cir.bool loc(#loc317)
    cir.brcond %20 ^bb10, ^bb14 loc(#loc212)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc318)
  ^bb11:  // pred: ^bb10
    %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc214)
    %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc214)
    cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc215)
    cir.br ^bb12 loc(#loc207)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc207)
  ^bb13:  // pred: ^bb12
    %23 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc216)
    %24 = cir.unary(inc, %23) : !u64i, !u64i loc(#loc217)
    cir.store %24, %0 : !u64i, !cir.ptr<!u64i> loc(#loc319)
    cir.br ^bb9 loc(#loc315)
  ^bb14:  // pred: ^bb9
    cir.br ^bb15 loc(#loc207)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc205)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc200)
  ^bb17:  // 2 preds: ^bb5, ^bb16
    cir.br ^bb18 loc(#loc200)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc184)
  } loc(#loc303)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE400_Resource_Exhaustion/s02/CWE400_Resource_Exhaustion__rand_for_loop_11.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/stdlib.h":573:1)
#loc4 = loc("/usr/include/stdlib.h":573:24)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":39:27)
#loc8 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":22:1)
#loc9 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":43:1)
#loc10 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":35:13)
#loc11 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":35:24)
#loc12 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":24:5)
#loc13 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":24:9)
#loc14 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":26:14)
#loc15 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":26:13)
#loc16 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":26:5)
#loc17 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":27:5)
#loc18 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":31:5)
#loc19 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":27:8)
#loc20 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":27:26)
#loc21 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":28:5)
#loc23 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":30:9)
#loc24 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":32:5)
#loc25 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":42:5)
#loc26 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":32:8)
#loc27 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":32:26)
#loc28 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":33:5)
#loc29 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":34:9)
#loc30 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":41:9)
#loc31 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":37:13)
#loc32 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":40:13)
#loc33 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":37:22)
#loc34 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":37:18)
#loc35 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":37:25)
#loc36 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":37:37)
#loc37 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":37:27)
#loc38 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":38:13)
#loc39 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":39:17)
#loc40 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":37:45)
#loc41 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":37:44)
#loc42 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":161:1)
#loc43 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":167:1)
#loc44 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":163:5)
#loc45 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":163:14)
#loc46 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":164:5)
#loc47 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":164:14)
#loc48 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":165:5)
#loc49 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":165:14)
#loc50 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":166:5)
#loc51 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":166:14)
#loc52 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc53 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc54 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":63:19)
#loc55 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":50:1)
#loc56 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":79:1)
#loc57 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":68:13)
#loc58 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":68:24)
#loc59 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":52:5)
#loc60 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":52:9)
#loc61 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":54:14)
#loc62 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":54:13)
#loc63 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":54:5)
#loc64 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":55:5)
#loc65 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":59:5)
#loc66 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":55:8)
#loc67 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":55:26)
#loc68 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":56:5)
#loc70 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":58:9)
#loc71 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":60:5)
#loc72 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":78:5)
#loc73 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":60:8)
#loc74 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":60:27)
#loc75 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":61:5)
#loc76 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":64:5)
#loc77 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":66:5)
#loc78 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":63:9)
#loc79 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":67:9)
#loc80 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":77:9)
#loc81 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":70:13)
#loc82 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":76:13)
#loc83 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":70:17)
#loc84 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":70:25)
#loc86 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":70:30)
#loc87 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":70:39)
#loc88 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":71:13)
#loc89 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":72:17)
#loc90 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":75:17)
#loc91 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":72:26)
#loc92 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":72:22)
#loc93 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":72:29)
#loc94 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":72:41)
#loc95 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":72:31)
#loc96 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":73:17)
#loc97 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":74:31)
#loc98 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":74:21)
#loc99 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":72:49)
#loc100 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":72:48)
#loc101 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":82:1)
#loc102 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":106:1)
#loc103 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":95:13)
#loc104 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":95:24)
#loc105 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":84:5)
#loc106 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":84:9)
#loc107 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":86:14)
#loc108 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":86:13)
#loc109 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":86:5)
#loc110 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":87:5)
#loc111 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":91:5)
#loc112 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":87:8)
#loc113 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":87:26)
#loc114 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":88:5)
#loc116 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":90:9)
#loc117 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":92:5)
#loc118 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":105:5)
#loc119 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":92:8)
#loc120 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":92:26)
#loc121 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":93:5)
#loc122 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":94:9)
#loc123 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":104:9)
#loc124 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":97:13)
#loc125 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":103:13)
#loc126 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":97:17)
#loc127 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":97:25)
#loc129 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":97:30)
#loc130 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":97:39)
#loc131 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":98:13)
#loc132 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":99:17)
#loc133 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":102:17)
#loc134 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":99:26)
#loc135 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":99:22)
#loc136 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":99:29)
#loc137 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":99:41)
#loc138 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":99:31)
#loc139 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":100:17)
#loc140 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":101:31)
#loc141 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":101:21)
#loc142 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":99:49)
#loc143 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":99:48)
#loc144 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":109:1)
#loc145 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":135:1)
#loc146 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":127:13)
#loc147 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":127:24)
#loc148 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":111:5)
#loc149 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":111:9)
#loc150 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":113:14)
#loc151 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":113:13)
#loc152 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":113:5)
#loc153 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":114:5)
#loc154 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":123:5)
#loc155 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":114:8)
#loc156 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":114:27)
#loc157 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":115:5)
#loc158 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":118:5)
#loc159 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":120:5)
#loc160 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":117:19)
#loc161 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":117:9)
#loc162 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":122:17)
#loc163 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":122:9)
#loc164 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":124:5)
#loc165 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":134:5)
#loc166 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":124:8)
#loc167 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":124:26)
#loc168 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":125:5)
#loc169 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":126:9)
#loc170 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":133:9)
#loc171 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":129:13)
#loc172 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":132:13)
#loc173 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":129:22)
#loc174 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":129:18)
#loc175 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":129:25)
#loc176 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":129:37)
#loc177 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":129:27)
#loc178 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":130:13)
#loc179 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":131:27)
#loc180 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":131:17)
#loc181 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":129:45)
#loc182 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":129:44)
#loc183 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":138:1)
#loc184 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":159:1)
#loc185 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":151:13)
#loc186 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":151:24)
#loc187 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":140:5)
#loc188 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":140:9)
#loc189 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":142:14)
#loc190 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":142:13)
#loc191 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":142:5)
#loc192 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":143:5)
#loc193 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":147:5)
#loc194 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":143:8)
#loc195 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":143:26)
#loc196 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":144:5)
#loc197 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":146:17)
#loc198 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":146:9)
#loc199 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":148:5)
#loc200 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":158:5)
#loc201 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":148:8)
#loc202 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":148:26)
#loc203 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":149:5)
#loc204 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":150:9)
#loc205 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":157:9)
#loc206 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":153:13)
#loc207 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":156:13)
#loc208 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":153:22)
#loc209 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":153:18)
#loc210 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":153:25)
#loc211 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":153:37)
#loc212 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":153:27)
#loc213 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":154:13)
#loc214 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":155:27)
#loc215 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":155:17)
#loc216 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":153:45)
#loc217 = loc("CWE400_Resource_Exhaustion__rand_for_loop_11.c":153:44)
#loc218 = loc(fused[#loc1, #loc2])
#loc219 = loc(fused[#loc3, #loc4])
#loc220 = loc(fused[#loc5, #loc6])
#loc221 = loc(fused[#loc8, #loc9])
#loc222 = loc(fused[#loc10, #loc11])
#loc223 = loc(fused[#loc12, #loc13])
#loc224 = loc(fused[#loc16, #loc14])
#loc225 = loc(fused[#loc17, #loc18])
#loc226 = loc(fused[#loc19, #loc20])
#loc227 = loc(fused[#loc21, #loc18])
#loc228 = loc(fused[#loc23, #loc22])
#loc229 = loc(fused[#loc24, #loc25])
#loc230 = loc(fused[#loc26, #loc27])
#loc231 = loc(fused[#loc28, #loc25])
#loc232 = loc(fused[#loc29, #loc30])
#loc233 = loc(fused[#loc31, #loc32])
#loc234 = loc(fused[#loc34, #loc33])
#loc235 = loc(fused[#loc35, #loc36])
#loc236 = loc(fused[#loc38, #loc32])
#loc237 = loc(fused[#loc41, #loc40])
#loc238 = loc(fused[#loc42, #loc43])
#loc239 = loc(fused[#loc44, #loc45])
#loc240 = loc(fused[#loc46, #loc47])
#loc241 = loc(fused[#loc48, #loc49])
#loc242 = loc(fused[#loc50, #loc51])
#loc243 = loc(fused[#loc52, #loc53])
#loc244 = loc(fused[#loc55, #loc56])
#loc245 = loc(fused[#loc57, #loc58])
#loc246 = loc(fused[#loc59, #loc60])
#loc247 = loc(fused[#loc63, #loc61])
#loc248 = loc(fused[#loc64, #loc65])
#loc249 = loc(fused[#loc66, #loc67])
#loc250 = loc(fused[#loc68, #loc65])
#loc251 = loc(fused[#loc70, #loc69])
#loc252 = loc(fused[#loc71, #loc72])
#loc253 = loc(fused[#loc73, #loc74])
#loc254 = loc(fused[#loc75, #loc76, #loc77, #loc72])
#loc255 = loc(fused[#loc79, #loc80])
#loc256 = loc(fused[#loc81, #loc82])
#loc257 = loc(fused[#loc83, #loc84])
#loc258 = loc(fused[#loc86, #loc87])
#loc259 = loc(fused[#loc88, #loc82])
#loc260 = loc(fused[#loc89, #loc90])
#loc261 = loc(fused[#loc92, #loc91])
#loc262 = loc(fused[#loc93, #loc94])
#loc263 = loc(fused[#loc96, #loc90])
#loc264 = loc(fused[#loc100, #loc99])
#loc265 = loc(fused[#loc101, #loc102])
#loc266 = loc(fused[#loc103, #loc104])
#loc267 = loc(fused[#loc105, #loc106])
#loc268 = loc(fused[#loc109, #loc107])
#loc269 = loc(fused[#loc110, #loc111])
#loc270 = loc(fused[#loc112, #loc113])
#loc271 = loc(fused[#loc114, #loc111])
#loc272 = loc(fused[#loc116, #loc115])
#loc273 = loc(fused[#loc117, #loc118])
#loc274 = loc(fused[#loc119, #loc120])
#loc275 = loc(fused[#loc121, #loc118])
#loc276 = loc(fused[#loc122, #loc123])
#loc277 = loc(fused[#loc124, #loc125])
#loc278 = loc(fused[#loc126, #loc127])
#loc279 = loc(fused[#loc129, #loc130])
#loc280 = loc(fused[#loc131, #loc125])
#loc281 = loc(fused[#loc132, #loc133])
#loc282 = loc(fused[#loc135, #loc134])
#loc283 = loc(fused[#loc136, #loc137])
#loc284 = loc(fused[#loc139, #loc133])
#loc285 = loc(fused[#loc143, #loc142])
#loc286 = loc(fused[#loc144, #loc145])
#loc287 = loc(fused[#loc146, #loc147])
#loc288 = loc(fused[#loc148, #loc149])
#loc289 = loc(fused[#loc152, #loc150])
#loc290 = loc(fused[#loc153, #loc154])
#loc291 = loc(fused[#loc155, #loc156])
#loc292 = loc(fused[#loc157, #loc158, #loc159, #loc154])
#loc293 = loc(fused[#loc163, #loc162])
#loc294 = loc(fused[#loc164, #loc165])
#loc295 = loc(fused[#loc166, #loc167])
#loc296 = loc(fused[#loc168, #loc165])
#loc297 = loc(fused[#loc169, #loc170])
#loc298 = loc(fused[#loc171, #loc172])
#loc299 = loc(fused[#loc174, #loc173])
#loc300 = loc(fused[#loc175, #loc176])
#loc301 = loc(fused[#loc178, #loc172])
#loc302 = loc(fused[#loc182, #loc181])
#loc303 = loc(fused[#loc183, #loc184])
#loc304 = loc(fused[#loc185, #loc186])
#loc305 = loc(fused[#loc187, #loc188])
#loc306 = loc(fused[#loc191, #loc189])
#loc307 = loc(fused[#loc192, #loc193])
#loc308 = loc(fused[#loc194, #loc195])
#loc309 = loc(fused[#loc196, #loc193])
#loc310 = loc(fused[#loc198, #loc197])
#loc311 = loc(fused[#loc199, #loc200])
#loc312 = loc(fused[#loc201, #loc202])
#loc313 = loc(fused[#loc203, #loc200])
#loc314 = loc(fused[#loc204, #loc205])
#loc315 = loc(fused[#loc206, #loc207])
#loc316 = loc(fused[#loc209, #loc208])
#loc317 = loc(fused[#loc210, #loc211])
#loc318 = loc(fused[#loc213, #loc207])
#loc319 = loc(fused[#loc217, #loc216])
