!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printDoubleLine(!cir.double) loc(#loc92)
  cir.func no_proto  @CWE457_Use_of_Uninitialized_Variable__double_pointer_16_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc94)
    cir.scope {
      cir.while {
        %1 = cir.const #cir.int<1> : !s32i loc(#loc9)
        %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc9)
        cir.condition(%2) loc(#loc9)
      } do {
        cir.break loc(#loc10)
      } loc(#loc95)
    } loc(#loc95)
    cir.scope {
      cir.while {
        %1 = cir.const #cir.int<1> : !s32i loc(#loc13)
        %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc13)
        cir.condition(%2) loc(#loc13)
      } do {
        %1 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc14)
        %2 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc15)
        cir.call @printDoubleLine(%2) : (!cir.double) -> () loc(#loc16)
        cir.break loc(#loc17)
      } loc(#loc96)
    } loc(#loc96)
    cir.return loc(#loc4)
  } loc(#loc93)
  cir.func no_proto  @CWE457_Use_of_Uninitialized_Variable__double_pointer_16_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc98)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc20)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc99)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc22)
    cir.return loc(#loc19)
  } loc(#loc97)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc100)
  cir.func private  @exit(!s32i) extra(#fn_attr1) loc(#loc101)
  cir.func no_proto internal private  @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc103)
    cir.scope {
      cir.while {
        %1 = cir.const #cir.int<1> : !s32i loc(#loc34)
        %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc34)
        cir.condition(%2) loc(#loc34)
      } do {
        cir.break loc(#loc35)
      } loc(#loc104)
    } loc(#loc104)
    cir.scope {
      cir.while {
        %1 = cir.const #cir.int<1> : !s32i loc(#loc38)
        %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc38)
        cir.condition(%2) loc(#loc38)
      } do {
        %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc39)
        %2 = cir.const #cir.int<8> : !u64i loc(#loc106)
        %3 = cir.call @malloc(%2) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc39)
        %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc107)
        cir.store %4, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc108)
        cir.scope {
          %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc46)
          %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc47)
          %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc47)
          %12 = cir.cmp(eq, %9, %11) : !cir.ptr<!cir.double>, !s32i loc(#loc110)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc48)
          cir.if %13 {
            %14 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc50)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc51)
            %16 = cir.unary(minus, %15) : !s32i, !s32i loc(#loc52)
            cir.call @exit(%16) : (!s32i) -> () extra(#fn_attr1) loc(#loc50)
          } loc(#loc111)
        } loc(#loc109)
        %5 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc53)
        %6 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc54)
        cir.store %5, %6 : !cir.double, !cir.ptr<!cir.double> loc(#loc112)
        %7 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc56)
        %8 = cir.load %7 : !cir.ptr<!cir.double>, !cir.double loc(#loc57)
        cir.call @printDoubleLine(%8) : (!cir.double) -> () loc(#loc58)
        cir.break loc(#loc59)
      } loc(#loc105)
    } loc(#loc105)
    cir.return loc(#loc29)
  } loc(#loc102)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc114)
    cir.scope {
      cir.while {
        %1 = cir.const #cir.int<1> : !s32i loc(#loc66)
        %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc66)
        cir.condition(%2) loc(#loc66)
      } do {
        %1 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc67)
        %2 = cir.const #cir.int<8> : !u64i loc(#loc116)
        %3 = cir.call @malloc(%2) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc67)
        %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc117)
        cir.store %4, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc118)
        cir.scope {
          %7 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc74)
          %8 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc75)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!cir.double> loc(#loc75)
          %10 = cir.cmp(eq, %7, %9) : !cir.ptr<!cir.double>, !s32i loc(#loc120)
          %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc76)
          cir.if %11 {
            %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc78)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc79)
            %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc80)
            cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr1) loc(#loc78)
          } loc(#loc121)
        } loc(#loc119)
        %5 = cir.const #cir.fp<5.000000e+00> : !cir.double loc(#loc81)
        %6 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc82)
        cir.store %5, %6 : !cir.double, !cir.ptr<!cir.double> loc(#loc122)
        cir.break loc(#loc84)
      } loc(#loc115)
    } loc(#loc115)
    cir.scope {
      cir.while {
        %1 = cir.const #cir.int<1> : !s32i loc(#loc87)
        %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc87)
        cir.condition(%2) loc(#loc87)
      } do {
        %1 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc88)
        %2 = cir.load %1 : !cir.ptr<!cir.double>, !cir.double loc(#loc89)
        cir.call @printDoubleLine(%2) : (!cir.double) -> () loc(#loc90)
        cir.break loc(#loc91)
      } loc(#loc123)
    } loc(#loc123)
    cir.return loc(#loc61)
  } loc(#loc113)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE457_Use_of_Uninitialized_Variable/s01/CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":38:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":38:41)
#loc3 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":24:1)
#loc4 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":39:1)
#loc5 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":26:5)
#loc6 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":26:14)
#loc7 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":27:5)
#loc8 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":32:5)
#loc9 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":27:11)
#loc10 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":31:9)
#loc11 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":33:5)
#loc12 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":38:5)
#loc13 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":33:11)
#loc14 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":36:26)
#loc15 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":36:25)
#loc16 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":36:9)
#loc17 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":37:9)
#loc18 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":88:1)
#loc19 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":92:1)
#loc20 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":90:5)
#loc21 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":90:13)
#loc22 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":91:5)
#loc23 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":91:13)
#loc24 = loc("/usr/include/stdlib.h":672:1)
#loc25 = loc("/usr/include/stdlib.h":672:45)
#loc26 = loc("/usr/include/stdlib.h":756:1)
#loc27 = loc("/usr/include/stdlib.h":756:70)
#loc28 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":46:1)
#loc29 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":65:1)
#loc30 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":48:5)
#loc31 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":48:14)
#loc32 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":49:5)
#loc33 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":54:5)
#loc34 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":49:11)
#loc35 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":53:9)
#loc36 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":55:5)
#loc37 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":64:5)
#loc38 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":55:11)
#loc39 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":59:26)
#loc40 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":59:33)
#loc41 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":59:46)
#loc42 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":59:47)
#loc43 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":59:9)
#loc44 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":60:9)
#loc45 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":60:37)
#loc46 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":60:13)
#loc47 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":60:21)
#loc48 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":60:18)
#loc49 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":60:27)
#loc50 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":60:28)
#loc51 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":60:34)
#loc52 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":60:33)
#loc53 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":61:17)
#loc54 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":61:10)
#loc55 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":61:9)
#loc56 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":62:26)
#loc57 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":62:25)
#loc58 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":62:9)
#loc59 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":63:9)
#loc60 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":68:1)
#loc61 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":86:1)
#loc62 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":70:5)
#loc63 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":70:14)
#loc64 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":71:5)
#loc65 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":79:5)
#loc66 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":71:11)
#loc67 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":75:26)
#loc68 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":75:33)
#loc69 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":75:46)
#loc70 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":75:47)
#loc71 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":75:9)
#loc72 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":76:9)
#loc73 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":76:37)
#loc74 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":76:13)
#loc75 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":76:21)
#loc76 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":76:18)
#loc77 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":76:27)
#loc78 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":76:28)
#loc79 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":76:34)
#loc80 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":76:33)
#loc81 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":77:17)
#loc82 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":77:10)
#loc83 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":77:9)
#loc84 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":78:9)
#loc85 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":80:5)
#loc86 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":85:5)
#loc87 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":80:11)
#loc88 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":83:26)
#loc89 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":83:25)
#loc90 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":83:9)
#loc91 = loc("CWE457_Use_of_Uninitialized_Variable__double_pointer_16.c":84:9)
#loc92 = loc(fused[#loc1, #loc2])
#loc93 = loc(fused[#loc3, #loc4])
#loc94 = loc(fused[#loc5, #loc6])
#loc95 = loc(fused[#loc7, #loc8])
#loc96 = loc(fused[#loc11, #loc12])
#loc97 = loc(fused[#loc18, #loc19])
#loc98 = loc(fused[#loc20, #loc21])
#loc99 = loc(fused[#loc22, #loc23])
#loc100 = loc(fused[#loc24, #loc25])
#loc101 = loc(fused[#loc26, #loc27])
#loc102 = loc(fused[#loc28, #loc29])
#loc103 = loc(fused[#loc30, #loc31])
#loc104 = loc(fused[#loc32, #loc33])
#loc105 = loc(fused[#loc36, #loc37])
#loc106 = loc(fused[#loc40, #loc41])
#loc107 = loc(fused[#loc39, #loc42])
#loc108 = loc(fused[#loc43, #loc42])
#loc109 = loc(fused[#loc44, #loc45])
#loc110 = loc(fused[#loc46, #loc47])
#loc111 = loc(fused[#loc49, #loc45])
#loc112 = loc(fused[#loc55, #loc53])
#loc113 = loc(fused[#loc60, #loc61])
#loc114 = loc(fused[#loc62, #loc63])
#loc115 = loc(fused[#loc64, #loc65])
#loc116 = loc(fused[#loc68, #loc69])
#loc117 = loc(fused[#loc67, #loc70])
#loc118 = loc(fused[#loc71, #loc70])
#loc119 = loc(fused[#loc72, #loc73])
#loc120 = loc(fused[#loc74, #loc75])
#loc121 = loc(fused[#loc77, #loc73])
#loc122 = loc(fused[#loc83, #loc81])
#loc123 = loc(fused[#loc85, #loc86])
