!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc41 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":117:10)
#loc42 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":117:14)
#loc43 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":117:20)
#loc44 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":117:32)
#loc146 = loc(fused[#loc41, #loc42])
#loc147 = loc(fused[#loc43, #loc44])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE775_Missing_Release_of_File_Descriptor_or_Handle/CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc129)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"BadSource_open.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc3)
  cir.func no_proto @CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc131)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc8)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc9)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc132)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc3)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc3)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc11)
    %6 = cir.const #cir.int<64> : !s32i loc(#loc12)
    %7 = cir.binop(or, %5, %6) : !s32i loc(#loc133)
    %8 = cir.const #cir.int<256> : !s32i loc(#loc13)
    %9 = cir.const #cir.int<128> : !s32i loc(#loc14)
    %10 = cir.binop(or, %8, %9) : !s32i loc(#loc134)
    %11 = cir.call @open(%4, %7, %10) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc15)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc135)
    cir.scope {
      %12 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc137)
      %13 = cir.call %12() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc20)
      %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc20)
      cir.if %14 {
      } loc(#loc138)
    } loc(#loc136)
    cir.return loc(#loc5)
  } loc(#loc130)
  cir.func no_proto @CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc140)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc25)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc141)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc27)
    cir.return loc(#loc24)
  } loc(#loc139)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc142)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc143)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc144)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc35)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc36)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc37)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc38)
  cir.func @main(%arg0: !s32i loc(fused[#loc41, #loc42]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc43, #loc44])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc146)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc147)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc40)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc45)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc45)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc46)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc47)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc47)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc48)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc35)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc35)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc49)
    %8 = cir.get_global @CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08_good : !cir.ptr<!cir.func<!void ()>> loc(#loc148)
    cir.call @CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08_good() : () -> () loc(#loc50)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc36)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc52)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc37)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc37)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc53)
    %13 = cir.get_global @CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc149)
    cir.call @CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08_bad() : () -> () loc(#loc54)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc38)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc38)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc57)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc150)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    cir.return %17 : !s32i loc(#loc150)
  } loc(#loc145)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc60)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc61)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    cir.return %2 : !s32i loc(#loc152)
  } loc(#loc151)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc63)
  cir.func private @close(!s32i) -> !s32i loc(#loc153)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc155)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc70)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc71)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc156)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc73)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc73)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc74)
    %6 = cir.const #cir.int<64> : !s32i loc(#loc75)
    %7 = cir.binop(or, %5, %6) : !s32i loc(#loc157)
    %8 = cir.const #cir.int<256> : !s32i loc(#loc76)
    %9 = cir.const #cir.int<128> : !s32i loc(#loc77)
    %10 = cir.binop(or, %8, %9) : !s32i loc(#loc158)
    %11 = cir.call @open(%4, %7, %10) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc78)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc159)
    cir.scope {
      %12 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<!s32i ()>> loc(#loc161)
      %13 = cir.call %12() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc83)
      %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc83)
      cir.if %14 {
        %15 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc63)
        %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc63)
        cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc88)
      } else {
        cir.scope {
          %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc91)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc92)
          %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc93)
          %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc164)
          cir.if %18 {
            %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc95)
            %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc96)
          } loc(#loc165)
        } loc(#loc163)
      } loc(#loc162)
    } loc(#loc160)
    cir.return loc(#loc67)
  } loc(#loc154)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc98)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc99)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc167)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc167)
    cir.return %2 : !s32i loc(#loc167)
  } loc(#loc166)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc169)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc106)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc170)
    %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc108)
    %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc108)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc109)
    %6 = cir.const #cir.int<64> : !s32i loc(#loc110)
    %7 = cir.binop(or, %5, %6) : !s32i loc(#loc171)
    %8 = cir.const #cir.int<256> : !s32i loc(#loc111)
    %9 = cir.const #cir.int<128> : !s32i loc(#loc112)
    %10 = cir.binop(or, %8, %9) : !s32i loc(#loc172)
    %11 = cir.call @open(%4, %7, %10) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc113)
    cir.store %11, %0 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    cir.scope {
      %12 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<!s32i ()>> loc(#loc175)
      %13 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc118)
      %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc118)
      cir.if %14 {
        cir.scope {
          %15 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc123)
          %16 = cir.const #cir.int<1> : !s32i loc(#loc124)
          %17 = cir.unary(minus, %16) : !s32i, !s32i loc(#loc125)
          %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc178)
          cir.if %18 {
            %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc127)
            %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc128)
          } loc(#loc179)
        } loc(#loc177)
      } loc(#loc176)
    } loc(#loc174)
    cir.return loc(#loc102)
  } loc(#loc168)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE775_Missing_Release_of_File_Descriptor_or_Handle/CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":0:0)
#loc1 = loc("/usr/include/fcntl.h":209:1)
#loc2 = loc("/usr/include/fcntl.h":209:56)
#loc3 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":49:17)
#loc4 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":43:1)
#loc5 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":55:1)
#loc6 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":45:5)
#loc7 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":45:9)
#loc8 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":47:13)
#loc9 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":47:12)
#loc10 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":47:5)
#loc11 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":49:39)
#loc12 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":49:46)
#loc13 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":49:55)
#loc14 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":49:63)
#loc15 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":49:12)
#loc16 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":49:5)
#loc17 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":49:71)
#loc18 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":50:5)
#loc19 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":54:5)
#loc20 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":50:8)
#loc21 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":50:26)
#loc22 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":51:5)
#loc23 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":102:1)
#loc24 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":106:1)
#loc25 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":104:5)
#loc26 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":104:14)
#loc27 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":105:5)
#loc28 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":105:14)
#loc29 = loc("/usr/include/stdlib.h":575:1)
#loc30 = loc("/usr/include/stdlib.h":575:41)
#loc31 = loc("/usr/include/time.h":76:1)
#loc32 = loc("/usr/include/time.h":76:38)
#loc33 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc34 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc35 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":122:15)
#loc36 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":124:15)
#loc37 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":127:15)
#loc38 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":129:15)
#loc39 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":117:1)
#loc40 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":132:1)
#loc45 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":118:1)
#loc46 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":120:27)
#loc47 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":120:22)
#loc48 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":120:5)
#loc49 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":122:5)
#loc50 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":123:5)
#loc51 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":123:80)
#loc52 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":124:5)
#loc53 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":127:5)
#loc54 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":128:5)
#loc55 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":128:79)
#loc56 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":129:5)
#loc57 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":131:12)
#loc58 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":131:5)
#loc59 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":31:1)
#loc60 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":34:1)
#loc61 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":33:12)
#loc62 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":33:5)
#loc63 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":72:19)
#loc64 = loc("/usr/include/unistd.h":358:1)
#loc65 = loc("/usr/include/unistd.h":358:27)
#loc66 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":62:1)
#loc67 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":82:1)
#loc68 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":64:5)
#loc69 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":64:9)
#loc70 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":66:13)
#loc71 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":66:12)
#loc72 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":66:5)
#loc73 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":68:17)
#loc74 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":68:39)
#loc75 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":68:46)
#loc76 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":68:55)
#loc77 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":68:63)
#loc78 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":68:12)
#loc79 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":68:5)
#loc80 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":68:71)
#loc81 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":69:5)
#loc82 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":81:5)
#loc83 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":69:8)
#loc84 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":69:27)
#loc85 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":70:5)
#loc86 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":73:5)
#loc87 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":75:5)
#loc88 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":72:9)
#loc89 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":77:9)
#loc90 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":80:9)
#loc91 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":77:13)
#loc92 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":77:22)
#loc93 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":77:21)
#loc94 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":78:9)
#loc95 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":79:19)
#loc96 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":79:13)
#loc97 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":36:1)
#loc98 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":39:1)
#loc99 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":38:12)
#loc100 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":38:5)
#loc101 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":85:1)
#loc102 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":100:1)
#loc103 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":87:5)
#loc104 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":87:9)
#loc105 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":89:13)
#loc106 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":89:12)
#loc107 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":89:5)
#loc108 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":91:17)
#loc109 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":91:39)
#loc110 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":91:46)
#loc111 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":91:55)
#loc112 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":91:63)
#loc113 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":91:12)
#loc114 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":91:5)
#loc115 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":91:71)
#loc116 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":92:5)
#loc117 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":99:5)
#loc118 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":92:8)
#loc119 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":92:26)
#loc120 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":93:5)
#loc121 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":95:9)
#loc122 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":98:9)
#loc123 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":95:13)
#loc124 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":95:22)
#loc125 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":95:21)
#loc126 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":96:9)
#loc127 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":97:19)
#loc128 = loc("CWE775_Missing_Release_of_File_Descriptor_or_Handle__open_no_close_08.c":97:13)
#loc129 = loc(fused[#loc1, #loc2])
#loc130 = loc(fused[#loc4, #loc5])
#loc131 = loc(fused[#loc6, #loc7])
#loc132 = loc(fused[#loc10, #loc8])
#loc133 = loc(fused[#loc11, #loc12])
#loc134 = loc(fused[#loc13, #loc14])
#loc135 = loc(fused[#loc16, #loc17])
#loc136 = loc(fused[#loc18, #loc19])
#loc137 = loc(fused[#loc20, #loc21])
#loc138 = loc(fused[#loc22, #loc19])
#loc139 = loc(fused[#loc23, #loc24])
#loc140 = loc(fused[#loc25, #loc26])
#loc141 = loc(fused[#loc27, #loc28])
#loc142 = loc(fused[#loc29, #loc30])
#loc143 = loc(fused[#loc31, #loc32])
#loc144 = loc(fused[#loc33, #loc34])
#loc145 = loc(fused[#loc39, #loc40])
#loc148 = loc(fused[#loc50, #loc51])
#loc149 = loc(fused[#loc54, #loc55])
#loc150 = loc(fused[#loc58, #loc57])
#loc151 = loc(fused[#loc59, #loc60])
#loc152 = loc(fused[#loc62, #loc61])
#loc153 = loc(fused[#loc64, #loc65])
#loc154 = loc(fused[#loc66, #loc67])
#loc155 = loc(fused[#loc68, #loc69])
#loc156 = loc(fused[#loc72, #loc70])
#loc157 = loc(fused[#loc74, #loc75])
#loc158 = loc(fused[#loc76, #loc77])
#loc159 = loc(fused[#loc79, #loc80])
#loc160 = loc(fused[#loc81, #loc82])
#loc161 = loc(fused[#loc83, #loc84])
#loc162 = loc(fused[#loc85, #loc86, #loc87, #loc82])
#loc163 = loc(fused[#loc89, #loc90])
#loc164 = loc(fused[#loc91, #loc92])
#loc165 = loc(fused[#loc94, #loc90])
#loc166 = loc(fused[#loc97, #loc98])
#loc167 = loc(fused[#loc100, #loc99])
#loc168 = loc(fused[#loc101, #loc102])
#loc169 = loc(fused[#loc103, #loc104])
#loc170 = loc(fused[#loc107, #loc105])
#loc171 = loc(fused[#loc109, #loc110])
#loc172 = loc(fused[#loc111, #loc112])
#loc173 = loc(fused[#loc114, #loc115])
#loc174 = loc(fused[#loc116, #loc117])
#loc175 = loc(fused[#loc118, #loc119])
#loc176 = loc(fused[#loc120, #loc117])
#loc177 = loc(fused[#loc121, #loc122])
#loc178 = loc(fused[#loc123, #loc124])
#loc179 = loc(fused[#loc126, #loc122])
