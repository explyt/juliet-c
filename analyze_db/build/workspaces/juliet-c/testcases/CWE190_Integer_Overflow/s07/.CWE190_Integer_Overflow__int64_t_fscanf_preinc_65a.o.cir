!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @CWE190_Integer_Overflow__int64_t_fscanf_preinc_65b_badSink(!s64i) loc(#loc57)
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc58)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%ld\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc60)
  cir.func no_proto @CWE190_Integer_Overflow__int64_t_fscanf_preinc_65_bad() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc62)
    %1 = cir.alloca !cir.ptr<!cir.func<(!s64i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s64i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc63)
    %2 = cir.get_global @CWE190_Integer_Overflow__int64_t_fscanf_preinc_65b_badSink : !cir.ptr<!cir.func<(!s64i)>> loc(#loc14)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!s64i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s64i)>>> loc(#loc63)
    %3 = cir.const #cir.int<0> : !s64i loc(#loc15)
    cir.store %3, %0 : !s64i, !cir.ptr<!s64i> loc(#loc64)
    %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc17)
    %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc59)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc18)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc60)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc60)
    %9 = cir.call @__isoc99_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc17)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!s64i)>>>, !cir.ptr<!cir.func<(!s64i)>> loc(#loc19)
    %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc20)
    cir.call %10(%11) : (!cir.ptr<!cir.func<(!s64i)>>, !s64i) -> () loc(#loc19)
    cir.return loc(#loc10)
  } loc(#loc61)
  cir.func no_proto @CWE190_Integer_Overflow__int64_t_fscanf_preinc_65_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc66)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc23)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc67)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc25)
    cir.return loc(#loc22)
  } loc(#loc65)
  cir.func private @CWE190_Integer_Overflow__int64_t_fscanf_preinc_65b_goodG2BSink(!s64i) loc(#loc68)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc70)
    %1 = cir.alloca !cir.ptr<!cir.func<(!s64i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s64i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc71)
    %2 = cir.get_global @CWE190_Integer_Overflow__int64_t_fscanf_preinc_65b_goodG2BSink : !cir.ptr<!cir.func<(!s64i)>> loc(#loc34)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!s64i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s64i)>>> loc(#loc71)
    %3 = cir.const #cir.int<0> : !s64i loc(#loc35)
    cir.store %3, %0 : !s64i, !cir.ptr<!s64i> loc(#loc72)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc37)
    %5 = cir.cast(integral, %4 : !s32i), !s64i loc(#loc37)
    cir.store %5, %0 : !s64i, !cir.ptr<!s64i> loc(#loc73)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!s64i)>>>, !cir.ptr<!cir.func<(!s64i)>> loc(#loc39)
    %7 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc40)
    cir.call %6(%7) : (!cir.ptr<!cir.func<(!s64i)>>, !s64i) -> () loc(#loc39)
    cir.return loc(#loc30)
  } loc(#loc69)
  cir.func private @CWE190_Integer_Overflow__int64_t_fscanf_preinc_65b_goodB2GSink(!s64i) loc(#loc74)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s64i, !cir.ptr<!s64i>, ["data"] {alignment = 8 : i64} loc(#loc76)
    %1 = cir.alloca !cir.ptr<!cir.func<(!s64i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s64i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc77)
    %2 = cir.get_global @CWE190_Integer_Overflow__int64_t_fscanf_preinc_65b_goodB2GSink : !cir.ptr<!cir.func<(!s64i)>> loc(#loc48)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!s64i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s64i)>>> loc(#loc77)
    %3 = cir.const #cir.int<0> : !s64i loc(#loc49)
    cir.store %3, %0 : !s64i, !cir.ptr<!s64i> loc(#loc78)
    %4 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc51)
    %5 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc59)
    %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc52)
    %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc79)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc79)
    %9 = cir.call @__isoc99_fscanf(%6, %8, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s64i>) -> !s32i loc(#loc51)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!s64i)>>>, !cir.ptr<!cir.func<(!s64i)>> loc(#loc55)
    %11 = cir.load %0 : !cir.ptr<!s64i>, !s64i loc(#loc56)
    cir.call %10(%11) : (!cir.ptr<!cir.func<(!s64i)>>, !s64i) -> () loc(#loc55)
    cir.return loc(#loc44)
  } loc(#loc75)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s07/CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":0:0)
#loc1 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":24:1)
#loc2 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":24:77)
#loc3 = loc("/usr/include/stdio.h":463:1)
#loc4 = loc("/usr/include/stdio.h":465:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":33:20)
#loc8 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":33:24)
#loc9 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":26:1)
#loc10 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":36:1)
#loc11 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":28:5)
#loc12 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":28:13)
#loc13 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":30:5)
#loc14 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":30:33)
#loc15 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":31:12)
#loc16 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":31:5)
#loc17 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":33:5)
#loc18 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":33:13)
#loc19 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":35:5)
#loc20 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":35:13)
#loc21 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":68:1)
#loc22 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":72:1)
#loc23 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":70:5)
#loc24 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":70:13)
#loc25 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":71:5)
#loc26 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":71:13)
#loc27 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":43:1)
#loc28 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":43:81)
#loc29 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":45:1)
#loc30 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":53:1)
#loc31 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":47:5)
#loc32 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":47:13)
#loc33 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":48:5)
#loc34 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":48:33)
#loc35 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":49:12)
#loc36 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":49:5)
#loc37 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":51:12)
#loc38 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":51:5)
#loc39 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":52:5)
#loc40 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":52:13)
#loc41 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":56:1)
#loc42 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":56:81)
#loc43 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":58:1)
#loc44 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":66:1)
#loc45 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":60:5)
#loc46 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":60:13)
#loc47 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":61:5)
#loc48 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":61:33)
#loc49 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":62:12)
#loc50 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":62:5)
#loc51 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":64:5)
#loc52 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":64:13)
#loc53 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":64:20)
#loc54 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":64:24)
#loc55 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":65:5)
#loc56 = loc("CWE190_Integer_Overflow__int64_t_fscanf_preinc_65a.c":65:13)
#loc57 = loc(fused[#loc1, #loc2])
#loc58 = loc(fused[#loc3, #loc4])
#loc59 = loc(fused[#loc5, #loc6])
#loc60 = loc(fused[#loc7, #loc8])
#loc61 = loc(fused[#loc9, #loc10])
#loc62 = loc(fused[#loc11, #loc12])
#loc63 = loc(fused[#loc13, #loc14])
#loc64 = loc(fused[#loc16, #loc15])
#loc65 = loc(fused[#loc21, #loc22])
#loc66 = loc(fused[#loc23, #loc24])
#loc67 = loc(fused[#loc25, #loc26])
#loc68 = loc(fused[#loc27, #loc28])
#loc69 = loc(fused[#loc29, #loc30])
#loc70 = loc(fused[#loc31, #loc32])
#loc71 = loc(fused[#loc33, #loc34])
#loc72 = loc(fused[#loc36, #loc35])
#loc73 = loc(fused[#loc38, #loc37])
#loc74 = loc(fused[#loc41, #loc42])
#loc75 = loc(fused[#loc43, #loc44])
#loc76 = loc(fused[#loc45, #loc46])
#loc77 = loc(fused[#loc47, #loc48])
#loc78 = loc(fused[#loc50, #loc49])
#loc79 = loc(fused[#loc53, #loc54])
