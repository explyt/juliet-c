!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_629badSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc90)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc91)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc92)
  cir.func @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_623badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc94)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc95)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc96)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc97)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc98)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc17)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc17)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc17)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc17)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc17)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc17)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc17)
    cir.store %11, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc98)
    %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    cir.store %12, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc99)
    cir.call @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_629badSourceERPc(%3) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc20)
    cir.br ^bb1 loc(#loc100)
  ^bb1:  // pred: ^bb0
    %13 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc94)
    cir.store %13, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc94)
    %14 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc23)
    %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc23)
    cir.store %16, %2 : !u64i, !cir.ptr<!u64i> loc(#loc101)
    cir.br ^bb2 loc(#loc102)
  ^bb2:  // pred: ^bb1
    %17 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc29)
    cir.store %18, %1 : !u64i, !cir.ptr<!u64i> loc(#loc103)
    cir.br ^bb3 loc(#loc102)
  ^bb3:  // 2 preds: ^bb2, ^bb5
    %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc31)
    %20 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc32)
    %21 = cir.cmp(lt, %19, %20) : !u64i, !cir.bool loc(#loc104)
    cir.brcond %21 ^bb4, ^bb6 loc(#loc104)
  ^bb4:  // pred: ^bb3
    %22 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc34)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %23 : !u64i), !cir.ptr<!s8i> loc(#loc35)
    %25 = cir.load %24 : !cir.ptr<!s8i>, !s8i loc(#loc33)
    %26 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc36)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc37)
    %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !u64i), !cir.ptr<!s8i> loc(#loc37)
    cir.store %25, %28 : !s8i, !cir.ptr<!s8i> loc(#loc105)
    cir.br ^bb5 loc(#loc28)
  ^bb5:  // pred: ^bb4
    %29 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc38)
    %30 = cir.unary(inc, %29) : !u64i, !u64i loc(#loc39)
    cir.store %30, %1 : !u64i, !cir.ptr<!u64i> loc(#loc106)
    cir.br ^bb3 loc(#loc102)
  ^bb6:  // pred: ^bb3
    cir.br ^bb7 loc(#loc28)
  ^bb7:  // pred: ^bb6
    %31 = cir.const #cir.int<0> : !s8i loc(#loc40)
    %32 = cir.const #cir.int<50> : !s32i loc(#loc41)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc42)
    %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc41)
    %35 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc43)
    %36 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %34 : !s32i), !cir.ptr<!s8i> loc(#loc43)
    cir.store %31, %36 : !s8i, !cir.ptr<!s8i> loc(#loc107)
    %37 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    cir.br ^bb8 loc(#loc22)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc8)
  } loc(#loc93)
  cir.func private @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_6213goodG2BSourceERPc(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc108)
  cir.func internal private @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc110)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc111)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc112)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc113)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc114)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc58)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc58)
    %7 = cir.const #cir.int<1> : !u64i loc(#loc58)
    %8 = cir.binop(mul, %6, %7) : !u64i loc(#loc58)
    %9 = cir.alloca !u8i, !cir.ptr<!u8i>, %8 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc58)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc58)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc58)
    cir.store %11, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc114)
    %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
    cir.store %12, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc115)
    cir.call @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_6213goodG2BSourceERPc(%3) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc61)
    cir.br ^bb1 loc(#loc116)
  ^bb1:  // pred: ^bb0
    %13 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc110)
    cir.store %13, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc110)
    %14 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc64)
    %15 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
    %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc64)
    cir.store %16, %2 : !u64i, !cir.ptr<!u64i> loc(#loc117)
    cir.br ^bb2 loc(#loc118)
  ^bb2:  // pred: ^bb1
    %17 = cir.const #cir.int<0> : !s32i loc(#loc70)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc70)
    cir.store %18, %1 : !u64i, !cir.ptr<!u64i> loc(#loc119)
    cir.br ^bb3 loc(#loc118)
  ^bb3:  // 2 preds: ^bb2, ^bb5
    %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc72)
    %20 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc73)
    %21 = cir.cmp(lt, %19, %20) : !u64i, !cir.bool loc(#loc120)
    cir.brcond %21 ^bb4, ^bb6 loc(#loc120)
  ^bb4:  // pred: ^bb3
    %22 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
    %23 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc75)
    %24 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %23 : !u64i), !cir.ptr<!s8i> loc(#loc76)
    %25 = cir.load %24 : !cir.ptr<!s8i>, !s8i loc(#loc74)
    %26 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc77)
    %27 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc78)
    %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !u64i), !cir.ptr<!s8i> loc(#loc78)
    cir.store %25, %28 : !s8i, !cir.ptr<!s8i> loc(#loc121)
    cir.br ^bb5 loc(#loc69)
  ^bb5:  // pred: ^bb4
    %29 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc79)
    %30 = cir.unary(inc, %29) : !u64i, !u64i loc(#loc80)
    cir.store %30, %1 : !u64i, !cir.ptr<!u64i> loc(#loc122)
    cir.br ^bb3 loc(#loc118)
  ^bb6:  // pred: ^bb3
    cir.br ^bb7 loc(#loc69)
  ^bb7:  // pred: ^bb6
    %31 = cir.const #cir.int<0> : !s8i loc(#loc81)
    %32 = cir.const #cir.int<50> : !s32i loc(#loc82)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc83)
    %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc82)
    %35 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc84)
    %36 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %34 : !s32i), !cir.ptr<!s8i> loc(#loc84)
    cir.store %31, %36 : !s8i, !cir.ptr<!s8i> loc(#loc123)
    %37 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%37) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    cir.br ^bb8 loc(#loc63)
  ^bb8:  // pred: ^bb7
    cir.return loc(#loc49)
  } loc(#loc109)
  cir.func @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_624goodEv() extra(#fn_attr1) {
    cir.call @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62L7goodG2BEv() : () -> () loc(#loc89)
    cir.return loc(#loc88)
  } loc(#loc124)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":27:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":27:28)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":29:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":47:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":36:9)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":36:25)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":37:9)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":37:16)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":37:19)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":31:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":31:12)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":32:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":32:33)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":33:12)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":33:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":34:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":35:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":46:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":38:19)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":38:26)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":38:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":38:30)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":40:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":43:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":40:18)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":40:14)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":40:21)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":40:25)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":42:23)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":42:28)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":42:29)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":42:18)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":42:13)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":40:35)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":40:34)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":44:22)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":44:14)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":44:17)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":44:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":45:19)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":45:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":54:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":54:32)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":56:1)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":74:1)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":63:9)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":63:25)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":64:9)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":64:16)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":64:19)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":58:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":58:12)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":59:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":59:33)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":60:12)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":60:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":61:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":62:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":73:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":65:19)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":65:26)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":65:9)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":65:30)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":67:9)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":70:9)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":67:18)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":67:14)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":67:21)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":67:25)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":69:23)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":69:28)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":69:29)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":69:18)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":69:13)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":67:35)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":67:34)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":71:22)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":71:14)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":71:17)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":71:9)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":72:19)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":72:9)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":76:1)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":79:1)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_alloca_loop_62a.cpp":78:5)
#loc90 = loc(fused[#loc1, #loc2])
#loc91 = loc(fused[#loc3, #loc4])
#loc92 = loc(fused[#loc5, #loc6])
#loc93 = loc(fused[#loc7, #loc8])
#loc94 = loc(fused[#loc9, #loc10])
#loc95 = loc(fused[#loc11, #loc12])
#loc96 = loc(fused[#loc11, #loc13])
#loc97 = loc(fused[#loc14, #loc15])
#loc98 = loc(fused[#loc16, #loc17])
#loc99 = loc(fused[#loc19, #loc18])
#loc100 = loc(fused[#loc21, #loc22])
#loc101 = loc(fused[#loc25, #loc26])
#loc102 = loc(fused[#loc27, #loc28])
#loc103 = loc(fused[#loc30, #loc29])
#loc104 = loc(fused[#loc31, #loc32])
#loc105 = loc(fused[#loc37, #loc35])
#loc106 = loc(fused[#loc39, #loc38])
#loc107 = loc(fused[#loc43, #loc40])
#loc108 = loc(fused[#loc46, #loc47])
#loc109 = loc(fused[#loc48, #loc49])
#loc110 = loc(fused[#loc50, #loc51])
#loc111 = loc(fused[#loc52, #loc53])
#loc112 = loc(fused[#loc52, #loc54])
#loc113 = loc(fused[#loc55, #loc56])
#loc114 = loc(fused[#loc57, #loc58])
#loc115 = loc(fused[#loc60, #loc59])
#loc116 = loc(fused[#loc62, #loc63])
#loc117 = loc(fused[#loc66, #loc67])
#loc118 = loc(fused[#loc68, #loc69])
#loc119 = loc(fused[#loc71, #loc70])
#loc120 = loc(fused[#loc72, #loc73])
#loc121 = loc(fused[#loc78, #loc76])
#loc122 = loc(fused[#loc80, #loc79])
#loc123 = loc(fused[#loc84, #loc81])
#loc124 = loc(fused[#loc87, #loc88])
