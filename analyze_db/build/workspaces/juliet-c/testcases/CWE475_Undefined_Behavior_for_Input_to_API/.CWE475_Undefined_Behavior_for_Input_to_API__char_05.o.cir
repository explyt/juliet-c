!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE475_Undefined_Behavior_for_Input_to_API/CWE475_Undefined_Behavior_for_Input_to_API__char_05.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticTrue = #cir.int<1> : !s32i {alignment = 4 : i64} loc(#loc103)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc104)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"abcdefghijklmnopqrstuvwxyz\00" : !cir.array<!s8i x 27>> : !cir.array<!s8i x 27> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc105)
  cir.func no_proto @CWE475_Undefined_Behavior_for_Input_to_API__char_05_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc103)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc12)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc12)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc110)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc111)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc110)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc110)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc19)
          cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc111)
          %7 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc20)
          %8 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
          %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 27>> loc(#loc5)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 27>>), !cir.ptr<!s8i> loc(#loc5)
          %11 = cir.call @strcpy(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc20)
          %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
          %13 = cir.const #cir.int<6> : !s32i loc(#loc23)
          %14 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc24)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc112)
          %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
          %17 = cir.const #cir.int<4> : !s32i loc(#loc26)
          %18 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc27)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc113)
          %20 = cir.const #cir.int<10> : !s32i loc(#loc28)
          %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc28)
          %22 = cir.const #cir.int<1> : !u64i loc(#loc114)
          %23 = cir.binop(mul, %21, %22) : !u64i loc(#loc115)
          cir.libc.memcpy %23 bytes from %19 to %15 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc116)
          %24 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
          cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc34)
        } loc(#loc109)
      } loc(#loc108)
    } loc(#loc107)
    cir.return loc(#loc9)
  } loc(#loc106)
  cir.func no_proto @CWE475_Undefined_Behavior_for_Input_to_API__char_05_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc118)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc37)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc119)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc39)
    cir.return loc(#loc36)
  } loc(#loc117)
  cir.global "private" internal dsolocal @staticFalse = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc120)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc43)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticFalse : !cir.ptr<!s32i> loc(#loc120)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc48)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc48)
      cir.if %2 {
        %3 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc43)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc43)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc52)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc125)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc126)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc125)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc125)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc58)
          cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc126)
          %7 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc59)
          %8 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc60)
          %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 27>> loc(#loc61)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 27>>), !cir.ptr<!s8i> loc(#loc61)
          %11 = cir.call @strcpy(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc59)
          %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
          %13 = cir.const #cir.int<6> : !s32i loc(#loc63)
          %14 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc64)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc127)
          %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
          %17 = cir.const #cir.int<4> : !s32i loc(#loc66)
          %18 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc67)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc128)
          %20 = cir.const #cir.int<10> : !s32i loc(#loc68)
          %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc68)
          %22 = cir.const #cir.int<1> : !u64i loc(#loc129)
          %23 = cir.binop(mul, %21, %22) : !u64i loc(#loc130)
          cir.libc.memmove %23 bytes from %19 to %15 : !cir.ptr<!void>, !u64i loc(#loc131)
          %24 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc73)
          cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc74)
        } loc(#loc124)
      } loc(#loc123)
    } loc(#loc122)
    cir.return loc(#loc45)
  } loc(#loc121)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticTrue : !cir.ptr<!s32i> loc(#loc103)
      %1 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc79)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc79)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc136)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc137)
          %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc136)
          cir.store %5, %3 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc136)
          %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc86)
          cir.store %6, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc137)
          %7 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc87)
          %8 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
          %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 27>> loc(#loc89)
          %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 27>>), !cir.ptr<!s8i> loc(#loc89)
          %11 = cir.call @strcpy(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc87)
          %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
          %13 = cir.const #cir.int<6> : !s32i loc(#loc91)
          %14 = cir.ptr_stride(%12 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc92)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc138)
          %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
          %17 = cir.const #cir.int<4> : !s32i loc(#loc94)
          %18 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc95)
          %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc139)
          %20 = cir.const #cir.int<10> : !s32i loc(#loc96)
          %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc96)
          %22 = cir.const #cir.int<1> : !u64i loc(#loc140)
          %23 = cir.binop(mul, %21, %22) : !u64i loc(#loc141)
          cir.libc.memmove %23 bytes from %19 to %15 : !cir.ptr<!void>, !u64i loc(#loc142)
          %24 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc101)
          cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc102)
        } loc(#loc135)
      } loc(#loc134)
    } loc(#loc133)
    cir.return loc(#loc76)
  } loc(#loc132)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE475_Undefined_Behavior_for_Input_to_API/CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":0:0)
#loc1 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":23:1)
#loc2 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":23:25)
#loc3 = loc("/usr/include/string.h":141:1)
#loc4 = loc("/usr/include/string.h":142:14)
#loc5 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":35:26)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":28:1)
#loc9 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":41:1)
#loc10 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":30:5)
#loc11 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":40:5)
#loc12 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":30:8)
#loc13 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":31:5)
#loc14 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":32:9)
#loc15 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":39:9)
#loc16 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":33:13)
#loc17 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":33:36)
#loc18 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":34:13)
#loc19 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":34:27)
#loc20 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":35:13)
#loc21 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":35:20)
#loc22 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":37:20)
#loc23 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":37:27)
#loc24 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":37:25)
#loc25 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":37:30)
#loc26 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":37:37)
#loc27 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":37:35)
#loc28 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":37:40)
#loc29 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":37:43)
#loc30 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":37:54)
#loc31 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":37:13)
#loc32 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":37:55)
#loc33 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":38:23)
#loc34 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":38:13)
#loc35 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":84:1)
#loc36 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":88:1)
#loc37 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":86:5)
#loc38 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":86:11)
#loc39 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":87:5)
#loc40 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":87:11)
#loc41 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":24:1)
#loc42 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":24:26)
#loc43 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":53:19)
#loc44 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":48:1)
#loc45 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":66:1)
#loc46 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":50:5)
#loc47 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":65:5)
#loc48 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":50:8)
#loc49 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":51:5)
#loc50 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":54:5)
#loc51 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":56:5)
#loc52 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":53:9)
#loc53 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":57:9)
#loc54 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":64:9)
#loc55 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":58:13)
#loc56 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":58:36)
#loc57 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":59:13)
#loc58 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":59:27)
#loc59 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":60:13)
#loc60 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":60:20)
#loc61 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":60:26)
#loc62 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":62:21)
#loc63 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":62:28)
#loc64 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":62:26)
#loc65 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":62:31)
#loc66 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":62:38)
#loc67 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":62:36)
#loc68 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":62:41)
#loc69 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":62:44)
#loc70 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":62:55)
#loc71 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":62:13)
#loc72 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":62:56)
#loc73 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":63:23)
#loc74 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":63:13)
#loc75 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":69:1)
#loc76 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":82:1)
#loc77 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":71:5)
#loc78 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":81:5)
#loc79 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":71:8)
#loc80 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":72:5)
#loc81 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":73:9)
#loc82 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":80:9)
#loc83 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":74:13)
#loc84 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":74:36)
#loc85 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":75:13)
#loc86 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":75:27)
#loc87 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":76:13)
#loc88 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":76:20)
#loc89 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":76:26)
#loc90 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":78:21)
#loc91 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":78:28)
#loc92 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":78:26)
#loc93 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":78:31)
#loc94 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":78:38)
#loc95 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":78:36)
#loc96 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":78:41)
#loc97 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":78:44)
#loc98 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":78:55)
#loc99 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":78:13)
#loc100 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":78:56)
#loc101 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":79:23)
#loc102 = loc("CWE475_Undefined_Behavior_for_Input_to_API__char_05.c":79:13)
#loc103 = loc(fused[#loc1, #loc2])
#loc104 = loc(fused[#loc3, #loc4])
#loc105 = loc(fused[#loc6, #loc7])
#loc106 = loc(fused[#loc8, #loc9])
#loc107 = loc(fused[#loc10, #loc11])
#loc108 = loc(fused[#loc13, #loc11])
#loc109 = loc(fused[#loc14, #loc15])
#loc110 = loc(fused[#loc16, #loc17])
#loc111 = loc(fused[#loc18, #loc19])
#loc112 = loc(fused[#loc22, #loc23])
#loc113 = loc(fused[#loc25, #loc26])
#loc114 = loc(fused[#loc29, #loc30])
#loc115 = loc(fused[#loc28, #loc30])
#loc116 = loc(fused[#loc31, #loc32])
#loc117 = loc(fused[#loc35, #loc36])
#loc118 = loc(fused[#loc37, #loc38])
#loc119 = loc(fused[#loc39, #loc40])
#loc120 = loc(fused[#loc41, #loc42])
#loc121 = loc(fused[#loc44, #loc45])
#loc122 = loc(fused[#loc46, #loc47])
#loc123 = loc(fused[#loc49, #loc50, #loc51, #loc47])
#loc124 = loc(fused[#loc53, #loc54])
#loc125 = loc(fused[#loc55, #loc56])
#loc126 = loc(fused[#loc57, #loc58])
#loc127 = loc(fused[#loc62, #loc63])
#loc128 = loc(fused[#loc65, #loc66])
#loc129 = loc(fused[#loc69, #loc70])
#loc130 = loc(fused[#loc68, #loc70])
#loc131 = loc(fused[#loc71, #loc72])
#loc132 = loc(fused[#loc75, #loc76])
#loc133 = loc(fused[#loc77, #loc78])
#loc134 = loc(fused[#loc80, #loc78])
#loc135 = loc(fused[#loc81, #loc82])
#loc136 = loc(fused[#loc83, #loc84])
#loc137 = loc(fused[#loc85, #loc86])
#loc138 = loc(fused[#loc90, #loc91])
#loc139 = loc(fused[#loc93, #loc94])
#loc140 = loc(fused[#loc97, #loc98])
#loc141 = loc(fused[#loc96, #loc98])
#loc142 = loc(fused[#loc99, #loc100])
