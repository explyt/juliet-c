!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc293)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc294)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc295)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc296)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc297)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc298)
  cir.func private @close(!s32i) -> !s32i loc(#loc299)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc300)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc301)
  cir.func private @printIntLine(!s32i) loc(#loc302)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc303)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc305)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc29)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc306)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc308)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc33)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc33)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc311)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc312)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc313)
          %9 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc314)
          %10 = cir.const #cir.int<1> : !s32i loc(#loc43)
          %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc43)
          cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc313)
          cir.scope {
            cir.do {
              cir.scope {
                %12 = cir.const #cir.int<2> : !s32i loc(#loc50)
                %13 = cir.const #cir.int<1> : !s32i loc(#loc51)
                %14 = cir.const #cir.int<6> : !s32i loc(#loc52)
                %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc53)
                cir.store %15, %8 : !s32i, !cir.ptr<!s32i> loc(#loc317)
                cir.scope {
                  %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc58)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc59)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc59)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc319)
                  cir.if %57 {
                    cir.break loc(#loc61)
                  } loc(#loc320)
                } loc(#loc318)
                %16 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc321)
                %17 = cir.const #cir.int<0> : !s32i loc(#loc64)
                %18 = cir.const #cir.int<16> : !u64i loc(#loc322)
                cir.libc.memset %18 bytes from %16 set to %17 : !cir.ptr<!void>, !s32i, !u64i loc(#loc323)
                %19 = cir.const #cir.int<2> : !s32i loc(#loc69)
                %20 = cir.cast(integral, %19 : !s32i), !u16i loc(#loc69)
                %21 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc70)
                cir.store %20, %21 : !u16i, !cir.ptr<!u16i> loc(#loc324)
                %22 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
                %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
                %24 = cir.call @inet_addr(%23) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc72)
                %25 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc73)
                %26 = cir.get_member %25[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc74)
                cir.store %24, %26 : !u32i, !cir.ptr<!u32i> loc(#loc325)
                %27 = cir.const #cir.int<27015> : !s32i loc(#loc77)
                %28 = cir.cast(integral, %27 : !s32i), !u16i loc(#loc77)
                %29 = cir.call @htons(%28) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc78)
                %30 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc79)
                cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc326)
                cir.scope {
                  %54 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc84)
                  %55 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc328)
                  %56 = cir.const #cir.int<16> : !u64i loc(#loc329)
                  %57 = cir.cast(integral, %56 : !u64i), !u32i loc(#loc329)
                  %58 = cir.call @connect(%54, %55, %57) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc89)
                  %59 = cir.const #cir.int<1> : !s32i loc(#loc90)
                  %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc90)
                  %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc330)
                  cir.if %61 {
                    cir.break loc(#loc92)
                  } loc(#loc331)
                } loc(#loc327)
                %31 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc93)
                %32 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc94)
                %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc94)
                %34 = cir.const #cir.int<3> : !s32i loc(#loc95)
                %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc95)
                %36 = cir.const #cir.int<4> : !u64i loc(#loc95)
                %37 = cir.binop(mul, %35, %36) : !u64i loc(#loc95)
                %38 = cir.const #cir.int<2> : !s32i loc(#loc95)
                %39 = cir.cast(integral, %38 : !s32i), !u64i loc(#loc95)
                %40 = cir.binop(add, %37, %39) : !u64i loc(#loc95)
                %41 = cir.const #cir.int<1> : !s32i loc(#loc96)
                %42 = cir.cast(integral, %41 : !s32i), !u64i loc(#loc96)
                %43 = cir.binop(sub, %40, %42) : !u64i loc(#loc332)
                %44 = cir.const #cir.int<0> : !s32i loc(#loc97)
                %45 = cir.call @recv(%31, %33, %43, %44) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc98)
                %46 = cir.cast(integral, %45 : !s64i), !s32i loc(#loc98)
                cir.store %46, %6 : !s32i, !cir.ptr<!s32i> loc(#loc333)
                cir.scope {
                  %54 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc103)
                  %55 = cir.const #cir.int<1> : !s32i loc(#loc104)
                  %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc104)
                  %57 = cir.cmp(eq, %54, %56) : !s32i, !cir.bool loc(#loc335)
                  %58 = cir.ternary(%57, true {
                    %59 = cir.const #true loc(#loc105)
                    cir.yield %59 : !cir.bool loc(#loc105)
                  }, false {
                    %59 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc106)
                    %60 = cir.const #cir.int<0> : !s32i loc(#loc107)
                    %61 = cir.cmp(eq, %59, %60) : !s32i, !cir.bool loc(#loc336)
                    %62 = cir.ternary(%61, true {
                      %63 = cir.const #true loc(#loc105)
                      cir.yield %63 : !cir.bool loc(#loc105)
                    }, false {
                      %63 = cir.const #false loc(#loc105)
                      cir.yield %63 : !cir.bool loc(#loc105)
                    }) : (!cir.bool) -> !cir.bool loc(#loc105)
                    cir.yield %62 : !cir.bool loc(#loc105)
                  }) : (!cir.bool) -> !cir.bool loc(#loc105)
                  cir.if %58 {
                    cir.break loc(#loc109)
                  } loc(#loc337)
                } loc(#loc334)
                %47 = cir.const #cir.int<0> : !s32i loc(#loc110)
                %48 = cir.cast(integral, %47 : !s32i), !s8i loc(#loc110)
                %49 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc111)
                %50 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc112)
                %51 = cir.ptr_stride(%50 : !cir.ptr<!s8i>, %49 : !s32i), !cir.ptr<!s8i> loc(#loc112)
                cir.store %48, %51 : !s8i, !cir.ptr<!s8i> loc(#loc338)
                %52 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc113)
                %53 = cir.call @atoi(%52) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc114)
                cir.store %53, %0 : !s32i, !cir.ptr<!s32i> loc(#loc339)
              } loc(#loc316)
              cir.yield loc(#loc47)
            } while {
              %12 = cir.const #cir.int<0> : !s32i loc(#loc117)
              %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc117)
              cir.condition(%13) loc(#loc117)
            } loc(#loc315)
          } loc(#loc315)
          cir.scope {
            %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc120)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc121)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc121)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc341)
            cir.if %15 {
              %16 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc123)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc124)
            } loc(#loc342)
          } loc(#loc340)
        } loc(#loc310)
      } loc(#loc309)
    } loc(#loc307)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc344)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc345)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc131)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc132)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc132)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc346)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc347)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc131)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc348)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc349)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc139)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc140)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc140)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc351)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc142)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc143)
          %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc144)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc142)
        } loc(#loc352)
      } loc(#loc350)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc147)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc147)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc354)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc149)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc150)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc150)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc355)
          cir.condition(%24) loc(#loc151)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc153)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc154)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc155)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc156)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc357)
          } loc(#loc356)
          cir.yield loc(#loc146)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc157)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc158)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc358)
          cir.yield loc(#loc353)
        } loc(#loc353)
      } loc(#loc353)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc159)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc160)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc161)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc159)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc162)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc163)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc164)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc164)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc163)
    } loc(#loc343)
    cir.return loc(#loc25)
  } loc(#loc304)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc360)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc167)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc361)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc169)
    cir.return loc(#loc166)
  } loc(#loc359)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc172)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc173)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc363)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc363)
    cir.return %2 : !s32i loc(#loc363)
  } loc(#loc362)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc364)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc177)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc366)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc182)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc183)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc367)
    cir.scope {
      %3 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc369)
      %4 = cir.call %3() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc187)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc187)
      cir.if %5 {
        %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc177)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc177)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc192)
      } else {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc193)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc371)
      } loc(#loc370)
    } loc(#loc368)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc373)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc374)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc201)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc202)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc202)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc375)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc376)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc201)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc377)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc378)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc209)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc210)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc210)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc380)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc212)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc213)
          %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc214)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc212)
        } loc(#loc381)
      } loc(#loc379)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc217)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc217)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc383)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc219)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc220)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc220)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc384)
          cir.condition(%24) loc(#loc221)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc223)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc224)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc225)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc226)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc386)
          } loc(#loc385)
          cir.yield loc(#loc216)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc227)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc228)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc387)
          cir.yield loc(#loc382)
        } loc(#loc382)
      } loc(#loc382)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc229)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc230)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc231)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc229)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc232)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc233)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc234)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc234)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc233)
    } loc(#loc372)
    cir.return loc(#loc179)
  } loc(#loc365)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc236)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc237)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc389)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc389)
    cir.return %2 : !s32i loc(#loc389)
  } loc(#loc388)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc391)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc243)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc244)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc392)
    cir.scope {
      %3 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc394)
      %4 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc248)
      %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc248)
      cir.if %5 {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc251)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc396)
      } loc(#loc395)
    } loc(#loc393)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc398)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc399)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc259)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc260)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc260)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc400)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc401)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc259)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc402)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc403)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc267)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc268)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc268)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc405)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc270)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc271)
          %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc272)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc270)
        } loc(#loc406)
      } loc(#loc404)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc275)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc275)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc408)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc277)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc278)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc278)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc409)
          cir.condition(%24) loc(#loc279)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc281)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc282)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc283)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc284)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc411)
          } loc(#loc410)
          cir.yield loc(#loc274)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc285)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc286)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc412)
          cir.yield loc(#loc407)
        } loc(#loc407)
      } loc(#loc407)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc287)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc288)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc289)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc287)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc290)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc291)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc292)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc292)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc291)
    } loc(#loc397)
    cir.return loc(#loc240)
  } loc(#loc390)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":90:53)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("/usr/include/stdlib.h":672:1)
#loc17 = loc("/usr/include/stdlib.h":672:45)
#loc18 = loc("/usr/include/stdlib.h":756:1)
#loc19 = loc("/usr/include/stdlib.h":756:70)
#loc20 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc21 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc22 = loc("/usr/include/stdlib.h":687:1)
#loc23 = loc("/usr/include/stdlib.h":687:32)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":57:1)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":135:1)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":59:5)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":59:9)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":61:13)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":61:12)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":61:5)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":62:5)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":120:5)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":62:8)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":62:26)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":63:5)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":64:9)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":119:9)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":69:13)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":69:17)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":70:13)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":70:32)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":71:13)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":71:36)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":72:13)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":72:45)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":73:13)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":108:21)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":74:13)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":107:13)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":83:40)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":83:49)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":83:62)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":83:33)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":83:17)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":83:73)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":84:17)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":87:17)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":84:21)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":84:38)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":85:17)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":86:21)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":88:24)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":88:25)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":88:34)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":88:37)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":88:51)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":88:17)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":88:52)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":89:38)
#loc70 = loc("/usr/include/netinet/in.h":249:5)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":89:17)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":90:43)
#loc73 = loc("/usr/include/netinet/in.h":251:20)
#loc74 = loc("/usr/include/netinet/in.h":33:15)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":90:17)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":90:63)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":91:42)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":91:36)
#loc79 = loc("/usr/include/netinet/in.h":250:15)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":91:17)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":91:50)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":92:17)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":95:17)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":92:29)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":92:62)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":92:63)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":92:72)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":92:86)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":92:21)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":92:92)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":93:17)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":94:21)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":98:35)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":98:50)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":98:63)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":98:81)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":98:84)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":98:30)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":98:17)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":98:85)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":99:17)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":102:17)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":99:21)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":99:35)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":99:48)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":99:51)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":99:65)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":100:17)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":101:21)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":104:43)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":104:29)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":104:17)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":106:29)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":106:24)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":106:17)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":106:40)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":108:20)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":109:13)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":112:13)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":109:17)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":109:34)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":110:13)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":111:30)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":111:17)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":121:5)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":134:5)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":122:9)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":122:16)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":123:9)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":123:14)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":126:28)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":126:35)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":126:42)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":126:52)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":126:53)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":126:9)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":127:9)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":127:43)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":127:13)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":127:27)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":127:33)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":127:34)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":127:40)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":127:39)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":128:9)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":131:9)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":128:18)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":128:14)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":128:21)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":128:33)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":128:23)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":129:9)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":130:29)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":130:13)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":130:24)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":130:25)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":128:40)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":128:39)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":132:22)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":132:33)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":132:34)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":132:9)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":133:9)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":133:14)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":200:1)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":204:1)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":202:5)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":202:14)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":203:5)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":203:14)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":45:1)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":48:1)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":47:12)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":47:5)
#loc175 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc176 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":150:19)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":142:1)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":171:1)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":144:5)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":144:9)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":146:13)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":146:12)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":146:5)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":147:5)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":156:5)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":147:8)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":147:27)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":148:5)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":151:5)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":153:5)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":150:9)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":155:16)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":155:9)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":157:5)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":170:5)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":158:9)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":158:16)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":159:9)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":159:14)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":162:28)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":162:35)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":162:42)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":162:52)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":162:53)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":162:9)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":163:9)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":163:43)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":163:13)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":163:27)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":163:33)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":163:34)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":163:40)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":163:39)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":164:9)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":167:9)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":164:18)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":164:14)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":164:21)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":164:33)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":164:23)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":165:9)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":166:29)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":166:13)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":166:24)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":166:25)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":164:40)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":164:39)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":168:22)
#loc230 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":168:33)
#loc231 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":168:34)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":168:9)
#loc233 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":169:9)
#loc234 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":169:14)
#loc235 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":50:1)
#loc236 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":53:1)
#loc237 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":52:12)
#loc238 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":52:5)
#loc239 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":174:1)
#loc240 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":198:1)
#loc241 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":176:5)
#loc242 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":176:9)
#loc243 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":178:13)
#loc244 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":178:12)
#loc245 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":178:5)
#loc246 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":179:5)
#loc247 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":183:5)
#loc248 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":179:8)
#loc249 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":179:26)
#loc250 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":180:5)
#loc251 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":182:16)
#loc252 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":182:9)
#loc253 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":184:5)
#loc254 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":197:5)
#loc255 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":185:9)
#loc256 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":185:16)
#loc257 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":186:9)
#loc258 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":186:14)
#loc259 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":189:28)
#loc260 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":189:35)
#loc261 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":189:42)
#loc262 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":189:52)
#loc263 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":189:53)
#loc264 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":189:9)
#loc265 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":190:9)
#loc266 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":190:43)
#loc267 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":190:13)
#loc268 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":190:27)
#loc269 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":190:33)
#loc270 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":190:34)
#loc271 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":190:40)
#loc272 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":190:39)
#loc273 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":191:9)
#loc274 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":194:9)
#loc275 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":191:18)
#loc276 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":191:14)
#loc277 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":191:21)
#loc278 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":191:33)
#loc279 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":191:23)
#loc280 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":192:9)
#loc281 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":193:29)
#loc282 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":193:13)
#loc283 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":193:24)
#loc284 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":193:25)
#loc285 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":191:40)
#loc286 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":191:39)
#loc287 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":195:22)
#loc288 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":195:33)
#loc289 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":195:34)
#loc290 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":195:9)
#loc291 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":196:9)
#loc292 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_connect_socket_08.c":196:14)
#loc293 = loc(fused[#loc1, #loc2])
#loc294 = loc(fused[#loc3, #loc4])
#loc295 = loc(fused[#loc6, #loc7])
#loc296 = loc(fused[#loc8, #loc9])
#loc297 = loc(fused[#loc10, #loc11])
#loc298 = loc(fused[#loc12, #loc13])
#loc299 = loc(fused[#loc14, #loc15])
#loc300 = loc(fused[#loc16, #loc17])
#loc301 = loc(fused[#loc18, #loc19])
#loc302 = loc(fused[#loc20, #loc21])
#loc303 = loc(fused[#loc22, #loc23])
#loc304 = loc(fused[#loc24, #loc25])
#loc305 = loc(fused[#loc26, #loc27])
#loc306 = loc(fused[#loc30, #loc28])
#loc307 = loc(fused[#loc31, #loc32])
#loc308 = loc(fused[#loc33, #loc34])
#loc309 = loc(fused[#loc35, #loc32])
#loc310 = loc(fused[#loc36, #loc37])
#loc311 = loc(fused[#loc38, #loc39])
#loc312 = loc(fused[#loc40, #loc41])
#loc313 = loc(fused[#loc42, #loc43])
#loc314 = loc(fused[#loc44, #loc45])
#loc315 = loc(fused[#loc46, #loc47])
#loc316 = loc(fused[#loc48, #loc49])
#loc317 = loc(fused[#loc54, #loc55])
#loc318 = loc(fused[#loc56, #loc57])
#loc319 = loc(fused[#loc58, #loc59])
#loc320 = loc(fused[#loc60, #loc57])
#loc321 = loc(fused[#loc62, #loc63])
#loc322 = loc(fused[#loc65, #loc66])
#loc323 = loc(fused[#loc67, #loc68])
#loc324 = loc(fused[#loc71, #loc69])
#loc325 = loc(fused[#loc75, #loc76])
#loc326 = loc(fused[#loc80, #loc81])
#loc327 = loc(fused[#loc82, #loc83])
#loc328 = loc(fused[#loc85, #loc86])
#loc329 = loc(fused[#loc87, #loc88])
#loc330 = loc(fused[#loc89, #loc90])
#loc331 = loc(fused[#loc91, #loc83])
#loc332 = loc(fused[#loc95, #loc96])
#loc333 = loc(fused[#loc99, #loc100])
#loc334 = loc(fused[#loc101, #loc102])
#loc335 = loc(fused[#loc103, #loc104])
#loc336 = loc(fused[#loc106, #loc107])
#loc337 = loc(fused[#loc108, #loc102])
#loc338 = loc(fused[#loc112, #loc110])
#loc339 = loc(fused[#loc115, #loc116])
#loc340 = loc(fused[#loc118, #loc119])
#loc341 = loc(fused[#loc120, #loc121])
#loc342 = loc(fused[#loc122, #loc119])
#loc343 = loc(fused[#loc125, #loc126])
#loc344 = loc(fused[#loc127, #loc128])
#loc345 = loc(fused[#loc129, #loc130])
#loc346 = loc(fused[#loc133, #loc134])
#loc347 = loc(fused[#loc132, #loc134])
#loc348 = loc(fused[#loc131, #loc135])
#loc349 = loc(fused[#loc136, #loc135])
#loc350 = loc(fused[#loc137, #loc138])
#loc351 = loc(fused[#loc139, #loc140])
#loc352 = loc(fused[#loc141, #loc138])
#loc353 = loc(fused[#loc145, #loc146])
#loc354 = loc(fused[#loc148, #loc147])
#loc355 = loc(fused[#loc149, #loc150])
#loc356 = loc(fused[#loc152, #loc146])
#loc357 = loc(fused[#loc154, #loc153])
#loc358 = loc(fused[#loc158, #loc157])
#loc359 = loc(fused[#loc165, #loc166])
#loc360 = loc(fused[#loc167, #loc168])
#loc361 = loc(fused[#loc169, #loc170])
#loc362 = loc(fused[#loc171, #loc172])
#loc363 = loc(fused[#loc174, #loc173])
#loc364 = loc(fused[#loc175, #loc176])
#loc365 = loc(fused[#loc178, #loc179])
#loc366 = loc(fused[#loc180, #loc181])
#loc367 = loc(fused[#loc184, #loc182])
#loc368 = loc(fused[#loc185, #loc186])
#loc369 = loc(fused[#loc187, #loc188])
#loc370 = loc(fused[#loc189, #loc190, #loc191, #loc186])
#loc371 = loc(fused[#loc194, #loc193])
#loc372 = loc(fused[#loc195, #loc196])
#loc373 = loc(fused[#loc197, #loc198])
#loc374 = loc(fused[#loc199, #loc200])
#loc375 = loc(fused[#loc203, #loc204])
#loc376 = loc(fused[#loc202, #loc204])
#loc377 = loc(fused[#loc201, #loc205])
#loc378 = loc(fused[#loc206, #loc205])
#loc379 = loc(fused[#loc207, #loc208])
#loc380 = loc(fused[#loc209, #loc210])
#loc381 = loc(fused[#loc211, #loc208])
#loc382 = loc(fused[#loc215, #loc216])
#loc383 = loc(fused[#loc218, #loc217])
#loc384 = loc(fused[#loc219, #loc220])
#loc385 = loc(fused[#loc222, #loc216])
#loc386 = loc(fused[#loc224, #loc223])
#loc387 = loc(fused[#loc228, #loc227])
#loc388 = loc(fused[#loc235, #loc236])
#loc389 = loc(fused[#loc238, #loc237])
#loc390 = loc(fused[#loc239, #loc240])
#loc391 = loc(fused[#loc241, #loc242])
#loc392 = loc(fused[#loc245, #loc243])
#loc393 = loc(fused[#loc246, #loc247])
#loc394 = loc(fused[#loc248, #loc249])
#loc395 = loc(fused[#loc250, #loc247])
#loc396 = loc(fused[#loc252, #loc251])
#loc397 = loc(fused[#loc253, #loc254])
#loc398 = loc(fused[#loc255, #loc256])
#loc399 = loc(fused[#loc257, #loc258])
#loc400 = loc(fused[#loc261, #loc262])
#loc401 = loc(fused[#loc260, #loc262])
#loc402 = loc(fused[#loc259, #loc263])
#loc403 = loc(fused[#loc264, #loc263])
#loc404 = loc(fused[#loc265, #loc266])
#loc405 = loc(fused[#loc267, #loc268])
#loc406 = loc(fused[#loc269, #loc266])
#loc407 = loc(fused[#loc273, #loc274])
#loc408 = loc(fused[#loc276, #loc275])
#loc409 = loc(fused[#loc277, #loc278])
#loc410 = loc(fused[#loc280, #loc274])
#loc411 = loc(fused[#loc282, #loc281])
#loc412 = loc(fused[#loc286, #loc285])
