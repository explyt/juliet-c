!s32i = !cir.int<s, 32>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_52c.c":25:70)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_52c.c":25:86)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_52c.c":37:74)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_52c.c":37:90)
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc30 = loc(fused[#loc7, #loc8])
#loc32 = loc(fused[#loc18, #loc19])
module @"/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_declare_52c.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc27)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc28)
  cir.func @CWE590_Free_Memory_Not_on_Heap__free_struct_declare_52c_badSink(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc30)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc9)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc10)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc11)
    %3 = cir.ptr_stride(%1 : !cir.ptr<!ty__twoIntsStruct>, %2 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc12)
    cir.call @printStructLine(%3) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc13)
    %4 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc14)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc15)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc15)
    cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc14)
    cir.return loc(#loc6)
  } loc(#loc29)
  cir.func @CWE590_Free_Memory_Not_on_Heap__free_struct_declare_52c_goodG2BSink(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc18, #loc19])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc32)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc20)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc21)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %3 = cir.ptr_stride(%1 : !cir.ptr<!ty__twoIntsStruct>, %2 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc23)
    cir.call @printStructLine(%3) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc24)
    %4 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc25)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc26)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc26)
    cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc25)
    cir.return loc(#loc17)
  } loc(#loc31)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_declare_52c.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_52c.c":25:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_52c.c":30:1)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_52c.c":26:1)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_52c.c":27:22)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_52c.c":27:27)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_52c.c":27:28)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_52c.c":27:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_52c.c":29:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_52c.c":29:10)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_52c.c":37:1)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_52c.c":42:1)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_52c.c":38:1)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_52c.c":39:22)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_52c.c":39:27)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_52c.c":39:28)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_52c.c":39:5)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_52c.c":41:5)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_declare_52c.c":41:10)
#loc27 = loc(fused[#loc1, #loc2])
#loc28 = loc(fused[#loc3, #loc4])
#loc29 = loc(fused[#loc5, #loc6])
#loc31 = loc(fused[#loc16, #loc17])
