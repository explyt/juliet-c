!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":112:44)
#loc289 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":242:44)
#loc327 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":186:23)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc351)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc352)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc353)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc354)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc355)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc356)
  cir.func private @close(!s32i) -> !s32i loc(#loc357)
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_badData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc358)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc360)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc361)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc362)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc363)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc364)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc31)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc365)
    cir.br ^bb1 loc(#loc366)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc25)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc362)
    cir.br ^bb2 loc(#loc367)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc367)
  ^bb3:  // pred: ^bb26
    %9 = cir.const #cir.int<0> : !s32i loc(#loc37)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc37)
    cir.brcond %10 ^bb4, ^bb27 loc(#loc37)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc368)
  ^bb5:  // pred: ^bb4
    %11 = cir.const #cir.int<2> : !s32i loc(#loc40)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc41)
    %13 = cir.const #cir.int<6> : !s32i loc(#loc42)
    %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc43)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc369)
    cir.br ^bb6 loc(#loc370)
  ^bb6:  // pred: ^bb5
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc49)
    %18 = cir.cmp(eq, %15, %17) : !s32i, !cir.bool loc(#loc371)
    cir.brcond %18 ^bb7, ^bb8 loc(#loc372)
  ^bb7:  // pred: ^bb6
    cir.br ^bb27 loc(#loc51)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc47)
  ^bb9:  // pred: ^bb8
    %19 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc373)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %21 = cir.const #cir.int<16> : !u64i loc(#loc374)
    cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc375)
    %22 = cir.const #cir.int<2> : !s32i loc(#loc59)
    %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc59)
    %24 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc60)
    cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc376)
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc62)
    %28 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc63)
    %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc64)
    cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc377)
    %30 = cir.const #cir.int<27015> : !s32i loc(#loc67)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc67)
    %32 = cir.call @htons(%31) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc68)
    %33 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
    cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc378)
    cir.br ^bb10 loc(#loc379)
  ^bb10:  // pred: ^bb9
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc74)
    %35 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc380)
    %36 = cir.const #cir.int<16> : !u64i loc(#loc381)
    %37 = cir.cast(integral, %36 : !u64i), !u32i loc(#loc381)
    %38 = cir.call @connect(%34, %35, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc79)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc80)
    %40 = cir.unary(minus, %39) nsw : !s32i, !s32i loc(#loc80)
    %41 = cir.cmp(eq, %38, %40) : !s32i, !cir.bool loc(#loc382)
    cir.brcond %41 ^bb11, ^bb12 loc(#loc383)
  ^bb11:  // pred: ^bb10
    cir.br ^bb27 loc(#loc82)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc73)
  ^bb13:  // pred: ^bb12
    %42 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc83)
    %43 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc84)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc84)
    %45 = cir.const #cir.int<3> : !s32i loc(#loc85)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc85)
    %47 = cir.const #cir.int<4> : !u64i loc(#loc85)
    %48 = cir.binop(mul, %46, %47) : !u64i loc(#loc85)
    %49 = cir.const #cir.int<2> : !s32i loc(#loc85)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc85)
    %51 = cir.binop(add, %48, %50) : !u64i loc(#loc85)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc86)
    %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc86)
    %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc384)
    %55 = cir.const #cir.int<0> : !s32i loc(#loc87)
    %56 = cir.call @recv(%42, %44, %54, %55) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc88)
    %57 = cir.cast(integral, %56 : !s64i), !s32i loc(#loc88)
    cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc385)
    cir.br ^bb14 loc(#loc386)
  ^bb14:  // pred: ^bb13
    %58 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc93)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc94)
    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc387)
    cir.brcond %61 ^bb15, ^bb16 loc(#loc95)
  ^bb15:  // pred: ^bb14
    %62 = cir.const #true loc(#loc95)
    cir.br ^bb21(%62 : !cir.bool) loc(#loc95)
  ^bb16:  // pred: ^bb14
    %63 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc97)
    %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc388)
    cir.brcond %65 ^bb17, ^bb18 loc(#loc95)
  ^bb17:  // pred: ^bb16
    %66 = cir.const #true loc(#loc95)
    cir.br ^bb19(%66 : !cir.bool) loc(#loc95)
  ^bb18:  // pred: ^bb16
    %67 = cir.const #false loc(#loc95)
    cir.br ^bb19(%67 : !cir.bool) loc(#loc95)
  ^bb19(%68: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":112:44)):  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc95)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21(%68 : !cir.bool) loc(#loc95)
  ^bb21(%69: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":112:44)):  // 2 preds: ^bb15, ^bb20
    cir.br ^bb22 loc(#loc95)
  ^bb22:  // pred: ^bb21
    cir.brcond %69 ^bb23, ^bb24 loc(#loc389)
  ^bb23:  // pred: ^bb22
    cir.br ^bb27 loc(#loc99)
  ^bb24:  // pred: ^bb22
    cir.br ^bb25 loc(#loc92)
  ^bb25:  // pred: ^bb24
    %70 = cir.const #cir.int<0> : !s32i loc(#loc100)
    %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc100)
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    %73 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc102)
    %74 = cir.ptr_stride(%73 : !cir.ptr<!s8i>, %72 : !s32i), !cir.ptr<!s8i> loc(#loc102)
    cir.store %71, %74 : !s8i, !cir.ptr<!s8i> loc(#loc390)
    %75 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc103)
    %76 = cir.call @atoi(%75) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc104)
    cir.store %76, %4 : !s32i, !cir.ptr<!s32i> loc(#loc391)
    cir.br ^bb26 loc(#loc39)
  ^bb26:  // pred: ^bb25
    cir.br ^bb3 loc(#loc36)
  ^bb27:  // 4 preds: ^bb3, ^bb7, ^bb11, ^bb23
    cir.br ^bb28 loc(#loc36)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc392)
  ^bb29:  // pred: ^bb28
    %77 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc110)
    %80 = cir.cmp(ne, %77, %79) : !s32i, !cir.bool loc(#loc393)
    cir.brcond %80 ^bb30, ^bb31 loc(#loc394)
  ^bb30:  // pred: ^bb29
    %81 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc112)
    %82 = cir.call @close(%81) : (!s32i) -> !s32i loc(#loc113)
    cir.br ^bb31 loc(#loc108)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc108)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc34)
  ^bb33:  // pred: ^bb32
    %83 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc114)
    %84 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_badData : !cir.ptr<!s32i> loc(#loc358)
    cir.store %83, %84 : !s32i, !cir.ptr<!s32i> loc(#loc395)
    %85 = cir.get_global @badSink : !cir.ptr<!cir.func<()>> loc(#loc396)
    cir.call %85() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc116)
    cir.return loc(#loc19)
  } loc(#loc359)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc398)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc120)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc399)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc122)
    cir.return loc(#loc119)
  } loc(#loc397)
  cir.func private @printIntLine(!s32i) loc(#loc400)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc401)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc128)
  cir.func no_proto internal private @badSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc403)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc404)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc405)
    %3 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_badData : !cir.ptr<!s32i> loc(#loc358)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc136)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc405)
    cir.br ^bb1 loc(#loc406)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc404)
    cir.store %5, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc404)
    cir.br ^bb2 loc(#loc407)
  ^bb2:  // pred: ^bb1
    %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc141)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc142)
    %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc408)
    cir.brcond %8 ^bb3, ^bb12 loc(#loc409)
  ^bb3:  // pred: ^bb2
    %9 = cir.const #cir.int<1> : !s32i loc(#loc146)
    %10 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc147)
    %11 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc148)
    %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc148)
    cir.store %9, %12 : !s32i, !cir.ptr<!s32i> loc(#loc410)
    cir.br ^bb4 loc(#loc411)
  ^bb4:  // pred: ^bb3
    %13 = cir.const #cir.int<0> : !s32i loc(#loc151)
    cir.store %13, %0 : !s32i, !cir.ptr<!s32i> loc(#loc412)
    cir.br ^bb5 loc(#loc411)
  ^bb5:  // 2 preds: ^bb4, ^bb9
    %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc153)
    %15 = cir.const #cir.int<10> : !s32i loc(#loc154)
    %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc413)
    cir.brcond %16 ^bb6, ^bb10 loc(#loc155)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc414)
  ^bb7:  // pred: ^bb6
    %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc157)
    %18 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc158)
    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc158)
    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc159)
    cir.br ^bb8 loc(#loc150)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc150)
  ^bb9:  // pred: ^bb8
    %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc160)
    %22 = cir.unary(inc, %21) nsw : !s32i, !s32i loc(#loc161)
    cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc415)
    cir.br ^bb5 loc(#loc411)
  ^bb10:  // pred: ^bb5
    cir.br ^bb11 loc(#loc150)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc144)
  ^bb12:  // pred: ^bb2
    %23 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc128)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc128)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc162)
    cir.br ^bb13 loc(#loc140)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc140)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc138)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc130)
  } loc(#loc402)
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_goodG2BData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc416)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc418)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc169)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc170)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc419)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc172)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc420)
    %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc174)
    %5 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_goodG2BData : !cir.ptr<!s32i> loc(#loc416)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc421)
    %6 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<()>> loc(#loc422)
    cir.call %6() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc176)
    cir.return loc(#loc166)
  } loc(#loc417)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc424)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc425)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc426)
    %3 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_goodG2BData : !cir.ptr<!s32i> loc(#loc416)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc185)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc426)
    cir.br ^bb1 loc(#loc427)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc425)
    cir.store %5, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc425)
    cir.br ^bb2 loc(#loc428)
  ^bb2:  // pred: ^bb1
    %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc190)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc191)
    %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc429)
    cir.brcond %8 ^bb3, ^bb12 loc(#loc430)
  ^bb3:  // pred: ^bb2
    %9 = cir.const #cir.int<1> : !s32i loc(#loc195)
    %10 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc196)
    %11 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc197)
    %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc197)
    cir.store %9, %12 : !s32i, !cir.ptr<!s32i> loc(#loc431)
    cir.br ^bb4 loc(#loc432)
  ^bb4:  // pred: ^bb3
    %13 = cir.const #cir.int<0> : !s32i loc(#loc200)
    cir.store %13, %0 : !s32i, !cir.ptr<!s32i> loc(#loc433)
    cir.br ^bb5 loc(#loc432)
  ^bb5:  // 2 preds: ^bb4, ^bb9
    %14 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc202)
    %15 = cir.const #cir.int<10> : !s32i loc(#loc203)
    %16 = cir.cmp(lt, %14, %15) : !s32i, !cir.bool loc(#loc434)
    cir.brcond %16 ^bb6, ^bb10 loc(#loc204)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc435)
  ^bb7:  // pred: ^bb6
    %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc206)
    %18 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc207)
    %19 = cir.ptr_stride(%18 : !cir.ptr<!s32i>, %17 : !s32i), !cir.ptr<!s32i> loc(#loc207)
    %20 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc207)
    cir.call @printIntLine(%20) : (!s32i) -> () loc(#loc208)
    cir.br ^bb8 loc(#loc199)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc199)
  ^bb9:  // pred: ^bb8
    %21 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc209)
    %22 = cir.unary(inc, %21) nsw : !s32i, !s32i loc(#loc210)
    cir.store %22, %0 : !s32i, !cir.ptr<!s32i> loc(#loc436)
    cir.br ^bb5 loc(#loc432)
  ^bb10:  // pred: ^bb5
    cir.br ^bb11 loc(#loc199)
  ^bb11:  // pred: ^bb10
    cir.br ^bb13 loc(#loc193)
  ^bb12:  // pred: ^bb2
    %23 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc211)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc211)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc212)
    cir.br ^bb13 loc(#loc189)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc189)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc187)
  ^bb15:  // pred: ^bb14
    cir.return loc(#loc179)
  } loc(#loc423)
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_goodB2GData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc437)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc439)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc440)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc441)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc442)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc443)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc227)
    %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc228)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc444)
    cir.br ^bb1 loc(#loc445)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<1> : !s32i loc(#loc222)
    %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc222)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc441)
    cir.br ^bb2 loc(#loc446)
  ^bb2:  // pred: ^bb1
    cir.br ^bb4 loc(#loc446)
  ^bb3:  // pred: ^bb26
    %9 = cir.const #cir.int<0> : !s32i loc(#loc234)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc234)
    cir.brcond %10 ^bb4, ^bb27 loc(#loc234)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc447)
  ^bb5:  // pred: ^bb4
    %11 = cir.const #cir.int<2> : !s32i loc(#loc237)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc238)
    %13 = cir.const #cir.int<6> : !s32i loc(#loc239)
    %14 = cir.call @socket(%11, %12, %13) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc240)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc448)
    cir.br ^bb6 loc(#loc449)
  ^bb6:  // pred: ^bb5
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc245)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc246)
    %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc246)
    %18 = cir.cmp(eq, %15, %17) : !s32i, !cir.bool loc(#loc450)
    cir.brcond %18 ^bb7, ^bb8 loc(#loc451)
  ^bb7:  // pred: ^bb6
    cir.br ^bb27 loc(#loc248)
  ^bb8:  // pred: ^bb6
    cir.br ^bb9 loc(#loc244)
  ^bb9:  // pred: ^bb8
    %19 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc452)
    %20 = cir.const #cir.int<0> : !s32i loc(#loc251)
    %21 = cir.const #cir.int<16> : !u64i loc(#loc453)
    cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc454)
    %22 = cir.const #cir.int<2> : !s32i loc(#loc256)
    %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc256)
    %24 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc60)
    cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc455)
    %25 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc258)
    %26 = cir.cast(array_to_ptrdecay, %25 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc258)
    %27 = cir.call @inet_addr(%26) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc259)
    %28 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc63)
    %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc64)
    cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc456)
    %30 = cir.const #cir.int<27015> : !s32i loc(#loc262)
    %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc262)
    %32 = cir.call @htons(%31) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc263)
    %33 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
    cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc457)
    cir.br ^bb10 loc(#loc458)
  ^bb10:  // pred: ^bb9
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc268)
    %35 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc459)
    %36 = cir.const #cir.int<16> : !u64i loc(#loc460)
    %37 = cir.cast(integral, %36 : !u64i), !u32i loc(#loc460)
    %38 = cir.call @connect(%34, %35, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc273)
    %39 = cir.const #cir.int<1> : !s32i loc(#loc274)
    %40 = cir.unary(minus, %39) nsw : !s32i, !s32i loc(#loc274)
    %41 = cir.cmp(eq, %38, %40) : !s32i, !cir.bool loc(#loc461)
    cir.brcond %41 ^bb11, ^bb12 loc(#loc462)
  ^bb11:  // pred: ^bb10
    cir.br ^bb27 loc(#loc276)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc267)
  ^bb13:  // pred: ^bb12
    %42 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc277)
    %43 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc278)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc278)
    %45 = cir.const #cir.int<3> : !s32i loc(#loc279)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc279)
    %47 = cir.const #cir.int<4> : !u64i loc(#loc279)
    %48 = cir.binop(mul, %46, %47) : !u64i loc(#loc279)
    %49 = cir.const #cir.int<2> : !s32i loc(#loc279)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc279)
    %51 = cir.binop(add, %48, %50) : !u64i loc(#loc279)
    %52 = cir.const #cir.int<1> : !s32i loc(#loc280)
    %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc280)
    %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc463)
    %55 = cir.const #cir.int<0> : !s32i loc(#loc281)
    %56 = cir.call @recv(%42, %44, %54, %55) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc282)
    %57 = cir.cast(integral, %56 : !s64i), !s32i loc(#loc282)
    cir.store %57, %0 : !s32i, !cir.ptr<!s32i> loc(#loc464)
    cir.br ^bb14 loc(#loc465)
  ^bb14:  // pred: ^bb13
    %58 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc287)
    %59 = cir.const #cir.int<1> : !s32i loc(#loc288)
    %60 = cir.unary(minus, %59) nsw : !s32i, !s32i loc(#loc288)
    %61 = cir.cmp(eq, %58, %60) : !s32i, !cir.bool loc(#loc466)
    cir.brcond %61 ^bb15, ^bb16 loc(#loc289)
  ^bb15:  // pred: ^bb14
    %62 = cir.const #true loc(#loc289)
    cir.br ^bb21(%62 : !cir.bool) loc(#loc289)
  ^bb16:  // pred: ^bb14
    %63 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc290)
    %64 = cir.const #cir.int<0> : !s32i loc(#loc291)
    %65 = cir.cmp(eq, %63, %64) : !s32i, !cir.bool loc(#loc467)
    cir.brcond %65 ^bb17, ^bb18 loc(#loc289)
  ^bb17:  // pred: ^bb16
    %66 = cir.const #true loc(#loc289)
    cir.br ^bb19(%66 : !cir.bool) loc(#loc289)
  ^bb18:  // pred: ^bb16
    %67 = cir.const #false loc(#loc289)
    cir.br ^bb19(%67 : !cir.bool) loc(#loc289)
  ^bb19(%68: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":242:44)):  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc289)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21(%68 : !cir.bool) loc(#loc289)
  ^bb21(%69: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":242:44)):  // 2 preds: ^bb15, ^bb20
    cir.br ^bb22 loc(#loc289)
  ^bb22:  // pred: ^bb21
    cir.brcond %69 ^bb23, ^bb24 loc(#loc468)
  ^bb23:  // pred: ^bb22
    cir.br ^bb27 loc(#loc293)
  ^bb24:  // pred: ^bb22
    cir.br ^bb25 loc(#loc286)
  ^bb25:  // pred: ^bb24
    %70 = cir.const #cir.int<0> : !s32i loc(#loc294)
    %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc294)
    %72 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc295)
    %73 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc296)
    %74 = cir.ptr_stride(%73 : !cir.ptr<!s8i>, %72 : !s32i), !cir.ptr<!s8i> loc(#loc296)
    cir.store %71, %74 : !s8i, !cir.ptr<!s8i> loc(#loc469)
    %75 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc297)
    %76 = cir.call @atoi(%75) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc298)
    cir.store %76, %4 : !s32i, !cir.ptr<!s32i> loc(#loc470)
    cir.br ^bb26 loc(#loc236)
  ^bb26:  // pred: ^bb25
    cir.br ^bb3 loc(#loc233)
  ^bb27:  // 4 preds: ^bb3, ^bb7, ^bb11, ^bb23
    cir.br ^bb28 loc(#loc233)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc471)
  ^bb29:  // pred: ^bb28
    %77 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc303)
    %78 = cir.const #cir.int<1> : !s32i loc(#loc304)
    %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc304)
    %80 = cir.cmp(ne, %77, %79) : !s32i, !cir.bool loc(#loc472)
    cir.brcond %80 ^bb30, ^bb31 loc(#loc473)
  ^bb30:  // pred: ^bb29
    %81 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc306)
    %82 = cir.call @close(%81) : (!s32i) -> !s32i loc(#loc307)
    cir.br ^bb31 loc(#loc302)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc302)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc231)
  ^bb33:  // pred: ^bb32
    %83 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc308)
    %84 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_goodB2GData : !cir.ptr<!s32i> loc(#loc437)
    cir.store %83, %84 : !s32i, !cir.ptr<!s32i> loc(#loc474)
    %85 = cir.get_global @goodB2GSink : !cir.ptr<!cir.func<()>> loc(#loc475)
    cir.call %85() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc310)
    cir.return loc(#loc216)
  } loc(#loc438)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc312)
  cir.func no_proto internal private @goodB2GSink() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc477)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc478)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc479)
    %3 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45_goodB2GData : !cir.ptr<!s32i> loc(#loc437)
    %4 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc320)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc479)
    cir.br ^bb1 loc(#loc480)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc478)
    cir.store %5, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc478)
    cir.br ^bb2 loc(#loc481)
  ^bb2:  // pred: ^bb1
    %6 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc325)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc326)
    %8 = cir.cmp(ge, %6, %7) : !s32i, !cir.bool loc(#loc482)
    cir.brcond %8 ^bb3, ^bb8 loc(#loc327)
  ^bb3:  // pred: ^bb2
    %9 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc328)
    %10 = cir.const #cir.int<10> : !s32i loc(#loc329)
    %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc483)
    cir.brcond %11 ^bb4, ^bb5 loc(#loc327)
  ^bb4:  // pred: ^bb3
    %12 = cir.const #true loc(#loc327)
    cir.br ^bb6(%12 : !cir.bool) loc(#loc327)
  ^bb5:  // pred: ^bb3
    %13 = cir.const #false loc(#loc327)
    cir.br ^bb6(%13 : !cir.bool) loc(#loc327)
  ^bb6(%14: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":186:23)):  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc327)
  ^bb7:  // pred: ^bb6
    cir.br ^bb9(%14 : !cir.bool) loc(#loc327)
  ^bb8:  // pred: ^bb2
    %15 = cir.const #false loc(#loc327)
    cir.br ^bb9(%15 : !cir.bool) loc(#loc327)
  ^bb9(%16: !cir.bool loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":186:23)):  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc327)
  ^bb10:  // pred: ^bb9
    cir.brcond %16 ^bb11, ^bb20 loc(#loc484)
  ^bb11:  // pred: ^bb10
    %17 = cir.const #cir.int<1> : !s32i loc(#loc334)
    %18 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc335)
    %19 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc336)
    %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !s32i), !cir.ptr<!s32i> loc(#loc336)
    cir.store %17, %20 : !s32i, !cir.ptr<!s32i> loc(#loc485)
    cir.br ^bb12 loc(#loc486)
  ^bb12:  // pred: ^bb11
    %21 = cir.const #cir.int<0> : !s32i loc(#loc339)
    cir.store %21, %0 : !s32i, !cir.ptr<!s32i> loc(#loc487)
    cir.br ^bb13 loc(#loc486)
  ^bb13:  // 2 preds: ^bb12, ^bb17
    %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc341)
    %23 = cir.const #cir.int<10> : !s32i loc(#loc342)
    %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc488)
    cir.brcond %24 ^bb14, ^bb18 loc(#loc343)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc489)
  ^bb15:  // pred: ^bb14
    %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc345)
    %26 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc346)
    %27 = cir.ptr_stride(%26 : !cir.ptr<!s32i>, %25 : !s32i), !cir.ptr<!s32i> loc(#loc346)
    %28 = cir.load %27 : !cir.ptr<!s32i>, !s32i loc(#loc346)
    cir.call @printIntLine(%28) : (!s32i) -> () loc(#loc347)
    cir.br ^bb16 loc(#loc338)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc338)
  ^bb17:  // pred: ^bb16
    %29 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc348)
    %30 = cir.unary(inc, %29) nsw : !s32i, !s32i loc(#loc349)
    cir.store %30, %0 : !s32i, !cir.ptr<!s32i> loc(#loc490)
    cir.br ^bb13 loc(#loc486)
  ^bb18:  // pred: ^bb13
    cir.br ^bb19 loc(#loc338)
  ^bb19:  // pred: ^bb18
    cir.br ^bb21 loc(#loc332)
  ^bb20:  // pred: ^bb10
    %31 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc312)
    %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc312)
    cir.call @printLine(%32) : (!cir.ptr<!s8i>) -> () loc(#loc350)
    cir.br ^bb21 loc(#loc324)
  ^bb21:  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc324)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc322)
  ^bb23:  // pred: ^bb22
    cir.return loc(#loc314)
  } loc(#loc476)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s01/CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":103:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":42:1)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":42:12)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":72:1)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":135:1)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":82:9)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":82:13)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":83:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":83:28)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":84:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":84:32)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":85:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":85:41)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":74:5)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":74:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":76:13)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":76:12)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":76:5)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":77:5)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":132:5)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":86:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":121:17)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":121:16)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":87:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":120:9)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":96:36)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":96:45)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":96:58)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":96:29)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":96:13)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":96:69)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":97:13)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":100:13)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":97:17)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":97:34)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":98:13)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":99:17)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":101:20)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":101:21)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":101:30)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":101:33)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":101:47)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":101:13)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":101:48)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":102:34)
#loc60 = loc("/usr/include/netinet/in.h":249:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":102:13)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":103:39)
#loc63 = loc("/usr/include/netinet/in.h":251:20)
#loc64 = loc("/usr/include/netinet/in.h":33:15)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":103:13)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":103:59)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":104:38)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":104:32)
#loc69 = loc("/usr/include/netinet/in.h":250:15)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":104:13)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":104:46)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":105:13)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":108:13)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":105:25)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":105:58)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":105:59)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":105:68)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":105:82)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":105:17)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":105:88)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":106:13)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":107:17)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":111:31)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":111:46)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":111:59)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":111:77)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":111:80)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":111:26)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":111:13)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":111:81)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":112:13)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":115:13)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":112:17)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":112:31)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":112:47)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":112:61)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":113:13)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":114:17)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":117:39)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":117:25)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":117:13)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":119:25)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":119:20)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":119:13)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":119:36)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":122:9)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":125:9)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":122:13)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":122:30)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":123:9)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":124:26)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":124:13)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":133:76)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":133:5)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":134:5)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":134:13)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":267:1)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":271:1)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":269:5)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":269:13)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":270:5)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":270:13)
#loc124 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc125 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc126 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc127 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":67:23)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":48:1)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":70:1)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":52:9)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":52:13)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":53:9)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":53:30)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":50:5)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":50:16)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":51:5)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":69:5)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":56:9)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":68:9)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":56:13)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":56:21)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":57:9)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":64:9)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":66:9)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":58:28)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":58:20)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":58:13)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":60:13)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":63:13)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":60:21)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":60:17)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":60:24)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":60:28)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":60:26)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":61:13)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":62:37)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":62:30)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":62:17)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":60:33)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":60:32)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":67:13)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":43:1)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":43:12)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":166:1)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":176:1)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":168:5)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":168:9)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":170:13)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":170:12)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":170:5)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":173:12)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":173:5)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":174:80)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":174:5)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":175:5)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":175:17)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":142:1)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":164:1)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":146:9)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":146:13)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":147:9)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":147:30)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":144:5)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":144:16)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":145:5)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":163:5)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":150:9)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":162:9)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":150:13)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":150:21)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":151:9)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":158:9)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":160:9)
#loc195 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":152:28)
#loc196 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":152:20)
#loc197 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":152:13)
#loc198 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":154:13)
#loc199 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":157:13)
#loc200 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":154:21)
#loc201 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":154:17)
#loc202 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":154:24)
#loc203 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":154:28)
#loc204 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":154:26)
#loc205 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":155:13)
#loc206 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":156:37)
#loc207 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":156:30)
#loc208 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":156:17)
#loc209 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":154:33)
#loc210 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":154:32)
#loc211 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":161:23)
#loc212 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":161:13)
#loc213 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":44:1)
#loc214 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":44:12)
#loc215 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":202:1)
#loc216 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":265:1)
#loc217 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":212:9)
#loc218 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":212:13)
#loc219 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":213:9)
#loc220 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":213:28)
#loc221 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":214:9)
#loc222 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":214:32)
#loc223 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":215:9)
#loc224 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":215:41)
#loc225 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":204:5)
#loc226 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":204:9)
#loc227 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":206:13)
#loc228 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":206:12)
#loc229 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":206:5)
#loc230 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":207:5)
#loc231 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":262:5)
#loc232 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":216:9)
#loc233 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":251:17)
#loc234 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":251:16)
#loc235 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":217:9)
#loc236 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":250:9)
#loc237 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":226:36)
#loc238 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":226:45)
#loc239 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":226:58)
#loc240 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":226:29)
#loc241 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":226:13)
#loc242 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":226:69)
#loc243 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":227:13)
#loc244 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":230:13)
#loc245 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":227:17)
#loc246 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":227:34)
#loc247 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":228:13)
#loc248 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":229:17)
#loc249 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":231:20)
#loc250 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":231:21)
#loc251 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":231:30)
#loc252 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":231:33)
#loc253 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":231:47)
#loc254 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":231:13)
#loc255 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":231:48)
#loc256 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":232:34)
#loc257 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":232:13)
#loc258 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":233:49)
#loc259 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":233:39)
#loc260 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":233:13)
#loc261 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":233:59)
#loc262 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":234:38)
#loc263 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":234:32)
#loc264 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":234:13)
#loc265 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":234:46)
#loc266 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":235:13)
#loc267 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":238:13)
#loc268 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":235:25)
#loc269 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":235:58)
#loc270 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":235:59)
#loc271 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":235:68)
#loc272 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":235:82)
#loc273 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":235:17)
#loc274 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":235:88)
#loc275 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":236:13)
#loc276 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":237:17)
#loc277 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":241:31)
#loc278 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":241:46)
#loc279 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":241:59)
#loc280 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":241:77)
#loc281 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":241:80)
#loc282 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":241:26)
#loc283 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":241:13)
#loc284 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":241:81)
#loc285 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":242:13)
#loc286 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":245:13)
#loc287 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":242:17)
#loc288 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":242:31)
#loc290 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":242:47)
#loc291 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":242:61)
#loc292 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":243:13)
#loc293 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":244:17)
#loc294 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":247:39)
#loc295 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":247:25)
#loc296 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":247:13)
#loc297 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":249:25)
#loc298 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":249:20)
#loc299 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":249:13)
#loc300 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":249:36)
#loc301 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":252:9)
#loc302 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":255:9)
#loc303 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":252:13)
#loc304 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":252:30)
#loc305 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":253:9)
#loc306 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":254:26)
#loc307 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":254:13)
#loc308 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":263:80)
#loc309 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":263:5)
#loc310 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":264:5)
#loc311 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":264:17)
#loc312 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":197:23)
#loc313 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":179:1)
#loc314 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":200:1)
#loc315 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":183:9)
#loc316 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":183:13)
#loc317 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":184:9)
#loc318 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":184:30)
#loc319 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":181:5)
#loc320 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":181:16)
#loc321 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":182:5)
#loc322 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":199:5)
#loc323 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":186:9)
#loc324 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":198:9)
#loc325 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":186:13)
#loc326 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":186:21)
#loc328 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":186:26)
#loc329 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":186:34)
#loc330 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":186:36)
#loc331 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":187:9)
#loc332 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":194:9)
#loc333 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":196:9)
#loc334 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":188:28)
#loc335 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":188:20)
#loc336 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":188:13)
#loc337 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":190:13)
#loc338 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":193:13)
#loc339 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":190:21)
#loc340 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":190:17)
#loc341 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":190:24)
#loc342 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":190:28)
#loc343 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":190:26)
#loc344 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":191:13)
#loc345 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":192:37)
#loc346 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":192:30)
#loc347 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":192:17)
#loc348 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":190:33)
#loc349 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":190:32)
#loc350 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE129_connect_socket_45.c":197:13)
#loc351 = loc(fused[#loc1, #loc2])
#loc352 = loc(fused[#loc3, #loc4])
#loc353 = loc(fused[#loc6, #loc7])
#loc354 = loc(fused[#loc8, #loc9])
#loc355 = loc(fused[#loc10, #loc11])
#loc356 = loc(fused[#loc12, #loc13])
#loc357 = loc(fused[#loc14, #loc15])
#loc358 = loc(fused[#loc16, #loc17])
#loc359 = loc(fused[#loc18, #loc19])
#loc360 = loc(fused[#loc20, #loc21])
#loc361 = loc(fused[#loc22, #loc23])
#loc362 = loc(fused[#loc24, #loc25])
#loc363 = loc(fused[#loc26, #loc27])
#loc364 = loc(fused[#loc28, #loc29])
#loc365 = loc(fused[#loc32, #loc30])
#loc366 = loc(fused[#loc33, #loc34])
#loc367 = loc(fused[#loc35, #loc36])
#loc368 = loc(fused[#loc38, #loc39])
#loc369 = loc(fused[#loc44, #loc45])
#loc370 = loc(fused[#loc46, #loc47])
#loc371 = loc(fused[#loc48, #loc49])
#loc372 = loc(fused[#loc50, #loc47])
#loc373 = loc(fused[#loc52, #loc53])
#loc374 = loc(fused[#loc55, #loc56])
#loc375 = loc(fused[#loc57, #loc58])
#loc376 = loc(fused[#loc61, #loc59])
#loc377 = loc(fused[#loc65, #loc66])
#loc378 = loc(fused[#loc70, #loc71])
#loc379 = loc(fused[#loc72, #loc73])
#loc380 = loc(fused[#loc75, #loc76])
#loc381 = loc(fused[#loc77, #loc78])
#loc382 = loc(fused[#loc79, #loc80])
#loc383 = loc(fused[#loc81, #loc73])
#loc384 = loc(fused[#loc85, #loc86])
#loc385 = loc(fused[#loc89, #loc90])
#loc386 = loc(fused[#loc91, #loc92])
#loc387 = loc(fused[#loc93, #loc94])
#loc388 = loc(fused[#loc96, #loc97])
#loc389 = loc(fused[#loc98, #loc92])
#loc390 = loc(fused[#loc102, #loc100])
#loc391 = loc(fused[#loc105, #loc106])
#loc392 = loc(fused[#loc107, #loc108])
#loc393 = loc(fused[#loc109, #loc110])
#loc394 = loc(fused[#loc111, #loc108])
#loc395 = loc(fused[#loc115, #loc114])
#loc396 = loc(fused[#loc116, #loc117])
#loc397 = loc(fused[#loc118, #loc119])
#loc398 = loc(fused[#loc120, #loc121])
#loc399 = loc(fused[#loc122, #loc123])
#loc400 = loc(fused[#loc124, #loc125])
#loc401 = loc(fused[#loc126, #loc127])
#loc402 = loc(fused[#loc129, #loc130])
#loc403 = loc(fused[#loc131, #loc132])
#loc404 = loc(fused[#loc133, #loc134])
#loc405 = loc(fused[#loc135, #loc136])
#loc406 = loc(fused[#loc137, #loc138])
#loc407 = loc(fused[#loc139, #loc140])
#loc408 = loc(fused[#loc141, #loc142])
#loc409 = loc(fused[#loc143, #loc144, #loc145, #loc140])
#loc410 = loc(fused[#loc148, #loc146])
#loc411 = loc(fused[#loc149, #loc150])
#loc412 = loc(fused[#loc152, #loc151])
#loc413 = loc(fused[#loc153, #loc154])
#loc414 = loc(fused[#loc156, #loc150])
#loc415 = loc(fused[#loc161, #loc160])
#loc416 = loc(fused[#loc163, #loc164])
#loc417 = loc(fused[#loc165, #loc166])
#loc418 = loc(fused[#loc167, #loc168])
#loc419 = loc(fused[#loc171, #loc169])
#loc420 = loc(fused[#loc173, #loc172])
#loc421 = loc(fused[#loc175, #loc174])
#loc422 = loc(fused[#loc176, #loc177])
#loc423 = loc(fused[#loc178, #loc179])
#loc424 = loc(fused[#loc180, #loc181])
#loc425 = loc(fused[#loc182, #loc183])
#loc426 = loc(fused[#loc184, #loc185])
#loc427 = loc(fused[#loc186, #loc187])
#loc428 = loc(fused[#loc188, #loc189])
#loc429 = loc(fused[#loc190, #loc191])
#loc430 = loc(fused[#loc192, #loc193, #loc194, #loc189])
#loc431 = loc(fused[#loc197, #loc195])
#loc432 = loc(fused[#loc198, #loc199])
#loc433 = loc(fused[#loc201, #loc200])
#loc434 = loc(fused[#loc202, #loc203])
#loc435 = loc(fused[#loc205, #loc199])
#loc436 = loc(fused[#loc210, #loc209])
#loc437 = loc(fused[#loc213, #loc214])
#loc438 = loc(fused[#loc215, #loc216])
#loc439 = loc(fused[#loc217, #loc218])
#loc440 = loc(fused[#loc219, #loc220])
#loc441 = loc(fused[#loc221, #loc222])
#loc442 = loc(fused[#loc223, #loc224])
#loc443 = loc(fused[#loc225, #loc226])
#loc444 = loc(fused[#loc229, #loc227])
#loc445 = loc(fused[#loc230, #loc231])
#loc446 = loc(fused[#loc232, #loc233])
#loc447 = loc(fused[#loc235, #loc236])
#loc448 = loc(fused[#loc241, #loc242])
#loc449 = loc(fused[#loc243, #loc244])
#loc450 = loc(fused[#loc245, #loc246])
#loc451 = loc(fused[#loc247, #loc244])
#loc452 = loc(fused[#loc249, #loc250])
#loc453 = loc(fused[#loc252, #loc253])
#loc454 = loc(fused[#loc254, #loc255])
#loc455 = loc(fused[#loc257, #loc256])
#loc456 = loc(fused[#loc260, #loc261])
#loc457 = loc(fused[#loc264, #loc265])
#loc458 = loc(fused[#loc266, #loc267])
#loc459 = loc(fused[#loc269, #loc270])
#loc460 = loc(fused[#loc271, #loc272])
#loc461 = loc(fused[#loc273, #loc274])
#loc462 = loc(fused[#loc275, #loc267])
#loc463 = loc(fused[#loc279, #loc280])
#loc464 = loc(fused[#loc283, #loc284])
#loc465 = loc(fused[#loc285, #loc286])
#loc466 = loc(fused[#loc287, #loc288])
#loc467 = loc(fused[#loc290, #loc291])
#loc468 = loc(fused[#loc292, #loc286])
#loc469 = loc(fused[#loc296, #loc294])
#loc470 = loc(fused[#loc299, #loc300])
#loc471 = loc(fused[#loc301, #loc302])
#loc472 = loc(fused[#loc303, #loc304])
#loc473 = loc(fused[#loc305, #loc302])
#loc474 = loc(fused[#loc309, #loc308])
#loc475 = loc(fused[#loc310, #loc311])
#loc476 = loc(fused[#loc313, #loc314])
#loc477 = loc(fused[#loc315, #loc316])
#loc478 = loc(fused[#loc317, #loc318])
#loc479 = loc(fused[#loc319, #loc320])
#loc480 = loc(fused[#loc321, #loc322])
#loc481 = loc(fused[#loc323, #loc324])
#loc482 = loc(fused[#loc325, #loc326])
#loc483 = loc(fused[#loc328, #loc330])
#loc484 = loc(fused[#loc331, #loc332, #loc333, #loc324])
#loc485 = loc(fused[#loc336, #loc334])
#loc486 = loc(fused[#loc337, #loc338])
#loc487 = loc(fused[#loc340, #loc339])
#loc488 = loc(fused[#loc341, #loc342])
#loc489 = loc(fused[#loc344, #loc338])
#loc490 = loc(fused[#loc349, #loc348])
