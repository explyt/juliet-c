!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":23:78)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":23:85)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":41:82)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":41:89)
#loc70 = loc(fused[#loc7, #loc8])
#loc77 = loc(fused[#loc38, #loc39])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc67)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc68)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b_badSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc71)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc70)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc11)
    cir.br ^bb1 loc(#loc72)
  ^bb1:  // pred: ^bb0
    %2 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc14)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc14)
    %4 = cir.const #cir.int<67> : !s32i loc(#loc15)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc16)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc16)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc16)
    cir.libc.memset %8 bytes from %3 set to %4 : !cir.ptr<!void>, !s32i, !u64i loc(#loc73)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc20)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc20)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc21)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc21)
    %14 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc23)
    %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc23)
    cir.store %10, %15 : !s8i, !cir.ptr<!s8i> loc(#loc74)
    %16 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc24)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
    %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc26)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc27)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc27)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc27)
    %23 = cir.call @strncpy(%17, %18, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc24)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc29)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc29)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    %27 = cir.const #cir.int<100> : !s32i loc(#loc31)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc31)
    %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc33)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc75)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc35)
    cir.br ^bb2 loc(#loc13)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc6)
  } loc(#loc69)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b_goodG2BSink(%arg0: !cir.ptr<!s8i> loc(fused[#loc38, #loc39])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc78)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc77)
    cir.store %arg0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc42)
    cir.br ^bb1 loc(#loc79)
  ^bb1:  // pred: ^bb0
    %2 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc45)
    %3 = cir.cast(bitcast, %2 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc45)
    %4 = cir.const #cir.int<67> : !s32i loc(#loc46)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc47)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc47)
    %8 = cir.cast(integral, %7 : !s32i), !u64i loc(#loc47)
    cir.libc.memset %8 bytes from %3 set to %4 : !cir.ptr<!void>, !s32i, !u64i loc(#loc80)
    %9 = cir.const #cir.int<0> : !s32i loc(#loc51)
    %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc51)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc52)
    %12 = cir.const #cir.int<1> : !s32i loc(#loc53)
    %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc52)
    %14 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
    %15 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %13 : !s32i), !cir.ptr<!s8i> loc(#loc54)
    cir.store %10, %15 : !s8i, !cir.ptr<!s8i> loc(#loc81)
    %16 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc55)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    %18 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc57)
    %19 = cir.const #cir.int<100> : !s32i loc(#loc58)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc58)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc58)
    %23 = cir.call @strncpy(%17, %18, %22) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc55)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc60)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc60)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
    %27 = cir.const #cir.int<100> : !s32i loc(#loc62)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc63)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc62)
    %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc64)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc82)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%31) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    cir.br ^bb2 loc(#loc44)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc37)
  } loc(#loc76)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":0:0)
#loc1 = loc("/usr/include/string.h":144:1)
#loc2 = loc("/usr/include/string.h":146:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":23:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":34:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":26:9)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":26:24)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":24:1)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":25:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":33:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":27:16)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":27:24)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":27:29)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":27:33)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":27:9)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":27:34)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":28:25)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":28:16)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":28:20)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":28:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":30:9)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":30:17)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":30:23)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":30:31)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":30:35)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":31:23)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":31:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":31:14)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":31:18)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":31:19)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":32:19)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":32:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":41:1)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":52:1)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":44:9)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":44:24)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":42:1)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":43:5)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":51:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":45:16)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":45:24)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":45:29)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":45:33)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":45:9)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":45:34)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":46:25)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":46:16)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":46:20)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":46:9)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":48:9)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":48:17)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":48:23)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":48:31)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":48:35)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":49:23)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":49:9)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":49:14)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":49:18)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":49:19)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":50:19)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_ncpy_65b.c":50:9)
#loc67 = loc(fused[#loc1, #loc2])
#loc68 = loc(fused[#loc3, #loc4])
#loc69 = loc(fused[#loc5, #loc6])
#loc71 = loc(fused[#loc9, #loc10])
#loc72 = loc(fused[#loc12, #loc13])
#loc73 = loc(fused[#loc18, #loc19])
#loc74 = loc(fused[#loc23, #loc20])
#loc75 = loc(fused[#loc30, #loc29])
#loc76 = loc(fused[#loc36, #loc37])
#loc78 = loc(fused[#loc40, #loc41])
#loc79 = loc(fused[#loc43, #loc44])
#loc80 = loc(fused[#loc49, #loc50])
#loc81 = loc(fused[#loc54, #loc51])
#loc82 = loc(fused[#loc61, #loc60])
