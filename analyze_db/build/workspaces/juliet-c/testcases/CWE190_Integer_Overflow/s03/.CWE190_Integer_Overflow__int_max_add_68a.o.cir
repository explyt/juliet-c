!s32i = !cir.int<s, 32>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_max_add_68a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.global external dsolocal @CWE190_Integer_Overflow__int_max_add_68_badData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc55)
  cir.func no_proto private @CWE190_Integer_Overflow__int_max_add_68b_badSink(...) loc(#loc56)
  cir.func no_proto @CWE190_Integer_Overflow__int_max_add_68_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc58)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc9)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc59)
    %2 = cir.const #cir.int<2147483647> : !s32i loc(#loc11)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc60)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc13)
    %4 = cir.get_global @CWE190_Integer_Overflow__int_max_add_68_badData : !cir.ptr<!s32i> loc(#loc55)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc61)
    %5 = cir.get_global @CWE190_Integer_Overflow__int_max_add_68b_badSink : !cir.ptr<!cir.func<(...)>> loc(#loc62)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<(...)>>), !cir.ptr<!cir.func<()>> loc(#loc62)
    cir.call %6() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc15)
    cir.return loc(#loc6)
  } loc(#loc57)
  cir.func no_proto @CWE190_Integer_Overflow__int_max_add_68_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc64)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc19)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc65)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc21)
    cir.return loc(#loc18)
  } loc(#loc63)
  cir.global external dsolocal @CWE190_Integer_Overflow__int_max_add_68_goodG2BData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc66)
  cir.global external dsolocal @CWE190_Integer_Overflow__int_max_add_68_goodB2GData = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc67)
  cir.func no_proto private @CWE190_Integer_Overflow__int_max_add_68b_goodG2BSink(...) loc(#loc68)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc70)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc33)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc71)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc35)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc72)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc37)
    %4 = cir.get_global @CWE190_Integer_Overflow__int_max_add_68_goodG2BData : !cir.ptr<!s32i> loc(#loc66)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc73)
    %5 = cir.get_global @CWE190_Integer_Overflow__int_max_add_68b_goodG2BSink : !cir.ptr<!cir.func<(...)>> loc(#loc74)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<(...)>>), !cir.ptr<!cir.func<()>> loc(#loc74)
    cir.call %6() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc39)
    cir.return loc(#loc30)
  } loc(#loc69)
  cir.func no_proto private @CWE190_Integer_Overflow__int_max_add_68b_goodB2GSink(...) loc(#loc75)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc77)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc47)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc78)
    %2 = cir.const #cir.int<2147483647> : !s32i loc(#loc49)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc79)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc51)
    %4 = cir.get_global @CWE190_Integer_Overflow__int_max_add_68_goodB2GData : !cir.ptr<!s32i> loc(#loc67)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc80)
    %5 = cir.get_global @CWE190_Integer_Overflow__int_max_add_68b_goodB2GSink : !cir.ptr<!cir.func<(...)>> loc(#loc81)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<(...)>>), !cir.ptr<!cir.func<()>> loc(#loc81)
    cir.call %6() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc53)
    cir.return loc(#loc44)
  } loc(#loc76)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_max_add_68a.c":0:0)
#loc1 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":20:1)
#loc2 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":20:5)
#loc3 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":27:1)
#loc4 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":27:55)
#loc5 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":29:1)
#loc6 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":38:1)
#loc7 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":31:5)
#loc8 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":31:9)
#loc9 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":33:12)
#loc10 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":33:5)
#loc11 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":35:12)
#loc12 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":35:5)
#loc13 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":36:55)
#loc14 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":36:5)
#loc15 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":37:5)
#loc16 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":37:54)
#loc17 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":72:1)
#loc18 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":76:1)
#loc19 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":74:5)
#loc20 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":74:13)
#loc21 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":75:5)
#loc22 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":75:13)
#loc23 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":21:1)
#loc24 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":21:5)
#loc25 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":22:1)
#loc26 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":22:5)
#loc27 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":45:1)
#loc28 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":45:59)
#loc29 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":49:1)
#loc30 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":58:1)
#loc31 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":51:5)
#loc32 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":51:9)
#loc33 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":53:12)
#loc34 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":53:5)
#loc35 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":55:12)
#loc36 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":55:5)
#loc37 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":56:59)
#loc38 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":56:5)
#loc39 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":57:5)
#loc40 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":57:58)
#loc41 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":46:1)
#loc42 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":46:59)
#loc43 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":61:1)
#loc44 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":70:1)
#loc45 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":63:5)
#loc46 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":63:9)
#loc47 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":65:12)
#loc48 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":65:5)
#loc49 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":67:12)
#loc50 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":67:5)
#loc51 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":68:59)
#loc52 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":68:5)
#loc53 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":69:5)
#loc54 = loc("CWE190_Integer_Overflow__int_max_add_68a.c":69:58)
#loc55 = loc(fused[#loc1, #loc2])
#loc56 = loc(fused[#loc3, #loc4])
#loc57 = loc(fused[#loc5, #loc6])
#loc58 = loc(fused[#loc7, #loc8])
#loc59 = loc(fused[#loc10, #loc9])
#loc60 = loc(fused[#loc12, #loc11])
#loc61 = loc(fused[#loc14, #loc13])
#loc62 = loc(fused[#loc15, #loc16])
#loc63 = loc(fused[#loc17, #loc18])
#loc64 = loc(fused[#loc19, #loc20])
#loc65 = loc(fused[#loc21, #loc22])
#loc66 = loc(fused[#loc23, #loc24])
#loc67 = loc(fused[#loc25, #loc26])
#loc68 = loc(fused[#loc27, #loc28])
#loc69 = loc(fused[#loc29, #loc30])
#loc70 = loc(fused[#loc31, #loc32])
#loc71 = loc(fused[#loc34, #loc33])
#loc72 = loc(fused[#loc36, #loc35])
#loc73 = loc(fused[#loc38, #loc37])
#loc74 = loc(fused[#loc39, #loc40])
#loc75 = loc(fused[#loc41, #loc42])
#loc76 = loc(fused[#loc43, #loc44])
#loc77 = loc(fused[#loc45, #loc46])
#loc78 = loc(fused[#loc48, #loc47])
#loc79 = loc(fused[#loc50, #loc49])
#loc80 = loc(fused[#loc52, #loc51])
#loc81 = loc(fused[#loc53, #loc54])
