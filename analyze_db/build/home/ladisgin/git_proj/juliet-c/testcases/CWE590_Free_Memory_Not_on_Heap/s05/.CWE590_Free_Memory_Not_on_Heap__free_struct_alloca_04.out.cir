!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc69 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":142:10)
#loc70 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":142:14)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":142:20)
#loc72 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":142:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc235 = loc(fused[#loc69, #loc70])
#loc236 = loc(fused[#loc71, #loc72])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc209)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc210)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc212)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc9)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc213)
    cir.scope {
      %8 = cir.const #cir.int<1> : !s32i loc(#loc13)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc13)
      cir.if %9 {
        cir.scope {
          %10 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc217)
          %11 = cir.const #cir.int<100> : !s32i loc(#loc18)
          %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc18)
          %13 = cir.const #cir.int<8> : !u64i loc(#loc18)
          %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc18)
          %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc18)
          %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc18)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc18)
          cir.store %17, %10 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc217)
          cir.scope {
            %19 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc219)
            cir.scope {
              %20 = cir.const #cir.int<0> : !s32i loc(#loc25)
              %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc25)
              cir.store %21, %19 : !u64i, !cir.ptr<!u64i> loc(#loc221)
              cir.for : cond {
                %22 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc27)
                %23 = cir.const #cir.int<100> : !s32i loc(#loc28)
                %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc28)
                %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc222)
                cir.condition(%25) loc(#loc29)
              } body {
                cir.scope {
                  %22 = cir.const #cir.int<1> : !s32i loc(#loc31)
                  %23 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
                  %24 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc33)
                  %25 = cir.ptr_stride(%23 : !cir.ptr<!ty__twoIntsStruct>, %24 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
                  %26 = cir.get_member %25[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc35)
                  cir.store %22, %26 : !s32i, !cir.ptr<!s32i> loc(#loc224)
                  %27 = cir.const #cir.int<1> : !s32i loc(#loc36)
                  %28 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
                  %29 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc38)
                  %30 = cir.ptr_stride(%28 : !cir.ptr<!ty__twoIntsStruct>, %29 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
                  %31 = cir.get_member %30[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
                  cir.store %27, %31 : !s32i, !cir.ptr<!s32i> loc(#loc225)
                } loc(#loc223)
                cir.yield loc(#loc24)
              } step {
                %22 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc41)
                %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc42)
                cir.store %23, %19 : !u64i, !cir.ptr<!u64i> loc(#loc226)
                cir.yield loc(#loc220)
              } loc(#loc220)
            } loc(#loc220)
          } loc(#loc218)
          %18 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc43)
          cir.store %18, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc227)
        } loc(#loc216)
      } loc(#loc215)
    } loc(#loc214)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc45)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc46)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!ty__twoIntsStruct>, %3 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc47)
    cir.call @printStructLine(%4) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc48)
    %5 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc49)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc50)
    cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc49)
    cir.return loc(#loc6)
  } loc(#loc211)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc229)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc53)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc230)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc55)
    cir.return loc(#loc52)
  } loc(#loc228)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc231)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc232)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc233)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc63)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc66)
  cir.func @main(%arg0: !s32i loc(fused[#loc69, #loc70]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc71, #loc72])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc235)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc236)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc68)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc73)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc73)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc74)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc75)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc75)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc76)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc63)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc77)
    %8 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04_good : !cir.ptr<!cir.func<!void ()>> loc(#loc237)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04_good() : () -> () loc(#loc78)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc64)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc65)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %13 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc238)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04_bad() : () -> () loc(#loc82)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc66)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc85)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc239)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc239)
    cir.return %17 : !s32i loc(#loc239)
  } loc(#loc234)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc87)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc240)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc90)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc241)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc243)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc97)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc244)
    cir.scope {
      %8 = cir.const #cir.int<0> : !s32i loc(#loc101)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc101)
      cir.if %9 {
        %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc87)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc87)
        cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc105)
      } else {
        cir.scope {
          %10 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc248)
          %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc110)
          %12 = cir.const #cir.int<100> : !s32i loc(#loc111)
          %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc111)
          %14 = cir.const #cir.int<8> : !u64i loc(#loc249)
          %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc250)
          %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc110)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc251)
          cir.store %17, %10 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc248)
          cir.scope {
            %19 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc116)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc117)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc117)
            %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc253)
            cir.if %22 {
              %23 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc90)
              %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc90)
              cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc119)
              %25 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc120)
              %26 = cir.const #cir.int<1> : !s32i loc(#loc121)
              cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc120)
            } loc(#loc254)
          } loc(#loc252)
          cir.scope {
            %19 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc256)
            cir.scope {
              %20 = cir.const #cir.int<0> : !s32i loc(#loc128)
              %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc128)
              cir.store %21, %19 : !u64i, !cir.ptr<!u64i> loc(#loc258)
              cir.for : cond {
                %22 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc130)
                %23 = cir.const #cir.int<100> : !s32i loc(#loc131)
                %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc131)
                %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc259)
                cir.condition(%25) loc(#loc132)
              } body {
                cir.scope {
                  %22 = cir.const #cir.int<1> : !s32i loc(#loc134)
                  %23 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc135)
                  %24 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc136)
                  %25 = cir.ptr_stride(%23 : !cir.ptr<!ty__twoIntsStruct>, %24 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc137)
                  %26 = cir.get_member %25[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc35)
                  cir.store %22, %26 : !s32i, !cir.ptr<!s32i> loc(#loc261)
                  %27 = cir.const #cir.int<1> : !s32i loc(#loc138)
                  %28 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc139)
                  %29 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc140)
                  %30 = cir.ptr_stride(%28 : !cir.ptr<!ty__twoIntsStruct>, %29 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc141)
                  %31 = cir.get_member %30[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
                  cir.store %27, %31 : !s32i, !cir.ptr<!s32i> loc(#loc262)
                } loc(#loc260)
                cir.yield loc(#loc127)
              } step {
                %22 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc142)
                %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc143)
                cir.store %23, %19 : !u64i, !cir.ptr<!u64i> loc(#loc263)
                cir.yield loc(#loc257)
              } loc(#loc257)
            } loc(#loc257)
          } loc(#loc255)
          %18 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc144)
          cir.store %18, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc264)
        } loc(#loc247)
      } loc(#loc246)
    } loc(#loc245)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc146)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc147)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!ty__twoIntsStruct>, %3 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc148)
    cir.call @printStructLine(%4) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc149)
    %5 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc150)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc151)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc151)
    cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc150)
    cir.return loc(#loc94)
  } loc(#loc242)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc266)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc156)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc267)
    cir.scope {
      %8 = cir.const #cir.int<1> : !s32i loc(#loc160)
      %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc160)
      cir.if %9 {
        cir.scope {
          %10 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc271)
          %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc166)
          %12 = cir.const #cir.int<100> : !s32i loc(#loc167)
          %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc167)
          %14 = cir.const #cir.int<8> : !u64i loc(#loc272)
          %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc273)
          %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc166)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc274)
          cir.store %17, %10 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc271)
          cir.scope {
            %19 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc172)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc173)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc173)
            %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc276)
            cir.if %22 {
              %23 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc175)
              %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc175)
              cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc176)
              %25 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc177)
              %26 = cir.const #cir.int<1> : !s32i loc(#loc178)
              cir.call @exit(%26) : (!s32i) -> () extra(#fn_attr) loc(#loc177)
            } loc(#loc277)
          } loc(#loc275)
          cir.scope {
            %19 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc279)
            cir.scope {
              %20 = cir.const #cir.int<0> : !s32i loc(#loc185)
              %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc185)
              cir.store %21, %19 : !u64i, !cir.ptr<!u64i> loc(#loc281)
              cir.for : cond {
                %22 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc187)
                %23 = cir.const #cir.int<100> : !s32i loc(#loc188)
                %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc188)
                %25 = cir.cmp(lt, %22, %24) : !u64i, !cir.bool loc(#loc282)
                cir.condition(%25) loc(#loc189)
              } body {
                cir.scope {
                  %22 = cir.const #cir.int<1> : !s32i loc(#loc191)
                  %23 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc192)
                  %24 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc193)
                  %25 = cir.ptr_stride(%23 : !cir.ptr<!ty__twoIntsStruct>, %24 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc194)
                  %26 = cir.get_member %25[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc35)
                  cir.store %22, %26 : !s32i, !cir.ptr<!s32i> loc(#loc284)
                  %27 = cir.const #cir.int<1> : !s32i loc(#loc195)
                  %28 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc196)
                  %29 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc197)
                  %30 = cir.ptr_stride(%28 : !cir.ptr<!ty__twoIntsStruct>, %29 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc198)
                  %31 = cir.get_member %30[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc40)
                  cir.store %27, %31 : !s32i, !cir.ptr<!s32i> loc(#loc285)
                } loc(#loc283)
                cir.yield loc(#loc184)
              } step {
                %22 = cir.load %19 : !cir.ptr<!u64i>, !u64i loc(#loc199)
                %23 = cir.unary(inc, %22) : !u64i, !u64i loc(#loc200)
                cir.store %23, %19 : !u64i, !cir.ptr<!u64i> loc(#loc286)
                cir.yield loc(#loc280)
              } loc(#loc280)
            } loc(#loc280)
          } loc(#loc278)
          %18 = cir.load %10 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc201)
          cir.store %18, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc287)
        } loc(#loc270)
      } loc(#loc269)
    } loc(#loc268)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc203)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc204)
    %4 = cir.ptr_stride(%2 : !cir.ptr<!ty__twoIntsStruct>, %3 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc205)
    cir.call @printStructLine(%4) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc206)
    %5 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc207)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc208)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc208)
    cir.call @free(%7) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc207)
    cir.return loc(#loc153)
  } loc(#loc265)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s05/CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":30:1)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":53:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":32:5)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":32:21)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":33:12)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":33:5)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":34:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":49:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":34:8)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":35:5)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":36:9)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":48:9)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":38:13)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":38:59)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":39:13)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":46:13)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":40:17)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":40:24)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":41:17)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":45:17)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":41:26)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":41:22)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":41:29)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":41:33)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":41:31)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":42:17)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":43:44)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":43:21)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":43:32)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":43:33)
#loc35 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":44:44)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":44:21)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":44:32)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":44:33)
#loc40 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc41 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":41:39)
#loc42 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":41:38)
#loc43 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":47:20)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":47:13)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":50:22)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":50:27)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":50:28)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":50:5)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":52:5)
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":52:10)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":126:1)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":130:1)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":128:5)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":128:14)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":129:5)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":129:14)
#loc57 = loc("/usr/include/stdlib.h":575:1)
#loc58 = loc("/usr/include/stdlib.h":575:41)
#loc59 = loc("/usr/include/time.h":76:1)
#loc60 = loc("/usr/include/time.h":76:38)
#loc61 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc62 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":147:15)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":149:15)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":152:15)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":154:15)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":142:1)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":157:1)
#loc73 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":143:1)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":145:27)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":145:22)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":145:5)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":147:5)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":148:5)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":148:64)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":149:5)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":152:5)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":153:5)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":153:63)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":154:5)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":156:12)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":156:5)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":67:19)
#loc88 = loc("/usr/include/stdlib.h":672:1)
#loc89 = loc("/usr/include/stdlib.h":672:45)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":76:27)
#loc91 = loc("/usr/include/stdlib.h":756:1)
#loc92 = loc("/usr/include/stdlib.h":756:70)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":60:1)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":93:1)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":62:5)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":62:21)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":63:12)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":63:5)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":64:5)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":89:5)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":64:8)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":65:5)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":68:5)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":70:5)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":67:9)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":71:9)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":88:9)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":73:13)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":73:91)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":73:59)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":73:66)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":73:70)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":73:90)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":74:13)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":78:13)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":74:17)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":74:31)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":75:13)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":76:17)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":77:17)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":77:22)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":79:13)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":86:13)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":80:17)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":80:24)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":81:17)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":85:17)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":81:26)
#loc129 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":81:22)
#loc130 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":81:29)
#loc131 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":81:33)
#loc132 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":81:31)
#loc133 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":82:17)
#loc134 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":83:44)
#loc135 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":83:21)
#loc136 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":83:32)
#loc137 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":83:33)
#loc138 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":84:44)
#loc139 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":84:21)
#loc140 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":84:32)
#loc141 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":84:33)
#loc142 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":81:39)
#loc143 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":81:38)
#loc144 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":87:20)
#loc145 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":87:13)
#loc146 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":90:22)
#loc147 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":90:27)
#loc148 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":90:28)
#loc149 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":90:5)
#loc150 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":92:5)
#loc151 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":92:10)
#loc152 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":96:1)
#loc153 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":124:1)
#loc154 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":98:5)
#loc155 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":98:21)
#loc156 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":99:12)
#loc157 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":99:5)
#loc158 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":100:5)
#loc159 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":120:5)
#loc160 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":100:8)
#loc161 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":101:5)
#loc162 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":102:9)
#loc163 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":119:9)
#loc164 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":104:13)
#loc165 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":104:91)
#loc166 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":104:59)
#loc167 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":104:66)
#loc168 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":104:70)
#loc169 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":104:90)
#loc170 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":105:13)
#loc171 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":109:13)
#loc172 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":105:17)
#loc173 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":105:31)
#loc174 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":106:13)
#loc175 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":107:27)
#loc176 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":107:17)
#loc177 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":108:17)
#loc178 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":108:22)
#loc179 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":110:13)
#loc180 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":117:13)
#loc181 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":111:17)
#loc182 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":111:24)
#loc183 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":112:17)
#loc184 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":116:17)
#loc185 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":112:26)
#loc186 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":112:22)
#loc187 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":112:29)
#loc188 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":112:33)
#loc189 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":112:31)
#loc190 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":113:17)
#loc191 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":114:44)
#loc192 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":114:21)
#loc193 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":114:32)
#loc194 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":114:33)
#loc195 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":115:44)
#loc196 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":115:21)
#loc197 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":115:32)
#loc198 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":115:33)
#loc199 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":112:39)
#loc200 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":112:38)
#loc201 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":118:20)
#loc202 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":118:13)
#loc203 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":121:22)
#loc204 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":121:27)
#loc205 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":121:28)
#loc206 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":121:5)
#loc207 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":123:5)
#loc208 = loc("CWE590_Free_Memory_Not_on_Heap__free_struct_alloca_04.c":123:10)
#loc209 = loc(fused[#loc1, #loc2])
#loc210 = loc(fused[#loc3, #loc4])
#loc211 = loc(fused[#loc5, #loc6])
#loc212 = loc(fused[#loc7, #loc8])
#loc213 = loc(fused[#loc10, #loc9])
#loc214 = loc(fused[#loc11, #loc12])
#loc215 = loc(fused[#loc14, #loc12])
#loc216 = loc(fused[#loc15, #loc16])
#loc217 = loc(fused[#loc17, #loc18])
#loc218 = loc(fused[#loc19, #loc20])
#loc219 = loc(fused[#loc21, #loc22])
#loc220 = loc(fused[#loc23, #loc24])
#loc221 = loc(fused[#loc26, #loc25])
#loc222 = loc(fused[#loc27, #loc28])
#loc223 = loc(fused[#loc30, #loc24])
#loc224 = loc(fused[#loc32, #loc31])
#loc225 = loc(fused[#loc37, #loc36])
#loc226 = loc(fused[#loc42, #loc41])
#loc227 = loc(fused[#loc44, #loc43])
#loc228 = loc(fused[#loc51, #loc52])
#loc229 = loc(fused[#loc53, #loc54])
#loc230 = loc(fused[#loc55, #loc56])
#loc231 = loc(fused[#loc57, #loc58])
#loc232 = loc(fused[#loc59, #loc60])
#loc233 = loc(fused[#loc61, #loc62])
#loc234 = loc(fused[#loc67, #loc68])
#loc237 = loc(fused[#loc78, #loc79])
#loc238 = loc(fused[#loc82, #loc83])
#loc239 = loc(fused[#loc86, #loc85])
#loc240 = loc(fused[#loc88, #loc89])
#loc241 = loc(fused[#loc91, #loc92])
#loc242 = loc(fused[#loc93, #loc94])
#loc243 = loc(fused[#loc95, #loc96])
#loc244 = loc(fused[#loc98, #loc97])
#loc245 = loc(fused[#loc99, #loc100])
#loc246 = loc(fused[#loc102, #loc103, #loc104, #loc100])
#loc247 = loc(fused[#loc106, #loc107])
#loc248 = loc(fused[#loc108, #loc109])
#loc249 = loc(fused[#loc112, #loc113])
#loc250 = loc(fused[#loc111, #loc113])
#loc251 = loc(fused[#loc110, #loc109])
#loc252 = loc(fused[#loc114, #loc115])
#loc253 = loc(fused[#loc116, #loc117])
#loc254 = loc(fused[#loc118, #loc115])
#loc255 = loc(fused[#loc122, #loc123])
#loc256 = loc(fused[#loc124, #loc125])
#loc257 = loc(fused[#loc126, #loc127])
#loc258 = loc(fused[#loc129, #loc128])
#loc259 = loc(fused[#loc130, #loc131])
#loc260 = loc(fused[#loc133, #loc127])
#loc261 = loc(fused[#loc135, #loc134])
#loc262 = loc(fused[#loc139, #loc138])
#loc263 = loc(fused[#loc143, #loc142])
#loc264 = loc(fused[#loc145, #loc144])
#loc265 = loc(fused[#loc152, #loc153])
#loc266 = loc(fused[#loc154, #loc155])
#loc267 = loc(fused[#loc157, #loc156])
#loc268 = loc(fused[#loc158, #loc159])
#loc269 = loc(fused[#loc161, #loc159])
#loc270 = loc(fused[#loc162, #loc163])
#loc271 = loc(fused[#loc164, #loc165])
#loc272 = loc(fused[#loc168, #loc169])
#loc273 = loc(fused[#loc167, #loc169])
#loc274 = loc(fused[#loc166, #loc165])
#loc275 = loc(fused[#loc170, #loc171])
#loc276 = loc(fused[#loc172, #loc173])
#loc277 = loc(fused[#loc174, #loc171])
#loc278 = loc(fused[#loc179, #loc180])
#loc279 = loc(fused[#loc181, #loc182])
#loc280 = loc(fused[#loc183, #loc184])
#loc281 = loc(fused[#loc186, #loc185])
#loc282 = loc(fused[#loc187, #loc188])
#loc283 = loc(fused[#loc190, #loc184])
#loc284 = loc(fused[#loc192, #loc191])
#loc285 = loc(fused[#loc196, #loc195])
#loc286 = loc(fused[#loc200, #loc199])
#loc287 = loc(fused[#loc202, #loc201])
