!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc61 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":97:10)
#loc62 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":97:14)
#loc63 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":97:20)
#loc64 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":97:32)
#loc175 = loc(fused[#loc61, #loc62])
#loc176 = loc(fused[#loc63, #loc64])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__fopen_17.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @fopen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"BadSource_fopen.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"w+\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc4)
  cir.func private @fclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc151)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__fopen_17_bad() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc153)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc154)
    %2 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc155)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc14)
    cir.store %3, %2 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc156)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc18)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc158)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc20)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc21)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc159)
        cir.condition(%7) loc(#loc22)
      } body {
        cir.scope {
          %5 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc24)
          %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc3)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc3)
          %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc4)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc4)
          %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc24)
          cir.store %10, %2 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc161)
          %11 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc27)
          %12 = cir.call @fclose(%11) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc28)
        } loc(#loc160)
        cir.yield loc(#loc17)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc29)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc30)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc162)
        cir.yield loc(#loc157)
      } loc(#loc157)
    } loc(#loc157)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc33)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc164)
      cir.for : cond {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc35)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc36)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc165)
        cir.condition(%7) loc(#loc37)
      } body {
        cir.scope {
          %5 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc39)
          %6 = cir.call @fclose(%5) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc40)
        } loc(#loc166)
        cir.yield loc(#loc32)
      } step {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc41)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc42)
        cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc167)
        cir.yield loc(#loc163)
      } loc(#loc163)
    } loc(#loc163)
    cir.return loc(#loc8)
  } loc(#loc152)
  cir.func no_proto @CWE675_Duplicate_Operations_on_Resource__fopen_17_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc169)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc170)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    cir.return loc(#loc44)
  } loc(#loc168)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc171)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc172)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc173)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc58)
  cir.func @main(%arg0: !s32i loc(fused[#loc61, #loc62]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc63, #loc64])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc175)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc176)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc60)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc65)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc65)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc66)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc67)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc67)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc68)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc55)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %8 = cir.get_global @CWE675_Duplicate_Operations_on_Resource__fopen_17_good : !cir.ptr<!cir.func<!void ()>> loc(#loc177)
    cir.call @CWE675_Duplicate_Operations_on_Resource__fopen_17_good() : () -> () loc(#loc70)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc56)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc57)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %13 = cir.get_global @CWE675_Duplicate_Operations_on_Resource__fopen_17_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc178)
    cir.call @CWE675_Duplicate_Operations_on_Resource__fopen_17_bad() : () -> () loc(#loc74)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc58)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc77)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc179)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc179)
    cir.return %17 : !s32i loc(#loc179)
  } loc(#loc174)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc181)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc182)
    %2 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc183)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc86)
    cir.store %3, %2 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc184)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc90)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc186)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc92)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc93)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc187)
        cir.condition(%7) loc(#loc94)
      } body {
        cir.scope {
          %5 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc96)
          %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc97)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc97)
          %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc98)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc98)
          %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc96)
          cir.store %10, %2 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc189)
          %11 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc101)
          %12 = cir.call @fclose(%11) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc102)
        } loc(#loc188)
        cir.yield loc(#loc89)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc103)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc104)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc190)
        cir.yield loc(#loc185)
      } loc(#loc185)
    } loc(#loc185)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc107)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc192)
      cir.for : cond {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc109)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc110)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc193)
        cir.condition(%7) loc(#loc111)
      } body {
        cir.yield loc(#loc106)
      } step {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc112)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc113)
        cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc194)
        cir.yield loc(#loc191)
      } loc(#loc191)
    } loc(#loc191)
    cir.return loc(#loc80)
  } loc(#loc180)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"GoodSource_fopen.txt\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc114)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc196)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc197)
    %2 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["data"] {alignment = 8 : i64} loc(#loc198)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__IO_FILE> loc(#loc122)
    cir.store %3, %2 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc199)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc126)
      cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc201)
      cir.for : cond {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc128)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc129)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc202)
        cir.condition(%7) loc(#loc130)
      } body {
        cir.scope {
          %5 = cir.get_global @fopen : !cir.ptr<!cir.func<!cir.ptr<!ty__IO_FILE> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc132)
          %6 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc114)
          %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc114)
          %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc133)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc133)
          %10 = cir.call @fopen(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc132)
          cir.store %10, %2 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc204)
        } loc(#loc203)
        cir.yield loc(#loc125)
      } step {
        %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc136)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc137)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc205)
        cir.yield loc(#loc200)
      } loc(#loc200)
    } loc(#loc200)
    cir.scope {
      %4 = cir.const #cir.int<0> : !s32i loc(#loc140)
      cir.store %4, %1 : !s32i, !cir.ptr<!s32i> loc(#loc207)
      cir.for : cond {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc142)
        %6 = cir.const #cir.int<1> : !s32i loc(#loc143)
        %7 = cir.cmp(lt, %5, %6) : !s32i, !cir.bool loc(#loc208)
        cir.condition(%7) loc(#loc144)
      } body {
        cir.scope {
          %5 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc146)
          %6 = cir.call @fclose(%5) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc147)
        } loc(#loc209)
        cir.yield loc(#loc139)
      } step {
        %5 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc148)
        %6 = cir.unary(inc, %5) : !s32i, !s32i loc(#loc149)
        cir.store %6, %1 : !s32i, !cir.ptr<!s32i> loc(#loc210)
        cir.yield loc(#loc206)
      } loc(#loc206)
    } loc(#loc206)
    cir.return loc(#loc116)
  } loc(#loc195)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__fopen_17.c":0:0)
#loc1 = loc("/usr/include/stdio.h":264:1)
#loc2 = loc("/usr/include/stdio.h":266:3)
#loc3 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":29:22)
#loc4 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":29:45)
#loc5 = loc("/usr/include/stdio.h":184:1)
#loc6 = loc("/usr/include/stdio.h":184:36)
#loc7 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":22:1)
#loc8 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":38:1)
#loc9 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":24:5)
#loc10 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":24:9)
#loc11 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":24:11)
#loc12 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":25:5)
#loc13 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":25:12)
#loc14 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":26:12)
#loc15 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":26:5)
#loc16 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":27:5)
#loc17 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":32:5)
#loc18 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":27:13)
#loc19 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":27:9)
#loc20 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":27:16)
#loc21 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":27:20)
#loc22 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":27:18)
#loc23 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":28:5)
#loc24 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":29:16)
#loc25 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":29:9)
#loc26 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":29:49)
#loc27 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":31:16)
#loc28 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":31:9)
#loc29 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":27:24)
#loc30 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":27:23)
#loc31 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":33:5)
#loc32 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":37:5)
#loc33 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":33:13)
#loc34 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":33:9)
#loc35 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":33:16)
#loc36 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":33:20)
#loc37 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":33:18)
#loc38 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":34:5)
#loc39 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":36:16)
#loc40 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":36:9)
#loc41 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":33:24)
#loc42 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":33:23)
#loc43 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":82:1)
#loc44 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":86:1)
#loc45 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":84:5)
#loc46 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":84:13)
#loc47 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":85:5)
#loc48 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":85:13)
#loc49 = loc("/usr/include/stdlib.h":575:1)
#loc50 = loc("/usr/include/stdlib.h":575:41)
#loc51 = loc("/usr/include/time.h":76:1)
#loc52 = loc("/usr/include/time.h":76:38)
#loc53 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc54 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc55 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":102:15)
#loc56 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":104:15)
#loc57 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":107:15)
#loc58 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":109:15)
#loc59 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":97:1)
#loc60 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":112:1)
#loc65 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":98:1)
#loc66 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":100:27)
#loc67 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":100:22)
#loc68 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":100:5)
#loc69 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":102:5)
#loc70 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":103:5)
#loc71 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":103:60)
#loc72 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":104:5)
#loc73 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":107:5)
#loc74 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":108:5)
#loc75 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":108:59)
#loc76 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":109:5)
#loc77 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":111:12)
#loc78 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":111:5)
#loc79 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":45:1)
#loc80 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":62:1)
#loc81 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":47:5)
#loc82 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":47:9)
#loc83 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":47:11)
#loc84 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":48:5)
#loc85 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":48:12)
#loc86 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":49:12)
#loc87 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":49:5)
#loc88 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":50:5)
#loc89 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":55:5)
#loc90 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":50:13)
#loc91 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":50:9)
#loc92 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":50:16)
#loc93 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":50:20)
#loc94 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":50:18)
#loc95 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":51:5)
#loc96 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":52:16)
#loc97 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":52:22)
#loc98 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":52:45)
#loc99 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":52:9)
#loc100 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":52:49)
#loc101 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":54:16)
#loc102 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":54:9)
#loc103 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":50:24)
#loc104 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":50:23)
#loc105 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":56:5)
#loc106 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":61:5)
#loc107 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":56:13)
#loc108 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":56:9)
#loc109 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":56:16)
#loc110 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":56:20)
#loc111 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":56:18)
#loc112 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":56:24)
#loc113 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":56:23)
#loc114 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":73:22)
#loc115 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":65:1)
#loc116 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":80:1)
#loc117 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":67:5)
#loc118 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":67:9)
#loc119 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":67:11)
#loc120 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":68:5)
#loc121 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":68:12)
#loc122 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":69:12)
#loc123 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":69:5)
#loc124 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":70:5)
#loc125 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":74:5)
#loc126 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":70:13)
#loc127 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":70:9)
#loc128 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":70:16)
#loc129 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":70:20)
#loc130 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":70:18)
#loc131 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":71:5)
#loc132 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":73:16)
#loc133 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":73:46)
#loc134 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":73:9)
#loc135 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":73:50)
#loc136 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":70:24)
#loc137 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":70:23)
#loc138 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":75:5)
#loc139 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":79:5)
#loc140 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":75:13)
#loc141 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":75:9)
#loc142 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":75:16)
#loc143 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":75:20)
#loc144 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":75:18)
#loc145 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":76:5)
#loc146 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":78:16)
#loc147 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":78:9)
#loc148 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":75:24)
#loc149 = loc("CWE675_Duplicate_Operations_on_Resource__fopen_17.c":75:23)
#loc150 = loc(fused[#loc1, #loc2])
#loc151 = loc(fused[#loc5, #loc6])
#loc152 = loc(fused[#loc7, #loc8])
#loc153 = loc(fused[#loc9, #loc10])
#loc154 = loc(fused[#loc9, #loc11])
#loc155 = loc(fused[#loc12, #loc13])
#loc156 = loc(fused[#loc15, #loc14])
#loc157 = loc(fused[#loc16, #loc17])
#loc158 = loc(fused[#loc19, #loc18])
#loc159 = loc(fused[#loc20, #loc21])
#loc160 = loc(fused[#loc23, #loc17])
#loc161 = loc(fused[#loc25, #loc26])
#loc162 = loc(fused[#loc30, #loc29])
#loc163 = loc(fused[#loc31, #loc32])
#loc164 = loc(fused[#loc34, #loc33])
#loc165 = loc(fused[#loc35, #loc36])
#loc166 = loc(fused[#loc38, #loc32])
#loc167 = loc(fused[#loc42, #loc41])
#loc168 = loc(fused[#loc43, #loc44])
#loc169 = loc(fused[#loc45, #loc46])
#loc170 = loc(fused[#loc47, #loc48])
#loc171 = loc(fused[#loc49, #loc50])
#loc172 = loc(fused[#loc51, #loc52])
#loc173 = loc(fused[#loc53, #loc54])
#loc174 = loc(fused[#loc59, #loc60])
#loc177 = loc(fused[#loc70, #loc71])
#loc178 = loc(fused[#loc74, #loc75])
#loc179 = loc(fused[#loc78, #loc77])
#loc180 = loc(fused[#loc79, #loc80])
#loc181 = loc(fused[#loc81, #loc82])
#loc182 = loc(fused[#loc81, #loc83])
#loc183 = loc(fused[#loc84, #loc85])
#loc184 = loc(fused[#loc87, #loc86])
#loc185 = loc(fused[#loc88, #loc89])
#loc186 = loc(fused[#loc91, #loc90])
#loc187 = loc(fused[#loc92, #loc93])
#loc188 = loc(fused[#loc95, #loc89])
#loc189 = loc(fused[#loc99, #loc100])
#loc190 = loc(fused[#loc104, #loc103])
#loc191 = loc(fused[#loc105, #loc106])
#loc192 = loc(fused[#loc108, #loc107])
#loc193 = loc(fused[#loc109, #loc110])
#loc194 = loc(fused[#loc113, #loc112])
#loc195 = loc(fused[#loc115, #loc116])
#loc196 = loc(fused[#loc117, #loc118])
#loc197 = loc(fused[#loc117, #loc119])
#loc198 = loc(fused[#loc120, #loc121])
#loc199 = loc(fused[#loc123, #loc122])
#loc200 = loc(fused[#loc124, #loc125])
#loc201 = loc(fused[#loc127, #loc126])
#loc202 = loc(fused[#loc128, #loc129])
#loc203 = loc(fused[#loc131, #loc125])
#loc204 = loc(fused[#loc134, #loc135])
#loc205 = loc(fused[#loc137, #loc136])
#loc206 = loc(fused[#loc138, #loc139])
#loc207 = loc(fused[#loc141, #loc140])
#loc208 = loc(fused[#loc142, #loc143])
#loc209 = loc(fused[#loc145, #loc139])
#loc210 = loc(fused[#loc149, #loc148])
