!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @_ZN49CWE194_Unexpected_Sign_Extension__rand_memmove_629badSourceERs(!cir.ptr<!s16i>) loc(#loc86)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc87)
  cir.func @_ZN49CWE194_Unexpected_Sign_Extension__rand_memmove_623badEv() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc89)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc9)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc9)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc90)
    cir.call @_ZN49CWE194_Unexpected_Sign_Extension__rand_memmove_629badSourceERs(%0) : (!cir.ptr<!s16i>) -> () loc(#loc11)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc92)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc93)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc93)
      cir.store %5, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc93)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc18)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
      %8 = cir.const #cir.int<65> : !s8i loc(#loc19)
      %9 = cir.cast(integral, %8 : !s8i), !s32i loc(#loc19)
      %10 = cir.const #cir.int<100> : !s32i loc(#loc20)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc21)
      %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc20)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc20)
      cir.libc.memset %13 bytes from %7 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc94)
      %14 = cir.const #cir.int<0> : !s8i loc(#loc24)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc25)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc26)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc25)
      %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc27)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc27)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc95)
      cir.scope {
        %21 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc30)
        %22 = cir.cast(integral, %21 : !s16i), !s32i loc(#loc30)
        %23 = cir.const #cir.int<100> : !s32i loc(#loc31)
        %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc97)
        cir.if %24 {
          %25 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc33)
          %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc33)
          %27 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc34)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc34)
          %29 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc35)
          %30 = cir.cast(integral, %29 : !s16i), !u64i loc(#loc35)
          cir.libc.memmove %30 bytes from %28 to %26 : !cir.ptr<!void>, !u64i loc(#loc99)
          %31 = cir.const #cir.int<0> : !s8i loc(#loc38)
          %32 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc39)
          %33 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc40)
          %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !s16i), !cir.ptr<!s8i> loc(#loc40)
          cir.store %31, %34 : !s8i, !cir.ptr<!s8i> loc(#loc100)
        } loc(#loc98)
      } loc(#loc96)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc41)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc42)
    } loc(#loc91)
    cir.return loc(#loc6)
  } loc(#loc88)
  cir.func private @_ZN49CWE194_Unexpected_Sign_Extension__rand_memmove_6213goodG2BSourceERs(!cir.ptr<!s16i>) loc(#loc101)
  cir.func internal private @_ZN49CWE194_Unexpected_Sign_Extension__rand_memmove_62L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc103)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc49)
    %2 = cir.cast(integral, %1 : !s32i), !s16i loc(#loc49)
    cir.store %2, %0 : !s16i, !cir.ptr<!s16i> loc(#loc104)
    cir.call @_ZN49CWE194_Unexpected_Sign_Extension__rand_memmove_6213goodG2BSourceERs(%0) : (!cir.ptr<!s16i>) -> () loc(#loc51)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc106)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc107)
      %5 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc107)
      cir.store %5, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc107)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc58)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc58)
      %8 = cir.const #cir.int<65> : !s8i loc(#loc59)
      %9 = cir.cast(integral, %8 : !s8i), !s32i loc(#loc59)
      %10 = cir.const #cir.int<100> : !s32i loc(#loc60)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc61)
      %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc60)
      %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc60)
      cir.libc.memset %13 bytes from %7 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc108)
      %14 = cir.const #cir.int<0> : !s8i loc(#loc64)
      %15 = cir.const #cir.int<100> : !s32i loc(#loc65)
      %16 = cir.const #cir.int<1> : !s32i loc(#loc66)
      %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc65)
      %18 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc67)
      %19 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc67)
      cir.store %14, %19 : !s8i, !cir.ptr<!s8i> loc(#loc109)
      cir.scope {
        %21 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc70)
        %22 = cir.cast(integral, %21 : !s16i), !s32i loc(#loc70)
        %23 = cir.const #cir.int<100> : !s32i loc(#loc71)
        %24 = cir.cmp(lt, %22, %23) : !s32i, !cir.bool loc(#loc111)
        cir.if %24 {
          %25 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc73)
          %26 = cir.cast(bitcast, %25 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc73)
          %27 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc74)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc74)
          %29 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc75)
          %30 = cir.cast(integral, %29 : !s16i), !u64i loc(#loc75)
          cir.libc.memmove %30 bytes from %28 to %26 : !cir.ptr<!void>, !u64i loc(#loc113)
          %31 = cir.const #cir.int<0> : !s8i loc(#loc78)
          %32 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc79)
          %33 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc80)
          %34 = cir.ptr_stride(%33 : !cir.ptr<!s8i>, %32 : !s16i), !cir.ptr<!s8i> loc(#loc80)
          cir.store %31, %34 : !s8i, !cir.ptr<!s8i> loc(#loc114)
        } loc(#loc112)
      } loc(#loc110)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc81)
      cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    } loc(#loc105)
    cir.return loc(#loc46)
  } loc(#loc102)
  cir.func @_ZN49CWE194_Unexpected_Sign_Extension__rand_memmove_624goodEv() extra(#fn_attr) {
    cir.call @_ZN49CWE194_Unexpected_Sign_Extension__rand_memmove_62L7goodG2BEv() : () -> () loc(#loc85)
    cir.return loc(#loc84)
  } loc(#loc115)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE194_Unexpected_Sign_Extension/s02/CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":0:0)
#loc1 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":25:1)
#loc2 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":25:27)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":27:1)
#loc6 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":47:1)
#loc7 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":29:5)
#loc8 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":29:11)
#loc9 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":31:12)
#loc10 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":31:5)
#loc11 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":32:5)
#loc12 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":33:5)
#loc13 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":46:5)
#loc14 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":34:9)
#loc15 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":34:24)
#loc16 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":35:9)
#loc17 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":35:26)
#loc18 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":36:16)
#loc19 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":36:24)
#loc20 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":36:29)
#loc21 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":36:33)
#loc22 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":36:9)
#loc23 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":36:34)
#loc24 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":37:25)
#loc25 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":37:16)
#loc26 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":37:20)
#loc27 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":37:9)
#loc28 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":38:9)
#loc29 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":44:9)
#loc30 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":38:13)
#loc31 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":38:20)
#loc32 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":39:9)
#loc33 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":42:21)
#loc34 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":42:27)
#loc35 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":42:35)
#loc36 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":42:13)
#loc37 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":42:39)
#loc38 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":43:26)
#loc39 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":43:18)
#loc40 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":43:13)
#loc41 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":45:19)
#loc42 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":45:9)
#loc43 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":54:1)
#loc44 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":54:31)
#loc45 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":56:1)
#loc46 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":76:1)
#loc47 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":58:5)
#loc48 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":58:11)
#loc49 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":60:12)
#loc50 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":60:5)
#loc51 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":61:5)
#loc52 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":62:5)
#loc53 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":75:5)
#loc54 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":63:9)
#loc55 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":63:24)
#loc56 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":64:9)
#loc57 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":64:26)
#loc58 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":65:16)
#loc59 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":65:24)
#loc60 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":65:29)
#loc61 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":65:33)
#loc62 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":65:9)
#loc63 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":65:34)
#loc64 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":66:25)
#loc65 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":66:16)
#loc66 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":66:20)
#loc67 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":66:9)
#loc68 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":67:9)
#loc69 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":73:9)
#loc70 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":67:13)
#loc71 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":67:20)
#loc72 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":68:9)
#loc73 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":71:21)
#loc74 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":71:27)
#loc75 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":71:35)
#loc76 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":71:13)
#loc77 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":71:39)
#loc78 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":72:26)
#loc79 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":72:18)
#loc80 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":72:13)
#loc81 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":74:19)
#loc82 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":74:9)
#loc83 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":78:1)
#loc84 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":81:1)
#loc85 = loc("CWE194_Unexpected_Sign_Extension__rand_memmove_62a.cpp":80:5)
#loc86 = loc(fused[#loc1, #loc2])
#loc87 = loc(fused[#loc3, #loc4])
#loc88 = loc(fused[#loc5, #loc6])
#loc89 = loc(fused[#loc7, #loc8])
#loc90 = loc(fused[#loc10, #loc9])
#loc91 = loc(fused[#loc12, #loc13])
#loc92 = loc(fused[#loc14, #loc15])
#loc93 = loc(fused[#loc16, #loc17])
#loc94 = loc(fused[#loc22, #loc23])
#loc95 = loc(fused[#loc27, #loc24])
#loc96 = loc(fused[#loc28, #loc29])
#loc97 = loc(fused[#loc30, #loc31])
#loc98 = loc(fused[#loc32, #loc29])
#loc99 = loc(fused[#loc36, #loc37])
#loc100 = loc(fused[#loc40, #loc38])
#loc101 = loc(fused[#loc43, #loc44])
#loc102 = loc(fused[#loc45, #loc46])
#loc103 = loc(fused[#loc47, #loc48])
#loc104 = loc(fused[#loc50, #loc49])
#loc105 = loc(fused[#loc52, #loc53])
#loc106 = loc(fused[#loc54, #loc55])
#loc107 = loc(fused[#loc56, #loc57])
#loc108 = loc(fused[#loc62, #loc63])
#loc109 = loc(fused[#loc67, #loc64])
#loc110 = loc(fused[#loc68, #loc69])
#loc111 = loc(fused[#loc70, #loc71])
#loc112 = loc(fused[#loc72, #loc69])
#loc113 = loc(fused[#loc76, #loc77])
#loc114 = loc(fused[#loc80, #loc78])
#loc115 = loc(fused[#loc83, #loc84])
