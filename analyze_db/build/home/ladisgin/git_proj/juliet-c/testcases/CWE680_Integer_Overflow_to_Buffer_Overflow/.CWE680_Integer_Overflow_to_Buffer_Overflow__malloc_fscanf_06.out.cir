!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":130:10)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":130:14)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":130:20)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":130:32)
#loc251 = loc(fused[#loc86, #loc87])
#loc252 = loc(fused[#loc88, #loc89])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc216)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc217)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc218)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc219)
  cir.func private @printIntLine(!s32i) loc(#loc220)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc221)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc223)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc224)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc225)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc23)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc226)
    cir.br ^bb1 loc(#loc227)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<5> : !s32i loc(#loc27)
    %6 = cir.const #cir.int<5> : !s32i loc(#loc28)
    %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc228)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc229)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc30)
    %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc217)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc31)
    %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
    %13 = cir.call @__isoc99_fscanf(%10, %12, %2) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc30)
    cir.br ^bb3 loc(#loc26)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc26)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc230)
  ^bb5:  // pred: ^bb4
    %14 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc34)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc35)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc35)
    %17 = cir.const #cir.int<4> : !u64i loc(#loc231)
    %18 = cir.binop(mul, %16, %17) : !u64i loc(#loc232)
    %19 = cir.call @malloc(%18) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc34)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc233)
    cir.store %20, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc234)
    cir.br ^bb6 loc(#loc235)
  ^bb6:  // pred: ^bb5
    %21 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc42)
    %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc43)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc43)
    %24 = cir.cmp(eq, %21, %23) : !cir.ptr<!s32i>, !cir.bool loc(#loc236)
    cir.brcond %24 ^bb7, ^bb8 loc(#loc237)
  ^bb7:  // pred: ^bb6
    %25 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc45)
    %26 = cir.const #cir.int<1> : !s32i loc(#loc46)
    %27 = cir.unary(minus, %26) : !s32i, !s32i loc(#loc47)
    cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc45)
    cir.br ^bb8 loc(#loc41)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc41)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc238)
  ^bb10:  // pred: ^bb9
    %28 = cir.const #cir.int<0> : !s32i loc(#loc50)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc50)
    cir.store %29, %0 : !u64i, !cir.ptr<!u64i> loc(#loc239)
    cir.br ^bb11 loc(#loc238)
  ^bb11:  // 2 preds: ^bb10, ^bb15
    %30 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc52)
    %31 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc53)
    %32 = cir.cast(integral, %31 : !s32i), !u64i loc(#loc53)
    %33 = cir.cmp(lt, %30, %32) : !u64i, !cir.bool loc(#loc240)
    cir.brcond %33 ^bb12, ^bb16 loc(#loc54)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc241)
  ^bb13:  // pred: ^bb12
    %34 = cir.const #cir.int<0> : !s32i loc(#loc56)
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc57)
    %36 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc58)
    %37 = cir.ptr_stride(%35 : !cir.ptr<!s32i>, %36 : !u64i), !cir.ptr<!s32i> loc(#loc59)
    cir.store %34, %37 : !s32i, !cir.ptr<!s32i> loc(#loc242)
    cir.br ^bb14 loc(#loc49)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc49)
  ^bb15:  // pred: ^bb14
    %38 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc60)
    %39 = cir.unary(inc, %38) : !u64i, !u64i loc(#loc61)
    cir.store %39, %0 : !u64i, !cir.ptr<!u64i> loc(#loc243)
    cir.br ^bb11 loc(#loc238)
  ^bb16:  // pred: ^bb11
    cir.br ^bb17 loc(#loc49)
  ^bb17:  // pred: ^bb16
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc62)
    %41 = cir.const #cir.int<0> : !s32i loc(#loc63)
    %42 = cir.ptr_stride(%40 : !cir.ptr<!s32i>, %41 : !s32i), !cir.ptr<!s32i> loc(#loc64)
    %43 = cir.load %42 : !cir.ptr<!s32i>, !s32i loc(#loc62)
    cir.call @printIntLine(%43) : (!s32i) -> () loc(#loc65)
    %44 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc66)
    %45 = cir.cast(bitcast, %44 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc66)
    cir.call @free(%45) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc67)
    cir.br ^bb18 loc(#loc33)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc15)
  } loc(#loc222)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc245)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc70)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc246)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc72)
    cir.return loc(#loc69)
  } loc(#loc244)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc247)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc248)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc249)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc80)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc81)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc82)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc83)
  cir.func @main(%arg0: !s32i loc(fused[#loc86, #loc87]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc88, #loc89])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc251)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc252)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc85)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc90)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc90)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc91)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc92)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc92)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc93)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc80)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc94)
    %8 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06_good : !cir.ptr<!cir.func<!void ()>> loc(#loc253)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06_good() : () -> () loc(#loc95)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc81)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc81)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc97)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc82)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc82)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc98)
    %13 = cir.get_global @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc254)
    cir.call @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06_bad() : () -> () loc(#loc99)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc83)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc101)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc102)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc255)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc255)
    cir.return %17 : !s32i loc(#loc255)
  } loc(#loc250)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc104)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc257)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc258)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc259)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc114)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc260)
    cir.br ^bb1 loc(#loc261)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<5> : !s32i loc(#loc118)
    %6 = cir.const #cir.int<5> : !s32i loc(#loc119)
    %7 = cir.cmp(ne, %5, %6) : !s32i, !cir.bool loc(#loc262)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc263)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc104)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc104)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    cir.br ^bb4 loc(#loc121)
  ^bb3:  // pred: ^bb1
    %10 = cir.const #cir.int<20> : !s32i loc(#loc124)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc264)
    cir.br ^bb4 loc(#loc117)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc117)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc265)
  ^bb6:  // pred: ^bb5
    %11 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc128)
    %12 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc129)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc129)
    %14 = cir.const #cir.int<4> : !u64i loc(#loc266)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc267)
    %16 = cir.call @malloc(%15) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc128)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc268)
    cir.store %17, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc269)
    cir.br ^bb7 loc(#loc270)
  ^bb7:  // pred: ^bb6
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc136)
    %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc137)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc137)
    %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s32i>, !cir.bool loc(#loc271)
    cir.brcond %21 ^bb8, ^bb9 loc(#loc272)
  ^bb8:  // pred: ^bb7
    %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc139)
    %23 = cir.const #cir.int<1> : !s32i loc(#loc140)
    %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc141)
    cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc139)
    cir.br ^bb9 loc(#loc135)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc135)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc273)
  ^bb11:  // pred: ^bb10
    %25 = cir.const #cir.int<0> : !s32i loc(#loc144)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc144)
    cir.store %26, %0 : !u64i, !cir.ptr<!u64i> loc(#loc274)
    cir.br ^bb12 loc(#loc273)
  ^bb12:  // 2 preds: ^bb11, ^bb16
    %27 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc146)
    %28 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc147)
    %29 = cir.cast(integral, %28 : !s32i), !u64i loc(#loc147)
    %30 = cir.cmp(lt, %27, %29) : !u64i, !cir.bool loc(#loc275)
    cir.brcond %30 ^bb13, ^bb17 loc(#loc148)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc276)
  ^bb14:  // pred: ^bb13
    %31 = cir.const #cir.int<0> : !s32i loc(#loc150)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc151)
    %33 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc152)
    %34 = cir.ptr_stride(%32 : !cir.ptr<!s32i>, %33 : !u64i), !cir.ptr<!s32i> loc(#loc153)
    cir.store %31, %34 : !s32i, !cir.ptr<!s32i> loc(#loc277)
    cir.br ^bb15 loc(#loc143)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc143)
  ^bb16:  // pred: ^bb15
    %35 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc154)
    %36 = cir.unary(inc, %35) : !u64i, !u64i loc(#loc155)
    cir.store %36, %0 : !u64i, !cir.ptr<!u64i> loc(#loc278)
    cir.br ^bb12 loc(#loc273)
  ^bb17:  // pred: ^bb12
    cir.br ^bb18 loc(#loc143)
  ^bb18:  // pred: ^bb17
    %37 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc156)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc157)
    %39 = cir.ptr_stride(%37 : !cir.ptr<!s32i>, %38 : !s32i), !cir.ptr<!s32i> loc(#loc158)
    %40 = cir.load %39 : !cir.ptr<!s32i>, !s32i loc(#loc156)
    cir.call @printIntLine(%40) : (!s32i) -> () loc(#loc159)
    %41 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc160)
    %42 = cir.cast(bitcast, %41 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc160)
    cir.call @free(%42) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc161)
    cir.br ^bb19 loc(#loc127)
  ^bb19:  // pred: ^bb18
    cir.return loc(#loc106)
  } loc(#loc256)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc280)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc281)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc282)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc170)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc171)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc283)
    cir.br ^bb1 loc(#loc284)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<5> : !s32i loc(#loc175)
    %6 = cir.const #cir.int<5> : !s32i loc(#loc176)
    %7 = cir.cmp(eq, %5, %6) : !s32i, !cir.bool loc(#loc285)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc286)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<20> : !s32i loc(#loc178)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc287)
    cir.br ^bb3 loc(#loc174)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc174)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc288)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc182)
    %10 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc183)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc183)
    %12 = cir.const #cir.int<4> : !u64i loc(#loc289)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc290)
    %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc182)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc291)
    cir.store %15, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc292)
    cir.br ^bb6 loc(#loc293)
  ^bb6:  // pred: ^bb5
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc190)
    %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc191)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc191)
    %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s32i>, !cir.bool loc(#loc294)
    cir.brcond %19 ^bb7, ^bb8 loc(#loc295)
  ^bb7:  // pred: ^bb6
    %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc193)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc194)
    %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc195)
    cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc193)
    cir.br ^bb8 loc(#loc189)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc189)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc296)
  ^bb10:  // pred: ^bb9
    %23 = cir.const #cir.int<0> : !s32i loc(#loc198)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc198)
    cir.store %24, %0 : !u64i, !cir.ptr<!u64i> loc(#loc297)
    cir.br ^bb11 loc(#loc296)
  ^bb11:  // 2 preds: ^bb10, ^bb15
    %25 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc200)
    %26 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc201)
    %27 = cir.cast(integral, %26 : !s32i), !u64i loc(#loc201)
    %28 = cir.cmp(lt, %25, %27) : !u64i, !cir.bool loc(#loc298)
    cir.brcond %28 ^bb12, ^bb16 loc(#loc202)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc299)
  ^bb13:  // pred: ^bb12
    %29 = cir.const #cir.int<0> : !s32i loc(#loc204)
    %30 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc205)
    %31 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc206)
    %32 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %31 : !u64i), !cir.ptr<!s32i> loc(#loc207)
    cir.store %29, %32 : !s32i, !cir.ptr<!s32i> loc(#loc300)
    cir.br ^bb14 loc(#loc197)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc197)
  ^bb15:  // pred: ^bb14
    %33 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc208)
    %34 = cir.unary(inc, %33) : !u64i, !u64i loc(#loc209)
    cir.store %34, %0 : !u64i, !cir.ptr<!u64i> loc(#loc301)
    cir.br ^bb11 loc(#loc296)
  ^bb16:  // pred: ^bb11
    cir.br ^bb17 loc(#loc197)
  ^bb17:  // pred: ^bb16
    %35 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc210)
    %36 = cir.const #cir.int<0> : !s32i loc(#loc211)
    %37 = cir.ptr_stride(%35 : !cir.ptr<!s32i>, %36 : !s32i), !cir.ptr<!s32i> loc(#loc212)
    %38 = cir.load %37 : !cir.ptr<!s32i>, !s32i loc(#loc210)
    cir.call @printIntLine(%38) : (!s32i) -> () loc(#loc213)
    %39 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc214)
    %40 = cir.cast(bitcast, %39 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc214)
    cir.call @free(%40) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc215)
    cir.br ^bb18 loc(#loc181)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc163)
  } loc(#loc279)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":33:23)
#loc6 = loc("/usr/include/stdlib.h":672:1)
#loc7 = loc("/usr/include/stdlib.h":672:45)
#loc8 = loc("/usr/include/stdlib.h":756:1)
#loc9 = loc("/usr/include/stdlib.h":756:70)
#loc10 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc11 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc12 = loc("/usr/include/stdlib.h":687:1)
#loc13 = loc("/usr/include/stdlib.h":687:32)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":25:1)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":49:1)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":36:9)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":36:16)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":37:9)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":37:14)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":27:5)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":27:9)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":29:13)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":29:12)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":29:5)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":30:5)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":34:5)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":30:8)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":30:27)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":31:5)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":33:9)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":33:16)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":35:5)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":48:5)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":40:28)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":40:35)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":40:42)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":40:52)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":40:53)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":40:9)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":41:9)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":41:43)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":41:13)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":41:27)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":41:33)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":41:34)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":41:40)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":41:39)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":42:9)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":45:9)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":42:18)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":42:14)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":42:21)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":42:33)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":42:23)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":43:9)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":44:29)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":44:13)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":44:24)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":44:25)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":42:40)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":42:39)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":46:22)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":46:33)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":46:34)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":46:9)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":47:14)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":47:9)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":114:1)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":118:1)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":116:5)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":116:14)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":117:5)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":117:14)
#loc74 = loc("/usr/include/stdlib.h":575:1)
#loc75 = loc("/usr/include/stdlib.h":575:41)
#loc76 = loc("/usr/include/time.h":76:1)
#loc77 = loc("/usr/include/time.h":76:38)
#loc78 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc79 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":135:15)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":137:15)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":140:15)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":142:15)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":130:1)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":145:1)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":131:1)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":133:27)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":133:22)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":133:5)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":135:5)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":136:5)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":136:71)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":137:5)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":140:5)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":141:5)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":141:70)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":142:5)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":144:12)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":144:5)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":64:19)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":56:1)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":85:1)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":72:9)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":72:16)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":73:9)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":73:14)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":58:5)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":58:9)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":60:13)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":60:12)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":60:5)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":61:5)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":70:5)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":61:8)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":61:27)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":62:5)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":65:5)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":67:5)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":64:9)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":69:16)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":69:9)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":71:5)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":84:5)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":76:28)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":76:35)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":76:42)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":76:52)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":76:53)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":76:9)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":77:9)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":77:43)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":77:13)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":77:27)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":77:33)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":77:34)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":77:40)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":77:39)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":78:9)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":81:9)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":78:18)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":78:14)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":78:21)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":78:33)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":78:23)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":79:9)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":80:29)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":80:13)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":80:24)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":80:25)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":78:40)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":78:39)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":82:22)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":82:33)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":82:34)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":82:9)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":83:14)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":83:9)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":88:1)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":112:1)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":99:9)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":99:16)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":100:9)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":100:14)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":90:5)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":90:9)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":92:13)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":92:12)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":92:5)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":93:5)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":97:5)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":93:8)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":93:27)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":94:5)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":96:16)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":96:9)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":98:5)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":111:5)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":103:28)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":103:35)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":103:42)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":103:52)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":103:53)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":103:9)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":104:9)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":104:43)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":104:13)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":104:27)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":104:33)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":104:34)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":104:40)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":104:39)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":105:9)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":108:9)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":105:18)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":105:14)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":105:21)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":105:33)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":105:23)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":106:9)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":107:29)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":107:13)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":107:24)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":107:25)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":105:40)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":105:39)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":109:22)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":109:33)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":109:34)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":109:9)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":110:14)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fscanf_06.c":110:9)
#loc216 = loc(fused[#loc1, #loc2])
#loc217 = loc(fused[#loc3, #loc4])
#loc218 = loc(fused[#loc6, #loc7])
#loc219 = loc(fused[#loc8, #loc9])
#loc220 = loc(fused[#loc10, #loc11])
#loc221 = loc(fused[#loc12, #loc13])
#loc222 = loc(fused[#loc14, #loc15])
#loc223 = loc(fused[#loc16, #loc17])
#loc224 = loc(fused[#loc18, #loc19])
#loc225 = loc(fused[#loc20, #loc21])
#loc226 = loc(fused[#loc24, #loc22])
#loc227 = loc(fused[#loc25, #loc26])
#loc228 = loc(fused[#loc27, #loc28])
#loc229 = loc(fused[#loc29, #loc26])
#loc230 = loc(fused[#loc32, #loc33])
#loc231 = loc(fused[#loc36, #loc37])
#loc232 = loc(fused[#loc35, #loc37])
#loc233 = loc(fused[#loc34, #loc38])
#loc234 = loc(fused[#loc39, #loc38])
#loc235 = loc(fused[#loc40, #loc41])
#loc236 = loc(fused[#loc42, #loc43])
#loc237 = loc(fused[#loc44, #loc41])
#loc238 = loc(fused[#loc48, #loc49])
#loc239 = loc(fused[#loc51, #loc50])
#loc240 = loc(fused[#loc52, #loc53])
#loc241 = loc(fused[#loc55, #loc49])
#loc242 = loc(fused[#loc57, #loc56])
#loc243 = loc(fused[#loc61, #loc60])
#loc244 = loc(fused[#loc68, #loc69])
#loc245 = loc(fused[#loc70, #loc71])
#loc246 = loc(fused[#loc72, #loc73])
#loc247 = loc(fused[#loc74, #loc75])
#loc248 = loc(fused[#loc76, #loc77])
#loc249 = loc(fused[#loc78, #loc79])
#loc250 = loc(fused[#loc84, #loc85])
#loc253 = loc(fused[#loc95, #loc96])
#loc254 = loc(fused[#loc99, #loc100])
#loc255 = loc(fused[#loc103, #loc102])
#loc256 = loc(fused[#loc105, #loc106])
#loc257 = loc(fused[#loc107, #loc108])
#loc258 = loc(fused[#loc109, #loc110])
#loc259 = loc(fused[#loc111, #loc112])
#loc260 = loc(fused[#loc115, #loc113])
#loc261 = loc(fused[#loc116, #loc117])
#loc262 = loc(fused[#loc118, #loc119])
#loc263 = loc(fused[#loc120, #loc121, #loc122, #loc117])
#loc264 = loc(fused[#loc125, #loc124])
#loc265 = loc(fused[#loc126, #loc127])
#loc266 = loc(fused[#loc130, #loc131])
#loc267 = loc(fused[#loc129, #loc131])
#loc268 = loc(fused[#loc128, #loc132])
#loc269 = loc(fused[#loc133, #loc132])
#loc270 = loc(fused[#loc134, #loc135])
#loc271 = loc(fused[#loc136, #loc137])
#loc272 = loc(fused[#loc138, #loc135])
#loc273 = loc(fused[#loc142, #loc143])
#loc274 = loc(fused[#loc145, #loc144])
#loc275 = loc(fused[#loc146, #loc147])
#loc276 = loc(fused[#loc149, #loc143])
#loc277 = loc(fused[#loc151, #loc150])
#loc278 = loc(fused[#loc155, #loc154])
#loc279 = loc(fused[#loc162, #loc163])
#loc280 = loc(fused[#loc164, #loc165])
#loc281 = loc(fused[#loc166, #loc167])
#loc282 = loc(fused[#loc168, #loc169])
#loc283 = loc(fused[#loc172, #loc170])
#loc284 = loc(fused[#loc173, #loc174])
#loc285 = loc(fused[#loc175, #loc176])
#loc286 = loc(fused[#loc177, #loc174])
#loc287 = loc(fused[#loc179, #loc178])
#loc288 = loc(fused[#loc180, #loc181])
#loc289 = loc(fused[#loc184, #loc185])
#loc290 = loc(fused[#loc183, #loc185])
#loc291 = loc(fused[#loc182, #loc186])
#loc292 = loc(fused[#loc187, #loc186])
#loc293 = loc(fused[#loc188, #loc189])
#loc294 = loc(fused[#loc190, #loc191])
#loc295 = loc(fused[#loc192, #loc189])
#loc296 = loc(fused[#loc196, #loc197])
#loc297 = loc(fused[#loc199, #loc198])
#loc298 = loc(fused[#loc200, #loc201])
#loc299 = loc(fused[#loc203, #loc197])
#loc300 = loc(fused[#loc205, #loc204])
#loc301 = loc(fused[#loc209, #loc208])
