!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_char_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc140)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc141)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc142)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc143)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_char_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc145)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc17)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc17)
        cir.condition(%3) loc(#loc17)
      } do {
        %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc18)
        %3 = cir.const #cir.int<100> : !s32i loc(#loc19)
        %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc19)
        %5 = cir.const #cir.int<1> : !u64i loc(#loc148)
        %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc149)
        %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc18)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc150)
        cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
        cir.scope {
          %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
          %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc27)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc27)
          %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc153)
          cir.if %29 {
            %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc29)
            %31 = cir.const #cir.int<1> : !s32i loc(#loc30)
            %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc31)
            cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc29)
          } loc(#loc154)
        } loc(#loc152)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc32)
        %11 = cir.const #cir.int<65> : !s32i loc(#loc33)
        %12 = cir.const #cir.int<100> : !s32i loc(#loc34)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc35)
        %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc34)
        %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc34)
        cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc155)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc38)
        %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc38)
        %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
        %19 = cir.const #cir.int<100> : !s32i loc(#loc40)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc41)
        %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc40)
        %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc42)
        cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc156)
        %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc43)
        %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
        %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc44)
        cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc43)
        cir.break loc(#loc45)
      } loc(#loc147)
    } loc(#loc147)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc48)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc48)
        cir.condition(%3) loc(#loc48)
      } do {
        %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc49)
        cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc50)
        cir.break loc(#loc51)
      } loc(#loc157)
    } loc(#loc157)
    cir.return loc(#loc10)
  } loc(#loc144)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_char_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc159)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc160)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc56)
    cir.return loc(#loc53)
  } loc(#loc158)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc162)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc62)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc163)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc66)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc66)
        cir.condition(%3) loc(#loc66)
      } do {
        %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc67)
        %3 = cir.const #cir.int<100> : !s32i loc(#loc68)
        %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc68)
        %5 = cir.const #cir.int<1> : !u64i loc(#loc165)
        %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc166)
        %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc67)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc167)
        cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc168)
        cir.scope {
          %26 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
          %27 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc76)
          %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc76)
          %29 = cir.cmp(eq, %26, %28) : !cir.ptr<!s8i>, !cir.bool loc(#loc170)
          cir.if %29 {
            %30 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc78)
            %31 = cir.const #cir.int<1> : !s32i loc(#loc79)
            %32 = cir.unary(minus, %31) : !s32i, !s32i loc(#loc80)
            cir.call @exit(%32) : (!s32i) -> () extra(#fn_attr) loc(#loc78)
          } loc(#loc171)
        } loc(#loc169)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc81)
        %11 = cir.const #cir.int<65> : !s32i loc(#loc82)
        %12 = cir.const #cir.int<100> : !s32i loc(#loc83)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc84)
        %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc83)
        %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc83)
        cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc172)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc87)
        %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc87)
        %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
        %19 = cir.const #cir.int<100> : !s32i loc(#loc89)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc90)
        %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc89)
        %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc91)
        cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc173)
        %23 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc92)
        %24 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
        %25 = cir.cast(bitcast, %24 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc93)
        cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc92)
        cir.break loc(#loc94)
      } loc(#loc164)
    } loc(#loc164)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc97)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc97)
        cir.condition(%3) loc(#loc97)
      } do {
        cir.break loc(#loc98)
      } loc(#loc174)
    } loc(#loc174)
    cir.return loc(#loc59)
  } loc(#loc161)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc176)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc103)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc177)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc107)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc107)
        cir.condition(%3) loc(#loc107)
      } do {
        %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc108)
        %3 = cir.const #cir.int<100> : !s32i loc(#loc109)
        %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc109)
        %5 = cir.const #cir.int<1> : !u64i loc(#loc179)
        %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc180)
        %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc108)
        %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc181)
        cir.store %8, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc182)
        cir.scope {
          %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
          %24 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc117)
          %25 = cir.cast(bitcast, %24 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc117)
          %26 = cir.cmp(eq, %23, %25) : !cir.ptr<!s8i>, !cir.bool loc(#loc184)
          cir.if %26 {
            %27 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc119)
            %28 = cir.const #cir.int<1> : !s32i loc(#loc120)
            %29 = cir.unary(minus, %28) : !s32i, !s32i loc(#loc121)
            cir.call @exit(%29) : (!s32i) -> () extra(#fn_attr) loc(#loc119)
          } loc(#loc185)
        } loc(#loc183)
        %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
        %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc122)
        %11 = cir.const #cir.int<65> : !s32i loc(#loc123)
        %12 = cir.const #cir.int<100> : !s32i loc(#loc124)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc125)
        %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc124)
        %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc124)
        cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc186)
        %16 = cir.const #cir.int<0> : !s32i loc(#loc128)
        %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc128)
        %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
        %19 = cir.const #cir.int<100> : !s32i loc(#loc130)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc131)
        %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc130)
        %22 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %21 : !s32i), !cir.ptr<!s8i> loc(#loc132)
        cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc187)
        cir.break loc(#loc133)
      } loc(#loc178)
    } loc(#loc178)
    cir.scope {
      cir.while {
        %2 = cir.const #cir.int<1> : !s32i loc(#loc136)
        %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc136)
        cir.condition(%3) loc(#loc136)
      } do {
        %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
        cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc138)
        cir.break loc(#loc139)
      } loc(#loc188)
    } loc(#loc188)
    cir.return loc(#loc100)
  } loc(#loc175)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_char_16.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":24:1)
#loc10 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":46:1)
#loc11 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":26:5)
#loc12 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":26:12)
#loc13 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":28:12)
#loc14 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":28:5)
#loc15 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":29:5)
#loc16 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":38:5)
#loc17 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":29:11)
#loc18 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":31:24)
#loc19 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":31:31)
#loc20 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":31:35)
#loc21 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":31:46)
#loc22 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":31:47)
#loc23 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":31:9)
#loc24 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":32:9)
#loc25 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":32:37)
#loc26 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":32:13)
#loc27 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":32:21)
#loc28 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":32:27)
#loc29 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":32:28)
#loc30 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":32:34)
#loc31 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":32:33)
#loc32 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":33:16)
#loc33 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":33:22)
#loc34 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":33:27)
#loc35 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":33:31)
#loc36 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":33:9)
#loc37 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":33:32)
#loc38 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":34:23)
#loc39 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":34:9)
#loc40 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":34:14)
#loc41 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":34:18)
#loc42 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":34:19)
#loc43 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":36:9)
#loc44 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":36:14)
#loc45 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":37:9)
#loc46 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":39:5)
#loc47 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":45:5)
#loc48 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":39:11)
#loc49 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":42:19)
#loc50 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":42:9)
#loc51 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":44:9)
#loc52 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":102:1)
#loc53 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":106:1)
#loc54 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":104:5)
#loc55 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":104:13)
#loc56 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":105:5)
#loc57 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":105:13)
#loc58 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":53:1)
#loc59 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":76:1)
#loc60 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":55:5)
#loc61 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":55:12)
#loc62 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":57:12)
#loc63 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":57:5)
#loc64 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":58:5)
#loc65 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":67:5)
#loc66 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":58:11)
#loc67 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":60:24)
#loc68 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":60:31)
#loc69 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":60:35)
#loc70 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":60:46)
#loc71 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":60:47)
#loc72 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":60:9)
#loc73 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":61:9)
#loc74 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":61:37)
#loc75 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":61:13)
#loc76 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":61:21)
#loc77 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":61:27)
#loc78 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":61:28)
#loc79 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":61:34)
#loc80 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":61:33)
#loc81 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":62:16)
#loc82 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":62:22)
#loc83 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":62:27)
#loc84 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":62:31)
#loc85 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":62:9)
#loc86 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":62:32)
#loc87 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":63:23)
#loc88 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":63:9)
#loc89 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":63:14)
#loc90 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":63:18)
#loc91 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":63:19)
#loc92 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":65:9)
#loc93 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":65:14)
#loc94 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":66:9)
#loc95 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":68:5)
#loc96 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":75:5)
#loc97 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":68:11)
#loc98 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":74:9)
#loc99 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":79:1)
#loc100 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":100:1)
#loc101 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":81:5)
#loc102 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":81:12)
#loc103 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":83:12)
#loc104 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":83:5)
#loc105 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":84:5)
#loc106 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":92:5)
#loc107 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":84:11)
#loc108 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":86:24)
#loc109 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":86:31)
#loc110 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":86:35)
#loc111 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":86:46)
#loc112 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":86:47)
#loc113 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":86:9)
#loc114 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":87:9)
#loc115 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":87:37)
#loc116 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":87:13)
#loc117 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":87:21)
#loc118 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":87:27)
#loc119 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":87:28)
#loc120 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":87:34)
#loc121 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":87:33)
#loc122 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":88:16)
#loc123 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":88:22)
#loc124 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":88:27)
#loc125 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":88:31)
#loc126 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":88:9)
#loc127 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":88:32)
#loc128 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":89:23)
#loc129 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":89:9)
#loc130 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":89:14)
#loc131 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":89:18)
#loc132 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":89:19)
#loc133 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":91:9)
#loc134 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":93:5)
#loc135 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":99:5)
#loc136 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":93:11)
#loc137 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":96:19)
#loc138 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":96:9)
#loc139 = loc("CWE416_Use_After_Free__malloc_free_char_16.c":98:9)
#loc140 = loc(fused[#loc1, #loc2])
#loc141 = loc(fused[#loc3, #loc4])
#loc142 = loc(fused[#loc5, #loc6])
#loc143 = loc(fused[#loc7, #loc8])
#loc144 = loc(fused[#loc9, #loc10])
#loc145 = loc(fused[#loc11, #loc12])
#loc146 = loc(fused[#loc14, #loc13])
#loc147 = loc(fused[#loc15, #loc16])
#loc148 = loc(fused[#loc20, #loc21])
#loc149 = loc(fused[#loc19, #loc21])
#loc150 = loc(fused[#loc18, #loc22])
#loc151 = loc(fused[#loc23, #loc22])
#loc152 = loc(fused[#loc24, #loc25])
#loc153 = loc(fused[#loc26, #loc27])
#loc154 = loc(fused[#loc28, #loc25])
#loc155 = loc(fused[#loc36, #loc37])
#loc156 = loc(fused[#loc39, #loc38])
#loc157 = loc(fused[#loc46, #loc47])
#loc158 = loc(fused[#loc52, #loc53])
#loc159 = loc(fused[#loc54, #loc55])
#loc160 = loc(fused[#loc56, #loc57])
#loc161 = loc(fused[#loc58, #loc59])
#loc162 = loc(fused[#loc60, #loc61])
#loc163 = loc(fused[#loc63, #loc62])
#loc164 = loc(fused[#loc64, #loc65])
#loc165 = loc(fused[#loc69, #loc70])
#loc166 = loc(fused[#loc68, #loc70])
#loc167 = loc(fused[#loc67, #loc71])
#loc168 = loc(fused[#loc72, #loc71])
#loc169 = loc(fused[#loc73, #loc74])
#loc170 = loc(fused[#loc75, #loc76])
#loc171 = loc(fused[#loc77, #loc74])
#loc172 = loc(fused[#loc85, #loc86])
#loc173 = loc(fused[#loc88, #loc87])
#loc174 = loc(fused[#loc95, #loc96])
#loc175 = loc(fused[#loc99, #loc100])
#loc176 = loc(fused[#loc101, #loc102])
#loc177 = loc(fused[#loc104, #loc103])
#loc178 = loc(fused[#loc105, #loc106])
#loc179 = loc(fused[#loc110, #loc111])
#loc180 = loc(fused[#loc109, #loc111])
#loc181 = loc(fused[#loc108, #loc112])
#loc182 = loc(fused[#loc113, #loc112])
#loc183 = loc(fused[#loc114, #loc115])
#loc184 = loc(fused[#loc116, #loc117])
#loc185 = loc(fused[#loc118, #loc115])
#loc186 = loc(fused[#loc126, #loc127])
#loc187 = loc(fused[#loc129, #loc128])
#loc188 = loc(fused[#loc134, #loc135])
