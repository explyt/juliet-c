!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc1 = loc("../../../testcasesupport/std_testcase.h":61:7)
#loc48 = loc("../../../testcasesupport/std_testcase.h":68:7)
!ty_OneIntClass = !cir.struct<class "OneIntClass" {!s32i} #cir.record.decl.ast>
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func linkonce_odr  @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc1)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc1)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc1)
    cir.return loc(#loc1)
  } loc(#loc1)
  cir.func private  @printIntLine(!s32i) loc(#loc136)
  cir.func  @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_173badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc138)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc139)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc140)
    %3 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc141)
    %4 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc142)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc17)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc144)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc19)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc20)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc145)
        cir.condition(%8) loc(#loc145)
      } body {
        %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc21)
        cir.store %6, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
        cir.yield loc(#loc16)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc23)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc24)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc147)
        cir.yield loc(#loc143)
      } loc(#loc143)
    } loc(#loc143)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc27)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc149)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc29)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc30)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc150)
        cir.condition(%8) loc(#loc150)
      } body {
        cir.scope {
          %6 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc152)
          %7 = cir.const #cir.int<8> : !u64i loc(#loc153)
          %8 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc36)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc153)
          cir.call @_ZN12TwoIntsClassC2Ev(%10) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc34)
          cir.store %10, %6 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc152)
          %11 = cir.const #cir.int<5> : !s32i loc(#loc37)
          %12 = cir.load %6 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc38)
          %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc39)
          cir.store %11, %13 : !s32i, !cir.ptr<!s32i> loc(#loc154)
          %14 = cir.const #cir.int<10> : !s32i loc(#loc40)
          %15 = cir.load %6 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc41)
          %16 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc42)
          cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc155)
          %17 = cir.load %6 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc43)
          %18 = cir.get_member %17[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc39)
          %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc44)
          cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc45)
        } loc(#loc151)
        cir.yield loc(#loc26)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc46)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc47)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc156)
        cir.yield loc(#loc148)
      } loc(#loc148)
    } loc(#loc148)
    cir.return loc(#loc5)
  } loc(#loc137)
  cir.func linkonce_odr  @_ZN11OneIntClassC2Ev(%arg0: !cir.ptr<!ty_OneIntClass> loc("../../../testcasesupport/std_testcase.h":68:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["this", init] {alignment = 8 : i64} loc(#loc48)
    cir.store %arg0, %0 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc48)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc48)
    cir.return loc(#loc48)
  } loc(#loc48)
  cir.func internal private  @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc158)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["k"] {alignment = 4 : i64} loc(#loc159)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc160)
    %3 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc161)
    %4 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc162)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc62)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc164)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc64)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc65)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc165)
        cir.condition(%8) loc(#loc165)
      } body {
        %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc66)
        cir.store %6, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc166)
        cir.yield loc(#loc61)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc68)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc69)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc167)
        cir.yield loc(#loc163)
      } loc(#loc163)
    } loc(#loc163)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc72)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc169)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc74)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc75)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc170)
        cir.condition(%8) loc(#loc170)
      } body {
        cir.scope {
          %6 = cir.alloca !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>>, ["classOne", init] {alignment = 8 : i64} loc(#loc172)
          %7 = cir.const #cir.int<4> : !u64i loc(#loc173)
          %8 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc81)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty_OneIntClass> loc(#loc173)
          cir.call @_ZN11OneIntClassC2Ev(%10) : (!cir.ptr<!ty_OneIntClass>) -> () extra(#fn_attr2) loc(#loc79)
          cir.store %10, %6 : !cir.ptr<!ty_OneIntClass>, !cir.ptr<!cir.ptr<!ty_OneIntClass>> loc(#loc172)
          %11 = cir.const #cir.int<5> : !s32i loc(#loc82)
          %12 = cir.load %6 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc83)
          %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc84)
          cir.store %11, %13 : !s32i, !cir.ptr<!s32i> loc(#loc174)
          %14 = cir.load %6 : !cir.ptr<!cir.ptr<!ty_OneIntClass>>, !cir.ptr<!ty_OneIntClass> loc(#loc85)
          %15 = cir.get_member %14[0] {name = "intOne"} : !cir.ptr<!ty_OneIntClass> -> !cir.ptr<!s32i> loc(#loc84)
          %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc86)
          cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc87)
        } loc(#loc171)
        cir.yield loc(#loc71)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc88)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc89)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc175)
        cir.yield loc(#loc168)
      } loc(#loc168)
    } loc(#loc168)
    cir.return loc(#loc50)
  } loc(#loc157)
  cir.func internal private  @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["h"] {alignment = 4 : i64} loc(#loc177)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["j"] {alignment = 4 : i64} loc(#loc178)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc179)
    %3 = cir.alloca !cir.array<!s8i x 4>, !cir.ptr<!cir.array<!s8i x 4>>, ["dataBadBuffer"] {alignment = 1 : i64} loc(#loc180)
    %4 = cir.alloca !cir.array<!s8i x 8>, !cir.ptr<!cir.array<!s8i x 8>>, ["dataGoodBuffer"] {alignment = 1 : i64} loc(#loc181)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc103)
      cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc183)
      cir.for : cond {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc105)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc106)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc184)
        cir.condition(%8) loc(#loc184)
      } body {
        %6 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 8>>), !cir.ptr<!s8i> loc(#loc107)
        cir.store %6, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc185)
        cir.yield loc(#loc102)
      } step {
        %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc109)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc110)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc186)
        cir.yield loc(#loc182)
      } loc(#loc182)
    } loc(#loc182)
    cir.scope {
      %5 = cir.const #cir.int<0> : !s32i loc(#loc113)
      cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc188)
      cir.for : cond {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc115)
        %7 = cir.const #cir.int<1> : !s32i loc(#loc116)
        %8 = cir.cmp(lt, %6, %7) : !s32i, !cir.bool loc(#loc189)
        cir.condition(%8) loc(#loc189)
      } body {
        cir.scope {
          %6 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["classTwo", init] {alignment = 8 : i64} loc(#loc191)
          %7 = cir.const #cir.int<8> : !u64i loc(#loc192)
          %8 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc122)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc192)
          cir.call @_ZN12TwoIntsClassC2Ev(%10) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc120)
          cir.store %10, %6 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc191)
          %11 = cir.const #cir.int<5> : !s32i loc(#loc123)
          %12 = cir.load %6 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc124)
          %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc39)
          cir.store %11, %13 : !s32i, !cir.ptr<!s32i> loc(#loc193)
          %14 = cir.const #cir.int<10> : !s32i loc(#loc125)
          %15 = cir.load %6 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc126)
          %16 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc42)
          cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc194)
          %17 = cir.load %6 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc127)
          %18 = cir.get_member %17[0] {name = "intOne"} : !cir.ptr<!ty_TwoIntsClass> -> !cir.ptr<!s32i> loc(#loc39)
          %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc128)
          cir.call @printIntLine(%19) : (!s32i) -> () loc(#loc129)
        } loc(#loc190)
        cir.yield loc(#loc112)
      } step {
        %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc130)
        %7 = cir.unary(inc, %6) : !s32i, !s32i loc(#loc131)
        cir.store %7, %1 : !s32i, !cir.ptr<!s32i> loc(#loc195)
        cir.yield loc(#loc187)
      } loc(#loc187)
    } loc(#loc187)
    cir.return loc(#loc91)
  } loc(#loc176)
  cir.func  @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_174goodEv() extra(#fn_attr1) {
    cir.call @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17L7goodB2GEv() : () -> () loc(#loc134)
    cir.call @_ZN60CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17L7goodG2BEv() : () -> () loc(#loc135)
    cir.return loc(#loc133)
  } loc(#loc196)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s08/CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":0:0)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":24:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":51:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":26:5)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":26:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":26:11)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":27:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":27:12)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":28:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":28:43)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":29:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":29:45)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":30:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":34:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":30:13)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":30:9)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":30:16)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":30:20)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":33:16)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":33:9)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":30:24)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":30:23)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":35:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":50:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":35:13)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":35:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":35:16)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":35:20)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":37:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":49:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":43:13)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":43:49)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":43:39)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":43:43)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":45:32)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":45:13)
#loc39 = loc("../../../testcasesupport/std_testcase.h":64:13)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":46:32)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":46:13)
#loc42 = loc("../../../testcasesupport/std_testcase.h":65:13)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":47:26)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":47:36)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":47:13)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":35:24)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":35:23)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":58:1)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":83:1)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":60:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":60:9)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":60:11)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":61:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":61:12)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":62:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":62:43)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":63:5)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":63:45)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":64:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":68:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":64:13)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":64:9)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":64:16)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":64:20)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":67:16)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":67:9)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":64:24)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":64:23)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":69:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":82:5)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":69:13)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":69:9)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":69:16)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":69:20)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":71:9)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":81:9)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":77:13)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":77:48)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":77:38)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":77:42)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":79:32)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":79:13)
#loc84 = loc("../../../testcasesupport/std_testcase.h":71:13)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":80:26)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":80:36)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":80:13)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":69:24)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":69:23)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":86:1)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":113:1)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":88:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":88:9)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":88:11)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":89:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":89:12)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":90:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":90:43)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":91:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":91:45)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":92:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":96:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":92:13)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":92:9)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":92:16)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":92:20)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":95:16)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":95:9)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":92:24)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":92:23)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":97:5)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":112:5)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":97:13)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":97:9)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":97:16)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":97:20)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":99:9)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":111:9)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":105:13)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":105:49)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":105:39)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":105:43)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":107:32)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":107:13)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":108:32)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":108:13)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":109:26)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":109:36)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":109:13)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":97:24)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":97:23)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":115:1)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":119:1)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":117:5)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__placement_new_declare_17.cpp":118:5)
#loc136 = loc(fused[#loc2, #loc3])
#loc137 = loc(fused[#loc4, #loc5])
#loc138 = loc(fused[#loc6, #loc7])
#loc139 = loc(fused[#loc6, #loc8])
#loc140 = loc(fused[#loc9, #loc10])
#loc141 = loc(fused[#loc11, #loc12])
#loc142 = loc(fused[#loc13, #loc14])
#loc143 = loc(fused[#loc15, #loc16])
#loc144 = loc(fused[#loc18, #loc17])
#loc145 = loc(fused[#loc19, #loc20])
#loc146 = loc(fused[#loc22, #loc21])
#loc147 = loc(fused[#loc24, #loc23])
#loc148 = loc(fused[#loc25, #loc26])
#loc149 = loc(fused[#loc28, #loc27])
#loc150 = loc(fused[#loc29, #loc30])
#loc151 = loc(fused[#loc31, #loc32])
#loc152 = loc(fused[#loc33, #loc34])
#loc153 = loc(fused[#loc35, #loc34])
#loc154 = loc(fused[#loc38, #loc37])
#loc155 = loc(fused[#loc41, #loc40])
#loc156 = loc(fused[#loc47, #loc46])
#loc157 = loc(fused[#loc49, #loc50])
#loc158 = loc(fused[#loc51, #loc52])
#loc159 = loc(fused[#loc51, #loc53])
#loc160 = loc(fused[#loc54, #loc55])
#loc161 = loc(fused[#loc56, #loc57])
#loc162 = loc(fused[#loc58, #loc59])
#loc163 = loc(fused[#loc60, #loc61])
#loc164 = loc(fused[#loc63, #loc62])
#loc165 = loc(fused[#loc64, #loc65])
#loc166 = loc(fused[#loc67, #loc66])
#loc167 = loc(fused[#loc69, #loc68])
#loc168 = loc(fused[#loc70, #loc71])
#loc169 = loc(fused[#loc73, #loc72])
#loc170 = loc(fused[#loc74, #loc75])
#loc171 = loc(fused[#loc76, #loc77])
#loc172 = loc(fused[#loc78, #loc79])
#loc173 = loc(fused[#loc80, #loc79])
#loc174 = loc(fused[#loc83, #loc82])
#loc175 = loc(fused[#loc89, #loc88])
#loc176 = loc(fused[#loc90, #loc91])
#loc177 = loc(fused[#loc92, #loc93])
#loc178 = loc(fused[#loc92, #loc94])
#loc179 = loc(fused[#loc95, #loc96])
#loc180 = loc(fused[#loc97, #loc98])
#loc181 = loc(fused[#loc99, #loc100])
#loc182 = loc(fused[#loc101, #loc102])
#loc183 = loc(fused[#loc104, #loc103])
#loc184 = loc(fused[#loc105, #loc106])
#loc185 = loc(fused[#loc108, #loc107])
#loc186 = loc(fused[#loc110, #loc109])
#loc187 = loc(fused[#loc111, #loc112])
#loc188 = loc(fused[#loc114, #loc113])
#loc189 = loc(fused[#loc115, #loc116])
#loc190 = loc(fused[#loc117, #loc118])
#loc191 = loc(fused[#loc119, #loc120])
#loc192 = loc(fused[#loc121, #loc120])
#loc193 = loc(fused[#loc124, #loc123])
#loc194 = loc(fused[#loc126, #loc125])
#loc195 = loc(fused[#loc131, #loc130])
#loc196 = loc(fused[#loc132, #loc133])
