!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":32:25)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":32:32)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":141:10)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":141:14)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":141:20)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":141:32)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":67:30)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":67:37)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":99:30)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":99:37)
#loc197 = loc(fused[#loc5, #loc6])
#loc220 = loc(fused[#loc73, #loc74])
#loc221 = loc(fused[#loc75, #loc76])
#loc227 = loc(fused[#loc96, #loc97])
#loc243 = loc(fused[#loc149, #loc150])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s07/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc195)
  cir.func internal private @badSource(%arg0: !cir.ptr<!s8i> loc(fused[#loc5, #loc6])) -> !cir.ptr<!s8i> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc197)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc4)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc7)
    cir.br ^bb1 loc(#loc198)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc195)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc10)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc10)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc199)
  ^bb2:  // pred: ^bb1
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc12)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc12)
    %7 = cir.const #cir.int<65> : !s32i loc(#loc13)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc14)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc15)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc14)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc14)
    cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc200)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc18)
    %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc18)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc20)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc21)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc20)
    %18 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc22)
    cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc201)
    cir.br ^bb3 loc(#loc9)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc9)
  ^bb4:  // pred: ^bb3
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
    cir.store %19, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc202)
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc202)
    cir.return %20 : !cir.ptr<!s8i> loc(#loc202)
  } loc(#loc196)
  cir.func private @snprintf(!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr1) loc(#loc203)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc204)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%s\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc29)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc205)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc207)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc208)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc209)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc40)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc210)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc42)
    %5 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc195)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc211)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    %7 = cir.call @badSource(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc45)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc212)
    cir.br ^bb1 loc(#loc213)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc207)
    cir.store %8, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc207)
    %9 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc50)
    %10 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc51)
    %11 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc52)
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
    %13 = cir.call @strlen(%12) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc52)
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc29)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc29)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
    %17 = cir.call @snprintf(%10, %13, %15, %16) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc50)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    cir.br ^bb2 loc(#loc49)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc33)
  } loc(#loc206)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc215)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc59)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc216)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc61)
    cir.return loc(#loc58)
  } loc(#loc214)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc217)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc218)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc67)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc68)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc69)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc70)
  cir.func @main(%arg0: !s32i loc(fused[#loc73, #loc74]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc75, #loc76])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc220)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc221)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc72)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc77)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc77)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc78)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc79)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc79)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc80)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc67)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21_good : !cir.ptr<!cir.func<!void ()>> loc(#loc222)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21_good() : () -> () loc(#loc82)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc68)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc68)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc69)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc223)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21_bad() : () -> () loc(#loc86)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc70)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc89)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc224)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc224)
    cir.return %17 : !s32i loc(#loc224)
  } loc(#loc219)
  cir.global "private" internal dsolocal @goodG2B1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc225)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc93)
  cir.func internal private @goodG2B1Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc96, #loc97])) -> !cir.ptr<!s8i> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc227)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc95)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc98)
    cir.br ^bb1 loc(#loc228)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc225)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc101)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc229)
  ^bb2:  // pred: ^bb1
    %5 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc93)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc93)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc105)
    cir.br ^bb4 loc(#loc103)
  ^bb3:  // pred: ^bb1
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc106)
    %9 = cir.const #cir.int<65> : !s32i loc(#loc107)
    %10 = cir.const #cir.int<50> : !s32i loc(#loc108)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc108)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc108)
    cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc230)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc112)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
    %17 = cir.const #cir.int<50> : !s32i loc(#loc114)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc115)
    %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc114)
    %20 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc116)
    cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc231)
    cir.br ^bb4 loc(#loc100)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc100)
  ^bb5:  // pred: ^bb4
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
    cir.store %21, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc232)
    %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc232)
    cir.return %22 : !cir.ptr<!s8i> loc(#loc232)
  } loc(#loc226)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc234)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc235)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc236)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc127)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc237)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc129)
    %5 = cir.get_global @goodG2B1Static : !cir.ptr<!s32i> loc(#loc225)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc238)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
    %7 = cir.call @goodG2B1Source(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc132)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc239)
    cir.br ^bb1 loc(#loc240)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc234)
    cir.store %8, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc234)
    %9 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc137)
    %10 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc138)
    %11 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc139)
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
    %13 = cir.call @strlen(%12) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc139)
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc141)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc141)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc142)
    %17 = cir.call @snprintf(%10, %13, %15, %16) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc137)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc144)
    cir.br ^bb2 loc(#loc136)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc120)
  } loc(#loc233)
  cir.global "private" internal dsolocal @goodG2B2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc241)
  cir.func internal private @goodG2B2Source(%arg0: !cir.ptr<!s8i> loc(fused[#loc149, #loc150])) -> !cir.ptr<!s8i> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc243)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["__retval"] {alignment = 8 : i64} loc(#loc148)
    cir.store %arg0, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
    cir.br ^bb1 loc(#loc244)
  ^bb1:  // pred: ^bb0
    %2 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc241)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc154)
    %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc154)
    cir.brcond %4 ^bb2, ^bb3 loc(#loc245)
  ^bb2:  // pred: ^bb1
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc156)
    %7 = cir.const #cir.int<65> : !s32i loc(#loc157)
    %8 = cir.const #cir.int<50> : !s32i loc(#loc158)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc159)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc158)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc158)
    cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc246)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc162)
    %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc162)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
    %15 = cir.const #cir.int<50> : !s32i loc(#loc164)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc165)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc164)
    %18 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc166)
    cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc247)
    cir.br ^bb3 loc(#loc153)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc153)
  ^bb4:  // pred: ^bb3
    %19 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc167)
    cir.store %19, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc248)
    %20 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc248)
    cir.return %20 : !cir.ptr<!s8i> loc(#loc248)
  } loc(#loc242)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc250)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc251)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc252)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc177)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc253)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc179)
    %5 = cir.get_global @goodG2B2Static : !cir.ptr<!s32i> loc(#loc241)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc254)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc181)
    %7 = cir.call @goodG2B2Source(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> loc(#loc182)
    cir.store %7, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc255)
    cir.br ^bb1 loc(#loc256)
  ^bb1:  // pred: ^bb0
    %8 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc250)
    cir.store %8, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc250)
    %9 = cir.get_global @snprintf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, ...)>> loc(#loc187)
    %10 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc188)
    %11 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc189)
    %12 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc190)
    %13 = cir.call @strlen(%12) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc189)
    %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc191)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc191)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc192)
    %17 = cir.call @snprintf(%10, %13, %15, %16) : (!cir.ptr<!s8i>, !u64i, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc187)
    %18 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc193)
    cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc194)
    cir.br ^bb2 loc(#loc186)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc170)
  } loc(#loc249)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s07/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":30:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":30:24)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":32:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":41:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":33:1)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":34:5)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":39:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":34:8)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":35:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":37:16)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":37:22)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":37:27)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":37:31)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":37:9)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":37:32)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":38:23)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":38:9)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":38:14)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":38:18)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":38:19)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":40:12)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":40:5)
#loc25 = loc("/usr/include/stdio.h":385:1)
#loc26 = loc("/usr/include/stdio.h":387:62)
#loc27 = loc("/usr/include/string.h":407:1)
#loc28 = loc("/usr/include/string.h":408:33)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":53:38)
#loc30 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc31 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":43:1)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":56:1)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":51:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":51:25)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":45:5)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":45:12)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":46:5)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":46:24)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":47:12)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":47:5)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":48:17)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":48:5)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":49:22)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":49:12)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":49:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":49:26)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":50:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":55:5)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":53:9)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":53:18)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":53:24)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":53:31)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":53:44)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":54:19)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":54:9)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":125:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":129:1)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":127:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":127:14)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":128:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":128:14)
#loc63 = loc("/usr/include/stdlib.h":575:1)
#loc64 = loc("/usr/include/stdlib.h":575:41)
#loc65 = loc("/usr/include/time.h":76:1)
#loc66 = loc("/usr/include/time.h":76:38)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":146:15)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":148:15)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":151:15)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":153:15)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":141:1)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":156:1)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":142:1)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":144:27)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":144:22)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":144:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":146:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":147:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":147:78)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":148:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":151:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":152:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":152:77)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":153:5)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":155:12)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":155:5)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":63:1)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":63:29)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":72:19)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":67:1)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":81:1)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":68:1)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":69:5)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":79:5)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":69:8)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":70:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":73:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":75:5)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":72:9)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":77:16)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":77:22)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":77:27)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":77:30)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":77:9)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":77:31)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":78:22)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":78:9)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":78:14)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":78:17)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":78:18)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":80:12)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":80:5)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":83:1)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":96:1)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":91:9)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":91:25)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":85:5)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":85:12)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":86:5)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":86:24)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":87:12)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":87:5)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":88:22)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":88:5)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":89:27)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":89:12)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":89:5)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":89:31)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":90:5)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":95:5)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":93:9)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":93:18)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":93:24)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":93:31)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":93:38)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":93:44)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":94:19)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":94:9)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":64:1)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":64:29)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":99:1)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":108:1)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":100:1)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":101:5)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":106:5)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":101:8)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":102:5)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":104:16)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":104:22)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":104:27)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":104:30)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":104:9)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":104:31)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":105:22)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":105:9)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":105:14)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":105:17)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":105:18)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":107:12)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":107:5)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":110:1)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":123:1)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":118:9)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":118:25)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":112:5)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":112:12)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":113:5)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":113:24)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":114:12)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":114:5)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":115:22)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":115:5)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":116:27)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":116:12)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":116:5)
#loc184 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":116:31)
#loc185 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":117:5)
#loc186 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":122:5)
#loc187 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":120:9)
#loc188 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":120:18)
#loc189 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":120:24)
#loc190 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":120:31)
#loc191 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":120:38)
#loc192 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":120:44)
#loc193 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":121:19)
#loc194 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_snprintf_21.c":121:9)
#loc195 = loc(fused[#loc1, #loc2])
#loc196 = loc(fused[#loc3, #loc4])
#loc198 = loc(fused[#loc8, #loc9])
#loc199 = loc(fused[#loc11, #loc9])
#loc200 = loc(fused[#loc16, #loc17])
#loc201 = loc(fused[#loc19, #loc18])
#loc202 = loc(fused[#loc24, #loc23])
#loc203 = loc(fused[#loc25, #loc26])
#loc204 = loc(fused[#loc27, #loc28])
#loc205 = loc(fused[#loc30, #loc31])
#loc206 = loc(fused[#loc32, #loc33])
#loc207 = loc(fused[#loc34, #loc35])
#loc208 = loc(fused[#loc36, #loc37])
#loc209 = loc(fused[#loc38, #loc39])
#loc210 = loc(fused[#loc41, #loc40])
#loc211 = loc(fused[#loc43, #loc42])
#loc212 = loc(fused[#loc46, #loc47])
#loc213 = loc(fused[#loc48, #loc49])
#loc214 = loc(fused[#loc57, #loc58])
#loc215 = loc(fused[#loc59, #loc60])
#loc216 = loc(fused[#loc61, #loc62])
#loc217 = loc(fused[#loc63, #loc64])
#loc218 = loc(fused[#loc65, #loc66])
#loc219 = loc(fused[#loc71, #loc72])
#loc222 = loc(fused[#loc82, #loc83])
#loc223 = loc(fused[#loc86, #loc87])
#loc224 = loc(fused[#loc90, #loc89])
#loc225 = loc(fused[#loc91, #loc92])
#loc226 = loc(fused[#loc94, #loc95])
#loc228 = loc(fused[#loc99, #loc100])
#loc229 = loc(fused[#loc102, #loc103, #loc104, #loc100])
#loc230 = loc(fused[#loc110, #loc111])
#loc231 = loc(fused[#loc113, #loc112])
#loc232 = loc(fused[#loc118, #loc117])
#loc233 = loc(fused[#loc119, #loc120])
#loc234 = loc(fused[#loc121, #loc122])
#loc235 = loc(fused[#loc123, #loc124])
#loc236 = loc(fused[#loc125, #loc126])
#loc237 = loc(fused[#loc128, #loc127])
#loc238 = loc(fused[#loc130, #loc129])
#loc239 = loc(fused[#loc133, #loc134])
#loc240 = loc(fused[#loc135, #loc136])
#loc241 = loc(fused[#loc145, #loc146])
#loc242 = loc(fused[#loc147, #loc148])
#loc244 = loc(fused[#loc152, #loc153])
#loc245 = loc(fused[#loc155, #loc153])
#loc246 = loc(fused[#loc160, #loc161])
#loc247 = loc(fused[#loc163, #loc162])
#loc248 = loc(fused[#loc168, #loc167])
#loc249 = loc(fused[#loc169, #loc170])
#loc250 = loc(fused[#loc171, #loc172])
#loc251 = loc(fused[#loc173, #loc174])
#loc252 = loc(fused[#loc175, #loc176])
#loc253 = loc(fused[#loc178, #loc177])
#loc254 = loc(fused[#loc180, #loc179])
#loc255 = loc(fused[#loc183, #loc184])
#loc256 = loc(fused[#loc185, #loc186])
