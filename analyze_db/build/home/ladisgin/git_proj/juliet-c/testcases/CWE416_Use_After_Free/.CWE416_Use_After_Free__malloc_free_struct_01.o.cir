!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc155)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc156)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc157)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc158)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_struct_01_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc160)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc161)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc15)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc16)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc16)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc162)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc163)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc15)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc164)
    cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc165)
    cir.scope {
      %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc23)
      %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc24)
      %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc24)
      %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc167)
      cir.if %18 {
        %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc26)
        %20 = cir.const #cir.int<1> : !s32i loc(#loc27)
        %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc28)
        cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc26)
      } loc(#loc168)
    } loc(#loc166)
    cir.scope {
      %15 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc170)
      cir.scope {
        %16 = cir.const #cir.int<0> : !s32i loc(#loc35)
        %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc35)
        cir.store %17, %15 : !u64i, !cir.ptr<!u64i> loc(#loc172)
        cir.for : cond {
          %18 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc37)
          %19 = cir.const #cir.int<100> : !s32i loc(#loc38)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc38)
          %21 = cir.cmp(lt, %18, %20) : !u64i, !cir.bool loc(#loc173)
          cir.condition(%21) loc(#loc39)
        } body {
          cir.scope {
            %18 = cir.const #cir.int<1> : !s32i loc(#loc41)
            %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc42)
            %20 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc43)
            %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc44)
            %22 = cir.get_member %21[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc45)
            cir.store %18, %22 : !s32i, !cir.ptr<!s32i> loc(#loc175)
            %23 = cir.const #cir.int<2> : !s32i loc(#loc46)
            %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc47)
            %25 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc48)
            %26 = cir.ptr_stride(%24 : !cir.ptr<!ty__twoIntsStruct>, %25 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc49)
            %27 = cir.get_member %26[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc50)
            cir.store %23, %27 : !s32i, !cir.ptr<!s32i> loc(#loc176)
          } loc(#loc174)
          cir.yield loc(#loc34)
        } step {
          %18 = cir.load %15 : !cir.ptr<!u64i>, !u64i loc(#loc51)
          %19 = cir.unary(inc, %18) : !u64i, !u64i loc(#loc52)
          cir.store %19, %15 : !u64i, !cir.ptr<!u64i> loc(#loc177)
          cir.yield loc(#loc171)
        } loc(#loc171)
      } loc(#loc171)
    } loc(#loc169)
    %9 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc53)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc54)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc54)
    cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc53)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc55)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc56)
    %14 = cir.ptr_stride(%12 : !cir.ptr<!ty__twoIntsStruct>, %13 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc57)
    cir.call @printStructLine(%14) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc58)
    cir.return loc(#loc10)
  } loc(#loc159)
  cir.func no_proto @CWE416_Use_After_Free__malloc_free_struct_01_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc179)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc61)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc180)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc63)
    cir.return loc(#loc60)
  } loc(#loc178)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc182)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc69)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc183)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc71)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc72)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc72)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc184)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc185)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc71)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc186)
    cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc187)
    cir.scope {
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc79)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc80)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc80)
      %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc189)
      cir.if %15 {
        %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc82)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc83)
        %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc84)
        cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc82)
      } loc(#loc190)
    } loc(#loc188)
    cir.scope {
      %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc192)
      cir.scope {
        %13 = cir.const #cir.int<0> : !s32i loc(#loc91)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc91)
        cir.store %14, %12 : !u64i, !cir.ptr<!u64i> loc(#loc194)
        cir.for : cond {
          %15 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc93)
          %16 = cir.const #cir.int<100> : !s32i loc(#loc94)
          %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc94)
          %18 = cir.cmp(lt, %15, %17) : !u64i, !cir.bool loc(#loc195)
          cir.condition(%18) loc(#loc95)
        } body {
          cir.scope {
            %15 = cir.const #cir.int<1> : !s32i loc(#loc97)
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc98)
            %17 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc99)
            %18 = cir.ptr_stride(%16 : !cir.ptr<!ty__twoIntsStruct>, %17 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc100)
            %19 = cir.get_member %18[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc45)
            cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc197)
            %20 = cir.const #cir.int<2> : !s32i loc(#loc101)
            %21 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc102)
            %22 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc103)
            %23 = cir.ptr_stride(%21 : !cir.ptr<!ty__twoIntsStruct>, %22 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc104)
            %24 = cir.get_member %23[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc50)
            cir.store %20, %24 : !s32i, !cir.ptr<!s32i> loc(#loc198)
          } loc(#loc196)
          cir.yield loc(#loc90)
        } step {
          %15 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc105)
          %16 = cir.unary(inc, %15) : !u64i, !u64i loc(#loc106)
          cir.store %16, %12 : !u64i, !cir.ptr<!u64i> loc(#loc199)
          cir.yield loc(#loc193)
        } loc(#loc193)
      } loc(#loc193)
    } loc(#loc191)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc107)
    %10 = cir.const #cir.int<0> : !s32i loc(#loc108)
    %11 = cir.ptr_stride(%9 : !cir.ptr<!ty__twoIntsStruct>, %10 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc109)
    cir.call @printStructLine(%11) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc110)
    cir.return loc(#loc66)
  } loc(#loc181)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc201)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc115)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc202)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc117)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc118)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc118)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc203)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc204)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc117)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc205)
    cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc206)
    cir.scope {
      %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc125)
      %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc126)
      %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc126)
      %15 = cir.cmp(eq, %12, %14) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc208)
      cir.if %15 {
        %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc128)
        %17 = cir.const #cir.int<1> : !s32i loc(#loc129)
        %18 = cir.unary(minus, %17) : !s32i, !s32i loc(#loc130)
        cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc128)
      } loc(#loc209)
    } loc(#loc207)
    cir.scope {
      %12 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc211)
      cir.scope {
        %13 = cir.const #cir.int<0> : !s32i loc(#loc137)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc137)
        cir.store %14, %12 : !u64i, !cir.ptr<!u64i> loc(#loc213)
        cir.for : cond {
          %15 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc139)
          %16 = cir.const #cir.int<100> : !s32i loc(#loc140)
          %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc140)
          %18 = cir.cmp(lt, %15, %17) : !u64i, !cir.bool loc(#loc214)
          cir.condition(%18) loc(#loc141)
        } body {
          cir.scope {
            %15 = cir.const #cir.int<1> : !s32i loc(#loc143)
            %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc144)
            %17 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc145)
            %18 = cir.ptr_stride(%16 : !cir.ptr<!ty__twoIntsStruct>, %17 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc146)
            %19 = cir.get_member %18[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc45)
            cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc216)
            %20 = cir.const #cir.int<2> : !s32i loc(#loc147)
            %21 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc148)
            %22 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc149)
            %23 = cir.ptr_stride(%21 : !cir.ptr<!ty__twoIntsStruct>, %22 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc150)
            %24 = cir.get_member %23[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc50)
            cir.store %20, %24 : !s32i, !cir.ptr<!s32i> loc(#loc217)
          } loc(#loc215)
          cir.yield loc(#loc136)
        } step {
          %15 = cir.load %12 : !cir.ptr<!u64i>, !u64i loc(#loc151)
          %16 = cir.unary(inc, %15) : !u64i, !u64i loc(#loc152)
          cir.store %16, %12 : !u64i, !cir.ptr<!u64i> loc(#loc218)
          cir.yield loc(#loc212)
        } loc(#loc212)
      } loc(#loc212)
    } loc(#loc210)
    %9 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc153)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc154)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc154)
    cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc153)
    cir.return loc(#loc112)
  } loc(#loc200)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE416_Use_After_Free/CWE416_Use_After_Free__malloc_free_struct_01.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":40:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":40:63)
#loc9 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":24:1)
#loc10 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":44:1)
#loc11 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":26:5)
#loc12 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":26:21)
#loc13 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":28:12)
#loc14 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":28:5)
#loc15 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":29:29)
#loc16 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":29:36)
#loc17 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":29:40)
#loc18 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":29:60)
#loc19 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":29:61)
#loc20 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":29:5)
#loc21 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":30:5)
#loc22 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":30:33)
#loc23 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":30:9)
#loc24 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":30:17)
#loc25 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":30:23)
#loc26 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":30:24)
#loc27 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":30:30)
#loc28 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":30:29)
#loc29 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":31:5)
#loc30 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":38:5)
#loc31 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":32:9)
#loc32 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":32:16)
#loc33 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":33:9)
#loc34 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":37:9)
#loc35 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":33:17)
#loc36 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":33:13)
#loc37 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":33:20)
#loc38 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":33:24)
#loc39 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":33:22)
#loc40 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":34:9)
#loc41 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":35:30)
#loc42 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":35:13)
#loc43 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":35:18)
#loc44 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":35:19)
#loc45 = loc("../../testcasesupport/std_testcase.h":98:9)
#loc46 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":36:30)
#loc47 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":36:13)
#loc48 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":36:18)
#loc49 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":36:19)
#loc50 = loc("../../testcasesupport/std_testcase.h":99:9)
#loc51 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":33:30)
#loc52 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":33:29)
#loc53 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":40:5)
#loc54 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":40:10)
#loc55 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":42:22)
#loc56 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":42:27)
#loc57 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":42:28)
#loc58 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":42:5)
#loc59 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":96:1)
#loc60 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":100:1)
#loc61 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":98:5)
#loc62 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":98:13)
#loc63 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":99:5)
#loc64 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":99:13)
#loc65 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":51:1)
#loc66 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":70:1)
#loc67 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":53:5)
#loc68 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":53:21)
#loc69 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":55:12)
#loc70 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":55:5)
#loc71 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":56:29)
#loc72 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":56:36)
#loc73 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":56:40)
#loc74 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":56:60)
#loc75 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":56:61)
#loc76 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":56:5)
#loc77 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":57:5)
#loc78 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":57:33)
#loc79 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":57:9)
#loc80 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":57:17)
#loc81 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":57:23)
#loc82 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":57:24)
#loc83 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":57:30)
#loc84 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":57:29)
#loc85 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":58:5)
#loc86 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":65:5)
#loc87 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":59:9)
#loc88 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":59:16)
#loc89 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":60:9)
#loc90 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":64:9)
#loc91 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":60:17)
#loc92 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":60:13)
#loc93 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":60:20)
#loc94 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":60:24)
#loc95 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":60:22)
#loc96 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":61:9)
#loc97 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":62:30)
#loc98 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":62:13)
#loc99 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":62:18)
#loc100 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":62:19)
#loc101 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":63:30)
#loc102 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":63:13)
#loc103 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":63:18)
#loc104 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":63:19)
#loc105 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":60:30)
#loc106 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":60:29)
#loc107 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":68:22)
#loc108 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":68:27)
#loc109 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":68:28)
#loc110 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":68:5)
#loc111 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":73:1)
#loc112 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":94:1)
#loc113 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":75:5)
#loc114 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":75:21)
#loc115 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":77:12)
#loc116 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":77:5)
#loc117 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":78:29)
#loc118 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":78:36)
#loc119 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":78:40)
#loc120 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":78:60)
#loc121 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":78:61)
#loc122 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":78:5)
#loc123 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":79:5)
#loc124 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":79:33)
#loc125 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":79:9)
#loc126 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":79:17)
#loc127 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":79:23)
#loc128 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":79:24)
#loc129 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":79:30)
#loc130 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":79:29)
#loc131 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":80:5)
#loc132 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":87:5)
#loc133 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":81:9)
#loc134 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":81:16)
#loc135 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":82:9)
#loc136 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":86:9)
#loc137 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":82:17)
#loc138 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":82:13)
#loc139 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":82:20)
#loc140 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":82:24)
#loc141 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":82:22)
#loc142 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":83:9)
#loc143 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":84:30)
#loc144 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":84:13)
#loc145 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":84:18)
#loc146 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":84:19)
#loc147 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":85:30)
#loc148 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":85:13)
#loc149 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":85:18)
#loc150 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":85:19)
#loc151 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":82:30)
#loc152 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":82:29)
#loc153 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":89:5)
#loc154 = loc("CWE416_Use_After_Free__malloc_free_struct_01.c":89:10)
#loc155 = loc(fused[#loc1, #loc2])
#loc156 = loc(fused[#loc3, #loc4])
#loc157 = loc(fused[#loc5, #loc6])
#loc158 = loc(fused[#loc7, #loc8])
#loc159 = loc(fused[#loc9, #loc10])
#loc160 = loc(fused[#loc11, #loc12])
#loc161 = loc(fused[#loc14, #loc13])
#loc162 = loc(fused[#loc17, #loc18])
#loc163 = loc(fused[#loc16, #loc18])
#loc164 = loc(fused[#loc15, #loc19])
#loc165 = loc(fused[#loc20, #loc19])
#loc166 = loc(fused[#loc21, #loc22])
#loc167 = loc(fused[#loc23, #loc24])
#loc168 = loc(fused[#loc25, #loc22])
#loc169 = loc(fused[#loc29, #loc30])
#loc170 = loc(fused[#loc31, #loc32])
#loc171 = loc(fused[#loc33, #loc34])
#loc172 = loc(fused[#loc36, #loc35])
#loc173 = loc(fused[#loc37, #loc38])
#loc174 = loc(fused[#loc40, #loc34])
#loc175 = loc(fused[#loc42, #loc41])
#loc176 = loc(fused[#loc47, #loc46])
#loc177 = loc(fused[#loc52, #loc51])
#loc178 = loc(fused[#loc59, #loc60])
#loc179 = loc(fused[#loc61, #loc62])
#loc180 = loc(fused[#loc63, #loc64])
#loc181 = loc(fused[#loc65, #loc66])
#loc182 = loc(fused[#loc67, #loc68])
#loc183 = loc(fused[#loc70, #loc69])
#loc184 = loc(fused[#loc73, #loc74])
#loc185 = loc(fused[#loc72, #loc74])
#loc186 = loc(fused[#loc71, #loc75])
#loc187 = loc(fused[#loc76, #loc75])
#loc188 = loc(fused[#loc77, #loc78])
#loc189 = loc(fused[#loc79, #loc80])
#loc190 = loc(fused[#loc81, #loc78])
#loc191 = loc(fused[#loc85, #loc86])
#loc192 = loc(fused[#loc87, #loc88])
#loc193 = loc(fused[#loc89, #loc90])
#loc194 = loc(fused[#loc92, #loc91])
#loc195 = loc(fused[#loc93, #loc94])
#loc196 = loc(fused[#loc96, #loc90])
#loc197 = loc(fused[#loc98, #loc97])
#loc198 = loc(fused[#loc102, #loc101])
#loc199 = loc(fused[#loc106, #loc105])
#loc200 = loc(fused[#loc111, #loc112])
#loc201 = loc(fused[#loc113, #loc114])
#loc202 = loc(fused[#loc116, #loc115])
#loc203 = loc(fused[#loc119, #loc120])
#loc204 = loc(fused[#loc118, #loc120])
#loc205 = loc(fused[#loc117, #loc121])
#loc206 = loc(fused[#loc122, #loc121])
#loc207 = loc(fused[#loc123, #loc124])
#loc208 = loc(fused[#loc125, #loc126])
#loc209 = loc(fused[#loc127, #loc124])
#loc210 = loc(fused[#loc131, #loc132])
#loc211 = loc(fused[#loc133, #loc134])
#loc212 = loc(fused[#loc135, #loc136])
#loc213 = loc(fused[#loc138, #loc137])
#loc214 = loc(fused[#loc139, #loc140])
#loc215 = loc(fused[#loc142, #loc136])
#loc216 = loc(fused[#loc144, #loc143])
#loc217 = loc(fused[#loc148, #loc147])
#loc218 = loc(fused[#loc152, #loc151])
