!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc61 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":118:10)
#loc62 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":118:14)
#loc63 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":118:20)
#loc64 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":118:32)
#loc186 = loc(fused[#loc61, #loc62])
#loc187 = loc(fused[#loc63, #loc64])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_fscanf_multiply_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @__isoc99_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc162)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc163)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printHexCharLine(!s8i) loc(#loc164)
  cir.func no_proto @CWE191_Integer_Underflow__char_fscanf_multiply_32_bad() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc166)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc167)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc168)
    cir.store %0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc167)
    cir.store %0, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc168)
    %3 = cir.const #cir.int<32> : !s32i loc(#loc16)
    %4 = cir.cast(integral, %3 : !s32i), !s8i loc(#loc16)
    cir.store %4, %0 : !s8i, !cir.ptr<!s8i> loc(#loc169)
    cir.scope {
      %5 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc171)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc21)
      %7 = cir.load %6 : !cir.ptr<!s8i>, !s8i loc(#loc22)
      cir.store %7, %5 : !s8i, !cir.ptr<!s8i> loc(#loc171)
      %8 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc23)
      %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc163)
      %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc24)
      %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc5)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc5)
      %13 = cir.call @__isoc99_fscanf(%10, %12, %5) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc23)
      %14 = cir.load %5 : !cir.ptr<!s8i>, !s8i loc(#loc25)
      %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
      cir.store %14, %15 : !s8i, !cir.ptr<!s8i> loc(#loc172)
    } loc(#loc170)
    cir.scope {
      %5 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc174)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
      %7 = cir.load %6 : !cir.ptr<!s8i>, !s8i loc(#loc32)
      cir.store %7, %5 : !s8i, !cir.ptr<!s8i> loc(#loc174)
      cir.scope {
        %8 = cir.load %5 : !cir.ptr<!s8i>, !s8i loc(#loc35)
        %9 = cir.cast(integral, %8 : !s8i), !s32i loc(#loc35)
        %10 = cir.const #cir.int<0> : !s32i loc(#loc36)
        %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc176)
        cir.if %11 {
          %12 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc178)
          %13 = cir.load %5 : !cir.ptr<!s8i>, !s8i loc(#loc40)
          %14 = cir.cast(integral, %13 : !s8i), !s32i loc(#loc40)
          %15 = cir.const #cir.int<2> : !s32i loc(#loc39)
          %16 = cir.binop(mul, %14, %15) nsw : !s32i loc(#loc40)
          %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc40)
          cir.store %17, %12 : !s8i, !cir.ptr<!s8i> loc(#loc178)
          %18 = cir.load %12 : !cir.ptr<!s8i>, !s8i loc(#loc41)
          cir.call @printHexCharLine(%18) : (!s8i) -> () loc(#loc42)
        } loc(#loc177)
      } loc(#loc175)
    } loc(#loc173)
    cir.return loc(#loc9)
  } loc(#loc165)
  cir.func no_proto @CWE191_Integer_Underflow__char_fscanf_multiply_32_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc180)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc45)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc181)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc47)
    cir.return loc(#loc44)
  } loc(#loc179)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc182)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc183)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc184)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc55)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc58)
  cir.func @main(%arg0: !s32i loc(fused[#loc61, #loc62]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc63, #loc64])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc186)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc187)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc60)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc65)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc65)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc66)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc67)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc67)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc68)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc55)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc55)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %8 = cir.get_global @CWE191_Integer_Underflow__char_fscanf_multiply_32_good : !cir.ptr<!cir.func<!void ()>> loc(#loc188)
    cir.call @CWE191_Integer_Underflow__char_fscanf_multiply_32_good() : () -> () loc(#loc70)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc56)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc56)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc57)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %13 = cir.get_global @CWE191_Integer_Underflow__char_fscanf_multiply_32_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc189)
    cir.call @CWE191_Integer_Underflow__char_fscanf_multiply_32_bad() : () -> () loc(#loc74)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc58)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc77)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc190)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc190)
    cir.return %17 : !s32i loc(#loc190)
  } loc(#loc185)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc192)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc193)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc194)
    cir.store %0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc193)
    cir.store %0, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc194)
    %3 = cir.const #cir.int<32> : !s32i loc(#loc87)
    %4 = cir.cast(integral, %3 : !s32i), !s8i loc(#loc87)
    cir.store %4, %0 : !s8i, !cir.ptr<!s8i> loc(#loc195)
    cir.scope {
      %5 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc197)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc92)
      %7 = cir.load %6 : !cir.ptr<!s8i>, !s8i loc(#loc93)
      cir.store %7, %5 : !s8i, !cir.ptr<!s8i> loc(#loc197)
      %8 = cir.const #cir.int<2> : !s32i loc(#loc94)
      %9 = cir.unary(minus, %8) : !s32i, !s32i loc(#loc95)
      %10 = cir.cast(integral, %9 : !s32i), !s8i loc(#loc95)
      cir.store %10, %5 : !s8i, !cir.ptr<!s8i> loc(#loc198)
      %11 = cir.load %5 : !cir.ptr<!s8i>, !s8i loc(#loc97)
      %12 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
      cir.store %11, %12 : !s8i, !cir.ptr<!s8i> loc(#loc199)
    } loc(#loc196)
    cir.scope {
      %5 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc201)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
      %7 = cir.load %6 : !cir.ptr<!s8i>, !s8i loc(#loc104)
      cir.store %7, %5 : !s8i, !cir.ptr<!s8i> loc(#loc201)
      cir.scope {
        %8 = cir.load %5 : !cir.ptr<!s8i>, !s8i loc(#loc107)
        %9 = cir.cast(integral, %8 : !s8i), !s32i loc(#loc107)
        %10 = cir.const #cir.int<0> : !s32i loc(#loc108)
        %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc203)
        cir.if %11 {
          %12 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc205)
          %13 = cir.load %5 : !cir.ptr<!s8i>, !s8i loc(#loc112)
          %14 = cir.cast(integral, %13 : !s8i), !s32i loc(#loc112)
          %15 = cir.const #cir.int<2> : !s32i loc(#loc111)
          %16 = cir.binop(mul, %14, %15) nsw : !s32i loc(#loc112)
          %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc112)
          cir.store %17, %12 : !s8i, !cir.ptr<!s8i> loc(#loc205)
          %18 = cir.load %12 : !cir.ptr<!s8i>, !s8i loc(#loc113)
          cir.call @printHexCharLine(%18) : (!s8i) -> () loc(#loc114)
        } loc(#loc204)
      } loc(#loc202)
    } loc(#loc200)
    cir.return loc(#loc80)
  } loc(#loc191)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"data value is too small to perform multiplication.\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc115)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data"] {alignment = 1 : i64} loc(#loc207)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc208)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc209)
    cir.store %0, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc208)
    cir.store %0, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc209)
    %3 = cir.const #cir.int<32> : !s32i loc(#loc124)
    %4 = cir.cast(integral, %3 : !s32i), !s8i loc(#loc124)
    cir.store %4, %0 : !s8i, !cir.ptr<!s8i> loc(#loc210)
    cir.scope {
      %5 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc212)
      %6 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
      %7 = cir.load %6 : !cir.ptr<!s8i>, !s8i loc(#loc130)
      cir.store %7, %5 : !s8i, !cir.ptr<!s8i> loc(#loc212)
      %8 = cir.get_global @__isoc99_fscanf : !cir.ptr<!cir.func<!s32i (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...)>> loc(#loc131)
      %9 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc163)
      %10 = cir.load %9 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc132)
      %11 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc133)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc133)
      %13 = cir.call @__isoc99_fscanf(%10, %12, %5) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i loc(#loc131)
      %14 = cir.load %5 : !cir.ptr<!s8i>, !s8i loc(#loc134)
      %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
      cir.store %14, %15 : !s8i, !cir.ptr<!s8i> loc(#loc213)
    } loc(#loc211)
    cir.scope {
      %5 = cir.alloca !s8i, !cir.ptr<!s8i>, ["data", init] {alignment = 1 : i64} loc(#loc215)
      %6 = cir.load deref %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
      %7 = cir.load %6 : !cir.ptr<!s8i>, !s8i loc(#loc141)
      cir.store %7, %5 : !s8i, !cir.ptr<!s8i> loc(#loc215)
      cir.scope {
        %8 = cir.load %5 : !cir.ptr<!s8i>, !s8i loc(#loc144)
        %9 = cir.cast(integral, %8 : !s8i), !s32i loc(#loc144)
        %10 = cir.const #cir.int<0> : !s32i loc(#loc145)
        %11 = cir.cmp(lt, %9, %10) : !s32i, !cir.bool loc(#loc217)
        cir.if %11 {
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s8i>, !s8i loc(#loc149)
            %13 = cir.cast(integral, %12 : !s8i), !s32i loc(#loc149)
            %14 = cir.const #cir.int<127> : !s32i loc(#loc150)
            %15 = cir.unary(minus, %14) : !s32i, !s32i loc(#loc150)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc150)
            %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc150)
            %18 = cir.const #cir.int<2> : !s32i loc(#loc151)
            %19 = cir.binop(div, %17, %18) : !s32i loc(#loc220)
            %20 = cir.cmp(gt, %13, %19) : !s32i, !cir.bool loc(#loc221)
            cir.if %20 {
              %21 = cir.alloca !s8i, !cir.ptr<!s8i>, ["result", init] {alignment = 1 : i64} loc(#loc223)
              %22 = cir.load %5 : !cir.ptr<!s8i>, !s8i loc(#loc158)
              %23 = cir.cast(integral, %22 : !s8i), !s32i loc(#loc158)
              %24 = cir.const #cir.int<2> : !s32i loc(#loc157)
              %25 = cir.binop(mul, %23, %24) nsw : !s32i loc(#loc158)
              %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc158)
              cir.store %26, %21 : !s8i, !cir.ptr<!s8i> loc(#loc223)
              %27 = cir.load %21 : !cir.ptr<!s8i>, !s8i loc(#loc159)
              cir.call @printHexCharLine(%27) : (!s8i) -> () loc(#loc160)
            } else {
              %21 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc115)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc115)
              cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc161)
            } loc(#loc222)
          } loc(#loc219)
        } loc(#loc218)
      } loc(#loc216)
    } loc(#loc214)
    cir.return loc(#loc117)
  } loc(#loc206)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE191_Integer_Underflow/s01/CWE191_Integer_Underflow__char_fscanf_multiply_32.c":0:0)
#loc1 = loc("/usr/include/stdio.h":463:1)
#loc2 = loc("/usr/include/stdio.h":465:33)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":31:24)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":30:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":30:35)
#loc8 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":22:1)
#loc9 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":43:1)
#loc10 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":24:5)
#loc11 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":24:10)
#loc12 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":25:5)
#loc13 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":25:23)
#loc14 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":26:5)
#loc15 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":26:23)
#loc16 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":27:12)
#loc17 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":27:5)
#loc18 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":28:5)
#loc19 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":33:5)
#loc20 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":29:9)
#loc21 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":29:22)
#loc22 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":29:21)
#loc23 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":31:9)
#loc24 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":31:17)
#loc25 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":32:21)
#loc26 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":32:10)
#loc27 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":32:9)
#loc28 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":34:5)
#loc29 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":42:5)
#loc30 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":35:9)
#loc31 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":35:22)
#loc32 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":35:21)
#loc33 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":36:9)
#loc34 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":41:9)
#loc35 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":36:12)
#loc36 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":36:19)
#loc37 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":37:9)
#loc38 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":39:13)
#loc39 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":39:34)
#loc40 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":39:27)
#loc41 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":40:30)
#loc42 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":40:13)
#loc43 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":104:1)
#loc44 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":108:1)
#loc45 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":106:5)
#loc46 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":106:13)
#loc47 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":107:5)
#loc48 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":107:13)
#loc49 = loc("/usr/include/stdlib.h":575:1)
#loc50 = loc("/usr/include/stdlib.h":575:41)
#loc51 = loc("/usr/include/time.h":76:1)
#loc52 = loc("/usr/include/time.h":76:38)
#loc53 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc54 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc55 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":123:15)
#loc56 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":125:15)
#loc57 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":128:15)
#loc58 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":130:15)
#loc59 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":118:1)
#loc60 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":133:1)
#loc65 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":119:1)
#loc66 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":121:27)
#loc67 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":121:22)
#loc68 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":121:5)
#loc69 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":123:5)
#loc70 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":124:5)
#loc71 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":124:60)
#loc72 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":125:5)
#loc73 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":128:5)
#loc74 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":129:5)
#loc75 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":129:59)
#loc76 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":130:5)
#loc77 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":132:12)
#loc78 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":132:5)
#loc79 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":50:1)
#loc80 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":71:1)
#loc81 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":52:5)
#loc82 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":52:10)
#loc83 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":53:5)
#loc84 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":53:23)
#loc85 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":54:5)
#loc86 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":54:23)
#loc87 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":55:12)
#loc88 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":55:5)
#loc89 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":56:5)
#loc90 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":61:5)
#loc91 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":57:9)
#loc92 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":57:22)
#loc93 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":57:21)
#loc94 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":59:17)
#loc95 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":59:16)
#loc96 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":59:9)
#loc97 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":60:21)
#loc98 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":60:10)
#loc99 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":60:9)
#loc100 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":62:5)
#loc101 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":70:5)
#loc102 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":63:9)
#loc103 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":63:22)
#loc104 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":63:21)
#loc105 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":64:9)
#loc106 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":69:9)
#loc107 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":64:12)
#loc108 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":64:19)
#loc109 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":65:9)
#loc110 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":67:13)
#loc111 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":67:34)
#loc112 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":67:27)
#loc113 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":68:30)
#loc114 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":68:13)
#loc115 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":98:27)
#loc116 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":74:1)
#loc117 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":102:1)
#loc118 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":76:5)
#loc119 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":76:10)
#loc120 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":77:5)
#loc121 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":77:23)
#loc122 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":78:5)
#loc123 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":78:23)
#loc124 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":79:12)
#loc125 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":79:5)
#loc126 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":80:5)
#loc127 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":85:5)
#loc128 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":81:9)
#loc129 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":81:22)
#loc130 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":81:21)
#loc131 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":83:9)
#loc132 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":83:17)
#loc133 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":83:24)
#loc134 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":84:21)
#loc135 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":84:10)
#loc136 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":84:9)
#loc137 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":86:5)
#loc138 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":101:5)
#loc139 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":87:9)
#loc140 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":87:22)
#loc141 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":87:21)
#loc142 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":88:9)
#loc143 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":100:9)
#loc144 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":88:12)
#loc145 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":88:19)
#loc146 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":89:9)
#loc147 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":91:13)
#loc148 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":99:13)
#loc149 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":91:17)
#loc150 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":91:25)
#loc151 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":91:34)
#loc152 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":91:35)
#loc153 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":92:13)
#loc154 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":95:13)
#loc155 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":97:13)
#loc156 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":93:17)
#loc157 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":93:38)
#loc158 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":93:31)
#loc159 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":94:34)
#loc160 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":94:17)
#loc161 = loc("CWE191_Integer_Underflow__char_fscanf_multiply_32.c":98:17)
#loc162 = loc(fused[#loc1, #loc2])
#loc163 = loc(fused[#loc3, #loc4])
#loc164 = loc(fused[#loc6, #loc7])
#loc165 = loc(fused[#loc8, #loc9])
#loc166 = loc(fused[#loc10, #loc11])
#loc167 = loc(fused[#loc12, #loc13])
#loc168 = loc(fused[#loc14, #loc15])
#loc169 = loc(fused[#loc17, #loc16])
#loc170 = loc(fused[#loc18, #loc19])
#loc171 = loc(fused[#loc20, #loc21])
#loc172 = loc(fused[#loc27, #loc25])
#loc173 = loc(fused[#loc28, #loc29])
#loc174 = loc(fused[#loc30, #loc31])
#loc175 = loc(fused[#loc33, #loc34])
#loc176 = loc(fused[#loc35, #loc36])
#loc177 = loc(fused[#loc37, #loc34])
#loc178 = loc(fused[#loc38, #loc39])
#loc179 = loc(fused[#loc43, #loc44])
#loc180 = loc(fused[#loc45, #loc46])
#loc181 = loc(fused[#loc47, #loc48])
#loc182 = loc(fused[#loc49, #loc50])
#loc183 = loc(fused[#loc51, #loc52])
#loc184 = loc(fused[#loc53, #loc54])
#loc185 = loc(fused[#loc59, #loc60])
#loc188 = loc(fused[#loc70, #loc71])
#loc189 = loc(fused[#loc74, #loc75])
#loc190 = loc(fused[#loc78, #loc77])
#loc191 = loc(fused[#loc79, #loc80])
#loc192 = loc(fused[#loc81, #loc82])
#loc193 = loc(fused[#loc83, #loc84])
#loc194 = loc(fused[#loc85, #loc86])
#loc195 = loc(fused[#loc88, #loc87])
#loc196 = loc(fused[#loc89, #loc90])
#loc197 = loc(fused[#loc91, #loc92])
#loc198 = loc(fused[#loc96, #loc94])
#loc199 = loc(fused[#loc99, #loc97])
#loc200 = loc(fused[#loc100, #loc101])
#loc201 = loc(fused[#loc102, #loc103])
#loc202 = loc(fused[#loc105, #loc106])
#loc203 = loc(fused[#loc107, #loc108])
#loc204 = loc(fused[#loc109, #loc106])
#loc205 = loc(fused[#loc110, #loc111])
#loc206 = loc(fused[#loc116, #loc117])
#loc207 = loc(fused[#loc118, #loc119])
#loc208 = loc(fused[#loc120, #loc121])
#loc209 = loc(fused[#loc122, #loc123])
#loc210 = loc(fused[#loc125, #loc124])
#loc211 = loc(fused[#loc126, #loc127])
#loc212 = loc(fused[#loc128, #loc129])
#loc213 = loc(fused[#loc136, #loc134])
#loc214 = loc(fused[#loc137, #loc138])
#loc215 = loc(fused[#loc139, #loc140])
#loc216 = loc(fused[#loc142, #loc143])
#loc217 = loc(fused[#loc144, #loc145])
#loc218 = loc(fused[#loc146, #loc143])
#loc219 = loc(fused[#loc147, #loc148])
#loc220 = loc(fused[#loc150, #loc151])
#loc221 = loc(fused[#loc149, #loc152])
#loc222 = loc(fused[#loc153, #loc154, #loc155, #loc148])
#loc223 = loc(fused[#loc156, #loc157])
