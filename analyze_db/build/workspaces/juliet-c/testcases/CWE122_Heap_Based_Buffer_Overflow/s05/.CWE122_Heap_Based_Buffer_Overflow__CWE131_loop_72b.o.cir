!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1126:7)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1126:18)
#loc5 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1126:28)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":27:14)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":27:28)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":49:18)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":49:32)
#loc92 = loc(fused[#loc4, #loc5])
#loc97 = loc(fused[#loc21, #loc22])
#loc109 = loc(fused[#loc57, #loc58])
!ty_std3A3A_Vector_base3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E3A3A_Vector_impl_data = !cir.record<struct "std::_Vector_base<int *, std::allocator<int *>>::_Vector_impl_data" {!cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!s32i>>} #cir.record.decl.ast>
!ty_std3A3A_Vector_base3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E3A3A_Vector_impl = !cir.record<struct "std::_Vector_base<int *, std::allocator<int *>>::_Vector_impl" {!ty_std3A3A_Vector_base3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E3A3A_Vector_impl_data} #cir.record.decl.ast>
!ty_std3A3A_Vector_base3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E = !cir.record<struct "std::_Vector_base<int *, std::allocator<int *>>" {!ty_std3A3A_Vector_base3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E3A3A_Vector_impl} #cir.record.decl.ast>
!ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E = !cir.record<class "std::vector<int *, std::allocator<int *>>" {!ty_std3A3A_Vector_base3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E}>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s05/CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func linkonce_odr @_ZNSt6vectorIPiSaIS0_EEixEm(%arg0: !cir.ptr<!ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E> loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1126:7), %arg1: !u64i loc(fused[#loc4, #loc5])) -> !cir.ptr<!cir.ptr<!s32i>> extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E>, !cir.ptr<!cir.ptr<!ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["__n", init] {alignment = 8 : i64} loc(#loc92)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["__retval"] {alignment = 8 : i64} loc(#loc2)
    cir.store %arg0, %0 : !cir.ptr<!ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E>, !cir.ptr<!cir.ptr<!ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E>> loc(#loc6)
    cir.store %arg1, %1 : !u64i, !cir.ptr<!u64i> loc(#loc6)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E>>, !cir.ptr<!ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E> loc(#loc3)
    %4 = cir.base_class_addr(%3 : !cir.ptr<!ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E> nonnull) [0] -> !cir.ptr<!ty_std3A3A_Vector_base3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E> loc(#loc7)
    %5 = cir.get_member %4[0] {name = "_M_impl"} : !cir.ptr<!ty_std3A3A_Vector_base3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E> -> !cir.ptr<!ty_std3A3A_Vector_base3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E3A3A_Vector_impl> loc(#loc8)
    %6 = cir.base_class_addr(%5 : !cir.ptr<!ty_std3A3A_Vector_base3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E3A3A_Vector_impl> nonnull) [0] -> !cir.ptr<!ty_std3A3A_Vector_base3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E3A3A_Vector_impl_data> loc(#loc7)
    %7 = cir.get_member %6[0] {name = "_M_start"} : !cir.ptr<!ty_std3A3A_Vector_base3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E3A3A_Vector_impl_data> -> !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc9)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc10)
    %9 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc11)
    %10 = cir.ptr_stride(%8 : !cir.ptr<!cir.ptr<!s32i>>, %9 : !u64i), !cir.ptr<!cir.ptr<!s32i>> loc(#loc12)
    cir.store %10, %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc93)
    %11 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc93)
    cir.return %11 : !cir.ptr<!cir.ptr<!s32i>> loc(#loc93)
  } loc(#loc91)
  cir.func private @printIntLine(!s32i) loc(#loc94)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc95)
  cir.func @_ZN49CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_727badSinkESt6vectorIPiSaIS1_EE(%arg0: !ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E loc(fused[#loc21, #loc22])) extra(#fn_attr2) {
    %0 = cir.alloca !ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E, !cir.ptr<!ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E>, ["dataVector", init] {alignment = 8 : i64} loc(#loc97)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc98)
    cir.store %arg0, %0 : !ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E, !cir.ptr<!ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E> loc(#loc25)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc26)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc26)
    %4 = cir.call @_ZNSt6vectorIPiSaIS0_EEixEm(%0, %3) : (!cir.ptr<!ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E>, !u64i) -> !cir.ptr<!cir.ptr<!s32i>> extra(#fn_attr1) loc(#loc27)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc27)
    cir.store %5, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc98)
    cir.scope {
      %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc100)
      %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc101)
      %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc100)
      cir.store %8, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc100)
      cir.scope {
        %16 = cir.const #cir.int<0> : !s32i loc(#loc36)
        %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc36)
        cir.store %17, %7 : !u64i, !cir.ptr<!u64i> loc(#loc103)
        cir.for : cond {
          %18 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc38)
          %19 = cir.const #cir.int<10> : !s32i loc(#loc39)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc39)
          %21 = cir.cmp(lt, %18, %20) : !u64i, !cir.bool loc(#loc104)
          cir.condition(%21) loc(#loc104)
        } body {
          cir.scope {
            %18 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc41)
            %19 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc42)
            %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !u64i), !cir.ptr<!s32i> loc(#loc42)
            %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc42)
            %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc43)
            %23 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc44)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc45)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc106)
          } loc(#loc105)
          cir.yield loc(#loc35)
        } step {
          %18 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc47)
          %19 = cir.unary(inc, %18) : !u64i, !u64i loc(#loc48)
          cir.store %19, %7 : !u64i, !cir.ptr<!u64i> loc(#loc107)
          cir.yield loc(#loc102)
        } loc(#loc102)
      } loc(#loc102)
      %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc49)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc50)
      %11 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc51)
      %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc49)
      cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc52)
      %13 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc53)
      %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc54)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc54)
      cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc53)
    } loc(#loc99)
    cir.return loc(#loc20)
  } loc(#loc96)
  cir.func @_ZN49CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_7211goodG2BSinkESt6vectorIPiSaIS1_EE(%arg0: !ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E loc(fused[#loc57, #loc58])) extra(#fn_attr2) {
    %0 = cir.alloca !ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E, !cir.ptr<!ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E>, ["dataVector", init] {alignment = 8 : i64} loc(#loc109)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc110)
    cir.store %arg0, %0 : !ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E, !cir.ptr<!ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E> loc(#loc61)
    %2 = cir.const #cir.int<2> : !s32i loc(#loc62)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc62)
    %4 = cir.call @_ZNSt6vectorIPiSaIS0_EEixEm(%0, %3) : (!cir.ptr<!ty_std3A3Avector3Cint_2A2C_std3A3Aallocator3Cint_2A3E3E>, !u64i) -> !cir.ptr<!cir.ptr<!s32i>> extra(#fn_attr1) loc(#loc63)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc63)
    cir.store %5, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc110)
    cir.scope {
      %6 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["source"] {alignment = 16 : i64} loc(#loc112)
      %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc113)
      %8 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc112)
      cir.store %8, %6 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc112)
      cir.scope {
        %16 = cir.const #cir.int<0> : !s32i loc(#loc72)
        %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc72)
        cir.store %17, %7 : !u64i, !cir.ptr<!u64i> loc(#loc115)
        cir.for : cond {
          %18 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc74)
          %19 = cir.const #cir.int<10> : !s32i loc(#loc75)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc75)
          %21 = cir.cmp(lt, %18, %20) : !u64i, !cir.bool loc(#loc116)
          cir.condition(%21) loc(#loc116)
        } body {
          cir.scope {
            %18 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc77)
            %19 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc78)
            %20 = cir.ptr_stride(%19 : !cir.ptr<!s32i>, %18 : !u64i), !cir.ptr<!s32i> loc(#loc78)
            %21 = cir.load %20 : !cir.ptr<!s32i>, !s32i loc(#loc78)
            %22 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc79)
            %23 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc80)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc81)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc118)
          } loc(#loc117)
          cir.yield loc(#loc71)
        } step {
          %18 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc83)
          %19 = cir.unary(inc, %18) : !u64i, !u64i loc(#loc84)
          cir.store %19, %7 : !u64i, !cir.ptr<!u64i> loc(#loc119)
          cir.yield loc(#loc114)
        } loc(#loc114)
      } loc(#loc114)
      %9 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc85)
      %10 = cir.const #cir.int<0> : !s32i loc(#loc86)
      %11 = cir.ptr_stride(%9 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc87)
      %12 = cir.load %11 : !cir.ptr<!s32i>, !s32i loc(#loc85)
      cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc88)
      %13 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc89)
      %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc90)
      %15 = cir.cast(bitcast, %14 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc90)
      cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc89)
    } loc(#loc111)
    cir.return loc(#loc56)
  } loc(#loc108)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s05/CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1125:7)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1130:7)
#loc6 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1127:7)
#loc7 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:11)
#loc8 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":374:20)
#loc9 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":94:10)
#loc10 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:25)
#loc11 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:36)
#loc12 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:34)
#loc13 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:2)
#loc14 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/stl_vector.h":1129:39)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc17 = loc("/usr/include/stdlib.h":687:1)
#loc18 = loc("/usr/include/stdlib.h":687:32)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":27:1)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":42:1)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":30:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":30:30)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":28:1)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":30:29)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":30:18)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":31:5)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":41:5)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":32:9)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":32:28)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":33:9)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":33:16)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":35:9)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":38:9)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":35:18)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":35:14)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":35:21)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":35:25)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":36:9)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":37:30)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":37:23)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":37:13)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":37:18)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":37:19)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":37:31)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":35:30)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":35:29)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":39:22)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":39:27)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":39:28)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":39:9)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":40:9)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":40:14)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":49:1)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":63:1)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":51:5)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":51:30)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":50:1)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":51:29)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":51:18)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":52:5)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":62:5)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":53:9)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":53:28)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":54:9)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":54:16)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":56:9)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":59:9)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":56:18)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":56:14)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":56:21)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":56:25)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":57:9)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":58:30)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":58:23)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":58:13)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":58:18)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":58:19)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":58:31)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":56:30)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":56:29)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":60:22)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":60:27)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":60:28)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":60:9)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":61:9)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__CWE131_loop_72b.cpp":61:14)
#loc91 = loc(fused[#loc1, #loc2])
#loc93 = loc(fused[#loc13, #loc14])
#loc94 = loc(fused[#loc15, #loc16])
#loc95 = loc(fused[#loc17, #loc18])
#loc96 = loc(fused[#loc19, #loc20])
#loc98 = loc(fused[#loc23, #loc24])
#loc99 = loc(fused[#loc28, #loc29])
#loc100 = loc(fused[#loc30, #loc31])
#loc101 = loc(fused[#loc32, #loc33])
#loc102 = loc(fused[#loc34, #loc35])
#loc103 = loc(fused[#loc37, #loc36])
#loc104 = loc(fused[#loc38, #loc39])
#loc105 = loc(fused[#loc40, #loc35])
#loc106 = loc(fused[#loc43, #loc46])
#loc107 = loc(fused[#loc48, #loc47])
#loc108 = loc(fused[#loc55, #loc56])
#loc110 = loc(fused[#loc59, #loc60])
#loc111 = loc(fused[#loc64, #loc65])
#loc112 = loc(fused[#loc66, #loc67])
#loc113 = loc(fused[#loc68, #loc69])
#loc114 = loc(fused[#loc70, #loc71])
#loc115 = loc(fused[#loc73, #loc72])
#loc116 = loc(fused[#loc74, #loc75])
#loc117 = loc(fused[#loc76, #loc71])
#loc118 = loc(fused[#loc79, #loc82])
#loc119 = loc(fused[#loc84, #loc83])
