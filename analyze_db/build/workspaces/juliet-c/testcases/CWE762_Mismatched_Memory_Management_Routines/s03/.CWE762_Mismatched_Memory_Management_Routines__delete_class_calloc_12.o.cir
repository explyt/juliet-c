!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc9 = loc("../../../testcasesupport/std_testcase.h":61:7)
!ty_TwoIntsClass = !cir.record<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s03/CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @globalReturnsTrueOrFalse() -> !s32i loc(#loc140)
  cir.func private @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc141)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc142)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc143)
  cir.func linkonce_odr @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc9)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc9)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc9)
    cir.return loc(#loc9)
  } loc(#loc9)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc144)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc145)
  cir.func @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_123badEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc147)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc18)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc148)
    cir.br ^bb1 loc(#loc149)
  ^bb1:  // pred: ^bb0
    %2 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc22)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc150)
    cir.brcond %3 ^bb2, ^bb7 loc(#loc151)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @calloc : !cir.ptr<!cir.func<(!u64i, !u64i) -> !cir.ptr<!void>>> loc(#loc27)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc28)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc28)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc152)
    %8 = cir.call @calloc(%6, %7) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc27)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc153)
    cir.store %9, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc154)
    cir.br ^bb3 loc(#loc155)
  ^bb3:  // pred: ^bb2
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc35)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc36)
    %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc156)
    cir.brcond %12 ^bb4, ^bb5 loc(#loc157)
  ^bb4:  // pred: ^bb3
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc38)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc40)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc38)
    cir.br ^bb5 loc(#loc34)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc34)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc25)
  ^bb7:  // pred: ^bb1
    %16 = cir.const #cir.int<8> : !u64i loc(#loc158)
    %17 = cir.call @_Znwm(%16) : (!u64i) -> !cir.ptr<!void> loc(#loc43)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc158)
    cir.call @_ZN12TwoIntsClassC2Ev(%18) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc42)
    cir.store %18, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc159)
    cir.br ^bb8 loc(#loc21)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc21)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc160)
  ^bb10:  // pred: ^bb9
    %19 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc47)
    %20 = cir.cast(int_to_bool, %19 : !s32i), !cir.bool loc(#loc161)
    cir.brcond %20 ^bb11, ^bb12 loc(#loc162)
  ^bb11:  // pred: ^bb10
    %21 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc52)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc52)
    cir.call @_ZdlPv(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc43)
    cir.br ^bb13 loc(#loc50)
  ^bb12:  // pred: ^bb10
    %23 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc53)
    %24 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc54)
    %25 = cir.cast(bitcast, %24 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc54)
    cir.call @free(%25) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc53)
    cir.br ^bb13 loc(#loc46)
  ^bb13:  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc46)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc15)
  } loc(#loc146)
  cir.func internal private @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12L7goodB2GEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc164)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc59)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc165)
    cir.br ^bb1 loc(#loc166)
  ^bb1:  // pred: ^bb0
    %2 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc63)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc167)
    cir.brcond %3 ^bb2, ^bb7 loc(#loc168)
  ^bb2:  // pred: ^bb1
    %4 = cir.get_global @calloc : !cir.ptr<!cir.func<(!u64i, !u64i) -> !cir.ptr<!void>>> loc(#loc68)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc69)
    %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc69)
    %7 = cir.const #cir.int<8> : !u64i loc(#loc169)
    %8 = cir.call @calloc(%6, %7) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc68)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc170)
    cir.store %9, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc171)
    cir.br ^bb3 loc(#loc172)
  ^bb3:  // pred: ^bb2
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc76)
    %11 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc77)
    %12 = cir.cmp(eq, %10, %11) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc173)
    cir.brcond %12 ^bb4, ^bb5 loc(#loc174)
  ^bb4:  // pred: ^bb3
    %13 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc79)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc80)
    %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc81)
    cir.call @exit(%15) : (!s32i) -> () extra(#fn_attr) loc(#loc79)
    cir.br ^bb5 loc(#loc75)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc75)
  ^bb6:  // pred: ^bb5
    cir.br ^bb12 loc(#loc66)
  ^bb7:  // pred: ^bb1
    %16 = cir.get_global @calloc : !cir.ptr<!cir.func<(!u64i, !u64i) -> !cir.ptr<!void>>> loc(#loc82)
    %17 = cir.const #cir.int<100> : !s32i loc(#loc83)
    %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc83)
    %19 = cir.const #cir.int<8> : !u64i loc(#loc175)
    %20 = cir.call @calloc(%18, %19) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc82)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc176)
    cir.store %21, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc177)
    cir.br ^bb8 loc(#loc178)
  ^bb8:  // pred: ^bb7
    %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc90)
    %23 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc91)
    %24 = cir.cmp(eq, %22, %23) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc179)
    cir.brcond %24 ^bb9, ^bb10 loc(#loc180)
  ^bb9:  // pred: ^bb8
    %25 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc93)
    %26 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %27 = cir.unary(minus, %26) nsw : !s32i, !s32i loc(#loc95)
    cir.call @exit(%27) : (!s32i) -> () extra(#fn_attr) loc(#loc93)
    cir.br ^bb10 loc(#loc89)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc89)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc62)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc62)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc181)
  ^bb14:  // pred: ^bb13
    %28 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc98)
    %29 = cir.cast(int_to_bool, %28 : !s32i), !cir.bool loc(#loc182)
    cir.brcond %29 ^bb15, ^bb16 loc(#loc183)
  ^bb15:  // pred: ^bb14
    %30 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc103)
    %31 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc104)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc104)
    cir.call @free(%32) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc103)
    cir.br ^bb17 loc(#loc101)
  ^bb16:  // pred: ^bb14
    %33 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc105)
    %34 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc106)
    %35 = cir.cast(bitcast, %34 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc106)
    cir.call @free(%35) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc105)
    cir.br ^bb17 loc(#loc97)
  ^bb17:  // 2 preds: ^bb15, ^bb16
    cir.br ^bb18 loc(#loc97)
  ^bb18:  // pred: ^bb17
    cir.return loc(#loc56)
  } loc(#loc163)
  cir.func internal private @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12L7goodG2BEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc185)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc111)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc186)
    cir.br ^bb1 loc(#loc187)
  ^bb1:  // pred: ^bb0
    %2 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc115)
    %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc188)
    cir.brcond %3 ^bb2, ^bb3 loc(#loc189)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<8> : !u64i loc(#loc190)
    %5 = cir.call @_Znwm(%4) : (!u64i) -> !cir.ptr<!void> loc(#loc122)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc190)
    cir.call @_ZN12TwoIntsClassC2Ev(%6) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc121)
    cir.store %6, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc191)
    cir.br ^bb4 loc(#loc118)
  ^bb3:  // pred: ^bb1
    %7 = cir.const #cir.int<8> : !u64i loc(#loc192)
    %8 = cir.call @_Znwm(%7) : (!u64i) -> !cir.ptr<!void> loc(#loc122)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc192)
    cir.call @_ZN12TwoIntsClassC2Ev(%9) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr) loc(#loc125)
    cir.store %9, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc193)
    cir.br ^bb4 loc(#loc114)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc114)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc194)
  ^bb6:  // pred: ^bb5
    %10 = cir.call @globalReturnsTrueOrFalse() : () -> !s32i loc(#loc129)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc195)
    cir.brcond %11 ^bb7, ^bb8 loc(#loc196)
  ^bb7:  // pred: ^bb6
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc134)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc134)
    cir.call @_ZdlPv(%13) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc122)
    cir.br ^bb9 loc(#loc132)
  ^bb8:  // pred: ^bb6
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc135)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!ty_TwoIntsClass>), !cir.ptr<!void> loc(#loc135)
    cir.call @_ZdlPv(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc122)
    cir.br ^bb9 loc(#loc128)
  ^bb9:  // 2 preds: ^bb7, ^bb8
    cir.br ^bb10 loc(#loc128)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc108)
  } loc(#loc184)
  cir.func @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_124goodEv() extra(#fn_attr2) {
    cir.call @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12L7goodB2GEv() : () -> () loc(#loc138)
    cir.call @_ZN68CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12L7goodG2BEv() : () -> () loc(#loc139)
    cir.return loc(#loc137)
  } loc(#loc197)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s03/CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":675:1)
#loc4 = loc("/usr/include/stdlib.h":676:14)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc8 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc10 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc11 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc12 = loc("/usr/include/stdlib.h":687:1)
#loc13 = loc("/usr/include/stdlib.h":687:32)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":24:1)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":51:1)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":26:5)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":26:20)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":28:12)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":28:5)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":29:5)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":39:5)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":29:8)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":29:33)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":30:5)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":34:5)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":36:5)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":32:32)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":32:39)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":32:44)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":32:63)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":32:64)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":32:9)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":33:9)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":33:37)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":33:13)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":33:21)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":33:27)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":33:28)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":33:34)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":33:33)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":38:16)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":38:20)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":24:6)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":38:9)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":40:5)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":50:5)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":40:8)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":40:33)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":41:5)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":45:5)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":47:5)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":44:16)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":49:9)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":49:14)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":60:1)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":87:1)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":62:5)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":62:20)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":64:12)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":64:5)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":65:5)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":76:5)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":65:8)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":65:33)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":66:5)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":70:5)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":72:5)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":68:32)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":68:39)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":68:44)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":68:63)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":68:64)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":68:9)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":69:9)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":69:37)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":69:13)
#loc77 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":69:21)
#loc78 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":69:27)
#loc79 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":69:28)
#loc80 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":69:34)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":69:33)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":74:32)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":74:39)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":74:44)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":74:63)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":74:64)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":74:9)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":75:9)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":75:37)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":75:13)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":75:21)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":75:27)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":75:28)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":75:34)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":75:33)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":77:5)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":86:5)
#loc98 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":77:8)
#loc99 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":77:33)
#loc100 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":78:5)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":81:5)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":83:5)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":80:9)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":80:14)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":85:9)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":85:14)
#loc107 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":92:1)
#loc108 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":119:1)
#loc109 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":94:5)
#loc110 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":94:20)
#loc111 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":96:12)
#loc112 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":96:5)
#loc113 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":97:5)
#loc114 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":106:5)
#loc115 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":97:8)
#loc116 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":97:33)
#loc117 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":98:5)
#loc118 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":101:5)
#loc119 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":103:5)
#loc120 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":100:16)
#loc121 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":100:20)
#loc122 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":92:13)
#loc123 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":100:9)
#loc124 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":105:16)
#loc125 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":105:20)
#loc126 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":105:9)
#loc127 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":107:5)
#loc128 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":118:5)
#loc129 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":107:8)
#loc130 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":107:33)
#loc131 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":108:5)
#loc132 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":112:5)
#loc133 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":114:5)
#loc134 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":111:16)
#loc135 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":117:16)
#loc136 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":121:1)
#loc137 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":125:1)
#loc138 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":123:5)
#loc139 = loc("CWE762_Mismatched_Memory_Management_Routines__delete_class_calloc_12.cpp":124:5)
#loc140 = loc(fused[#loc1, #loc2])
#loc141 = loc(fused[#loc3, #loc4])
#loc142 = loc(fused[#loc5, #loc6])
#loc143 = loc(fused[#loc7, #loc8])
#loc144 = loc(fused[#loc10, #loc11])
#loc145 = loc(fused[#loc12, #loc13])
#loc146 = loc(fused[#loc14, #loc15])
#loc147 = loc(fused[#loc16, #loc17])
#loc148 = loc(fused[#loc19, #loc18])
#loc149 = loc(fused[#loc20, #loc21])
#loc150 = loc(fused[#loc22, #loc23])
#loc151 = loc(fused[#loc24, #loc25, #loc26, #loc21])
#loc152 = loc(fused[#loc29, #loc30])
#loc153 = loc(fused[#loc27, #loc31])
#loc154 = loc(fused[#loc32, #loc31])
#loc155 = loc(fused[#loc33, #loc34])
#loc156 = loc(fused[#loc35, #loc36])
#loc157 = loc(fused[#loc37, #loc34])
#loc158 = loc(fused[#loc41, #loc42])
#loc159 = loc(fused[#loc44, #loc42])
#loc160 = loc(fused[#loc45, #loc46])
#loc161 = loc(fused[#loc47, #loc48])
#loc162 = loc(fused[#loc49, #loc50, #loc51, #loc46])
#loc163 = loc(fused[#loc55, #loc56])
#loc164 = loc(fused[#loc57, #loc58])
#loc165 = loc(fused[#loc60, #loc59])
#loc166 = loc(fused[#loc61, #loc62])
#loc167 = loc(fused[#loc63, #loc64])
#loc168 = loc(fused[#loc65, #loc66, #loc67, #loc62])
#loc169 = loc(fused[#loc70, #loc71])
#loc170 = loc(fused[#loc68, #loc72])
#loc171 = loc(fused[#loc73, #loc72])
#loc172 = loc(fused[#loc74, #loc75])
#loc173 = loc(fused[#loc76, #loc77])
#loc174 = loc(fused[#loc78, #loc75])
#loc175 = loc(fused[#loc84, #loc85])
#loc176 = loc(fused[#loc82, #loc86])
#loc177 = loc(fused[#loc87, #loc86])
#loc178 = loc(fused[#loc88, #loc89])
#loc179 = loc(fused[#loc90, #loc91])
#loc180 = loc(fused[#loc92, #loc89])
#loc181 = loc(fused[#loc96, #loc97])
#loc182 = loc(fused[#loc98, #loc99])
#loc183 = loc(fused[#loc100, #loc101, #loc102, #loc97])
#loc184 = loc(fused[#loc107, #loc108])
#loc185 = loc(fused[#loc109, #loc110])
#loc186 = loc(fused[#loc112, #loc111])
#loc187 = loc(fused[#loc113, #loc114])
#loc188 = loc(fused[#loc115, #loc116])
#loc189 = loc(fused[#loc117, #loc118, #loc119, #loc114])
#loc190 = loc(fused[#loc120, #loc121])
#loc191 = loc(fused[#loc123, #loc121])
#loc192 = loc(fused[#loc124, #loc125])
#loc193 = loc(fused[#loc126, #loc125])
#loc194 = loc(fused[#loc127, #loc128])
#loc195 = loc(fused[#loc129, #loc130])
#loc196 = loc(fused[#loc131, #loc132, #loc133, #loc128])
#loc197 = loc(fused[#loc136, #loc137])
