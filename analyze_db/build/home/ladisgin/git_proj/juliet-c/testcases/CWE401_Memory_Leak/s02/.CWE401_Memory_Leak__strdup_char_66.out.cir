!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc48 = loc("CWE401_Memory_Leak__strdup_char_66a.c":99:10)
#loc49 = loc("CWE401_Memory_Leak__strdup_char_66a.c":99:14)
#loc50 = loc("CWE401_Memory_Leak__strdup_char_66a.c":99:20)
#loc51 = loc("CWE401_Memory_Leak__strdup_char_66a.c":99:32)
#loc131 = loc(fused[#loc48, #loc49])
#loc132 = loc(fused[#loc50, #loc51])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_66a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodB2G.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc113)
  cir.global "private" constant cir_private @__const.CWE401_Memory_Leak__strdup_char_66_bad.myString = #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc114)
  cir.func private @strdup(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc115)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc116)
  cir.func private @CWE401_Memory_Leak__strdup_char_66b_badSink(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc117)
  cir.func no_proto @CWE401_Memory_Leak__strdup_char_66_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc119)
    %1 = cir.alloca !cir.array<!cir.ptr<!s8i> x 5>, !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc120)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc17)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc121)
    cir.scope {
      %8 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc114)
      %9 = cir.get_global @__const.CWE401_Memory_Leak__strdup_char_66_bad.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc114)
      cir.copy %9 to %8 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc114)
      %10 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc21)
      %11 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc22)
      %12 = cir.call @strdup(%11) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc21)
      cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc123)
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
      cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc26)
    } loc(#loc122)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc27)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc28)
    %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc29)
    %6 = cir.ptr_stride(%5 : !cir.ptr<!cir.ptr<!s8i>>, %4 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc29)
    cir.store %3, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc124)
    %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc30)
    cir.call @CWE401_Memory_Leak__strdup_char_66b_badSink(%7) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc31)
    cir.return loc(#loc12)
  } loc(#loc118)
  cir.func no_proto @CWE401_Memory_Leak__strdup_char_66_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc126)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc34)
    %1 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc127)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    cir.return loc(#loc33)
  } loc(#loc125)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc128)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc129)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc42)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc43)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc45)
  cir.func @main(%arg0: !s32i loc(fused[#loc48, #loc49]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc50, #loc51])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc131)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc132)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc47)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc52)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc52)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc53)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc54)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc54)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc55)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc42)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc42)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc56)
    %8 = cir.get_global @CWE401_Memory_Leak__strdup_char_66_good : !cir.ptr<!cir.func<!void ()>> loc(#loc133)
    cir.call @CWE401_Memory_Leak__strdup_char_66_good() : () -> () loc(#loc57)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc43)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc43)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc44)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc60)
    %13 = cir.get_global @CWE401_Memory_Leak__strdup_char_66_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc134)
    cir.call @CWE401_Memory_Leak__strdup_char_66_bad() : () -> () loc(#loc61)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc45)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc63)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc64)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc135)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc135)
    cir.return %17 : !s32i loc(#loc135)
  } loc(#loc130)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc136)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"a string\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc68)
  cir.func private @CWE401_Memory_Leak__strdup_char_66b_goodG2BSink(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc137)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc139)
    %1 = cir.alloca !cir.array<!cir.ptr<!s8i> x 5>, !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc140)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc77)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc141)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc79)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc79)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc79)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc79)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc79)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc79)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc79)
    cir.store %9, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc142)
    %10 = cir.get_global @strcpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc81)
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
    %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc68)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc68)
    %14 = cir.call @strcpy(%11, %13) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc81)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc84)
    %16 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
    %17 = cir.const #cir.int<2> : !s32i loc(#loc86)
    %18 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc87)
    %19 = cir.ptr_stride(%18 : !cir.ptr<!cir.ptr<!s8i>>, %17 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc87)
    cir.store %16, %19 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc143)
    %20 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc88)
    cir.call @CWE401_Memory_Leak__strdup_char_66b_goodG2BSink(%20) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc89)
    cir.return loc(#loc72)
  } loc(#loc138)
  cir.func private @CWE401_Memory_Leak__strdup_char_66b_goodB2GSink(!cir.ptr<!cir.ptr<!s8i>>) loc(#loc144)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc146)
    %1 = cir.alloca !cir.array<!cir.ptr<!s8i> x 5>, !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>, ["dataArray"] {alignment = 16 : i64} loc(#loc147)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc98)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc148)
    cir.scope {
      %8 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc113)
      %9 = cir.get_global @__const.goodB2G.myString : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc113)
      cir.copy %9 to %8 : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc113)
      %10 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc102)
      %11 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc103)
      %12 = cir.call @strdup(%11) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc102)
      cir.store %12, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
      %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc106)
      cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc107)
    } loc(#loc149)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc109)
    %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc110)
    %6 = cir.ptr_stride(%5 : !cir.ptr<!cir.ptr<!s8i>>, %4 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc110)
    cir.store %3, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc151)
    %7 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!cir.ptr<!s8i> x 5>>), !cir.ptr<!cir.ptr<!s8i>> loc(#loc111)
    cir.call @CWE401_Memory_Leak__strdup_char_66b_goodB2GSink(%7) : (!cir.ptr<!cir.ptr<!s8i>>) -> () loc(#loc112)
    cir.return loc(#loc93)
  } loc(#loc145)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s02/CWE401_Memory_Leak__strdup_char_66a.c":0:0)
#loc1 = loc("CWE401_Memory_Leak__strdup_char_66a.c":74:9)
#loc2 = loc("CWE401_Memory_Leak__strdup_char_66a.c":74:27)
#loc3 = loc("CWE401_Memory_Leak__strdup_char_66a.c":33:9)
#loc4 = loc("CWE401_Memory_Leak__strdup_char_66a.c":33:27)
#loc5 = loc("/usr/include/string.h":187:1)
#loc6 = loc("/usr/include/string.h":188:35)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE401_Memory_Leak__strdup_char_66a.c":25:1)
#loc10 = loc("CWE401_Memory_Leak__strdup_char_66a.c":25:68)
#loc11 = loc("CWE401_Memory_Leak__strdup_char_66a.c":27:1)
#loc12 = loc("CWE401_Memory_Leak__strdup_char_66a.c":42:1)
#loc13 = loc("CWE401_Memory_Leak__strdup_char_66a.c":29:5)
#loc14 = loc("CWE401_Memory_Leak__strdup_char_66a.c":29:12)
#loc15 = loc("CWE401_Memory_Leak__strdup_char_66a.c":30:5)
#loc16 = loc("CWE401_Memory_Leak__strdup_char_66a.c":30:23)
#loc17 = loc("CWE401_Memory_Leak__strdup_char_66a.c":31:12)
#loc18 = loc("CWE401_Memory_Leak__strdup_char_66a.c":31:5)
#loc19 = loc("CWE401_Memory_Leak__strdup_char_66a.c":32:5)
#loc20 = loc("CWE401_Memory_Leak__strdup_char_66a.c":38:5)
#loc21 = loc("CWE401_Memory_Leak__strdup_char_66a.c":35:16)
#loc22 = loc("CWE401_Memory_Leak__strdup_char_66a.c":35:23)
#loc23 = loc("CWE401_Memory_Leak__strdup_char_66a.c":35:9)
#loc24 = loc("CWE401_Memory_Leak__strdup_char_66a.c":35:31)
#loc25 = loc("CWE401_Memory_Leak__strdup_char_66a.c":37:19)
#loc26 = loc("CWE401_Memory_Leak__strdup_char_66a.c":37:9)
#loc27 = loc("CWE401_Memory_Leak__strdup_char_66a.c":40:20)
#loc28 = loc("CWE401_Memory_Leak__strdup_char_66a.c":40:15)
#loc29 = loc("CWE401_Memory_Leak__strdup_char_66a.c":40:5)
#loc30 = loc("CWE401_Memory_Leak__strdup_char_66a.c":41:49)
#loc31 = loc("CWE401_Memory_Leak__strdup_char_66a.c":41:5)
#loc32 = loc("CWE401_Memory_Leak__strdup_char_66a.c":84:1)
#loc33 = loc("CWE401_Memory_Leak__strdup_char_66a.c":88:1)
#loc34 = loc("CWE401_Memory_Leak__strdup_char_66a.c":86:5)
#loc35 = loc("CWE401_Memory_Leak__strdup_char_66a.c":86:13)
#loc36 = loc("CWE401_Memory_Leak__strdup_char_66a.c":87:5)
#loc37 = loc("CWE401_Memory_Leak__strdup_char_66a.c":87:13)
#loc38 = loc("/usr/include/stdlib.h":575:1)
#loc39 = loc("/usr/include/stdlib.h":575:41)
#loc40 = loc("/usr/include/time.h":76:1)
#loc41 = loc("/usr/include/time.h":76:38)
#loc42 = loc("CWE401_Memory_Leak__strdup_char_66a.c":104:15)
#loc43 = loc("CWE401_Memory_Leak__strdup_char_66a.c":106:15)
#loc44 = loc("CWE401_Memory_Leak__strdup_char_66a.c":109:15)
#loc45 = loc("CWE401_Memory_Leak__strdup_char_66a.c":111:15)
#loc46 = loc("CWE401_Memory_Leak__strdup_char_66a.c":99:1)
#loc47 = loc("CWE401_Memory_Leak__strdup_char_66a.c":114:1)
#loc52 = loc("CWE401_Memory_Leak__strdup_char_66a.c":100:1)
#loc53 = loc("CWE401_Memory_Leak__strdup_char_66a.c":102:27)
#loc54 = loc("CWE401_Memory_Leak__strdup_char_66a.c":102:22)
#loc55 = loc("CWE401_Memory_Leak__strdup_char_66a.c":102:5)
#loc56 = loc("CWE401_Memory_Leak__strdup_char_66a.c":104:5)
#loc57 = loc("CWE401_Memory_Leak__strdup_char_66a.c":105:5)
#loc58 = loc("CWE401_Memory_Leak__strdup_char_66a.c":105:45)
#loc59 = loc("CWE401_Memory_Leak__strdup_char_66a.c":106:5)
#loc60 = loc("CWE401_Memory_Leak__strdup_char_66a.c":109:5)
#loc61 = loc("CWE401_Memory_Leak__strdup_char_66a.c":110:5)
#loc62 = loc("CWE401_Memory_Leak__strdup_char_66a.c":110:44)
#loc63 = loc("CWE401_Memory_Leak__strdup_char_66a.c":111:5)
#loc64 = loc("CWE401_Memory_Leak__strdup_char_66a.c":113:12)
#loc65 = loc("CWE401_Memory_Leak__strdup_char_66a.c":113:5)
#loc66 = loc("/usr/include/string.h":141:1)
#loc67 = loc("/usr/include/string.h":142:14)
#loc68 = loc("CWE401_Memory_Leak__strdup_char_66a.c":59:18)
#loc69 = loc("CWE401_Memory_Leak__strdup_char_66a.c":49:1)
#loc70 = loc("CWE401_Memory_Leak__strdup_char_66a.c":49:72)
#loc71 = loc("CWE401_Memory_Leak__strdup_char_66a.c":51:1)
#loc72 = loc("CWE401_Memory_Leak__strdup_char_66a.c":63:1)
#loc73 = loc("CWE401_Memory_Leak__strdup_char_66a.c":53:5)
#loc74 = loc("CWE401_Memory_Leak__strdup_char_66a.c":53:12)
#loc75 = loc("CWE401_Memory_Leak__strdup_char_66a.c":54:5)
#loc76 = loc("CWE401_Memory_Leak__strdup_char_66a.c":54:23)
#loc77 = loc("CWE401_Memory_Leak__strdup_char_66a.c":55:12)
#loc78 = loc("CWE401_Memory_Leak__strdup_char_66a.c":55:5)
#loc79 = loc("CWE401_Memory_Leak__strdup_char_66a.c":57:20)
#loc80 = loc("CWE401_Memory_Leak__strdup_char_66a.c":57:5)
#loc81 = loc("CWE401_Memory_Leak__strdup_char_66a.c":59:5)
#loc82 = loc("CWE401_Memory_Leak__strdup_char_66a.c":59:12)
#loc83 = loc("CWE401_Memory_Leak__strdup_char_66a.c":60:15)
#loc84 = loc("CWE401_Memory_Leak__strdup_char_66a.c":60:5)
#loc85 = loc("CWE401_Memory_Leak__strdup_char_66a.c":61:20)
#loc86 = loc("CWE401_Memory_Leak__strdup_char_66a.c":61:15)
#loc87 = loc("CWE401_Memory_Leak__strdup_char_66a.c":61:5)
#loc88 = loc("CWE401_Memory_Leak__strdup_char_66a.c":62:53)
#loc89 = loc("CWE401_Memory_Leak__strdup_char_66a.c":62:5)
#loc90 = loc("CWE401_Memory_Leak__strdup_char_66a.c":66:1)
#loc91 = loc("CWE401_Memory_Leak__strdup_char_66a.c":66:72)
#loc92 = loc("CWE401_Memory_Leak__strdup_char_66a.c":68:1)
#loc93 = loc("CWE401_Memory_Leak__strdup_char_66a.c":82:1)
#loc94 = loc("CWE401_Memory_Leak__strdup_char_66a.c":70:5)
#loc95 = loc("CWE401_Memory_Leak__strdup_char_66a.c":70:12)
#loc96 = loc("CWE401_Memory_Leak__strdup_char_66a.c":71:5)
#loc97 = loc("CWE401_Memory_Leak__strdup_char_66a.c":71:23)
#loc98 = loc("CWE401_Memory_Leak__strdup_char_66a.c":72:12)
#loc99 = loc("CWE401_Memory_Leak__strdup_char_66a.c":72:5)
#loc100 = loc("CWE401_Memory_Leak__strdup_char_66a.c":73:5)
#loc101 = loc("CWE401_Memory_Leak__strdup_char_66a.c":79:5)
#loc102 = loc("CWE401_Memory_Leak__strdup_char_66a.c":76:16)
#loc103 = loc("CWE401_Memory_Leak__strdup_char_66a.c":76:23)
#loc104 = loc("CWE401_Memory_Leak__strdup_char_66a.c":76:9)
#loc105 = loc("CWE401_Memory_Leak__strdup_char_66a.c":76:31)
#loc106 = loc("CWE401_Memory_Leak__strdup_char_66a.c":78:19)
#loc107 = loc("CWE401_Memory_Leak__strdup_char_66a.c":78:9)
#loc108 = loc("CWE401_Memory_Leak__strdup_char_66a.c":80:20)
#loc109 = loc("CWE401_Memory_Leak__strdup_char_66a.c":80:15)
#loc110 = loc("CWE401_Memory_Leak__strdup_char_66a.c":80:5)
#loc111 = loc("CWE401_Memory_Leak__strdup_char_66a.c":81:53)
#loc112 = loc("CWE401_Memory_Leak__strdup_char_66a.c":81:5)
#loc113 = loc(fused[#loc1, #loc2])
#loc114 = loc(fused[#loc3, #loc4])
#loc115 = loc(fused[#loc5, #loc6])
#loc116 = loc(fused[#loc7, #loc8])
#loc117 = loc(fused[#loc9, #loc10])
#loc118 = loc(fused[#loc11, #loc12])
#loc119 = loc(fused[#loc13, #loc14])
#loc120 = loc(fused[#loc15, #loc16])
#loc121 = loc(fused[#loc18, #loc17])
#loc122 = loc(fused[#loc19, #loc20])
#loc123 = loc(fused[#loc23, #loc24])
#loc124 = loc(fused[#loc29, #loc27])
#loc125 = loc(fused[#loc32, #loc33])
#loc126 = loc(fused[#loc34, #loc35])
#loc127 = loc(fused[#loc36, #loc37])
#loc128 = loc(fused[#loc38, #loc39])
#loc129 = loc(fused[#loc40, #loc41])
#loc130 = loc(fused[#loc46, #loc47])
#loc133 = loc(fused[#loc57, #loc58])
#loc134 = loc(fused[#loc61, #loc62])
#loc135 = loc(fused[#loc65, #loc64])
#loc136 = loc(fused[#loc66, #loc67])
#loc137 = loc(fused[#loc69, #loc70])
#loc138 = loc(fused[#loc71, #loc72])
#loc139 = loc(fused[#loc73, #loc74])
#loc140 = loc(fused[#loc75, #loc76])
#loc141 = loc(fused[#loc78, #loc77])
#loc142 = loc(fused[#loc80, #loc79])
#loc143 = loc(fused[#loc87, #loc85])
#loc144 = loc(fused[#loc90, #loc91])
#loc145 = loc(fused[#loc92, #loc93])
#loc146 = loc(fused[#loc94, #loc95])
#loc147 = loc(fused[#loc96, #loc97])
#loc148 = loc(fused[#loc99, #loc98])
#loc149 = loc(fused[#loc100, #loc101])
#loc150 = loc(fused[#loc104, #loc105])
#loc151 = loc(fused[#loc110, #loc108])
