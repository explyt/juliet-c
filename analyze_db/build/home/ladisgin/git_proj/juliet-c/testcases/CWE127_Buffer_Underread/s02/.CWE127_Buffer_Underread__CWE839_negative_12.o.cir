!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc58 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":59:27)
#loc112 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":98:27)
#loc130 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":113:27)
#true = #cir.bool<true> : !cir.bool
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s02/CWE127_Buffer_Underread__CWE839_negative_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc199)
  cir.func private @printIntLine(!s32i) loc(#loc200)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc201)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ERROR: Array index is too big.\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc7)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc8)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_negative_12_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc203)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc204)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc205)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc17)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc18)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc206)
    cir.br ^bb1 loc(#loc207)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc208)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc208)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc22)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc22)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc209)
  ^bb2:  // pred: ^bb1
    %9 = cir.const #cir.int<5> : !s32i loc(#loc27)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc28)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc210)
    cir.br ^bb4 loc(#loc25)
  ^bb3:  // pred: ^bb1
    %11 = cir.const #cir.int<7> : !s32i loc(#loc30)
    cir.store %11, %2 : !s32i, !cir.ptr<!s32i> loc(#loc211)
    cir.br ^bb4 loc(#loc21)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc21)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc212)
  ^bb6:  // pred: ^bb5
    %12 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc213)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc213)
    %14 = cir.call %13() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc34)
    %15 = cir.cast(int_to_bool, %14 : !s32i), !cir.bool loc(#loc34)
    cir.brcond %15 ^bb7, ^bb15 loc(#loc214)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc215)
  ^bb8:  // pred: ^bb7
    %16 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc203)
    cir.store %16, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc203)
    cir.br ^bb9 loc(#loc216)
  ^bb9:  // pred: ^bb8
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc43)
    %18 = cir.const #cir.int<10> : !s32i loc(#loc44)
    %19 = cir.cmp(lt, %17, %18) : !s32i, !cir.bool loc(#loc217)
    cir.brcond %19 ^bb10, ^bb11 loc(#loc218)
  ^bb10:  // pred: ^bb9
    %20 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc49)
    %22 = cir.ptr_stride(%21 : !cir.ptr<!s32i>, %20 : !s32i), !cir.ptr<!s32i> loc(#loc49)
    %23 = cir.load %22 : !cir.ptr<!s32i>, !s32i loc(#loc49)
    cir.call @printIntLine(%23) : (!s32i) -> () loc(#loc50)
    cir.br ^bb12 loc(#loc46)
  ^bb11:  // pred: ^bb9
    %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc7)
    %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    cir.br ^bb12 loc(#loc42)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc42)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc40)
  ^bb14:  // pred: ^bb13
    cir.br ^bb31 loc(#loc37)
  ^bb15:  // pred: ^bb6
    cir.br ^bb16 loc(#loc219)
  ^bb16:  // pred: ^bb15
    %26 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc204)
    cir.store %26, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc204)
    cir.br ^bb17 loc(#loc220)
  ^bb17:  // pred: ^bb16
    %27 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc57)
    %29 = cir.cmp(ge, %27, %28) : !s32i, !cir.bool loc(#loc221)
    cir.brcond %29 ^bb18, ^bb23 loc(#loc58)
  ^bb18:  // pred: ^bb17
    %30 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc59)
    %31 = cir.const #cir.int<10> : !s32i loc(#loc60)
    %32 = cir.cmp(lt, %30, %31) : !s32i, !cir.bool loc(#loc222)
    cir.brcond %32 ^bb19, ^bb20 loc(#loc58)
  ^bb19:  // pred: ^bb18
    %33 = cir.const #true loc(#loc58)
    cir.br ^bb21(%33 : !cir.bool) loc(#loc58)
  ^bb20:  // pred: ^bb18
    %34 = cir.const #false loc(#loc58)
    cir.br ^bb21(%34 : !cir.bool) loc(#loc58)
  ^bb21(%35: !cir.bool loc("CWE127_Buffer_Underread__CWE839_negative_12.c":59:27)):  // 2 preds: ^bb19, ^bb20
    cir.br ^bb22 loc(#loc58)
  ^bb22:  // pred: ^bb21
    cir.br ^bb24(%35 : !cir.bool) loc(#loc58)
  ^bb23:  // pred: ^bb17
    %36 = cir.const #false loc(#loc58)
    cir.br ^bb24(%36 : !cir.bool) loc(#loc58)
  ^bb24(%37: !cir.bool loc("CWE127_Buffer_Underread__CWE839_negative_12.c":59:27)):  // 2 preds: ^bb22, ^bb23
    cir.br ^bb25 loc(#loc58)
  ^bb25:  // pred: ^bb24
    cir.brcond %37 ^bb26, ^bb27 loc(#loc223)
  ^bb26:  // pred: ^bb25
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc65)
    %39 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc66)
    %40 = cir.ptr_stride(%39 : !cir.ptr<!s32i>, %38 : !s32i), !cir.ptr<!s32i> loc(#loc66)
    %41 = cir.load %40 : !cir.ptr<!s32i>, !s32i loc(#loc66)
    cir.call @printIntLine(%41) : (!s32i) -> () loc(#loc67)
    cir.br ^bb28 loc(#loc63)
  ^bb27:  // pred: ^bb25
    %42 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc8)
    %43 = cir.cast(array_to_ptrdecay, %42 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc8)
    cir.call @printLine(%43) : (!cir.ptr<!s8i>) -> () loc(#loc68)
    cir.br ^bb28 loc(#loc55)
  ^bb28:  // 2 preds: ^bb26, ^bb27
    cir.br ^bb29 loc(#loc55)
  ^bb29:  // pred: ^bb28
    cir.br ^bb30 loc(#loc53)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc33)
  ^bb31:  // 2 preds: ^bb14, ^bb30
    cir.br ^bb32 loc(#loc33)
  ^bb32:  // pred: ^bb31
    cir.return loc(#loc10)
  } loc(#loc202)
  cir.func no_proto @CWE127_Buffer_Underread__CWE839_negative_12_good() extra(#fn_attr) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<!void ()>> loc(#loc225)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc71)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc226)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc73)
    cir.return loc(#loc70)
  } loc(#loc224)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc228)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc229)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc230)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc83)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc84)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc231)
    cir.br ^bb1 loc(#loc232)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc233)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc233)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc88)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc88)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc234)
  ^bb2:  // pred: ^bb1
    %9 = cir.const #cir.int<5> : !s32i loc(#loc93)
    %10 = cir.unary(minus, %9) : !s32i, !s32i loc(#loc94)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc235)
    cir.br ^bb4 loc(#loc91)
  ^bb3:  // pred: ^bb1
    %11 = cir.const #cir.int<5> : !s32i loc(#loc96)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc97)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc236)
    cir.br ^bb4 loc(#loc87)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc87)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc237)
  ^bb6:  // pred: ^bb5
    %13 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc238)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc238)
    %15 = cir.call %14() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc101)
    %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc101)
    cir.brcond %16 ^bb7, ^bb23 loc(#loc239)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc240)
  ^bb8:  // pred: ^bb7
    %17 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc228)
    cir.store %17, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc228)
    cir.br ^bb9 loc(#loc241)
  ^bb9:  // pred: ^bb8
    %18 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc110)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc111)
    %20 = cir.cmp(ge, %18, %19) : !s32i, !cir.bool loc(#loc242)
    cir.brcond %20 ^bb10, ^bb15 loc(#loc112)
  ^bb10:  // pred: ^bb9
    %21 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc113)
    %22 = cir.const #cir.int<10> : !s32i loc(#loc114)
    %23 = cir.cmp(lt, %21, %22) : !s32i, !cir.bool loc(#loc243)
    cir.brcond %23 ^bb11, ^bb12 loc(#loc112)
  ^bb11:  // pred: ^bb10
    %24 = cir.const #true loc(#loc112)
    cir.br ^bb13(%24 : !cir.bool) loc(#loc112)
  ^bb12:  // pred: ^bb10
    %25 = cir.const #false loc(#loc112)
    cir.br ^bb13(%25 : !cir.bool) loc(#loc112)
  ^bb13(%26: !cir.bool loc("CWE127_Buffer_Underread__CWE839_negative_12.c":98:27)):  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc112)
  ^bb14:  // pred: ^bb13
    cir.br ^bb16(%26 : !cir.bool) loc(#loc112)
  ^bb15:  // pred: ^bb9
    %27 = cir.const #false loc(#loc112)
    cir.br ^bb16(%27 : !cir.bool) loc(#loc112)
  ^bb16(%28: !cir.bool loc("CWE127_Buffer_Underread__CWE839_negative_12.c":98:27)):  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc112)
  ^bb17:  // pred: ^bb16
    cir.brcond %28 ^bb18, ^bb19 loc(#loc244)
  ^bb18:  // pred: ^bb17
    %29 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc119)
    %30 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc120)
    %31 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %29 : !s32i), !cir.ptr<!s32i> loc(#loc120)
    %32 = cir.load %31 : !cir.ptr<!s32i>, !s32i loc(#loc120)
    cir.call @printIntLine(%32) : (!s32i) -> () loc(#loc121)
    cir.br ^bb20 loc(#loc117)
  ^bb19:  // pred: ^bb17
    %33 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc122)
    %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc122)
    cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    cir.br ^bb20 loc(#loc109)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc109)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc107)
  ^bb22:  // pred: ^bb21
    cir.br ^bb39 loc(#loc104)
  ^bb23:  // pred: ^bb6
    cir.br ^bb24 loc(#loc245)
  ^bb24:  // pred: ^bb23
    %35 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc229)
    cir.store %35, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc229)
    cir.br ^bb25 loc(#loc246)
  ^bb25:  // pred: ^bb24
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc129)
    %38 = cir.cmp(ge, %36, %37) : !s32i, !cir.bool loc(#loc247)
    cir.brcond %38 ^bb26, ^bb31 loc(#loc130)
  ^bb26:  // pred: ^bb25
    %39 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc131)
    %40 = cir.const #cir.int<10> : !s32i loc(#loc132)
    %41 = cir.cmp(lt, %39, %40) : !s32i, !cir.bool loc(#loc248)
    cir.brcond %41 ^bb27, ^bb28 loc(#loc130)
  ^bb27:  // pred: ^bb26
    %42 = cir.const #true loc(#loc130)
    cir.br ^bb29(%42 : !cir.bool) loc(#loc130)
  ^bb28:  // pred: ^bb26
    %43 = cir.const #false loc(#loc130)
    cir.br ^bb29(%43 : !cir.bool) loc(#loc130)
  ^bb29(%44: !cir.bool loc("CWE127_Buffer_Underread__CWE839_negative_12.c":113:27)):  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc130)
  ^bb30:  // pred: ^bb29
    cir.br ^bb32(%44 : !cir.bool) loc(#loc130)
  ^bb31:  // pred: ^bb25
    %45 = cir.const #false loc(#loc130)
    cir.br ^bb32(%45 : !cir.bool) loc(#loc130)
  ^bb32(%46: !cir.bool loc("CWE127_Buffer_Underread__CWE839_negative_12.c":113:27)):  // 2 preds: ^bb30, ^bb31
    cir.br ^bb33 loc(#loc130)
  ^bb33:  // pred: ^bb32
    cir.brcond %46 ^bb34, ^bb35 loc(#loc249)
  ^bb34:  // pred: ^bb33
    %47 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc137)
    %48 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc138)
    %49 = cir.ptr_stride(%48 : !cir.ptr<!s32i>, %47 : !s32i), !cir.ptr<!s32i> loc(#loc138)
    %50 = cir.load %49 : !cir.ptr<!s32i>, !s32i loc(#loc138)
    cir.call @printIntLine(%50) : (!s32i) -> () loc(#loc139)
    cir.br ^bb36 loc(#loc135)
  ^bb35:  // pred: ^bb33
    %51 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc140)
    %52 = cir.cast(array_to_ptrdecay, %51 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc140)
    cir.call @printLine(%52) : (!cir.ptr<!s8i>) -> () loc(#loc141)
    cir.br ^bb36 loc(#loc127)
  ^bb36:  // 2 preds: ^bb34, ^bb35
    cir.br ^bb37 loc(#loc127)
  ^bb37:  // pred: ^bb36
    cir.br ^bb38 loc(#loc125)
  ^bb38:  // pred: ^bb37
    cir.br ^bb39 loc(#loc100)
  ^bb39:  // 2 preds: ^bb22, ^bb38
    cir.br ^bb40 loc(#loc100)
  ^bb40:  // pred: ^bb39
    cir.return loc(#loc76)
  } loc(#loc227)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc251)
    %1 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc252)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc253)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc150)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc151)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc254)
    cir.br ^bb1 loc(#loc255)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc256)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc256)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc155)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc155)
    cir.brcond %8 ^bb2, ^bb3 loc(#loc257)
  ^bb2:  // pred: ^bb1
    %9 = cir.const #cir.int<7> : !s32i loc(#loc160)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc258)
    cir.br ^bb4 loc(#loc158)
  ^bb3:  // pred: ^bb1
    %10 = cir.const #cir.int<7> : !s32i loc(#loc162)
    cir.store %10, %2 : !s32i, !cir.ptr<!s32i> loc(#loc259)
    cir.br ^bb4 loc(#loc154)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc154)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc260)
  ^bb6:  // pred: ^bb5
    %11 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc261)
    %12 = cir.cast(bitcast, %11 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc261)
    %13 = cir.call %12() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc166)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc166)
    cir.brcond %14 ^bb7, ^bb15 loc(#loc262)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc263)
  ^bb8:  // pred: ^bb7
    %15 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc251)
    cir.store %15, %0 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc251)
    cir.br ^bb9 loc(#loc264)
  ^bb9:  // pred: ^bb8
    %16 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    %17 = cir.const #cir.int<10> : !s32i loc(#loc176)
    %18 = cir.cmp(lt, %16, %17) : !s32i, !cir.bool loc(#loc265)
    cir.brcond %18 ^bb10, ^bb11 loc(#loc266)
  ^bb10:  // pred: ^bb9
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc180)
    %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc181)
    %21 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %19 : !s32i), !cir.ptr<!s32i> loc(#loc181)
    %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc181)
    cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc182)
    cir.br ^bb12 loc(#loc178)
  ^bb11:  // pred: ^bb9
    %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc183)
    %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc183)
    cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc184)
    cir.br ^bb12 loc(#loc174)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc174)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc172)
  ^bb14:  // pred: ^bb13
    cir.br ^bb23 loc(#loc169)
  ^bb15:  // pred: ^bb6
    cir.br ^bb16 loc(#loc267)
  ^bb16:  // pred: ^bb15
    %25 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc252)
    cir.store %25, %1 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc252)
    cir.br ^bb17 loc(#loc268)
  ^bb17:  // pred: ^bb16
    %26 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc189)
    %27 = cir.const #cir.int<10> : !s32i loc(#loc190)
    %28 = cir.cmp(lt, %26, %27) : !s32i, !cir.bool loc(#loc269)
    cir.brcond %28 ^bb18, ^bb19 loc(#loc270)
  ^bb18:  // pred: ^bb17
    %29 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc194)
    %30 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc195)
    %31 = cir.ptr_stride(%30 : !cir.ptr<!s32i>, %29 : !s32i), !cir.ptr<!s32i> loc(#loc195)
    %32 = cir.load %31 : !cir.ptr<!s32i>, !s32i loc(#loc195)
    cir.call @printIntLine(%32) : (!s32i) -> () loc(#loc196)
    cir.br ^bb20 loc(#loc192)
  ^bb19:  // pred: ^bb17
    %33 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc197)
    %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc197)
    cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc198)
    cir.br ^bb20 loc(#loc188)
  ^bb20:  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc188)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc186)
  ^bb22:  // pred: ^bb21
    cir.br ^bb23 loc(#loc165)
  ^bb23:  // 2 preds: ^bb14, ^bb22
    cir.br ^bb24 loc(#loc165)
  ^bb24:  // pred: ^bb23
    cir.return loc(#loc143)
  } loc(#loc250)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE127_Buffer_Underread/s02/CWE127_Buffer_Underread__CWE839_negative_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":50:27)
#loc8 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":65:27)
#loc9 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":22:1)
#loc10 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":69:1)
#loc11 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":41:13)
#loc12 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":41:34)
#loc13 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":57:13)
#loc14 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":57:34)
#loc15 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":24:5)
#loc16 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":24:9)
#loc17 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":26:13)
#loc18 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":26:12)
#loc19 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":26:5)
#loc20 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":27:5)
#loc21 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":37:5)
#loc22 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":27:8)
#loc23 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":27:33)
#loc24 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":28:5)
#loc25 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":31:5)
#loc26 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":33:5)
#loc27 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":30:17)
#loc28 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":30:16)
#loc29 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":30:9)
#loc30 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":36:16)
#loc31 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":36:9)
#loc32 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":38:5)
#loc33 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":68:5)
#loc34 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":38:8)
#loc35 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":38:33)
#loc36 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":39:5)
#loc37 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":53:5)
#loc38 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":55:5)
#loc39 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":40:9)
#loc40 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":52:9)
#loc41 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":44:13)
#loc42 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":51:13)
#loc43 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":44:17)
#loc44 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":44:24)
#loc45 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":45:13)
#loc46 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":47:13)
#loc47 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":49:13)
#loc48 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":46:37)
#loc49 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":46:30)
#loc50 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":46:17)
#loc51 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":50:17)
#loc52 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":56:9)
#loc53 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":67:9)
#loc54 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":59:13)
#loc55 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":66:13)
#loc56 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":59:17)
#loc57 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":59:25)
#loc59 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":59:30)
#loc60 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":59:38)
#loc61 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":59:40)
#loc62 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":60:13)
#loc63 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":62:13)
#loc64 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":64:13)
#loc65 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":61:37)
#loc66 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":61:30)
#loc67 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":61:17)
#loc68 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":65:17)
#loc69 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":179:1)
#loc70 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":183:1)
#loc71 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":181:5)
#loc72 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":181:13)
#loc73 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":182:5)
#loc74 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":182:13)
#loc75 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":78:1)
#loc76 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":123:1)
#loc77 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":96:13)
#loc78 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":96:34)
#loc79 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":111:13)
#loc80 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":111:34)
#loc81 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":80:5)
#loc82 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":80:9)
#loc83 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":82:13)
#loc84 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":82:12)
#loc85 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":82:5)
#loc86 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":83:5)
#loc87 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":92:5)
#loc88 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":83:8)
#loc89 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":83:33)
#loc90 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":84:5)
#loc91 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":87:5)
#loc92 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":89:5)
#loc93 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":86:17)
#loc94 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":86:16)
#loc95 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":86:9)
#loc96 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":91:17)
#loc97 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":91:16)
#loc98 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":91:9)
#loc99 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":93:5)
#loc100 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":122:5)
#loc101 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":93:8)
#loc102 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":93:33)
#loc103 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":94:5)
#loc104 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":107:5)
#loc105 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":109:5)
#loc106 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":95:9)
#loc107 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":106:9)
#loc108 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":98:13)
#loc109 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":105:13)
#loc110 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":98:17)
#loc111 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":98:25)
#loc113 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":98:30)
#loc114 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":98:38)
#loc115 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":98:40)
#loc116 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":99:13)
#loc117 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":101:13)
#loc118 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":103:13)
#loc119 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":100:37)
#loc120 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":100:30)
#loc121 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":100:17)
#loc122 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":104:27)
#loc123 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":104:17)
#loc124 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":110:9)
#loc125 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":121:9)
#loc126 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":113:13)
#loc127 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":120:13)
#loc128 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":113:17)
#loc129 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":113:25)
#loc131 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":113:30)
#loc132 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":113:38)
#loc133 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":113:40)
#loc134 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":114:13)
#loc135 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":116:13)
#loc136 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":118:13)
#loc137 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":115:37)
#loc138 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":115:30)
#loc139 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":115:17)
#loc140 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":119:27)
#loc141 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":119:17)
#loc142 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":128:1)
#loc143 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":177:1)
#loc144 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":148:13)
#loc145 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":148:34)
#loc146 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":164:13)
#loc147 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":164:34)
#loc148 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":130:5)
#loc149 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":130:9)
#loc150 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":132:13)
#loc151 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":132:12)
#loc152 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":132:5)
#loc153 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":133:5)
#loc154 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":144:5)
#loc155 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":133:8)
#loc156 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":133:33)
#loc157 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":134:5)
#loc158 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":138:5)
#loc159 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":140:5)
#loc160 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":137:16)
#loc161 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":137:9)
#loc162 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":143:16)
#loc163 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":143:9)
#loc164 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":145:5)
#loc165 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":176:5)
#loc166 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":145:8)
#loc167 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":145:33)
#loc168 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":146:5)
#loc169 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":160:5)
#loc170 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":162:5)
#loc171 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":147:9)
#loc172 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":159:9)
#loc173 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":151:13)
#loc174 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":158:13)
#loc175 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":151:17)
#loc176 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":151:24)
#loc177 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":152:13)
#loc178 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":154:13)
#loc179 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":156:13)
#loc180 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":153:37)
#loc181 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":153:30)
#loc182 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":153:17)
#loc183 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":157:27)
#loc184 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":157:17)
#loc185 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":163:9)
#loc186 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":175:9)
#loc187 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":167:13)
#loc188 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":174:13)
#loc189 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":167:17)
#loc190 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":167:24)
#loc191 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":168:13)
#loc192 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":170:13)
#loc193 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":172:13)
#loc194 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":169:37)
#loc195 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":169:30)
#loc196 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":169:17)
#loc197 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":173:27)
#loc198 = loc("CWE127_Buffer_Underread__CWE839_negative_12.c":173:17)
#loc199 = loc(fused[#loc1, #loc2])
#loc200 = loc(fused[#loc3, #loc4])
#loc201 = loc(fused[#loc5, #loc6])
#loc202 = loc(fused[#loc9, #loc10])
#loc203 = loc(fused[#loc11, #loc12])
#loc204 = loc(fused[#loc13, #loc14])
#loc205 = loc(fused[#loc15, #loc16])
#loc206 = loc(fused[#loc19, #loc17])
#loc207 = loc(fused[#loc20, #loc21])
#loc208 = loc(fused[#loc22, #loc23])
#loc209 = loc(fused[#loc24, #loc25, #loc26, #loc21])
#loc210 = loc(fused[#loc29, #loc27])
#loc211 = loc(fused[#loc31, #loc30])
#loc212 = loc(fused[#loc32, #loc33])
#loc213 = loc(fused[#loc34, #loc35])
#loc214 = loc(fused[#loc36, #loc37, #loc38, #loc33])
#loc215 = loc(fused[#loc39, #loc40])
#loc216 = loc(fused[#loc41, #loc42])
#loc217 = loc(fused[#loc43, #loc44])
#loc218 = loc(fused[#loc45, #loc46, #loc47, #loc42])
#loc219 = loc(fused[#loc52, #loc53])
#loc220 = loc(fused[#loc54, #loc55])
#loc221 = loc(fused[#loc56, #loc57])
#loc222 = loc(fused[#loc59, #loc61])
#loc223 = loc(fused[#loc62, #loc63, #loc64, #loc55])
#loc224 = loc(fused[#loc69, #loc70])
#loc225 = loc(fused[#loc71, #loc72])
#loc226 = loc(fused[#loc73, #loc74])
#loc227 = loc(fused[#loc75, #loc76])
#loc228 = loc(fused[#loc77, #loc78])
#loc229 = loc(fused[#loc79, #loc80])
#loc230 = loc(fused[#loc81, #loc82])
#loc231 = loc(fused[#loc85, #loc83])
#loc232 = loc(fused[#loc86, #loc87])
#loc233 = loc(fused[#loc88, #loc89])
#loc234 = loc(fused[#loc90, #loc91, #loc92, #loc87])
#loc235 = loc(fused[#loc95, #loc93])
#loc236 = loc(fused[#loc98, #loc96])
#loc237 = loc(fused[#loc99, #loc100])
#loc238 = loc(fused[#loc101, #loc102])
#loc239 = loc(fused[#loc103, #loc104, #loc105, #loc100])
#loc240 = loc(fused[#loc106, #loc107])
#loc241 = loc(fused[#loc108, #loc109])
#loc242 = loc(fused[#loc110, #loc111])
#loc243 = loc(fused[#loc113, #loc115])
#loc244 = loc(fused[#loc116, #loc117, #loc118, #loc109])
#loc245 = loc(fused[#loc124, #loc125])
#loc246 = loc(fused[#loc126, #loc127])
#loc247 = loc(fused[#loc128, #loc129])
#loc248 = loc(fused[#loc131, #loc133])
#loc249 = loc(fused[#loc134, #loc135, #loc136, #loc127])
#loc250 = loc(fused[#loc142, #loc143])
#loc251 = loc(fused[#loc144, #loc145])
#loc252 = loc(fused[#loc146, #loc147])
#loc253 = loc(fused[#loc148, #loc149])
#loc254 = loc(fused[#loc152, #loc150])
#loc255 = loc(fused[#loc153, #loc154])
#loc256 = loc(fused[#loc155, #loc156])
#loc257 = loc(fused[#loc157, #loc158, #loc159, #loc154])
#loc258 = loc(fused[#loc161, #loc160])
#loc259 = loc(fused[#loc163, #loc162])
#loc260 = loc(fused[#loc164, #loc165])
#loc261 = loc(fused[#loc166, #loc167])
#loc262 = loc(fused[#loc168, #loc169, #loc170, #loc165])
#loc263 = loc(fused[#loc171, #loc172])
#loc264 = loc(fused[#loc173, #loc174])
#loc265 = loc(fused[#loc175, #loc176])
#loc266 = loc(fused[#loc177, #loc178, #loc179, #loc174])
#loc267 = loc(fused[#loc185, #loc186])
#loc268 = loc(fused[#loc187, #loc188])
#loc269 = loc(fused[#loc189, #loc190])
#loc270 = loc(fused[#loc191, #loc192, #loc193, #loc188])
