!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc5 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":29:62)
#loc6 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":29:120)
#loc24 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":45:66)
#loc25 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":45:124)
#loc45 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":57:66)
#loc46 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":57:124)
!ty__CWE190_Integer_Overflow__int_fgets_multiply_67_structType = !cir.struct<struct "_CWE190_Integer_Overflow__int_fgets_multiply_67_structType" {!s32i}>
#loc74 = loc(fused[#loc5, #loc6])
#loc81 = loc(fused[#loc24, #loc25])
#loc89 = loc(fused[#loc45, #loc46])
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_multiply_67b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @printIntLine(!s32i) loc(#loc72)
  cir.func  @CWE190_Integer_Overflow__int_fgets_multiply_67b_badSink(%arg0: !ty__CWE190_Integer_Overflow__int_fgets_multiply_67_structType loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !ty__CWE190_Integer_Overflow__int_fgets_multiply_67_structType, !cir.ptr<!ty__CWE190_Integer_Overflow__int_fgets_multiply_67_structType>, ["myStruct", init] {alignment = 4 : i64} loc(#loc74)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc75)
    cir.store %arg0, %0 : !ty__CWE190_Integer_Overflow__int_fgets_multiply_67_structType, !cir.ptr<!ty__CWE190_Integer_Overflow__int_fgets_multiply_67_structType> loc(#loc9)
    %2 = cir.get_member %0[0] {name = "structFirst"} : !cir.ptr<!ty__CWE190_Integer_Overflow__int_fgets_multiply_67_structType> -> !cir.ptr<!s32i> loc(#loc10)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc8)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc75)
    cir.scope {
      %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc13)
      %5 = cir.const #cir.int<0> : !s32i loc(#loc14)
      %6 = cir.cmp(gt, %4, %5) : !s32i, !s32i loc(#loc77)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc15)
      cir.if %7 {
        %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc79)
        %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc19)
        %10 = cir.const #cir.int<2> : !s32i loc(#loc18)
        %11 = cir.binop(mul, %9, %10) nsw : !s32i loc(#loc19)
        cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc79)
        %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc20)
        cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc21)
      } loc(#loc78)
    } loc(#loc76)
    cir.return loc(#loc4)
  } loc(#loc73)
  cir.func  @CWE190_Integer_Overflow__int_fgets_multiply_67b_goodG2BSink(%arg0: !ty__CWE190_Integer_Overflow__int_fgets_multiply_67_structType loc(fused[#loc24, #loc25])) extra(#fn_attr) {
    %0 = cir.alloca !ty__CWE190_Integer_Overflow__int_fgets_multiply_67_structType, !cir.ptr<!ty__CWE190_Integer_Overflow__int_fgets_multiply_67_structType>, ["myStruct", init] {alignment = 4 : i64} loc(#loc81)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc82)
    cir.store %arg0, %0 : !ty__CWE190_Integer_Overflow__int_fgets_multiply_67_structType, !cir.ptr<!ty__CWE190_Integer_Overflow__int_fgets_multiply_67_structType> loc(#loc28)
    %2 = cir.get_member %0[0] {name = "structFirst"} : !cir.ptr<!ty__CWE190_Integer_Overflow__int_fgets_multiply_67_structType> -> !cir.ptr<!s32i> loc(#loc10)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc27)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc82)
    cir.scope {
      %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc31)
      %5 = cir.const #cir.int<0> : !s32i loc(#loc32)
      %6 = cir.cmp(gt, %4, %5) : !s32i, !s32i loc(#loc84)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc33)
      cir.if %7 {
        %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc86)
        %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc37)
        %10 = cir.const #cir.int<2> : !s32i loc(#loc36)
        %11 = cir.binop(mul, %9, %10) nsw : !s32i loc(#loc37)
        cir.store %11, %8 : !s32i, !cir.ptr<!s32i> loc(#loc86)
        %12 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc38)
        cir.call @printIntLine(%12) : (!s32i) -> () loc(#loc39)
      } loc(#loc85)
    } loc(#loc83)
    cir.return loc(#loc23)
  } loc(#loc80)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc87)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc42)
  cir.func  @CWE190_Integer_Overflow__int_fgets_multiply_67b_goodB2GSink(%arg0: !ty__CWE190_Integer_Overflow__int_fgets_multiply_67_structType loc(fused[#loc45, #loc46])) extra(#fn_attr) {
    %0 = cir.alloca !ty__CWE190_Integer_Overflow__int_fgets_multiply_67_structType, !cir.ptr<!ty__CWE190_Integer_Overflow__int_fgets_multiply_67_structType>, ["myStruct", init] {alignment = 4 : i64} loc(#loc89)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc90)
    cir.store %arg0, %0 : !ty__CWE190_Integer_Overflow__int_fgets_multiply_67_structType, !cir.ptr<!ty__CWE190_Integer_Overflow__int_fgets_multiply_67_structType> loc(#loc49)
    %2 = cir.get_member %0[0] {name = "structFirst"} : !cir.ptr<!ty__CWE190_Integer_Overflow__int_fgets_multiply_67_structType> -> !cir.ptr<!s32i> loc(#loc10)
    %3 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc48)
    cir.store %3, %1 : !s32i, !cir.ptr<!s32i> loc(#loc90)
    cir.scope {
      %4 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc52)
      %5 = cir.const #cir.int<0> : !s32i loc(#loc53)
      %6 = cir.cmp(gt, %4, %5) : !s32i, !s32i loc(#loc92)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc54)
      cir.if %7 {
        cir.scope {
          %8 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc58)
          %9 = cir.const #cir.int<2147483647> : !s32i loc(#loc59)
          %10 = cir.const #cir.int<2> : !s32i loc(#loc60)
          %11 = cir.binop(div, %9, %10) : !s32i loc(#loc95)
          %12 = cir.cmp(lt, %8, %11) : !s32i, !s32i loc(#loc96)
          %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc62)
          cir.if %13 {
            %14 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc98)
            %15 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc68)
            %16 = cir.const #cir.int<2> : !s32i loc(#loc67)
            %17 = cir.binop(mul, %15, %16) nsw : !s32i loc(#loc68)
            cir.store %17, %14 : !s32i, !cir.ptr<!s32i> loc(#loc98)
            %18 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc69)
            cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc70)
          } else {
            %14 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc42)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc42)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc71)
          } loc(#loc97)
        } loc(#loc94)
      } loc(#loc93)
    } loc(#loc91)
    cir.return loc(#loc44)
  } loc(#loc88)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_multiply_67b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc3 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":29:1)
#loc4 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":38:1)
#loc7 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":31:5)
#loc8 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":31:25)
#loc9 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":30:1)
#loc10 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":24:9)
#loc11 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":32:5)
#loc12 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":37:5)
#loc13 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":32:8)
#loc14 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":32:15)
#loc15 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":32:13)
#loc16 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":33:5)
#loc17 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":35:9)
#loc18 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":35:29)
#loc19 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":35:22)
#loc20 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":36:22)
#loc21 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":36:9)
#loc22 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":45:1)
#loc23 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":54:1)
#loc26 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":47:5)
#loc27 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":47:25)
#loc28 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":46:1)
#loc29 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":48:5)
#loc30 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":53:5)
#loc31 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":48:8)
#loc32 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":48:15)
#loc33 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":48:13)
#loc34 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":49:5)
#loc35 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":51:9)
#loc36 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":51:29)
#loc37 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":51:22)
#loc38 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":52:22)
#loc39 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":52:9)
#loc40 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc41 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc42 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":70:23)
#loc43 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":57:1)
#loc44 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":73:1)
#loc47 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":59:5)
#loc48 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":59:25)
#loc49 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":58:1)
#loc50 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":60:5)
#loc51 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":72:5)
#loc52 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":60:8)
#loc53 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":60:15)
#loc54 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":60:13)
#loc55 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":61:5)
#loc56 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":63:9)
#loc57 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":71:9)
#loc58 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":63:13)
#loc59 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":63:21)
#loc60 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":63:29)
#loc61 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":63:30)
#loc62 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":63:18)
#loc63 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":64:9)
#loc64 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":67:9)
#loc65 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":69:9)
#loc66 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":65:13)
#loc67 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":65:33)
#loc68 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":65:26)
#loc69 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":66:26)
#loc70 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":66:13)
#loc71 = loc("CWE190_Integer_Overflow__int_fgets_multiply_67b.c":70:13)
#loc72 = loc(fused[#loc1, #loc2])
#loc73 = loc(fused[#loc3, #loc4])
#loc75 = loc(fused[#loc7, #loc8])
#loc76 = loc(fused[#loc11, #loc12])
#loc77 = loc(fused[#loc13, #loc14])
#loc78 = loc(fused[#loc16, #loc12])
#loc79 = loc(fused[#loc17, #loc18])
#loc80 = loc(fused[#loc22, #loc23])
#loc82 = loc(fused[#loc26, #loc27])
#loc83 = loc(fused[#loc29, #loc30])
#loc84 = loc(fused[#loc31, #loc32])
#loc85 = loc(fused[#loc34, #loc30])
#loc86 = loc(fused[#loc35, #loc36])
#loc87 = loc(fused[#loc40, #loc41])
#loc88 = loc(fused[#loc43, #loc44])
#loc90 = loc(fused[#loc47, #loc48])
#loc91 = loc(fused[#loc50, #loc51])
#loc92 = loc(fused[#loc52, #loc53])
#loc93 = loc(fused[#loc55, #loc51])
#loc94 = loc(fused[#loc56, #loc57])
#loc95 = loc(fused[#loc59, #loc60])
#loc96 = loc(fused[#loc58, #loc61])
#loc97 = loc(fused[#loc63, #loc64, #loc65, #loc57])
#loc98 = loc(fused[#loc66, #loc67])
