!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func internal private @_ZL17staticReturnsTruev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc2)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc3)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc258)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc258)
    cir.return %2 : !s32i loc(#loc258)
  } loc(#loc257)
  cir.func private @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc259)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc260)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%zu\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc9)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc261)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc262)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"hello\00" : !cir.array<!s8i x 6>> : !cir.array<!s8i x 6> {alignment = 1 : i64} loc(#loc14)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc263)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Input is less than the length of the source string\00" : !cir.array<!s8i x 51>> : !cir.array<!s8i x 51> {alignment = 1 : i64} loc(#loc17)
  cir.func @_ZN49CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_083badEv() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc265)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc22)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc266)
    cir.scope {
      %3 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc26)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc268)
      cir.if %4 {
        %5 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc29)
        %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc260)
        %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc30)
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc9)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc9)
        %10 = cir.call @__isoc23_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u64i>) -> !s32i loc(#loc29)
      } loc(#loc269)
    } loc(#loc267)
    cir.scope {
      %3 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc33)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc271)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc274)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc42)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc276)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc277)
            cir.if %8 {
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc48)
              %10 = cir.call @_Znam(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc49)
              %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc279)
              cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc280)
              %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc53)
              %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
              %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc14)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc14)
              %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc53)
              %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc55)
              cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc56)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc57)
              cir.delete.array %18 : <!s8i> loc(#loc57)
            } else {
              %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc17)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc17)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc58)
            } loc(#loc278)
          } loc(#loc275)
        } loc(#loc273)
      } loc(#loc272)
    } loc(#loc270)
    cir.return loc(#loc19)
  } loc(#loc264)
  cir.func internal private @_ZL18staticReturnsFalsev() -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc60)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc61)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc282)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc282)
    cir.return %2 : !s32i loc(#loc282)
  } loc(#loc281)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc63)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Input is less than the length of the source string or too large\00" : !cir.array<!s8i x 64>> : !cir.array<!s8i x 64> {alignment = 1 : i64} loc(#loc64)
  cir.func internal private @_ZN49CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08L8goodB2G1Ev() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc284)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc69)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc69)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc285)
    cir.scope {
      %3 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc73)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc287)
      cir.if %4 {
        %5 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc76)
        %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc260)
        %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc77)
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc78)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc78)
        %10 = cir.call @__isoc23_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u64i>) -> !s32i loc(#loc76)
      } loc(#loc288)
    } loc(#loc286)
    cir.scope {
      %3 = cir.call @_ZL18staticReturnsFalsev() : () -> !s32i loc(#loc81)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc290)
      cir.if %4 {
        %5 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc63)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc63)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc86)
      } else {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc293)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc93)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc295)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc296)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc97)
              %11 = cir.const #cir.int<100> : !s32i loc(#loc98)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc98)
              %13 = cir.cmp(lt, %10, %12) : !u64i, !cir.bool loc(#loc297)
              %14 = cir.ternary(%13, true {
                %15 = cir.const #true loc(#loc96)
                cir.yield %15 : !cir.bool loc(#loc96)
              }, false {
                %15 = cir.const #false loc(#loc96)
                cir.yield %15 : !cir.bool loc(#loc96)
              }) : (!cir.bool) -> !cir.bool loc(#loc96)
              cir.yield %14 : !cir.bool loc(#loc96)
            }, false {
              %10 = cir.const #false loc(#loc96)
              cir.yield %10 : !cir.bool loc(#loc96)
            }) : (!cir.bool) -> !cir.bool loc(#loc96)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc102)
              %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc103)
              %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc299)
              cir.store %12, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc300)
              %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc107)
              %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
              %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc109)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc109)
              %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc107)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc111)
              %19 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc112)
              cir.delete.array %19 : <!s8i> loc(#loc112)
            } else {
              %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc64)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc64)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc113)
            } loc(#loc298)
          } loc(#loc294)
        } loc(#loc292)
      } loc(#loc291)
    } loc(#loc289)
    cir.return loc(#loc66)
  } loc(#loc283)
  cir.func internal private @_ZN49CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08L8goodB2G2Ev() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc302)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc118)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc118)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc303)
    cir.scope {
      %3 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc122)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc305)
      cir.if %4 {
        %5 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc125)
        %6 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc260)
        %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc126)
        %8 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc127)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc127)
        %10 = cir.call @__isoc23_fscanf(%7, %9, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!u64i>) -> !s32i loc(#loc125)
      } loc(#loc306)
    } loc(#loc304)
    cir.scope {
      %3 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc130)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc308)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc311)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc139)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc313)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc314)
            %9 = cir.ternary(%8, true {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc143)
              %11 = cir.const #cir.int<100> : !s32i loc(#loc144)
              %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc144)
              %13 = cir.cmp(lt, %10, %12) : !u64i, !cir.bool loc(#loc315)
              %14 = cir.ternary(%13, true {
                %15 = cir.const #true loc(#loc142)
                cir.yield %15 : !cir.bool loc(#loc142)
              }, false {
                %15 = cir.const #false loc(#loc142)
                cir.yield %15 : !cir.bool loc(#loc142)
              }) : (!cir.bool) -> !cir.bool loc(#loc142)
              cir.yield %14 : !cir.bool loc(#loc142)
            }, false {
              %10 = cir.const #false loc(#loc142)
              cir.yield %10 : !cir.bool loc(#loc142)
            }) : (!cir.bool) -> !cir.bool loc(#loc142)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc148)
              %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc149)
              %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc317)
              cir.store %12, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc318)
              %13 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc153)
              %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
              %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc155)
              %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc155)
              %17 = cir.call @strcpy(%14, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc153)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc156)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc157)
              %19 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
              cir.delete.array %19 : <!s8i> loc(#loc158)
            } else {
              %10 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 64>> loc(#loc159)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 64>>), !cir.ptr<!s8i> loc(#loc159)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc160)
            } loc(#loc316)
          } loc(#loc312)
        } loc(#loc310)
      } loc(#loc309)
    } loc(#loc307)
    cir.return loc(#loc115)
  } loc(#loc301)
  cir.func internal private @_ZN49CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08L8goodG2B1Ev() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc320)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc165)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc165)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc321)
    cir.scope {
      %3 = cir.call @_ZL18staticReturnsFalsev() : () -> !s32i loc(#loc169)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc323)
      cir.if %4 {
        %5 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc174)
        %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc174)
        cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc175)
      } else {
        %5 = cir.const #cir.int<20> : !s32i loc(#loc176)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc176)
        cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc325)
      } loc(#loc324)
    } loc(#loc322)
    cir.scope {
      %3 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc180)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc327)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc330)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc189)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc332)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc333)
            cir.if %8 {
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc195)
              %10 = cir.call @_Znam(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc196)
              %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc335)
              cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc336)
              %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc200)
              %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc201)
              %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc202)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc202)
              %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc200)
              %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc203)
              cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc204)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc205)
              cir.delete.array %18 : <!s8i> loc(#loc205)
            } else {
              %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc206)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc206)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc207)
            } loc(#loc334)
          } loc(#loc331)
        } loc(#loc329)
      } loc(#loc328)
    } loc(#loc326)
    cir.return loc(#loc162)
  } loc(#loc319)
  cir.func internal private @_ZN49CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08L8goodG2B2Ev() extra(#fn_attr) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc338)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc212)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc212)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc339)
    cir.scope {
      %3 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc216)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc341)
      cir.if %4 {
        %5 = cir.const #cir.int<20> : !s32i loc(#loc219)
        %6 = cir.cast(integral, %5 : !s32i), !u64i loc(#loc219)
        cir.store %6, %0 : !u64i, !cir.ptr<!u64i> loc(#loc343)
      } loc(#loc342)
    } loc(#loc340)
    cir.scope {
      %3 = cir.call @_ZL17staticReturnsTruev() : () -> !s32i loc(#loc223)
      %4 = cir.cast(int_to_bool, %3 : !s32i), !cir.bool loc(#loc345)
      cir.if %4 {
        cir.scope {
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["myString"] {alignment = 8 : i64} loc(#loc348)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc232)
            %7 = cir.const #cir.int<5> : !u64i loc(#loc350)
            %8 = cir.cmp(gt, %6, %7) : !u64i, !cir.bool loc(#loc351)
            cir.if %8 {
              %9 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc238)
              %10 = cir.call @_Znam(%9) : (!u64i) -> !cir.ptr<!void> loc(#loc239)
              %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc353)
              cir.store %11, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc354)
              %12 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc243)
              %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc244)
              %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 6>> loc(#loc245)
              %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 6>>), !cir.ptr<!s8i> loc(#loc245)
              %16 = cir.call @strcpy(%13, %15) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc243)
              %17 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc246)
              cir.call @printLine(%17) : (!cir.ptr<!s8i>) -> () loc(#loc247)
              %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc248)
              cir.delete.array %18 : <!s8i> loc(#loc248)
            } else {
              %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 51>> loc(#loc249)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 51>>), !cir.ptr<!s8i> loc(#loc249)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc250)
            } loc(#loc352)
          } loc(#loc349)
        } loc(#loc347)
      } loc(#loc346)
    } loc(#loc344)
    cir.return loc(#loc209)
  } loc(#loc337)
  cir.func @_ZN49CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_084goodEv() extra(#fn_attr) {
    cir.call @_ZN49CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08L8goodB2G1Ev() : () -> () loc(#loc253)
    cir.call @_ZN49CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08L8goodB2G2Ev() : () -> () loc(#loc254)
    cir.call @_ZN49CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08L8goodG2B1Ev() : () -> () loc(#loc255)
    cir.call @_ZN49CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08L8goodG2B2Ev() : () -> () loc(#loc256)
    cir.return loc(#loc252)
  } loc(#loc355)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":0:0)
#loc1 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":29:1)
#loc2 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":32:1)
#loc3 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":31:12)
#loc4 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":31:5)
#loc5 = loc("/usr/include/stdio.h":442:1)
#loc6 = loc("/usr/include/stdio.h":444:33)
#loc7 = loc("/usr/include/stdio.h":149:1)
#loc8 = loc("/usr/include/stdio.h":149:14)
#loc9 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":52:23)
#loc10 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc11 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc12 = loc("/usr/include/string.h":141:1)
#loc13 = loc("/usr/include/string.h":142:14)
#loc14 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":65:34)
#loc15 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc16 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":71:27)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":44:1)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":75:1)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":46:5)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":46:12)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":48:12)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":48:5)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":49:5)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":53:5)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":49:8)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":49:26)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":50:5)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":52:9)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":52:16)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":54:5)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":74:5)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":54:8)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":54:26)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":55:5)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":56:9)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":73:9)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":57:13)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":57:20)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":61:13)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":72:13)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":61:17)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":61:24)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":61:43)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":62:13)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":68:13)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":70:13)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":63:37)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":44:6)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":63:28)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":63:41)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":63:17)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":65:17)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":65:24)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":66:27)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":66:17)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":67:27)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":71:17)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":34:1)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":37:1)
#loc61 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":36:12)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":36:5)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":95:19)
#loc64 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":114:27)
#loc65 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":82:1)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":118:1)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":84:5)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":84:12)
#loc69 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":86:12)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":86:5)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":87:5)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":91:5)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":87:8)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":87:26)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":88:5)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":90:9)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":90:16)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":90:23)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":92:5)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":117:5)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":92:8)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":92:27)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":93:5)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":96:5)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":98:5)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":95:9)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":99:9)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":116:9)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":100:13)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":100:20)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":104:13)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":115:13)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":104:17)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":104:24)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":104:43)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":104:45)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":104:48)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":104:55)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":105:13)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":111:13)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":113:13)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":106:37)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":82:13)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":106:28)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":106:41)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":106:17)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":108:17)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":108:24)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":108:34)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":109:27)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":109:17)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":110:27)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":114:17)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":121:1)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":152:1)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":123:5)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":123:12)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":125:12)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":125:5)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":126:5)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":130:5)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":126:8)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":126:26)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":127:5)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":129:9)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":129:16)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":129:23)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":131:5)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":151:5)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":131:8)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":131:26)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":132:5)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":133:9)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":150:9)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":134:13)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":134:20)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":138:13)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":149:13)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":138:17)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":138:24)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":138:43)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":138:45)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":138:48)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":138:55)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":139:13)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":145:13)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":147:13)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":140:37)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":121:13)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":140:28)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":140:41)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":140:17)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":142:17)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":142:24)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":142:34)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":143:27)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":143:17)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":144:27)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":148:27)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":148:17)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":155:1)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":191:1)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":157:5)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":157:12)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":159:12)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":159:5)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":160:5)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":169:5)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":160:8)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":160:27)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":161:5)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":164:5)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":166:5)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":163:19)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":163:9)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":168:16)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":168:9)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":170:5)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":190:5)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":170:8)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":170:26)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":171:5)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":172:9)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":189:9)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":173:13)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":173:20)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":177:13)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":188:13)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":177:17)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":177:24)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":177:43)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":178:13)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":184:13)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":186:13)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":179:37)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":155:13)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":179:28)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":179:41)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":179:17)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":181:17)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":181:24)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":181:34)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":182:27)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":182:17)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":183:27)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":187:27)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":187:17)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":194:1)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":225:1)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":196:5)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":196:12)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":198:12)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":198:5)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":199:5)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":203:5)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":199:8)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":199:26)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":200:5)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":202:16)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":202:9)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":204:5)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":224:5)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":204:8)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":204:26)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":205:5)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":206:9)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":223:9)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":207:13)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":207:20)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":211:13)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":222:13)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":211:17)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":211:24)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":211:43)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":212:13)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":218:13)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":220:13)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":213:37)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":194:13)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":213:28)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":213:41)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":213:17)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":215:17)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":215:24)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":215:34)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":216:27)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":216:17)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":217:27)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":221:27)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":221:17)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":227:1)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":233:1)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":229:5)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":230:5)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":231:5)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_fscanf_08.cpp":232:5)
#loc257 = loc(fused[#loc1, #loc2])
#loc258 = loc(fused[#loc4, #loc3])
#loc259 = loc(fused[#loc5, #loc6])
#loc260 = loc(fused[#loc7, #loc8])
#loc261 = loc(fused[#loc10, #loc11])
#loc262 = loc(fused[#loc12, #loc13])
#loc263 = loc(fused[#loc15, #loc16])
#loc264 = loc(fused[#loc18, #loc19])
#loc265 = loc(fused[#loc20, #loc21])
#loc266 = loc(fused[#loc23, #loc22])
#loc267 = loc(fused[#loc24, #loc25])
#loc268 = loc(fused[#loc26, #loc27])
#loc269 = loc(fused[#loc28, #loc25])
#loc270 = loc(fused[#loc31, #loc32])
#loc271 = loc(fused[#loc33, #loc34])
#loc272 = loc(fused[#loc35, #loc32])
#loc273 = loc(fused[#loc36, #loc37])
#loc274 = loc(fused[#loc38, #loc39])
#loc275 = loc(fused[#loc40, #loc41])
#loc276 = loc(fused[#loc43, #loc44])
#loc277 = loc(fused[#loc42, #loc44])
#loc278 = loc(fused[#loc45, #loc46, #loc47, #loc41])
#loc279 = loc(fused[#loc50, #loc51])
#loc280 = loc(fused[#loc52, #loc51])
#loc281 = loc(fused[#loc59, #loc60])
#loc282 = loc(fused[#loc62, #loc61])
#loc283 = loc(fused[#loc65, #loc66])
#loc284 = loc(fused[#loc67, #loc68])
#loc285 = loc(fused[#loc70, #loc69])
#loc286 = loc(fused[#loc71, #loc72])
#loc287 = loc(fused[#loc73, #loc74])
#loc288 = loc(fused[#loc75, #loc72])
#loc289 = loc(fused[#loc79, #loc80])
#loc290 = loc(fused[#loc81, #loc82])
#loc291 = loc(fused[#loc83, #loc84, #loc85, #loc80])
#loc292 = loc(fused[#loc87, #loc88])
#loc293 = loc(fused[#loc89, #loc90])
#loc294 = loc(fused[#loc91, #loc92])
#loc295 = loc(fused[#loc94, #loc95])
#loc296 = loc(fused[#loc93, #loc95])
#loc297 = loc(fused[#loc97, #loc98])
#loc298 = loc(fused[#loc99, #loc100, #loc101, #loc92])
#loc299 = loc(fused[#loc104, #loc105])
#loc300 = loc(fused[#loc106, #loc105])
#loc301 = loc(fused[#loc114, #loc115])
#loc302 = loc(fused[#loc116, #loc117])
#loc303 = loc(fused[#loc119, #loc118])
#loc304 = loc(fused[#loc120, #loc121])
#loc305 = loc(fused[#loc122, #loc123])
#loc306 = loc(fused[#loc124, #loc121])
#loc307 = loc(fused[#loc128, #loc129])
#loc308 = loc(fused[#loc130, #loc131])
#loc309 = loc(fused[#loc132, #loc129])
#loc310 = loc(fused[#loc133, #loc134])
#loc311 = loc(fused[#loc135, #loc136])
#loc312 = loc(fused[#loc137, #loc138])
#loc313 = loc(fused[#loc140, #loc141])
#loc314 = loc(fused[#loc139, #loc141])
#loc315 = loc(fused[#loc143, #loc144])
#loc316 = loc(fused[#loc145, #loc146, #loc147, #loc138])
#loc317 = loc(fused[#loc150, #loc151])
#loc318 = loc(fused[#loc152, #loc151])
#loc319 = loc(fused[#loc161, #loc162])
#loc320 = loc(fused[#loc163, #loc164])
#loc321 = loc(fused[#loc166, #loc165])
#loc322 = loc(fused[#loc167, #loc168])
#loc323 = loc(fused[#loc169, #loc170])
#loc324 = loc(fused[#loc171, #loc172, #loc173, #loc168])
#loc325 = loc(fused[#loc177, #loc176])
#loc326 = loc(fused[#loc178, #loc179])
#loc327 = loc(fused[#loc180, #loc181])
#loc328 = loc(fused[#loc182, #loc179])
#loc329 = loc(fused[#loc183, #loc184])
#loc330 = loc(fused[#loc185, #loc186])
#loc331 = loc(fused[#loc187, #loc188])
#loc332 = loc(fused[#loc190, #loc191])
#loc333 = loc(fused[#loc189, #loc191])
#loc334 = loc(fused[#loc192, #loc193, #loc194, #loc188])
#loc335 = loc(fused[#loc197, #loc198])
#loc336 = loc(fused[#loc199, #loc198])
#loc337 = loc(fused[#loc208, #loc209])
#loc338 = loc(fused[#loc210, #loc211])
#loc339 = loc(fused[#loc213, #loc212])
#loc340 = loc(fused[#loc214, #loc215])
#loc341 = loc(fused[#loc216, #loc217])
#loc342 = loc(fused[#loc218, #loc215])
#loc343 = loc(fused[#loc220, #loc219])
#loc344 = loc(fused[#loc221, #loc222])
#loc345 = loc(fused[#loc223, #loc224])
#loc346 = loc(fused[#loc225, #loc222])
#loc347 = loc(fused[#loc226, #loc227])
#loc348 = loc(fused[#loc228, #loc229])
#loc349 = loc(fused[#loc230, #loc231])
#loc350 = loc(fused[#loc233, #loc234])
#loc351 = loc(fused[#loc232, #loc234])
#loc352 = loc(fused[#loc235, #loc236, #loc237, #loc231])
#loc353 = loc(fused[#loc240, #loc241])
#loc354 = loc(fused[#loc242, #loc241])
#loc355 = loc(fused[#loc251, #loc252])
