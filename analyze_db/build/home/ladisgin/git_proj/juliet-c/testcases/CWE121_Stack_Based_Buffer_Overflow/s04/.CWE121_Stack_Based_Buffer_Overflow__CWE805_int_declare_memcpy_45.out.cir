!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":88:10)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":88:14)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":88:20)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":88:32)
#loc121 = loc(fused[#loc33, #loc34])
#loc122 = loc(fused[#loc35, #loc36])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45_badData = #cir.ptr<null> : !cir.ptr<!s32i> {alignment = 8 : i64} loc(#loc107)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc109)
    %1 = cir.alloca !cir.array<!s32i x 50>, !cir.ptr<!cir.array<!s32i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc110)
    %2 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc111)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s32i x 50>>), !cir.ptr<!s32i> loc(#loc11)
    cir.store %3, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc112)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc13)
    %5 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45_badData : !cir.ptr<!cir.ptr<!s32i>> loc(#loc107)
    cir.store %4, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc113)
    %6 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc114)
    cir.call %6() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc15)
    cir.return loc(#loc4)
  } loc(#loc108)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc116)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc19)
    cir.return loc(#loc18)
  } loc(#loc115)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc117)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc118)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc119)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc27)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc28)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc29)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc30)
  cir.func @main(%arg0: !s32i loc(fused[#loc33, #loc34]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc35, #loc36])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc121)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc122)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc32)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc37)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc37)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc38)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc39)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc39)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc40)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc27)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc27)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc41)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45_good : !cir.ptr<!cir.func<!void ()>> loc(#loc123)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45_good() : () -> () loc(#loc42)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc28)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc28)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc44)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc29)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc29)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc124)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45_bad() : () -> () loc(#loc46)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc30)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc30)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc49)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc125)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc125)
    cir.return %17 : !s32i loc(#loc125)
  } loc(#loc120)
  cir.func private @printIntLine(!s32i) loc(#loc126)
  cir.func no_proto internal private @badSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc128)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc129)
    %2 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45_badData : !cir.ptr<!cir.ptr<!s32i>> loc(#loc107)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc58)
    cir.store %3, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc129)
    cir.br ^bb1 loc(#loc130)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s32i x 100> loc(#loc128)
    cir.store %4, %0 : !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>> loc(#loc128)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc61)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc61)
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc62)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc62)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc63)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc63)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc131)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc132)
    cir.libc.memcpy %12 bytes from %8 to %6 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc133)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc68)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc69)
    %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc70)
    %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc68)
    cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc71)
    cir.br ^bb2 loc(#loc60)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc54)
  } loc(#loc127)
  cir.global "private" internal dsolocal @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45_goodG2BData = #cir.ptr<null> : !cir.ptr<!s32i> {alignment = 8 : i64} loc(#loc134)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc136)
    %1 = cir.alloca !cir.array<!s32i x 50>, !cir.ptr<!cir.array<!s32i x 50>>, ["dataBadBuffer"] {alignment = 16 : i64} loc(#loc137)
    %2 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["dataGoodBuffer"] {alignment = 16 : i64} loc(#loc138)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc82)
    cir.store %3, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc139)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc84)
    %5 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45_goodG2BData : !cir.ptr<!cir.ptr<!s32i>> loc(#loc134)
    cir.store %4, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc140)
    %6 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc141)
    cir.call %6() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc86)
    cir.return loc(#loc75)
  } loc(#loc135)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc143)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc144)
    %2 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45_goodG2BData : !cir.ptr<!cir.ptr<!s32i>> loc(#loc134)
    %3 = cir.load %2 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc93)
    cir.store %3, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc144)
    cir.br ^bb1 loc(#loc145)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.zero : !cir.array<!s32i x 100> loc(#loc143)
    cir.store %4, %0 : !cir.array<!s32i x 100>, !cir.ptr<!cir.array<!s32i x 100>> loc(#loc143)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc96)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc96)
    %7 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s32i x 100>>), !cir.ptr<!s32i> loc(#loc97)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc97)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc98)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc98)
    %11 = cir.const #cir.int<4> : !u64i loc(#loc146)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc147)
    cir.libc.memcpy %12 bytes from %8 to %6 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc148)
    %13 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc103)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc104)
    %15 = cir.ptr_stride(%13 : !cir.ptr<!s32i>, %14 : !s32i), !cir.ptr<!s32i> loc(#loc105)
    %16 = cir.load %15 : !cir.ptr<!s32i>, !s32i loc(#loc103)
    cir.call @printIntLine(%16) : (!s32i) -> () loc(#loc106)
    cir.br ^bb2 loc(#loc95)
  ^bb2:  // pred: ^bb1
    cir.return loc(#loc89)
  } loc(#loc142)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s04/CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":19:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":19:14)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":35:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":45:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":37:5)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":37:11)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":38:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":38:25)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":39:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":39:27)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":42:12)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":42:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":43:80)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":43:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":44:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":44:13)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":74:1)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":77:1)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":76:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":76:13)
#loc21 = loc("/usr/include/stdlib.h":575:1)
#loc22 = loc("/usr/include/stdlib.h":575:41)
#loc23 = loc("/usr/include/time.h":76:1)
#loc24 = loc("/usr/include/time.h":76:38)
#loc25 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc26 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":93:15)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":95:15)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":98:15)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":100:15)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":88:1)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":103:1)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":89:1)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":91:27)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":91:22)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":91:5)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":93:5)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":94:5)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":94:75)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":95:5)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":98:5)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":99:5)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":99:74)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":100:5)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":102:12)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":102:5)
#loc51 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc52 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":24:1)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":33:1)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":28:9)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":28:29)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":26:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":26:18)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":27:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":32:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":30:16)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":30:22)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":30:30)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":30:34)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":30:44)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":30:9)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":30:45)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":31:22)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":31:27)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":31:28)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":31:9)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":20:1)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":20:14)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":63:1)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":72:1)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":65:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":65:11)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":66:5)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":66:25)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":67:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":67:27)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":69:12)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":69:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":70:84)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":70:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":71:5)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":71:17)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":52:1)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":61:1)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":56:9)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":56:29)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":54:5)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":54:18)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":55:5)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":60:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":58:16)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":58:22)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":58:30)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":58:34)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":58:44)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":58:9)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":58:45)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":59:22)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":59:27)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":59:28)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_int_declare_memcpy_45.c":59:9)
#loc107 = loc(fused[#loc1, #loc2])
#loc108 = loc(fused[#loc3, #loc4])
#loc109 = loc(fused[#loc5, #loc6])
#loc110 = loc(fused[#loc7, #loc8])
#loc111 = loc(fused[#loc9, #loc10])
#loc112 = loc(fused[#loc12, #loc11])
#loc113 = loc(fused[#loc14, #loc13])
#loc114 = loc(fused[#loc15, #loc16])
#loc115 = loc(fused[#loc17, #loc18])
#loc116 = loc(fused[#loc19, #loc20])
#loc117 = loc(fused[#loc21, #loc22])
#loc118 = loc(fused[#loc23, #loc24])
#loc119 = loc(fused[#loc25, #loc26])
#loc120 = loc(fused[#loc31, #loc32])
#loc123 = loc(fused[#loc42, #loc43])
#loc124 = loc(fused[#loc46, #loc47])
#loc125 = loc(fused[#loc50, #loc49])
#loc126 = loc(fused[#loc51, #loc52])
#loc127 = loc(fused[#loc53, #loc54])
#loc128 = loc(fused[#loc55, #loc56])
#loc129 = loc(fused[#loc57, #loc58])
#loc130 = loc(fused[#loc59, #loc60])
#loc131 = loc(fused[#loc64, #loc65])
#loc132 = loc(fused[#loc63, #loc65])
#loc133 = loc(fused[#loc66, #loc67])
#loc134 = loc(fused[#loc72, #loc73])
#loc135 = loc(fused[#loc74, #loc75])
#loc136 = loc(fused[#loc76, #loc77])
#loc137 = loc(fused[#loc78, #loc79])
#loc138 = loc(fused[#loc80, #loc81])
#loc139 = loc(fused[#loc83, #loc82])
#loc140 = loc(fused[#loc85, #loc84])
#loc141 = loc(fused[#loc86, #loc87])
#loc142 = loc(fused[#loc88, #loc89])
#loc143 = loc(fused[#loc90, #loc91])
#loc144 = loc(fused[#loc92, #loc93])
#loc145 = loc(fused[#loc94, #loc95])
#loc146 = loc(fused[#loc99, #loc100])
#loc147 = loc(fused[#loc98, #loc100])
#loc148 = loc(fused[#loc101, #loc102])
