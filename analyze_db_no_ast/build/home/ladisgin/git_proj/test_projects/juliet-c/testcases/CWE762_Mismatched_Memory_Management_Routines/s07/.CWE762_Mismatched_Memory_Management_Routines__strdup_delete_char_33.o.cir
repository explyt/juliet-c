!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @strdup(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc74)
  cir.func private  @_ZdlPvm(!cir.ptr<!void>, !u64i) extra(#fn_attr) loc(#loc75)
  cir.func  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc77)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc78)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc10)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc11)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc79)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc81)
      %4 = cir.const #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc81)
      cir.store %4, %3 : !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>> loc(#loc81)
      %5 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc17)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc18)
      %7 = cir.call @strdup(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc17)
      cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc82)
    } loc(#loc80)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc84)
      %4 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc24)
      %5 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
      cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc84)
      %6 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
      %7 = cir.cast(bitcast, %6 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc25)
      %8 = cir.const #cir.int<1> : !u64i loc(#loc26)
      cir.call @_ZdlPvm(%7, %8) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc26)
    } loc(#loc83)
    cir.return loc(#loc6)
  } loc(#loc76)
  cir.func private  @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc85)
  cir.func internal private  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc87)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc88)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc34)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc35)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc89)
    %3 = cir.const #cir.int<1> : !u64i loc(#loc90)
    %4 = cir.call @_Znwm(%3) : (!u64i) -> !cir.ptr<!void> loc(#loc39)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc90)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc91)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc93)
      %7 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc44)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc93)
      %9 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc45)
      %11 = cir.const #cir.int<1> : !u64i loc(#loc39)
      cir.call @_ZdlPvm(%10, %11) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr) loc(#loc39)
    } loc(#loc92)
    cir.return loc(#loc30)
  } loc(#loc86)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc94)
  cir.func internal private  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc96)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc97)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc53)
    %2 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc54)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc98)
    cir.scope {
      %3 = cir.alloca !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>>, ["myString"] {alignment = 1 : i64} loc(#loc100)
      %4 = cir.const #cir.const_array<"myString\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> loc(#loc100)
      cir.store %4, %3 : !cir.array<!s8i x 9>, !cir.ptr<!cir.array<!s8i x 9>> loc(#loc100)
      %5 = cir.get_global @strdup : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>)>> loc(#loc60)
      %6 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc61)
      %7 = cir.call @strdup(%6) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc60)
      cir.store %7, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc101)
    } loc(#loc99)
    cir.scope {
      %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc103)
      %4 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc67)
      %5 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
      cir.store %5, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc103)
      %6 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc68)
      %7 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc69)
      cir.call @free(%8) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc68)
    } loc(#loc102)
    cir.return loc(#loc49)
  } loc(#loc95)
  cir.func  @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33L7goodG2BEv() : () -> () loc(#loc72)
    cir.call @_ZN67CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33L7goodB2GEv() : () -> () loc(#loc73)
    cir.return loc(#loc71)
  } loc(#loc104)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":0:0)
#loc1 = loc("/usr/include/string.h":187:1)
#loc2 = loc("/usr/include/string.h":188:35)
#loc3 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":140:1)
#loc4 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":141:41)
#loc5 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":27:1)
#loc6 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":44:1)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":29:5)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":29:12)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":30:5)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":30:23)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":32:12)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":32:5)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":33:5)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":37:5)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":34:9)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":34:27)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":36:16)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":36:23)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":36:9)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":36:31)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":38:5)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":43:5)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":39:9)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":39:23)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":42:16)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":27:6)
#loc27 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc28 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":51:1)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":65:1)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":53:5)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":53:12)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":54:5)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":54:23)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":56:12)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":56:5)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":58:12)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":58:16)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":51:13)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":58:5)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":59:5)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":64:5)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":60:9)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":60:23)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":63:16)
#loc46 = loc("/usr/include/stdlib.h":687:1)
#loc47 = loc("/usr/include/stdlib.h":687:32)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":68:1)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":84:1)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":70:5)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":70:12)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":71:5)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":71:23)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":73:12)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":73:5)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":74:5)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":78:5)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":75:9)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":75:27)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":77:16)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":77:23)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":77:9)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":77:31)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":79:5)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":83:5)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":80:9)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":80:23)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":82:9)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":82:14)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":86:1)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":90:1)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":88:5)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__strdup_delete_char_33.cpp":89:5)
#loc74 = loc(fused[#loc1, #loc2])
#loc75 = loc(fused[#loc3, #loc4])
#loc76 = loc(fused[#loc5, #loc6])
#loc77 = loc(fused[#loc7, #loc8])
#loc78 = loc(fused[#loc9, #loc10])
#loc79 = loc(fused[#loc12, #loc11])
#loc80 = loc(fused[#loc13, #loc14])
#loc81 = loc(fused[#loc15, #loc16])
#loc82 = loc(fused[#loc19, #loc20])
#loc83 = loc(fused[#loc21, #loc22])
#loc84 = loc(fused[#loc23, #loc24])
#loc85 = loc(fused[#loc27, #loc28])
#loc86 = loc(fused[#loc29, #loc30])
#loc87 = loc(fused[#loc31, #loc32])
#loc88 = loc(fused[#loc33, #loc34])
#loc89 = loc(fused[#loc36, #loc35])
#loc90 = loc(fused[#loc37, #loc38])
#loc91 = loc(fused[#loc40, #loc38])
#loc92 = loc(fused[#loc41, #loc42])
#loc93 = loc(fused[#loc43, #loc44])
#loc94 = loc(fused[#loc46, #loc47])
#loc95 = loc(fused[#loc48, #loc49])
#loc96 = loc(fused[#loc50, #loc51])
#loc97 = loc(fused[#loc52, #loc53])
#loc98 = loc(fused[#loc55, #loc54])
#loc99 = loc(fused[#loc56, #loc57])
#loc100 = loc(fused[#loc58, #loc59])
#loc101 = loc(fused[#loc62, #loc63])
#loc102 = loc(fused[#loc64, #loc65])
#loc103 = loc(fused[#loc66, #loc67])
#loc104 = loc(fused[#loc70, #loc71])
