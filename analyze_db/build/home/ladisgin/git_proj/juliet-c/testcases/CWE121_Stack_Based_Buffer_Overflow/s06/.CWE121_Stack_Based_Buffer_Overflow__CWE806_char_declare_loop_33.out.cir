!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":101:10)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":101:14)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":101:20)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":101:32)
#loc190 = loc(fused[#loc128, #loc129])
#loc191 = loc(fused[#loc130, #loc131])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc144)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc145)
  cir.func @_ZN63CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_333badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc147)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc148)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc149)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc10)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc13)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc150)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc15)
    %6 = cir.const #cir.int<65> : !s8i loc(#loc16)
    %7 = cir.cast(integral, %6 : !s8i), !s32i loc(#loc16)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc17)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc17)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc17)
    cir.libc.memset %11 bytes from %5 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc151)
    %12 = cir.const #cir.int<0> : !s8i loc(#loc21)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc23)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc24)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc23)
    %17 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc25)
    cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc152)
    cir.scope {
      %18 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc154)
      %19 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc29)
      %20 = cir.load %19 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
      cir.store %20, %18 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc154)
      cir.scope {
        %21 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc156)
        %22 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc157)
        %23 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc158)
        %24 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc156)
        cir.store %24, %21 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc156)
        %25 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc37)
        %26 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
        %27 = cir.call @strlen(%26) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc37)
        cir.store %27, %23 : !u64i, !cir.ptr<!u64i> loc(#loc159)
        cir.scope {
          %35 = cir.const #cir.int<0> : !s32i loc(#loc43)
          %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc43)
          cir.store %36, %22 : !u64i, !cir.ptr<!u64i> loc(#loc161)
          cir.for : cond {
            %37 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc45)
            %38 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc46)
            %39 = cir.cmp(lt, %37, %38) : !u64i, !cir.bool loc(#loc162)
            cir.condition(%39) loc(#loc162)
          } body {
            %37 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
            %38 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc48)
            %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc49)
            %40 = cir.load %39 : !cir.ptr<!s8i>, !s8i loc(#loc47)
            %41 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc50)
            %42 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc51)
            %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc51)
            cir.store %40, %43 : !s8i, !cir.ptr<!s8i> loc(#loc163)
            cir.yield loc(#loc42)
          } step {
            %37 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc52)
            %38 = cir.unary(inc, %37) : !u64i, !u64i loc(#loc53)
            cir.store %38, %22 : !u64i, !cir.ptr<!u64i> loc(#loc164)
            cir.yield loc(#loc160)
          } loc(#loc160)
        } loc(#loc160)
        %28 = cir.const #cir.int<0> : !s8i loc(#loc54)
        %29 = cir.const #cir.int<50> : !s32i loc(#loc55)
        %30 = cir.const #cir.int<1> : !s32i loc(#loc56)
        %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc55)
        %32 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc57)
        %33 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc57)
        cir.store %28, %33 : !s8i, !cir.ptr<!s8i> loc(#loc165)
        %34 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
        cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc59)
      } loc(#loc155)
    } loc(#loc153)
    cir.return loc(#loc6)
  } loc(#loc146)
  cir.func internal private @_ZN63CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc167)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc168)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc169)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc65)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc68)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc170)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc70)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc70)
    %6 = cir.const #cir.int<65> : !s8i loc(#loc71)
    %7 = cir.cast(integral, %6 : !s8i), !s32i loc(#loc71)
    %8 = cir.const #cir.int<50> : !s32i loc(#loc72)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc73)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc72)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc72)
    cir.libc.memset %11 bytes from %5 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc171)
    %12 = cir.const #cir.int<0> : !s8i loc(#loc76)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    %14 = cir.const #cir.int<50> : !s32i loc(#loc78)
    %15 = cir.const #cir.int<1> : !s32i loc(#loc79)
    %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc78)
    %17 = cir.ptr_stride(%13 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc80)
    cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc172)
    cir.scope {
      %18 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc174)
      %19 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc84)
      %20 = cir.load %19 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc84)
      cir.store %20, %18 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc174)
      cir.scope {
        %21 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc176)
        %22 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc177)
        %23 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc178)
        %24 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc176)
        cir.store %24, %21 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc176)
        %25 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc92)
        %26 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc93)
        %27 = cir.call @strlen(%26) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc92)
        cir.store %27, %23 : !u64i, !cir.ptr<!u64i> loc(#loc179)
        cir.scope {
          %35 = cir.const #cir.int<0> : !s32i loc(#loc98)
          %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc98)
          cir.store %36, %22 : !u64i, !cir.ptr<!u64i> loc(#loc181)
          cir.for : cond {
            %37 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc100)
            %38 = cir.load %23 : !cir.ptr<!u64i>, !u64i loc(#loc101)
            %39 = cir.cmp(lt, %37, %38) : !u64i, !cir.bool loc(#loc182)
            cir.condition(%39) loc(#loc182)
          } body {
            %37 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
            %38 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc103)
            %39 = cir.ptr_stride(%37 : !cir.ptr<!s8i>, %38 : !u64i), !cir.ptr<!s8i> loc(#loc104)
            %40 = cir.load %39 : !cir.ptr<!s8i>, !s8i loc(#loc102)
            %41 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc105)
            %42 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc106)
            %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !u64i), !cir.ptr<!s8i> loc(#loc106)
            cir.store %40, %43 : !s8i, !cir.ptr<!s8i> loc(#loc183)
            cir.yield loc(#loc97)
          } step {
            %37 = cir.load %22 : !cir.ptr<!u64i>, !u64i loc(#loc107)
            %38 = cir.unary(inc, %37) : !u64i, !u64i loc(#loc108)
            cir.store %38, %22 : !u64i, !cir.ptr<!u64i> loc(#loc184)
            cir.yield loc(#loc180)
          } loc(#loc180)
        } loc(#loc180)
        %28 = cir.const #cir.int<0> : !s8i loc(#loc109)
        %29 = cir.const #cir.int<50> : !s32i loc(#loc110)
        %30 = cir.const #cir.int<1> : !s32i loc(#loc111)
        %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc110)
        %32 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc112)
        %33 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc112)
        cir.store %28, %33 : !s8i, !cir.ptr<!s8i> loc(#loc185)
        %34 = cir.load %18 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc113)
        cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc114)
      } loc(#loc175)
    } loc(#loc173)
    cir.return loc(#loc61)
  } loc(#loc166)
  cir.func @_ZN63CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_334goodEv() extra(#fn_attr1) {
    cir.call @_ZN63CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33L7goodG2BEv() : () -> () loc(#loc117)
    cir.return loc(#loc116)
  } loc(#loc186)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc187)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc188)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc122)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc123)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc124)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc125)
  cir.func @main(%arg0: !s32i loc(fused[#loc128, #loc129]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc130, #loc131])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc190)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc191)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc127)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc132)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc132)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc133)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc134)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc134)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc135)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc122)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc122)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc136)
    cir.call @_ZN63CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_334goodEv() : () -> () loc(#loc137)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc123)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc123)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc138)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc124)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc124)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc139)
    cir.call @_ZN63CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_333badEv() : () -> () loc(#loc140)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc125)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc125)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc141)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc142)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc192)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc192)
    cir.return %15 : !s32i loc(#loc192)
  } loc(#loc189)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":26:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":50:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":28:5)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":28:12)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":29:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":29:23)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":30:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":30:24)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":31:12)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":31:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":33:12)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":33:18)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":33:23)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":33:27)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":33:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":33:28)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":34:19)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":34:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":34:10)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":34:14)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":34:15)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":35:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":49:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":36:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":36:23)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":37:9)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":48:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":38:13)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":38:29)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":39:13)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":39:20)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":39:23)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":40:23)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":40:30)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":40:13)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":40:34)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":42:13)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":45:13)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":42:22)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":42:18)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":42:25)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":42:29)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":44:27)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":44:32)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":44:33)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":44:22)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":44:17)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":42:39)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":42:38)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":46:26)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":46:18)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":46:21)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":46:13)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":47:23)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":47:13)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":57:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":81:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":59:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":59:12)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":60:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":60:23)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":61:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":61:24)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":62:12)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":62:5)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":64:12)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":64:18)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":64:23)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":64:26)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":64:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":64:27)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":65:18)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":65:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":65:10)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":65:13)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":65:14)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":66:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":80:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":67:9)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":67:23)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":68:9)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":79:9)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":69:13)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":69:29)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":70:13)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":70:20)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":70:23)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":71:23)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":71:30)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":71:13)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":71:34)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":73:13)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":76:13)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":73:22)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":73:18)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":73:25)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":73:29)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":75:27)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":75:32)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":75:33)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":75:22)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":75:17)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":73:39)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":73:38)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":77:26)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":77:18)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":77:21)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":77:13)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":78:23)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":78:13)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":83:1)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":86:1)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":85:5)
#loc118 = loc("/usr/include/stdlib.h":575:1)
#loc119 = loc("/usr/include/stdlib.h":575:41)
#loc120 = loc("/usr/include/time.h":76:1)
#loc121 = loc("/usr/include/time.h":76:38)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":106:15)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":108:15)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":111:15)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":113:15)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":101:1)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":116:1)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":102:1)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":104:27)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":104:22)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":104:5)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":106:5)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":107:5)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":108:5)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":111:5)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":112:5)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":113:5)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":115:12)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_33.cpp":115:5)
#loc144 = loc(fused[#loc1, #loc2])
#loc145 = loc(fused[#loc3, #loc4])
#loc146 = loc(fused[#loc5, #loc6])
#loc147 = loc(fused[#loc7, #loc8])
#loc148 = loc(fused[#loc9, #loc10])
#loc149 = loc(fused[#loc11, #loc12])
#loc150 = loc(fused[#loc14, #loc13])
#loc151 = loc(fused[#loc19, #loc20])
#loc152 = loc(fused[#loc22, #loc21])
#loc153 = loc(fused[#loc26, #loc27])
#loc154 = loc(fused[#loc28, #loc29])
#loc155 = loc(fused[#loc30, #loc31])
#loc156 = loc(fused[#loc32, #loc33])
#loc157 = loc(fused[#loc34, #loc35])
#loc158 = loc(fused[#loc34, #loc36])
#loc159 = loc(fused[#loc39, #loc40])
#loc160 = loc(fused[#loc41, #loc42])
#loc161 = loc(fused[#loc44, #loc43])
#loc162 = loc(fused[#loc45, #loc46])
#loc163 = loc(fused[#loc51, #loc49])
#loc164 = loc(fused[#loc53, #loc52])
#loc165 = loc(fused[#loc57, #loc54])
#loc166 = loc(fused[#loc60, #loc61])
#loc167 = loc(fused[#loc62, #loc63])
#loc168 = loc(fused[#loc64, #loc65])
#loc169 = loc(fused[#loc66, #loc67])
#loc170 = loc(fused[#loc69, #loc68])
#loc171 = loc(fused[#loc74, #loc75])
#loc172 = loc(fused[#loc77, #loc76])
#loc173 = loc(fused[#loc81, #loc82])
#loc174 = loc(fused[#loc83, #loc84])
#loc175 = loc(fused[#loc85, #loc86])
#loc176 = loc(fused[#loc87, #loc88])
#loc177 = loc(fused[#loc89, #loc90])
#loc178 = loc(fused[#loc89, #loc91])
#loc179 = loc(fused[#loc94, #loc95])
#loc180 = loc(fused[#loc96, #loc97])
#loc181 = loc(fused[#loc99, #loc98])
#loc182 = loc(fused[#loc100, #loc101])
#loc183 = loc(fused[#loc106, #loc104])
#loc184 = loc(fused[#loc108, #loc107])
#loc185 = loc(fused[#loc112, #loc109])
#loc186 = loc(fused[#loc115, #loc116])
#loc187 = loc(fused[#loc118, #loc119])
#loc188 = loc(fused[#loc120, #loc121])
#loc189 = loc(fused[#loc126, #loc127])
#loc192 = loc(fused[#loc143, #loc142])
