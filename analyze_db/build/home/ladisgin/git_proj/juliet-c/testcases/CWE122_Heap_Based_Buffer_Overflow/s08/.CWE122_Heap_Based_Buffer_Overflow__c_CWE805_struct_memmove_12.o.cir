!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc173)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc174)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc175)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc176)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc177)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc179)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc180)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc181)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc19)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc182)
    cir.br ^bb1 loc(#loc183)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc184)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc184)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc23)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc23)
    cir.brcond %7 ^bb2, ^bb7 loc(#loc185)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc28)
    %9 = cir.const #cir.int<50> : !s32i loc(#loc29)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc29)
    %11 = cir.const #cir.int<8> : !u64i loc(#loc186)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc187)
    %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc28)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc188)
    cir.store %14, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc189)
    cir.br ^bb3 loc(#loc190)
  ^bb3:  // pred: ^bb2
    %15 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc36)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc37)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc191)
    cir.brcond %18 ^bb4, ^bb5 loc(#loc192)
  ^bb4:  // pred: ^bb3
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc39)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc40)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc41)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc39)
    cir.br ^bb5 loc(#loc35)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc35)
  ^bb6:  // pred: ^bb5
    cir.br ^bb12 loc(#loc26)
  ^bb7:  // pred: ^bb1
    %22 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc42)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc43)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc43)
    %25 = cir.const #cir.int<8> : !u64i loc(#loc193)
    %26 = cir.binop(mul, %24, %25) : !u64i loc(#loc194)
    %27 = cir.call @malloc(%26) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc42)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc195)
    cir.store %28, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc196)
    cir.br ^bb8 loc(#loc197)
  ^bb8:  // pred: ^bb7
    %29 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
    %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc51)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc51)
    %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc198)
    cir.brcond %32 ^bb9, ^bb10 loc(#loc199)
  ^bb9:  // pred: ^bb8
    %33 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc53)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc54)
    %35 = cir.unary(minus, %34) : !s32i, !s32i loc(#loc55)
    cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc53)
    cir.br ^bb10 loc(#loc49)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc49)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc22)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc22)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc200)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc201)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc202)
  ^bb16:  // pred: ^bb15
    %36 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc62)
    cir.store %37, %1 : !u64i, !cir.ptr<!u64i> loc(#loc203)
    cir.br ^bb17 loc(#loc202)
  ^bb17:  // 2 preds: ^bb16, ^bb21
    %38 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc64)
    %39 = cir.const #cir.int<100> : !s32i loc(#loc65)
    %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc65)
    %41 = cir.cmp(lt, %38, %40) : !u64i, !cir.bool loc(#loc204)
    cir.brcond %41 ^bb18, ^bb22 loc(#loc66)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc205)
  ^bb19:  // pred: ^bb18
    %42 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %43 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc69)
    %44 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc70)
    %45 = cir.ptr_stride(%44 : !cir.ptr<!ty__twoIntsStruct>, %43 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc70)
    %46 = cir.get_member %45[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc71)
    cir.store %42, %46 : !s32i, !cir.ptr<!s32i> loc(#loc206)
    %47 = cir.const #cir.int<0> : !s32i loc(#loc72)
    %48 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc73)
    %49 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc74)
    %50 = cir.ptr_stride(%49 : !cir.ptr<!ty__twoIntsStruct>, %48 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc74)
    %51 = cir.get_member %50[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc75)
    cir.store %47, %51 : !s32i, !cir.ptr<!s32i> loc(#loc207)
    cir.br ^bb20 loc(#loc61)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc61)
  ^bb21:  // pred: ^bb20
    %52 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc76)
    %53 = cir.unary(inc, %52) : !u64i, !u64i loc(#loc77)
    cir.store %53, %1 : !u64i, !cir.ptr<!u64i> loc(#loc208)
    cir.br ^bb17 loc(#loc202)
  ^bb22:  // pred: ^bb17
    cir.br ^bb23 loc(#loc61)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc59)
  ^bb24:  // pred: ^bb23
    %54 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc78)
    %55 = cir.cast(bitcast, %54 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc78)
    %56 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc79)
    %57 = cir.cast(bitcast, %56 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc79)
    %58 = cir.const #cir.int<100> : !s32i loc(#loc80)
    %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc80)
    %60 = cir.const #cir.int<8> : !u64i loc(#loc209)
    %61 = cir.binop(mul, %59, %60) : !u64i loc(#loc210)
    cir.libc.memmove %61 bytes from %57 to %55 : !cir.ptr<!void>, !u64i loc(#loc211)
    %62 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc85)
    %63 = cir.const #cir.int<0> : !s32i loc(#loc86)
    %64 = cir.ptr_stride(%62 : !cir.ptr<!ty__twoIntsStruct>, %63 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc87)
    cir.call @printStructLine(%64) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc88)
    %65 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc89)
    %66 = cir.cast(bitcast, %65 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc89)
    cir.call @free(%66) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc90)
    cir.br ^bb25 loc(#loc57)
  ^bb25:  // pred: ^bb24
    cir.return loc(#loc12)
  } loc(#loc178)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc213)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc93)
    cir.return loc(#loc92)
  } loc(#loc212)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc215)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc216)
    %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc217)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc103)
    cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc218)
    cir.br ^bb1 loc(#loc219)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc220)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc220)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc107)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc107)
    cir.brcond %7 ^bb2, ^bb7 loc(#loc221)
  ^bb2:  // pred: ^bb1
    %8 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc112)
    %9 = cir.const #cir.int<100> : !s32i loc(#loc113)
    %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc113)
    %11 = cir.const #cir.int<8> : !u64i loc(#loc222)
    %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc223)
    %13 = cir.call @malloc(%12) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc112)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc224)
    cir.store %14, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc225)
    cir.br ^bb3 loc(#loc226)
  ^bb3:  // pred: ^bb2
    %15 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc120)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc121)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc121)
    %18 = cir.cmp(eq, %15, %17) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc227)
    cir.brcond %18 ^bb4, ^bb5 loc(#loc228)
  ^bb4:  // pred: ^bb3
    %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc123)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc124)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc125)
    cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr) loc(#loc123)
    cir.br ^bb5 loc(#loc119)
  ^bb5:  // 2 preds: ^bb3, ^bb4
    cir.br ^bb6 loc(#loc119)
  ^bb6:  // pred: ^bb5
    cir.br ^bb12 loc(#loc110)
  ^bb7:  // pred: ^bb1
    %22 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc126)
    %23 = cir.const #cir.int<100> : !s32i loc(#loc127)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc127)
    %25 = cir.const #cir.int<8> : !u64i loc(#loc229)
    %26 = cir.binop(mul, %24, %25) : !u64i loc(#loc230)
    %27 = cir.call @malloc(%26) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc126)
    %28 = cir.cast(bitcast, %27 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc231)
    cir.store %28, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc232)
    cir.br ^bb8 loc(#loc233)
  ^bb8:  // pred: ^bb7
    %29 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc134)
    %30 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc135)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc135)
    %32 = cir.cmp(eq, %29, %31) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc234)
    cir.brcond %32 ^bb9, ^bb10 loc(#loc235)
  ^bb9:  // pred: ^bb8
    %33 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc137)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc138)
    %35 = cir.unary(minus, %34) : !s32i, !s32i loc(#loc139)
    cir.call @exit(%35) : (!s32i) -> () extra(#fn_attr) loc(#loc137)
    cir.br ^bb10 loc(#loc133)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc133)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc106)
  ^bb12:  // 2 preds: ^bb6, ^bb11
    cir.br ^bb13 loc(#loc106)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc236)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc237)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc238)
  ^bb16:  // pred: ^bb15
    %36 = cir.const #cir.int<0> : !s32i loc(#loc146)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc146)
    cir.store %37, %1 : !u64i, !cir.ptr<!u64i> loc(#loc239)
    cir.br ^bb17 loc(#loc238)
  ^bb17:  // 2 preds: ^bb16, ^bb21
    %38 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc148)
    %39 = cir.const #cir.int<100> : !s32i loc(#loc149)
    %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc149)
    %41 = cir.cmp(lt, %38, %40) : !u64i, !cir.bool loc(#loc240)
    cir.brcond %41 ^bb18, ^bb22 loc(#loc150)
  ^bb18:  // pred: ^bb17
    cir.br ^bb19 loc(#loc241)
  ^bb19:  // pred: ^bb18
    %42 = cir.const #cir.int<0> : !s32i loc(#loc152)
    %43 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc153)
    %44 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc154)
    %45 = cir.ptr_stride(%44 : !cir.ptr<!ty__twoIntsStruct>, %43 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc154)
    %46 = cir.get_member %45[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc71)
    cir.store %42, %46 : !s32i, !cir.ptr<!s32i> loc(#loc242)
    %47 = cir.const #cir.int<0> : !s32i loc(#loc155)
    %48 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc156)
    %49 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc157)
    %50 = cir.ptr_stride(%49 : !cir.ptr<!ty__twoIntsStruct>, %48 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc157)
    %51 = cir.get_member %50[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc75)
    cir.store %47, %51 : !s32i, !cir.ptr<!s32i> loc(#loc243)
    cir.br ^bb20 loc(#loc145)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc145)
  ^bb21:  // pred: ^bb20
    %52 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc158)
    %53 = cir.unary(inc, %52) : !u64i, !u64i loc(#loc159)
    cir.store %53, %1 : !u64i, !cir.ptr<!u64i> loc(#loc244)
    cir.br ^bb17 loc(#loc238)
  ^bb22:  // pred: ^bb17
    cir.br ^bb23 loc(#loc145)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc143)
  ^bb24:  // pred: ^bb23
    %54 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc160)
    %55 = cir.cast(bitcast, %54 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc160)
    %56 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc161)
    %57 = cir.cast(bitcast, %56 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc161)
    %58 = cir.const #cir.int<100> : !s32i loc(#loc162)
    %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc162)
    %60 = cir.const #cir.int<8> : !u64i loc(#loc245)
    %61 = cir.binop(mul, %59, %60) : !u64i loc(#loc246)
    cir.libc.memmove %61 bytes from %57 to %55 : !cir.ptr<!void>, !u64i loc(#loc247)
    %62 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc167)
    %63 = cir.const #cir.int<0> : !s32i loc(#loc168)
    %64 = cir.ptr_stride(%62 : !cir.ptr<!ty__twoIntsStruct>, %63 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc169)
    cir.call @printStructLine(%64) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc170)
    %65 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc171)
    %66 = cir.cast(bitcast, %65 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc171)
    cir.call @free(%66) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc172)
    cir.br ^bb25 loc(#loc141)
  ^bb25:  // pred: ^bb24
    cir.return loc(#loc96)
  } loc(#loc214)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s08/CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdlib.h":672:1)
#loc4 = loc("/usr/include/stdlib.h":672:45)
#loc5 = loc("/usr/include/stdlib.h":756:1)
#loc6 = loc("/usr/include/stdlib.h":756:70)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc9 = loc("/usr/include/stdlib.h":687:1)
#loc10 = loc("/usr/include/stdlib.h":687:32)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":21:1)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":53:1)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":38:9)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":38:33)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":40:13)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":40:20)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":23:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":23:21)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":24:12)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":24:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":25:5)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":36:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":25:8)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":25:33)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":26:5)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":30:5)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":32:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":28:33)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":28:40)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":28:43)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":28:63)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":28:64)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":28:9)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":29:9)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":29:37)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":29:13)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":29:21)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":29:27)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":29:28)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":29:34)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":29:33)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":34:33)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":34:40)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":34:44)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":34:64)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":34:65)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":34:9)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":35:9)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":35:37)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":35:13)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":35:21)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":35:27)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":35:28)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":35:34)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":35:33)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":37:5)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":52:5)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":39:9)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":47:9)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":42:13)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":46:13)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":42:22)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":42:18)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":42:25)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":42:29)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":42:27)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":43:13)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":44:36)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":44:24)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":44:17)
#loc71 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":45:36)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":45:24)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":45:17)
#loc75 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":42:35)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":42:34)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":49:17)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":49:23)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":49:31)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":49:35)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":49:55)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":49:9)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":49:56)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":50:26)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":50:31)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":50:32)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":50:9)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":51:14)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":51:9)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":95:1)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":98:1)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":97:5)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":97:13)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":61:1)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":93:1)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":78:9)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":78:33)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":80:13)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":80:20)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":63:5)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":63:21)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":64:12)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":64:5)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":65:5)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":76:5)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":65:8)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":65:33)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":66:5)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":70:5)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":72:5)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":68:33)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":68:40)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":68:44)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":68:64)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":68:65)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":68:9)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":69:9)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":69:37)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":69:13)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":69:21)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":69:27)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":69:28)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":69:34)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":69:33)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":74:33)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":74:40)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":74:44)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":74:64)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":74:65)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":74:9)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":75:9)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":75:37)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":75:13)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":75:21)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":75:27)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":75:28)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":75:34)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":75:33)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":77:5)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":92:5)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":79:9)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":87:9)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":82:13)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":86:13)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":82:22)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":82:18)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":82:25)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":82:29)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":82:27)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":83:13)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":84:36)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":84:24)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":84:17)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":85:36)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":85:24)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":85:17)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":82:35)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":82:34)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":89:17)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":89:23)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":89:31)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":89:35)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":89:55)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":89:9)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":89:56)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":90:26)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":90:31)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":90:32)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":90:9)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":91:14)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE805_struct_memmove_12.c":91:9)
#loc173 = loc(fused[#loc1, #loc2])
#loc174 = loc(fused[#loc3, #loc4])
#loc175 = loc(fused[#loc5, #loc6])
#loc176 = loc(fused[#loc7, #loc8])
#loc177 = loc(fused[#loc9, #loc10])
#loc178 = loc(fused[#loc11, #loc12])
#loc179 = loc(fused[#loc13, #loc14])
#loc180 = loc(fused[#loc15, #loc16])
#loc181 = loc(fused[#loc17, #loc18])
#loc182 = loc(fused[#loc20, #loc19])
#loc183 = loc(fused[#loc21, #loc22])
#loc184 = loc(fused[#loc23, #loc24])
#loc185 = loc(fused[#loc25, #loc26, #loc27, #loc22])
#loc186 = loc(fused[#loc30, #loc31])
#loc187 = loc(fused[#loc29, #loc31])
#loc188 = loc(fused[#loc28, #loc32])
#loc189 = loc(fused[#loc33, #loc32])
#loc190 = loc(fused[#loc34, #loc35])
#loc191 = loc(fused[#loc36, #loc37])
#loc192 = loc(fused[#loc38, #loc35])
#loc193 = loc(fused[#loc44, #loc45])
#loc194 = loc(fused[#loc43, #loc45])
#loc195 = loc(fused[#loc42, #loc46])
#loc196 = loc(fused[#loc47, #loc46])
#loc197 = loc(fused[#loc48, #loc49])
#loc198 = loc(fused[#loc50, #loc51])
#loc199 = loc(fused[#loc52, #loc49])
#loc200 = loc(fused[#loc56, #loc57])
#loc201 = loc(fused[#loc58, #loc59])
#loc202 = loc(fused[#loc60, #loc61])
#loc203 = loc(fused[#loc63, #loc62])
#loc204 = loc(fused[#loc64, #loc65])
#loc205 = loc(fused[#loc67, #loc61])
#loc206 = loc(fused[#loc70, #loc68])
#loc207 = loc(fused[#loc74, #loc72])
#loc208 = loc(fused[#loc77, #loc76])
#loc209 = loc(fused[#loc81, #loc82])
#loc210 = loc(fused[#loc80, #loc82])
#loc211 = loc(fused[#loc83, #loc84])
#loc212 = loc(fused[#loc91, #loc92])
#loc213 = loc(fused[#loc93, #loc94])
#loc214 = loc(fused[#loc95, #loc96])
#loc215 = loc(fused[#loc97, #loc98])
#loc216 = loc(fused[#loc99, #loc100])
#loc217 = loc(fused[#loc101, #loc102])
#loc218 = loc(fused[#loc104, #loc103])
#loc219 = loc(fused[#loc105, #loc106])
#loc220 = loc(fused[#loc107, #loc108])
#loc221 = loc(fused[#loc109, #loc110, #loc111, #loc106])
#loc222 = loc(fused[#loc114, #loc115])
#loc223 = loc(fused[#loc113, #loc115])
#loc224 = loc(fused[#loc112, #loc116])
#loc225 = loc(fused[#loc117, #loc116])
#loc226 = loc(fused[#loc118, #loc119])
#loc227 = loc(fused[#loc120, #loc121])
#loc228 = loc(fused[#loc122, #loc119])
#loc229 = loc(fused[#loc128, #loc129])
#loc230 = loc(fused[#loc127, #loc129])
#loc231 = loc(fused[#loc126, #loc130])
#loc232 = loc(fused[#loc131, #loc130])
#loc233 = loc(fused[#loc132, #loc133])
#loc234 = loc(fused[#loc134, #loc135])
#loc235 = loc(fused[#loc136, #loc133])
#loc236 = loc(fused[#loc140, #loc141])
#loc237 = loc(fused[#loc142, #loc143])
#loc238 = loc(fused[#loc144, #loc145])
#loc239 = loc(fused[#loc147, #loc146])
#loc240 = loc(fused[#loc148, #loc149])
#loc241 = loc(fused[#loc151, #loc145])
#loc242 = loc(fused[#loc154, #loc152])
#loc243 = loc(fused[#loc157, #loc155])
#loc244 = loc(fused[#loc159, #loc158])
#loc245 = loc(fused[#loc163, #loc164])
#loc246 = loc(fused[#loc162, #loc164])
#loc247 = loc(fused[#loc165, #loc166])
