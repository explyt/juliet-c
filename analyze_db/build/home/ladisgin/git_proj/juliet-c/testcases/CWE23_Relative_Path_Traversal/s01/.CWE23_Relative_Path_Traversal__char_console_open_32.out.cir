!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc172 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":139:10)
#loc173 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":139:14)
#loc174 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":139:20)
#loc175 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":139:32)
#true = #cir.bool<true> : !cir.bool
#loc256 = loc(fused[#loc172, #loc173])
#loc257 = loc(fused[#loc174, #loc175])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_open_32.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_32L7goodG2BEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc188)
  cir.global "private" constant cir_private @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_323badEv.dataBuffer = #cir.const_array<"/tmp/" : !cir.array<!s8i x 5>, trailing_zeros> : !cir.array<!s8i x 4096> loc(#loc189)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc190)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc191)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc192)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc193)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc13)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc194)
  cir.func private @close(!s32i) -> !s32i loc(#loc195)
  cir.func @_ZN51CWE23_Relative_Path_Traversal__char_console_open_323badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc197)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc198)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc199)
    %3 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc189)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc198)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc199)
    %4 = cir.get_global @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_323badEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc189)
    cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc189)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc26)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc200)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc202)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc31)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc202)
      cir.scope {
        %11 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc204)
        %12 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc37)
        %13 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
        %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc37)
        cir.store %14, %11 : !u64i, !cir.ptr<!u64i> loc(#loc204)
        cir.scope {
          %15 = cir.const #cir.int<4096> : !s32i loc(#loc41)
          %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc41)
          %17 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc42)
          %18 = cir.binop(sub, %16, %17) : !u64i loc(#loc206)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc43)
          %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc43)
          %21 = cir.cmp(gt, %18, %20) : !u64i, !cir.bool loc(#loc207)
          cir.if %21 {
            cir.scope {
              %22 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
              %23 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc48)
              %24 = cir.ptr_stride(%22 : !cir.ptr<!s8i>, %23 : !u64i), !cir.ptr<!s8i> loc(#loc49)
              %25 = cir.const #cir.int<4096> : !s32i loc(#loc50)
              %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc50)
              %27 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc51)
              %28 = cir.binop(sub, %26, %27) : !u64i loc(#loc210)
              %29 = cir.cast(integral, %28 : !u64i), !s32i loc(#loc210)
              %30 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc192)
              %31 = cir.load %30 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc52)
              %32 = cir.call @fgets(%24, %29, %31) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc53)
              %33 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc54)
              %34 = cir.cmp(ne, %32, %33) : !cir.ptr<!s8i>, !cir.bool loc(#loc211)
              cir.if %34 {
                %35 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc58)
                %36 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
                %37 = cir.call @strlen(%36) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc58)
                cir.store %37, %11 : !u64i, !cir.ptr<!u64i> loc(#loc213)
                cir.scope {
                  %38 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc64)
                  %39 = cir.const #cir.int<0> : !s32i loc(#loc65)
                  %40 = cir.cast(integral, %39 : !s32i), !u64i loc(#loc65)
                  %41 = cir.cmp(gt, %38, %40) : !u64i, !cir.bool loc(#loc215)
                  %42 = cir.ternary(%41, true {
                    %43 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc67)
                    %44 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc68)
                    %45 = cir.const #cir.int<1> : !s32i loc(#loc69)
                    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc69)
                    %47 = cir.binop(sub, %44, %46) : !u64i loc(#loc216)
                    %48 = cir.ptr_stride(%43 : !cir.ptr<!s8i>, %47 : !u64i), !cir.ptr<!s8i> loc(#loc70)
                    %49 = cir.load %48 : !cir.ptr<!s8i>, !s8i loc(#loc67)
                    %50 = cir.cast(integral, %49 : !s8i), !s32i loc(#loc67)
                    %51 = cir.const #cir.int<10> : !s8i loc(#loc71)
                    %52 = cir.cast(integral, %51 : !s8i), !s32i loc(#loc71)
                    %53 = cir.cmp(eq, %50, %52) : !s32i, !cir.bool loc(#loc217)
                    %54 = cir.ternary(%53, true {
                      %55 = cir.const #true loc(#loc66)
                      cir.yield %55 : !cir.bool loc(#loc66)
                    }, false {
                      %55 = cir.const #false loc(#loc66)
                      cir.yield %55 : !cir.bool loc(#loc66)
                    }) : (!cir.bool) -> !cir.bool loc(#loc66)
                    cir.yield %54 : !cir.bool loc(#loc66)
                  }, false {
                    %43 = cir.const #false loc(#loc66)
                    cir.yield %43 : !cir.bool loc(#loc66)
                  }) : (!cir.bool) -> !cir.bool loc(#loc66)
                  cir.if %42 {
                    %43 = cir.const #cir.int<0> : !s8i loc(#loc73)
                    %44 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
                    %45 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc75)
                    %46 = cir.const #cir.int<1> : !s32i loc(#loc76)
                    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc76)
                    %48 = cir.binop(sub, %45, %47) : !u64i loc(#loc219)
                    %49 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %48 : !u64i), !cir.ptr<!s8i> loc(#loc77)
                    cir.store %43, %49 : !s8i, !cir.ptr<!s8i> loc(#loc220)
                  } loc(#loc218)
                } loc(#loc214)
              } else {
                %35 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc13)
                %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc13)
                cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc78)
                %37 = cir.const #cir.int<0> : !s8i loc(#loc79)
                %38 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc80)
                %39 = cir.load %11 : !cir.ptr<!u64i>, !u64i loc(#loc81)
                %40 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %39 : !u64i), !cir.ptr<!s8i> loc(#loc82)
                cir.store %37, %40 : !s8i, !cir.ptr<!s8i> loc(#loc221)
              } loc(#loc212)
            } loc(#loc209)
          } loc(#loc208)
        } loc(#loc205)
      } loc(#loc203)
      %9 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
      %10 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc84)
      cir.store %9, %10 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc222)
    } loc(#loc201)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc224)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc89)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc224)
      cir.scope {
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc226)
        %10 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
        %11 = cir.const #cir.int<2> : !s32i loc(#loc96)
        %12 = cir.const #cir.int<64> : !s32i loc(#loc97)
        %13 = cir.binop(or, %11, %12) : !s32i loc(#loc227)
        %14 = cir.const #cir.int<256> : !s32i loc(#loc98)
        %15 = cir.const #cir.int<128> : !s32i loc(#loc99)
        %16 = cir.binop(or, %14, %15) : !s32i loc(#loc228)
        %17 = cir.call @open(%10, %13, %16) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc100)
        cir.store %17, %9 : !s32i, !cir.ptr<!s32i> loc(#loc229)
        cir.scope {
          %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc105)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc106)
          %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc107)
          %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc231)
          cir.if %21 {
            %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc109)
            %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc110)
          } loc(#loc232)
        } loc(#loc230)
      } loc(#loc225)
    } loc(#loc223)
    cir.return loc(#loc19)
  } loc(#loc196)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc233)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"file.txt\00" : !cir.array<!s8i x 9>> : !cir.array<!s8i x 9> {alignment = 1 : i64} loc(#loc113)
  cir.func internal private @_ZN51CWE23_Relative_Path_Traversal__char_console_open_32L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc235)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc236)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc237)
    %3 = cir.alloca !cir.array<!s8i x 4096>, !cir.ptr<!cir.array<!s8i x 4096>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc188)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc236)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc237)
    %4 = cir.get_global @__const._ZN51CWE23_Relative_Path_Traversal__char_console_open_32L7goodG2BEv.dataBuffer : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc188)
    cir.copy %4 to %3 : !cir.ptr<!cir.array<!s8i x 4096>> loc(#loc188)
    %5 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 4096>>), !cir.ptr<!s8i> loc(#loc122)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc238)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc240)
      %7 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc128)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc240)
      %9 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc129)
      %10 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
      %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 9>> loc(#loc113)
      %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 9>>), !cir.ptr<!s8i> loc(#loc113)
      %13 = cir.call @strcat(%10, %12) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc129)
      %14 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
      %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
      cir.store %14, %15 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc241)
    } loc(#loc239)
    cir.scope {
      %6 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc243)
      %7 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc137)
      %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
      cir.store %8, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc243)
      cir.scope {
        %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc"] {alignment = 4 : i64} loc(#loc245)
        %10 = cir.load %6 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc143)
        %11 = cir.const #cir.int<2> : !s32i loc(#loc144)
        %12 = cir.const #cir.int<64> : !s32i loc(#loc145)
        %13 = cir.binop(or, %11, %12) : !s32i loc(#loc246)
        %14 = cir.const #cir.int<256> : !s32i loc(#loc146)
        %15 = cir.const #cir.int<128> : !s32i loc(#loc147)
        %16 = cir.binop(or, %14, %15) : !s32i loc(#loc247)
        %17 = cir.call @open(%10, %13, %16) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc148)
        cir.store %17, %9 : !s32i, !cir.ptr<!s32i> loc(#loc248)
        cir.scope {
          %18 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc153)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc154)
          %20 = cir.unary(minus, %19) : !s32i, !s32i loc(#loc155)
          %21 = cir.cmp(ne, %18, %20) : !s32i, !cir.bool loc(#loc250)
          cir.if %21 {
            %22 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc157)
            %23 = cir.call @close(%22) : (!s32i) -> !s32i loc(#loc158)
          } loc(#loc251)
        } loc(#loc249)
      } loc(#loc244)
    } loc(#loc242)
    cir.return loc(#loc115)
  } loc(#loc234)
  cir.func @_ZN51CWE23_Relative_Path_Traversal__char_console_open_324goodEv() extra(#fn_attr1) {
    cir.call @_ZN51CWE23_Relative_Path_Traversal__char_console_open_32L7goodG2BEv() : () -> () loc(#loc161)
    cir.return loc(#loc160)
  } loc(#loc252)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc253)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc254)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc166)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc167)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc168)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc169)
  cir.func @main(%arg0: !s32i loc(fused[#loc172, #loc173]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc174, #loc175])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc256)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc257)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc171)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc176)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc177)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc178)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc178)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc179)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc166)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc166)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc180)
    cir.call @_ZN51CWE23_Relative_Path_Traversal__char_console_open_324goodEv() : () -> () loc(#loc181)
    %8 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc167)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc167)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc182)
    %10 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc168)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc168)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc183)
    cir.call @_ZN51CWE23_Relative_Path_Traversal__char_console_open_323badEv() : () -> () loc(#loc184)
    %12 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc169)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc169)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc185)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc186)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc258)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc258)
    cir.return %15 : !s32i loc(#loc258)
  } loc(#loc255)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE23_Relative_Path_Traversal/s01/CWE23_Relative_Path_Traversal__char_console_open_32.cpp":0:0)
#loc1 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":100:5)
#loc2 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":100:37)
#loc3 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":45:5)
#loc4 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":45:37)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("/usr/include/stdio.h":149:1)
#loc10 = loc("/usr/include/stdio.h":149:14)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":68:31)
#loc14 = loc("/usr/include/fcntl.h":209:1)
#loc15 = loc("/usr/include/fcntl.h":209:56)
#loc16 = loc("/usr/include/unistd.h":358:1)
#loc17 = loc("/usr/include/unistd.h":358:27)
#loc18 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":40:1)
#loc19 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":88:1)
#loc20 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":42:5)
#loc21 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":42:12)
#loc22 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":43:5)
#loc23 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":43:25)
#loc24 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":44:5)
#loc25 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":44:25)
#loc26 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":46:12)
#loc27 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":46:5)
#loc28 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":47:5)
#loc29 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":75:5)
#loc30 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":48:9)
#loc31 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":48:24)
#loc32 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":48:23)
#loc33 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":49:9)
#loc34 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":73:9)
#loc35 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":51:13)
#loc36 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":51:41)
#loc37 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":51:30)
#loc38 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":51:37)
#loc39 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":53:13)
#loc40 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":72:13)
#loc41 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":53:17)
#loc42 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":53:30)
#loc43 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":53:40)
#loc44 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":54:13)
#loc45 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":56:17)
#loc46 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":71:17)
#loc47 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":56:27)
#loc48 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":56:32)
#loc49 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":56:31)
#loc50 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":56:47)
#loc51 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":56:60)
#loc52 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":56:70)
#loc53 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":56:21)
#loc54 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":56:80)
#loc55 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":57:17)
#loc56 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":65:17)
#loc57 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":67:17)
#loc58 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":60:31)
#loc59 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":60:38)
#loc60 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":60:21)
#loc61 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":60:42)
#loc62 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":61:21)
#loc63 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":64:21)
#loc64 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":61:25)
#loc65 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":61:35)
#loc66 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":61:37)
#loc67 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":61:40)
#loc68 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":61:45)
#loc69 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":61:53)
#loc70 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":61:54)
#loc71 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":61:59)
#loc72 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":62:21)
#loc73 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":63:43)
#loc74 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":63:25)
#loc75 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":63:30)
#loc76 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":63:38)
#loc77 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":63:39)
#loc78 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":68:21)
#loc79 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":70:37)
#loc80 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":70:21)
#loc81 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":70:26)
#loc82 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":70:33)
#loc83 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":74:21)
#loc84 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":74:10)
#loc85 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":74:9)
#loc86 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":76:5)
#loc87 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":87:5)
#loc88 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":77:9)
#loc89 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":77:24)
#loc90 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":77:23)
#loc91 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":78:9)
#loc92 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":86:9)
#loc93 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":79:13)
#loc94 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":79:17)
#loc95 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":81:29)
#loc96 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":81:35)
#loc97 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":81:42)
#loc98 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":81:51)
#loc99 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":81:59)
#loc100 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":81:24)
#loc101 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":81:13)
#loc102 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":81:67)
#loc103 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":82:13)
#loc104 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":85:13)
#loc105 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":82:17)
#loc106 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":82:30)
#loc107 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":82:29)
#loc108 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":83:13)
#loc109 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":84:23)
#loc110 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":84:17)
#loc111 = loc("/usr/include/string.h":149:1)
#loc112 = loc("/usr/include/string.h":150:14)
#loc113 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":105:22)
#loc114 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":95:1)
#loc115 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":120:1)
#loc116 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":97:5)
#loc117 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":97:12)
#loc118 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":98:5)
#loc119 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":98:25)
#loc120 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":99:5)
#loc121 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":99:25)
#loc122 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":101:12)
#loc123 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":101:5)
#loc124 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":102:5)
#loc125 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":107:5)
#loc126 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":103:9)
#loc127 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":103:24)
#loc128 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":103:23)
#loc129 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":105:9)
#loc130 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":105:16)
#loc131 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":106:21)
#loc132 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":106:10)
#loc133 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":106:9)
#loc134 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":108:5)
#loc135 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":119:5)
#loc136 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":109:9)
#loc137 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":109:24)
#loc138 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":109:23)
#loc139 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":110:9)
#loc140 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":118:9)
#loc141 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":111:13)
#loc142 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":111:17)
#loc143 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":113:29)
#loc144 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":113:35)
#loc145 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":113:42)
#loc146 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":113:51)
#loc147 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":113:59)
#loc148 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":113:24)
#loc149 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":113:13)
#loc150 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":113:67)
#loc151 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":114:13)
#loc152 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":117:13)
#loc153 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":114:17)
#loc154 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":114:30)
#loc155 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":114:29)
#loc156 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":115:13)
#loc157 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":116:23)
#loc158 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":116:17)
#loc159 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":122:1)
#loc160 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":125:1)
#loc161 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":124:5)
#loc162 = loc("/usr/include/stdlib.h":575:1)
#loc163 = loc("/usr/include/stdlib.h":575:41)
#loc164 = loc("/usr/include/time.h":76:1)
#loc165 = loc("/usr/include/time.h":76:38)
#loc166 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":144:15)
#loc167 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":146:15)
#loc168 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":149:15)
#loc169 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":151:15)
#loc170 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":139:1)
#loc171 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":154:1)
#loc176 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":140:1)
#loc177 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":142:27)
#loc178 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":142:22)
#loc179 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":142:5)
#loc180 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":144:5)
#loc181 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":145:5)
#loc182 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":146:5)
#loc183 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":149:5)
#loc184 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":150:5)
#loc185 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":151:5)
#loc186 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":153:12)
#loc187 = loc("CWE23_Relative_Path_Traversal__char_console_open_32.cpp":153:5)
#loc188 = loc(fused[#loc1, #loc2])
#loc189 = loc(fused[#loc3, #loc4])
#loc190 = loc(fused[#loc5, #loc6])
#loc191 = loc(fused[#loc7, #loc8])
#loc192 = loc(fused[#loc9, #loc10])
#loc193 = loc(fused[#loc11, #loc12])
#loc194 = loc(fused[#loc14, #loc15])
#loc195 = loc(fused[#loc16, #loc17])
#loc196 = loc(fused[#loc18, #loc19])
#loc197 = loc(fused[#loc20, #loc21])
#loc198 = loc(fused[#loc22, #loc23])
#loc199 = loc(fused[#loc24, #loc25])
#loc200 = loc(fused[#loc27, #loc26])
#loc201 = loc(fused[#loc28, #loc29])
#loc202 = loc(fused[#loc30, #loc31])
#loc203 = loc(fused[#loc33, #loc34])
#loc204 = loc(fused[#loc35, #loc36])
#loc205 = loc(fused[#loc39, #loc40])
#loc206 = loc(fused[#loc41, #loc42])
#loc207 = loc(fused[#loc41, #loc43])
#loc208 = loc(fused[#loc44, #loc40])
#loc209 = loc(fused[#loc45, #loc46])
#loc210 = loc(fused[#loc50, #loc51])
#loc211 = loc(fused[#loc53, #loc54])
#loc212 = loc(fused[#loc55, #loc56, #loc57, #loc46])
#loc213 = loc(fused[#loc60, #loc61])
#loc214 = loc(fused[#loc62, #loc63])
#loc215 = loc(fused[#loc64, #loc65])
#loc216 = loc(fused[#loc68, #loc69])
#loc217 = loc(fused[#loc67, #loc71])
#loc218 = loc(fused[#loc72, #loc63])
#loc219 = loc(fused[#loc75, #loc76])
#loc220 = loc(fused[#loc74, #loc73])
#loc221 = loc(fused[#loc80, #loc79])
#loc222 = loc(fused[#loc85, #loc83])
#loc223 = loc(fused[#loc86, #loc87])
#loc224 = loc(fused[#loc88, #loc89])
#loc225 = loc(fused[#loc91, #loc92])
#loc226 = loc(fused[#loc93, #loc94])
#loc227 = loc(fused[#loc96, #loc97])
#loc228 = loc(fused[#loc98, #loc99])
#loc229 = loc(fused[#loc101, #loc102])
#loc230 = loc(fused[#loc103, #loc104])
#loc231 = loc(fused[#loc105, #loc106])
#loc232 = loc(fused[#loc108, #loc104])
#loc233 = loc(fused[#loc111, #loc112])
#loc234 = loc(fused[#loc114, #loc115])
#loc235 = loc(fused[#loc116, #loc117])
#loc236 = loc(fused[#loc118, #loc119])
#loc237 = loc(fused[#loc120, #loc121])
#loc238 = loc(fused[#loc123, #loc122])
#loc239 = loc(fused[#loc124, #loc125])
#loc240 = loc(fused[#loc126, #loc127])
#loc241 = loc(fused[#loc133, #loc131])
#loc242 = loc(fused[#loc134, #loc135])
#loc243 = loc(fused[#loc136, #loc137])
#loc244 = loc(fused[#loc139, #loc140])
#loc245 = loc(fused[#loc141, #loc142])
#loc246 = loc(fused[#loc144, #loc145])
#loc247 = loc(fused[#loc146, #loc147])
#loc248 = loc(fused[#loc149, #loc150])
#loc249 = loc(fused[#loc151, #loc152])
#loc250 = loc(fused[#loc153, #loc154])
#loc251 = loc(fused[#loc156, #loc152])
#loc252 = loc(fused[#loc159, #loc160])
#loc253 = loc(fused[#loc162, #loc163])
#loc254 = loc(fused[#loc164, #loc165])
#loc255 = loc(fused[#loc170, #loc171])
#loc258 = loc(fused[#loc187, #loc186])
