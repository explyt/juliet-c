!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc77 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":103:10)
#loc78 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":103:14)
#loc79 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":103:20)
#loc80 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":103:32)
#loc200 = loc(fused[#loc77, #loc78])
#loc201 = loc(fused[#loc79, #loc80])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc170)
  cir.func private @printIntLine(!s32i) loc(#loc171)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc172)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc173)
  cir.func no_proto @CWE758_Undefined_Behavior__int_pointer_alloca_use_12_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc176)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc176)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc13)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc13)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc179)
          %5 = cir.const #cir.int<8> : !u64i loc(#loc21)
          %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc21)
          %7 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc180)
          %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc21)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc21)
          cir.store %9, %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc179)
          %10 = cir.load deref %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc23)
          %11 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc24)
          cir.store %11, %7 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc180)
          %12 = cir.load deref %7 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc25)
          %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc26)
          cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc27)
        } loc(#loc178)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc182)
          %5 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc183)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc33)
          %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc33)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc33)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc33)
          cir.store %9, %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc183)
          %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc34)
          %11 = cir.const #cir.int<4> : !u64i loc(#loc184)
          %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc34)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc185)
          cir.store %13, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc186)
          cir.scope {
            %18 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc41)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc42)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc42)
            %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s32i>, !cir.bool loc(#loc188)
            cir.if %21 {
              %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc44)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc45)
              %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc46)
              cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc44)
            } loc(#loc189)
          } loc(#loc187)
          %14 = cir.const #cir.int<5> : !s32i loc(#loc47)
          %15 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc48)
          cir.store %14, %15 : !s32i, !cir.ptr<!s32i> loc(#loc190)
          %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc50)
          %17 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc51)
          cir.store %16, %17 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc191)
          cir.scope {
            %18 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc193)
            %19 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc56)
            %20 = cir.load %19 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc57)
            cir.store %20, %18 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc193)
            %21 = cir.load deref %18 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc58)
            %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc59)
            cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc60)
          } loc(#loc192)
        } loc(#loc181)
      } loc(#loc177)
    } loc(#loc175)
    cir.return loc(#loc10)
  } loc(#loc174)
  cir.func no_proto @CWE758_Undefined_Behavior__int_pointer_alloca_use_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc195)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc63)
    cir.return loc(#loc62)
  } loc(#loc194)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc196)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc197)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc198)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc71)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc72)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc73)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc74)
  cir.func @main(%arg0: !s32i loc(fused[#loc77, #loc78]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc79, #loc80])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc200)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc201)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc76)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc81)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc81)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc82)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc83)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc83)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc84)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc71)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc71)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %8 = cir.get_global @CWE758_Undefined_Behavior__int_pointer_alloca_use_12_good : !cir.ptr<!cir.func<!void ()>> loc(#loc202)
    cir.call @CWE758_Undefined_Behavior__int_pointer_alloca_use_12_good() : () -> () loc(#loc86)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc72)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc72)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc88)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc73)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc73)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %13 = cir.get_global @CWE758_Undefined_Behavior__int_pointer_alloca_use_12_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc203)
    cir.call @CWE758_Undefined_Behavior__int_pointer_alloca_use_12_bad() : () -> () loc(#loc90)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc74)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc74)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc93)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc204)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc204)
    cir.return %17 : !s32i loc(#loc204)
  } loc(#loc199)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc207)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc207)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc99)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc99)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc210)
          %5 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc211)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc109)
          %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc109)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc109)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc109)
          cir.store %9, %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc211)
          %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc110)
          %11 = cir.const #cir.int<4> : !u64i loc(#loc212)
          %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc110)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc213)
          cir.store %13, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc214)
          cir.scope {
            %18 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc117)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc118)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc118)
            %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s32i>, !cir.bool loc(#loc216)
            cir.if %21 {
              %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc120)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc121)
              %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc122)
              cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc120)
            } loc(#loc217)
          } loc(#loc215)
          %14 = cir.const #cir.int<5> : !s32i loc(#loc123)
          %15 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc124)
          cir.store %14, %15 : !s32i, !cir.ptr<!s32i> loc(#loc218)
          %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc126)
          %17 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc127)
          cir.store %16, %17 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc219)
          cir.scope {
            %18 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc221)
            %19 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc132)
            %20 = cir.load %19 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc133)
            cir.store %20, %18 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc221)
            %21 = cir.load deref %18 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc134)
            %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc135)
            cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc136)
          } loc(#loc220)
        } loc(#loc209)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc223)
          %5 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["pointer", init] {alignment = 8 : i64} loc(#loc224)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc142)
          %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc142)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc142)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!cir.ptr<!s32i>> loc(#loc142)
          cir.store %9, %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc224)
          %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc143)
          %11 = cir.const #cir.int<4> : !u64i loc(#loc225)
          %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc143)
          %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc226)
          cir.store %13, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc227)
          cir.scope {
            %18 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc150)
            %19 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc151)
            %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc151)
            %21 = cir.cmp(eq, %18, %20) : !cir.ptr<!s32i>, !cir.bool loc(#loc229)
            cir.if %21 {
              %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc153)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc154)
              %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc155)
              cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc153)
            } loc(#loc230)
          } loc(#loc228)
          %14 = cir.const #cir.int<5> : !s32i loc(#loc156)
          %15 = cir.load deref %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc157)
          cir.store %14, %15 : !s32i, !cir.ptr<!s32i> loc(#loc231)
          %16 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc159)
          %17 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc160)
          cir.store %16, %17 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc232)
          cir.scope {
            %18 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data", init] {alignment = 8 : i64} loc(#loc234)
            %19 = cir.load deref %5 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc165)
            %20 = cir.load %19 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc166)
            cir.store %20, %18 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc234)
            %21 = cir.load deref %18 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc167)
            %22 = cir.load %21 : !cir.ptr<!s32i>, !s32i loc(#loc168)
            cir.call @printIntLine(%22) : (!s32i) -> () loc(#loc169)
          } loc(#loc233)
        } loc(#loc222)
      } loc(#loc208)
    } loc(#loc206)
    cir.return loc(#loc96)
  } loc(#loc205)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE758_Undefined_Behavior/CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("/usr/include/stdlib.h":672:1)
#loc6 = loc("/usr/include/stdlib.h":672:45)
#loc7 = loc("/usr/include/stdlib.h":756:1)
#loc8 = loc("/usr/include/stdlib.h":756:70)
#loc9 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":20:1)
#loc10 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":46:1)
#loc11 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":22:5)
#loc12 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":45:5)
#loc13 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":22:8)
#loc14 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":22:33)
#loc15 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":23:5)
#loc16 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":29:5)
#loc17 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":31:5)
#loc18 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":24:9)
#loc19 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":28:9)
#loc20 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":25:13)
#loc21 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":25:40)
#loc22 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":26:13)
#loc23 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":26:27)
#loc24 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":26:26)
#loc25 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":27:27)
#loc26 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":27:26)
#loc27 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":27:13)
#loc28 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":32:9)
#loc29 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":44:9)
#loc30 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":33:13)
#loc31 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":33:19)
#loc32 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":34:13)
#loc33 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":34:40)
#loc34 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":36:27)
#loc35 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":36:34)
#loc36 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":36:44)
#loc37 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":36:45)
#loc38 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":36:13)
#loc39 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":37:13)
#loc40 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":37:41)
#loc41 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":37:17)
#loc42 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":37:25)
#loc43 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":37:31)
#loc44 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":37:32)
#loc45 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":37:38)
#loc46 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":37:37)
#loc47 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":38:21)
#loc48 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":38:14)
#loc49 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":38:13)
#loc50 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":39:24)
#loc51 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":39:14)
#loc52 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":39:13)
#loc53 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":40:13)
#loc54 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":43:13)
#loc55 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":41:17)
#loc56 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":41:31)
#loc57 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":41:30)
#loc58 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":42:31)
#loc59 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":42:30)
#loc60 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":42:17)
#loc61 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":89:1)
#loc62 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":92:1)
#loc63 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":91:5)
#loc64 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":91:11)
#loc65 = loc("/usr/include/stdlib.h":575:1)
#loc66 = loc("/usr/include/stdlib.h":575:41)
#loc67 = loc("/usr/include/time.h":76:1)
#loc68 = loc("/usr/include/time.h":76:38)
#loc69 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc70 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc71 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":108:15)
#loc72 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":110:15)
#loc73 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":113:15)
#loc74 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":115:15)
#loc75 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":103:1)
#loc76 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":118:1)
#loc81 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":104:1)
#loc82 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":106:27)
#loc83 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":106:22)
#loc84 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":106:5)
#loc85 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":108:5)
#loc86 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":109:5)
#loc87 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":109:63)
#loc88 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":110:5)
#loc89 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":113:5)
#loc90 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":114:5)
#loc91 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":114:62)
#loc92 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":115:5)
#loc93 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":117:12)
#loc94 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":117:5)
#loc95 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":53:1)
#loc96 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":87:1)
#loc97 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":55:5)
#loc98 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":86:5)
#loc99 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":55:8)
#loc100 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":55:33)
#loc101 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":56:5)
#loc102 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":70:5)
#loc103 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":72:5)
#loc104 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":57:9)
#loc105 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":69:9)
#loc106 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":58:13)
#loc107 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":58:19)
#loc108 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":59:13)
#loc109 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":59:40)
#loc110 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":61:27)
#loc111 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":61:34)
#loc112 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":61:44)
#loc113 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":61:45)
#loc114 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":61:13)
#loc115 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":62:13)
#loc116 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":62:41)
#loc117 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":62:17)
#loc118 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":62:25)
#loc119 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":62:31)
#loc120 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":62:32)
#loc121 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":62:38)
#loc122 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":62:37)
#loc123 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":63:21)
#loc124 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":63:14)
#loc125 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":63:13)
#loc126 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":64:24)
#loc127 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":64:14)
#loc128 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":64:13)
#loc129 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":65:13)
#loc130 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":68:13)
#loc131 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":66:17)
#loc132 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":66:31)
#loc133 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":66:30)
#loc134 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":67:31)
#loc135 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":67:30)
#loc136 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":67:17)
#loc137 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":73:9)
#loc138 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":85:9)
#loc139 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":74:13)
#loc140 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":74:19)
#loc141 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":75:13)
#loc142 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":75:40)
#loc143 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":77:27)
#loc144 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":77:34)
#loc145 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":77:44)
#loc146 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":77:45)
#loc147 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":77:13)
#loc148 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":78:13)
#loc149 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":78:41)
#loc150 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":78:17)
#loc151 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":78:25)
#loc152 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":78:31)
#loc153 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":78:32)
#loc154 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":78:38)
#loc155 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":78:37)
#loc156 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":79:21)
#loc157 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":79:14)
#loc158 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":79:13)
#loc159 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":80:24)
#loc160 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":80:14)
#loc161 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":80:13)
#loc162 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":81:13)
#loc163 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":84:13)
#loc164 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":82:17)
#loc165 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":82:31)
#loc166 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":82:30)
#loc167 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":83:31)
#loc168 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":83:30)
#loc169 = loc("CWE758_Undefined_Behavior__int_pointer_alloca_use_12.c":83:17)
#loc170 = loc(fused[#loc1, #loc2])
#loc171 = loc(fused[#loc3, #loc4])
#loc172 = loc(fused[#loc5, #loc6])
#loc173 = loc(fused[#loc7, #loc8])
#loc174 = loc(fused[#loc9, #loc10])
#loc175 = loc(fused[#loc11, #loc12])
#loc176 = loc(fused[#loc13, #loc14])
#loc177 = loc(fused[#loc15, #loc16, #loc17, #loc12])
#loc178 = loc(fused[#loc18, #loc19])
#loc179 = loc(fused[#loc20, #loc21])
#loc180 = loc(fused[#loc22, #loc23])
#loc181 = loc(fused[#loc28, #loc29])
#loc182 = loc(fused[#loc30, #loc31])
#loc183 = loc(fused[#loc32, #loc33])
#loc184 = loc(fused[#loc35, #loc36])
#loc185 = loc(fused[#loc34, #loc37])
#loc186 = loc(fused[#loc38, #loc37])
#loc187 = loc(fused[#loc39, #loc40])
#loc188 = loc(fused[#loc41, #loc42])
#loc189 = loc(fused[#loc43, #loc40])
#loc190 = loc(fused[#loc49, #loc47])
#loc191 = loc(fused[#loc52, #loc50])
#loc192 = loc(fused[#loc53, #loc54])
#loc193 = loc(fused[#loc55, #loc56])
#loc194 = loc(fused[#loc61, #loc62])
#loc195 = loc(fused[#loc63, #loc64])
#loc196 = loc(fused[#loc65, #loc66])
#loc197 = loc(fused[#loc67, #loc68])
#loc198 = loc(fused[#loc69, #loc70])
#loc199 = loc(fused[#loc75, #loc76])
#loc202 = loc(fused[#loc86, #loc87])
#loc203 = loc(fused[#loc90, #loc91])
#loc204 = loc(fused[#loc94, #loc93])
#loc205 = loc(fused[#loc95, #loc96])
#loc206 = loc(fused[#loc97, #loc98])
#loc207 = loc(fused[#loc99, #loc100])
#loc208 = loc(fused[#loc101, #loc102, #loc103, #loc98])
#loc209 = loc(fused[#loc104, #loc105])
#loc210 = loc(fused[#loc106, #loc107])
#loc211 = loc(fused[#loc108, #loc109])
#loc212 = loc(fused[#loc111, #loc112])
#loc213 = loc(fused[#loc110, #loc113])
#loc214 = loc(fused[#loc114, #loc113])
#loc215 = loc(fused[#loc115, #loc116])
#loc216 = loc(fused[#loc117, #loc118])
#loc217 = loc(fused[#loc119, #loc116])
#loc218 = loc(fused[#loc125, #loc123])
#loc219 = loc(fused[#loc128, #loc126])
#loc220 = loc(fused[#loc129, #loc130])
#loc221 = loc(fused[#loc131, #loc132])
#loc222 = loc(fused[#loc137, #loc138])
#loc223 = loc(fused[#loc139, #loc140])
#loc224 = loc(fused[#loc141, #loc142])
#loc225 = loc(fused[#loc144, #loc145])
#loc226 = loc(fused[#loc143, #loc146])
#loc227 = loc(fused[#loc147, #loc146])
#loc228 = loc(fused[#loc148, #loc149])
#loc229 = loc(fused[#loc150, #loc151])
#loc230 = loc(fused[#loc152, #loc149])
#loc231 = loc(fused[#loc158, #loc156])
#loc232 = loc(fused[#loc161, #loc159])
#loc233 = loc(fused[#loc162, #loc163])
#loc234 = loc(fused[#loc164, #loc165])
