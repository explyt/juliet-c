!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc31 = loc("CWE665_Improper_Initialization__char_ncat_45.c":97:10)
#loc32 = loc("CWE665_Improper_Initialization__char_ncat_45.c":97:14)
#loc33 = loc("CWE665_Improper_Initialization__char_ncat_45.c":97:20)
#loc34 = loc("CWE665_Improper_Initialization__char_ncat_45.c":97:32)
#loc144 = loc(fused[#loc31, #loc32])
#loc145 = loc(fused[#loc33, #loc34])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_ncat_45.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @CWE665_Improper_Initialization__char_ncat_45_badData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc131)
  cir.func no_proto @CWE665_Improper_Initialization__char_ncat_45_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc133)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc134)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc9)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc135)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc11)
    %4 = cir.get_global @CWE665_Improper_Initialization__char_ncat_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
    cir.store %3, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc136)
    %5 = cir.get_global @badSink : !cir.ptr<!cir.func<!void ()>> loc(#loc137)
    cir.call %5() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc13)
    cir.return loc(#loc4)
  } loc(#loc132)
  cir.func no_proto @CWE665_Improper_Initialization__char_ncat_45_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc139)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc17)
    cir.return loc(#loc16)
  } loc(#loc138)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc140)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc141)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc142)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc25)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc26)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc27)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc28)
  cir.func @main(%arg0: !s32i loc(fused[#loc31, #loc32]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc33, #loc34])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc144)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc145)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc30)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc35)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc35)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc36)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc37)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc37)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc38)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc25)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc25)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc39)
    %8 = cir.get_global @CWE665_Improper_Initialization__char_ncat_45_good : !cir.ptr<!cir.func<!void ()>> loc(#loc146)
    cir.call @CWE665_Improper_Initialization__char_ncat_45_good() : () -> () loc(#loc40)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc26)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc26)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc42)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc27)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc27)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc43)
    %13 = cir.get_global @CWE665_Improper_Initialization__char_ncat_45_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc147)
    cir.call @CWE665_Improper_Initialization__char_ncat_45_bad() : () -> () loc(#loc44)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc28)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc28)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc46)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc47)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc148)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc148)
    cir.return %17 : !s32i loc(#loc148)
  } loc(#loc143)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc149)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc150)
  cir.func no_proto internal private @badSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc152)
    %1 = cir.get_global @CWE665_Improper_Initialization__char_ncat_45_badData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc131)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc56)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc152)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc154)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc155)
      %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc63)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc63)
      %7 = cir.const #cir.int<67> : !s32i loc(#loc64)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc65)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc66)
      %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc65)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc65)
      cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc156)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc69)
      %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc69)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc70)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc71)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc70)
      %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc72)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc72)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc157)
      %19 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc73)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc74)
      %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc73)
      cir.store %21, %3 : !u64i, !cir.ptr<!u64i> loc(#loc158)
      %22 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc77)
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc78)
      %24 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc79)
      %25 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc80)
      %26 = cir.call @strncat(%23, %24, %25) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc77)
      %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
      cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    } loc(#loc153)
    cir.return loc(#loc54)
  } loc(#loc151)
  cir.global "private" internal dsolocal @CWE665_Improper_Initialization__char_ncat_45_goodG2BData = #cir.ptr<null> : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc159)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc161)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc162)
    %2 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc91)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc163)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc93)
    %4 = cir.cast(integral, %3 : !s32i), !s8i loc(#loc93)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
    %6 = cir.const #cir.int<0> : !s32i loc(#loc95)
    %7 = cir.ptr_stride(%5 : !cir.ptr<!s8i>, %6 : !s32i), !cir.ptr<!s8i> loc(#loc96)
    cir.store %4, %7 : !s8i, !cir.ptr<!s8i> loc(#loc164)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
    %9 = cir.get_global @CWE665_Improper_Initialization__char_ncat_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc159)
    cir.store %8, %9 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc165)
    %10 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void ()>> loc(#loc166)
    cir.call %10() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc99)
    cir.return loc(#loc86)
  } loc(#loc160)
  cir.func no_proto internal private @goodG2BSink() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc168)
    %1 = cir.get_global @CWE665_Improper_Initialization__char_ncat_45_goodG2BData : !cir.ptr<!cir.ptr<!s8i>> loc(#loc159)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc168)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["sourceLen"] {alignment = 8 : i64} loc(#loc170)
      %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc171)
      %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc111)
      %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc111)
      %7 = cir.const #cir.int<67> : !s32i loc(#loc112)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc113)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc114)
      %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc113)
      %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc113)
      cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc172)
      %12 = cir.const #cir.int<0> : !s32i loc(#loc117)
      %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc117)
      %14 = cir.const #cir.int<100> : !s32i loc(#loc118)
      %15 = cir.const #cir.int<1> : !s32i loc(#loc119)
      %16 = cir.binop(sub, %14, %15) nsw : !s32i loc(#loc118)
      %17 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc120)
      %18 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %16 : !s32i), !cir.ptr<!s8i> loc(#loc120)
      cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc173)
      %19 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc121)
      %20 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc122)
      %21 = cir.call @strlen(%20) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr1) loc(#loc121)
      cir.store %21, %3 : !u64i, !cir.ptr<!u64i> loc(#loc174)
      %22 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc125)
      %23 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc126)
      %24 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc127)
      %25 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc128)
      %26 = cir.call @strncat(%23, %24, %25) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr1) loc(#loc125)
      %27 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc129)
      cir.call @printLine(%27) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    } loc(#loc169)
    cir.return loc(#loc102)
  } loc(#loc167)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE665_Improper_Initialization/CWE665_Improper_Initialization__char_ncat_45.c":0:0)
#loc1 = loc("CWE665_Improper_Initialization__char_ncat_45.c":21:1)
#loc2 = loc("CWE665_Improper_Initialization__char_ncat_45.c":21:15)
#loc3 = loc("CWE665_Improper_Initialization__char_ncat_45.c":41:1)
#loc4 = loc("CWE665_Improper_Initialization__char_ncat_45.c":50:1)
#loc5 = loc("CWE665_Improper_Initialization__char_ncat_45.c":43:5)
#loc6 = loc("CWE665_Improper_Initialization__char_ncat_45.c":43:12)
#loc7 = loc("CWE665_Improper_Initialization__char_ncat_45.c":44:5)
#loc8 = loc("CWE665_Improper_Initialization__char_ncat_45.c":44:24)
#loc9 = loc("CWE665_Improper_Initialization__char_ncat_45.c":45:12)
#loc10 = loc("CWE665_Improper_Initialization__char_ncat_45.c":45:5)
#loc11 = loc("CWE665_Improper_Initialization__char_ncat_45.c":48:60)
#loc12 = loc("CWE665_Improper_Initialization__char_ncat_45.c":48:5)
#loc13 = loc("CWE665_Improper_Initialization__char_ncat_45.c":49:5)
#loc14 = loc("CWE665_Improper_Initialization__char_ncat_45.c":49:13)
#loc15 = loc("CWE665_Improper_Initialization__char_ncat_45.c":83:1)
#loc16 = loc("CWE665_Improper_Initialization__char_ncat_45.c":86:1)
#loc17 = loc("CWE665_Improper_Initialization__char_ncat_45.c":85:5)
#loc18 = loc("CWE665_Improper_Initialization__char_ncat_45.c":85:13)
#loc19 = loc("/usr/include/stdlib.h":575:1)
#loc20 = loc("/usr/include/stdlib.h":575:41)
#loc21 = loc("/usr/include/time.h":76:1)
#loc22 = loc("/usr/include/time.h":76:38)
#loc23 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc24 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc25 = loc("CWE665_Improper_Initialization__char_ncat_45.c":102:15)
#loc26 = loc("CWE665_Improper_Initialization__char_ncat_45.c":104:15)
#loc27 = loc("CWE665_Improper_Initialization__char_ncat_45.c":107:15)
#loc28 = loc("CWE665_Improper_Initialization__char_ncat_45.c":109:15)
#loc29 = loc("CWE665_Improper_Initialization__char_ncat_45.c":97:1)
#loc30 = loc("CWE665_Improper_Initialization__char_ncat_45.c":112:1)
#loc35 = loc("CWE665_Improper_Initialization__char_ncat_45.c":98:1)
#loc36 = loc("CWE665_Improper_Initialization__char_ncat_45.c":100:27)
#loc37 = loc("CWE665_Improper_Initialization__char_ncat_45.c":100:22)
#loc38 = loc("CWE665_Improper_Initialization__char_ncat_45.c":100:5)
#loc39 = loc("CWE665_Improper_Initialization__char_ncat_45.c":102:5)
#loc40 = loc("CWE665_Improper_Initialization__char_ncat_45.c":103:5)
#loc41 = loc("CWE665_Improper_Initialization__char_ncat_45.c":103:55)
#loc42 = loc("CWE665_Improper_Initialization__char_ncat_45.c":104:5)
#loc43 = loc("CWE665_Improper_Initialization__char_ncat_45.c":107:5)
#loc44 = loc("CWE665_Improper_Initialization__char_ncat_45.c":108:5)
#loc45 = loc("CWE665_Improper_Initialization__char_ncat_45.c":108:54)
#loc46 = loc("CWE665_Improper_Initialization__char_ncat_45.c":109:5)
#loc47 = loc("CWE665_Improper_Initialization__char_ncat_45.c":111:12)
#loc48 = loc("CWE665_Improper_Initialization__char_ncat_45.c":111:5)
#loc49 = loc("/usr/include/string.h":407:1)
#loc50 = loc("/usr/include/string.h":408:33)
#loc51 = loc("/usr/include/string.h":152:1)
#loc52 = loc("/usr/include/string.h":153:29)
#loc53 = loc("CWE665_Improper_Initialization__char_ncat_45.c":26:1)
#loc54 = loc("CWE665_Improper_Initialization__char_ncat_45.c":39:1)
#loc55 = loc("CWE665_Improper_Initialization__char_ncat_45.c":28:5)
#loc56 = loc("CWE665_Improper_Initialization__char_ncat_45.c":28:19)
#loc57 = loc("CWE665_Improper_Initialization__char_ncat_45.c":29:5)
#loc58 = loc("CWE665_Improper_Initialization__char_ncat_45.c":38:5)
#loc59 = loc("CWE665_Improper_Initialization__char_ncat_45.c":30:9)
#loc60 = loc("CWE665_Improper_Initialization__char_ncat_45.c":30:16)
#loc61 = loc("CWE665_Improper_Initialization__char_ncat_45.c":31:9)
#loc62 = loc("CWE665_Improper_Initialization__char_ncat_45.c":31:24)
#loc63 = loc("CWE665_Improper_Initialization__char_ncat_45.c":32:16)
#loc64 = loc("CWE665_Improper_Initialization__char_ncat_45.c":32:24)
#loc65 = loc("CWE665_Improper_Initialization__char_ncat_45.c":32:29)
#loc66 = loc("CWE665_Improper_Initialization__char_ncat_45.c":32:33)
#loc67 = loc("CWE665_Improper_Initialization__char_ncat_45.c":32:9)
#loc68 = loc("CWE665_Improper_Initialization__char_ncat_45.c":32:34)
#loc69 = loc("CWE665_Improper_Initialization__char_ncat_45.c":33:25)
#loc70 = loc("CWE665_Improper_Initialization__char_ncat_45.c":33:16)
#loc71 = loc("CWE665_Improper_Initialization__char_ncat_45.c":33:20)
#loc72 = loc("CWE665_Improper_Initialization__char_ncat_45.c":33:9)
#loc73 = loc("CWE665_Improper_Initialization__char_ncat_45.c":34:21)
#loc74 = loc("CWE665_Improper_Initialization__char_ncat_45.c":34:28)
#loc75 = loc("CWE665_Improper_Initialization__char_ncat_45.c":34:9)
#loc76 = loc("CWE665_Improper_Initialization__char_ncat_45.c":34:34)
#loc77 = loc("CWE665_Improper_Initialization__char_ncat_45.c":36:9)
#loc78 = loc("CWE665_Improper_Initialization__char_ncat_45.c":36:17)
#loc79 = loc("CWE665_Improper_Initialization__char_ncat_45.c":36:23)
#loc80 = loc("CWE665_Improper_Initialization__char_ncat_45.c":36:31)
#loc81 = loc("CWE665_Improper_Initialization__char_ncat_45.c":37:19)
#loc82 = loc("CWE665_Improper_Initialization__char_ncat_45.c":37:9)
#loc83 = loc("CWE665_Improper_Initialization__char_ncat_45.c":22:1)
#loc84 = loc("CWE665_Improper_Initialization__char_ncat_45.c":22:15)
#loc85 = loc("CWE665_Improper_Initialization__char_ncat_45.c":72:1)
#loc86 = loc("CWE665_Improper_Initialization__char_ncat_45.c":81:1)
#loc87 = loc("CWE665_Improper_Initialization__char_ncat_45.c":74:5)
#loc88 = loc("CWE665_Improper_Initialization__char_ncat_45.c":74:12)
#loc89 = loc("CWE665_Improper_Initialization__char_ncat_45.c":75:5)
#loc90 = loc("CWE665_Improper_Initialization__char_ncat_45.c":75:24)
#loc91 = loc("CWE665_Improper_Initialization__char_ncat_45.c":76:12)
#loc92 = loc("CWE665_Improper_Initialization__char_ncat_45.c":76:5)
#loc93 = loc("CWE665_Improper_Initialization__char_ncat_45.c":78:15)
#loc94 = loc("CWE665_Improper_Initialization__char_ncat_45.c":78:5)
#loc95 = loc("CWE665_Improper_Initialization__char_ncat_45.c":78:10)
#loc96 = loc("CWE665_Improper_Initialization__char_ncat_45.c":78:11)
#loc97 = loc("CWE665_Improper_Initialization__char_ncat_45.c":79:64)
#loc98 = loc("CWE665_Improper_Initialization__char_ncat_45.c":79:5)
#loc99 = loc("CWE665_Improper_Initialization__char_ncat_45.c":80:5)
#loc100 = loc("CWE665_Improper_Initialization__char_ncat_45.c":80:17)
#loc101 = loc("CWE665_Improper_Initialization__char_ncat_45.c":57:1)
#loc102 = loc("CWE665_Improper_Initialization__char_ncat_45.c":70:1)
#loc103 = loc("CWE665_Improper_Initialization__char_ncat_45.c":59:5)
#loc104 = loc("CWE665_Improper_Initialization__char_ncat_45.c":59:19)
#loc105 = loc("CWE665_Improper_Initialization__char_ncat_45.c":60:5)
#loc106 = loc("CWE665_Improper_Initialization__char_ncat_45.c":69:5)
#loc107 = loc("CWE665_Improper_Initialization__char_ncat_45.c":61:9)
#loc108 = loc("CWE665_Improper_Initialization__char_ncat_45.c":61:16)
#loc109 = loc("CWE665_Improper_Initialization__char_ncat_45.c":62:9)
#loc110 = loc("CWE665_Improper_Initialization__char_ncat_45.c":62:24)
#loc111 = loc("CWE665_Improper_Initialization__char_ncat_45.c":63:16)
#loc112 = loc("CWE665_Improper_Initialization__char_ncat_45.c":63:24)
#loc113 = loc("CWE665_Improper_Initialization__char_ncat_45.c":63:29)
#loc114 = loc("CWE665_Improper_Initialization__char_ncat_45.c":63:33)
#loc115 = loc("CWE665_Improper_Initialization__char_ncat_45.c":63:9)
#loc116 = loc("CWE665_Improper_Initialization__char_ncat_45.c":63:34)
#loc117 = loc("CWE665_Improper_Initialization__char_ncat_45.c":64:25)
#loc118 = loc("CWE665_Improper_Initialization__char_ncat_45.c":64:16)
#loc119 = loc("CWE665_Improper_Initialization__char_ncat_45.c":64:20)
#loc120 = loc("CWE665_Improper_Initialization__char_ncat_45.c":64:9)
#loc121 = loc("CWE665_Improper_Initialization__char_ncat_45.c":65:21)
#loc122 = loc("CWE665_Improper_Initialization__char_ncat_45.c":65:28)
#loc123 = loc("CWE665_Improper_Initialization__char_ncat_45.c":65:9)
#loc124 = loc("CWE665_Improper_Initialization__char_ncat_45.c":65:34)
#loc125 = loc("CWE665_Improper_Initialization__char_ncat_45.c":67:9)
#loc126 = loc("CWE665_Improper_Initialization__char_ncat_45.c":67:17)
#loc127 = loc("CWE665_Improper_Initialization__char_ncat_45.c":67:23)
#loc128 = loc("CWE665_Improper_Initialization__char_ncat_45.c":67:31)
#loc129 = loc("CWE665_Improper_Initialization__char_ncat_45.c":68:19)
#loc130 = loc("CWE665_Improper_Initialization__char_ncat_45.c":68:9)
#loc131 = loc(fused[#loc1, #loc2])
#loc132 = loc(fused[#loc3, #loc4])
#loc133 = loc(fused[#loc5, #loc6])
#loc134 = loc(fused[#loc7, #loc8])
#loc135 = loc(fused[#loc10, #loc9])
#loc136 = loc(fused[#loc12, #loc11])
#loc137 = loc(fused[#loc13, #loc14])
#loc138 = loc(fused[#loc15, #loc16])
#loc139 = loc(fused[#loc17, #loc18])
#loc140 = loc(fused[#loc19, #loc20])
#loc141 = loc(fused[#loc21, #loc22])
#loc142 = loc(fused[#loc23, #loc24])
#loc143 = loc(fused[#loc29, #loc30])
#loc146 = loc(fused[#loc40, #loc41])
#loc147 = loc(fused[#loc44, #loc45])
#loc148 = loc(fused[#loc48, #loc47])
#loc149 = loc(fused[#loc49, #loc50])
#loc150 = loc(fused[#loc51, #loc52])
#loc151 = loc(fused[#loc53, #loc54])
#loc152 = loc(fused[#loc55, #loc56])
#loc153 = loc(fused[#loc57, #loc58])
#loc154 = loc(fused[#loc59, #loc60])
#loc155 = loc(fused[#loc61, #loc62])
#loc156 = loc(fused[#loc67, #loc68])
#loc157 = loc(fused[#loc72, #loc69])
#loc158 = loc(fused[#loc75, #loc76])
#loc159 = loc(fused[#loc83, #loc84])
#loc160 = loc(fused[#loc85, #loc86])
#loc161 = loc(fused[#loc87, #loc88])
#loc162 = loc(fused[#loc89, #loc90])
#loc163 = loc(fused[#loc92, #loc91])
#loc164 = loc(fused[#loc94, #loc93])
#loc165 = loc(fused[#loc98, #loc97])
#loc166 = loc(fused[#loc99, #loc100])
#loc167 = loc(fused[#loc101, #loc102])
#loc168 = loc(fused[#loc103, #loc104])
#loc169 = loc(fused[#loc105, #loc106])
#loc170 = loc(fused[#loc107, #loc108])
#loc171 = loc(fused[#loc109, #loc110])
#loc172 = loc(fused[#loc115, #loc116])
#loc173 = loc(fused[#loc120, #loc117])
#loc174 = loc(fused[#loc123, #loc124])
