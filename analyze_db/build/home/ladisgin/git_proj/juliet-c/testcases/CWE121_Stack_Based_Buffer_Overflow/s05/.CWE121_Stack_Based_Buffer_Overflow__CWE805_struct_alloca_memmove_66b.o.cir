!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":21:83)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":21:109)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":47:87)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":47:113)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc95 = loc(fused[#loc5, #loc6])
#loc112 = loc(fused[#loc51, #loc52])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc93)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b_badSink(%arg0: !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(fused[#loc5, #loc6])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc96)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc97)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc95)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc98)
    cir.store %arg0, %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc13)
    %4 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc14)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc15)
    %6 = cir.ptr_stride(%4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, %5 : !s32i), !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc12)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc14)
    cir.store %7, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc98)
    cir.br ^bb1 loc(#loc99)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc100)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc101)
  ^bb3:  // pred: ^bb2
    %8 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc22)
    cir.store %9, %1 : !u64i, !cir.ptr<!u64i> loc(#loc102)
    cir.br ^bb4 loc(#loc101)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %10 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc24)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc25)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc25)
    %13 = cir.cmp(lt, %10, %12) : !u64i, !cir.bool loc(#loc103)
    cir.brcond %13 ^bb5, ^bb9 loc(#loc26)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc104)
  ^bb6:  // pred: ^bb5
    %14 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc29)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!ty__twoIntsStruct>, %15 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc30)
    %18 = cir.get_member %17[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
    cir.store %14, %18 : !s32i, !cir.ptr<!s32i> loc(#loc105)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc32)
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc33)
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
    %22 = cir.ptr_stride(%21 : !cir.ptr<!ty__twoIntsStruct>, %20 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
    %23 = cir.get_member %22[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc35)
    cir.store %19, %23 : !s32i, !cir.ptr<!s32i> loc(#loc106)
    cir.br ^bb7 loc(#loc21)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc21)
  ^bb8:  // pred: ^bb7
    %24 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc36)
    %25 = cir.unary(inc, %24) : !u64i, !u64i loc(#loc37)
    cir.store %25, %1 : !u64i, !cir.ptr<!u64i> loc(#loc107)
    cir.br ^bb4 loc(#loc101)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc21)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc19)
  ^bb11:  // pred: ^bb10
    %26 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc38)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc38)
    %28 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc39)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc39)
    %30 = cir.const #cir.int<100> : !s32i loc(#loc40)
    %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc40)
    %32 = cir.const #cir.int<8> : !u64i loc(#loc108)
    %33 = cir.binop(mul, %31, %32) : !u64i loc(#loc109)
    cir.libc.memmove %33 bytes from %29 to %27 : !cir.ptr<!void>, !u64i loc(#loc110)
    %34 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc45)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc46)
    %36 = cir.ptr_stride(%34 : !cir.ptr<!ty__twoIntsStruct>, %35 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc47)
    cir.call @printStructLine(%36) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc48)
    cir.br ^bb12 loc(#loc17)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc4)
  } loc(#loc94)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b_goodG2BSink(%arg0: !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(fused[#loc51, #loc52])) extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!ty__twoIntsStruct x 100>, !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>, ["source"] {alignment = 16 : i64} loc(#loc113)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc114)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc112)
    %3 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc115)
    cir.store %arg0, %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc59)
    %4 = cir.load %2 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc60)
    %5 = cir.const #cir.int<2> : !s32i loc(#loc61)
    %6 = cir.ptr_stride(%4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, %5 : !s32i), !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc58)
    %7 = cir.load %6 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc60)
    cir.store %7, %3 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc115)
    cir.br ^bb1 loc(#loc116)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc117)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc118)
  ^bb3:  // pred: ^bb2
    %8 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc68)
    cir.store %9, %1 : !u64i, !cir.ptr<!u64i> loc(#loc119)
    cir.br ^bb4 loc(#loc118)
  ^bb4:  // 2 preds: ^bb3, ^bb8
    %10 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc70)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc71)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc71)
    %13 = cir.cmp(lt, %10, %12) : !u64i, !cir.bool loc(#loc120)
    cir.brcond %13 ^bb5, ^bb9 loc(#loc72)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc121)
  ^bb6:  // pred: ^bb5
    %14 = cir.const #cir.int<0> : !s32i loc(#loc74)
    %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc75)
    %16 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc76)
    %17 = cir.ptr_stride(%16 : !cir.ptr<!ty__twoIntsStruct>, %15 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc76)
    %18 = cir.get_member %17[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc31)
    cir.store %14, %18 : !s32i, !cir.ptr<!s32i> loc(#loc122)
    %19 = cir.const #cir.int<0> : !s32i loc(#loc77)
    %20 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc78)
    %21 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc79)
    %22 = cir.ptr_stride(%21 : !cir.ptr<!ty__twoIntsStruct>, %20 : !u64i), !cir.ptr<!ty__twoIntsStruct> loc(#loc79)
    %23 = cir.get_member %22[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc35)
    cir.store %19, %23 : !s32i, !cir.ptr<!s32i> loc(#loc123)
    cir.br ^bb7 loc(#loc67)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc67)
  ^bb8:  // pred: ^bb7
    %24 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc80)
    %25 = cir.unary(inc, %24) : !u64i, !u64i loc(#loc81)
    cir.store %25, %1 : !u64i, !cir.ptr<!u64i> loc(#loc124)
    cir.br ^bb4 loc(#loc118)
  ^bb9:  // pred: ^bb4
    cir.br ^bb10 loc(#loc67)
  ^bb10:  // pred: ^bb9
    cir.br ^bb11 loc(#loc65)
  ^bb11:  // pred: ^bb10
    %26 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc82)
    %27 = cir.cast(bitcast, %26 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc82)
    %28 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!ty__twoIntsStruct x 100>>), !cir.ptr<!ty__twoIntsStruct> loc(#loc83)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc83)
    %30 = cir.const #cir.int<100> : !s32i loc(#loc84)
    %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc84)
    %32 = cir.const #cir.int<8> : !u64i loc(#loc125)
    %33 = cir.binop(mul, %31, %32) : !u64i loc(#loc126)
    cir.libc.memmove %33 bytes from %29 to %27 : !cir.ptr<!void>, !u64i loc(#loc127)
    %34 = cir.load %3 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc89)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc90)
    %36 = cir.ptr_stride(%34 : !cir.ptr<!ty__twoIntsStruct>, %35 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc91)
    cir.call @printStructLine(%36) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc92)
    cir.br ^bb12 loc(#loc63)
  ^bb12:  // pred: ^bb11
    cir.return loc(#loc50)
  } loc(#loc111)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s05/CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":21:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":40:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":26:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":26:33)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":28:13)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":28:20)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":24:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":24:39)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":22:1)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":24:28)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":24:38)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":25:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":39:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":27:9)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":35:9)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":30:13)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":34:13)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":30:22)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":30:18)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":30:25)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":30:29)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":30:27)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":31:13)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":32:36)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":32:24)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":32:17)
#loc31 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":33:36)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":33:24)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":33:17)
#loc35 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":30:35)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":30:34)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":37:17)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":37:23)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":37:31)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":37:35)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":37:55)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":37:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":37:56)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":38:26)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":38:31)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":38:32)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":38:9)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":47:1)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":65:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":51:9)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":51:33)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":53:13)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":53:20)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":49:5)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":49:39)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":48:1)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":49:28)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":49:38)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":50:5)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":64:5)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":52:9)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":60:9)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":55:13)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":59:13)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":55:22)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":55:18)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":55:25)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":55:29)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":55:27)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":56:13)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":57:36)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":57:24)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":57:17)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":58:36)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":58:24)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":58:17)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":55:35)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":55:34)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":62:17)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":62:23)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":62:31)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":62:35)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":62:55)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":62:9)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":62:56)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":63:26)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":63:31)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":63:32)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_struct_alloca_memmove_66b.c":63:9)
#loc93 = loc(fused[#loc1, #loc2])
#loc94 = loc(fused[#loc3, #loc4])
#loc96 = loc(fused[#loc7, #loc8])
#loc97 = loc(fused[#loc9, #loc10])
#loc98 = loc(fused[#loc11, #loc12])
#loc99 = loc(fused[#loc16, #loc17])
#loc100 = loc(fused[#loc18, #loc19])
#loc101 = loc(fused[#loc20, #loc21])
#loc102 = loc(fused[#loc23, #loc22])
#loc103 = loc(fused[#loc24, #loc25])
#loc104 = loc(fused[#loc27, #loc21])
#loc105 = loc(fused[#loc30, #loc28])
#loc106 = loc(fused[#loc34, #loc32])
#loc107 = loc(fused[#loc37, #loc36])
#loc108 = loc(fused[#loc41, #loc42])
#loc109 = loc(fused[#loc40, #loc42])
#loc110 = loc(fused[#loc43, #loc44])
#loc111 = loc(fused[#loc49, #loc50])
#loc113 = loc(fused[#loc53, #loc54])
#loc114 = loc(fused[#loc55, #loc56])
#loc115 = loc(fused[#loc57, #loc58])
#loc116 = loc(fused[#loc62, #loc63])
#loc117 = loc(fused[#loc64, #loc65])
#loc118 = loc(fused[#loc66, #loc67])
#loc119 = loc(fused[#loc69, #loc68])
#loc120 = loc(fused[#loc70, #loc71])
#loc121 = loc(fused[#loc73, #loc67])
#loc122 = loc(fused[#loc76, #loc74])
#loc123 = loc(fused[#loc79, #loc77])
#loc124 = loc(fused[#loc81, #loc80])
#loc125 = loc(fused[#loc85, #loc86])
#loc126 = loc(fused[#loc84, #loc86])
#loc127 = loc(fused[#loc87, #loc88])
