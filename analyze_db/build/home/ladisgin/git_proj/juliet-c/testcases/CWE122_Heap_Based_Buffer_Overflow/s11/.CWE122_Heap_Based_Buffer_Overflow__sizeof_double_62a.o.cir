!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_62a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @_ZN51CWE122_Heap_Based_Buffer_Overflow__sizeof_double_629badSourceERPd(!cir.ptr<!cir.ptr<!cir.double>>) loc(#loc36)
  cir.func private @printDoubleLine(!cir.double) loc(#loc37)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc38)
  cir.func @_ZN51CWE122_Heap_Based_Buffer_Overflow__sizeof_double_623badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc40)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!cir.double> loc(#loc11)
    cir.store %1, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc41)
    cir.call @_ZN51CWE122_Heap_Based_Buffer_Overflow__sizeof_double_629badSourceERPd(%0) : (!cir.ptr<!cir.ptr<!cir.double>>) -> () loc(#loc13)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc14)
    %3 = cir.load %2 : !cir.ptr<!cir.double>, !cir.double loc(#loc15)
    cir.call @printDoubleLine(%3) : (!cir.double) -> () loc(#loc16)
    %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc17)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc18)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.double>), !cir.ptr<!void> loc(#loc18)
    cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc17)
    cir.return loc(#loc8)
  } loc(#loc39)
  cir.func private @_ZN51CWE122_Heap_Based_Buffer_Overflow__sizeof_double_6213goodG2BSourceERPd(!cir.ptr<!cir.ptr<!cir.double>>) loc(#loc42)
  cir.func internal private @_ZN51CWE122_Heap_Based_Buffer_Overflow__sizeof_double_62L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>>, ["data"] {alignment = 8 : i64} loc(#loc44)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!cir.double> loc(#loc25)
    cir.store %1, %0 : !cir.ptr<!cir.double>, !cir.ptr<!cir.ptr<!cir.double>> loc(#loc45)
    cir.call @_ZN51CWE122_Heap_Based_Buffer_Overflow__sizeof_double_6213goodG2BSourceERPd(%0) : (!cir.ptr<!cir.ptr<!cir.double>>) -> () loc(#loc27)
    %2 = cir.load deref %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc28)
    %3 = cir.load %2 : !cir.ptr<!cir.double>, !cir.double loc(#loc29)
    cir.call @printDoubleLine(%3) : (!cir.double) -> () loc(#loc30)
    %4 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc31)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.double>>, !cir.ptr<!cir.double> loc(#loc32)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.double>), !cir.ptr<!void> loc(#loc32)
    cir.call @free(%6) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc31)
    cir.return loc(#loc22)
  } loc(#loc43)
  cir.func @_ZN51CWE122_Heap_Based_Buffer_Overflow__sizeof_double_624goodEv() extra(#fn_attr1) {
    cir.call @_ZN51CWE122_Heap_Based_Buffer_Overflow__sizeof_double_62L7goodG2BEv() : () -> () loc(#loc35)
    cir.return loc(#loc34)
  } loc(#loc46)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_double_62a.cpp":0:0)
#loc1 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_62a.cpp":25:1)
#loc2 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_62a.cpp":25:30)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":38:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":38:41)
#loc5 = loc("/usr/include/stdlib.h":687:1)
#loc6 = loc("/usr/include/stdlib.h":687:32)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_62a.cpp":27:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_62a.cpp":36:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_62a.cpp":29:5)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_62a.cpp":29:14)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_62a.cpp":31:12)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_62a.cpp":31:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_62a.cpp":32:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_62a.cpp":34:22)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_62a.cpp":34:21)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_62a.cpp":34:5)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_62a.cpp":35:5)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_62a.cpp":35:10)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_62a.cpp":43:1)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_62a.cpp":43:34)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_62a.cpp":45:1)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_62a.cpp":54:1)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_62a.cpp":47:5)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_62a.cpp":47:14)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_62a.cpp":49:12)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_62a.cpp":49:5)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_62a.cpp":50:5)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_62a.cpp":52:22)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_62a.cpp":52:21)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_62a.cpp":52:5)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_62a.cpp":53:5)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_62a.cpp":53:10)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_62a.cpp":56:1)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_62a.cpp":59:1)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_double_62a.cpp":58:5)
#loc36 = loc(fused[#loc1, #loc2])
#loc37 = loc(fused[#loc3, #loc4])
#loc38 = loc(fused[#loc5, #loc6])
#loc39 = loc(fused[#loc7, #loc8])
#loc40 = loc(fused[#loc9, #loc10])
#loc41 = loc(fused[#loc12, #loc11])
#loc42 = loc(fused[#loc19, #loc20])
#loc43 = loc(fused[#loc21, #loc22])
#loc44 = loc(fused[#loc23, #loc24])
#loc45 = loc(fused[#loc26, #loc25])
#loc46 = loc(fused[#loc33, #loc34])
