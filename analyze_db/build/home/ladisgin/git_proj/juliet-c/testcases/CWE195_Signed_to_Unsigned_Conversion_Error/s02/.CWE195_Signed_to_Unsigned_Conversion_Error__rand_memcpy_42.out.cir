!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc5 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":21:22)
#loc6 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":21:26)
#loc70 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":99:10)
#loc71 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":99:14)
#loc72 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":99:20)
#loc73 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":99:32)
#loc90 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":54:26)
#loc91 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":54:30)
#loc142 = loc(fused[#loc5, #loc6])
#loc165 = loc(fused[#loc70, #loc71])
#loc166 = loc(fused[#loc72, #loc73])
#loc171 = loc(fused[#loc90, #loc91])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc140)
  cir.func internal private @badSource(%arg0: !s32i loc(fused[#loc5, #loc6])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc142)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc4)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc7)
    %2 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc8)
    %4 = cir.binop(and, %2, %3) : !s32i loc(#loc8)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc8)
    %6 = cir.ternary(%5, true {
      %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
      %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc8)
      %12 = cir.const #cir.int<30> : !s32i loc(#loc8)
      %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc8)
      %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
      %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc8)
      %16 = cir.const #cir.int<15> : !s32i loc(#loc8)
      %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc8)
      %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc8)
      %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
      %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc8)
      %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc8)
      cir.yield %21 : !u32i loc(#loc8)
    }, false {
      %10 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
      %11 = cir.cast(integral, %10 : !s32i), !u32i loc(#loc8)
      %12 = cir.const #cir.int<30> : !s32i loc(#loc8)
      %13 = cir.shift(left, %11 : !u32i, %12 : !s32i) -> !u32i loc(#loc8)
      %14 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
      %15 = cir.cast(integral, %14 : !s32i), !u32i loc(#loc8)
      %16 = cir.const #cir.int<15> : !s32i loc(#loc8)
      %17 = cir.shift(left, %15 : !u32i, %16 : !s32i) -> !u32i loc(#loc8)
      %18 = cir.binop(xor, %13, %17) : !u32i loc(#loc8)
      %19 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc8)
      %20 = cir.cast(integral, %19 : !s32i), !u32i loc(#loc8)
      %21 = cir.binop(xor, %18, %20) : !u32i loc(#loc8)
      %22 = cir.unary(minus, %21) : !u32i, !u32i loc(#loc8)
      %23 = cir.const #cir.int<1> : !s32i loc(#loc8)
      %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc8)
      %25 = cir.binop(sub, %22, %24) : !u32i loc(#loc8)
      cir.yield %25 : !u32i loc(#loc8)
    }) : (!cir.bool) -> !u32i loc(#loc8)
    %7 = cir.cast(integral, %6 : !u32i), !s32i loc(#loc8)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc143)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc10)
    cir.store %8, %1 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    %9 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc144)
    cir.return %9 : !s32i loc(#loc144)
  } loc(#loc141)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc145)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc147)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc19)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc148)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    %4 = cir.call @badSource(%3) : (!s32i) -> !s32i loc(#loc22)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc149)
    cir.scope {
      %5 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc151)
      %6 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc152)
      %7 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc152)
      cir.store %7, %6 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc152)
      %8 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc31)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc31)
      %10 = cir.const #cir.int<65> : !s32i loc(#loc32)
      %11 = cir.const #cir.int<100> : !s32i loc(#loc33)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc34)
      %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc33)
      %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc33)
      cir.libc.memset %14 bytes from %9 set to %10 : !cir.ptr<!void>, !s32i, !u64i loc(#loc153)
      %15 = cir.const #cir.int<0> : !s32i loc(#loc37)
      %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc37)
      %17 = cir.const #cir.int<100> : !s32i loc(#loc38)
      %18 = cir.const #cir.int<1> : !s32i loc(#loc39)
      %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc38)
      %20 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc40)
      %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc40)
      cir.store %16, %21 : !s8i, !cir.ptr<!s8i> loc(#loc154)
      cir.scope {
        %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc43)
        %24 = cir.const #cir.int<100> : !s32i loc(#loc44)
        %25 = cir.cmp(lt, %23, %24) : !s32i, !cir.bool loc(#loc156)
        cir.if %25 {
          %26 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
          %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc46)
          %28 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc47)
          %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc47)
          %30 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc48)
          %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc48)
          cir.libc.memcpy %31 bytes from %29 to %27 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc158)
          %32 = cir.const #cir.int<0> : !s32i loc(#loc51)
          %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc51)
          %34 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc52)
          %35 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc53)
          %36 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %34 : !s32i), !cir.ptr<!s8i> loc(#loc53)
          cir.store %33, %36 : !s8i, !cir.ptr<!s8i> loc(#loc159)
        } loc(#loc157)
      } loc(#loc155)
      %22 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc54)
      cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc55)
    } loc(#loc150)
    cir.return loc(#loc15)
  } loc(#loc146)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc161)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc58)
    cir.return loc(#loc57)
  } loc(#loc160)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc162)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc163)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc67)
  cir.func @main(%arg0: !s32i loc(fused[#loc70, #loc71]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc72, #loc73])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc165)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc166)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc69)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc74)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc74)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc75)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc76)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc76)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc77)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc64)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %8 = cir.get_global @CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42_good : !cir.ptr<!cir.func<!void ()>> loc(#loc167)
    cir.call @CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42_good() : () -> () loc(#loc79)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc65)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc81)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc66)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc66)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    %13 = cir.get_global @CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc168)
    cir.call @CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42_bad() : () -> () loc(#loc83)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc67)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc67)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc86)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc169)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc169)
    cir.return %17 : !s32i loc(#loc169)
  } loc(#loc164)
  cir.func internal private @goodG2BSource(%arg0: !s32i loc(fused[#loc90, #loc91])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc171)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc89)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc92)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc93)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %4 = cir.binop(sub, %2, %3) nsw : !s32i loc(#loc93)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc172)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    cir.store %5, %1 : !s32i, !cir.ptr<!s32i> loc(#loc173)
    %6 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc173)
    cir.return %6 : !s32i loc(#loc173)
  } loc(#loc170)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc175)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc103)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc176)
    %3 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc105)
    %4 = cir.call @goodG2BSource(%3) : (!s32i) -> !s32i loc(#loc106)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc177)
    cir.scope {
      %5 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc179)
      %6 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc180)
      %7 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc180)
      cir.store %7, %6 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc180)
      %8 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc115)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc115)
      %10 = cir.const #cir.int<65> : !s32i loc(#loc116)
      %11 = cir.const #cir.int<100> : !s32i loc(#loc117)
      %12 = cir.const #cir.int<1> : !s32i loc(#loc118)
      %13 = cir.binop(sub, %11, %12) nsw : !s32i loc(#loc117)
      %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc117)
      cir.libc.memset %14 bytes from %9 set to %10 : !cir.ptr<!void>, !s32i, !u64i loc(#loc181)
      %15 = cir.const #cir.int<0> : !s32i loc(#loc121)
      %16 = cir.cast(integral, %15 : !s32i), !s8i loc(#loc121)
      %17 = cir.const #cir.int<100> : !s32i loc(#loc122)
      %18 = cir.const #cir.int<1> : !s32i loc(#loc123)
      %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc122)
      %20 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc124)
      %21 = cir.ptr_stride(%20 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc124)
      cir.store %16, %21 : !s8i, !cir.ptr<!s8i> loc(#loc182)
      cir.scope {
        %23 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc127)
        %24 = cir.const #cir.int<100> : !s32i loc(#loc128)
        %25 = cir.cmp(lt, %23, %24) : !s32i, !cir.bool loc(#loc184)
        cir.if %25 {
          %26 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc130)
          %27 = cir.cast(bitcast, %26 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc130)
          %28 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc131)
          %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc131)
          %30 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc132)
          %31 = cir.cast(integral, %30 : !s32i), !u64i loc(#loc132)
          cir.libc.memcpy %31 bytes from %29 to %27 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc186)
          %32 = cir.const #cir.int<0> : !s32i loc(#loc135)
          %33 = cir.cast(integral, %32 : !s32i), !s8i loc(#loc135)
          %34 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc136)
          %35 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc137)
          %36 = cir.ptr_stride(%35 : !cir.ptr<!s8i>, %34 : !s32i), !cir.ptr<!s8i> loc(#loc137)
          cir.store %33, %36 : !s8i, !cir.ptr<!s8i> loc(#loc187)
        } loc(#loc185)
      } loc(#loc183)
      %22 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc138)
      cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc139)
    } loc(#loc178)
    cir.return loc(#loc99)
  } loc(#loc174)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":21:1)
#loc4 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":26:1)
#loc7 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":22:1)
#loc8 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":24:12)
#loc9 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":24:5)
#loc10 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":25:12)
#loc11 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":25:5)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc14 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":28:1)
#loc15 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":48:1)
#loc16 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":30:5)
#loc17 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":30:9)
#loc18 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":32:13)
#loc19 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":32:12)
#loc20 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":32:5)
#loc21 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":33:22)
#loc22 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":33:12)
#loc23 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":33:5)
#loc24 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":33:26)
#loc25 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":34:5)
#loc26 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":47:5)
#loc27 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":35:9)
#loc28 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":35:24)
#loc29 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":36:9)
#loc30 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":36:26)
#loc31 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":37:16)
#loc32 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":37:24)
#loc33 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":37:29)
#loc34 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":37:33)
#loc35 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":37:9)
#loc36 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":37:34)
#loc37 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":38:25)
#loc38 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":38:16)
#loc39 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":38:20)
#loc40 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":38:9)
#loc41 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":39:9)
#loc42 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":45:9)
#loc43 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":39:13)
#loc44 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":39:20)
#loc45 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":40:9)
#loc46 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":43:20)
#loc47 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":43:26)
#loc48 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":43:34)
#loc49 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":43:13)
#loc50 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":43:38)
#loc51 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":44:26)
#loc52 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":44:18)
#loc53 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":44:13)
#loc54 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":46:19)
#loc55 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":46:9)
#loc56 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":84:1)
#loc57 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":87:1)
#loc58 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":86:5)
#loc59 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":86:13)
#loc60 = loc("/usr/include/stdlib.h":575:1)
#loc61 = loc("/usr/include/stdlib.h":575:41)
#loc62 = loc("/usr/include/time.h":76:1)
#loc63 = loc("/usr/include/time.h":76:38)
#loc64 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":104:15)
#loc65 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":106:15)
#loc66 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":109:15)
#loc67 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":111:15)
#loc68 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":99:1)
#loc69 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":114:1)
#loc74 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":100:1)
#loc75 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":102:27)
#loc76 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":102:22)
#loc77 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":102:5)
#loc78 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":104:5)
#loc79 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":105:5)
#loc80 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":105:69)
#loc81 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":106:5)
#loc82 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":109:5)
#loc83 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":110:5)
#loc84 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":110:68)
#loc85 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":111:5)
#loc86 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":113:12)
#loc87 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":113:5)
#loc88 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":54:1)
#loc89 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":59:1)
#loc92 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":55:1)
#loc93 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":57:12)
#loc94 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":57:16)
#loc95 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":57:5)
#loc96 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":58:12)
#loc97 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":58:5)
#loc98 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":62:1)
#loc99 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":82:1)
#loc100 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":64:5)
#loc101 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":64:9)
#loc102 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":66:13)
#loc103 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":66:12)
#loc104 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":66:5)
#loc105 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":67:26)
#loc106 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":67:12)
#loc107 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":67:5)
#loc108 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":67:30)
#loc109 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":68:5)
#loc110 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":81:5)
#loc111 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":69:9)
#loc112 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":69:24)
#loc113 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":70:9)
#loc114 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":70:26)
#loc115 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":71:16)
#loc116 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":71:24)
#loc117 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":71:29)
#loc118 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":71:33)
#loc119 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":71:9)
#loc120 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":71:34)
#loc121 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":72:25)
#loc122 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":72:16)
#loc123 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":72:20)
#loc124 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":72:9)
#loc125 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":73:9)
#loc126 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":79:9)
#loc127 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":73:13)
#loc128 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":73:20)
#loc129 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":74:9)
#loc130 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":77:20)
#loc131 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":77:26)
#loc132 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":77:34)
#loc133 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":77:13)
#loc134 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":77:38)
#loc135 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":78:26)
#loc136 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":78:18)
#loc137 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":78:13)
#loc138 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":80:19)
#loc139 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__rand_memcpy_42.c":80:9)
#loc140 = loc(fused[#loc1, #loc2])
#loc141 = loc(fused[#loc3, #loc4])
#loc143 = loc(fused[#loc9, #loc8])
#loc144 = loc(fused[#loc11, #loc10])
#loc145 = loc(fused[#loc12, #loc13])
#loc146 = loc(fused[#loc14, #loc15])
#loc147 = loc(fused[#loc16, #loc17])
#loc148 = loc(fused[#loc20, #loc18])
#loc149 = loc(fused[#loc23, #loc24])
#loc150 = loc(fused[#loc25, #loc26])
#loc151 = loc(fused[#loc27, #loc28])
#loc152 = loc(fused[#loc29, #loc30])
#loc153 = loc(fused[#loc35, #loc36])
#loc154 = loc(fused[#loc40, #loc37])
#loc155 = loc(fused[#loc41, #loc42])
#loc156 = loc(fused[#loc43, #loc44])
#loc157 = loc(fused[#loc45, #loc42])
#loc158 = loc(fused[#loc49, #loc50])
#loc159 = loc(fused[#loc53, #loc51])
#loc160 = loc(fused[#loc56, #loc57])
#loc161 = loc(fused[#loc58, #loc59])
#loc162 = loc(fused[#loc60, #loc61])
#loc163 = loc(fused[#loc62, #loc63])
#loc164 = loc(fused[#loc68, #loc69])
#loc167 = loc(fused[#loc79, #loc80])
#loc168 = loc(fused[#loc83, #loc84])
#loc169 = loc(fused[#loc87, #loc86])
#loc170 = loc(fused[#loc88, #loc89])
#loc172 = loc(fused[#loc95, #loc94])
#loc173 = loc(fused[#loc97, #loc96])
#loc174 = loc(fused[#loc98, #loc99])
#loc175 = loc(fused[#loc100, #loc101])
#loc176 = loc(fused[#loc104, #loc102])
#loc177 = loc(fused[#loc107, #loc108])
#loc178 = loc(fused[#loc109, #loc110])
#loc179 = loc(fused[#loc111, #loc112])
#loc180 = loc(fused[#loc113, #loc114])
#loc181 = loc(fused[#loc119, #loc120])
#loc182 = loc(fused[#loc124, #loc121])
#loc183 = loc(fused[#loc125, #loc126])
#loc184 = loc(fused[#loc127, #loc128])
#loc185 = loc(fused[#loc129, #loc126])
#loc186 = loc(fused[#loc133, #loc134])
#loc187 = loc(fused[#loc137, #loc135])
