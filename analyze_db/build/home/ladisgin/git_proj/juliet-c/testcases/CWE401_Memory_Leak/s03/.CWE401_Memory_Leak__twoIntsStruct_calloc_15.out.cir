!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc81 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":212:10)
#loc82 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":212:14)
#loc83 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":212:20)
#loc84 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":212:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc306 = loc(fused[#loc81, #loc82])
#loc307 = loc(fused[#loc83, #loc84])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc281)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc282)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc283)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc284)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc9)
  cir.func no_proto @CWE401_Memory_Leak__twoIntsStruct_calloc_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc286)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc14)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc287)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc18)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc20)
          %4 = cir.const #cir.int<100> : !s32i loc(#loc21)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc21)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc289)
          %7 = cir.call @calloc(%5, %6) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc20)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc290)
          cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc291)
          cir.scope {
            %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc28)
            %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
            %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc29)
            %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc293)
            cir.if %25 {
              %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc31)
              %27 = cir.const #cir.int<1> : !s32i loc(#loc32)
              %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc33)
              cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc31)
            } loc(#loc294)
          } loc(#loc292)
          %9 = cir.const #cir.int<0> : !s32i loc(#loc34)
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc35)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc36)
          %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc37)
          %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc38)
          cir.store %9, %13 : !s32i, !cir.ptr<!s32i> loc(#loc295)
          %14 = cir.const #cir.int<0> : !s32i loc(#loc39)
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc40)
          %16 = cir.const #cir.int<0> : !s32i loc(#loc41)
          %17 = cir.ptr_stride(%15 : !cir.ptr<!ty__twoIntsStruct>, %16 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc42)
          %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc43)
          cir.store %14, %18 : !s32i, !cir.ptr<!s32i> loc(#loc296)
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc44)
          %20 = cir.const #cir.int<0> : !s32i loc(#loc45)
          %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
          cir.call @printStructLine(%21) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc47)
          cir.break loc(#loc48)
        } loc(#loc19)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc9)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc50)
          cir.break loc(#loc51)
        } loc(#loc49)
        cir.yield loc(#loc16)
      } loc(#loc16)
    } loc(#loc288)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc54)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.break loc(#loc56)
        } loc(#loc55)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc58)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc58)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc59)
          cir.break loc(#loc60)
        } loc(#loc57)
        cir.yield loc(#loc52)
      } loc(#loc52)
    } loc(#loc297)
    cir.return loc(#loc11)
  } loc(#loc285)
  cir.func no_proto @CWE401_Memory_Leak__twoIntsStruct_calloc_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc299)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc63)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc300)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc65)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc301)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc67)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc302)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc69)
    cir.return loc(#loc62)
  } loc(#loc298)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc303)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc304)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc75)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc76)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc77)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc78)
  cir.func @main(%arg0: !s32i loc(fused[#loc81, #loc82]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc83, #loc84])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc306)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc307)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc80)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc85)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc85)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc86)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc87)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc87)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc88)
    %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc75)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc75)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc89)
    %8 = cir.get_global @CWE401_Memory_Leak__twoIntsStruct_calloc_15_good : !cir.ptr<!cir.func<!void ()>> loc(#loc308)
    cir.call @CWE401_Memory_Leak__twoIntsStruct_calloc_15_good() : () -> () loc(#loc90)
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc76)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc76)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    %11 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc77)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc77)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc93)
    %13 = cir.get_global @CWE401_Memory_Leak__twoIntsStruct_calloc_15_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc309)
    cir.call @CWE401_Memory_Leak__twoIntsStruct_calloc_15_bad() : () -> () loc(#loc94)
    %14 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc78)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc78)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc97)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc310)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc310)
    cir.return %17 : !s32i loc(#loc310)
  } loc(#loc305)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc311)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc313)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc105)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc314)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc109)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc111)
          %4 = cir.const #cir.int<100> : !s32i loc(#loc112)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc112)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc316)
          %7 = cir.call @calloc(%5, %6) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc111)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc317)
          cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc318)
          cir.scope {
            %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc119)
            %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc120)
            %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc120)
            %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc320)
            cir.if %25 {
              %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc122)
              %27 = cir.const #cir.int<1> : !s32i loc(#loc123)
              %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc124)
              cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc122)
            } loc(#loc321)
          } loc(#loc319)
          %9 = cir.const #cir.int<0> : !s32i loc(#loc125)
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc126)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc127)
          %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc128)
          %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc38)
          cir.store %9, %13 : !s32i, !cir.ptr<!s32i> loc(#loc322)
          %14 = cir.const #cir.int<0> : !s32i loc(#loc129)
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc130)
          %16 = cir.const #cir.int<0> : !s32i loc(#loc131)
          %17 = cir.ptr_stride(%15 : !cir.ptr<!ty__twoIntsStruct>, %16 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc132)
          %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc43)
          cir.store %14, %18 : !s32i, !cir.ptr<!s32i> loc(#loc323)
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc133)
          %20 = cir.const #cir.int<0> : !s32i loc(#loc134)
          %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc135)
          cir.call @printStructLine(%21) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc136)
          cir.break loc(#loc137)
        } loc(#loc110)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc139)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc139)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc140)
          cir.break loc(#loc141)
        } loc(#loc138)
        cir.yield loc(#loc107)
      } loc(#loc107)
    } loc(#loc315)
    cir.scope {
      %2 = cir.const #cir.int<8> : !s32i loc(#loc144)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc146)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc146)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc147)
          cir.break loc(#loc148)
        } loc(#loc145)
        cir.case(default, []) {
          %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc150)
          %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc151)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc151)
          cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc150)
          cir.break loc(#loc152)
        } loc(#loc149)
        cir.yield loc(#loc142)
      } loc(#loc142)
    } loc(#loc324)
    cir.return loc(#loc102)
  } loc(#loc312)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc326)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc157)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc327)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc161)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc163)
          %4 = cir.const #cir.int<100> : !s32i loc(#loc164)
          %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc164)
          %6 = cir.const #cir.int<8> : !u64i loc(#loc329)
          %7 = cir.call @calloc(%5, %6) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc163)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc330)
          cir.store %8, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc331)
          cir.scope {
            %22 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc171)
            %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc172)
            %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc172)
            %25 = cir.cmp(eq, %22, %24) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc333)
            cir.if %25 {
              %26 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc174)
              %27 = cir.const #cir.int<1> : !s32i loc(#loc175)
              %28 = cir.unary(minus, %27) : !s32i, !s32i loc(#loc176)
              cir.call @exit(%28) : (!s32i) -> () extra(#fn_attr) loc(#loc174)
            } loc(#loc334)
          } loc(#loc332)
          %9 = cir.const #cir.int<0> : !s32i loc(#loc177)
          %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc178)
          %11 = cir.const #cir.int<0> : !s32i loc(#loc179)
          %12 = cir.ptr_stride(%10 : !cir.ptr<!ty__twoIntsStruct>, %11 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc180)
          %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc38)
          cir.store %9, %13 : !s32i, !cir.ptr<!s32i> loc(#loc335)
          %14 = cir.const #cir.int<0> : !s32i loc(#loc181)
          %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc182)
          %16 = cir.const #cir.int<0> : !s32i loc(#loc183)
          %17 = cir.ptr_stride(%15 : !cir.ptr<!ty__twoIntsStruct>, %16 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc184)
          %18 = cir.get_member %17[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc43)
          cir.store %14, %18 : !s32i, !cir.ptr<!s32i> loc(#loc336)
          %19 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc185)
          %20 = cir.const #cir.int<0> : !s32i loc(#loc186)
          %21 = cir.ptr_stride(%19 : !cir.ptr<!ty__twoIntsStruct>, %20 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc187)
          cir.call @printStructLine(%21) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc188)
          cir.break loc(#loc189)
        } loc(#loc162)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc191)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc191)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc192)
          cir.break loc(#loc193)
        } loc(#loc190)
        cir.yield loc(#loc159)
      } loc(#loc159)
    } loc(#loc328)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc196)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc198)
          %4 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc199)
          %5 = cir.cast(bitcast, %4 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc199)
          cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc198)
          cir.break loc(#loc200)
        } loc(#loc197)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc202)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc202)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc203)
          cir.break loc(#loc204)
        } loc(#loc201)
        cir.yield loc(#loc194)
      } loc(#loc194)
    } loc(#loc337)
    cir.return loc(#loc154)
  } loc(#loc325)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc339)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc209)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc340)
    cir.scope {
      %2 = cir.const #cir.int<5> : !s32i loc(#loc213)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc215)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc215)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc216)
          cir.break loc(#loc217)
        } loc(#loc214)
        cir.case(default, []) {
          %3 = cir.const #cir.int<100> : !s32i loc(#loc219)
          %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc219)
          %5 = cir.const #cir.int<8> : !u64i loc(#loc219)
          %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc219)
          %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc219)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc219)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc219)
          cir.store %9, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc342)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc221)
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc222)
          %12 = cir.const #cir.int<0> : !s32i loc(#loc223)
          %13 = cir.ptr_stride(%11 : !cir.ptr<!ty__twoIntsStruct>, %12 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc224)
          %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc38)
          cir.store %10, %14 : !s32i, !cir.ptr<!s32i> loc(#loc343)
          %15 = cir.const #cir.int<0> : !s32i loc(#loc225)
          %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc226)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc227)
          %18 = cir.ptr_stride(%16 : !cir.ptr<!ty__twoIntsStruct>, %17 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc228)
          %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc43)
          cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc344)
          %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc229)
          %21 = cir.const #cir.int<0> : !s32i loc(#loc230)
          %22 = cir.ptr_stride(%20 : !cir.ptr<!ty__twoIntsStruct>, %21 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc231)
          cir.call @printStructLine(%22) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc232)
          cir.break loc(#loc233)
        } loc(#loc218)
        cir.yield loc(#loc211)
      } loc(#loc211)
    } loc(#loc341)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc236)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.break loc(#loc238)
        } loc(#loc237)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc240)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc240)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc241)
          cir.break loc(#loc242)
        } loc(#loc239)
        cir.yield loc(#loc234)
      } loc(#loc234)
    } loc(#loc345)
    cir.return loc(#loc206)
  } loc(#loc338)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc347)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc247)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc348)
    cir.scope {
      %2 = cir.const #cir.int<6> : !s32i loc(#loc251)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<6> : !s32i]) {
          %3 = cir.const #cir.int<100> : !s32i loc(#loc253)
          %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc253)
          %5 = cir.const #cir.int<8> : !u64i loc(#loc253)
          %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc253)
          %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc253)
          %8 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc253)
          %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc253)
          cir.store %9, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc350)
          %10 = cir.const #cir.int<0> : !s32i loc(#loc255)
          %11 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc256)
          %12 = cir.const #cir.int<0> : !s32i loc(#loc257)
          %13 = cir.ptr_stride(%11 : !cir.ptr<!ty__twoIntsStruct>, %12 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc258)
          %14 = cir.get_member %13[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc38)
          cir.store %10, %14 : !s32i, !cir.ptr<!s32i> loc(#loc351)
          %15 = cir.const #cir.int<0> : !s32i loc(#loc259)
          %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc260)
          %17 = cir.const #cir.int<0> : !s32i loc(#loc261)
          %18 = cir.ptr_stride(%16 : !cir.ptr<!ty__twoIntsStruct>, %17 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc262)
          %19 = cir.get_member %18[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc43)
          cir.store %15, %19 : !s32i, !cir.ptr<!s32i> loc(#loc352)
          %20 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc263)
          %21 = cir.const #cir.int<0> : !s32i loc(#loc264)
          %22 = cir.ptr_stride(%20 : !cir.ptr<!ty__twoIntsStruct>, %21 : !s32i), !cir.ptr<!ty__twoIntsStruct> loc(#loc265)
          cir.call @printStructLine(%22) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc266)
          cir.break loc(#loc267)
        } loc(#loc252)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc269)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc269)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc270)
          cir.break loc(#loc271)
        } loc(#loc268)
        cir.yield loc(#loc249)
      } loc(#loc249)
    } loc(#loc349)
    cir.scope {
      %2 = cir.const #cir.int<7> : !s32i loc(#loc274)
      cir.switch (%2 : !s32i) {
        cir.case(equal, [#cir.int<7> : !s32i]) {
          cir.break loc(#loc276)
        } loc(#loc275)
        cir.case(default, []) {
          %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc278)
          %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc278)
          cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc279)
          cir.break loc(#loc280)
        } loc(#loc277)
        cir.yield loc(#loc272)
      } loc(#loc272)
    } loc(#loc353)
    cir.return loc(#loc244)
  } loc(#loc346)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s03/CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":675:1)
#loc2 = loc("/usr/include/stdlib.h":676:14)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":41:19)
#loc10 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":24:1)
#loc11 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":55:1)
#loc12 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":26:5)
#loc13 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":26:21)
#loc14 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":27:12)
#loc15 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":27:5)
#loc16 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":28:5)
#loc17 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":43:5)
#loc18 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":28:12)
#loc19 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":30:5)
#loc20 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":32:33)
#loc21 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":32:40)
#loc22 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":32:45)
#loc23 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":32:65)
#loc24 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":32:66)
#loc25 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":32:9)
#loc26 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":33:9)
#loc27 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":33:37)
#loc28 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":33:13)
#loc29 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":33:21)
#loc30 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":33:27)
#loc31 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":33:28)
#loc32 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":33:34)
#loc33 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":33:33)
#loc34 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":35:26)
#loc35 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":35:9)
#loc36 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":35:14)
#loc37 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":35:15)
#loc38 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc39 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":36:26)
#loc40 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":36:9)
#loc41 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":36:14)
#loc42 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":36:15)
#loc43 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc44 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":37:26)
#loc45 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":37:31)
#loc46 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":37:32)
#loc47 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":37:9)
#loc48 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":38:9)
#loc49 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":39:5)
#loc50 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":41:9)
#loc51 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":42:9)
#loc52 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":44:5)
#loc53 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":54:5)
#loc54 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":44:12)
#loc55 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":46:5)
#loc56 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":49:9)
#loc57 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":50:5)
#loc58 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":52:19)
#loc59 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":52:9)
#loc60 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":53:9)
#loc61 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":195:1)
#loc62 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":201:1)
#loc63 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":197:5)
#loc64 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":197:14)
#loc65 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":198:5)
#loc66 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":198:14)
#loc67 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":199:5)
#loc68 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":199:14)
#loc69 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":200:5)
#loc70 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":200:14)
#loc71 = loc("/usr/include/stdlib.h":575:1)
#loc72 = loc("/usr/include/stdlib.h":575:41)
#loc73 = loc("/usr/include/time.h":76:1)
#loc74 = loc("/usr/include/time.h":76:38)
#loc75 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":217:15)
#loc76 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":219:15)
#loc77 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":222:15)
#loc78 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":224:15)
#loc79 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":212:1)
#loc80 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":227:1)
#loc85 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":213:1)
#loc86 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":215:27)
#loc87 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":215:22)
#loc88 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":215:5)
#loc89 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":217:5)
#loc90 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":218:5)
#loc91 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":218:54)
#loc92 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":219:5)
#loc93 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":222:5)
#loc94 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":223:5)
#loc95 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":223:53)
#loc96 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":224:5)
#loc97 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":226:12)
#loc98 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":226:5)
#loc99 = loc("/usr/include/stdlib.h":687:1)
#loc100 = loc("/usr/include/stdlib.h":687:32)
#loc101 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":62:1)
#loc102 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":93:1)
#loc103 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":64:5)
#loc104 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":64:21)
#loc105 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":65:12)
#loc106 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":65:5)
#loc107 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":66:5)
#loc108 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":81:5)
#loc109 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":66:12)
#loc110 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":68:5)
#loc111 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":70:33)
#loc112 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":70:40)
#loc113 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":70:45)
#loc114 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":70:65)
#loc115 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":70:66)
#loc116 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":70:9)
#loc117 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":71:9)
#loc118 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":71:37)
#loc119 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":71:13)
#loc120 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":71:21)
#loc121 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":71:27)
#loc122 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":71:28)
#loc123 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":71:34)
#loc124 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":71:33)
#loc125 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":73:26)
#loc126 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":73:9)
#loc127 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":73:14)
#loc128 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":73:15)
#loc129 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":74:26)
#loc130 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":74:9)
#loc131 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":74:14)
#loc132 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":74:15)
#loc133 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":75:26)
#loc134 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":75:31)
#loc135 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":75:32)
#loc136 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":75:9)
#loc137 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":76:9)
#loc138 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":77:5)
#loc139 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":79:19)
#loc140 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":79:9)
#loc141 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":80:9)
#loc142 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":82:5)
#loc143 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":92:5)
#loc144 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":82:12)
#loc145 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":84:5)
#loc146 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":86:19)
#loc147 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":86:9)
#loc148 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":87:9)
#loc149 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":88:5)
#loc150 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":90:9)
#loc151 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":90:14)
#loc152 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":91:9)
#loc153 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":96:1)
#loc154 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":127:1)
#loc155 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":98:5)
#loc156 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":98:21)
#loc157 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":99:12)
#loc158 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":99:5)
#loc159 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":100:5)
#loc160 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":115:5)
#loc161 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":100:12)
#loc162 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":102:5)
#loc163 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":104:33)
#loc164 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":104:40)
#loc165 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":104:45)
#loc166 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":104:65)
#loc167 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":104:66)
#loc168 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":104:9)
#loc169 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":105:9)
#loc170 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":105:37)
#loc171 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":105:13)
#loc172 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":105:21)
#loc173 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":105:27)
#loc174 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":105:28)
#loc175 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":105:34)
#loc176 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":105:33)
#loc177 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":107:26)
#loc178 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":107:9)
#loc179 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":107:14)
#loc180 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":107:15)
#loc181 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":108:26)
#loc182 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":108:9)
#loc183 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":108:14)
#loc184 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":108:15)
#loc185 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":109:26)
#loc186 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":109:31)
#loc187 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":109:32)
#loc188 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":109:9)
#loc189 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":110:9)
#loc190 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":111:5)
#loc191 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":113:19)
#loc192 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":113:9)
#loc193 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":114:9)
#loc194 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":116:5)
#loc195 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":126:5)
#loc196 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":116:12)
#loc197 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":118:5)
#loc198 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":120:9)
#loc199 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":120:14)
#loc200 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":121:9)
#loc201 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":122:5)
#loc202 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":124:19)
#loc203 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":124:9)
#loc204 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":125:9)
#loc205 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":130:1)
#loc206 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":160:1)
#loc207 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":132:5)
#loc208 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":132:21)
#loc209 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":133:12)
#loc210 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":133:5)
#loc211 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":134:5)
#loc212 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":148:5)
#loc213 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":134:12)
#loc214 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":136:5)
#loc215 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":138:19)
#loc216 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":138:9)
#loc217 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":139:9)
#loc218 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":140:5)
#loc219 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":142:33)
#loc220 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":142:9)
#loc221 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":144:26)
#loc222 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":144:9)
#loc223 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":144:14)
#loc224 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":144:15)
#loc225 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":145:26)
#loc226 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":145:9)
#loc227 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":145:14)
#loc228 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":145:15)
#loc229 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":146:26)
#loc230 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":146:31)
#loc231 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":146:32)
#loc232 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":146:9)
#loc233 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":147:9)
#loc234 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":149:5)
#loc235 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":159:5)
#loc236 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":149:12)
#loc237 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":151:5)
#loc238 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":154:9)
#loc239 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":155:5)
#loc240 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":157:19)
#loc241 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":157:9)
#loc242 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":158:9)
#loc243 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":163:1)
#loc244 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":193:1)
#loc245 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":165:5)
#loc246 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":165:21)
#loc247 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":166:12)
#loc248 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":166:5)
#loc249 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":167:5)
#loc250 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":181:5)
#loc251 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":167:12)
#loc252 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":169:5)
#loc253 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":171:33)
#loc254 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":171:9)
#loc255 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":173:26)
#loc256 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":173:9)
#loc257 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":173:14)
#loc258 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":173:15)
#loc259 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":174:26)
#loc260 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":174:9)
#loc261 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":174:14)
#loc262 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":174:15)
#loc263 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":175:26)
#loc264 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":175:31)
#loc265 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":175:32)
#loc266 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":175:9)
#loc267 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":176:9)
#loc268 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":177:5)
#loc269 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":179:19)
#loc270 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":179:9)
#loc271 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":180:9)
#loc272 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":182:5)
#loc273 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":192:5)
#loc274 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":182:12)
#loc275 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":184:5)
#loc276 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":187:9)
#loc277 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":188:5)
#loc278 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":190:19)
#loc279 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":190:9)
#loc280 = loc("CWE401_Memory_Leak__twoIntsStruct_calloc_15.c":191:9)
#loc281 = loc(fused[#loc1, #loc2])
#loc282 = loc(fused[#loc3, #loc4])
#loc283 = loc(fused[#loc5, #loc6])
#loc284 = loc(fused[#loc7, #loc8])
#loc285 = loc(fused[#loc10, #loc11])
#loc286 = loc(fused[#loc12, #loc13])
#loc287 = loc(fused[#loc15, #loc14])
#loc288 = loc(fused[#loc16, #loc17])
#loc289 = loc(fused[#loc22, #loc23])
#loc290 = loc(fused[#loc20, #loc24])
#loc291 = loc(fused[#loc25, #loc24])
#loc292 = loc(fused[#loc26, #loc27])
#loc293 = loc(fused[#loc28, #loc29])
#loc294 = loc(fused[#loc30, #loc27])
#loc295 = loc(fused[#loc35, #loc34])
#loc296 = loc(fused[#loc40, #loc39])
#loc297 = loc(fused[#loc52, #loc53])
#loc298 = loc(fused[#loc61, #loc62])
#loc299 = loc(fused[#loc63, #loc64])
#loc300 = loc(fused[#loc65, #loc66])
#loc301 = loc(fused[#loc67, #loc68])
#loc302 = loc(fused[#loc69, #loc70])
#loc303 = loc(fused[#loc71, #loc72])
#loc304 = loc(fused[#loc73, #loc74])
#loc305 = loc(fused[#loc79, #loc80])
#loc308 = loc(fused[#loc90, #loc91])
#loc309 = loc(fused[#loc94, #loc95])
#loc310 = loc(fused[#loc98, #loc97])
#loc311 = loc(fused[#loc99, #loc100])
#loc312 = loc(fused[#loc101, #loc102])
#loc313 = loc(fused[#loc103, #loc104])
#loc314 = loc(fused[#loc106, #loc105])
#loc315 = loc(fused[#loc107, #loc108])
#loc316 = loc(fused[#loc113, #loc114])
#loc317 = loc(fused[#loc111, #loc115])
#loc318 = loc(fused[#loc116, #loc115])
#loc319 = loc(fused[#loc117, #loc118])
#loc320 = loc(fused[#loc119, #loc120])
#loc321 = loc(fused[#loc121, #loc118])
#loc322 = loc(fused[#loc126, #loc125])
#loc323 = loc(fused[#loc130, #loc129])
#loc324 = loc(fused[#loc142, #loc143])
#loc325 = loc(fused[#loc153, #loc154])
#loc326 = loc(fused[#loc155, #loc156])
#loc327 = loc(fused[#loc158, #loc157])
#loc328 = loc(fused[#loc159, #loc160])
#loc329 = loc(fused[#loc165, #loc166])
#loc330 = loc(fused[#loc163, #loc167])
#loc331 = loc(fused[#loc168, #loc167])
#loc332 = loc(fused[#loc169, #loc170])
#loc333 = loc(fused[#loc171, #loc172])
#loc334 = loc(fused[#loc173, #loc170])
#loc335 = loc(fused[#loc178, #loc177])
#loc336 = loc(fused[#loc182, #loc181])
#loc337 = loc(fused[#loc194, #loc195])
#loc338 = loc(fused[#loc205, #loc206])
#loc339 = loc(fused[#loc207, #loc208])
#loc340 = loc(fused[#loc210, #loc209])
#loc341 = loc(fused[#loc211, #loc212])
#loc342 = loc(fused[#loc220, #loc219])
#loc343 = loc(fused[#loc222, #loc221])
#loc344 = loc(fused[#loc226, #loc225])
#loc345 = loc(fused[#loc234, #loc235])
#loc346 = loc(fused[#loc243, #loc244])
#loc347 = loc(fused[#loc245, #loc246])
#loc348 = loc(fused[#loc248, #loc247])
#loc349 = loc(fused[#loc249, #loc250])
#loc350 = loc(fused[#loc254, #loc253])
#loc351 = loc(fused[#loc256, #loc255])
#loc352 = loc(fused[#loc260, #loc259])
#loc353 = loc(fused[#loc272, #loc273])
