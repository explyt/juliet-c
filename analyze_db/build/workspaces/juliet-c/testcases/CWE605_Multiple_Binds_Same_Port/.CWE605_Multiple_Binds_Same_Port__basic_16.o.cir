!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE605_Multiple_Binds_Same_Port/CWE605_Multiple_Binds_Same_Port__basic_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc351)
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc352)
  cir.func private @setsockopt(!s32i, !s32i, !s32i, !cir.ptr<!void>, !u32i) -> !s32i extra(#fn_attr) loc(#loc353)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc354)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc355)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc356)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc357)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc358)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc359)
  cir.func private @close(!s32i) -> !s32i loc(#loc360)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc361)
  cir.func no_proto @CWE605_Multiple_Binds_Same_Port__basic_16_bad() extra(#fn_attr1) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc27)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc27)
        cir.condition(%1) loc(#loc27)
      } do {
        cir.scope {
          cir.scope {
            %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data"] {alignment = 16 : i64} loc(#loc366)
            %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc367)
            %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc368)
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc369)
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc370)
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc371)
            %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc372)
            %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["bOptVal", init] {alignment = 4 : i64} loc(#loc373)
            %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["bOptLen", init] {alignment = 4 : i64} loc(#loc374)
            %9 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc366)
            cir.store %9, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc366)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc40)
            %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc40)
            cir.store %11, %4 : !s32i, !cir.ptr<!s32i> loc(#loc370)
            %12 = cir.const #cir.int<1> : !s32i loc(#loc42)
            %13 = cir.unary(minus, %12) nsw : !s32i, !s32i loc(#loc42)
            cir.store %13, %5 : !s32i, !cir.ptr<!s32i> loc(#loc371)
            %14 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc49)
            %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc50)
            %16 = cir.call @strlen(%15) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc49)
            cir.store %16, %6 : !u64i, !cir.ptr<!u64i> loc(#loc372)
            %17 = cir.const #cir.int<1> : !s32i loc(#loc46)
            cir.store %17, %7 : !s32i, !cir.ptr<!s32i> loc(#loc373)
            %18 = cir.const #cir.int<4> : !u64i loc(#loc375)
            %19 = cir.cast(integral, %18 : !u64i), !s32i loc(#loc375)
            cir.store %19, %8 : !s32i, !cir.ptr<!s32i> loc(#loc374)
            cir.scope {
              cir.do {
                cir.scope {
                  %21 = cir.const #cir.int<2> : !s32i loc(#loc56)
                  %22 = cir.const #cir.int<1> : !s32i loc(#loc57)
                  %23 = cir.const #cir.int<6> : !s32i loc(#loc58)
                  %24 = cir.call @socket(%21, %22, %23) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc59)
                  cir.store %24, %4 : !s32i, !cir.ptr<!s32i> loc(#loc378)
                  cir.scope {
                    %73 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc64)
                    %74 = cir.const #cir.int<1> : !s32i loc(#loc65)
                    %75 = cir.unary(minus, %74) nsw : !s32i, !s32i loc(#loc65)
                    %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc380)
                    cir.if %76 {
                      cir.break loc(#loc67)
                    } loc(#loc381)
                  } loc(#loc379)
                  cir.scope {
                    %73 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc70)
                    %74 = cir.const #cir.int<1> : !s32i loc(#loc71)
                    %75 = cir.const #cir.int<2> : !s32i loc(#loc72)
                    %76 = cir.cast(bitcast, %7 : !cir.ptr<!s32i>), !cir.ptr<!s8i> loc(#loc383)
                    %77 = cir.cast(bitcast, %76 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc384)
                    %78 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc76)
                    %79 = cir.cast(integral, %78 : !s32i), !u32i loc(#loc76)
                    %80 = cir.call @setsockopt(%73, %74, %75, %77, %79) : (!s32i, !s32i, !s32i, !cir.ptr<!void>, !u32i) -> !s32i extra(#fn_attr) loc(#loc77)
                    %81 = cir.const #cir.int<0> : !s32i loc(#loc78)
                    %82 = cir.cmp(ne, %80, %81) : !s32i, !cir.bool loc(#loc385)
                    cir.if %82 {
                      cir.break loc(#loc80)
                    } loc(#loc386)
                  } loc(#loc382)
                  %25 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc387)
                  %26 = cir.const #cir.int<0> : !s32i loc(#loc83)
                  %27 = cir.const #cir.int<16> : !u64i loc(#loc388)
                  cir.libc.memset %27 bytes from %25 set to %26 : !cir.ptr<!void>, !s32i, !u64i loc(#loc389)
                  %28 = cir.const #cir.int<2> : !s32i loc(#loc88)
                  %29 = cir.cast(integral, %28 : !s32i), !u16i loc(#loc88)
                  %30 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc89)
                  cir.store %29, %30 : !u16i, !cir.ptr<!u16i> loc(#loc390)
                  %31 = cir.const #cir.int<0> : !s32i loc(#loc91)
                  %32 = cir.cast(integral, %31 : !s32i), !u32i loc(#loc91)
                  %33 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc92)
                  %34 = cir.get_member %33[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc93)
                  cir.store %32, %34 : !u32i, !cir.ptr<!u32i> loc(#loc391)
                  %35 = cir.const #cir.int<27015> : !s32i loc(#loc95)
                  %36 = cir.cast(integral, %35 : !s32i), !u16i loc(#loc95)
                  %37 = cir.call @htons(%36) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc96)
                  %38 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc97)
                  cir.store %37, %38 : !u16i, !cir.ptr<!u16i> loc(#loc392)
                  cir.scope {
                    %73 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc102)
                    %74 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc394)
                    %75 = cir.const #cir.int<16> : !u64i loc(#loc395)
                    %76 = cir.cast(integral, %75 : !u64i), !u32i loc(#loc395)
                    %77 = cir.call @bind(%73, %74, %76) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc107)
                    %78 = cir.const #cir.int<1> : !s32i loc(#loc108)
                    %79 = cir.unary(minus, %78) nsw : !s32i, !s32i loc(#loc108)
                    %80 = cir.cmp(eq, %77, %79) : !s32i, !cir.bool loc(#loc396)
                    cir.if %80 {
                      cir.break loc(#loc110)
                    } loc(#loc397)
                  } loc(#loc393)
                  cir.scope {
                    %73 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc113)
                    %74 = cir.const #cir.int<5> : !s32i loc(#loc114)
                    %75 = cir.call @listen(%73, %74) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc115)
                    %76 = cir.const #cir.int<1> : !s32i loc(#loc116)
                    %77 = cir.unary(minus, %76) nsw : !s32i, !s32i loc(#loc116)
                    %78 = cir.cmp(eq, %75, %77) : !s32i, !cir.bool loc(#loc399)
                    cir.if %78 {
                      cir.break loc(#loc118)
                    } loc(#loc400)
                  } loc(#loc398)
                  %39 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc119)
                  %40 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc120)
                  %41 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc121)
                  %42 = cir.call @accept(%39, %40, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc122)
                  cir.store %42, %5 : !s32i, !cir.ptr<!s32i> loc(#loc401)
                  cir.scope {
                    %73 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc127)
                    %74 = cir.const #cir.int<1> : !s32i loc(#loc128)
                    %75 = cir.unary(minus, %74) nsw : !s32i, !s32i loc(#loc128)
                    %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc403)
                    cir.if %76 {
                      cir.break loc(#loc130)
                    } loc(#loc404)
                  } loc(#loc402)
                  %43 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc131)
                  %44 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc132)
                  %45 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc133)
                  %46 = cir.ptr_stride(%44 : !cir.ptr<!s8i>, %45 : !u64i), !cir.ptr<!s8i> loc(#loc134)
                  %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc405)
                  %48 = cir.const #cir.int<100> : !s32i loc(#loc135)
                  %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc135)
                  %50 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc136)
                  %51 = cir.binop(sub, %49, %50) : !u64i loc(#loc406)
                  %52 = cir.const #cir.int<1> : !s32i loc(#loc137)
                  %53 = cir.cast(integral, %52 : !s32i), !u64i loc(#loc137)
                  %54 = cir.binop(sub, %51, %53) : !u64i loc(#loc407)
                  %55 = cir.cast(integral, %54 : !u64i), !s32i loc(#loc407)
                  %56 = cir.cast(integral, %55 : !s32i), !u64i loc(#loc407)
                  %57 = cir.const #cir.int<0> : !s32i loc(#loc138)
                  %58 = cir.call @recv(%43, %47, %56, %57) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc139)
                  %59 = cir.cast(integral, %58 : !s64i), !s32i loc(#loc139)
                  cir.store %59, %1 : !s32i, !cir.ptr<!s32i> loc(#loc408)
                  cir.scope {
                    %73 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc144)
                    %74 = cir.const #cir.int<1> : !s32i loc(#loc145)
                    %75 = cir.unary(minus, %74) nsw : !s32i, !s32i loc(#loc145)
                    %76 = cir.cmp(eq, %73, %75) : !s32i, !cir.bool loc(#loc410)
                    %77 = cir.ternary(%76, true {
                      %78 = cir.const #true loc(#loc146)
                      cir.yield %78 : !cir.bool loc(#loc146)
                    }, false {
                      %78 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc147)
                      %79 = cir.const #cir.int<0> : !s32i loc(#loc148)
                      %80 = cir.cmp(eq, %78, %79) : !s32i, !cir.bool loc(#loc411)
                      %81 = cir.ternary(%80, true {
                        %82 = cir.const #true loc(#loc146)
                        cir.yield %82 : !cir.bool loc(#loc146)
                      }, false {
                        %82 = cir.const #false loc(#loc146)
                        cir.yield %82 : !cir.bool loc(#loc146)
                      }) : (!cir.bool) -> !cir.bool loc(#loc146)
                      cir.yield %81 : !cir.bool loc(#loc146)
                    }) : (!cir.bool) -> !cir.bool loc(#loc146)
                    cir.if %77 {
                      cir.break loc(#loc150)
                    } loc(#loc412)
                  } loc(#loc409)
                  %60 = cir.const #cir.int<0> : !s32i loc(#loc151)
                  %61 = cir.cast(integral, %60 : !s32i), !s8i loc(#loc151)
                  %62 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc152)
                  %63 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc153)
                  %64 = cir.ptr_stride(%63 : !cir.ptr<!s8i>, %62 : !s32i), !cir.ptr<!s8i> loc(#loc153)
                  cir.store %61, %64 : !s8i, !cir.ptr<!s8i> loc(#loc413)
                  %65 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc154)
                  %66 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc155)
                  %67 = cir.const #cir.int<13> : !s32i loc(#loc156)
                  %68 = cir.call @strchr(%66, %67) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc154)
                  cir.store %68, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc414)
                  cir.scope {
                    %73 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc161)
                    %74 = cir.cast(ptr_to_bool, %73 : !cir.ptr<!s8i>), !cir.bool loc(#loc161)
                    cir.if %74 {
                      %75 = cir.const #cir.int<0> : !s32i loc(#loc163)
                      %76 = cir.cast(integral, %75 : !s32i), !s8i loc(#loc163)
                      %77 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc164)
                      cir.store %76, %77 : !s8i, !cir.ptr<!s8i> loc(#loc417)
                    } loc(#loc416)
                  } loc(#loc415)
                  %69 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc166)
                  %70 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc167)
                  %71 = cir.const #cir.int<10> : !s32i loc(#loc168)
                  %72 = cir.call @strchr(%70, %71) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc166)
                  cir.store %72, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc418)
                  cir.scope {
                    %73 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc173)
                    %74 = cir.cast(ptr_to_bool, %73 : !cir.ptr<!s8i>), !cir.bool loc(#loc173)
                    cir.if %74 {
                      %75 = cir.const #cir.int<0> : !s32i loc(#loc175)
                      %76 = cir.cast(integral, %75 : !s32i), !s8i loc(#loc175)
                      %77 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc176)
                      cir.store %76, %77 : !s8i, !cir.ptr<!s8i> loc(#loc421)
                    } loc(#loc420)
                  } loc(#loc419)
                } loc(#loc377)
                cir.yield loc(#loc53)
              } while {
                %21 = cir.const #cir.int<0> : !s32i loc(#loc178)
                %22 = cir.cast(int_to_bool, %21 : !s32i), !cir.bool loc(#loc178)
                cir.condition(%22) loc(#loc178)
              } loc(#loc376)
            } loc(#loc376)
            cir.scope {
              %21 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc181)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc182)
              %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc182)
              %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc423)
              cir.if %24 {
                %25 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc184)
                %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc185)
              } loc(#loc424)
            } loc(#loc422)
            cir.scope {
              %21 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc188)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc189)
              %23 = cir.unary(minus, %22) nsw : !s32i, !s32i loc(#loc189)
              %24 = cir.cmp(ne, %21, %23) : !s32i, !cir.bool loc(#loc426)
              cir.if %24 {
                %25 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc191)
                %26 = cir.call @close(%25) : (!s32i) -> !s32i loc(#loc192)
              } loc(#loc427)
            } loc(#loc425)
            %20 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc193)
            cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc194)
          } loc(#loc365)
          cir.break loc(#loc195)
        } loc(#loc364)
        cir.yield loc(#loc26)
      } loc(#loc363)
    } loc(#loc363)
    cir.return loc(#loc24)
  } loc(#loc362)
  cir.func no_proto @CWE605_Multiple_Binds_Same_Port__basic_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc429)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc198)
    cir.return loc(#loc197)
  } loc(#loc428)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      cir.while {
        %0 = cir.const #cir.int<1> : !s32i loc(#loc204)
        %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc204)
        cir.condition(%1) loc(#loc204)
      } do {
        cir.scope {
          cir.scope {
            %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data"] {alignment = 16 : i64} loc(#loc434)
            %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc435)
            %2 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc436)
            %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["replace"] {alignment = 8 : i64} loc(#loc437)
            %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc438)
            %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc439)
            %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc440)
            %7 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc434)
            cir.store %7, %0 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc434)
            %8 = cir.const #cir.int<1> : !s32i loc(#loc217)
            %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc217)
            cir.store %9, %4 : !s32i, !cir.ptr<!s32i> loc(#loc438)
            %10 = cir.const #cir.int<1> : !s32i loc(#loc219)
            %11 = cir.unary(minus, %10) nsw : !s32i, !s32i loc(#loc219)
            cir.store %11, %5 : !s32i, !cir.ptr<!s32i> loc(#loc439)
            %12 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc222)
            %13 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc223)
            %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc222)
            cir.store %14, %6 : !u64i, !cir.ptr<!u64i> loc(#loc440)
            cir.scope {
              cir.do {
                cir.scope {
                  %16 = cir.const #cir.int<2> : !s32i loc(#loc228)
                  %17 = cir.const #cir.int<1> : !s32i loc(#loc229)
                  %18 = cir.const #cir.int<6> : !s32i loc(#loc230)
                  %19 = cir.call @socket(%16, %17, %18) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc231)
                  cir.store %19, %4 : !s32i, !cir.ptr<!s32i> loc(#loc443)
                  cir.scope {
                    %68 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc236)
                    %69 = cir.const #cir.int<1> : !s32i loc(#loc237)
                    %70 = cir.unary(minus, %69) nsw : !s32i, !s32i loc(#loc237)
                    %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc445)
                    cir.if %71 {
                      cir.break loc(#loc239)
                    } loc(#loc446)
                  } loc(#loc444)
                  %20 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc447)
                  %21 = cir.const #cir.int<0> : !s32i loc(#loc242)
                  %22 = cir.const #cir.int<16> : !u64i loc(#loc448)
                  cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc449)
                  %23 = cir.const #cir.int<2> : !s32i loc(#loc247)
                  %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc247)
                  %25 = cir.get_member %2[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc89)
                  cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc450)
                  %26 = cir.const #cir.int<0> : !s32i loc(#loc249)
                  %27 = cir.cast(integral, %26 : !s32i), !u32i loc(#loc249)
                  %28 = cir.get_member %2[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc92)
                  %29 = cir.get_member %28[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc93)
                  cir.store %27, %29 : !u32i, !cir.ptr<!u32i> loc(#loc451)
                  %30 = cir.const #cir.int<27015> : !s32i loc(#loc251)
                  %31 = cir.cast(integral, %30 : !s32i), !u16i loc(#loc251)
                  %32 = cir.call @htons(%31) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc252)
                  %33 = cir.get_member %2[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc97)
                  cir.store %32, %33 : !u16i, !cir.ptr<!u16i> loc(#loc452)
                  cir.scope {
                    %68 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc257)
                    %69 = cir.cast(bitcast, %2 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc454)
                    %70 = cir.const #cir.int<16> : !u64i loc(#loc455)
                    %71 = cir.cast(integral, %70 : !u64i), !u32i loc(#loc455)
                    %72 = cir.call @bind(%68, %69, %71) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc262)
                    %73 = cir.const #cir.int<1> : !s32i loc(#loc263)
                    %74 = cir.unary(minus, %73) nsw : !s32i, !s32i loc(#loc263)
                    %75 = cir.cmp(eq, %72, %74) : !s32i, !cir.bool loc(#loc456)
                    cir.if %75 {
                      cir.break loc(#loc265)
                    } loc(#loc457)
                  } loc(#loc453)
                  cir.scope {
                    %68 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc268)
                    %69 = cir.const #cir.int<5> : !s32i loc(#loc269)
                    %70 = cir.call @listen(%68, %69) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc270)
                    %71 = cir.const #cir.int<1> : !s32i loc(#loc271)
                    %72 = cir.unary(minus, %71) nsw : !s32i, !s32i loc(#loc271)
                    %73 = cir.cmp(eq, %70, %72) : !s32i, !cir.bool loc(#loc459)
                    cir.if %73 {
                      cir.break loc(#loc273)
                    } loc(#loc460)
                  } loc(#loc458)
                  %34 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc274)
                  %35 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc275)
                  %36 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc276)
                  %37 = cir.call @accept(%34, %35, %36) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc277)
                  cir.store %37, %5 : !s32i, !cir.ptr<!s32i> loc(#loc461)
                  cir.scope {
                    %68 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc282)
                    %69 = cir.const #cir.int<1> : !s32i loc(#loc283)
                    %70 = cir.unary(minus, %69) nsw : !s32i, !s32i loc(#loc283)
                    %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc463)
                    cir.if %71 {
                      cir.break loc(#loc285)
                    } loc(#loc464)
                  } loc(#loc462)
                  %38 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc286)
                  %39 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc287)
                  %40 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc288)
                  %41 = cir.ptr_stride(%39 : !cir.ptr<!s8i>, %40 : !u64i), !cir.ptr<!s8i> loc(#loc289)
                  %42 = cir.cast(bitcast, %41 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc465)
                  %43 = cir.const #cir.int<100> : !s32i loc(#loc290)
                  %44 = cir.cast(integral, %43 : !s32i), !u64i loc(#loc290)
                  %45 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc291)
                  %46 = cir.binop(sub, %44, %45) : !u64i loc(#loc466)
                  %47 = cir.const #cir.int<1> : !s32i loc(#loc292)
                  %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc292)
                  %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc467)
                  %50 = cir.cast(integral, %49 : !u64i), !s32i loc(#loc467)
                  %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc467)
                  %52 = cir.const #cir.int<0> : !s32i loc(#loc293)
                  %53 = cir.call @recv(%38, %42, %51, %52) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc294)
                  %54 = cir.cast(integral, %53 : !s64i), !s32i loc(#loc294)
                  cir.store %54, %1 : !s32i, !cir.ptr<!s32i> loc(#loc468)
                  cir.scope {
                    %68 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc299)
                    %69 = cir.const #cir.int<1> : !s32i loc(#loc300)
                    %70 = cir.unary(minus, %69) nsw : !s32i, !s32i loc(#loc300)
                    %71 = cir.cmp(eq, %68, %70) : !s32i, !cir.bool loc(#loc470)
                    %72 = cir.ternary(%71, true {
                      %73 = cir.const #true loc(#loc301)
                      cir.yield %73 : !cir.bool loc(#loc301)
                    }, false {
                      %73 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc302)
                      %74 = cir.const #cir.int<0> : !s32i loc(#loc303)
                      %75 = cir.cmp(eq, %73, %74) : !s32i, !cir.bool loc(#loc471)
                      %76 = cir.ternary(%75, true {
                        %77 = cir.const #true loc(#loc301)
                        cir.yield %77 : !cir.bool loc(#loc301)
                      }, false {
                        %77 = cir.const #false loc(#loc301)
                        cir.yield %77 : !cir.bool loc(#loc301)
                      }) : (!cir.bool) -> !cir.bool loc(#loc301)
                      cir.yield %76 : !cir.bool loc(#loc301)
                    }) : (!cir.bool) -> !cir.bool loc(#loc301)
                    cir.if %72 {
                      cir.break loc(#loc305)
                    } loc(#loc472)
                  } loc(#loc469)
                  %55 = cir.const #cir.int<0> : !s32i loc(#loc306)
                  %56 = cir.cast(integral, %55 : !s32i), !s8i loc(#loc306)
                  %57 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc307)
                  %58 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc308)
                  %59 = cir.ptr_stride(%58 : !cir.ptr<!s8i>, %57 : !s32i), !cir.ptr<!s8i> loc(#loc308)
                  cir.store %56, %59 : !s8i, !cir.ptr<!s8i> loc(#loc473)
                  %60 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc309)
                  %61 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc310)
                  %62 = cir.const #cir.int<13> : !s32i loc(#loc311)
                  %63 = cir.call @strchr(%61, %62) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc309)
                  cir.store %63, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc474)
                  cir.scope {
                    %68 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc316)
                    %69 = cir.cast(ptr_to_bool, %68 : !cir.ptr<!s8i>), !cir.bool loc(#loc316)
                    cir.if %69 {
                      %70 = cir.const #cir.int<0> : !s32i loc(#loc318)
                      %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc318)
                      %72 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc319)
                      cir.store %71, %72 : !s8i, !cir.ptr<!s8i> loc(#loc477)
                    } loc(#loc476)
                  } loc(#loc475)
                  %64 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc321)
                  %65 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc322)
                  %66 = cir.const #cir.int<10> : !s32i loc(#loc323)
                  %67 = cir.call @strchr(%65, %66) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc321)
                  cir.store %67, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc478)
                  cir.scope {
                    %68 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc328)
                    %69 = cir.cast(ptr_to_bool, %68 : !cir.ptr<!s8i>), !cir.bool loc(#loc328)
                    cir.if %69 {
                      %70 = cir.const #cir.int<0> : !s32i loc(#loc330)
                      %71 = cir.cast(integral, %70 : !s32i), !s8i loc(#loc330)
                      %72 = cir.load deref %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc331)
                      cir.store %71, %72 : !s8i, !cir.ptr<!s8i> loc(#loc481)
                    } loc(#loc480)
                  } loc(#loc479)
                } loc(#loc442)
                cir.yield loc(#loc225)
              } while {
                %16 = cir.const #cir.int<0> : !s32i loc(#loc333)
                %17 = cir.cast(int_to_bool, %16 : !s32i), !cir.bool loc(#loc333)
                cir.condition(%17) loc(#loc333)
              } loc(#loc441)
            } loc(#loc441)
            cir.scope {
              %16 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc336)
              %17 = cir.const #cir.int<1> : !s32i loc(#loc337)
              %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc337)
              %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc483)
              cir.if %19 {
                %20 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc339)
                %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc340)
              } loc(#loc484)
            } loc(#loc482)
            cir.scope {
              %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc343)
              %17 = cir.const #cir.int<1> : !s32i loc(#loc344)
              %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc344)
              %19 = cir.cmp(ne, %16, %18) : !s32i, !cir.bool loc(#loc486)
              cir.if %19 {
                %20 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc346)
                %21 = cir.call @close(%20) : (!s32i) -> !s32i loc(#loc347)
              } loc(#loc487)
            } loc(#loc485)
            %15 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc348)
            cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc349)
          } loc(#loc433)
          cir.break loc(#loc350)
        } loc(#loc432)
        cir.yield loc(#loc203)
      } loc(#loc431)
    } loc(#loc431)
    cir.return loc(#loc201)
  } loc(#loc430)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE605_Multiple_Binds_Same_Port/CWE605_Multiple_Binds_Same_Port__basic_16.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc4 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":277:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":278:52)
#loc7 = loc("/usr/include/netinet/in.h":402:1)
#loc8 = loc("/usr/include/netinet/in.h":403:40)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc14 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc15 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc16 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc17 = loc("/usr/include/string.h":246:1)
#loc18 = loc("/usr/include/string.h":247:33)
#loc19 = loc("/usr/include/unistd.h":358:1)
#loc20 = loc("/usr/include/unistd.h":358:27)
#loc21 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc22 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc23 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":44:1)
#loc24 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":142:1)
#loc25 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":46:5)
#loc26 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":141:5)
#loc27 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":46:11)
#loc28 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":47:5)
#loc29 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":48:9)
#loc30 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":139:9)
#loc31 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":49:13)
#loc32 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":49:30)
#loc33 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":54:13)
#loc34 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":54:17)
#loc35 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":55:13)
#loc36 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":55:32)
#loc37 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":56:13)
#loc38 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":56:19)
#loc39 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":57:13)
#loc40 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":57:35)
#loc41 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":58:13)
#loc42 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":58:35)
#loc43 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":59:13)
#loc44 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":59:41)
#loc45 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":64:13)
#loc46 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":64:27)
#loc47 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":65:13)
#loc48 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":65:37)
#loc49 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":59:30)
#loc50 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":59:37)
#loc51 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":65:27)
#loc52 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":67:13)
#loc53 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":123:21)
#loc54 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":68:13)
#loc55 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":122:13)
#loc56 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":76:39)
#loc57 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":76:48)
#loc58 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":76:61)
#loc59 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":76:32)
#loc60 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":76:17)
#loc61 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":76:72)
#loc62 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":77:17)
#loc63 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":80:17)
#loc64 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":77:21)
#loc65 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":77:37)
#loc66 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":78:17)
#loc67 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":79:21)
#loc68 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":82:17)
#loc69 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":85:17)
#loc70 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":82:32)
#loc71 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":82:46)
#loc72 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":82:58)
#loc73 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":82:79)
#loc74 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":82:80)
#loc75 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":82:72)
#loc76 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":82:89)
#loc77 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":82:21)
#loc78 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":82:101)
#loc79 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":83:17)
#loc80 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":84:21)
#loc81 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":86:24)
#loc82 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":86:25)
#loc83 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":86:34)
#loc84 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":86:37)
#loc85 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":86:51)
#loc86 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":86:17)
#loc87 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":86:52)
#loc88 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":87:38)
#loc89 = loc("/usr/include/netinet/in.h":249:5)
#loc90 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":87:17)
#loc91 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":88:43)
#loc92 = loc("/usr/include/netinet/in.h":251:20)
#loc93 = loc("/usr/include/netinet/in.h":33:15)
#loc94 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":88:17)
#loc95 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":89:42)
#loc96 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":89:36)
#loc97 = loc("/usr/include/netinet/in.h":250:15)
#loc98 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":89:17)
#loc99 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":89:50)
#loc100 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":90:17)
#loc101 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":93:17)
#loc102 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":90:26)
#loc103 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":90:58)
#loc104 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":90:59)
#loc105 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":90:68)
#loc106 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":90:82)
#loc107 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":90:21)
#loc108 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":90:88)
#loc109 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":91:17)
#loc110 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":92:21)
#loc111 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":94:17)
#loc112 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":97:17)
#loc113 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":94:28)
#loc114 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":94:42)
#loc115 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":94:21)
#loc116 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":94:61)
#loc117 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":95:17)
#loc118 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":96:21)
#loc119 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":98:39)
#loc120 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":98:53)
#loc121 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":98:59)
#loc122 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":98:32)
#loc123 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":98:17)
#loc124 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":98:63)
#loc125 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":99:17)
#loc126 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":102:17)
#loc127 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":99:21)
#loc128 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":99:37)
#loc129 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":100:17)
#loc130 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":101:21)
#loc131 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":104:35)
#loc132 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":104:49)
#loc133 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":104:54)
#loc134 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":104:53)
#loc135 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":104:69)
#loc136 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":104:73)
#loc137 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":104:81)
#loc138 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":104:85)
#loc139 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":104:30)
#loc140 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":104:17)
#loc141 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":104:86)
#loc142 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":105:17)
#loc143 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":108:17)
#loc144 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":105:21)
#loc145 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":105:35)
#loc146 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":105:48)
#loc147 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":105:51)
#loc148 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":105:65)
#loc149 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":106:17)
#loc150 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":107:21)
#loc151 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":110:36)
#loc152 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":110:22)
#loc153 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":110:17)
#loc154 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":112:27)
#loc155 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":112:34)
#loc156 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":112:40)
#loc157 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":112:17)
#loc158 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":112:44)
#loc159 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":113:17)
#loc160 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":116:17)
#loc161 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":113:21)
#loc162 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":114:17)
#loc163 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":115:32)
#loc164 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":115:22)
#loc165 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":115:21)
#loc166 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":117:27)
#loc167 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":117:34)
#loc168 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":117:40)
#loc169 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":117:17)
#loc170 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":117:44)
#loc171 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":118:17)
#loc172 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":121:17)
#loc173 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":118:21)
#loc174 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":119:17)
#loc175 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":120:32)
#loc176 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":120:22)
#loc177 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":120:21)
#loc178 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":123:20)
#loc179 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":124:13)
#loc180 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":127:13)
#loc181 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":124:17)
#loc182 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":124:33)
#loc183 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":125:13)
#loc184 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":126:30)
#loc185 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":126:17)
#loc186 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":128:13)
#loc187 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":131:13)
#loc188 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":128:17)
#loc189 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":128:33)
#loc190 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":129:13)
#loc191 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":130:30)
#loc192 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":130:17)
#loc193 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":138:23)
#loc194 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":138:13)
#loc195 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":140:9)
#loc196 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":238:1)
#loc197 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":241:1)
#loc198 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":240:5)
#loc199 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":240:11)
#loc200 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":149:1)
#loc201 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":236:1)
#loc202 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":151:5)
#loc203 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":235:5)
#loc204 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":151:11)
#loc205 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":152:5)
#loc206 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":153:9)
#loc207 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":233:9)
#loc208 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":154:13)
#loc209 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":154:30)
#loc210 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":159:13)
#loc211 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":159:17)
#loc212 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":160:13)
#loc213 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":160:32)
#loc214 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":161:13)
#loc215 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":161:19)
#loc216 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":162:13)
#loc217 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":162:35)
#loc218 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":163:13)
#loc219 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":163:35)
#loc220 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":164:13)
#loc221 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":164:41)
#loc222 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":164:30)
#loc223 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":164:37)
#loc224 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":165:13)
#loc225 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":217:21)
#loc226 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":166:13)
#loc227 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":216:13)
#loc228 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":174:39)
#loc229 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":174:48)
#loc230 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":174:61)
#loc231 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":174:32)
#loc232 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":174:17)
#loc233 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":174:72)
#loc234 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":175:17)
#loc235 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":178:17)
#loc236 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":175:21)
#loc237 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":175:37)
#loc238 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":176:17)
#loc239 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":177:21)
#loc240 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":180:24)
#loc241 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":180:25)
#loc242 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":180:34)
#loc243 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":180:37)
#loc244 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":180:51)
#loc245 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":180:17)
#loc246 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":180:52)
#loc247 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":181:38)
#loc248 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":181:17)
#loc249 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":182:43)
#loc250 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":182:17)
#loc251 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":183:42)
#loc252 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":183:36)
#loc253 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":183:17)
#loc254 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":183:50)
#loc255 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":184:17)
#loc256 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":187:17)
#loc257 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":184:26)
#loc258 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":184:58)
#loc259 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":184:59)
#loc260 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":184:68)
#loc261 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":184:82)
#loc262 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":184:21)
#loc263 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":184:88)
#loc264 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":185:17)
#loc265 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":186:21)
#loc266 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":188:17)
#loc267 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":191:17)
#loc268 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":188:28)
#loc269 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":188:42)
#loc270 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":188:21)
#loc271 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":188:61)
#loc272 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":189:17)
#loc273 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":190:21)
#loc274 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":192:39)
#loc275 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":192:53)
#loc276 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":192:59)
#loc277 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":192:32)
#loc278 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":192:17)
#loc279 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":192:63)
#loc280 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":193:17)
#loc281 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":196:17)
#loc282 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":193:21)
#loc283 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":193:37)
#loc284 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":194:17)
#loc285 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":195:21)
#loc286 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":198:35)
#loc287 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":198:49)
#loc288 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":198:54)
#loc289 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":198:53)
#loc290 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":198:69)
#loc291 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":198:73)
#loc292 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":198:81)
#loc293 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":198:85)
#loc294 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":198:30)
#loc295 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":198:17)
#loc296 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":198:86)
#loc297 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":199:17)
#loc298 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":202:17)
#loc299 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":199:21)
#loc300 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":199:35)
#loc301 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":199:48)
#loc302 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":199:51)
#loc303 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":199:65)
#loc304 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":200:17)
#loc305 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":201:21)
#loc306 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":204:36)
#loc307 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":204:22)
#loc308 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":204:17)
#loc309 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":206:27)
#loc310 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":206:34)
#loc311 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":206:40)
#loc312 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":206:17)
#loc313 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":206:44)
#loc314 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":207:17)
#loc315 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":210:17)
#loc316 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":207:21)
#loc317 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":208:17)
#loc318 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":209:32)
#loc319 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":209:22)
#loc320 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":209:21)
#loc321 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":211:27)
#loc322 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":211:34)
#loc323 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":211:40)
#loc324 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":211:17)
#loc325 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":211:44)
#loc326 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":212:17)
#loc327 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":215:17)
#loc328 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":212:21)
#loc329 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":213:17)
#loc330 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":214:32)
#loc331 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":214:22)
#loc332 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":214:21)
#loc333 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":217:20)
#loc334 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":218:13)
#loc335 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":221:13)
#loc336 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":218:17)
#loc337 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":218:33)
#loc338 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":219:13)
#loc339 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":220:30)
#loc340 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":220:17)
#loc341 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":222:13)
#loc342 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":225:13)
#loc343 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":222:17)
#loc344 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":222:33)
#loc345 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":223:13)
#loc346 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":224:30)
#loc347 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":224:17)
#loc348 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":232:23)
#loc349 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":232:13)
#loc350 = loc("CWE605_Multiple_Binds_Same_Port__basic_16.c":234:9)
#loc351 = loc(fused[#loc1, #loc2])
#loc352 = loc(fused[#loc3, #loc4])
#loc353 = loc(fused[#loc5, #loc6])
#loc354 = loc(fused[#loc7, #loc8])
#loc355 = loc(fused[#loc9, #loc10])
#loc356 = loc(fused[#loc11, #loc12])
#loc357 = loc(fused[#loc13, #loc14])
#loc358 = loc(fused[#loc15, #loc16])
#loc359 = loc(fused[#loc17, #loc18])
#loc360 = loc(fused[#loc19, #loc20])
#loc361 = loc(fused[#loc21, #loc22])
#loc362 = loc(fused[#loc23, #loc24])
#loc363 = loc(fused[#loc25, #loc26])
#loc364 = loc(fused[#loc28, #loc26])
#loc365 = loc(fused[#loc29, #loc30])
#loc366 = loc(fused[#loc31, #loc32])
#loc367 = loc(fused[#loc33, #loc34])
#loc368 = loc(fused[#loc35, #loc36])
#loc369 = loc(fused[#loc37, #loc38])
#loc370 = loc(fused[#loc39, #loc40])
#loc371 = loc(fused[#loc41, #loc42])
#loc372 = loc(fused[#loc43, #loc44])
#loc373 = loc(fused[#loc45, #loc46])
#loc374 = loc(fused[#loc47, #loc48])
#loc375 = loc(fused[#loc51, #loc48])
#loc376 = loc(fused[#loc52, #loc53])
#loc377 = loc(fused[#loc54, #loc55])
#loc378 = loc(fused[#loc60, #loc61])
#loc379 = loc(fused[#loc62, #loc63])
#loc380 = loc(fused[#loc64, #loc65])
#loc381 = loc(fused[#loc66, #loc63])
#loc382 = loc(fused[#loc68, #loc69])
#loc383 = loc(fused[#loc73, #loc74])
#loc384 = loc(fused[#loc75, #loc74])
#loc385 = loc(fused[#loc77, #loc78])
#loc386 = loc(fused[#loc79, #loc69])
#loc387 = loc(fused[#loc81, #loc82])
#loc388 = loc(fused[#loc84, #loc85])
#loc389 = loc(fused[#loc86, #loc87])
#loc390 = loc(fused[#loc90, #loc88])
#loc391 = loc(fused[#loc94, #loc91])
#loc392 = loc(fused[#loc98, #loc99])
#loc393 = loc(fused[#loc100, #loc101])
#loc394 = loc(fused[#loc103, #loc104])
#loc395 = loc(fused[#loc105, #loc106])
#loc396 = loc(fused[#loc107, #loc108])
#loc397 = loc(fused[#loc109, #loc101])
#loc398 = loc(fused[#loc111, #loc112])
#loc399 = loc(fused[#loc115, #loc116])
#loc400 = loc(fused[#loc117, #loc112])
#loc401 = loc(fused[#loc123, #loc124])
#loc402 = loc(fused[#loc125, #loc126])
#loc403 = loc(fused[#loc127, #loc128])
#loc404 = loc(fused[#loc129, #loc126])
#loc405 = loc(fused[#loc132, #loc133])
#loc406 = loc(fused[#loc135, #loc136])
#loc407 = loc(fused[#loc135, #loc137])
#loc408 = loc(fused[#loc140, #loc141])
#loc409 = loc(fused[#loc142, #loc143])
#loc410 = loc(fused[#loc144, #loc145])
#loc411 = loc(fused[#loc147, #loc148])
#loc412 = loc(fused[#loc149, #loc143])
#loc413 = loc(fused[#loc153, #loc151])
#loc414 = loc(fused[#loc157, #loc158])
#loc415 = loc(fused[#loc159, #loc160])
#loc416 = loc(fused[#loc162, #loc160])
#loc417 = loc(fused[#loc165, #loc163])
#loc418 = loc(fused[#loc169, #loc170])
#loc419 = loc(fused[#loc171, #loc172])
#loc420 = loc(fused[#loc174, #loc172])
#loc421 = loc(fused[#loc177, #loc175])
#loc422 = loc(fused[#loc179, #loc180])
#loc423 = loc(fused[#loc181, #loc182])
#loc424 = loc(fused[#loc183, #loc180])
#loc425 = loc(fused[#loc186, #loc187])
#loc426 = loc(fused[#loc188, #loc189])
#loc427 = loc(fused[#loc190, #loc187])
#loc428 = loc(fused[#loc196, #loc197])
#loc429 = loc(fused[#loc198, #loc199])
#loc430 = loc(fused[#loc200, #loc201])
#loc431 = loc(fused[#loc202, #loc203])
#loc432 = loc(fused[#loc205, #loc203])
#loc433 = loc(fused[#loc206, #loc207])
#loc434 = loc(fused[#loc208, #loc209])
#loc435 = loc(fused[#loc210, #loc211])
#loc436 = loc(fused[#loc212, #loc213])
#loc437 = loc(fused[#loc214, #loc215])
#loc438 = loc(fused[#loc216, #loc217])
#loc439 = loc(fused[#loc218, #loc219])
#loc440 = loc(fused[#loc220, #loc221])
#loc441 = loc(fused[#loc224, #loc225])
#loc442 = loc(fused[#loc226, #loc227])
#loc443 = loc(fused[#loc232, #loc233])
#loc444 = loc(fused[#loc234, #loc235])
#loc445 = loc(fused[#loc236, #loc237])
#loc446 = loc(fused[#loc238, #loc235])
#loc447 = loc(fused[#loc240, #loc241])
#loc448 = loc(fused[#loc243, #loc244])
#loc449 = loc(fused[#loc245, #loc246])
#loc450 = loc(fused[#loc248, #loc247])
#loc451 = loc(fused[#loc250, #loc249])
#loc452 = loc(fused[#loc253, #loc254])
#loc453 = loc(fused[#loc255, #loc256])
#loc454 = loc(fused[#loc258, #loc259])
#loc455 = loc(fused[#loc260, #loc261])
#loc456 = loc(fused[#loc262, #loc263])
#loc457 = loc(fused[#loc264, #loc256])
#loc458 = loc(fused[#loc266, #loc267])
#loc459 = loc(fused[#loc270, #loc271])
#loc460 = loc(fused[#loc272, #loc267])
#loc461 = loc(fused[#loc278, #loc279])
#loc462 = loc(fused[#loc280, #loc281])
#loc463 = loc(fused[#loc282, #loc283])
#loc464 = loc(fused[#loc284, #loc281])
#loc465 = loc(fused[#loc287, #loc288])
#loc466 = loc(fused[#loc290, #loc291])
#loc467 = loc(fused[#loc290, #loc292])
#loc468 = loc(fused[#loc295, #loc296])
#loc469 = loc(fused[#loc297, #loc298])
#loc470 = loc(fused[#loc299, #loc300])
#loc471 = loc(fused[#loc302, #loc303])
#loc472 = loc(fused[#loc304, #loc298])
#loc473 = loc(fused[#loc308, #loc306])
#loc474 = loc(fused[#loc312, #loc313])
#loc475 = loc(fused[#loc314, #loc315])
#loc476 = loc(fused[#loc317, #loc315])
#loc477 = loc(fused[#loc320, #loc318])
#loc478 = loc(fused[#loc324, #loc325])
#loc479 = loc(fused[#loc326, #loc327])
#loc480 = loc(fused[#loc329, #loc327])
#loc481 = loc(fused[#loc332, #loc330])
#loc482 = loc(fused[#loc334, #loc335])
#loc483 = loc(fused[#loc336, #loc337])
#loc484 = loc(fused[#loc338, #loc335])
#loc485 = loc(fused[#loc341, #loc342])
#loc486 = loc(fused[#loc343, #loc344])
#loc487 = loc(fused[#loc345, #loc342])
