!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty__linkedList = !cir.record<struct "_linkedList" {!cir.ptr<!cir.record<struct "_linkedList">>, !cir.ptr<!cir.record<struct "_linkedList">>}>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
!ty__badStruct = !cir.record<struct "_badStruct" {!ty__linkedList}>
module @"/workspaces/juliet-c/testcases/CWE123_Write_What_Where_Condition/CWE123_Write_What_Where_Condition__connect_socket_64a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc149)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc151)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc152)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc153)
  cir.func private @close(!s32i) -> !s32i loc(#loc154)
  cir.func private @CWE123_Write_What_Where_Condition__connect_socket_64b_badSink(!cir.ptr<!void>) loc(#loc155)
  cir.func no_proto @CWE123_Write_What_Where_Condition__connect_socket_64_bad() extra(#fn_attr1) {
    %0 = cir.alloca !ty__badStruct, !cir.ptr<!ty__badStruct>, ["data"] {alignment = 8 : i64} loc(#loc157)
    %1 = cir.alloca !ty__linkedList, !cir.ptr<!ty__linkedList>, ["head", init] {alignment = 8 : i64} loc(#loc158)
    %2 = cir.get_member %1[0] {name = "next"} : !cir.ptr<!ty__linkedList> -> !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc22)
    cir.store %1, %2 : !cir.ptr<!ty__linkedList>, !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc159)
    %3 = cir.get_member %1[1] {name = "prev"} : !cir.ptr<!ty__linkedList> -> !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc25)
    cir.store %1, %3 : !cir.ptr<!ty__linkedList>, !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc160)
    %4 = cir.get_member %1[0] {name = "next"} : !cir.ptr<!ty__linkedList> -> !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc22)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__linkedList>>, !cir.ptr<!ty__linkedList> loc(#loc28)
    %6 = cir.get_member %0[0] {name = "list"} : !cir.ptr<!ty__badStruct> -> !cir.ptr<!ty__linkedList> loc(#loc29)
    %7 = cir.get_member %6[0] {name = "next"} : !cir.ptr<!ty__linkedList> -> !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc22)
    cir.store %5, %7 : !cir.ptr<!ty__linkedList>, !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc161)
    %8 = cir.get_member %1[1] {name = "prev"} : !cir.ptr<!ty__linkedList> -> !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc25)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__linkedList>>, !cir.ptr<!ty__linkedList> loc(#loc31)
    %10 = cir.get_member %0[0] {name = "list"} : !cir.ptr<!ty__badStruct> -> !cir.ptr<!ty__linkedList> loc(#loc29)
    %11 = cir.get_member %10[1] {name = "prev"} : !cir.ptr<!ty__linkedList> -> !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc25)
    cir.store %9, %11 : !cir.ptr<!ty__linkedList>, !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc162)
    %12 = cir.get_member %0[0] {name = "list"} : !cir.ptr<!ty__badStruct> -> !cir.ptr<!ty__linkedList> loc(#loc29)
    %13 = cir.get_member %1[0] {name = "next"} : !cir.ptr<!ty__linkedList> -> !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc22)
    cir.store %12, %13 : !cir.ptr<!ty__linkedList>, !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc163)
    %14 = cir.get_member %0[0] {name = "list"} : !cir.ptr<!ty__badStruct> -> !cir.ptr<!ty__linkedList> loc(#loc29)
    %15 = cir.get_member %1[1] {name = "prev"} : !cir.ptr<!ty__linkedList> -> !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc25)
    cir.store %14, %15 : !cir.ptr<!ty__linkedList>, !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc164)
    cir.scope {
      %17 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc166)
      %18 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc167)
      %19 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc168)
      %20 = cir.const #cir.int<1> : !s32i loc(#loc44)
      %21 = cir.unary(minus, %20) nsw : !s32i, !s32i loc(#loc44)
      cir.store %21, %19 : !s32i, !cir.ptr<!s32i> loc(#loc168)
      cir.scope {
        cir.do {
          cir.scope {
            %22 = cir.const #cir.int<2> : !s32i loc(#loc49)
            %23 = cir.const #cir.int<1> : !s32i loc(#loc50)
            %24 = cir.const #cir.int<6> : !s32i loc(#loc51)
            %25 = cir.call @socket(%22, %23, %24) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc52)
            cir.store %25, %19 : !s32i, !cir.ptr<!s32i> loc(#loc171)
            cir.scope {
              %48 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc57)
              %49 = cir.const #cir.int<1> : !s32i loc(#loc58)
              %50 = cir.unary(minus, %49) nsw : !s32i, !s32i loc(#loc58)
              %51 = cir.cmp(eq, %48, %50) : !s32i, !cir.bool loc(#loc173)
              cir.if %51 {
                cir.break loc(#loc60)
              } loc(#loc174)
            } loc(#loc172)
            %26 = cir.cast(bitcast, %18 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc175)
            %27 = cir.const #cir.int<0> : !s32i loc(#loc63)
            %28 = cir.const #cir.int<16> : !u64i loc(#loc176)
            cir.libc.memset %28 bytes from %26 set to %27 : !cir.ptr<!void>, !s32i, !u64i loc(#loc177)
            %29 = cir.const #cir.int<2> : !s32i loc(#loc68)
            %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc68)
            %31 = cir.get_member %18[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
            cir.store %30, %31 : !u16i, !cir.ptr<!u16i> loc(#loc178)
            %32 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
            %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
            %34 = cir.call @inet_addr(%33) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc71)
            %35 = cir.get_member %18[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc72)
            %36 = cir.get_member %35[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc73)
            cir.store %34, %36 : !u32i, !cir.ptr<!u32i> loc(#loc179)
            %37 = cir.const #cir.int<27015> : !s32i loc(#loc76)
            %38 = cir.cast(integral, %37 : !s32i), !u16i loc(#loc76)
            %39 = cir.call @htons(%38) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc77)
            %40 = cir.get_member %18[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc78)
            cir.store %39, %40 : !u16i, !cir.ptr<!u16i> loc(#loc180)
            cir.scope {
              %48 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc83)
              %49 = cir.cast(bitcast, %18 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc182)
              %50 = cir.const #cir.int<16> : !u64i loc(#loc183)
              %51 = cir.cast(integral, %50 : !u64i), !u32i loc(#loc183)
              %52 = cir.call @connect(%48, %49, %51) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc88)
              %53 = cir.const #cir.int<1> : !s32i loc(#loc89)
              %54 = cir.unary(minus, %53) nsw : !s32i, !s32i loc(#loc89)
              %55 = cir.cmp(eq, %52, %54) : !s32i, !cir.bool loc(#loc184)
              cir.if %55 {
                cir.break loc(#loc91)
              } loc(#loc185)
            } loc(#loc181)
            %41 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc92)
            %42 = cir.cast(bitcast, %0 : !cir.ptr<!ty__badStruct>), !cir.ptr<!s8i> loc(#loc186)
            %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc187)
            %44 = cir.const #cir.int<16> : !u64i loc(#loc188)
            %45 = cir.const #cir.int<0> : !s32i loc(#loc98)
            %46 = cir.call @recv(%41, %43, %44, %45) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc99)
            %47 = cir.cast(integral, %46 : !s64i), !s32i loc(#loc99)
            cir.store %47, %17 : !s32i, !cir.ptr<!s32i> loc(#loc189)
            cir.scope {
              %48 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc104)
              %49 = cir.const #cir.int<1> : !s32i loc(#loc105)
              %50 = cir.unary(minus, %49) nsw : !s32i, !s32i loc(#loc105)
              %51 = cir.cmp(eq, %48, %50) : !s32i, !cir.bool loc(#loc191)
              %52 = cir.ternary(%51, true {
                %53 = cir.const #true loc(#loc106)
                cir.yield %53 : !cir.bool loc(#loc106)
              }, false {
                %53 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc107)
                %54 = cir.const #cir.int<0> : !s32i loc(#loc108)
                %55 = cir.cmp(eq, %53, %54) : !s32i, !cir.bool loc(#loc192)
                %56 = cir.ternary(%55, true {
                  %57 = cir.const #true loc(#loc106)
                  cir.yield %57 : !cir.bool loc(#loc106)
                }, false {
                  %57 = cir.const #false loc(#loc106)
                  cir.yield %57 : !cir.bool loc(#loc106)
                }) : (!cir.bool) -> !cir.bool loc(#loc106)
                cir.yield %56 : !cir.bool loc(#loc106)
              }) : (!cir.bool) -> !cir.bool loc(#loc106)
              cir.if %52 {
                cir.break loc(#loc110)
              } loc(#loc193)
            } loc(#loc190)
          } loc(#loc170)
          cir.yield loc(#loc46)
        } while {
          %22 = cir.const #cir.int<0> : !s32i loc(#loc111)
          %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc111)
          cir.condition(%23) loc(#loc111)
        } loc(#loc169)
      } loc(#loc169)
      cir.scope {
        %22 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc114)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc115)
        %24 = cir.unary(minus, %23) nsw : !s32i, !s32i loc(#loc115)
        %25 = cir.cmp(ne, %22, %24) : !s32i, !cir.bool loc(#loc195)
        cir.if %25 {
          %26 = cir.load %19 : !cir.ptr<!s32i>, !s32i loc(#loc117)
          %27 = cir.call @close(%26) : (!s32i) -> !s32i loc(#loc118)
        } loc(#loc196)
      } loc(#loc194)
    } loc(#loc165)
    %16 = cir.cast(bitcast, %0 : !cir.ptr<!ty__badStruct>), !cir.ptr<!void> loc(#loc197)
    cir.call @CWE123_Write_What_Where_Condition__connect_socket_64b_badSink(%16) : (!cir.ptr<!void>) -> () loc(#loc121)
    cir.return loc(#loc17)
  } loc(#loc156)
  cir.func no_proto @CWE123_Write_What_Where_Condition__connect_socket_64_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc199)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc124)
    cir.return loc(#loc123)
  } loc(#loc198)
  cir.func private @CWE123_Write_What_Where_Condition__connect_socket_64b_goodG2BSink(!cir.ptr<!void>) loc(#loc200)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !ty__badStruct, !cir.ptr<!ty__badStruct>, ["data"] {alignment = 8 : i64} loc(#loc202)
    %1 = cir.alloca !ty__linkedList, !cir.ptr<!ty__linkedList>, ["head", init] {alignment = 8 : i64} loc(#loc203)
    %2 = cir.get_member %1[0] {name = "next"} : !cir.ptr<!ty__linkedList> -> !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc22)
    cir.store %1, %2 : !cir.ptr<!ty__linkedList>, !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc204)
    %3 = cir.get_member %1[1] {name = "prev"} : !cir.ptr<!ty__linkedList> -> !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc25)
    cir.store %1, %3 : !cir.ptr<!ty__linkedList>, !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc205)
    %4 = cir.get_member %1[0] {name = "next"} : !cir.ptr<!ty__linkedList> -> !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc22)
    %5 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__linkedList>>, !cir.ptr<!ty__linkedList> loc(#loc138)
    %6 = cir.get_member %0[0] {name = "list"} : !cir.ptr<!ty__badStruct> -> !cir.ptr<!ty__linkedList> loc(#loc29)
    %7 = cir.get_member %6[0] {name = "next"} : !cir.ptr<!ty__linkedList> -> !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc22)
    cir.store %5, %7 : !cir.ptr<!ty__linkedList>, !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc206)
    %8 = cir.get_member %1[1] {name = "prev"} : !cir.ptr<!ty__linkedList> -> !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc25)
    %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__linkedList>>, !cir.ptr<!ty__linkedList> loc(#loc140)
    %10 = cir.get_member %0[0] {name = "list"} : !cir.ptr<!ty__badStruct> -> !cir.ptr<!ty__linkedList> loc(#loc29)
    %11 = cir.get_member %10[1] {name = "prev"} : !cir.ptr<!ty__linkedList> -> !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc25)
    cir.store %9, %11 : !cir.ptr<!ty__linkedList>, !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc207)
    %12 = cir.get_member %0[0] {name = "list"} : !cir.ptr<!ty__badStruct> -> !cir.ptr<!ty__linkedList> loc(#loc29)
    %13 = cir.get_member %1[0] {name = "next"} : !cir.ptr<!ty__linkedList> -> !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc22)
    cir.store %12, %13 : !cir.ptr<!ty__linkedList>, !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc208)
    %14 = cir.get_member %0[0] {name = "list"} : !cir.ptr<!ty__badStruct> -> !cir.ptr<!ty__linkedList> loc(#loc29)
    %15 = cir.get_member %1[1] {name = "prev"} : !cir.ptr<!ty__linkedList> -> !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc25)
    cir.store %14, %15 : !cir.ptr<!ty__linkedList>, !cir.ptr<!cir.ptr<!ty__linkedList>> loc(#loc209)
    %16 = cir.cast(bitcast, %0 : !cir.ptr<!ty__badStruct>), !cir.ptr<!void> loc(#loc210)
    cir.call @CWE123_Write_What_Where_Condition__connect_socket_64b_goodG2BSink(%16) : (!cir.ptr<!void>) -> () loc(#loc148)
    cir.return loc(#loc129)
  } loc(#loc201)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE123_Write_What_Where_Condition/CWE123_Write_What_Where_Condition__connect_socket_64a.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":91:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/unistd.h":358:1)
#loc13 = loc("/usr/include/unistd.h":358:27)
#loc14 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":56:1)
#loc15 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":56:86)
#loc16 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":58:1)
#loc17 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":119:1)
#loc18 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":60:5)
#loc19 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":60:15)
#loc20 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":61:5)
#loc21 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":61:38)
#loc22 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":21:25)
#loc23 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":61:25)
#loc24 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":61:26)
#loc25 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":22:25)
#loc26 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":61:32)
#loc27 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":61:33)
#loc28 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":63:27)
#loc29 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":27:16)
#loc30 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":63:5)
#loc31 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":64:27)
#loc32 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":64:5)
#loc33 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":65:5)
#loc34 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":65:23)
#loc35 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":66:5)
#loc36 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":66:23)
#loc37 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":67:5)
#loc38 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":117:5)
#loc39 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":72:9)
#loc40 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":72:13)
#loc41 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":73:9)
#loc42 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":73:28)
#loc43 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":74:9)
#loc44 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":74:32)
#loc45 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":75:9)
#loc46 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":106:17)
#loc47 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":76:9)
#loc48 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":105:9)
#loc49 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":84:36)
#loc50 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":84:45)
#loc51 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":84:58)
#loc52 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":84:29)
#loc53 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":84:13)
#loc54 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":84:69)
#loc55 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":85:13)
#loc56 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":88:13)
#loc57 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":85:17)
#loc58 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":85:34)
#loc59 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":86:13)
#loc60 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":87:17)
#loc61 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":89:20)
#loc62 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":89:21)
#loc63 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":89:30)
#loc64 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":89:33)
#loc65 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":89:47)
#loc66 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":89:13)
#loc67 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":89:48)
#loc68 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":90:34)
#loc69 = loc("/usr/include/netinet/in.h":249:5)
#loc70 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":90:13)
#loc71 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":91:39)
#loc72 = loc("/usr/include/netinet/in.h":251:20)
#loc73 = loc("/usr/include/netinet/in.h":33:15)
#loc74 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":91:13)
#loc75 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":91:59)
#loc76 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":92:38)
#loc77 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":92:32)
#loc78 = loc("/usr/include/netinet/in.h":250:15)
#loc79 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":92:13)
#loc80 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":92:46)
#loc81 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":93:13)
#loc82 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":96:13)
#loc83 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":93:25)
#loc84 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":93:58)
#loc85 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":93:59)
#loc86 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":93:68)
#loc87 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":93:82)
#loc88 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":93:17)
#loc89 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":93:88)
#loc90 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":94:13)
#loc91 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":95:17)
#loc92 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":100:31)
#loc93 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":100:53)
#loc94 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":100:54)
#loc95 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":100:46)
#loc96 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":100:60)
#loc97 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":100:71)
#loc98 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":100:74)
#loc99 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":100:26)
#loc100 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":100:13)
#loc101 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":100:75)
#loc102 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":101:13)
#loc103 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":104:13)
#loc104 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":101:17)
#loc105 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":101:31)
#loc106 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":101:44)
#loc107 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":101:47)
#loc108 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":101:61)
#loc109 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":102:13)
#loc110 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":103:17)
#loc111 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":106:16)
#loc112 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":107:9)
#loc113 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":110:9)
#loc114 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":107:13)
#loc115 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":107:30)
#loc116 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":108:9)
#loc117 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":109:26)
#loc118 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":109:13)
#loc119 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":118:67)
#loc120 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":118:68)
#loc121 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":118:5)
#loc122 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":142:1)
#loc123 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":145:1)
#loc124 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":144:5)
#loc125 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":144:13)
#loc126 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":126:1)
#loc127 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":126:90)
#loc128 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":128:1)
#loc129 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":140:1)
#loc130 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":130:5)
#loc131 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":130:15)
#loc132 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":131:5)
#loc133 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":131:38)
#loc134 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":131:25)
#loc135 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":131:26)
#loc136 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":131:32)
#loc137 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":131:33)
#loc138 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":133:27)
#loc139 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":133:5)
#loc140 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":134:27)
#loc141 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":134:5)
#loc142 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":135:5)
#loc143 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":135:23)
#loc144 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":136:5)
#loc145 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":136:23)
#loc146 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":139:71)
#loc147 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":139:72)
#loc148 = loc("CWE123_Write_What_Where_Condition__connect_socket_64a.c":139:5)
#loc149 = loc(fused[#loc1, #loc2])
#loc150 = loc(fused[#loc3, #loc4])
#loc151 = loc(fused[#loc6, #loc7])
#loc152 = loc(fused[#loc8, #loc9])
#loc153 = loc(fused[#loc10, #loc11])
#loc154 = loc(fused[#loc12, #loc13])
#loc155 = loc(fused[#loc14, #loc15])
#loc156 = loc(fused[#loc16, #loc17])
#loc157 = loc(fused[#loc18, #loc19])
#loc158 = loc(fused[#loc20, #loc21])
#loc159 = loc(fused[#loc23, #loc24])
#loc160 = loc(fused[#loc26, #loc27])
#loc161 = loc(fused[#loc30, #loc28])
#loc162 = loc(fused[#loc32, #loc31])
#loc163 = loc(fused[#loc33, #loc34])
#loc164 = loc(fused[#loc35, #loc36])
#loc165 = loc(fused[#loc37, #loc38])
#loc166 = loc(fused[#loc39, #loc40])
#loc167 = loc(fused[#loc41, #loc42])
#loc168 = loc(fused[#loc43, #loc44])
#loc169 = loc(fused[#loc45, #loc46])
#loc170 = loc(fused[#loc47, #loc48])
#loc171 = loc(fused[#loc53, #loc54])
#loc172 = loc(fused[#loc55, #loc56])
#loc173 = loc(fused[#loc57, #loc58])
#loc174 = loc(fused[#loc59, #loc56])
#loc175 = loc(fused[#loc61, #loc62])
#loc176 = loc(fused[#loc64, #loc65])
#loc177 = loc(fused[#loc66, #loc67])
#loc178 = loc(fused[#loc70, #loc68])
#loc179 = loc(fused[#loc74, #loc75])
#loc180 = loc(fused[#loc79, #loc80])
#loc181 = loc(fused[#loc81, #loc82])
#loc182 = loc(fused[#loc84, #loc85])
#loc183 = loc(fused[#loc86, #loc87])
#loc184 = loc(fused[#loc88, #loc89])
#loc185 = loc(fused[#loc90, #loc82])
#loc186 = loc(fused[#loc93, #loc94])
#loc187 = loc(fused[#loc95, #loc94])
#loc188 = loc(fused[#loc96, #loc97])
#loc189 = loc(fused[#loc100, #loc101])
#loc190 = loc(fused[#loc102, #loc103])
#loc191 = loc(fused[#loc104, #loc105])
#loc192 = loc(fused[#loc107, #loc108])
#loc193 = loc(fused[#loc109, #loc103])
#loc194 = loc(fused[#loc112, #loc113])
#loc195 = loc(fused[#loc114, #loc115])
#loc196 = loc(fused[#loc116, #loc113])
#loc197 = loc(fused[#loc119, #loc120])
#loc198 = loc(fused[#loc122, #loc123])
#loc199 = loc(fused[#loc124, #loc125])
#loc200 = loc(fused[#loc126, #loc127])
#loc201 = loc(fused[#loc128, #loc129])
#loc202 = loc(fused[#loc130, #loc131])
#loc203 = loc(fused[#loc132, #loc133])
#loc204 = loc(fused[#loc134, #loc135])
#loc205 = loc(fused[#loc136, #loc137])
#loc206 = loc(fused[#loc139, #loc138])
#loc207 = loc(fused[#loc141, #loc140])
#loc208 = loc(fused[#loc142, #loc143])
#loc209 = loc(fused[#loc144, #loc145])
#loc210 = loc(fused[#loc146, #loc147])
