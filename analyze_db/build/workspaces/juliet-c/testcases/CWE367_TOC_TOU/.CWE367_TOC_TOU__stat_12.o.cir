!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty_timespec = !cir.record<struct "timespec" {!s64i, !s64i} #cir.record.decl.ast>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
!ty_stat = !cir.record<struct "stat" {!u64i, !u64i, !u64i, !u32i, !u32i, !u32i, !s32i, !u64i, !s64i, !s64i, !s64i, !ty_timespec, !ty_timespec, !ty_timespec, !cir.array<!s64i x 3>}>
module @"/workspaces/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__stat_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc310)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc311)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc312)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc313)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc9)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc314)
  cir.func private @stat(!cir.ptr<!s8i>, !cir.ptr<!ty_stat>) -> !s32i extra(#fn_attr) loc(#loc315)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc316)
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc317)
  cir.func private @write(!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc318)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Bad Sink...\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc20)
  cir.func private @close(!s32i) -> !s32i loc(#loc319)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Good Sink...\00" : !cir.array<!s8i x 13>> : !cir.array<!s8i x 13> {alignment = 1 : i64} loc(#loc23)
  cir.func no_proto @CWE367_TOC_TOU__stat_12_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc322)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc322)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc28)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc28)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc325)
          %5 = cir.alloca !ty_stat, !cir.ptr<!ty_stat>, ["statBuffer"] {alignment = 8 : i64} loc(#loc326)
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc327)
          %7 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc325)
          cir.store %7, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc325)
          %8 = cir.const #cir.int<1> : !s32i loc(#loc40)
          %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc41)
          cir.store %9, %6 : !s32i, !cir.ptr<!s32i> loc(#loc327)
          cir.scope {
            %13 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc44)
            %14 = cir.const #cir.int<100> : !s32i loc(#loc45)
            %15 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc312)
            %16 = cir.load %15 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc46)
            %17 = cir.call @fgets(%13, %14, %16) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc47)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc48)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc48)
            %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc329)
            cir.if %20 {
              %21 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc9)
              %22 = cir.cast(array_to_ptrdecay, %21 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%22) : (!cir.ptr<!s8i>) -> () loc(#loc50)
              %23 = cir.const #cir.int<0> : !s32i loc(#loc51)
              %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc51)
              %25 = cir.const #cir.int<0> : !s32i loc(#loc52)
              %26 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc53)
              %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !s32i), !cir.ptr<!s8i> loc(#loc53)
              cir.store %24, %27 : !s8i, !cir.ptr<!s8i> loc(#loc331)
            } loc(#loc330)
          } loc(#loc328)
          cir.scope {
            %13 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc56)
            %14 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc57)
            %15 = cir.call @strlen(%14) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc56)
            %16 = cir.const #cir.int<0> : !s32i loc(#loc58)
            %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc58)
            %18 = cir.cmp(gt, %15, %17) : !u64i, !cir.bool loc(#loc333)
            cir.if %18 {
              %19 = cir.const #cir.int<0> : !s32i loc(#loc60)
              %20 = cir.cast(integral, %19 : !s32i), !s8i loc(#loc60)
              %21 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc61)
              %22 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc62)
              %23 = cir.call @strlen(%22) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc61)
              %24 = cir.const #cir.int<1> : !s32i loc(#loc63)
              %25 = cir.cast(integral, %24 : !s32i), !u64i loc(#loc63)
              %26 = cir.binop(sub, %23, %25) : !u64i loc(#loc335)
              %27 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc64)
              %28 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %26 : !u64i), !cir.ptr<!s8i> loc(#loc64)
              cir.store %20, %28 : !s8i, !cir.ptr<!s8i> loc(#loc336)
            } loc(#loc334)
          } loc(#loc332)
          cir.scope {
            %13 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc67)
            %14 = cir.call @stat(%13, %5) : (!cir.ptr<!s8i>, !cir.ptr<!ty_stat>) -> !s32i extra(#fn_attr) loc(#loc68)
            %15 = cir.const #cir.int<1> : !s32i loc(#loc69)
            %16 = cir.unary(minus, %15) nsw : !s32i, !s32i loc(#loc70)
            %17 = cir.cmp(eq, %14, %16) : !s32i, !cir.bool loc(#loc338)
            cir.if %17 {
              %18 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc72)
              %19 = cir.const #cir.int<1> : !s32i loc(#loc73)
              cir.call @exit(%19) : (!s32i) -> () extra(#fn_attr) loc(#loc72)
            } loc(#loc339)
          } loc(#loc337)
          %10 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc74)
          %11 = cir.const #cir.int<2> : !s32i loc(#loc75)
          %12 = cir.call @open(%10, %11) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc76)
          cir.store %12, %6 : !s32i, !cir.ptr<!s32i> loc(#loc340)
          cir.scope {
            %13 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc81)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc82)
            %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc83)
            %16 = cir.cmp(eq, %13, %15) : !s32i, !cir.bool loc(#loc342)
            cir.if %16 {
              %17 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc85)
              %18 = cir.const #cir.int<1> : !s32i loc(#loc86)
              cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc85)
            } loc(#loc343)
          } loc(#loc341)
          cir.scope {
            %13 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc89)
            %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc20)
            %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc20)
            %16 = cir.cast(bitcast, %15 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc20)
            %17 = cir.const #cir.int<11> : !u64i loc(#loc345)
            %18 = cir.call @write(%13, %16, %17) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc92)
            %19 = cir.const #cir.int<1> : !s32i loc(#loc93)
            %20 = cir.unary(minus, %19) nsw : !s32i, !s32i loc(#loc94)
            %21 = cir.cast(integral, %20 : !s32i), !s64i loc(#loc94)
            %22 = cir.cmp(eq, %18, %21) : !s64i, !cir.bool loc(#loc346)
            cir.if %22 {
              %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc96)
              %24 = cir.const #cir.int<1> : !s32i loc(#loc97)
              cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc96)
            } loc(#loc347)
          } loc(#loc344)
          cir.scope {
            %13 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc100)
            %14 = cir.const #cir.int<1> : !s32i loc(#loc101)
            %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc102)
            %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc349)
            cir.if %16 {
              %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc104)
              %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc105)
            } loc(#loc350)
          } loc(#loc348)
        } loc(#loc324)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc352)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc353)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc352)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc352)
          %7 = cir.const #cir.int<1> : !s32i loc(#loc111)
          %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc112)
          cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc353)
          cir.scope {
            %12 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc115)
            %13 = cir.const #cir.int<100> : !s32i loc(#loc116)
            %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc312)
            %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc117)
            %16 = cir.call @fgets(%12, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc118)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc119)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc119)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc355)
            cir.if %19 {
              %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc121)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc121)
              cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc122)
              %22 = cir.const #cir.int<0> : !s32i loc(#loc123)
              %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc123)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc124)
              %25 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc125)
              %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc125)
              cir.store %23, %26 : !s8i, !cir.ptr<!s8i> loc(#loc357)
            } loc(#loc356)
          } loc(#loc354)
          cir.scope {
            %12 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc128)
            %13 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc129)
            %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc128)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc130)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc130)
            %17 = cir.cmp(gt, %14, %16) : !u64i, !cir.bool loc(#loc359)
            cir.if %17 {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc132)
              %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc132)
              %20 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc133)
              %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc134)
              %22 = cir.call @strlen(%21) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc133)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc135)
              %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc135)
              %25 = cir.binop(sub, %22, %24) : !u64i loc(#loc361)
              %26 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc136)
              %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !u64i), !cir.ptr<!s8i> loc(#loc136)
              cir.store %19, %27 : !s8i, !cir.ptr<!s8i> loc(#loc362)
            } loc(#loc360)
          } loc(#loc358)
          %9 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc137)
          %10 = cir.const #cir.int<2> : !s32i loc(#loc138)
          %11 = cir.call @open(%9, %10) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc139)
          cir.store %11, %5 : !s32i, !cir.ptr<!s32i> loc(#loc363)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc144)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc145)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc146)
            %15 = cir.cmp(eq, %12, %14) : !s32i, !cir.bool loc(#loc365)
            cir.if %15 {
              %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc148)
              %17 = cir.const #cir.int<1> : !s32i loc(#loc149)
              cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc148)
            } loc(#loc366)
          } loc(#loc364)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc152)
            %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc23)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc23)
            %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc23)
            %16 = cir.const #cir.int<12> : !u64i loc(#loc368)
            %17 = cir.call @write(%12, %15, %16) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc155)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc156)
            %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc157)
            %20 = cir.cast(integral, %19 : !s32i), !s64i loc(#loc157)
            %21 = cir.cmp(eq, %17, %20) : !s64i, !cir.bool loc(#loc369)
            cir.if %21 {
              %22 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc159)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc160)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc159)
            } loc(#loc370)
          } loc(#loc367)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc163)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc164)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc165)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc372)
            cir.if %15 {
              %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc167)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc168)
            } loc(#loc373)
          } loc(#loc371)
        } loc(#loc351)
      } loc(#loc323)
    } loc(#loc321)
    cir.return loc(#loc25)
  } loc(#loc320)
  cir.func no_proto @CWE367_TOC_TOU__stat_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc375)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc171)
    cir.return loc(#loc170)
  } loc(#loc374)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc378)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc378)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc177)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc177)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc381)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc382)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc381)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc381)
          %7 = cir.const #cir.int<1> : !s32i loc(#loc187)
          %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc188)
          cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc382)
          cir.scope {
            %12 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc191)
            %13 = cir.const #cir.int<100> : !s32i loc(#loc192)
            %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc312)
            %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc193)
            %16 = cir.call @fgets(%12, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc194)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc195)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc195)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc384)
            cir.if %19 {
              %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc197)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc197)
              cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc198)
              %22 = cir.const #cir.int<0> : !s32i loc(#loc199)
              %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc199)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc200)
              %25 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc201)
              %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc201)
              cir.store %23, %26 : !s8i, !cir.ptr<!s8i> loc(#loc386)
            } loc(#loc385)
          } loc(#loc383)
          cir.scope {
            %12 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc204)
            %13 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc205)
            %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc204)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc206)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc206)
            %17 = cir.cmp(gt, %14, %16) : !u64i, !cir.bool loc(#loc388)
            cir.if %17 {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc208)
              %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc208)
              %20 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc209)
              %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc210)
              %22 = cir.call @strlen(%21) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc209)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc211)
              %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc211)
              %25 = cir.binop(sub, %22, %24) : !u64i loc(#loc390)
              %26 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc212)
              %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !u64i), !cir.ptr<!s8i> loc(#loc212)
              cir.store %19, %27 : !s8i, !cir.ptr<!s8i> loc(#loc391)
            } loc(#loc389)
          } loc(#loc387)
          %9 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc213)
          %10 = cir.const #cir.int<2> : !s32i loc(#loc214)
          %11 = cir.call @open(%9, %10) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc215)
          cir.store %11, %5 : !s32i, !cir.ptr<!s32i> loc(#loc392)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc220)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc221)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc222)
            %15 = cir.cmp(eq, %12, %14) : !s32i, !cir.bool loc(#loc394)
            cir.if %15 {
              %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc224)
              %17 = cir.const #cir.int<1> : !s32i loc(#loc225)
              cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc224)
            } loc(#loc395)
          } loc(#loc393)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc228)
            %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc229)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc229)
            %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc229)
            %16 = cir.const #cir.int<12> : !u64i loc(#loc397)
            %17 = cir.call @write(%12, %15, %16) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc232)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc233)
            %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc234)
            %20 = cir.cast(integral, %19 : !s32i), !s64i loc(#loc234)
            %21 = cir.cmp(eq, %17, %20) : !s64i, !cir.bool loc(#loc398)
            cir.if %21 {
              %22 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc236)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc237)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc236)
            } loc(#loc399)
          } loc(#loc396)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc240)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc241)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc242)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc401)
            cir.if %15 {
              %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc244)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc245)
            } loc(#loc402)
          } loc(#loc400)
        } loc(#loc380)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["filename"] {alignment = 16 : i64} loc(#loc404)
          %5 = cir.alloca !s32i, !cir.ptr<!s32i>, ["fileDesc", init] {alignment = 4 : i64} loc(#loc405)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc404)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc404)
          %7 = cir.const #cir.int<1> : !s32i loc(#loc251)
          %8 = cir.unary(minus, %7) nsw : !s32i, !s32i loc(#loc252)
          cir.store %8, %5 : !s32i, !cir.ptr<!s32i> loc(#loc405)
          cir.scope {
            %12 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc255)
            %13 = cir.const #cir.int<100> : !s32i loc(#loc256)
            %14 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc312)
            %15 = cir.load %14 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc257)
            %16 = cir.call @fgets(%12, %13, %15) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc258)
            %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc259)
            %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc259)
            %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!s8i>, !cir.bool loc(#loc407)
            cir.if %19 {
              %20 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc261)
              %21 = cir.cast(array_to_ptrdecay, %20 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc261)
              cir.call @printLine(%21) : (!cir.ptr<!s8i>) -> () loc(#loc262)
              %22 = cir.const #cir.int<0> : !s32i loc(#loc263)
              %23 = cir.cast(integral, %22 : !s32i), !s8i loc(#loc263)
              %24 = cir.const #cir.int<0> : !s32i loc(#loc264)
              %25 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc265)
              %26 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc265)
              cir.store %23, %26 : !s8i, !cir.ptr<!s8i> loc(#loc409)
            } loc(#loc408)
          } loc(#loc406)
          cir.scope {
            %12 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc268)
            %13 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc269)
            %14 = cir.call @strlen(%13) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc268)
            %15 = cir.const #cir.int<0> : !s32i loc(#loc270)
            %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc270)
            %17 = cir.cmp(gt, %14, %16) : !u64i, !cir.bool loc(#loc411)
            cir.if %17 {
              %18 = cir.const #cir.int<0> : !s32i loc(#loc272)
              %19 = cir.cast(integral, %18 : !s32i), !s8i loc(#loc272)
              %20 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc273)
              %21 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc274)
              %22 = cir.call @strlen(%21) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc273)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc275)
              %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc275)
              %25 = cir.binop(sub, %22, %24) : !u64i loc(#loc413)
              %26 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc276)
              %27 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %25 : !u64i), !cir.ptr<!s8i> loc(#loc276)
              cir.store %19, %27 : !s8i, !cir.ptr<!s8i> loc(#loc414)
            } loc(#loc412)
          } loc(#loc410)
          %9 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc277)
          %10 = cir.const #cir.int<2> : !s32i loc(#loc278)
          %11 = cir.call @open(%9, %10) : (!cir.ptr<!s8i>, !s32i) -> !s32i loc(#loc279)
          cir.store %11, %5 : !s32i, !cir.ptr<!s32i> loc(#loc415)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc284)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc285)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc286)
            %15 = cir.cmp(eq, %12, %14) : !s32i, !cir.bool loc(#loc417)
            cir.if %15 {
              %16 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc288)
              %17 = cir.const #cir.int<1> : !s32i loc(#loc289)
              cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc288)
            } loc(#loc418)
          } loc(#loc416)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc292)
            %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 13>> loc(#loc293)
            %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 13>>), !cir.ptr<!s8i> loc(#loc293)
            %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc293)
            %16 = cir.const #cir.int<12> : !u64i loc(#loc420)
            %17 = cir.call @write(%12, %15, %16) : (!s32i, !cir.ptr<!void>, !u64i) -> !s64i loc(#loc296)
            %18 = cir.const #cir.int<1> : !s32i loc(#loc297)
            %19 = cir.unary(minus, %18) nsw : !s32i, !s32i loc(#loc298)
            %20 = cir.cast(integral, %19 : !s32i), !s64i loc(#loc298)
            %21 = cir.cmp(eq, %17, %20) : !s64i, !cir.bool loc(#loc421)
            cir.if %21 {
              %22 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc300)
              %23 = cir.const #cir.int<1> : !s32i loc(#loc301)
              cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc300)
            } loc(#loc422)
          } loc(#loc419)
          cir.scope {
            %12 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc304)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc305)
            %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc306)
            %15 = cir.cmp(ne, %12, %14) : !s32i, !cir.bool loc(#loc424)
            cir.if %15 {
              %16 = cir.load %5 : !cir.ptr<!s32i>, !s32i loc(#loc308)
              %17 = cir.call @close(%16) : (!s32i) -> !s32i loc(#loc309)
            } loc(#loc425)
          } loc(#loc423)
        } loc(#loc403)
      } loc(#loc379)
    } loc(#loc377)
    cir.return loc(#loc174)
  } loc(#loc376)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE367_TOC_TOU/CWE367_TOC_TOU__stat_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE367_TOC_TOU__stat_12.c":47:27)
#loc10 = loc("/usr/include/string.h":407:1)
#loc11 = loc("/usr/include/string.h":408:33)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/stat.h":205:1)
#loc13 = loc("/usr/include/x86_64-linux-gnu/sys/stat.h":206:43)
#loc14 = loc("/usr/include/stdlib.h":756:1)
#loc15 = loc("/usr/include/stdlib.h":756:70)
#loc16 = loc("/usr/include/fcntl.h":209:1)
#loc17 = loc("/usr/include/fcntl.h":209:56)
#loc18 = loc("/usr/include/unistd.h":378:1)
#loc19 = loc("/usr/include/unistd.h":378:62)
#loc20 = loc("CWE367_TOC_TOU__stat_12.c":65:33)
#loc21 = loc("/usr/include/unistd.h":358:1)
#loc22 = loc("/usr/include/unistd.h":358:27)
#loc23 = loc("CWE367_TOC_TOU__stat_12.c":96:33)
#loc24 = loc("CWE367_TOC_TOU__stat_12.c":37:1)
#loc25 = loc("CWE367_TOC_TOU__stat_12.c":106:1)
#loc26 = loc("CWE367_TOC_TOU__stat_12.c":39:5)
#loc27 = loc("CWE367_TOC_TOU__stat_12.c":105:5)
#loc28 = loc("CWE367_TOC_TOU__stat_12.c":39:8)
#loc29 = loc("CWE367_TOC_TOU__stat_12.c":39:33)
#loc30 = loc("CWE367_TOC_TOU__stat_12.c":40:5)
#loc31 = loc("CWE367_TOC_TOU__stat_12.c":74:5)
#loc32 = loc("CWE367_TOC_TOU__stat_12.c":76:5)
#loc33 = loc("CWE367_TOC_TOU__stat_12.c":41:9)
#loc34 = loc("CWE367_TOC_TOU__stat_12.c":73:9)
#loc35 = loc("CWE367_TOC_TOU__stat_12.c":42:13)
#loc36 = loc("CWE367_TOC_TOU__stat_12.c":42:34)
#loc37 = loc("CWE367_TOC_TOU__stat_12.c":43:13)
#loc38 = loc("CWE367_TOC_TOU__stat_12.c":43:25)
#loc39 = loc("CWE367_TOC_TOU__stat_12.c":44:13)
#loc40 = loc("CWE367_TOC_TOU__stat_12.c":44:29)
#loc41 = loc("CWE367_TOC_TOU__stat_12.c":44:28)
#loc42 = loc("CWE367_TOC_TOU__stat_12.c":45:13)
#loc43 = loc("CWE367_TOC_TOU__stat_12.c":50:13)
#loc44 = loc("CWE367_TOC_TOU__stat_12.c":45:23)
#loc45 = loc("CWE367_TOC_TOU__stat_12.c":45:33)
#loc46 = loc("CWE367_TOC_TOU__stat_12.c":45:38)
#loc47 = loc("CWE367_TOC_TOU__stat_12.c":45:17)
#loc48 = loc("CWE367_TOC_TOU__stat_12.c":45:48)
#loc49 = loc("CWE367_TOC_TOU__stat_12.c":46:13)
#loc50 = loc("CWE367_TOC_TOU__stat_12.c":47:17)
#loc51 = loc("CWE367_TOC_TOU__stat_12.c":49:31)
#loc52 = loc("CWE367_TOC_TOU__stat_12.c":49:26)
#loc53 = loc("CWE367_TOC_TOU__stat_12.c":49:17)
#loc54 = loc("CWE367_TOC_TOU__stat_12.c":51:13)
#loc55 = loc("CWE367_TOC_TOU__stat_12.c":54:13)
#loc56 = loc("CWE367_TOC_TOU__stat_12.c":51:17)
#loc57 = loc("CWE367_TOC_TOU__stat_12.c":51:24)
#loc58 = loc("CWE367_TOC_TOU__stat_12.c":51:36)
#loc59 = loc("CWE367_TOC_TOU__stat_12.c":52:13)
#loc60 = loc("CWE367_TOC_TOU__stat_12.c":53:48)
#loc61 = loc("CWE367_TOC_TOU__stat_12.c":53:26)
#loc62 = loc("CWE367_TOC_TOU__stat_12.c":53:33)
#loc63 = loc("CWE367_TOC_TOU__stat_12.c":53:43)
#loc64 = loc("CWE367_TOC_TOU__stat_12.c":53:17)
#loc65 = loc("CWE367_TOC_TOU__stat_12.c":56:13)
#loc66 = loc("CWE367_TOC_TOU__stat_12.c":59:13)
#loc67 = loc("CWE367_TOC_TOU__stat_12.c":56:22)
#loc68 = loc("CWE367_TOC_TOU__stat_12.c":56:17)
#loc69 = loc("CWE367_TOC_TOU__stat_12.c":56:49)
#loc70 = loc("CWE367_TOC_TOU__stat_12.c":56:48)
#loc71 = loc("CWE367_TOC_TOU__stat_12.c":57:13)
#loc72 = loc("CWE367_TOC_TOU__stat_12.c":58:17)
#loc73 = loc("CWE367_TOC_TOU__stat_12.c":58:22)
#loc74 = loc("CWE367_TOC_TOU__stat_12.c":60:30)
#loc75 = loc("CWE367_TOC_TOU__stat_12.c":60:40)
#loc76 = loc("CWE367_TOC_TOU__stat_12.c":60:25)
#loc77 = loc("CWE367_TOC_TOU__stat_12.c":60:13)
#loc78 = loc("CWE367_TOC_TOU__stat_12.c":60:46)
#loc79 = loc("CWE367_TOC_TOU__stat_12.c":61:13)
#loc80 = loc("CWE367_TOC_TOU__stat_12.c":64:13)
#loc81 = loc("CWE367_TOC_TOU__stat_12.c":61:17)
#loc82 = loc("CWE367_TOC_TOU__stat_12.c":61:30)
#loc83 = loc("CWE367_TOC_TOU__stat_12.c":61:29)
#loc84 = loc("CWE367_TOC_TOU__stat_12.c":62:13)
#loc85 = loc("CWE367_TOC_TOU__stat_12.c":63:17)
#loc86 = loc("CWE367_TOC_TOU__stat_12.c":63:22)
#loc87 = loc("CWE367_TOC_TOU__stat_12.c":65:13)
#loc88 = loc("CWE367_TOC_TOU__stat_12.c":68:13)
#loc89 = loc("CWE367_TOC_TOU__stat_12.c":65:23)
#loc90 = loc("CWE367_TOC_TOU__stat_12.c":65:50)
#loc91 = loc("CWE367_TOC_TOU__stat_12.c":65:72)
#loc92 = loc("CWE367_TOC_TOU__stat_12.c":65:17)
#loc93 = loc("CWE367_TOC_TOU__stat_12.c":65:79)
#loc94 = loc("CWE367_TOC_TOU__stat_12.c":65:78)
#loc95 = loc("CWE367_TOC_TOU__stat_12.c":66:13)
#loc96 = loc("CWE367_TOC_TOU__stat_12.c":67:17)
#loc97 = loc("CWE367_TOC_TOU__stat_12.c":67:22)
#loc98 = loc("CWE367_TOC_TOU__stat_12.c":69:13)
#loc99 = loc("CWE367_TOC_TOU__stat_12.c":72:13)
#loc100 = loc("CWE367_TOC_TOU__stat_12.c":69:17)
#loc101 = loc("CWE367_TOC_TOU__stat_12.c":69:30)
#loc102 = loc("CWE367_TOC_TOU__stat_12.c":69:29)
#loc103 = loc("CWE367_TOC_TOU__stat_12.c":70:13)
#loc104 = loc("CWE367_TOC_TOU__stat_12.c":71:23)
#loc105 = loc("CWE367_TOC_TOU__stat_12.c":71:17)
#loc106 = loc("CWE367_TOC_TOU__stat_12.c":77:9)
#loc107 = loc("CWE367_TOC_TOU__stat_12.c":104:9)
#loc108 = loc("CWE367_TOC_TOU__stat_12.c":78:13)
#loc109 = loc("CWE367_TOC_TOU__stat_12.c":78:34)
#loc110 = loc("CWE367_TOC_TOU__stat_12.c":79:13)
#loc111 = loc("CWE367_TOC_TOU__stat_12.c":79:29)
#loc112 = loc("CWE367_TOC_TOU__stat_12.c":79:28)
#loc113 = loc("CWE367_TOC_TOU__stat_12.c":80:13)
#loc114 = loc("CWE367_TOC_TOU__stat_12.c":85:13)
#loc115 = loc("CWE367_TOC_TOU__stat_12.c":80:23)
#loc116 = loc("CWE367_TOC_TOU__stat_12.c":80:33)
#loc117 = loc("CWE367_TOC_TOU__stat_12.c":80:38)
#loc118 = loc("CWE367_TOC_TOU__stat_12.c":80:17)
#loc119 = loc("CWE367_TOC_TOU__stat_12.c":80:48)
#loc120 = loc("CWE367_TOC_TOU__stat_12.c":81:13)
#loc121 = loc("CWE367_TOC_TOU__stat_12.c":82:27)
#loc122 = loc("CWE367_TOC_TOU__stat_12.c":82:17)
#loc123 = loc("CWE367_TOC_TOU__stat_12.c":84:31)
#loc124 = loc("CWE367_TOC_TOU__stat_12.c":84:26)
#loc125 = loc("CWE367_TOC_TOU__stat_12.c":84:17)
#loc126 = loc("CWE367_TOC_TOU__stat_12.c":86:13)
#loc127 = loc("CWE367_TOC_TOU__stat_12.c":89:13)
#loc128 = loc("CWE367_TOC_TOU__stat_12.c":86:17)
#loc129 = loc("CWE367_TOC_TOU__stat_12.c":86:24)
#loc130 = loc("CWE367_TOC_TOU__stat_12.c":86:36)
#loc131 = loc("CWE367_TOC_TOU__stat_12.c":87:13)
#loc132 = loc("CWE367_TOC_TOU__stat_12.c":88:48)
#loc133 = loc("CWE367_TOC_TOU__stat_12.c":88:26)
#loc134 = loc("CWE367_TOC_TOU__stat_12.c":88:33)
#loc135 = loc("CWE367_TOC_TOU__stat_12.c":88:43)
#loc136 = loc("CWE367_TOC_TOU__stat_12.c":88:17)
#loc137 = loc("CWE367_TOC_TOU__stat_12.c":91:30)
#loc138 = loc("CWE367_TOC_TOU__stat_12.c":91:40)
#loc139 = loc("CWE367_TOC_TOU__stat_12.c":91:25)
#loc140 = loc("CWE367_TOC_TOU__stat_12.c":91:13)
#loc141 = loc("CWE367_TOC_TOU__stat_12.c":91:46)
#loc142 = loc("CWE367_TOC_TOU__stat_12.c":92:13)
#loc143 = loc("CWE367_TOC_TOU__stat_12.c":95:13)
#loc144 = loc("CWE367_TOC_TOU__stat_12.c":92:17)
#loc145 = loc("CWE367_TOC_TOU__stat_12.c":92:30)
#loc146 = loc("CWE367_TOC_TOU__stat_12.c":92:29)
#loc147 = loc("CWE367_TOC_TOU__stat_12.c":93:13)
#loc148 = loc("CWE367_TOC_TOU__stat_12.c":94:17)
#loc149 = loc("CWE367_TOC_TOU__stat_12.c":94:22)
#loc150 = loc("CWE367_TOC_TOU__stat_12.c":96:13)
#loc151 = loc("CWE367_TOC_TOU__stat_12.c":99:13)
#loc152 = loc("CWE367_TOC_TOU__stat_12.c":96:23)
#loc153 = loc("CWE367_TOC_TOU__stat_12.c":96:51)
#loc154 = loc("CWE367_TOC_TOU__stat_12.c":96:74)
#loc155 = loc("CWE367_TOC_TOU__stat_12.c":96:17)
#loc156 = loc("CWE367_TOC_TOU__stat_12.c":96:81)
#loc157 = loc("CWE367_TOC_TOU__stat_12.c":96:80)
#loc158 = loc("CWE367_TOC_TOU__stat_12.c":97:13)
#loc159 = loc("CWE367_TOC_TOU__stat_12.c":98:17)
#loc160 = loc("CWE367_TOC_TOU__stat_12.c":98:22)
#loc161 = loc("CWE367_TOC_TOU__stat_12.c":100:13)
#loc162 = loc("CWE367_TOC_TOU__stat_12.c":103:13)
#loc163 = loc("CWE367_TOC_TOU__stat_12.c":100:17)
#loc164 = loc("CWE367_TOC_TOU__stat_12.c":100:30)
#loc165 = loc("CWE367_TOC_TOU__stat_12.c":100:29)
#loc166 = loc("CWE367_TOC_TOU__stat_12.c":101:13)
#loc167 = loc("CWE367_TOC_TOU__stat_12.c":102:23)
#loc168 = loc("CWE367_TOC_TOU__stat_12.c":102:17)
#loc169 = loc("CWE367_TOC_TOU__stat_12.c":179:1)
#loc170 = loc("CWE367_TOC_TOU__stat_12.c":182:1)
#loc171 = loc("CWE367_TOC_TOU__stat_12.c":181:5)
#loc172 = loc("CWE367_TOC_TOU__stat_12.c":181:11)
#loc173 = loc("CWE367_TOC_TOU__stat_12.c":113:1)
#loc174 = loc("CWE367_TOC_TOU__stat_12.c":177:1)
#loc175 = loc("CWE367_TOC_TOU__stat_12.c":115:5)
#loc176 = loc("CWE367_TOC_TOU__stat_12.c":176:5)
#loc177 = loc("CWE367_TOC_TOU__stat_12.c":115:8)
#loc178 = loc("CWE367_TOC_TOU__stat_12.c":115:33)
#loc179 = loc("CWE367_TOC_TOU__stat_12.c":116:5)
#loc180 = loc("CWE367_TOC_TOU__stat_12.c":145:5)
#loc181 = loc("CWE367_TOC_TOU__stat_12.c":147:5)
#loc182 = loc("CWE367_TOC_TOU__stat_12.c":117:9)
#loc183 = loc("CWE367_TOC_TOU__stat_12.c":144:9)
#loc184 = loc("CWE367_TOC_TOU__stat_12.c":118:13)
#loc185 = loc("CWE367_TOC_TOU__stat_12.c":118:34)
#loc186 = loc("CWE367_TOC_TOU__stat_12.c":119:13)
#loc187 = loc("CWE367_TOC_TOU__stat_12.c":119:29)
#loc188 = loc("CWE367_TOC_TOU__stat_12.c":119:28)
#loc189 = loc("CWE367_TOC_TOU__stat_12.c":120:13)
#loc190 = loc("CWE367_TOC_TOU__stat_12.c":125:13)
#loc191 = loc("CWE367_TOC_TOU__stat_12.c":120:23)
#loc192 = loc("CWE367_TOC_TOU__stat_12.c":120:33)
#loc193 = loc("CWE367_TOC_TOU__stat_12.c":120:38)
#loc194 = loc("CWE367_TOC_TOU__stat_12.c":120:17)
#loc195 = loc("CWE367_TOC_TOU__stat_12.c":120:48)
#loc196 = loc("CWE367_TOC_TOU__stat_12.c":121:13)
#loc197 = loc("CWE367_TOC_TOU__stat_12.c":122:27)
#loc198 = loc("CWE367_TOC_TOU__stat_12.c":122:17)
#loc199 = loc("CWE367_TOC_TOU__stat_12.c":124:31)
#loc200 = loc("CWE367_TOC_TOU__stat_12.c":124:26)
#loc201 = loc("CWE367_TOC_TOU__stat_12.c":124:17)
#loc202 = loc("CWE367_TOC_TOU__stat_12.c":126:13)
#loc203 = loc("CWE367_TOC_TOU__stat_12.c":129:13)
#loc204 = loc("CWE367_TOC_TOU__stat_12.c":126:17)
#loc205 = loc("CWE367_TOC_TOU__stat_12.c":126:24)
#loc206 = loc("CWE367_TOC_TOU__stat_12.c":126:36)
#loc207 = loc("CWE367_TOC_TOU__stat_12.c":127:13)
#loc208 = loc("CWE367_TOC_TOU__stat_12.c":128:48)
#loc209 = loc("CWE367_TOC_TOU__stat_12.c":128:26)
#loc210 = loc("CWE367_TOC_TOU__stat_12.c":128:33)
#loc211 = loc("CWE367_TOC_TOU__stat_12.c":128:43)
#loc212 = loc("CWE367_TOC_TOU__stat_12.c":128:17)
#loc213 = loc("CWE367_TOC_TOU__stat_12.c":131:30)
#loc214 = loc("CWE367_TOC_TOU__stat_12.c":131:40)
#loc215 = loc("CWE367_TOC_TOU__stat_12.c":131:25)
#loc216 = loc("CWE367_TOC_TOU__stat_12.c":131:13)
#loc217 = loc("CWE367_TOC_TOU__stat_12.c":131:46)
#loc218 = loc("CWE367_TOC_TOU__stat_12.c":132:13)
#loc219 = loc("CWE367_TOC_TOU__stat_12.c":135:13)
#loc220 = loc("CWE367_TOC_TOU__stat_12.c":132:17)
#loc221 = loc("CWE367_TOC_TOU__stat_12.c":132:30)
#loc222 = loc("CWE367_TOC_TOU__stat_12.c":132:29)
#loc223 = loc("CWE367_TOC_TOU__stat_12.c":133:13)
#loc224 = loc("CWE367_TOC_TOU__stat_12.c":134:17)
#loc225 = loc("CWE367_TOC_TOU__stat_12.c":134:22)
#loc226 = loc("CWE367_TOC_TOU__stat_12.c":136:13)
#loc227 = loc("CWE367_TOC_TOU__stat_12.c":139:13)
#loc228 = loc("CWE367_TOC_TOU__stat_12.c":136:23)
#loc229 = loc("CWE367_TOC_TOU__stat_12.c":136:33)
#loc230 = loc("CWE367_TOC_TOU__stat_12.c":136:51)
#loc231 = loc("CWE367_TOC_TOU__stat_12.c":136:74)
#loc232 = loc("CWE367_TOC_TOU__stat_12.c":136:17)
#loc233 = loc("CWE367_TOC_TOU__stat_12.c":136:81)
#loc234 = loc("CWE367_TOC_TOU__stat_12.c":136:80)
#loc235 = loc("CWE367_TOC_TOU__stat_12.c":137:13)
#loc236 = loc("CWE367_TOC_TOU__stat_12.c":138:17)
#loc237 = loc("CWE367_TOC_TOU__stat_12.c":138:22)
#loc238 = loc("CWE367_TOC_TOU__stat_12.c":140:13)
#loc239 = loc("CWE367_TOC_TOU__stat_12.c":143:13)
#loc240 = loc("CWE367_TOC_TOU__stat_12.c":140:17)
#loc241 = loc("CWE367_TOC_TOU__stat_12.c":140:30)
#loc242 = loc("CWE367_TOC_TOU__stat_12.c":140:29)
#loc243 = loc("CWE367_TOC_TOU__stat_12.c":141:13)
#loc244 = loc("CWE367_TOC_TOU__stat_12.c":142:23)
#loc245 = loc("CWE367_TOC_TOU__stat_12.c":142:17)
#loc246 = loc("CWE367_TOC_TOU__stat_12.c":148:9)
#loc247 = loc("CWE367_TOC_TOU__stat_12.c":175:9)
#loc248 = loc("CWE367_TOC_TOU__stat_12.c":149:13)
#loc249 = loc("CWE367_TOC_TOU__stat_12.c":149:34)
#loc250 = loc("CWE367_TOC_TOU__stat_12.c":150:13)
#loc251 = loc("CWE367_TOC_TOU__stat_12.c":150:29)
#loc252 = loc("CWE367_TOC_TOU__stat_12.c":150:28)
#loc253 = loc("CWE367_TOC_TOU__stat_12.c":151:13)
#loc254 = loc("CWE367_TOC_TOU__stat_12.c":156:13)
#loc255 = loc("CWE367_TOC_TOU__stat_12.c":151:23)
#loc256 = loc("CWE367_TOC_TOU__stat_12.c":151:33)
#loc257 = loc("CWE367_TOC_TOU__stat_12.c":151:38)
#loc258 = loc("CWE367_TOC_TOU__stat_12.c":151:17)
#loc259 = loc("CWE367_TOC_TOU__stat_12.c":151:48)
#loc260 = loc("CWE367_TOC_TOU__stat_12.c":152:13)
#loc261 = loc("CWE367_TOC_TOU__stat_12.c":153:27)
#loc262 = loc("CWE367_TOC_TOU__stat_12.c":153:17)
#loc263 = loc("CWE367_TOC_TOU__stat_12.c":155:31)
#loc264 = loc("CWE367_TOC_TOU__stat_12.c":155:26)
#loc265 = loc("CWE367_TOC_TOU__stat_12.c":155:17)
#loc266 = loc("CWE367_TOC_TOU__stat_12.c":157:13)
#loc267 = loc("CWE367_TOC_TOU__stat_12.c":160:13)
#loc268 = loc("CWE367_TOC_TOU__stat_12.c":157:17)
#loc269 = loc("CWE367_TOC_TOU__stat_12.c":157:24)
#loc270 = loc("CWE367_TOC_TOU__stat_12.c":157:36)
#loc271 = loc("CWE367_TOC_TOU__stat_12.c":158:13)
#loc272 = loc("CWE367_TOC_TOU__stat_12.c":159:48)
#loc273 = loc("CWE367_TOC_TOU__stat_12.c":159:26)
#loc274 = loc("CWE367_TOC_TOU__stat_12.c":159:33)
#loc275 = loc("CWE367_TOC_TOU__stat_12.c":159:43)
#loc276 = loc("CWE367_TOC_TOU__stat_12.c":159:17)
#loc277 = loc("CWE367_TOC_TOU__stat_12.c":162:30)
#loc278 = loc("CWE367_TOC_TOU__stat_12.c":162:40)
#loc279 = loc("CWE367_TOC_TOU__stat_12.c":162:25)
#loc280 = loc("CWE367_TOC_TOU__stat_12.c":162:13)
#loc281 = loc("CWE367_TOC_TOU__stat_12.c":162:46)
#loc282 = loc("CWE367_TOC_TOU__stat_12.c":163:13)
#loc283 = loc("CWE367_TOC_TOU__stat_12.c":166:13)
#loc284 = loc("CWE367_TOC_TOU__stat_12.c":163:17)
#loc285 = loc("CWE367_TOC_TOU__stat_12.c":163:30)
#loc286 = loc("CWE367_TOC_TOU__stat_12.c":163:29)
#loc287 = loc("CWE367_TOC_TOU__stat_12.c":164:13)
#loc288 = loc("CWE367_TOC_TOU__stat_12.c":165:17)
#loc289 = loc("CWE367_TOC_TOU__stat_12.c":165:22)
#loc290 = loc("CWE367_TOC_TOU__stat_12.c":167:13)
#loc291 = loc("CWE367_TOC_TOU__stat_12.c":170:13)
#loc292 = loc("CWE367_TOC_TOU__stat_12.c":167:23)
#loc293 = loc("CWE367_TOC_TOU__stat_12.c":167:33)
#loc294 = loc("CWE367_TOC_TOU__stat_12.c":167:51)
#loc295 = loc("CWE367_TOC_TOU__stat_12.c":167:74)
#loc296 = loc("CWE367_TOC_TOU__stat_12.c":167:17)
#loc297 = loc("CWE367_TOC_TOU__stat_12.c":167:81)
#loc298 = loc("CWE367_TOC_TOU__stat_12.c":167:80)
#loc299 = loc("CWE367_TOC_TOU__stat_12.c":168:13)
#loc300 = loc("CWE367_TOC_TOU__stat_12.c":169:17)
#loc301 = loc("CWE367_TOC_TOU__stat_12.c":169:22)
#loc302 = loc("CWE367_TOC_TOU__stat_12.c":171:13)
#loc303 = loc("CWE367_TOC_TOU__stat_12.c":174:13)
#loc304 = loc("CWE367_TOC_TOU__stat_12.c":171:17)
#loc305 = loc("CWE367_TOC_TOU__stat_12.c":171:30)
#loc306 = loc("CWE367_TOC_TOU__stat_12.c":171:29)
#loc307 = loc("CWE367_TOC_TOU__stat_12.c":172:13)
#loc308 = loc("CWE367_TOC_TOU__stat_12.c":173:23)
#loc309 = loc("CWE367_TOC_TOU__stat_12.c":173:17)
#loc310 = loc(fused[#loc1, #loc2])
#loc311 = loc(fused[#loc3, #loc4])
#loc312 = loc(fused[#loc5, #loc6])
#loc313 = loc(fused[#loc7, #loc8])
#loc314 = loc(fused[#loc10, #loc11])
#loc315 = loc(fused[#loc12, #loc13])
#loc316 = loc(fused[#loc14, #loc15])
#loc317 = loc(fused[#loc16, #loc17])
#loc318 = loc(fused[#loc18, #loc19])
#loc319 = loc(fused[#loc21, #loc22])
#loc320 = loc(fused[#loc24, #loc25])
#loc321 = loc(fused[#loc26, #loc27])
#loc322 = loc(fused[#loc28, #loc29])
#loc323 = loc(fused[#loc30, #loc31, #loc32, #loc27])
#loc324 = loc(fused[#loc33, #loc34])
#loc325 = loc(fused[#loc35, #loc36])
#loc326 = loc(fused[#loc37, #loc38])
#loc327 = loc(fused[#loc39, #loc40])
#loc328 = loc(fused[#loc42, #loc43])
#loc329 = loc(fused[#loc47, #loc48])
#loc330 = loc(fused[#loc49, #loc43])
#loc331 = loc(fused[#loc53, #loc51])
#loc332 = loc(fused[#loc54, #loc55])
#loc333 = loc(fused[#loc56, #loc58])
#loc334 = loc(fused[#loc59, #loc55])
#loc335 = loc(fused[#loc61, #loc63])
#loc336 = loc(fused[#loc64, #loc60])
#loc337 = loc(fused[#loc65, #loc66])
#loc338 = loc(fused[#loc68, #loc69])
#loc339 = loc(fused[#loc71, #loc66])
#loc340 = loc(fused[#loc77, #loc78])
#loc341 = loc(fused[#loc79, #loc80])
#loc342 = loc(fused[#loc81, #loc82])
#loc343 = loc(fused[#loc84, #loc80])
#loc344 = loc(fused[#loc87, #loc88])
#loc345 = loc(fused[#loc90, #loc91])
#loc346 = loc(fused[#loc92, #loc93])
#loc347 = loc(fused[#loc95, #loc88])
#loc348 = loc(fused[#loc98, #loc99])
#loc349 = loc(fused[#loc100, #loc101])
#loc350 = loc(fused[#loc103, #loc99])
#loc351 = loc(fused[#loc106, #loc107])
#loc352 = loc(fused[#loc108, #loc109])
#loc353 = loc(fused[#loc110, #loc111])
#loc354 = loc(fused[#loc113, #loc114])
#loc355 = loc(fused[#loc118, #loc119])
#loc356 = loc(fused[#loc120, #loc114])
#loc357 = loc(fused[#loc125, #loc123])
#loc358 = loc(fused[#loc126, #loc127])
#loc359 = loc(fused[#loc128, #loc130])
#loc360 = loc(fused[#loc131, #loc127])
#loc361 = loc(fused[#loc133, #loc135])
#loc362 = loc(fused[#loc136, #loc132])
#loc363 = loc(fused[#loc140, #loc141])
#loc364 = loc(fused[#loc142, #loc143])
#loc365 = loc(fused[#loc144, #loc145])
#loc366 = loc(fused[#loc147, #loc143])
#loc367 = loc(fused[#loc150, #loc151])
#loc368 = loc(fused[#loc153, #loc154])
#loc369 = loc(fused[#loc155, #loc156])
#loc370 = loc(fused[#loc158, #loc151])
#loc371 = loc(fused[#loc161, #loc162])
#loc372 = loc(fused[#loc163, #loc164])
#loc373 = loc(fused[#loc166, #loc162])
#loc374 = loc(fused[#loc169, #loc170])
#loc375 = loc(fused[#loc171, #loc172])
#loc376 = loc(fused[#loc173, #loc174])
#loc377 = loc(fused[#loc175, #loc176])
#loc378 = loc(fused[#loc177, #loc178])
#loc379 = loc(fused[#loc179, #loc180, #loc181, #loc176])
#loc380 = loc(fused[#loc182, #loc183])
#loc381 = loc(fused[#loc184, #loc185])
#loc382 = loc(fused[#loc186, #loc187])
#loc383 = loc(fused[#loc189, #loc190])
#loc384 = loc(fused[#loc194, #loc195])
#loc385 = loc(fused[#loc196, #loc190])
#loc386 = loc(fused[#loc201, #loc199])
#loc387 = loc(fused[#loc202, #loc203])
#loc388 = loc(fused[#loc204, #loc206])
#loc389 = loc(fused[#loc207, #loc203])
#loc390 = loc(fused[#loc209, #loc211])
#loc391 = loc(fused[#loc212, #loc208])
#loc392 = loc(fused[#loc216, #loc217])
#loc393 = loc(fused[#loc218, #loc219])
#loc394 = loc(fused[#loc220, #loc221])
#loc395 = loc(fused[#loc223, #loc219])
#loc396 = loc(fused[#loc226, #loc227])
#loc397 = loc(fused[#loc230, #loc231])
#loc398 = loc(fused[#loc232, #loc233])
#loc399 = loc(fused[#loc235, #loc227])
#loc400 = loc(fused[#loc238, #loc239])
#loc401 = loc(fused[#loc240, #loc241])
#loc402 = loc(fused[#loc243, #loc239])
#loc403 = loc(fused[#loc246, #loc247])
#loc404 = loc(fused[#loc248, #loc249])
#loc405 = loc(fused[#loc250, #loc251])
#loc406 = loc(fused[#loc253, #loc254])
#loc407 = loc(fused[#loc258, #loc259])
#loc408 = loc(fused[#loc260, #loc254])
#loc409 = loc(fused[#loc265, #loc263])
#loc410 = loc(fused[#loc266, #loc267])
#loc411 = loc(fused[#loc268, #loc270])
#loc412 = loc(fused[#loc271, #loc267])
#loc413 = loc(fused[#loc273, #loc275])
#loc414 = loc(fused[#loc276, #loc272])
#loc415 = loc(fused[#loc280, #loc281])
#loc416 = loc(fused[#loc282, #loc283])
#loc417 = loc(fused[#loc284, #loc285])
#loc418 = loc(fused[#loc287, #loc283])
#loc419 = loc(fused[#loc290, #loc291])
#loc420 = loc(fused[#loc294, #loc295])
#loc421 = loc(fused[#loc296, #loc297])
#loc422 = loc(fused[#loc299, #loc291])
#loc423 = loc(fused[#loc302, #loc303])
#loc424 = loc(fused[#loc304, #loc305])
#loc425 = loc(fused[#loc307, #loc303])
