!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc207)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc208)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc209)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc210)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc211)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc212)
  cir.func private @printIntLine(!s32i) loc(#loc213)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc214)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc216)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc23)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc217)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc27)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc28)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc219)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc222)
          %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc222)
          cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc222)
          cir.scope {
            %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc36)
            %9 = cir.const #cir.int<3> : !s32i loc(#loc37)
            %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc37)
            %11 = cir.const #cir.int<4> : !u64i loc(#loc37)
            %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc37)
            %13 = cir.const #cir.int<2> : !s32i loc(#loc37)
            %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc37)
            %15 = cir.binop(add, %12, %14) : !u64i loc(#loc37)
            %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc37)
            %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc208)
            %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc38)
            %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc39)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc40)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc40)
            %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc224)
            cir.if %22 {
              %23 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc44)
              %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc45)
              cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc226)
            } else {
              %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
              %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc48)
            } loc(#loc225)
          } loc(#loc223)
        } loc(#loc221)
      } loc(#loc220)
    } loc(#loc218)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc228)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc229)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc55)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc56)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc56)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc230)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc231)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc55)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc232)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc233)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc63)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc64)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc64)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc235)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc66)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc67)
          %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc68)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc66)
        } loc(#loc236)
      } loc(#loc234)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc71)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc71)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc238)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc73)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc74)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc74)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc239)
          cir.condition(%24) loc(#loc75)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc77)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc78)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc79)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc80)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc241)
          } loc(#loc240)
          cir.yield loc(#loc70)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc81)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc82)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc242)
          cir.yield loc(#loc237)
        } loc(#loc237)
      } loc(#loc237)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc83)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc84)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc85)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc83)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc86)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc87)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc88)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc88)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc87)
    } loc(#loc227)
    cir.return loc(#loc19)
  } loc(#loc215)
  cir.func no_proto @CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc244)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc91)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc245)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc93)
    cir.return loc(#loc90)
  } loc(#loc243)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc95)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc247)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc101)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc248)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc105)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc106)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc250)
      cir.if %5 {
        %6 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc95)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc95)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc110)
      } else {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc111)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc252)
      } loc(#loc251)
    } loc(#loc249)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc254)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc255)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc119)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc120)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc120)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc256)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc257)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc119)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc258)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc259)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc127)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc128)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc128)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc261)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc130)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc131)
          %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc132)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc130)
        } loc(#loc262)
      } loc(#loc260)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc135)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc135)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc264)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc137)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc138)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc138)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc265)
          cir.condition(%24) loc(#loc139)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc141)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc142)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc143)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc144)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc267)
          } loc(#loc266)
          cir.yield loc(#loc134)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc145)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc146)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc268)
          cir.yield loc(#loc263)
        } loc(#loc263)
      } loc(#loc263)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc147)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc148)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc149)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc147)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc150)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc151)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc152)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc152)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc151)
    } loc(#loc253)
    cir.return loc(#loc97)
  } loc(#loc246)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc270)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc157)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc158)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc271)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc162)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc163)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc273)
      cir.if %5 {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc165)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc275)
      } loc(#loc274)
    } loc(#loc272)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc277)
      %4 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc278)
      %5 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc173)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc174)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc174)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc279)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc280)
      %10 = cir.call @malloc(%9) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc173)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc281)
      cir.store %11, %4 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc282)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc181)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc182)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc182)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc284)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc184)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc185)
          %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc186)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc184)
        } loc(#loc285)
      } loc(#loc283)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc189)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc189)
        cir.store %20, %3 : !u64i, !cir.ptr<!u64i> loc(#loc287)
        cir.for : cond {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc191)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc192)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc192)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc288)
          cir.condition(%24) loc(#loc193)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc195)
            %22 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc196)
            %23 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc197)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc198)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc290)
          } loc(#loc289)
          cir.yield loc(#loc188)
        } step {
          %21 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc199)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc200)
          cir.store %22, %3 : !u64i, !cir.ptr<!u64i> loc(#loc291)
          cir.yield loc(#loc286)
        } loc(#loc286)
      } loc(#loc286)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc201)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc202)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc203)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc201)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc204)
      %16 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc205)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc206)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc206)
      cir.call @free(%18) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc205)
    } loc(#loc276)
    cir.return loc(#loc154)
  } loc(#loc269)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":40:27)
#loc10 = loc("/usr/include/stdlib.h":672:1)
#loc11 = loc("/usr/include/stdlib.h":672:45)
#loc12 = loc("/usr/include/stdlib.h":756:1)
#loc13 = loc("/usr/include/stdlib.h":756:70)
#loc14 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc15 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc16 = loc("/usr/include/stdlib.h":687:1)
#loc17 = loc("/usr/include/stdlib.h":687:32)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":23:1)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":58:1)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":25:5)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":25:9)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":27:13)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":27:12)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":27:5)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":28:5)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":43:5)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":28:8)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":28:11)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":29:5)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":30:9)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":42:9)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":31:13)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":31:49)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":33:13)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":41:13)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":33:23)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":33:36)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":33:53)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":33:17)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":33:63)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":34:13)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":37:13)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":39:13)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":36:29)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":36:24)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":36:17)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":36:40)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":40:17)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":44:5)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":57:5)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":45:9)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":45:16)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":46:9)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":46:14)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":49:28)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":49:35)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":49:42)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":49:52)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":49:53)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":49:9)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":50:9)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":50:43)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":50:13)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":50:27)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":50:33)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":50:34)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":50:40)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":50:39)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":51:9)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":54:9)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":51:18)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":51:14)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":51:21)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":51:33)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":51:23)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":52:9)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":53:29)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":53:13)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":53:24)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":53:25)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":51:40)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":51:39)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":55:22)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":55:33)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":55:34)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":55:9)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":56:9)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":56:14)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":123:1)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":127:1)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":125:5)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":125:14)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":126:5)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":126:14)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":73:19)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":65:1)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":94:1)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":67:5)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":67:9)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":69:13)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":69:12)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":69:5)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":70:5)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":79:5)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":70:8)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":70:11)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":71:5)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":74:5)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":76:5)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":73:9)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":78:16)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":78:9)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":80:5)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":93:5)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":81:9)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":81:16)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":82:9)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":82:14)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":85:28)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":85:35)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":85:42)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":85:52)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":85:53)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":85:9)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":86:9)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":86:43)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":86:13)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":86:27)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":86:33)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":86:34)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":86:40)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":86:39)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":87:9)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":90:9)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":87:18)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":87:14)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":87:21)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":87:33)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":87:23)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":88:9)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":89:29)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":89:13)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":89:24)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":89:25)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":87:40)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":87:39)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":91:22)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":91:33)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":91:34)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":91:9)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":92:9)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":92:14)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":97:1)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":121:1)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":99:5)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":99:9)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":101:13)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":101:12)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":101:5)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":102:5)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":106:5)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":102:8)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":102:11)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":103:5)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":105:16)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":105:9)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":107:5)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":120:5)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":108:9)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":108:16)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":109:9)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":109:14)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":112:28)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":112:35)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":112:42)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":112:52)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":112:53)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":112:9)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":113:9)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":113:43)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":113:13)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":113:27)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":113:33)
#loc184 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":113:34)
#loc185 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":113:40)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":113:39)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":114:9)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":117:9)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":114:18)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":114:14)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":114:21)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":114:33)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":114:23)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":115:9)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":116:29)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":116:13)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":116:24)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":116:25)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":114:40)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":114:39)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":118:22)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":118:33)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":118:34)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":118:9)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":119:9)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__malloc_fgets_03.c":119:14)
#loc207 = loc(fused[#loc1, #loc2])
#loc208 = loc(fused[#loc3, #loc4])
#loc209 = loc(fused[#loc5, #loc6])
#loc210 = loc(fused[#loc7, #loc8])
#loc211 = loc(fused[#loc10, #loc11])
#loc212 = loc(fused[#loc12, #loc13])
#loc213 = loc(fused[#loc14, #loc15])
#loc214 = loc(fused[#loc16, #loc17])
#loc215 = loc(fused[#loc18, #loc19])
#loc216 = loc(fused[#loc20, #loc21])
#loc217 = loc(fused[#loc24, #loc22])
#loc218 = loc(fused[#loc25, #loc26])
#loc219 = loc(fused[#loc27, #loc28])
#loc220 = loc(fused[#loc29, #loc26])
#loc221 = loc(fused[#loc30, #loc31])
#loc222 = loc(fused[#loc32, #loc33])
#loc223 = loc(fused[#loc34, #loc35])
#loc224 = loc(fused[#loc39, #loc40])
#loc225 = loc(fused[#loc41, #loc42, #loc43, #loc35])
#loc226 = loc(fused[#loc46, #loc47])
#loc227 = loc(fused[#loc49, #loc50])
#loc228 = loc(fused[#loc51, #loc52])
#loc229 = loc(fused[#loc53, #loc54])
#loc230 = loc(fused[#loc57, #loc58])
#loc231 = loc(fused[#loc56, #loc58])
#loc232 = loc(fused[#loc55, #loc59])
#loc233 = loc(fused[#loc60, #loc59])
#loc234 = loc(fused[#loc61, #loc62])
#loc235 = loc(fused[#loc63, #loc64])
#loc236 = loc(fused[#loc65, #loc62])
#loc237 = loc(fused[#loc69, #loc70])
#loc238 = loc(fused[#loc72, #loc71])
#loc239 = loc(fused[#loc73, #loc74])
#loc240 = loc(fused[#loc76, #loc70])
#loc241 = loc(fused[#loc78, #loc77])
#loc242 = loc(fused[#loc82, #loc81])
#loc243 = loc(fused[#loc89, #loc90])
#loc244 = loc(fused[#loc91, #loc92])
#loc245 = loc(fused[#loc93, #loc94])
#loc246 = loc(fused[#loc96, #loc97])
#loc247 = loc(fused[#loc98, #loc99])
#loc248 = loc(fused[#loc102, #loc100])
#loc249 = loc(fused[#loc103, #loc104])
#loc250 = loc(fused[#loc105, #loc106])
#loc251 = loc(fused[#loc107, #loc108, #loc109, #loc104])
#loc252 = loc(fused[#loc112, #loc111])
#loc253 = loc(fused[#loc113, #loc114])
#loc254 = loc(fused[#loc115, #loc116])
#loc255 = loc(fused[#loc117, #loc118])
#loc256 = loc(fused[#loc121, #loc122])
#loc257 = loc(fused[#loc120, #loc122])
#loc258 = loc(fused[#loc119, #loc123])
#loc259 = loc(fused[#loc124, #loc123])
#loc260 = loc(fused[#loc125, #loc126])
#loc261 = loc(fused[#loc127, #loc128])
#loc262 = loc(fused[#loc129, #loc126])
#loc263 = loc(fused[#loc133, #loc134])
#loc264 = loc(fused[#loc136, #loc135])
#loc265 = loc(fused[#loc137, #loc138])
#loc266 = loc(fused[#loc140, #loc134])
#loc267 = loc(fused[#loc142, #loc141])
#loc268 = loc(fused[#loc146, #loc145])
#loc269 = loc(fused[#loc153, #loc154])
#loc270 = loc(fused[#loc155, #loc156])
#loc271 = loc(fused[#loc159, #loc157])
#loc272 = loc(fused[#loc160, #loc161])
#loc273 = loc(fused[#loc162, #loc163])
#loc274 = loc(fused[#loc164, #loc161])
#loc275 = loc(fused[#loc166, #loc165])
#loc276 = loc(fused[#loc167, #loc168])
#loc277 = loc(fused[#loc169, #loc170])
#loc278 = loc(fused[#loc171, #loc172])
#loc279 = loc(fused[#loc175, #loc176])
#loc280 = loc(fused[#loc174, #loc176])
#loc281 = loc(fused[#loc173, #loc177])
#loc282 = loc(fused[#loc178, #loc177])
#loc283 = loc(fused[#loc179, #loc180])
#loc284 = loc(fused[#loc181, #loc182])
#loc285 = loc(fused[#loc183, #loc180])
#loc286 = loc(fused[#loc187, #loc188])
#loc287 = loc(fused[#loc190, #loc189])
#loc288 = loc(fused[#loc191, #loc192])
#loc289 = loc(fused[#loc194, #loc188])
#loc290 = loc(fused[#loc196, #loc195])
#loc291 = loc(fused[#loc200, #loc199])
