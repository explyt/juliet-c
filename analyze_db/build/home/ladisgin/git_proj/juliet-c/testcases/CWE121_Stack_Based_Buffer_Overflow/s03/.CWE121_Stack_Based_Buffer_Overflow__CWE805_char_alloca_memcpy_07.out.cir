!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":123:10)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":123:14)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":123:20)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":123:32)
#loc209 = loc(fused[#loc68, #loc69])
#loc210 = loc(fused[#loc70, #loc71])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" internal dsolocal @staticFive = #cir.int<5> : !s32i {alignment = 4 : i64} loc(#loc184)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc185)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07_bad() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc187)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc188)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc189)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc12)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc12)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc12)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc12)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc190)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc189)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc14)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc14)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc14)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc14)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc14)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc190)
    cir.br ^bb1 loc(#loc191)
  ^bb1:  // pred: ^bb0
    %18 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc184)
    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc17)
    %20 = cir.const #cir.int<5> : !s32i loc(#loc18)
    %21 = cir.cmp(eq, %19, %20) : !s32i, !cir.bool loc(#loc192)
    cir.brcond %21 ^bb2, ^bb3 loc(#loc193)
  ^bb2:  // pred: ^bb1
    %22 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    cir.store %22, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc194)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc22)
    %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc22)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc23)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc24)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc25)
    cir.store %24, %27 : !s8i, !cir.ptr<!s8i> loc(#loc195)
    cir.br ^bb3 loc(#loc16)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc16)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc196)
  ^bb5:  // pred: ^bb4
    %28 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc28)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc28)
    %30 = cir.const #cir.int<67> : !s32i loc(#loc29)
    %31 = cir.const #cir.int<100> : !s32i loc(#loc30)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %33 = cir.binop(sub, %31, %32) nsw : !s32i loc(#loc30)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc30)
    cir.libc.memset %34 bytes from %29 set to %30 : !cir.ptr<!void>, !s32i, !u64i loc(#loc197)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc34)
    %37 = cir.const #cir.int<100> : !s32i loc(#loc35)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc36)
    %39 = cir.binop(sub, %37, %38) nsw : !s32i loc(#loc35)
    %40 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc37)
    %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !s32i), !cir.ptr<!s8i> loc(#loc37)
    cir.store %36, %41 : !s8i, !cir.ptr<!s8i> loc(#loc198)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc38)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc38)
    %44 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc39)
    %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc39)
    %46 = cir.const #cir.int<100> : !s32i loc(#loc40)
    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc40)
    %48 = cir.const #cir.int<1> : !u64i loc(#loc199)
    %49 = cir.binop(mul, %47, %48) : !u64i loc(#loc200)
    cir.libc.memcpy %49 bytes from %45 to %43 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc201)
    %50 = cir.const #cir.int<0> : !s32i loc(#loc45)
    %51 = cir.cast(integral, %50 : !s32i), !s8i loc(#loc45)
    %52 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc46)
    %53 = cir.const #cir.int<100> : !s32i loc(#loc47)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %55 = cir.binop(sub, %53, %54) nsw : !s32i loc(#loc47)
    %56 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc49)
    cir.store %51, %56 : !s8i, !cir.ptr<!s8i> loc(#loc202)
    %57 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%57) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    cir.br ^bb6 loc(#loc27)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc6)
  } loc(#loc186)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07_good() extra(#fn_attr) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc204)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc54)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc205)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc56)
    cir.return loc(#loc53)
  } loc(#loc203)
  cir.func private @srand(!u32i) extra(#fn_attr1) loc(#loc206)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc207)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc62)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc63)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc64)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc65)
  cir.func @main(%arg0: !s32i loc(fused[#loc68, #loc69]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc70, #loc71])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc209)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc210)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc67)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc72)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc72)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc73)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr1) loc(#loc74)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc74)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr1) loc(#loc75)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc62)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc62)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %8 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07_good : !cir.ptr<!cir.func<!void ()>> loc(#loc211)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07_good() : () -> () loc(#loc77)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc63)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc63)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc64)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc64)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc80)
    %13 = cir.get_global @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc212)
    cir.call @CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07_bad() : () -> () loc(#loc81)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc65)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc65)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc84)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc213)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc213)
    cir.return %17 : !s32i loc(#loc213)
  } loc(#loc208)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc86)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc215)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc216)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc217)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc94)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc94)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc94)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc94)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc94)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc218)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc94)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc94)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc217)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc96)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc96)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc96)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc96)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc96)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc96)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc96)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc218)
    cir.br ^bb1 loc(#loc219)
  ^bb1:  // pred: ^bb0
    %18 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc184)
    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc99)
    %20 = cir.const #cir.int<5> : !s32i loc(#loc100)
    %21 = cir.cmp(ne, %19, %20) : !s32i, !cir.bool loc(#loc220)
    cir.brcond %21 ^bb2, ^bb3 loc(#loc221)
  ^bb2:  // pred: ^bb1
    %22 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc86)
    %23 = cir.cast(array_to_ptrdecay, %22 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc86)
    cir.call @printLine(%23) : (!cir.ptr<!s8i>) -> () loc(#loc104)
    cir.br ^bb4 loc(#loc102)
  ^bb3:  // pred: ^bb1
    %24 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc105)
    cir.store %24, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc222)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc107)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc107)
    %27 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc108)
    %28 = cir.const #cir.int<0> : !s32i loc(#loc109)
    %29 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc110)
    cir.store %26, %29 : !s8i, !cir.ptr<!s8i> loc(#loc223)
    cir.br ^bb4 loc(#loc98)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc98)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc224)
  ^bb6:  // pred: ^bb5
    %30 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc113)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc113)
    %32 = cir.const #cir.int<67> : !s32i loc(#loc114)
    %33 = cir.const #cir.int<100> : !s32i loc(#loc115)
    %34 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %35 = cir.binop(sub, %33, %34) nsw : !s32i loc(#loc115)
    %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc115)
    cir.libc.memset %36 bytes from %31 set to %32 : !cir.ptr<!void>, !s32i, !u64i loc(#loc225)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc119)
    %38 = cir.cast(integral, %37 : !s32i), !s8i loc(#loc119)
    %39 = cir.const #cir.int<100> : !s32i loc(#loc120)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc121)
    %41 = cir.binop(sub, %39, %40) nsw : !s32i loc(#loc120)
    %42 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc122)
    %43 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %41 : !s32i), !cir.ptr<!s8i> loc(#loc122)
    cir.store %38, %43 : !s8i, !cir.ptr<!s8i> loc(#loc226)
    %44 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc123)
    %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc123)
    %46 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc124)
    %47 = cir.cast(bitcast, %46 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc124)
    %48 = cir.const #cir.int<100> : !s32i loc(#loc125)
    %49 = cir.cast(integral, %48 : !s32i), !u64i loc(#loc125)
    %50 = cir.const #cir.int<1> : !u64i loc(#loc227)
    %51 = cir.binop(mul, %49, %50) : !u64i loc(#loc228)
    cir.libc.memcpy %51 bytes from %47 to %45 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc229)
    %52 = cir.const #cir.int<0> : !s32i loc(#loc130)
    %53 = cir.cast(integral, %52 : !s32i), !s8i loc(#loc130)
    %54 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc131)
    %55 = cir.const #cir.int<100> : !s32i loc(#loc132)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc133)
    %57 = cir.binop(sub, %55, %56) nsw : !s32i loc(#loc132)
    %58 = cir.ptr_stride(%54 : !cir.ptr<!s8i>, %57 : !s32i), !cir.ptr<!s8i> loc(#loc134)
    cir.store %53, %58 : !s8i, !cir.ptr<!s8i> loc(#loc230)
    %59 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc135)
    cir.call @printLine(%59) : (!cir.ptr<!s8i>) -> () loc(#loc136)
    cir.br ^bb7 loc(#loc112)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc88)
  } loc(#loc214)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc232)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc233)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc234)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc144)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc144)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc144)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc144)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc144)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc235)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc144)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc144)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc234)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc146)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc146)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc146)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc146)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc146)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc146)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc146)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc235)
    cir.br ^bb1 loc(#loc236)
  ^bb1:  // pred: ^bb0
    %18 = cir.get_global @staticFive : !cir.ptr<!s32i> loc(#loc184)
    %19 = cir.load %18 : !cir.ptr<!s32i>, !s32i loc(#loc149)
    %20 = cir.const #cir.int<5> : !s32i loc(#loc150)
    %21 = cir.cmp(eq, %19, %20) : !s32i, !cir.bool loc(#loc237)
    cir.brcond %21 ^bb2, ^bb3 loc(#loc238)
  ^bb2:  // pred: ^bb1
    %22 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc152)
    cir.store %22, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc239)
    %23 = cir.const #cir.int<0> : !s32i loc(#loc154)
    %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc154)
    %25 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc155)
    %26 = cir.const #cir.int<0> : !s32i loc(#loc156)
    %27 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %26 : !s32i), !cir.ptr<!s8i> loc(#loc157)
    cir.store %24, %27 : !s8i, !cir.ptr<!s8i> loc(#loc240)
    cir.br ^bb3 loc(#loc148)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc148)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc241)
  ^bb5:  // pred: ^bb4
    %28 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc160)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc160)
    %30 = cir.const #cir.int<67> : !s32i loc(#loc161)
    %31 = cir.const #cir.int<100> : !s32i loc(#loc162)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc163)
    %33 = cir.binop(sub, %31, %32) nsw : !s32i loc(#loc162)
    %34 = cir.cast(integral, %33 : !s32i), !u64i loc(#loc162)
    cir.libc.memset %34 bytes from %29 set to %30 : !cir.ptr<!void>, !s32i, !u64i loc(#loc242)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc166)
    %36 = cir.cast(integral, %35 : !s32i), !s8i loc(#loc166)
    %37 = cir.const #cir.int<100> : !s32i loc(#loc167)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc168)
    %39 = cir.binop(sub, %37, %38) nsw : !s32i loc(#loc167)
    %40 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc169)
    %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !s32i), !cir.ptr<!s8i> loc(#loc169)
    cir.store %36, %41 : !s8i, !cir.ptr<!s8i> loc(#loc243)
    %42 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
    %43 = cir.cast(bitcast, %42 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc170)
    %44 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc171)
    %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc171)
    %46 = cir.const #cir.int<100> : !s32i loc(#loc172)
    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc172)
    %48 = cir.const #cir.int<1> : !u64i loc(#loc244)
    %49 = cir.binop(mul, %47, %48) : !u64i loc(#loc245)
    cir.libc.memcpy %49 bytes from %45 to %43 : !u64i, !cir.ptr<!void> -> !cir.ptr<!void> loc(#loc246)
    %50 = cir.const #cir.int<0> : !s32i loc(#loc177)
    %51 = cir.cast(integral, %50 : !s32i), !s8i loc(#loc177)
    %52 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc178)
    %53 = cir.const #cir.int<100> : !s32i loc(#loc179)
    %54 = cir.const #cir.int<1> : !s32i loc(#loc180)
    %55 = cir.binop(sub, %53, %54) nsw : !s32i loc(#loc179)
    %56 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %55 : !s32i), !cir.ptr<!s8i> loc(#loc181)
    cir.store %51, %56 : !s8i, !cir.ptr<!s8i> loc(#loc247)
    %57 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc182)
    cir.call @printLine(%57) : (!cir.ptr<!s8i>) -> () loc(#loc183)
    cir.br ^bb6 loc(#loc159)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc138)
  } loc(#loc231)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":0:0)
#loc1 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":25:1)
#loc2 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":25:25)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":29:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":50:1)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":42:9)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":42:24)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":31:5)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":31:12)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":32:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":32:36)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":33:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":33:37)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":34:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":40:5)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":34:8)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":34:20)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":35:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":38:16)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":38:9)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":39:19)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":39:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":39:14)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":39:15)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":41:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":49:5)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":43:16)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":43:24)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":43:29)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":43:33)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":43:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":43:34)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":44:25)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":44:16)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":44:20)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":44:9)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":46:16)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":46:22)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":46:30)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":46:34)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":46:45)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":46:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":46:46)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":47:23)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":47:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":47:14)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":47:18)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":47:19)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":48:19)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":48:9)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":107:1)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":111:1)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":109:5)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":109:14)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":110:5)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":110:14)
#loc58 = loc("/usr/include/stdlib.h":575:1)
#loc59 = loc("/usr/include/stdlib.h":575:41)
#loc60 = loc("/usr/include/time.h":76:1)
#loc61 = loc("/usr/include/time.h":76:38)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":128:15)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":130:15)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":133:15)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":135:15)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":123:1)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":138:1)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":124:1)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":126:27)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":126:22)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":126:5)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":128:5)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":129:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":129:75)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":130:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":133:5)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":134:5)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":134:74)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":135:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":137:12)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":137:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":65:19)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":57:1)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":82:1)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":74:9)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":74:24)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":59:5)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":59:12)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":60:5)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":60:36)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":61:5)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":61:37)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":62:5)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":72:5)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":62:8)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":62:20)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":63:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":66:5)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":68:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":65:9)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":70:16)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":70:9)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":71:19)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":71:9)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":71:14)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":71:15)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":73:5)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":81:5)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":75:16)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":75:24)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":75:29)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":75:33)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":75:9)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":75:34)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":76:25)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":76:16)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":76:20)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":76:9)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":78:16)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":78:22)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":78:30)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":78:34)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":78:45)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":78:9)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":78:46)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":79:23)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":79:9)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":79:14)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":79:18)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":79:19)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":80:19)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":80:9)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":85:1)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":105:1)
#loc139 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":97:9)
#loc140 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":97:24)
#loc141 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":87:5)
#loc142 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":87:12)
#loc143 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":88:5)
#loc144 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":88:36)
#loc145 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":89:5)
#loc146 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":89:37)
#loc147 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":90:5)
#loc148 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":95:5)
#loc149 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":90:8)
#loc150 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":90:20)
#loc151 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":91:5)
#loc152 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":93:16)
#loc153 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":93:9)
#loc154 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":94:19)
#loc155 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":94:9)
#loc156 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":94:14)
#loc157 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":94:15)
#loc158 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":96:5)
#loc159 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":104:5)
#loc160 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":98:16)
#loc161 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":98:24)
#loc162 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":98:29)
#loc163 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":98:33)
#loc164 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":98:9)
#loc165 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":98:34)
#loc166 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":99:25)
#loc167 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":99:16)
#loc168 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":99:20)
#loc169 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":99:9)
#loc170 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":101:16)
#loc171 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":101:22)
#loc172 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":101:30)
#loc173 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":101:34)
#loc174 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":101:45)
#loc175 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":101:9)
#loc176 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":101:46)
#loc177 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":102:23)
#loc178 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":102:9)
#loc179 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":102:14)
#loc180 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":102:18)
#loc181 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":102:19)
#loc182 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":103:19)
#loc183 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_memcpy_07.c":103:9)
#loc184 = loc(fused[#loc1, #loc2])
#loc185 = loc(fused[#loc3, #loc4])
#loc186 = loc(fused[#loc5, #loc6])
#loc187 = loc(fused[#loc7, #loc8])
#loc188 = loc(fused[#loc9, #loc10])
#loc189 = loc(fused[#loc11, #loc12])
#loc190 = loc(fused[#loc13, #loc14])
#loc191 = loc(fused[#loc15, #loc16])
#loc192 = loc(fused[#loc17, #loc18])
#loc193 = loc(fused[#loc19, #loc16])
#loc194 = loc(fused[#loc21, #loc20])
#loc195 = loc(fused[#loc23, #loc22])
#loc196 = loc(fused[#loc26, #loc27])
#loc197 = loc(fused[#loc32, #loc33])
#loc198 = loc(fused[#loc37, #loc34])
#loc199 = loc(fused[#loc41, #loc42])
#loc200 = loc(fused[#loc40, #loc42])
#loc201 = loc(fused[#loc43, #loc44])
#loc202 = loc(fused[#loc46, #loc45])
#loc203 = loc(fused[#loc52, #loc53])
#loc204 = loc(fused[#loc54, #loc55])
#loc205 = loc(fused[#loc56, #loc57])
#loc206 = loc(fused[#loc58, #loc59])
#loc207 = loc(fused[#loc60, #loc61])
#loc208 = loc(fused[#loc66, #loc67])
#loc211 = loc(fused[#loc77, #loc78])
#loc212 = loc(fused[#loc81, #loc82])
#loc213 = loc(fused[#loc85, #loc84])
#loc214 = loc(fused[#loc87, #loc88])
#loc215 = loc(fused[#loc89, #loc90])
#loc216 = loc(fused[#loc91, #loc92])
#loc217 = loc(fused[#loc93, #loc94])
#loc218 = loc(fused[#loc95, #loc96])
#loc219 = loc(fused[#loc97, #loc98])
#loc220 = loc(fused[#loc99, #loc100])
#loc221 = loc(fused[#loc101, #loc102, #loc103, #loc98])
#loc222 = loc(fused[#loc106, #loc105])
#loc223 = loc(fused[#loc108, #loc107])
#loc224 = loc(fused[#loc111, #loc112])
#loc225 = loc(fused[#loc117, #loc118])
#loc226 = loc(fused[#loc122, #loc119])
#loc227 = loc(fused[#loc126, #loc127])
#loc228 = loc(fused[#loc125, #loc127])
#loc229 = loc(fused[#loc128, #loc129])
#loc230 = loc(fused[#loc131, #loc130])
#loc231 = loc(fused[#loc137, #loc138])
#loc232 = loc(fused[#loc139, #loc140])
#loc233 = loc(fused[#loc141, #loc142])
#loc234 = loc(fused[#loc143, #loc144])
#loc235 = loc(fused[#loc145, #loc146])
#loc236 = loc(fused[#loc147, #loc148])
#loc237 = loc(fused[#loc149, #loc150])
#loc238 = loc(fused[#loc151, #loc148])
#loc239 = loc(fused[#loc153, #loc152])
#loc240 = loc(fused[#loc155, #loc154])
#loc241 = loc(fused[#loc158, #loc159])
#loc242 = loc(fused[#loc164, #loc165])
#loc243 = loc(fused[#loc169, #loc166])
#loc244 = loc(fused[#loc173, #loc174])
#loc245 = loc(fused[#loc172, #loc174])
#loc246 = loc(fused[#loc175, #loc176])
#loc247 = loc(fused[#loc178, #loc177])
