!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":21:21)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":21:37)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":85:10)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":85:14)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":85:20)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":85:32)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":50:25)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":50:41)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc120 = loc(fused[#loc7, #loc8])
#loc141 = loc(fused[#loc63, #loc64])
#loc142 = loc(fused[#loc65, #loc66])
#loc147 = loc(fused[#loc83, #loc84])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc117)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc118)
  cir.func internal private @badSink(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc120)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc9)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc10)
    cir.call @printStructLine(%1) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc11)
    %2 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc12)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc13)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc13)
    cir.call @free(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc12)
    cir.return loc(#loc6)
  } loc(#loc119)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc121)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc122)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc124)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!ty__twoIntsStruct>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty__twoIntsStruct>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc125)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<!void (!cir.ptr<!ty__twoIntsStruct>)>> loc(#loc23)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!ty__twoIntsStruct>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty__twoIntsStruct>)>>> loc(#loc125)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc24)
    cir.store %3, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc126)
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc26)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc127)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc26)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc128)
    cir.store %7, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc129)
    cir.scope {
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc33)
      %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc34)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
      %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc131)
      cir.if %19 {
        %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc36)
        %21 = cir.const #cir.int<1> : !s32i loc(#loc37)
        %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc38)
        cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc36)
      } loc(#loc132)
    } loc(#loc130)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc39)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc40)
    %10 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc41)
    cir.store %8, %10 : !s32i, !cir.ptr<!s32i> loc(#loc133)
    %11 = cir.const #cir.int<2> : !s32i loc(#loc42)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc43)
    %13 = cir.get_member %12[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc44)
    cir.store %11, %13 : !s32i, !cir.ptr<!s32i> loc(#loc134)
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty__twoIntsStruct>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!ty__twoIntsStruct>)>> loc(#loc45)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
    cir.call %14(%15) : (!cir.ptr<!cir.func<!void (!cir.ptr<!ty__twoIntsStruct>)>>, !cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc45)
    cir.return loc(#loc19)
  } loc(#loc123)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc136)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc49)
    cir.return loc(#loc48)
  } loc(#loc135)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc137)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc138)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc139)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc57)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc60)
  cir.func @main(%arg0: !s32i loc(fused[#loc63, #loc64]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc65, #loc66])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc141)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc142)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc62)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc67)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc67)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc68)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc69)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc69)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc70)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc57)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc57)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44_good : !cir.ptr<!cir.func<!void ()>> loc(#loc143)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44_good() : () -> () loc(#loc72)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc58)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc74)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc59)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc144)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44_bad() : () -> () loc(#loc76)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc60)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc78)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc79)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc145)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc145)
    cir.return %17 : !s32i loc(#loc145)
  } loc(#loc140)
  cir.func internal private @goodG2BSink(%arg0: !cir.ptr<!ty__twoIntsStruct> loc(fused[#loc83, #loc84])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc147)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc85)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc86)
    cir.call @printStructLine(%1) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc87)
    %2 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc88)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc89)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc89)
    cir.call @free(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc88)
    cir.return loc(#loc82)
  } loc(#loc146)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc149)
    %1 = cir.alloca !cir.ptr<!cir.func<!void (!cir.ptr<!ty__twoIntsStruct>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty__twoIntsStruct>)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc150)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<!void (!cir.ptr<!ty__twoIntsStruct>)>> loc(#loc95)
    cir.store %2, %1 : !cir.ptr<!cir.func<!void (!cir.ptr<!ty__twoIntsStruct>)>>, !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty__twoIntsStruct>)>>> loc(#loc150)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc96)
    cir.store %3, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc151)
    %4 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc98)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc152)
    %6 = cir.call @malloc(%5) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc98)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc153)
    cir.store %7, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc154)
    cir.scope {
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc105)
      %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc106)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc106)
      %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc156)
      cir.if %19 {
        %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc108)
        %21 = cir.const #cir.int<1> : !s32i loc(#loc109)
        %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc110)
        cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc108)
      } loc(#loc157)
    } loc(#loc155)
    %8 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc112)
    %10 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc41)
    cir.store %8, %10 : !s32i, !cir.ptr<!s32i> loc(#loc158)
    %11 = cir.const #cir.int<2> : !s32i loc(#loc113)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc114)
    %13 = cir.get_member %12[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc44)
    cir.store %11, %13 : !s32i, !cir.ptr<!s32i> loc(#loc159)
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<!void (!cir.ptr<!ty__twoIntsStruct>)>>>, !cir.ptr<!cir.func<!void (!cir.ptr<!ty__twoIntsStruct>)>> loc(#loc115)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc116)
    cir.call %14(%15) : (!cir.ptr<!cir.func<!void (!cir.ptr<!ty__twoIntsStruct>)>>, !cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc115)
    cir.return loc(#loc91)
  } loc(#loc148)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc3 = loc("/usr/include/stdlib.h":687:1)
#loc4 = loc("/usr/include/stdlib.h":687:32)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":21:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":26:1)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":22:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":24:21)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":24:5)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":25:5)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":25:10)
#loc14 = loc("/usr/include/stdlib.h":672:1)
#loc15 = loc("/usr/include/stdlib.h":672:45)
#loc16 = loc("/usr/include/stdlib.h":756:1)
#loc17 = loc("/usr/include/stdlib.h":756:70)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":28:1)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":43:1)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":30:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":30:21)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":32:5)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":32:41)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":34:12)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":34:5)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":37:29)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":37:36)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":37:47)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":37:48)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":37:5)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":38:5)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":38:33)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":38:9)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":38:17)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":38:23)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":38:24)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":38:30)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":38:29)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":39:20)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":39:5)
#loc41 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":40:20)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":40:5)
#loc44 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":42:5)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":42:13)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":71:1)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":74:1)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":73:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":73:13)
#loc51 = loc("/usr/include/stdlib.h":575:1)
#loc52 = loc("/usr/include/stdlib.h":575:41)
#loc53 = loc("/usr/include/time.h":76:1)
#loc54 = loc("/usr/include/time.h":76:38)
#loc55 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc56 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":90:15)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":92:15)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":95:15)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":97:15)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":85:1)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":100:1)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":86:1)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":88:27)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":88:22)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":88:5)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":90:5)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":91:5)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":91:62)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":92:5)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":95:5)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":96:5)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":96:61)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":97:5)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":99:12)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":99:5)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":50:1)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":55:1)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":51:1)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":53:21)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":53:5)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":54:5)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":54:10)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":57:1)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":69:1)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":59:5)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":59:21)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":60:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":60:41)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":62:12)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":62:5)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":64:29)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":64:36)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":64:48)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":64:49)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":64:5)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":65:5)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":65:33)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":65:9)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":65:17)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":65:23)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":65:24)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":65:30)
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":65:29)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":66:20)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":66:5)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":67:20)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":67:5)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":68:5)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_44.c":68:13)
#loc117 = loc(fused[#loc1, #loc2])
#loc118 = loc(fused[#loc3, #loc4])
#loc119 = loc(fused[#loc5, #loc6])
#loc121 = loc(fused[#loc14, #loc15])
#loc122 = loc(fused[#loc16, #loc17])
#loc123 = loc(fused[#loc18, #loc19])
#loc124 = loc(fused[#loc20, #loc21])
#loc125 = loc(fused[#loc22, #loc23])
#loc126 = loc(fused[#loc25, #loc24])
#loc127 = loc(fused[#loc27, #loc28])
#loc128 = loc(fused[#loc26, #loc29])
#loc129 = loc(fused[#loc30, #loc29])
#loc130 = loc(fused[#loc31, #loc32])
#loc131 = loc(fused[#loc33, #loc34])
#loc132 = loc(fused[#loc35, #loc32])
#loc133 = loc(fused[#loc40, #loc39])
#loc134 = loc(fused[#loc43, #loc42])
#loc135 = loc(fused[#loc47, #loc48])
#loc136 = loc(fused[#loc49, #loc50])
#loc137 = loc(fused[#loc51, #loc52])
#loc138 = loc(fused[#loc53, #loc54])
#loc139 = loc(fused[#loc55, #loc56])
#loc140 = loc(fused[#loc61, #loc62])
#loc143 = loc(fused[#loc72, #loc73])
#loc144 = loc(fused[#loc76, #loc77])
#loc145 = loc(fused[#loc80, #loc79])
#loc146 = loc(fused[#loc81, #loc82])
#loc148 = loc(fused[#loc90, #loc91])
#loc149 = loc(fused[#loc92, #loc93])
#loc150 = loc(fused[#loc94, #loc95])
#loc151 = loc(fused[#loc97, #loc96])
#loc152 = loc(fused[#loc99, #loc100])
#loc153 = loc(fused[#loc98, #loc101])
#loc154 = loc(fused[#loc102, #loc101])
#loc155 = loc(fused[#loc103, #loc104])
#loc156 = loc(fused[#loc105, #loc106])
#loc157 = loc(fused[#loc107, #loc104])
#loc158 = loc(fused[#loc112, #loc111])
#loc159 = loc(fused[#loc114, #loc113])
