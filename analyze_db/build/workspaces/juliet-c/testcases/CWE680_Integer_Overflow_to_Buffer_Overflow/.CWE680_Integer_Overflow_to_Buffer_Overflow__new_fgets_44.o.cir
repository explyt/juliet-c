!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":26:21)
#loc8 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":26:25)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":72:25)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":72:29)
#loc141 = loc(fused[#loc7, #loc8])
#loc172 = loc(fused[#loc85, #loc86])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc138)
  cir.func private @printIntLine(!s32i) loc(#loc139)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44L7badSinkEi(%arg0: !s32i loc(fused[#loc7, #loc8])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc141)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc9)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc143)
      %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc144)
      %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc145)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc17)
      %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc17)
      %6 = cir.const #cir.int<4> : !u64i loc(#loc146)
      %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc147)
      cir.store %7, %1 : !u64i, !cir.ptr<!u64i> loc(#loc148)
      %8 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc21)
      %9 = cir.call @_Znam(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc22)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc149)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc149)
      cir.store %11, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc150)
      cir.scope {
        %17 = cir.const #cir.int<0> : !s32i loc(#loc28)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc28)
        cir.store %18, %2 : !u64i, !cir.ptr<!u64i> loc(#loc152)
        cir.for : cond {
          %19 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc30)
          %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc31)
          %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc31)
          %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc153)
          cir.condition(%22) loc(#loc153)
        } body {
          cir.scope {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc33)
            %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc34)
            %21 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc35)
            %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !u64i), !cir.ptr<!s32i> loc(#loc36)
            cir.store %19, %22 : !s32i, !cir.ptr<!s32i> loc(#loc155)
          } loc(#loc154)
          cir.yield loc(#loc27)
        } step {
          %19 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc37)
          %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc38)
          cir.store %20, %2 : !u64i, !cir.ptr<!u64i> loc(#loc156)
          cir.yield loc(#loc151)
        } loc(#loc151)
      } loc(#loc151)
      %12 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc39)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc40)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc41)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc39)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc42)
      %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc43)
      cir.delete.array %16 : <!s32i> loc(#loc43)
    } loc(#loc142)
    cir.return loc(#loc6)
  } loc(#loc140)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc157)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc158)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr1) loc(#loc159)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc160)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc52)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_443badEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc162)
    %1 = cir.alloca !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc163)
    %2 = cir.get_global @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44L7badSinkEi : !cir.ptr<!cir.func<(!s32i)>> loc(#loc58)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>> loc(#loc163)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc59)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc60)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc164)
    cir.scope {
      %7 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc166)
      %8 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc166)
      cir.store %8, %7 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc166)
      cir.scope {
        %9 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc68)
        %10 = cir.const #cir.int<3> : !s32i loc(#loc69)
        %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc69)
        %12 = cir.const #cir.int<4> : !u64i loc(#loc69)
        %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc69)
        %14 = cir.const #cir.int<2> : !s32i loc(#loc69)
        %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc69)
        %16 = cir.binop(add, %13, %15) : !u64i loc(#loc69)
        %17 = cir.cast(integral, %16 : !u64i), !s32i loc(#loc69)
        %18 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc158)
        %19 = cir.load %18 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc70)
        %20 = cir.call @fgets(%9, %17, %19) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc71)
        %21 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc72)
        %22 = cir.cmp(ne, %20, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc168)
        cir.if %22 {
          %23 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc76)
          %24 = cir.call @atoi(%23) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr1) loc(#loc77)
          cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc170)
        } else {
          %23 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc52)
          %24 = cir.cast(array_to_ptrdecay, %23 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc52)
          cir.call @printLine(%24) : (!cir.ptr<!s8i>) -> () loc(#loc80)
        } loc(#loc169)
      } loc(#loc167)
    } loc(#loc165)
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, !cir.ptr<!cir.func<(!s32i)>> loc(#loc81)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc82)
    cir.call %5(%6) : (!cir.ptr<!cir.func<(!s32i)>>, !s32i) -> () loc(#loc81)
    cir.return loc(#loc54)
  } loc(#loc161)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44L11goodG2BSinkEi(%arg0: !s32i loc(fused[#loc85, #loc86])) extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc172)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc87)
    cir.scope {
      %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc174)
      %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc175)
      %3 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc176)
      %4 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc95)
      %5 = cir.cast(integral, %4 : !s32i), !u64i loc(#loc95)
      %6 = cir.const #cir.int<4> : !u64i loc(#loc177)
      %7 = cir.binop(mul, %5, %6) : !u64i loc(#loc178)
      cir.store %7, %1 : !u64i, !cir.ptr<!u64i> loc(#loc179)
      %8 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc99)
      %9 = cir.call @_Znam(%8) : (!u64i) -> !cir.ptr<!void> loc(#loc100)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc180)
      %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc180)
      cir.store %11, %3 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc181)
      cir.scope {
        %17 = cir.const #cir.int<0> : !s32i loc(#loc106)
        %18 = cir.cast(integral, %17 : !s32i), !u64i loc(#loc106)
        cir.store %18, %2 : !u64i, !cir.ptr<!u64i> loc(#loc183)
        cir.for : cond {
          %19 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc108)
          %20 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc109)
          %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc109)
          %22 = cir.cmp(lt, %19, %21) : !u64i, !cir.bool loc(#loc184)
          cir.condition(%22) loc(#loc184)
        } body {
          cir.scope {
            %19 = cir.const #cir.int<0> : !s32i loc(#loc111)
            %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc112)
            %21 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc113)
            %22 = cir.ptr_stride(%20 : !cir.ptr<!s32i>, %21 : !u64i), !cir.ptr<!s32i> loc(#loc114)
            cir.store %19, %22 : !s32i, !cir.ptr<!s32i> loc(#loc186)
          } loc(#loc185)
          cir.yield loc(#loc105)
        } step {
          %19 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc115)
          %20 = cir.unary(inc, %19) : !u64i, !u64i loc(#loc116)
          cir.store %20, %2 : !u64i, !cir.ptr<!u64i> loc(#loc187)
          cir.yield loc(#loc182)
        } loc(#loc182)
      } loc(#loc182)
      %12 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc117)
      %13 = cir.const #cir.int<0> : !s32i loc(#loc118)
      %14 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %13 : !s32i), !cir.ptr<!s32i> loc(#loc119)
      %15 = cir.load %14 : !cir.ptr<!s32i>, !s32i loc(#loc117)
      cir.call @printIntLine(%15) : (!s32i) -> () loc(#loc120)
      %16 = cir.load %3 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc121)
      cir.delete.array %16 : <!s32i> loc(#loc121)
    } loc(#loc173)
    cir.return loc(#loc84)
  } loc(#loc171)
  cir.func internal private @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc189)
    %1 = cir.alloca !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc190)
    %2 = cir.get_global @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44L11goodG2BSinkEi : !cir.ptr<!cir.func<(!s32i)>> loc(#loc127)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>> loc(#loc190)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc128)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc129)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc191)
    %5 = cir.const #cir.int<20> : !s32i loc(#loc131)
    cir.store %5, %0 : !s32i, !cir.ptr<!s32i> loc(#loc192)
    %6 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, !cir.ptr<!cir.func<(!s32i)>> loc(#loc133)
    %7 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc134)
    cir.call %6(%7) : (!cir.ptr<!cir.func<(!s32i)>>, !s32i) -> () loc(#loc133)
    cir.return loc(#loc123)
  } loc(#loc188)
  cir.func @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_444goodEv() extra(#fn_attr) {
    cir.call @_ZN56CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44L7goodG2BEv() : () -> () loc(#loc137)
    cir.return loc(#loc136)
  } loc(#loc193)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc2 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc3 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc4 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc5 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":26:1)
#loc6 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":41:1)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":27:1)
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":28:5)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":40:5)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":29:9)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":29:16)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":29:26)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":30:9)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":30:14)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":32:21)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":32:28)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":32:38)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":32:9)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":33:37)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":26:13)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":33:28)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":33:46)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":33:9)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":34:9)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":37:9)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":34:18)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":34:14)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":34:21)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":34:33)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":35:9)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":36:29)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":36:13)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":36:24)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":36:25)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":34:40)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":34:39)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":38:22)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":38:33)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":38:34)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":38:9)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":39:19)
#loc44 = loc("/usr/include/stdio.h":654:1)
#loc45 = loc("/usr/include/stdio.h":655:59)
#loc46 = loc("/usr/include/stdio.h":149:1)
#loc47 = loc("/usr/include/stdio.h":149:14)
#loc48 = loc("/usr/include/stdlib.h":105:1)
#loc49 = loc("/usr/include/stdlib.h":106:33)
#loc50 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc51 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":60:23)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":43:1)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":65:1)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":45:5)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":45:9)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":47:5)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":47:29)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":49:13)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":49:12)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":49:5)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":50:5)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":62:5)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":51:9)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":51:45)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":53:9)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":61:9)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":53:19)
#loc69 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":53:32)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":53:49)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":53:13)
#loc72 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":53:59)
#loc73 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":54:9)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":57:9)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":59:9)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":56:25)
#loc77 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":56:20)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":56:13)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":56:36)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":60:13)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":64:5)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":64:13)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":72:1)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":87:1)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":73:1)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":74:5)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":86:5)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":75:9)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":75:16)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":75:26)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":76:9)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":76:14)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":78:21)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":78:28)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":78:38)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":78:9)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":79:37)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":72:13)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":79:28)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":79:46)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":79:9)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":80:9)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":83:9)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":80:18)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":80:14)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":80:21)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":80:33)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":81:9)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":82:29)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":82:13)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":82:24)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":82:25)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":80:40)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":80:39)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":84:22)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":84:33)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":84:34)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":84:9)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":85:19)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":89:1)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":98:1)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":91:5)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":91:9)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":92:5)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":92:29)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":94:13)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":94:12)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":94:5)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":96:12)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":96:5)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":97:5)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":97:13)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":100:1)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":103:1)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fgets_44.cpp":102:5)
#loc138 = loc(fused[#loc1, #loc2])
#loc139 = loc(fused[#loc3, #loc4])
#loc140 = loc(fused[#loc5, #loc6])
#loc142 = loc(fused[#loc10, #loc11])
#loc143 = loc(fused[#loc12, #loc13])
#loc144 = loc(fused[#loc12, #loc14])
#loc145 = loc(fused[#loc15, #loc16])
#loc146 = loc(fused[#loc18, #loc19])
#loc147 = loc(fused[#loc17, #loc19])
#loc148 = loc(fused[#loc20, #loc19])
#loc149 = loc(fused[#loc23, #loc24])
#loc150 = loc(fused[#loc25, #loc24])
#loc151 = loc(fused[#loc26, #loc27])
#loc152 = loc(fused[#loc29, #loc28])
#loc153 = loc(fused[#loc30, #loc31])
#loc154 = loc(fused[#loc32, #loc27])
#loc155 = loc(fused[#loc34, #loc33])
#loc156 = loc(fused[#loc38, #loc37])
#loc157 = loc(fused[#loc44, #loc45])
#loc158 = loc(fused[#loc46, #loc47])
#loc159 = loc(fused[#loc48, #loc49])
#loc160 = loc(fused[#loc50, #loc51])
#loc161 = loc(fused[#loc53, #loc54])
#loc162 = loc(fused[#loc55, #loc56])
#loc163 = loc(fused[#loc57, #loc58])
#loc164 = loc(fused[#loc61, #loc59])
#loc165 = loc(fused[#loc62, #loc63])
#loc166 = loc(fused[#loc64, #loc65])
#loc167 = loc(fused[#loc66, #loc67])
#loc168 = loc(fused[#loc71, #loc72])
#loc169 = loc(fused[#loc73, #loc74, #loc75, #loc67])
#loc170 = loc(fused[#loc78, #loc79])
#loc171 = loc(fused[#loc83, #loc84])
#loc173 = loc(fused[#loc88, #loc89])
#loc174 = loc(fused[#loc90, #loc91])
#loc175 = loc(fused[#loc90, #loc92])
#loc176 = loc(fused[#loc93, #loc94])
#loc177 = loc(fused[#loc96, #loc97])
#loc178 = loc(fused[#loc95, #loc97])
#loc179 = loc(fused[#loc98, #loc97])
#loc180 = loc(fused[#loc101, #loc102])
#loc181 = loc(fused[#loc103, #loc102])
#loc182 = loc(fused[#loc104, #loc105])
#loc183 = loc(fused[#loc107, #loc106])
#loc184 = loc(fused[#loc108, #loc109])
#loc185 = loc(fused[#loc110, #loc105])
#loc186 = loc(fused[#loc112, #loc111])
#loc187 = loc(fused[#loc116, #loc115])
#loc188 = loc(fused[#loc122, #loc123])
#loc189 = loc(fused[#loc124, #loc125])
#loc190 = loc(fused[#loc126, #loc127])
#loc191 = loc(fused[#loc130, #loc128])
#loc192 = loc(fused[#loc132, #loc131])
#loc193 = loc(fused[#loc135, #loc136])
