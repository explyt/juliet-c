!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc287)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc288)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc289)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc290)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc291)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc292)
  cir.func private @__isoc23_strtoul(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc293)
  cir.func private @close(!s32i) -> !s32i loc(#loc294)
  cir.func private @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_539badSink_bEm(!u64i) loc(#loc295)
  cir.func @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_533badEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc297)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc23)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc23)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc298)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc300)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc301)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc302)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc303)
      %8 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc304)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc32)
      %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc32)
      cir.store %10, %6 : !s32i, !cir.ptr<!s32i> loc(#loc302)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc34)
      %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc34)
      cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc303)
      cir.scope {
        cir.do {
          cir.scope {
            %13 = cir.const #cir.int<2> : !s32i loc(#loc41)
            %14 = cir.const #cir.int<1> : !u32i loc(#loc42)
            %15 = cir.cast(integral, %14 : !u32i), !s32i loc(#loc42)
            %16 = cir.const #cir.int<6> : !u32i loc(#loc43)
            %17 = cir.cast(integral, %16 : !u32i), !s32i loc(#loc43)
            %18 = cir.call @socket(%13, %15, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc44)
            cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc307)
            cir.scope {
              %62 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc49)
              %63 = cir.const #cir.int<1> : !s32i loc(#loc50)
              %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc50)
              %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc309)
              cir.if %65 {
                cir.break loc(#loc52)
              } loc(#loc310)
            } loc(#loc308)
            %19 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc311)
            %20 = cir.const #cir.int<0> : !s32i loc(#loc55)
            %21 = cir.const #cir.int<16> : !u64i loc(#loc312)
            cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc313)
            %22 = cir.const #cir.int<2> : !s32i loc(#loc60)
            %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc60)
            %24 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc61)
            cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc314)
            %25 = cir.const #cir.int<0> : !s32i loc(#loc63)
            %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc63)
            %27 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc64)
            %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc65)
            cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc315)
            %29 = cir.const #cir.int<27015> : !s32i loc(#loc67)
            %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc67)
            %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc68)
            %32 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
            cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc316)
            cir.scope {
              %62 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc74)
              %63 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc318)
              %64 = cir.const #cir.int<16> : !u64i loc(#loc319)
              %65 = cir.cast(integral, %64 : !u64i), !u32i loc(#loc319)
              %66 = cir.call @bind(%62, %63, %65) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc79)
              %67 = cir.const #cir.int<1> : !s32i loc(#loc80)
              %68 = cir.unary(minus, %67) nsw : !s32i, !s32i loc(#loc80)
              %69 = cir.cmp(eq, %66, %68) : !s32i, !cir.bool loc(#loc320)
              cir.if %69 {
                cir.break loc(#loc82)
              } loc(#loc321)
            } loc(#loc317)
            cir.scope {
              %62 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc85)
              %63 = cir.const #cir.int<5> : !s32i loc(#loc86)
              %64 = cir.call @listen(%62, %63) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc87)
              %65 = cir.const #cir.int<1> : !s32i loc(#loc88)
              %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc88)
              %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc323)
              cir.if %67 {
                cir.break loc(#loc90)
              } loc(#loc324)
            } loc(#loc322)
            %33 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc91)
            %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc92)
            %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc93)
            %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc94)
            cir.store %36, %7 : !s32i, !cir.ptr<!s32i> loc(#loc325)
            cir.scope {
              %62 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc99)
              %63 = cir.const #cir.int<1> : !s32i loc(#loc100)
              %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc100)
              %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc327)
              cir.if %65 {
                cir.break loc(#loc102)
              } loc(#loc328)
            } loc(#loc326)
            %37 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc103)
            %38 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc104)
            %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc104)
            %40 = cir.const #cir.int<3> : !s32i loc(#loc105)
            %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc105)
            %42 = cir.const #cir.int<8> : !u64i loc(#loc105)
            %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc105)
            %44 = cir.const #cir.int<2> : !s32i loc(#loc105)
            %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc105)
            %46 = cir.binop(add, %43, %45) : !u64i loc(#loc105)
            %47 = cir.const #cir.int<1> : !s32i loc(#loc106)
            %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc106)
            %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc329)
            %50 = cir.const #cir.int<0> : !s32i loc(#loc107)
            %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc108)
            %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc108)
            cir.store %52, %4 : !s32i, !cir.ptr<!s32i> loc(#loc330)
            cir.scope {
              %62 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc113)
              %63 = cir.const #cir.int<1> : !s32i loc(#loc114)
              %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc114)
              %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc332)
              %66 = cir.ternary(%65, true {
                %67 = cir.const #true loc(#loc115)
                cir.yield %67 : !cir.bool loc(#loc115)
              }, false {
                %67 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc116)
                %68 = cir.const #cir.int<0> : !s32i loc(#loc117)
                %69 = cir.cmp(eq, %67, %68) : !s32i, !cir.bool loc(#loc333)
                %70 = cir.ternary(%69, true {
                  %71 = cir.const #true loc(#loc115)
                  cir.yield %71 : !cir.bool loc(#loc115)
                }, false {
                  %71 = cir.const #false loc(#loc115)
                  cir.yield %71 : !cir.bool loc(#loc115)
                }) : (!cir.bool) -> !cir.bool loc(#loc115)
                cir.yield %70 : !cir.bool loc(#loc115)
              }) : (!cir.bool) -> !cir.bool loc(#loc115)
              cir.if %66 {
                cir.break loc(#loc119)
              } loc(#loc334)
            } loc(#loc331)
            %53 = cir.const #cir.int<0> : !s8i loc(#loc120)
            %54 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc121)
            %55 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc122)
            %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !s32i), !cir.ptr<!s8i> loc(#loc122)
            cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc335)
            %57 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc123)
            %58 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc124)
            %59 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc125)
            %60 = cir.const #cir.int<0> : !s32i loc(#loc126)
            %61 = cir.call @__isoc23_strtoul(%58, %59, %60) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc123)
            cir.store %61, %0 : !u64i, !cir.ptr<!u64i> loc(#loc336)
          } loc(#loc306)
          cir.yield loc(#loc38)
        } while {
          %13 = cir.const #cir.int<0> : !s32i loc(#loc129)
          %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc129)
          cir.condition(%14) loc(#loc129)
        } loc(#loc305)
      } loc(#loc305)
      cir.scope {
        %13 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc132)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc133)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc133)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc338)
        cir.if %16 {
          %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc135)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc136)
        } loc(#loc339)
      } loc(#loc337)
      cir.scope {
        %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc139)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc140)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc140)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc341)
        cir.if %16 {
          %17 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc142)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc143)
        } loc(#loc342)
      } loc(#loc340)
    } loc(#loc299)
    %3 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc144)
    cir.call @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_539badSink_bEm(%3) : (!u64i) -> () loc(#loc145)
    cir.return loc(#loc20)
  } loc(#loc296)
  cir.func private @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_5313goodG2BSink_bEm(!u64i) loc(#loc343)
  cir.func internal private @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc345)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc152)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc152)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc346)
    %3 = cir.const #cir.int<20> : !s32i loc(#loc154)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc154)
    cir.store %4, %0 : !u64i, !cir.ptr<!u64i> loc(#loc347)
    %5 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc156)
    cir.call @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_5313goodG2BSink_bEm(%5) : (!u64i) -> () loc(#loc157)
    cir.return loc(#loc149)
  } loc(#loc344)
  cir.func private @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_5313goodB2GSink_bEm(!u64i) loc(#loc348)
  cir.func internal private @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["data"] {alignment = 8 : i64} loc(#loc350)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc164)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc164)
    cir.store %2, %0 : !u64i, !cir.ptr<!u64i> loc(#loc351)
    cir.scope {
      %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc353)
      %5 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc354)
      %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc355)
      %7 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc356)
      %8 = cir.alloca !cir.array<!s8i x 26>, !cir.ptr<!cir.array<!s8i x 26>>, ["inputBuffer"] {alignment = 16 : i64} loc(#loc357)
      %9 = cir.const #cir.int<1> : !s32i loc(#loc173)
      %10 = cir.unary(minus, %9) nsw : !s32i, !s32i loc(#loc173)
      cir.store %10, %6 : !s32i, !cir.ptr<!s32i> loc(#loc355)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc175)
      %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc175)
      cir.store %12, %7 : !s32i, !cir.ptr<!s32i> loc(#loc356)
      cir.scope {
        cir.do {
          cir.scope {
            %13 = cir.const #cir.int<2> : !s32i loc(#loc182)
            %14 = cir.const #cir.int<1> : !u32i loc(#loc183)
            %15 = cir.cast(integral, %14 : !u32i), !s32i loc(#loc183)
            %16 = cir.const #cir.int<6> : !u32i loc(#loc184)
            %17 = cir.cast(integral, %16 : !u32i), !s32i loc(#loc184)
            %18 = cir.call @socket(%13, %15, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc185)
            cir.store %18, %6 : !s32i, !cir.ptr<!s32i> loc(#loc360)
            cir.scope {
              %62 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc190)
              %63 = cir.const #cir.int<1> : !s32i loc(#loc191)
              %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc191)
              %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc362)
              cir.if %65 {
                cir.break loc(#loc193)
              } loc(#loc363)
            } loc(#loc361)
            %19 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc364)
            %20 = cir.const #cir.int<0> : !s32i loc(#loc196)
            %21 = cir.const #cir.int<16> : !u64i loc(#loc365)
            cir.libc.memset %21 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc366)
            %22 = cir.const #cir.int<2> : !s32i loc(#loc201)
            %23 = cir.cast(integral, %22 : !s32i), !u16i loc(#loc201)
            %24 = cir.get_member %5[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc61)
            cir.store %23, %24 : !u16i, !cir.ptr<!u16i> loc(#loc367)
            %25 = cir.const #cir.int<0> : !s32i loc(#loc203)
            %26 = cir.cast(integral, %25 : !s32i), !u32i loc(#loc203)
            %27 = cir.get_member %5[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc64)
            %28 = cir.get_member %27[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc65)
            cir.store %26, %28 : !u32i, !cir.ptr<!u32i> loc(#loc368)
            %29 = cir.const #cir.int<27015> : !s32i loc(#loc205)
            %30 = cir.cast(integral, %29 : !s32i), !u16i loc(#loc205)
            %31 = cir.call @htons(%30) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc206)
            %32 = cir.get_member %5[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
            cir.store %31, %32 : !u16i, !cir.ptr<!u16i> loc(#loc369)
            cir.scope {
              %62 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc211)
              %63 = cir.cast(bitcast, %5 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc371)
              %64 = cir.const #cir.int<16> : !u64i loc(#loc372)
              %65 = cir.cast(integral, %64 : !u64i), !u32i loc(#loc372)
              %66 = cir.call @bind(%62, %63, %65) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc216)
              %67 = cir.const #cir.int<1> : !s32i loc(#loc217)
              %68 = cir.unary(minus, %67) nsw : !s32i, !s32i loc(#loc217)
              %69 = cir.cmp(eq, %66, %68) : !s32i, !cir.bool loc(#loc373)
              cir.if %69 {
                cir.break loc(#loc219)
              } loc(#loc374)
            } loc(#loc370)
            cir.scope {
              %62 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc222)
              %63 = cir.const #cir.int<5> : !s32i loc(#loc223)
              %64 = cir.call @listen(%62, %63) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc224)
              %65 = cir.const #cir.int<1> : !s32i loc(#loc225)
              %66 = cir.unary(minus, %65) nsw : !s32i, !s32i loc(#loc225)
              %67 = cir.cmp(eq, %64, %66) : !s32i, !cir.bool loc(#loc376)
              cir.if %67 {
                cir.break loc(#loc227)
              } loc(#loc377)
            } loc(#loc375)
            %33 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc228)
            %34 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc229)
            %35 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc230)
            %36 = cir.call @accept(%33, %34, %35) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc231)
            cir.store %36, %7 : !s32i, !cir.ptr<!s32i> loc(#loc378)
            cir.scope {
              %62 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc236)
              %63 = cir.const #cir.int<1> : !s32i loc(#loc237)
              %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc237)
              %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc380)
              cir.if %65 {
                cir.break loc(#loc239)
              } loc(#loc381)
            } loc(#loc379)
            %37 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc240)
            %38 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc241)
            %39 = cir.cast(bitcast, %38 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc241)
            %40 = cir.const #cir.int<3> : !s32i loc(#loc242)
            %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc242)
            %42 = cir.const #cir.int<8> : !u64i loc(#loc242)
            %43 = cir.binop(mul, %41, %42) : !u64i loc(#loc242)
            %44 = cir.const #cir.int<2> : !s32i loc(#loc242)
            %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc242)
            %46 = cir.binop(add, %43, %45) : !u64i loc(#loc242)
            %47 = cir.const #cir.int<1> : !s32i loc(#loc243)
            %48 = cir.cast(integral, %47 : !s32i), !u64i loc(#loc243)
            %49 = cir.binop(sub, %46, %48) : !u64i loc(#loc382)
            %50 = cir.const #cir.int<0> : !s32i loc(#loc244)
            %51 = cir.call @recv(%37, %39, %49, %50) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc245)
            %52 = cir.cast(integral, %51 : !s64i), !s32i loc(#loc245)
            cir.store %52, %4 : !s32i, !cir.ptr<!s32i> loc(#loc383)
            cir.scope {
              %62 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc250)
              %63 = cir.const #cir.int<1> : !s32i loc(#loc251)
              %64 = cir.unary(minus, %63) nsw : !s32i, !s32i loc(#loc251)
              %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc385)
              %66 = cir.ternary(%65, true {
                %67 = cir.const #true loc(#loc252)
                cir.yield %67 : !cir.bool loc(#loc252)
              }, false {
                %67 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc253)
                %68 = cir.const #cir.int<0> : !s32i loc(#loc254)
                %69 = cir.cmp(eq, %67, %68) : !s32i, !cir.bool loc(#loc386)
                %70 = cir.ternary(%69, true {
                  %71 = cir.const #true loc(#loc252)
                  cir.yield %71 : !cir.bool loc(#loc252)
                }, false {
                  %71 = cir.const #false loc(#loc252)
                  cir.yield %71 : !cir.bool loc(#loc252)
                }) : (!cir.bool) -> !cir.bool loc(#loc252)
                cir.yield %70 : !cir.bool loc(#loc252)
              }) : (!cir.bool) -> !cir.bool loc(#loc252)
              cir.if %66 {
                cir.break loc(#loc256)
              } loc(#loc387)
            } loc(#loc384)
            %53 = cir.const #cir.int<0> : !s8i loc(#loc257)
            %54 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc258)
            %55 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc259)
            %56 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %54 : !s32i), !cir.ptr<!s8i> loc(#loc259)
            cir.store %53, %56 : !s8i, !cir.ptr<!s8i> loc(#loc388)
            %57 = cir.get_global @__isoc23_strtoul : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i>> loc(#loc260)
            %58 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc261)
            %59 = cir.const #cir.ptr<null> : !cir.ptr<!cir.ptr<!s8i>> loc(#loc262)
            %60 = cir.const #cir.int<0> : !s32i loc(#loc263)
            %61 = cir.call @__isoc23_strtoul(%58, %59, %60) : (!cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, !s32i) -> !u64i extra(#fn_attr) loc(#loc260)
            cir.store %61, %0 : !u64i, !cir.ptr<!u64i> loc(#loc389)
          } loc(#loc359)
          cir.yield loc(#loc179)
        } while {
          %13 = cir.const #cir.int<0> : !s32i loc(#loc266)
          %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc266)
          cir.condition(%14) loc(#loc266)
        } loc(#loc358)
      } loc(#loc358)
      cir.scope {
        %13 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc269)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc270)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc270)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc391)
        cir.if %16 {
          %17 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc272)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc273)
        } loc(#loc392)
      } loc(#loc390)
      cir.scope {
        %13 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc276)
        %14 = cir.const #cir.int<1> : !s32i loc(#loc277)
        %15 = cir.unary(minus, %14) nsw : !s32i, !s32i loc(#loc277)
        %16 = cir.cmp(ne, %13, %15) : !s32i, !cir.bool loc(#loc394)
        cir.if %16 {
          %17 = cir.load %7 : !cir.ptr<!s32i>, !s32i loc(#loc279)
          %18 = cir.call @close(%17) : (!s32i) -> !s32i loc(#loc280)
        } loc(#loc395)
      } loc(#loc393)
    } loc(#loc352)
    %3 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc281)
    cir.call @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_5313goodB2GSink_bEm(%3) : (!u64i) -> () loc(#loc282)
    cir.return loc(#loc161)
  } loc(#loc349)
  cir.func @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_534goodEv() extra(#fn_attr1) {
    cir.call @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53L7goodG2BEv() : () -> () loc(#loc285)
    cir.call @_ZN56CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53L7goodB2GEv() : () -> () loc(#loc286)
    cir.return loc(#loc284)
  } loc(#loc396)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE789_Uncontrolled_Mem_Alloc/s02/CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":219:1)
#loc14 = loc("/usr/include/stdlib.h":223:6)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":54:1)
#loc18 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":54:27)
#loc19 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":56:1)
#loc20 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":131:1)
#loc21 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":58:5)
#loc22 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":58:12)
#loc23 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":60:12)
#loc24 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":60:5)
#loc25 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":61:5)
#loc26 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":129:5)
#loc27 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":66:9)
#loc28 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":66:13)
#loc29 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":67:9)
#loc30 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":67:28)
#loc31 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":68:9)
#loc32 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":68:31)
#loc33 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":69:9)
#loc34 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":69:31)
#loc35 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":70:9)
#loc36 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":70:41)
#loc37 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":71:9)
#loc38 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":114:17)
#loc39 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":72:9)
#loc40 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":113:9)
#loc41 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":81:35)
#loc42 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":81:44)
#loc43 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":81:57)
#loc44 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":81:28)
#loc45 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":81:13)
#loc46 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":81:68)
#loc47 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":82:13)
#loc48 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":85:13)
#loc49 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":82:17)
#loc50 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":82:33)
#loc51 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":83:13)
#loc52 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":84:17)
#loc53 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":86:20)
#loc54 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":86:21)
#loc55 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":86:30)
#loc56 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":86:33)
#loc57 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":86:47)
#loc58 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":86:13)
#loc59 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":86:48)
#loc60 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":87:34)
#loc61 = loc("/usr/include/netinet/in.h":249:5)
#loc62 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":87:13)
#loc63 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":88:39)
#loc64 = loc("/usr/include/netinet/in.h":251:20)
#loc65 = loc("/usr/include/netinet/in.h":33:15)
#loc66 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":88:13)
#loc67 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":89:38)
#loc68 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":89:32)
#loc69 = loc("/usr/include/netinet/in.h":250:15)
#loc70 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":89:13)
#loc71 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":89:46)
#loc72 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":90:13)
#loc73 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":93:13)
#loc74 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":90:22)
#loc75 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":90:54)
#loc76 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":90:55)
#loc77 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":90:64)
#loc78 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":90:78)
#loc79 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":90:17)
#loc80 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":90:84)
#loc81 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":91:13)
#loc82 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":92:17)
#loc83 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":94:13)
#loc84 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":97:13)
#loc85 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":94:24)
#loc86 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":94:38)
#loc87 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":94:17)
#loc88 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":94:57)
#loc89 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":95:13)
#loc90 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":96:17)
#loc91 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":98:35)
#loc92 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":98:49)
#loc93 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":98:55)
#loc94 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":98:28)
#loc95 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":98:13)
#loc96 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":98:59)
#loc97 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":99:13)
#loc98 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":102:13)
#loc99 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":99:17)
#loc100 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":99:33)
#loc101 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":100:13)
#loc102 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":101:17)
#loc103 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":104:31)
#loc104 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":104:45)
#loc105 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":104:58)
#loc106 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":104:76)
#loc107 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":104:79)
#loc108 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":104:26)
#loc109 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":104:13)
#loc110 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":104:80)
#loc111 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":105:13)
#loc112 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":108:13)
#loc113 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":105:17)
#loc114 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":105:31)
#loc115 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":105:44)
#loc116 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":105:47)
#loc117 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":105:61)
#loc118 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":106:13)
#loc119 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":107:17)
#loc120 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":110:39)
#loc121 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":110:25)
#loc122 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":110:13)
#loc123 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":112:20)
#loc124 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":112:28)
#loc125 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":112:41)
#loc126 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":112:47)
#loc127 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":112:13)
#loc128 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":112:48)
#loc129 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":114:16)
#loc130 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":115:9)
#loc131 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":118:9)
#loc132 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":115:13)
#loc133 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":115:29)
#loc134 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":116:9)
#loc135 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":117:26)
#loc136 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":117:13)
#loc137 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":119:9)
#loc138 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":122:9)
#loc139 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":119:13)
#loc140 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":119:29)
#loc141 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":120:9)
#loc142 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":121:26)
#loc143 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":121:13)
#loc144 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":130:15)
#loc145 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":130:5)
#loc146 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":138:1)
#loc147 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":138:31)
#loc148 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":140:1)
#loc149 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":148:1)
#loc150 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":142:5)
#loc151 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":142:12)
#loc152 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":144:12)
#loc153 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":144:5)
#loc154 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":146:12)
#loc155 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":146:5)
#loc156 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":147:19)
#loc157 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":147:5)
#loc158 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":151:1)
#loc159 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":151:31)
#loc160 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":153:1)
#loc161 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":228:1)
#loc162 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":155:5)
#loc163 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":155:12)
#loc164 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":157:12)
#loc165 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":157:5)
#loc166 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":158:5)
#loc167 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":226:5)
#loc168 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":163:9)
#loc169 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":163:13)
#loc170 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":164:9)
#loc171 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":164:28)
#loc172 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":165:9)
#loc173 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":165:31)
#loc174 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":166:9)
#loc175 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":166:31)
#loc176 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":167:9)
#loc177 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":167:41)
#loc178 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":168:9)
#loc179 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":211:17)
#loc180 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":169:9)
#loc181 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":210:9)
#loc182 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":178:35)
#loc183 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":178:44)
#loc184 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":178:57)
#loc185 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":178:28)
#loc186 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":178:13)
#loc187 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":178:68)
#loc188 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":179:13)
#loc189 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":182:13)
#loc190 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":179:17)
#loc191 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":179:33)
#loc192 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":180:13)
#loc193 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":181:17)
#loc194 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":183:20)
#loc195 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":183:21)
#loc196 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":183:30)
#loc197 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":183:33)
#loc198 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":183:47)
#loc199 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":183:13)
#loc200 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":183:48)
#loc201 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":184:34)
#loc202 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":184:13)
#loc203 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":185:39)
#loc204 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":185:13)
#loc205 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":186:38)
#loc206 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":186:32)
#loc207 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":186:13)
#loc208 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":186:46)
#loc209 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":187:13)
#loc210 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":190:13)
#loc211 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":187:22)
#loc212 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":187:54)
#loc213 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":187:55)
#loc214 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":187:64)
#loc215 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":187:78)
#loc216 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":187:17)
#loc217 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":187:84)
#loc218 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":188:13)
#loc219 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":189:17)
#loc220 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":191:13)
#loc221 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":194:13)
#loc222 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":191:24)
#loc223 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":191:38)
#loc224 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":191:17)
#loc225 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":191:57)
#loc226 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":192:13)
#loc227 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":193:17)
#loc228 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":195:35)
#loc229 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":195:49)
#loc230 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":195:55)
#loc231 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":195:28)
#loc232 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":195:13)
#loc233 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":195:59)
#loc234 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":196:13)
#loc235 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":199:13)
#loc236 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":196:17)
#loc237 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":196:33)
#loc238 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":197:13)
#loc239 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":198:17)
#loc240 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":201:31)
#loc241 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":201:45)
#loc242 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":201:58)
#loc243 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":201:76)
#loc244 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":201:79)
#loc245 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":201:26)
#loc246 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":201:13)
#loc247 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":201:80)
#loc248 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":202:13)
#loc249 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":205:13)
#loc250 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":202:17)
#loc251 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":202:31)
#loc252 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":202:44)
#loc253 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":202:47)
#loc254 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":202:61)
#loc255 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":203:13)
#loc256 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":204:17)
#loc257 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":207:39)
#loc258 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":207:25)
#loc259 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":207:13)
#loc260 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":209:20)
#loc261 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":209:28)
#loc262 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":209:41)
#loc263 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":209:47)
#loc264 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":209:13)
#loc265 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":209:48)
#loc266 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":211:16)
#loc267 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":212:9)
#loc268 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":215:9)
#loc269 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":212:13)
#loc270 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":212:29)
#loc271 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":213:9)
#loc272 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":214:26)
#loc273 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":214:13)
#loc274 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":216:9)
#loc275 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":219:9)
#loc276 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":216:13)
#loc277 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":216:29)
#loc278 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":217:9)
#loc279 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":218:26)
#loc280 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":218:13)
#loc281 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":227:19)
#loc282 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":227:5)
#loc283 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":230:1)
#loc284 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":234:1)
#loc285 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":232:5)
#loc286 = loc("CWE789_Uncontrolled_Mem_Alloc__new_char_listen_socket_53a.cpp":233:5)
#loc287 = loc(fused[#loc1, #loc2])
#loc288 = loc(fused[#loc3, #loc4])
#loc289 = loc(fused[#loc5, #loc6])
#loc290 = loc(fused[#loc7, #loc8])
#loc291 = loc(fused[#loc9, #loc10])
#loc292 = loc(fused[#loc11, #loc12])
#loc293 = loc(fused[#loc13, #loc14])
#loc294 = loc(fused[#loc15, #loc16])
#loc295 = loc(fused[#loc17, #loc18])
#loc296 = loc(fused[#loc19, #loc20])
#loc297 = loc(fused[#loc21, #loc22])
#loc298 = loc(fused[#loc24, #loc23])
#loc299 = loc(fused[#loc25, #loc26])
#loc300 = loc(fused[#loc27, #loc28])
#loc301 = loc(fused[#loc29, #loc30])
#loc302 = loc(fused[#loc31, #loc32])
#loc303 = loc(fused[#loc33, #loc34])
#loc304 = loc(fused[#loc35, #loc36])
#loc305 = loc(fused[#loc37, #loc38])
#loc306 = loc(fused[#loc39, #loc40])
#loc307 = loc(fused[#loc45, #loc46])
#loc308 = loc(fused[#loc47, #loc48])
#loc309 = loc(fused[#loc49, #loc50])
#loc310 = loc(fused[#loc51, #loc48])
#loc311 = loc(fused[#loc53, #loc54])
#loc312 = loc(fused[#loc56, #loc57])
#loc313 = loc(fused[#loc58, #loc59])
#loc314 = loc(fused[#loc62, #loc60])
#loc315 = loc(fused[#loc66, #loc63])
#loc316 = loc(fused[#loc70, #loc71])
#loc317 = loc(fused[#loc72, #loc73])
#loc318 = loc(fused[#loc75, #loc76])
#loc319 = loc(fused[#loc77, #loc78])
#loc320 = loc(fused[#loc79, #loc80])
#loc321 = loc(fused[#loc81, #loc73])
#loc322 = loc(fused[#loc83, #loc84])
#loc323 = loc(fused[#loc87, #loc88])
#loc324 = loc(fused[#loc89, #loc84])
#loc325 = loc(fused[#loc95, #loc96])
#loc326 = loc(fused[#loc97, #loc98])
#loc327 = loc(fused[#loc99, #loc100])
#loc328 = loc(fused[#loc101, #loc98])
#loc329 = loc(fused[#loc105, #loc106])
#loc330 = loc(fused[#loc109, #loc110])
#loc331 = loc(fused[#loc111, #loc112])
#loc332 = loc(fused[#loc113, #loc114])
#loc333 = loc(fused[#loc116, #loc117])
#loc334 = loc(fused[#loc118, #loc112])
#loc335 = loc(fused[#loc122, #loc120])
#loc336 = loc(fused[#loc127, #loc128])
#loc337 = loc(fused[#loc130, #loc131])
#loc338 = loc(fused[#loc132, #loc133])
#loc339 = loc(fused[#loc134, #loc131])
#loc340 = loc(fused[#loc137, #loc138])
#loc341 = loc(fused[#loc139, #loc140])
#loc342 = loc(fused[#loc141, #loc138])
#loc343 = loc(fused[#loc146, #loc147])
#loc344 = loc(fused[#loc148, #loc149])
#loc345 = loc(fused[#loc150, #loc151])
#loc346 = loc(fused[#loc153, #loc152])
#loc347 = loc(fused[#loc155, #loc154])
#loc348 = loc(fused[#loc158, #loc159])
#loc349 = loc(fused[#loc160, #loc161])
#loc350 = loc(fused[#loc162, #loc163])
#loc351 = loc(fused[#loc165, #loc164])
#loc352 = loc(fused[#loc166, #loc167])
#loc353 = loc(fused[#loc168, #loc169])
#loc354 = loc(fused[#loc170, #loc171])
#loc355 = loc(fused[#loc172, #loc173])
#loc356 = loc(fused[#loc174, #loc175])
#loc357 = loc(fused[#loc176, #loc177])
#loc358 = loc(fused[#loc178, #loc179])
#loc359 = loc(fused[#loc180, #loc181])
#loc360 = loc(fused[#loc186, #loc187])
#loc361 = loc(fused[#loc188, #loc189])
#loc362 = loc(fused[#loc190, #loc191])
#loc363 = loc(fused[#loc192, #loc189])
#loc364 = loc(fused[#loc194, #loc195])
#loc365 = loc(fused[#loc197, #loc198])
#loc366 = loc(fused[#loc199, #loc200])
#loc367 = loc(fused[#loc202, #loc201])
#loc368 = loc(fused[#loc204, #loc203])
#loc369 = loc(fused[#loc207, #loc208])
#loc370 = loc(fused[#loc209, #loc210])
#loc371 = loc(fused[#loc212, #loc213])
#loc372 = loc(fused[#loc214, #loc215])
#loc373 = loc(fused[#loc216, #loc217])
#loc374 = loc(fused[#loc218, #loc210])
#loc375 = loc(fused[#loc220, #loc221])
#loc376 = loc(fused[#loc224, #loc225])
#loc377 = loc(fused[#loc226, #loc221])
#loc378 = loc(fused[#loc232, #loc233])
#loc379 = loc(fused[#loc234, #loc235])
#loc380 = loc(fused[#loc236, #loc237])
#loc381 = loc(fused[#loc238, #loc235])
#loc382 = loc(fused[#loc242, #loc243])
#loc383 = loc(fused[#loc246, #loc247])
#loc384 = loc(fused[#loc248, #loc249])
#loc385 = loc(fused[#loc250, #loc251])
#loc386 = loc(fused[#loc253, #loc254])
#loc387 = loc(fused[#loc255, #loc249])
#loc388 = loc(fused[#loc259, #loc257])
#loc389 = loc(fused[#loc264, #loc265])
#loc390 = loc(fused[#loc267, #loc268])
#loc391 = loc(fused[#loc269, #loc270])
#loc392 = loc(fused[#loc271, #loc268])
#loc393 = loc(fused[#loc274, #loc275])
#loc394 = loc(fused[#loc276, #loc277])
#loc395 = loc(fused[#loc278, #loc275])
#loc396 = loc(fused[#loc283, #loc284])
