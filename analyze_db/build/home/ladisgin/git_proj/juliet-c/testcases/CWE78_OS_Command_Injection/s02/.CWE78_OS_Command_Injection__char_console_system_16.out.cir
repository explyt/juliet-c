!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc61 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":55:37)
#loc102 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":117:10)
#loc103 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":117:14)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":117:20)
#loc105 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":117:32)
#true = #cir.bool<true> : !cir.bool
#loc184 = loc(fused[#loc102, #loc103])
#loc185 = loc(fused[#loc104, #loc105])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_system_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc145)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_console_system_16_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc146)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc147)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc148)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc149)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc150)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc13)
  cir.func private @system(!cir.ptr<!s8i>) -> !s32i loc(#loc151)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc16)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc152)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_system_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc154)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc155)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc146)
    %3 = cir.get_global @__const.CWE78_OS_Command_Injection__char_console_system_16_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc146)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc146)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc25)
    cir.store %4, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc156)
    cir.br ^bb1 loc(#loc157)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc157)
  ^bb2:  // pred: ^bb1
    %5 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc29)
    cir.brcond %6 ^bb3, ^bb27 loc(#loc29)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc158)
  ^bb4:  // pred: ^bb3
    %7 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc32)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %9 = cir.call @strlen(%8) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc32)
    cir.store %9, %0 : !u64i, !cir.ptr<!u64i> loc(#loc154)
    cir.br ^bb5 loc(#loc159)
  ^bb5:  // pred: ^bb4
    %10 = cir.const #cir.int<100> : !s32i loc(#loc36)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc36)
    %12 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc37)
    %13 = cir.binop(sub, %11, %12) : !u64i loc(#loc160)
    %14 = cir.const #cir.int<1> : !s32i loc(#loc38)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc38)
    %16 = cir.cmp(gt, %13, %15) : !u64i, !cir.bool loc(#loc161)
    cir.brcond %16 ^bb6, ^bb24 loc(#loc162)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc163)
  ^bb7:  // pred: ^bb6
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    %18 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc43)
    %19 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %18 : !u64i), !cir.ptr<!s8i> loc(#loc44)
    %20 = cir.const #cir.int<100> : !s32i loc(#loc45)
    %21 = cir.cast(integral, %20 : !s32i), !u64i loc(#loc45)
    %22 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc46)
    %23 = cir.binop(sub, %21, %22) : !u64i loc(#loc164)
    %24 = cir.cast(integral, %23 : !u64i), !s32i loc(#loc164)
    %25 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc149)
    %26 = cir.load %25 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc47)
    %27 = cir.call @fgets(%19, %24, %26) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc48)
    %28 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc49)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc49)
    %30 = cir.cmp(ne, %27, %29) : !cir.ptr<!s8i>, !cir.bool loc(#loc165)
    cir.brcond %30 ^bb8, ^bb21 loc(#loc166)
  ^bb8:  // pred: ^bb7
    %31 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc53)
    %32 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
    %33 = cir.call @strlen(%32) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc53)
    cir.store %33, %0 : !u64i, !cir.ptr<!u64i> loc(#loc167)
    cir.br ^bb9 loc(#loc168)
  ^bb9:  // pred: ^bb8
    %34 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc59)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc60)
    %36 = cir.cast(integral, %35 : !s32i), !u64i loc(#loc60)
    %37 = cir.cmp(gt, %34, %36) : !u64i, !cir.bool loc(#loc169)
    cir.brcond %37 ^bb10, ^bb15 loc(#loc61)
  ^bb10:  // pred: ^bb9
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc62)
    %39 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc63)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %41 = cir.cast(integral, %40 : !s32i), !u64i loc(#loc64)
    %42 = cir.binop(sub, %39, %41) : !u64i loc(#loc170)
    %43 = cir.ptr_stride(%38 : !cir.ptr<!s8i>, %42 : !u64i), !cir.ptr<!s8i> loc(#loc65)
    %44 = cir.load %43 : !cir.ptr<!s8i>, !s8i loc(#loc62)
    %45 = cir.cast(integral, %44 : !s8i), !s32i loc(#loc62)
    %46 = cir.const #cir.int<10> : !s32i loc(#loc66)
    %47 = cir.cmp(eq, %45, %46) : !s32i, !cir.bool loc(#loc171)
    cir.brcond %47 ^bb11, ^bb12 loc(#loc61)
  ^bb11:  // pred: ^bb10
    %48 = cir.const #true loc(#loc61)
    cir.br ^bb13(%48 : !cir.bool) loc(#loc61)
  ^bb12:  // pred: ^bb10
    %49 = cir.const #false loc(#loc61)
    cir.br ^bb13(%49 : !cir.bool) loc(#loc61)
  ^bb13(%50: !cir.bool loc("CWE78_OS_Command_Injection__char_console_system_16.c":55:37)):  // 2 preds: ^bb11, ^bb12
    cir.br ^bb14 loc(#loc61)
  ^bb14:  // pred: ^bb13
    cir.br ^bb16(%50 : !cir.bool) loc(#loc61)
  ^bb15:  // pred: ^bb9
    %51 = cir.const #false loc(#loc61)
    cir.br ^bb16(%51 : !cir.bool) loc(#loc61)
  ^bb16(%52: !cir.bool loc("CWE78_OS_Command_Injection__char_console_system_16.c":55:37)):  // 2 preds: ^bb14, ^bb15
    cir.br ^bb17 loc(#loc61)
  ^bb17:  // pred: ^bb16
    cir.brcond %52 ^bb18, ^bb19 loc(#loc172)
  ^bb18:  // pred: ^bb17
    %53 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %54 = cir.cast(integral, %53 : !s32i), !s8i loc(#loc68)
    %55 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc69)
    %56 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc70)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc71)
    %58 = cir.cast(integral, %57 : !s32i), !u64i loc(#loc71)
    %59 = cir.binop(sub, %56, %58) : !u64i loc(#loc173)
    %60 = cir.ptr_stride(%55 : !cir.ptr<!s8i>, %59 : !u64i), !cir.ptr<!s8i> loc(#loc72)
    cir.store %54, %60 : !s8i, !cir.ptr<!s8i> loc(#loc174)
    cir.br ^bb19 loc(#loc58)
  ^bb19:  // 2 preds: ^bb17, ^bb18
    cir.br ^bb20 loc(#loc58)
  ^bb20:  // pred: ^bb19
    cir.br ^bb22 loc(#loc51)
  ^bb21:  // pred: ^bb7
    %61 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc13)
    %62 = cir.cast(array_to_ptrdecay, %61 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc13)
    cir.call @printLine(%62) : (!cir.ptr<!s8i>) -> () loc(#loc73)
    %63 = cir.const #cir.int<0> : !s32i loc(#loc74)
    %64 = cir.cast(integral, %63 : !s32i), !s8i loc(#loc74)
    %65 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
    %66 = cir.load %0 : !cir.ptr<!u64i>, !u64i loc(#loc76)
    %67 = cir.ptr_stride(%65 : !cir.ptr<!s8i>, %66 : !u64i), !cir.ptr<!s8i> loc(#loc77)
    cir.store %64, %67 : !s8i, !cir.ptr<!s8i> loc(#loc175)
    cir.br ^bb22 loc(#loc41)
  ^bb22:  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc41)
  ^bb23:  // pred: ^bb22
    cir.br ^bb24 loc(#loc35)
  ^bb24:  // 2 preds: ^bb5, ^bb23
    cir.br ^bb25 loc(#loc35)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc31)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc78)
  ^bb27:  // 2 preds: ^bb2, ^bb26
    cir.br ^bb28 loc(#loc28)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc176)
  ^bb29:  // pred: ^bb28
    %68 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc81)
    %69 = cir.call @system(%68) : (!cir.ptr<!s8i>) -> !s32i loc(#loc82)
    %70 = cir.const #cir.int<0> : !s32i loc(#loc83)
    %71 = cir.cmp(ne, %69, %70) : !s32i, !cir.bool loc(#loc177)
    cir.brcond %71 ^bb30, ^bb31 loc(#loc178)
  ^bb30:  // pred: ^bb29
    %72 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc16)
    %73 = cir.cast(array_to_ptrdecay, %72 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc16)
    cir.call @printLine(%73) : (!cir.ptr<!s8i>) -> () loc(#loc85)
    %74 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc86)
    %75 = cir.const #cir.int<1> : !s32i loc(#loc87)
    cir.call @exit(%75) : (!s32i) -> () extra(#fn_attr) loc(#loc86)
    cir.br ^bb31 loc(#loc80)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc80)
  ^bb32:  // pred: ^bb31
    cir.return loc(#loc20)
  } loc(#loc153)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_system_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc180)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc90)
    cir.return loc(#loc89)
  } loc(#loc179)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc181)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc182)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc96)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc97)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc98)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc99)
  cir.func @main(%arg0: !s32i loc(fused[#loc102, #loc103]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc104, #loc105])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc184)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc185)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc101)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc106)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc106)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc107)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc108)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc108)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc109)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc96)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc96)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc110)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_console_system_16_good : !cir.ptr<!cir.func<!void ()>> loc(#loc186)
    cir.call @CWE78_OS_Command_Injection__char_console_system_16_good() : () -> () loc(#loc111)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc97)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc97)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc113)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc98)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc98)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc114)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_console_system_16_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc187)
    cir.call @CWE78_OS_Command_Injection__char_console_system_16_bad() : () -> () loc(#loc115)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc99)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc99)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc118)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc188)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc188)
    cir.return %17 : !s32i loc(#loc188)
  } loc(#loc183)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc189)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc122)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc191)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc145)
    %2 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc145)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc145)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc127)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc192)
    cir.br ^bb1 loc(#loc193)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc193)
  ^bb2:  // pred: ^bb1
    %4 = cir.const #cir.int<1> : !s32i loc(#loc131)
    %5 = cir.cast(int_to_bool, %4 : !s32i), !cir.bool loc(#loc131)
    cir.brcond %5 ^bb3, ^bb4 loc(#loc131)
  ^bb3:  // pred: ^bb2
    %6 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc132)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc133)
    %8 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc122)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc122)
    %10 = cir.call @strcat(%7, %9) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc132)
    cir.br ^bb4 loc(#loc134)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc130)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc194)
  ^bb6:  // pred: ^bb5
    %11 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
    %12 = cir.call @system(%11) : (!cir.ptr<!s8i>) -> !s32i loc(#loc138)
    %13 = cir.const #cir.int<0> : !s32i loc(#loc139)
    %14 = cir.cmp(ne, %12, %13) : !s32i, !cir.bool loc(#loc195)
    cir.brcond %14 ^bb7, ^bb8 loc(#loc196)
  ^bb7:  // pred: ^bb6
    %15 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc141)
    %16 = cir.cast(array_to_ptrdecay, %15 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc141)
    cir.call @printLine(%16) : (!cir.ptr<!s8i>) -> () loc(#loc142)
    %17 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc143)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc144)
    cir.call @exit(%18) : (!s32i) -> () extra(#fn_attr) loc(#loc143)
    cir.br ^bb8 loc(#loc136)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc136)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc124)
  } loc(#loc190)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_system_16.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":86:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":86:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":39:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":39:26)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("/usr/include/stdio.h":149:1)
#loc10 = loc("/usr/include/stdio.h":149:14)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":62:31)
#loc14 = loc("/usr/include/stdlib.h":923:1)
#loc15 = loc("/usr/include/stdlib.h":923:41)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":73:19)
#loc17 = loc("/usr/include/stdlib.h":756:1)
#loc18 = loc("/usr/include/stdlib.h":756:70)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":36:1)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":76:1)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":45:13)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":45:41)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":38:5)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":38:12)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":40:12)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":40:5)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":41:5)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":69:5)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":41:11)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":43:9)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":67:9)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":45:30)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":45:37)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":47:13)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":66:13)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":47:17)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":47:21)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":47:31)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":48:13)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":50:17)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":65:17)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":50:27)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":50:32)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":50:31)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":50:47)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":50:51)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":50:61)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":50:21)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":50:71)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":51:17)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":59:17)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":61:17)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":54:31)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":54:38)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":54:21)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":54:42)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":55:21)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":58:21)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":55:25)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":55:35)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":55:40)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":55:45)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":55:53)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":55:54)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":55:59)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":56:21)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":57:43)
#loc69 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":57:25)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":57:30)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":57:38)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":57:39)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":62:21)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":64:37)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":64:21)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":64:26)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":64:33)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":68:9)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":71:5)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":75:5)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":71:16)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":71:9)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":71:25)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":72:5)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":73:9)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":74:9)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":74:14)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":102:1)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":105:1)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":104:5)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":104:13)
#loc92 = loc("/usr/include/stdlib.h":575:1)
#loc93 = loc("/usr/include/stdlib.h":575:41)
#loc94 = loc("/usr/include/time.h":76:1)
#loc95 = loc("/usr/include/time.h":76:38)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":122:15)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":124:15)
#loc98 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":127:15)
#loc99 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":129:15)
#loc100 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":117:1)
#loc101 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":132:1)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":118:1)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":120:27)
#loc108 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":120:22)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":120:5)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":122:5)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":123:5)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":123:61)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":124:5)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":127:5)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":128:5)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":128:60)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":129:5)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":131:12)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":131:5)
#loc120 = loc("/usr/include/string.h":149:1)
#loc121 = loc("/usr/include/string.h":150:14)
#loc122 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":91:22)
#loc123 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":83:1)
#loc124 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":100:1)
#loc125 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":85:5)
#loc126 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":85:12)
#loc127 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":87:12)
#loc128 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":87:5)
#loc129 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":88:5)
#loc130 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":93:5)
#loc131 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":88:11)
#loc132 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":91:9)
#loc133 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":91:16)
#loc134 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":92:9)
#loc135 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":95:5)
#loc136 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":99:5)
#loc137 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":95:16)
#loc138 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":95:9)
#loc139 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":95:25)
#loc140 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":96:5)
#loc141 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":97:19)
#loc142 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":97:9)
#loc143 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":98:9)
#loc144 = loc("CWE78_OS_Command_Injection__char_console_system_16.c":98:14)
#loc145 = loc(fused[#loc1, #loc2])
#loc146 = loc(fused[#loc3, #loc4])
#loc147 = loc(fused[#loc5, #loc6])
#loc148 = loc(fused[#loc7, #loc8])
#loc149 = loc(fused[#loc9, #loc10])
#loc150 = loc(fused[#loc11, #loc12])
#loc151 = loc(fused[#loc14, #loc15])
#loc152 = loc(fused[#loc17, #loc18])
#loc153 = loc(fused[#loc19, #loc20])
#loc154 = loc(fused[#loc21, #loc22])
#loc155 = loc(fused[#loc23, #loc24])
#loc156 = loc(fused[#loc26, #loc25])
#loc157 = loc(fused[#loc27, #loc28])
#loc158 = loc(fused[#loc30, #loc31])
#loc159 = loc(fused[#loc34, #loc35])
#loc160 = loc(fused[#loc36, #loc37])
#loc161 = loc(fused[#loc36, #loc38])
#loc162 = loc(fused[#loc39, #loc35])
#loc163 = loc(fused[#loc40, #loc41])
#loc164 = loc(fused[#loc45, #loc46])
#loc165 = loc(fused[#loc48, #loc49])
#loc166 = loc(fused[#loc50, #loc51, #loc52, #loc41])
#loc167 = loc(fused[#loc55, #loc56])
#loc168 = loc(fused[#loc57, #loc58])
#loc169 = loc(fused[#loc59, #loc60])
#loc170 = loc(fused[#loc63, #loc64])
#loc171 = loc(fused[#loc62, #loc66])
#loc172 = loc(fused[#loc67, #loc58])
#loc173 = loc(fused[#loc70, #loc71])
#loc174 = loc(fused[#loc69, #loc68])
#loc175 = loc(fused[#loc75, #loc74])
#loc176 = loc(fused[#loc79, #loc80])
#loc177 = loc(fused[#loc82, #loc83])
#loc178 = loc(fused[#loc84, #loc80])
#loc179 = loc(fused[#loc88, #loc89])
#loc180 = loc(fused[#loc90, #loc91])
#loc181 = loc(fused[#loc92, #loc93])
#loc182 = loc(fused[#loc94, #loc95])
#loc183 = loc(fused[#loc100, #loc101])
#loc186 = loc(fused[#loc111, #loc112])
#loc187 = loc(fused[#loc115, #loc116])
#loc188 = loc(fused[#loc119, #loc118])
#loc189 = loc(fused[#loc120, #loc121])
#loc190 = loc(fused[#loc123, #loc124])
#loc191 = loc(fused[#loc125, #loc126])
#loc192 = loc(fused[#loc128, #loc127])
#loc193 = loc(fused[#loc129, #loc130])
#loc194 = loc(fused[#loc135, #loc136])
#loc195 = loc(fused[#loc138, #loc139])
#loc196 = loc(fused[#loc140, #loc136])
