!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc3 = loc("../../../testcasesupport/std_testcase.h":96:16)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc112)
  cir.func linkonce_odr  @_ZN14_twoIntsStructC2Ev(%arg0: !cir.ptr<!ty__twoIntsStruct> loc("../../../testcasesupport/std_testcase.h":96:16)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    cir.store %arg0, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc3)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc3)
    cir.return loc(#loc3)
  } loc(#loc3)
  cir.func private  @free(!cir.ptr<!void>) extra(#fn_attr1) loc(#loc113)
  cir.func  @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_323badEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc115)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc116)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc117)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc116)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc117)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc14)
    cir.store %3, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc118)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc120)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc19)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc20)
      cir.store %6, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc120)
      %7 = cir.const #cir.int<8> : !u64i loc(#loc121)
      %8 = cir.call @_Znwm(%7) : (!u64i) -> !cir.ptr<!void> loc(#loc23)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc121)
      cir.call @_ZN14_twoIntsStructC2Ev(%9) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr1) loc(#loc22)
      cir.store %9, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc122)
      %10 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc25)
      %11 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc26)
      cir.store %10, %11 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc123)
    } loc(#loc119)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc125)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc31)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
      cir.store %6, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc125)
      %7 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc33)
      %8 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc34)
      cir.call @free(%9) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc33)
    } loc(#loc124)
    cir.return loc(#loc7)
  } loc(#loc114)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc126)
  cir.func private  @exit(!s32i) extra(#fn_attr1) loc(#loc127)
  cir.func internal private  @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32L7goodG2BEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc129)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc130)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc131)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc130)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc131)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc47)
    cir.store %3, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc132)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc134)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc52)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc53)
      cir.store %6, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc134)
      %7 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc54)
      %8 = cir.const #cir.int<100> : !s32i loc(#loc55)
      %9 = cir.cast(integral, %8 : !s32i), !u64i loc(#loc55)
      %10 = cir.const #cir.int<8> : !u64i loc(#loc135)
      %11 = cir.binop(mul, %9, %10) : !u64i loc(#loc136)
      %12 = cir.call @malloc(%11) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr1) loc(#loc54)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc137)
      cir.store %13, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc138)
      cir.scope {
        %16 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc62)
        %17 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc63)
        %18 = cir.cmp(eq, %16, %17) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc140)
        cir.if %18 {
          %19 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc65)
          %20 = cir.const #cir.int<1> : !s32i loc(#loc66)
          %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc67)
          cir.call @exit(%21) : (!s32i) -> () extra(#fn_attr1) loc(#loc65)
        } loc(#loc141)
      } loc(#loc139)
      %14 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc68)
      %15 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc69)
      cir.store %14, %15 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc142)
    } loc(#loc133)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc144)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc74)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc75)
      cir.store %6, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc144)
      %7 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc76)
      %8 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc77)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc77)
      cir.call @free(%9) : (!cir.ptr<!void>) -> () extra(#fn_attr1) loc(#loc76)
    } loc(#loc143)
    cir.return loc(#loc40)
  } loc(#loc128)
  cir.func private  @_ZdlPvm(!cir.ptr<!void>, !u64i) extra(#fn_attr1) loc(#loc145)
  cir.func internal private  @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32L7goodB2GEv() extra(#fn_attr2) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc147)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc148)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc149)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc148)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc149)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc88)
    cir.store %3, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc150)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc152)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc93)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc94)
      cir.store %6, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc152)
      %7 = cir.const #cir.int<8> : !u64i loc(#loc153)
      %8 = cir.call @_Znwm(%7) : (!u64i) -> !cir.ptr<!void> loc(#loc97)
      %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc153)
      cir.call @_ZN14_twoIntsStructC2Ev(%9) : (!cir.ptr<!ty__twoIntsStruct>) -> () extra(#fn_attr1) loc(#loc96)
      cir.store %9, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc154)
      %10 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc99)
      %11 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc100)
      cir.store %10, %11 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc155)
    } loc(#loc151)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc157)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc105)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc106)
      cir.store %6, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc157)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc107)
      %8 = cir.cast(bitcast, %7 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc107)
      %9 = cir.const #cir.int<8> : !u64i loc(#loc97)
      cir.call @_ZdlPvm(%8, %9) : (!cir.ptr<!void>, !u64i) -> () extra(#fn_attr1) loc(#loc97)
    } loc(#loc156)
    cir.return loc(#loc81)
  } loc(#loc146)
  cir.func  @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_324goodEv() extra(#fn_attr2) {
    cir.call @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32L7goodG2BEv() : () -> () loc(#loc110)
    cir.call @_ZN64CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32L7goodB2GEv() : () -> () loc(#loc111)
    cir.return loc(#loc109)
  } loc(#loc158)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s07/CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc2 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc4 = loc("/usr/include/stdlib.h":687:1)
#loc5 = loc("/usr/include/stdlib.h":687:32)
#loc6 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":25:1)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":44:1)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":27:5)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":27:21)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":28:5)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":28:34)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":29:5)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":29:34)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":31:12)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":31:5)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":32:5)
#loc17 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":37:5)
#loc18 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":33:9)
#loc19 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":33:33)
#loc20 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":33:32)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":35:16)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":35:20)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":25:6)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":35:9)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":36:21)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":36:10)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":36:9)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":38:5)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":43:5)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":39:9)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":39:33)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":39:32)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":42:9)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":42:14)
#loc35 = loc("/usr/include/stdlib.h":672:1)
#loc36 = loc("/usr/include/stdlib.h":672:45)
#loc37 = loc("/usr/include/stdlib.h":756:1)
#loc38 = loc("/usr/include/stdlib.h":756:70)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":51:1)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":71:1)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":53:5)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":53:21)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":54:5)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":54:34)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":55:5)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":55:34)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":57:12)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":57:5)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":58:5)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":64:5)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":59:9)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":59:33)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":59:32)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":61:33)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":61:40)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":61:44)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":61:64)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":61:65)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":61:9)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":62:9)
#loc61 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":62:37)
#loc62 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":62:13)
#loc63 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":62:21)
#loc64 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":62:27)
#loc65 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":62:28)
#loc66 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":62:34)
#loc67 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":62:33)
#loc68 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":63:21)
#loc69 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":63:10)
#loc70 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":63:9)
#loc71 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":65:5)
#loc72 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":70:5)
#loc73 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":66:9)
#loc74 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":66:33)
#loc75 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":66:32)
#loc76 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":69:9)
#loc77 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":69:14)
#loc78 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":140:1)
#loc79 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":141:41)
#loc80 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":74:1)
#loc81 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":92:1)
#loc82 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":76:5)
#loc83 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":76:21)
#loc84 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":77:5)
#loc85 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":77:34)
#loc86 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":78:5)
#loc87 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":78:34)
#loc88 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":80:12)
#loc89 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":80:5)
#loc90 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":81:5)
#loc91 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":86:5)
#loc92 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":82:9)
#loc93 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":82:33)
#loc94 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":82:32)
#loc95 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":84:16)
#loc96 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":84:20)
#loc97 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":74:13)
#loc98 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":84:9)
#loc99 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":85:21)
#loc100 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":85:10)
#loc101 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":85:9)
#loc102 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":87:5)
#loc103 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":91:5)
#loc104 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":88:9)
#loc105 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":88:33)
#loc106 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":88:32)
#loc107 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":90:16)
#loc108 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":94:1)
#loc109 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":98:1)
#loc110 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":96:5)
#loc111 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_struct_32.cpp":97:5)
#loc112 = loc(fused[#loc1, #loc2])
#loc113 = loc(fused[#loc4, #loc5])
#loc114 = loc(fused[#loc6, #loc7])
#loc115 = loc(fused[#loc8, #loc9])
#loc116 = loc(fused[#loc10, #loc11])
#loc117 = loc(fused[#loc12, #loc13])
#loc118 = loc(fused[#loc15, #loc14])
#loc119 = loc(fused[#loc16, #loc17])
#loc120 = loc(fused[#loc18, #loc19])
#loc121 = loc(fused[#loc21, #loc22])
#loc122 = loc(fused[#loc24, #loc22])
#loc123 = loc(fused[#loc27, #loc25])
#loc124 = loc(fused[#loc28, #loc29])
#loc125 = loc(fused[#loc30, #loc31])
#loc126 = loc(fused[#loc35, #loc36])
#loc127 = loc(fused[#loc37, #loc38])
#loc128 = loc(fused[#loc39, #loc40])
#loc129 = loc(fused[#loc41, #loc42])
#loc130 = loc(fused[#loc43, #loc44])
#loc131 = loc(fused[#loc45, #loc46])
#loc132 = loc(fused[#loc48, #loc47])
#loc133 = loc(fused[#loc49, #loc50])
#loc134 = loc(fused[#loc51, #loc52])
#loc135 = loc(fused[#loc56, #loc57])
#loc136 = loc(fused[#loc55, #loc57])
#loc137 = loc(fused[#loc54, #loc58])
#loc138 = loc(fused[#loc59, #loc58])
#loc139 = loc(fused[#loc60, #loc61])
#loc140 = loc(fused[#loc62, #loc63])
#loc141 = loc(fused[#loc64, #loc61])
#loc142 = loc(fused[#loc70, #loc68])
#loc143 = loc(fused[#loc71, #loc72])
#loc144 = loc(fused[#loc73, #loc74])
#loc145 = loc(fused[#loc78, #loc79])
#loc146 = loc(fused[#loc80, #loc81])
#loc147 = loc(fused[#loc82, #loc83])
#loc148 = loc(fused[#loc84, #loc85])
#loc149 = loc(fused[#loc86, #loc87])
#loc150 = loc(fused[#loc89, #loc88])
#loc151 = loc(fused[#loc90, #loc91])
#loc152 = loc(fused[#loc92, #loc93])
#loc153 = loc(fused[#loc95, #loc96])
#loc154 = loc(fused[#loc98, #loc96])
#loc155 = loc(fused[#loc101, #loc99])
#loc156 = loc(fused[#loc102, #loc103])
#loc157 = loc(fused[#loc104, #loc105])
#loc158 = loc(fused[#loc108, #loc109])
