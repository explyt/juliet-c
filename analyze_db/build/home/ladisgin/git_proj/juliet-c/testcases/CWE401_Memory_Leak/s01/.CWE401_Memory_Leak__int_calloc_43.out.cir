!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#loc9 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":27:23)
#loc10 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":27:30)
#loc43 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":51:27)
#loc44 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":51:34)
#loc65 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":70:27)
#loc66 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":70:34)
#loc117 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":108:10)
#loc118 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":108:14)
#loc119 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":108:20)
#loc120 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":108:32)
#loc137 = loc(fused[#loc9, #loc10])
#loc149 = loc(fused[#loc43, #loc44])
#loc156 = loc(fused[#loc65, #loc66])
#loc173 = loc(fused[#loc117, #loc118])
#loc174 = loc(fused[#loc119, #loc120])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_43.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @calloc(!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc133)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc134)
  cir.func private @printIntLine(!s32i) loc(#loc135)
  cir.func internal private @_ZN33CWE401_Memory_Leak__int_calloc_43L9badSourceERPi(%arg0: !cir.ptr<!cir.ptr<!s32i>> loc(fused[#loc9, #loc10])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc137)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc11)
    %1 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc12)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc13)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc13)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc138)
    %5 = cir.call @calloc(%3, %4) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc12)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc139)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc17)
    cir.store %6, %7 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc140)
    cir.scope {
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc20)
      %19 = cir.load %18 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc20)
      %20 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc21)
      %21 = cir.cmp(eq, %19, %20) : !cir.ptr<!s32i>, !cir.bool loc(#loc142)
      cir.if %21 {
        %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc23)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc24)
        %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc25)
        cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc23)
      } loc(#loc143)
    } loc(#loc141)
    %8 = cir.const #cir.int<5> : !s32i loc(#loc26)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc27)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc27)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc29)
    cir.store %8, %12 : !s32i, !cir.ptr<!s32i> loc(#loc144)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc30)
    %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc30)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc31)
    %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc32)
    %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc30)
    cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc33)
    cir.return loc(#loc8)
  } loc(#loc136)
  cir.func @_ZN33CWE401_Memory_Leak__int_calloc_433badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc146)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc38)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc147)
    cir.call @_ZN33CWE401_Memory_Leak__int_calloc_43L9badSourceERPi(%0) : (!cir.ptr<!cir.ptr<!s32i>>) -> () loc(#loc40)
    cir.return loc(#loc35)
  } loc(#loc145)
  cir.func internal private @_ZN33CWE401_Memory_Leak__int_calloc_43L13goodG2BSourceERPi(%arg0: !cir.ptr<!cir.ptr<!s32i>> loc(fused[#loc43, #loc44])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc149)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc45)
    %1 = cir.const #cir.int<100> : !s32i loc(#loc46)
    %2 = cir.cast(integral, %1 : !s32i), !u64i loc(#loc46)
    %3 = cir.const #cir.int<4> : !u64i loc(#loc46)
    %4 = cir.binop(mul, %2, %3) : !u64i loc(#loc46)
    %5 = cir.alloca !u8i, !cir.ptr<!u8i>, %4 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc46)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc46)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc46)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc47)
    cir.store %7, %8 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc150)
    %9 = cir.const #cir.int<5> : !s32i loc(#loc48)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc49)
    %11 = cir.load %10 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc49)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc50)
    %13 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %12 : !s32i), !cir.ptr<!s32i> loc(#loc51)
    cir.store %9, %13 : !s32i, !cir.ptr<!s32i> loc(#loc151)
    %14 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc52)
    %15 = cir.load %14 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc52)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc53)
    %17 = cir.ptr_stride(%15 : !cir.ptr<!s32i>, %16 : !s32i), !cir.ptr<!s32i> loc(#loc54)
    %18 = cir.load %17 : !cir.ptr<!s32i>, !s32i loc(#loc52)
    cir.call @printIntLine(%18) : (!s32i) -> () loc(#loc55)
    cir.return loc(#loc42)
  } loc(#loc148)
  cir.func internal private @_ZN33CWE401_Memory_Leak__int_calloc_43L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc153)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc60)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc154)
    cir.call @_ZN33CWE401_Memory_Leak__int_calloc_43L13goodG2BSourceERPi(%0) : (!cir.ptr<!cir.ptr<!s32i>>) -> () loc(#loc62)
    cir.return loc(#loc57)
  } loc(#loc152)
  cir.func internal private @_ZN33CWE401_Memory_Leak__int_calloc_43L13goodB2GSourceERPi(%arg0: !cir.ptr<!cir.ptr<!s32i>> loc(fused[#loc65, #loc66])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, ["data", init, const] {alignment = 8 : i64} loc(#loc156)
    cir.store %arg0, %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>> loc(#loc67)
    %1 = cir.get_global @calloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i, !u64i)>> loc(#loc68)
    %2 = cir.const #cir.int<100> : !s32i loc(#loc69)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc69)
    %4 = cir.const #cir.int<4> : !u64i loc(#loc157)
    %5 = cir.call @calloc(%3, %4) : (!u64i, !u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc68)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc158)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc73)
    cir.store %6, %7 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc159)
    cir.scope {
      %18 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc76)
      %19 = cir.load %18 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc76)
      %20 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc77)
      %21 = cir.cmp(eq, %19, %20) : !cir.ptr<!s32i>, !cir.bool loc(#loc161)
      cir.if %21 {
        %22 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc79)
        %23 = cir.const #cir.int<1> : !s32i loc(#loc80)
        %24 = cir.unary(minus, %23) : !s32i, !s32i loc(#loc81)
        cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc79)
      } loc(#loc162)
    } loc(#loc160)
    %8 = cir.const #cir.int<5> : !s32i loc(#loc82)
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc83)
    %10 = cir.load %9 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc83)
    %11 = cir.const #cir.int<0> : !s32i loc(#loc84)
    %12 = cir.ptr_stride(%10 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc85)
    cir.store %8, %12 : !s32i, !cir.ptr<!s32i> loc(#loc163)
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!cir.ptr<!s32i>>>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc86)
    %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc86)
    %15 = cir.const #cir.int<0> : !s32i loc(#loc87)
    %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc88)
    %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc86)
    cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc89)
    cir.return loc(#loc64)
  } loc(#loc155)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc164)
  cir.func internal private @_ZN33CWE401_Memory_Leak__int_calloc_43L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["data"] {alignment = 8 : i64} loc(#loc166)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s32i> loc(#loc96)
    cir.store %1, %0 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc167)
    cir.call @_ZN33CWE401_Memory_Leak__int_calloc_43L13goodB2GSourceERPi(%0) : (!cir.ptr<!cir.ptr<!s32i>>) -> () loc(#loc98)
    %2 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc99)
    %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc100)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc100)
    cir.call @free(%4) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc99)
    cir.return loc(#loc93)
  } loc(#loc165)
  cir.func @_ZN33CWE401_Memory_Leak__int_calloc_434goodEv() extra(#fn_attr1) {
    cir.call @_ZN33CWE401_Memory_Leak__int_calloc_43L7goodG2BEv() : () -> () loc(#loc103)
    cir.call @_ZN33CWE401_Memory_Leak__int_calloc_43L7goodB2GEv() : () -> () loc(#loc104)
    cir.return loc(#loc102)
  } loc(#loc168)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc169)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc170)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc171)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc111)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc112)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc113)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc114)
  cir.func @main(%arg0: !s32i loc(fused[#loc117, #loc118]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc119, #loc120])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc173)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc174)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc116)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc121)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc121)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc122)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc123)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc123)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc124)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc111)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc111)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc125)
    cir.call @_ZN33CWE401_Memory_Leak__int_calloc_434goodEv() : () -> () loc(#loc126)
    %8 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc112)
    %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc112)
    cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc127)
    %10 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc113)
    %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc113)
    cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc128)
    cir.call @_ZN33CWE401_Memory_Leak__int_calloc_433badEv() : () -> () loc(#loc129)
    %12 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc114)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc114)
    cir.call @printLine(%13) : (!cir.ptr<!s8i>) -> () loc(#loc130)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc131)
    cir.store %14, %2 : !s32i, !cir.ptr<!s32i> loc(#loc175)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc175)
    cir.return %15 : !s32i loc(#loc175)
  } loc(#loc172)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE401_Memory_Leak/s01/CWE401_Memory_Leak__int_calloc_43.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":675:1)
#loc2 = loc("/usr/include/stdlib.h":676:14)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc7 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":27:1)
#loc8 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":35:1)
#loc11 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":28:1)
#loc12 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":30:19)
#loc13 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":30:26)
#loc14 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":30:31)
#loc15 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":30:41)
#loc16 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":30:42)
#loc17 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":30:5)
#loc18 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":31:5)
#loc19 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":31:33)
#loc20 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":31:9)
#loc21 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":31:17)
#loc22 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":31:23)
#loc23 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":31:24)
#loc24 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":31:30)
#loc25 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":31:29)
#loc26 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":33:15)
#loc27 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":33:5)
#loc28 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":33:10)
#loc29 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":33:11)
#loc30 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":34:18)
#loc31 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":34:23)
#loc32 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":34:24)
#loc33 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":34:5)
#loc34 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":37:1)
#loc35 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":44:1)
#loc36 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":39:5)
#loc37 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":39:11)
#loc38 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":40:12)
#loc39 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":40:5)
#loc40 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":41:5)
#loc41 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":51:1)
#loc42 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":58:1)
#loc45 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":52:1)
#loc46 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":54:19)
#loc47 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":54:5)
#loc48 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":56:15)
#loc49 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":56:5)
#loc50 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":56:10)
#loc51 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":56:11)
#loc52 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":57:18)
#loc53 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":57:23)
#loc54 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":57:24)
#loc55 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":57:5)
#loc56 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":60:1)
#loc57 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":67:1)
#loc58 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":62:5)
#loc59 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":62:11)
#loc60 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":63:12)
#loc61 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":63:5)
#loc62 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":64:5)
#loc63 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":70:1)
#loc64 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":78:1)
#loc67 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":71:1)
#loc68 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":73:19)
#loc69 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":73:26)
#loc70 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":73:31)
#loc71 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":73:41)
#loc72 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":73:42)
#loc73 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":73:5)
#loc74 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":74:5)
#loc75 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":74:33)
#loc76 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":74:9)
#loc77 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":74:17)
#loc78 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":74:23)
#loc79 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":74:24)
#loc80 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":74:30)
#loc81 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":74:29)
#loc82 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":76:15)
#loc83 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":76:5)
#loc84 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":76:10)
#loc85 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":76:11)
#loc86 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":77:18)
#loc87 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":77:23)
#loc88 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":77:24)
#loc89 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":77:5)
#loc90 = loc("/usr/include/stdlib.h":687:1)
#loc91 = loc("/usr/include/stdlib.h":687:32)
#loc92 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":80:1)
#loc93 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":87:1)
#loc94 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":82:5)
#loc95 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":82:11)
#loc96 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":83:12)
#loc97 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":83:5)
#loc98 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":84:5)
#loc99 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":86:5)
#loc100 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":86:10)
#loc101 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":89:1)
#loc102 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":93:1)
#loc103 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":91:5)
#loc104 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":92:5)
#loc105 = loc("/usr/include/stdlib.h":575:1)
#loc106 = loc("/usr/include/stdlib.h":575:41)
#loc107 = loc("/usr/include/time.h":76:1)
#loc108 = loc("/usr/include/time.h":76:38)
#loc109 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc110 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc111 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":113:15)
#loc112 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":115:15)
#loc113 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":118:15)
#loc114 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":120:15)
#loc115 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":108:1)
#loc116 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":123:1)
#loc121 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":109:1)
#loc122 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":111:27)
#loc123 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":111:22)
#loc124 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":111:5)
#loc125 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":113:5)
#loc126 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":114:5)
#loc127 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":115:5)
#loc128 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":118:5)
#loc129 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":119:5)
#loc130 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":120:5)
#loc131 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":122:12)
#loc132 = loc("CWE401_Memory_Leak__int_calloc_43.cpp":122:5)
#loc133 = loc(fused[#loc1, #loc2])
#loc134 = loc(fused[#loc3, #loc4])
#loc135 = loc(fused[#loc5, #loc6])
#loc136 = loc(fused[#loc7, #loc8])
#loc138 = loc(fused[#loc14, #loc15])
#loc139 = loc(fused[#loc12, #loc16])
#loc140 = loc(fused[#loc17, #loc16])
#loc141 = loc(fused[#loc18, #loc19])
#loc142 = loc(fused[#loc20, #loc21])
#loc143 = loc(fused[#loc22, #loc19])
#loc144 = loc(fused[#loc27, #loc26])
#loc145 = loc(fused[#loc34, #loc35])
#loc146 = loc(fused[#loc36, #loc37])
#loc147 = loc(fused[#loc39, #loc38])
#loc148 = loc(fused[#loc41, #loc42])
#loc150 = loc(fused[#loc47, #loc46])
#loc151 = loc(fused[#loc49, #loc48])
#loc152 = loc(fused[#loc56, #loc57])
#loc153 = loc(fused[#loc58, #loc59])
#loc154 = loc(fused[#loc61, #loc60])
#loc155 = loc(fused[#loc63, #loc64])
#loc157 = loc(fused[#loc70, #loc71])
#loc158 = loc(fused[#loc68, #loc72])
#loc159 = loc(fused[#loc73, #loc72])
#loc160 = loc(fused[#loc74, #loc75])
#loc161 = loc(fused[#loc76, #loc77])
#loc162 = loc(fused[#loc78, #loc75])
#loc163 = loc(fused[#loc83, #loc82])
#loc164 = loc(fused[#loc90, #loc91])
#loc165 = loc(fused[#loc92, #loc93])
#loc166 = loc(fused[#loc94, #loc95])
#loc167 = loc(fused[#loc97, #loc96])
#loc168 = loc(fused[#loc101, #loc102])
#loc169 = loc(fused[#loc105, #loc106])
#loc170 = loc(fused[#loc107, #loc108])
#loc171 = loc(fused[#loc109, #loc110])
#loc172 = loc(fused[#loc115, #loc116])
#loc175 = loc(fused[#loc132, #loc131])
