!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_memmove_11.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrue(...) -> !s32i loc(#loc214)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc215)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc216)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_memmove_11_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc218)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc219)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc220)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc14)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc14)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc14)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc14)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc14)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc221)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc14)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc14)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc220)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc16)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc16)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc16)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc16)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc16)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc16)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc16)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc221)
    %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc17)
    %20 = cir.const #cir.int<65> : !s32i loc(#loc18)
    %21 = cir.const #cir.int<50> : !s32i loc(#loc19)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc20)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc19)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc19)
    cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc222)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc23)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc23)
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %28 = cir.const #cir.int<50> : !s32i loc(#loc25)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc26)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc25)
    %31 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc27)
    cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc223)
    %32 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc28)
    %34 = cir.const #cir.int<65> : !s32i loc(#loc29)
    %35 = cir.const #cir.int<100> : !s32i loc(#loc30)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc30)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc30)
    cir.libc.memset %38 bytes from %33 set to %34 : !cir.ptr<!void>, !s32i, !u64i loc(#loc224)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc34)
    %41 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
    %42 = cir.const #cir.int<100> : !s32i loc(#loc36)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc36)
    %45 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc38)
    cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc225)
    cir.br ^bb1 loc(#loc226)
  ^bb1:  // pred: ^bb0
    %46 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc227)
    %47 = cir.cast(bitcast, %46 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc227)
    %48 = cir.call %47() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc41)
    %49 = cir.cast(int_to_bool, %48 : !s32i), !cir.bool loc(#loc41)
    cir.brcond %49 ^bb2, ^bb3 loc(#loc228)
  ^bb2:  // pred: ^bb1
    %50 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    cir.store %50, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc229)
    cir.br ^bb3 loc(#loc40)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc40)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc230)
  ^bb5:  // pred: ^bb4
    %51 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc48)
    %52 = cir.cast(bitcast, %51 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc48)
    %53 = cir.const #cir.int<67> : !s32i loc(#loc49)
    %54 = cir.const #cir.int<100> : !s32i loc(#loc50)
    %55 = cir.const #cir.int<1> : !s32i loc(#loc51)
    %56 = cir.binop(sub, %54, %55) nsw : !s32i loc(#loc50)
    %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc50)
    cir.libc.memset %57 bytes from %52 set to %53 : !cir.ptr<!void>, !s32i, !u64i loc(#loc231)
    %58 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %59 = cir.cast(integral, %58 : !s32i), !s8i loc(#loc54)
    %60 = cir.const #cir.int<100> : !s32i loc(#loc55)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %62 = cir.binop(sub, %60, %61) nsw : !s32i loc(#loc55)
    %63 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc57)
    %64 = cir.ptr_stride(%63 : !cir.ptr<!s8i>, %62 : !s32i), !cir.ptr<!s8i> loc(#loc57)
    cir.store %59, %64 : !s8i, !cir.ptr<!s8i> loc(#loc232)
    %65 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc58)
    %66 = cir.cast(bitcast, %65 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc58)
    %67 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc59)
    %68 = cir.cast(bitcast, %67 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc59)
    %69 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc60)
    %70 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc61)
    %71 = cir.call @strlen(%70) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc60)
    %72 = cir.const #cir.int<1> : !u64i loc(#loc233)
    %73 = cir.binop(mul, %71, %72) : !u64i loc(#loc234)
    cir.libc.memmove %73 bytes from %68 to %66 : !cir.ptr<!void>, !u64i loc(#loc235)
    %74 = cir.const #cir.int<0> : !s32i loc(#loc66)
    %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc66)
    %76 = cir.const #cir.int<100> : !s32i loc(#loc67)
    %77 = cir.const #cir.int<1> : !s32i loc(#loc68)
    %78 = cir.binop(sub, %76, %77) nsw : !s32i loc(#loc67)
    %79 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc69)
    %80 = cir.ptr_stride(%79 : !cir.ptr<!s8i>, %78 : !s32i), !cir.ptr<!s8i> loc(#loc69)
    cir.store %75, %80 : !s8i, !cir.ptr<!s8i> loc(#loc236)
    %81 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc70)
    cir.call @printLine(%81) : (!cir.ptr<!s8i>) -> () loc(#loc71)
    cir.br ^bb6 loc(#loc47)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc8)
  } loc(#loc217)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_memmove_11_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc238)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc74)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc239)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc76)
    cir.return loc(#loc73)
  } loc(#loc237)
  cir.func no_proto private @globalReturnsFalse(...) -> !s32i loc(#loc240)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc80)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc242)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc243)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc244)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc88)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc88)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc88)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc88)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc88)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc245)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc88)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc88)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc244)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc90)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc90)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc90)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc90)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc90)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc90)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc90)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc245)
    %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc91)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc91)
    %20 = cir.const #cir.int<65> : !s32i loc(#loc92)
    %21 = cir.const #cir.int<50> : !s32i loc(#loc93)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc93)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc93)
    cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc246)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc97)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc97)
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
    %28 = cir.const #cir.int<50> : !s32i loc(#loc99)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc100)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc99)
    %31 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc101)
    cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc247)
    %32 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc102)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc102)
    %34 = cir.const #cir.int<65> : !s32i loc(#loc103)
    %35 = cir.const #cir.int<100> : !s32i loc(#loc104)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc104)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc104)
    cir.libc.memset %38 bytes from %33 set to %34 : !cir.ptr<!void>, !s32i, !u64i loc(#loc248)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc108)
    %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc108)
    %41 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc109)
    %42 = cir.const #cir.int<100> : !s32i loc(#loc110)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc111)
    %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc110)
    %45 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc112)
    cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc249)
    cir.br ^bb1 loc(#loc250)
  ^bb1:  // pred: ^bb0
    %46 = cir.get_global @globalReturnsFalse : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc251)
    %47 = cir.cast(bitcast, %46 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc251)
    %48 = cir.call %47() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc115)
    %49 = cir.cast(int_to_bool, %48 : !s32i), !cir.bool loc(#loc115)
    cir.brcond %49 ^bb2, ^bb3 loc(#loc252)
  ^bb2:  // pred: ^bb1
    %50 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc80)
    %51 = cir.cast(array_to_ptrdecay, %50 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc80)
    cir.call @printLine(%51) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    cir.br ^bb4 loc(#loc118)
  ^bb3:  // pred: ^bb1
    %52 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc121)
    cir.store %52, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc253)
    cir.br ^bb4 loc(#loc114)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc114)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc254)
  ^bb6:  // pred: ^bb5
    %53 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc125)
    %54 = cir.cast(bitcast, %53 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc125)
    %55 = cir.const #cir.int<67> : !s32i loc(#loc126)
    %56 = cir.const #cir.int<100> : !s32i loc(#loc127)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc128)
    %58 = cir.binop(sub, %56, %57) nsw : !s32i loc(#loc127)
    %59 = cir.cast(integral, %58 : !s32i), !u64i loc(#loc127)
    cir.libc.memset %59 bytes from %54 set to %55 : !cir.ptr<!void>, !s32i, !u64i loc(#loc255)
    %60 = cir.const #cir.int<0> : !s32i loc(#loc131)
    %61 = cir.cast(integral, %60 : !s32i), !s8i loc(#loc131)
    %62 = cir.const #cir.int<100> : !s32i loc(#loc132)
    %63 = cir.const #cir.int<1> : !s32i loc(#loc133)
    %64 = cir.binop(sub, %62, %63) nsw : !s32i loc(#loc132)
    %65 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc134)
    %66 = cir.ptr_stride(%65 : !cir.ptr<!s8i>, %64 : !s32i), !cir.ptr<!s8i> loc(#loc134)
    cir.store %61, %66 : !s8i, !cir.ptr<!s8i> loc(#loc256)
    %67 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc135)
    %68 = cir.cast(bitcast, %67 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc135)
    %69 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc136)
    %70 = cir.cast(bitcast, %69 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc136)
    %71 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc137)
    %72 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc138)
    %73 = cir.call @strlen(%72) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc137)
    %74 = cir.const #cir.int<1> : !u64i loc(#loc257)
    %75 = cir.binop(mul, %73, %74) : !u64i loc(#loc258)
    cir.libc.memmove %75 bytes from %70 to %68 : !cir.ptr<!void>, !u64i loc(#loc259)
    %76 = cir.const #cir.int<0> : !s32i loc(#loc143)
    %77 = cir.cast(integral, %76 : !s32i), !s8i loc(#loc143)
    %78 = cir.const #cir.int<100> : !s32i loc(#loc144)
    %79 = cir.const #cir.int<1> : !s32i loc(#loc145)
    %80 = cir.binop(sub, %78, %79) nsw : !s32i loc(#loc144)
    %81 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc146)
    %82 = cir.ptr_stride(%81 : !cir.ptr<!s8i>, %80 : !s32i), !cir.ptr<!s8i> loc(#loc146)
    cir.store %77, %82 : !s8i, !cir.ptr<!s8i> loc(#loc260)
    %83 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc147)
    cir.call @printLine(%83) : (!cir.ptr<!s8i>) -> () loc(#loc148)
    cir.br ^bb7 loc(#loc124)
  ^bb7:  // pred: ^bb6
    cir.return loc(#loc82)
  } loc(#loc241)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc262)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc263)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc264)
    %3 = cir.const #cir.int<50> : !s32i loc(#loc156)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc156)
    %5 = cir.const #cir.int<1> : !u64i loc(#loc156)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc156)
    %7 = cir.alloca !u8i, !cir.ptr<!u8i>, %6 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc156)
    %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc265)
    %9 = cir.cast(bitcast, %7 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc156)
    %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc156)
    cir.store %10, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc264)
    %11 = cir.const #cir.int<100> : !s32i loc(#loc158)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc158)
    %13 = cir.const #cir.int<1> : !u64i loc(#loc158)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc158)
    %15 = cir.alloca !u8i, !cir.ptr<!u8i>, %14 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc158)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc158)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc158)
    cir.store %17, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc265)
    %18 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc159)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc159)
    %20 = cir.const #cir.int<65> : !s32i loc(#loc160)
    %21 = cir.const #cir.int<50> : !s32i loc(#loc161)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc162)
    %23 = cir.binop(sub, %21, %22) nsw : !s32i loc(#loc161)
    %24 = cir.cast(integral, %23 : !s32i), !u64i loc(#loc161)
    cir.libc.memset %24 bytes from %19 set to %20 : !cir.ptr<!void>, !s32i, !u64i loc(#loc266)
    %25 = cir.const #cir.int<0> : !s32i loc(#loc165)
    %26 = cir.cast(integral, %25 : !s32i), !s8i loc(#loc165)
    %27 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc166)
    %28 = cir.const #cir.int<50> : !s32i loc(#loc167)
    %29 = cir.const #cir.int<1> : !s32i loc(#loc168)
    %30 = cir.binop(sub, %28, %29) nsw : !s32i loc(#loc167)
    %31 = cir.ptr_stride(%27 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc169)
    cir.store %26, %31 : !s8i, !cir.ptr<!s8i> loc(#loc267)
    %32 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc170)
    %33 = cir.cast(bitcast, %32 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc170)
    %34 = cir.const #cir.int<65> : !s32i loc(#loc171)
    %35 = cir.const #cir.int<100> : !s32i loc(#loc172)
    %36 = cir.const #cir.int<1> : !s32i loc(#loc173)
    %37 = cir.binop(sub, %35, %36) nsw : !s32i loc(#loc172)
    %38 = cir.cast(integral, %37 : !s32i), !u64i loc(#loc172)
    cir.libc.memset %38 bytes from %33 set to %34 : !cir.ptr<!void>, !s32i, !u64i loc(#loc268)
    %39 = cir.const #cir.int<0> : !s32i loc(#loc176)
    %40 = cir.cast(integral, %39 : !s32i), !s8i loc(#loc176)
    %41 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc177)
    %42 = cir.const #cir.int<100> : !s32i loc(#loc178)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc179)
    %44 = cir.binop(sub, %42, %43) nsw : !s32i loc(#loc178)
    %45 = cir.ptr_stride(%41 : !cir.ptr<!s8i>, %44 : !s32i), !cir.ptr<!s8i> loc(#loc180)
    cir.store %40, %45 : !s8i, !cir.ptr<!s8i> loc(#loc269)
    cir.br ^bb1 loc(#loc270)
  ^bb1:  // pred: ^bb0
    %46 = cir.get_global @globalReturnsTrue : !cir.ptr<!cir.func<!s32i (...)>> loc(#loc271)
    %47 = cir.cast(bitcast, %46 : !cir.ptr<!cir.func<!s32i (...)>>), !cir.ptr<!cir.func<!s32i ()>> loc(#loc271)
    %48 = cir.call %47() : (!cir.ptr<!cir.func<!s32i ()>>) -> !s32i loc(#loc183)
    %49 = cir.cast(int_to_bool, %48 : !s32i), !cir.bool loc(#loc183)
    cir.brcond %49 ^bb2, ^bb3 loc(#loc272)
  ^bb2:  // pred: ^bb1
    %50 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc186)
    cir.store %50, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc273)
    cir.br ^bb3 loc(#loc182)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc182)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc274)
  ^bb5:  // pred: ^bb4
    %51 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc190)
    %52 = cir.cast(bitcast, %51 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc190)
    %53 = cir.const #cir.int<67> : !s32i loc(#loc191)
    %54 = cir.const #cir.int<100> : !s32i loc(#loc192)
    %55 = cir.const #cir.int<1> : !s32i loc(#loc193)
    %56 = cir.binop(sub, %54, %55) nsw : !s32i loc(#loc192)
    %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc192)
    cir.libc.memset %57 bytes from %52 set to %53 : !cir.ptr<!void>, !s32i, !u64i loc(#loc275)
    %58 = cir.const #cir.int<0> : !s32i loc(#loc196)
    %59 = cir.cast(integral, %58 : !s32i), !s8i loc(#loc196)
    %60 = cir.const #cir.int<100> : !s32i loc(#loc197)
    %61 = cir.const #cir.int<1> : !s32i loc(#loc198)
    %62 = cir.binop(sub, %60, %61) nsw : !s32i loc(#loc197)
    %63 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc199)
    %64 = cir.ptr_stride(%63 : !cir.ptr<!s8i>, %62 : !s32i), !cir.ptr<!s8i> loc(#loc199)
    cir.store %59, %64 : !s8i, !cir.ptr<!s8i> loc(#loc276)
    %65 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc200)
    %66 = cir.cast(bitcast, %65 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc200)
    %67 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc201)
    %68 = cir.cast(bitcast, %67 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc201)
    %69 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc202)
    %70 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc203)
    %71 = cir.call @strlen(%70) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc202)
    %72 = cir.const #cir.int<1> : !u64i loc(#loc277)
    %73 = cir.binop(mul, %71, %72) : !u64i loc(#loc278)
    cir.libc.memmove %73 bytes from %68 to %66 : !cir.ptr<!void>, !u64i loc(#loc279)
    %74 = cir.const #cir.int<0> : !s32i loc(#loc208)
    %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc208)
    %76 = cir.const #cir.int<100> : !s32i loc(#loc209)
    %77 = cir.const #cir.int<1> : !s32i loc(#loc210)
    %78 = cir.binop(sub, %76, %77) nsw : !s32i loc(#loc209)
    %79 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc211)
    %80 = cir.ptr_stride(%79 : !cir.ptr<!s8i>, %78 : !s32i), !cir.ptr<!s8i> loc(#loc211)
    cir.store %75, %80 : !s8i, !cir.ptr<!s8i> loc(#loc280)
    %81 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc212)
    cir.call @printLine(%81) : (!cir.ptr<!s8i>) -> () loc(#loc213)
    cir.br ^bb6 loc(#loc189)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc150)
  } loc(#loc261)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_memmove_11.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":48:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":48:23)
#loc3 = loc("/usr/include/string.h":407:1)
#loc4 = loc("/usr/include/string.h":408:33)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":23:1)
#loc8 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":47:1)
#loc9 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":38:9)
#loc10 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":38:22)
#loc11 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":25:5)
#loc12 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":25:12)
#loc13 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":26:5)
#loc14 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":26:36)
#loc15 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":27:5)
#loc16 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":27:37)
#loc17 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":28:12)
#loc18 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":28:27)
#loc19 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":28:32)
#loc20 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":28:35)
#loc21 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":28:5)
#loc22 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":28:36)
#loc23 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":29:27)
#loc24 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":29:5)
#loc25 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":29:19)
#loc26 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":29:22)
#loc27 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":29:23)
#loc28 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":30:12)
#loc29 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":30:28)
#loc30 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":30:33)
#loc31 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":30:37)
#loc32 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":30:5)
#loc33 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":30:38)
#loc34 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":31:29)
#loc35 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":31:5)
#loc36 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":31:20)
#loc37 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":31:24)
#loc38 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":31:25)
#loc39 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":32:5)
#loc40 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":36:5)
#loc41 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":32:8)
#loc42 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":32:26)
#loc43 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":33:5)
#loc44 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":35:16)
#loc45 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":35:9)
#loc46 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":37:5)
#loc47 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":46:5)
#loc48 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":39:16)
#loc49 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":39:22)
#loc50 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":39:27)
#loc51 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":39:31)
#loc52 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":39:9)
#loc53 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":39:32)
#loc54 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":40:23)
#loc55 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":40:14)
#loc56 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":40:18)
#loc57 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":40:9)
#loc58 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":43:17)
#loc59 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":43:23)
#loc60 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":43:29)
#loc61 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":43:36)
#loc62 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":43:42)
#loc63 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":43:53)
#loc64 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":43:9)
#loc65 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":43:54)
#loc66 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":44:23)
#loc67 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":44:14)
#loc68 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":44:18)
#loc69 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":44:9)
#loc70 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":45:19)
#loc71 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":45:9)
#loc72 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":112:1)
#loc73 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":116:1)
#loc74 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":114:5)
#loc75 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":114:14)
#loc76 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":115:5)
#loc77 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":115:14)
#loc78 = loc("../../../testcasesupport/std_testcase_io.h":50:1)
#loc79 = loc("../../../testcasesupport/std_testcase_io.h":50:24)
#loc80 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":66:19)
#loc81 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":54:1)
#loc82 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":83:1)
#loc83 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":74:9)
#loc84 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":74:22)
#loc85 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":56:5)
#loc86 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":56:12)
#loc87 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":57:5)
#loc88 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":57:36)
#loc89 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":58:5)
#loc90 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":58:37)
#loc91 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":59:12)
#loc92 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":59:27)
#loc93 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":59:32)
#loc94 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":59:35)
#loc95 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":59:5)
#loc96 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":59:36)
#loc97 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":60:27)
#loc98 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":60:5)
#loc99 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":60:19)
#loc100 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":60:22)
#loc101 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":60:23)
#loc102 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":61:12)
#loc103 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":61:28)
#loc104 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":61:33)
#loc105 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":61:37)
#loc106 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":61:5)
#loc107 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":61:38)
#loc108 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":62:29)
#loc109 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":62:5)
#loc110 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":62:20)
#loc111 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":62:24)
#loc112 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":62:25)
#loc113 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":63:5)
#loc114 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":72:5)
#loc115 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":63:8)
#loc116 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":63:27)
#loc117 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":64:5)
#loc118 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":67:5)
#loc119 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":69:5)
#loc120 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":66:9)
#loc121 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":71:16)
#loc122 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":71:9)
#loc123 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":73:5)
#loc124 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":82:5)
#loc125 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":75:16)
#loc126 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":75:22)
#loc127 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":75:27)
#loc128 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":75:31)
#loc129 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":75:9)
#loc130 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":75:32)
#loc131 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":76:23)
#loc132 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":76:14)
#loc133 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":76:18)
#loc134 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":76:9)
#loc135 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":79:17)
#loc136 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":79:23)
#loc137 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":79:29)
#loc138 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":79:36)
#loc139 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":79:42)
#loc140 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":79:53)
#loc141 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":79:9)
#loc142 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":79:54)
#loc143 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":80:23)
#loc144 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":80:14)
#loc145 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":80:18)
#loc146 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":80:9)
#loc147 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":81:19)
#loc148 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":81:9)
#loc149 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":86:1)
#loc150 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":110:1)
#loc151 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":101:9)
#loc152 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":101:22)
#loc153 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":88:5)
#loc154 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":88:12)
#loc155 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":89:5)
#loc156 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":89:36)
#loc157 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":90:5)
#loc158 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":90:37)
#loc159 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":91:12)
#loc160 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":91:27)
#loc161 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":91:32)
#loc162 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":91:35)
#loc163 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":91:5)
#loc164 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":91:36)
#loc165 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":92:27)
#loc166 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":92:5)
#loc167 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":92:19)
#loc168 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":92:22)
#loc169 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":92:23)
#loc170 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":93:12)
#loc171 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":93:28)
#loc172 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":93:33)
#loc173 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":93:37)
#loc174 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":93:5)
#loc175 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":93:38)
#loc176 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":94:29)
#loc177 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":94:5)
#loc178 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":94:20)
#loc179 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":94:24)
#loc180 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":94:25)
#loc181 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":95:5)
#loc182 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":99:5)
#loc183 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":95:8)
#loc184 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":95:26)
#loc185 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":96:5)
#loc186 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":98:16)
#loc187 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":98:9)
#loc188 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":100:5)
#loc189 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":109:5)
#loc190 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":102:16)
#loc191 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":102:22)
#loc192 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":102:27)
#loc193 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":102:31)
#loc194 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":102:9)
#loc195 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":102:32)
#loc196 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":103:23)
#loc197 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":103:14)
#loc198 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":103:18)
#loc199 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":103:9)
#loc200 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":106:17)
#loc201 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":106:23)
#loc202 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":106:29)
#loc203 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":106:36)
#loc204 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":106:42)
#loc205 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":106:53)
#loc206 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":106:9)
#loc207 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":106:54)
#loc208 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":107:23)
#loc209 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":107:14)
#loc210 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":107:18)
#loc211 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":107:9)
#loc212 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":108:19)
#loc213 = loc("CWE126_Buffer_Overread__char_alloca_memmove_11.c":108:9)
#loc214 = loc(fused[#loc1, #loc2])
#loc215 = loc(fused[#loc3, #loc4])
#loc216 = loc(fused[#loc5, #loc6])
#loc217 = loc(fused[#loc7, #loc8])
#loc218 = loc(fused[#loc9, #loc10])
#loc219 = loc(fused[#loc11, #loc12])
#loc220 = loc(fused[#loc13, #loc14])
#loc221 = loc(fused[#loc15, #loc16])
#loc222 = loc(fused[#loc21, #loc22])
#loc223 = loc(fused[#loc24, #loc23])
#loc224 = loc(fused[#loc32, #loc33])
#loc225 = loc(fused[#loc35, #loc34])
#loc226 = loc(fused[#loc39, #loc40])
#loc227 = loc(fused[#loc41, #loc42])
#loc228 = loc(fused[#loc43, #loc40])
#loc229 = loc(fused[#loc45, #loc44])
#loc230 = loc(fused[#loc46, #loc47])
#loc231 = loc(fused[#loc52, #loc53])
#loc232 = loc(fused[#loc57, #loc54])
#loc233 = loc(fused[#loc62, #loc63])
#loc234 = loc(fused[#loc60, #loc63])
#loc235 = loc(fused[#loc64, #loc65])
#loc236 = loc(fused[#loc69, #loc66])
#loc237 = loc(fused[#loc72, #loc73])
#loc238 = loc(fused[#loc74, #loc75])
#loc239 = loc(fused[#loc76, #loc77])
#loc240 = loc(fused[#loc78, #loc79])
#loc241 = loc(fused[#loc81, #loc82])
#loc242 = loc(fused[#loc83, #loc84])
#loc243 = loc(fused[#loc85, #loc86])
#loc244 = loc(fused[#loc87, #loc88])
#loc245 = loc(fused[#loc89, #loc90])
#loc246 = loc(fused[#loc95, #loc96])
#loc247 = loc(fused[#loc98, #loc97])
#loc248 = loc(fused[#loc106, #loc107])
#loc249 = loc(fused[#loc109, #loc108])
#loc250 = loc(fused[#loc113, #loc114])
#loc251 = loc(fused[#loc115, #loc116])
#loc252 = loc(fused[#loc117, #loc118, #loc119, #loc114])
#loc253 = loc(fused[#loc122, #loc121])
#loc254 = loc(fused[#loc123, #loc124])
#loc255 = loc(fused[#loc129, #loc130])
#loc256 = loc(fused[#loc134, #loc131])
#loc257 = loc(fused[#loc139, #loc140])
#loc258 = loc(fused[#loc137, #loc140])
#loc259 = loc(fused[#loc141, #loc142])
#loc260 = loc(fused[#loc146, #loc143])
#loc261 = loc(fused[#loc149, #loc150])
#loc262 = loc(fused[#loc151, #loc152])
#loc263 = loc(fused[#loc153, #loc154])
#loc264 = loc(fused[#loc155, #loc156])
#loc265 = loc(fused[#loc157, #loc158])
#loc266 = loc(fused[#loc163, #loc164])
#loc267 = loc(fused[#loc166, #loc165])
#loc268 = loc(fused[#loc174, #loc175])
#loc269 = loc(fused[#loc177, #loc176])
#loc270 = loc(fused[#loc181, #loc182])
#loc271 = loc(fused[#loc183, #loc184])
#loc272 = loc(fused[#loc185, #loc182])
#loc273 = loc(fused[#loc187, #loc186])
#loc274 = loc(fused[#loc188, #loc189])
#loc275 = loc(fused[#loc194, #loc195])
#loc276 = loc(fused[#loc199, #loc196])
#loc277 = loc(fused[#loc204, #loc205])
#loc278 = loc(fused[#loc202, #loc205])
#loc279 = loc(fused[#loc206, #loc207])
#loc280 = loc(fused[#loc211, #loc208])
