!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc8 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":64:72)
#loc9 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":64:140)
#loc31 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":83:76)
#loc32 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":83:144)
#loc55 = loc(fused[#loc8, #loc9])
#loc64 = loc(fused[#loc31, #loc32])
!ty__CWE78_OS_Command_Injection__char_connect_socket_popen_67_structType = !cir.struct<struct "_CWE78_OS_Command_Injection__char_connect_socket_popen_67_structType" {!cir.ptr<!s8i>}>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @popen(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc52)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"w\00" : !cir.array<!s8i x 2>> : !cir.array<!s8i x 2> {alignment = 1 : i64} loc(#loc3)
  cir.func private @pclose(!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc53)
  cir.func @CWE78_OS_Command_Injection__char_connect_socket_popen_67b_badSink(%arg0: !ty__CWE78_OS_Command_Injection__char_connect_socket_popen_67_structType loc(fused[#loc8, #loc9])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc56)
    %1 = cir.alloca !ty__CWE78_OS_Command_Injection__char_connect_socket_popen_67_structType, !cir.ptr<!ty__CWE78_OS_Command_Injection__char_connect_socket_popen_67_structType>, ["myStruct", init] {alignment = 8 : i64} loc(#loc55)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc57)
    cir.store %arg0, %1 : !ty__CWE78_OS_Command_Injection__char_connect_socket_popen_67_structType, !cir.ptr<!ty__CWE78_OS_Command_Injection__char_connect_socket_popen_67_structType> loc(#loc14)
    %3 = cir.get_member %1[0] {name = "structFirst"} : !cir.ptr<!ty__CWE78_OS_Command_Injection__char_connect_socket_popen_67_structType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc15)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc57)
    cir.br ^bb1 loc(#loc58)
  ^bb1:  // pred: ^bb0
    %5 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc18)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc3)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc3)
    %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc19)
    cir.store %8, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc59)
    cir.br ^bb2 loc(#loc60)
  ^bb2:  // pred: ^bb1
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc24)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc25)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc25)
    %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc61)
    cir.brcond %12 ^bb3, ^bb4 loc(#loc62)
  ^bb3:  // pred: ^bb2
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc27)
    %14 = cir.call @pclose(%13) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc28)
    cir.br ^bb4 loc(#loc23)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc23)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc17)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc7)
  } loc(#loc54)
  cir.func @CWE78_OS_Command_Injection__char_connect_socket_popen_67b_goodG2BSink(%arg0: !ty__CWE78_OS_Command_Injection__char_connect_socket_popen_67_structType loc(fused[#loc31, #loc32])) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>>, ["pipe"] {alignment = 8 : i64} loc(#loc65)
    %1 = cir.alloca !ty__CWE78_OS_Command_Injection__char_connect_socket_popen_67_structType, !cir.ptr<!ty__CWE78_OS_Command_Injection__char_connect_socket_popen_67_structType>, ["myStruct", init] {alignment = 8 : i64} loc(#loc64)
    %2 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc66)
    cir.store %arg0, %1 : !ty__CWE78_OS_Command_Injection__char_connect_socket_popen_67_structType, !cir.ptr<!ty__CWE78_OS_Command_Injection__char_connect_socket_popen_67_structType> loc(#loc37)
    %3 = cir.get_member %1[0] {name = "structFirst"} : !cir.ptr<!ty__CWE78_OS_Command_Injection__char_connect_socket_popen_67_structType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc15)
    %4 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc36)
    cir.store %4, %2 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc66)
    cir.br ^bb1 loc(#loc67)
  ^bb1:  // pred: ^bb0
    %5 = cir.load %2 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 2>> loc(#loc41)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 2>>), !cir.ptr<!s8i> loc(#loc41)
    %8 = cir.call @popen(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!ty__IO_FILE> loc(#loc42)
    cir.store %8, %0 : !cir.ptr<!ty__IO_FILE>, !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc68)
    cir.br ^bb2 loc(#loc69)
  ^bb2:  // pred: ^bb1
    %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc47)
    %10 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc48)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!void>), !cir.ptr<!ty__IO_FILE> loc(#loc48)
    %12 = cir.cmp(ne, %9, %11) : !cir.ptr<!ty__IO_FILE>, !cir.bool loc(#loc70)
    cir.brcond %12 ^bb3, ^bb4 loc(#loc71)
  ^bb3:  // pred: ^bb2
    %13 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc50)
    %14 = cir.call @pclose(%13) : (!cir.ptr<!ty__IO_FILE>) -> !s32i loc(#loc51)
    cir.br ^bb4 loc(#loc46)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc46)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc39)
  ^bb6:  // pred: ^bb5
    cir.return loc(#loc30)
  } loc(#loc63)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s01/CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":0:0)
#loc1 = loc("/usr/include/stdio.h":893:1)
#loc2 = loc("/usr/include/stdio.h":894:3)
#loc3 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":70:28)
#loc4 = loc("/usr/include/stdio.h":887:1)
#loc5 = loc("/usr/include/stdio.h":887:36)
#loc6 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":64:1)
#loc7 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":76:1)
#loc10 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":68:9)
#loc11 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":68:15)
#loc12 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":66:5)
#loc13 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":66:28)
#loc14 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":65:1)
#loc15 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":59:12)
#loc16 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":67:5)
#loc17 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":75:5)
#loc18 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":70:22)
#loc19 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":70:16)
#loc20 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":70:9)
#loc21 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":70:31)
#loc22 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":71:9)
#loc23 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":74:9)
#loc24 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":71:13)
#loc25 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":71:21)
#loc26 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":72:9)
#loc27 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":73:20)
#loc28 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":73:13)
#loc29 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":83:1)
#loc30 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":95:1)
#loc33 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":87:9)
#loc34 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":87:15)
#loc35 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":85:5)
#loc36 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":85:28)
#loc37 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":84:1)
#loc38 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":86:5)
#loc39 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":94:5)
#loc40 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":89:22)
#loc41 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":89:28)
#loc42 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":89:16)
#loc43 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":89:9)
#loc44 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":89:31)
#loc45 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":90:9)
#loc46 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":93:9)
#loc47 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":90:13)
#loc48 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":90:21)
#loc49 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":91:9)
#loc50 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":92:20)
#loc51 = loc("CWE78_OS_Command_Injection__char_connect_socket_popen_67b.c":92:13)
#loc52 = loc(fused[#loc1, #loc2])
#loc53 = loc(fused[#loc4, #loc5])
#loc54 = loc(fused[#loc6, #loc7])
#loc56 = loc(fused[#loc10, #loc11])
#loc57 = loc(fused[#loc12, #loc13])
#loc58 = loc(fused[#loc16, #loc17])
#loc59 = loc(fused[#loc20, #loc21])
#loc60 = loc(fused[#loc22, #loc23])
#loc61 = loc(fused[#loc24, #loc25])
#loc62 = loc(fused[#loc26, #loc23])
#loc63 = loc(fused[#loc29, #loc30])
#loc65 = loc(fused[#loc33, #loc34])
#loc66 = loc(fused[#loc35, #loc36])
#loc67 = loc(fused[#loc38, #loc39])
#loc68 = loc(fused[#loc43, #loc44])
#loc69 = loc(fused[#loc45, #loc46])
#loc70 = loc(fused[#loc47, #loc48])
#loc71 = loc(fused[#loc49, #loc46])
