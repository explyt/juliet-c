!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rename(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc39)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"oldbadfilename.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc3)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"newbadfilename.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc4)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc40)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"rename failed!\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc7)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16_bad() extra(#fn_attr1) {
    cir.br ^bb1 loc(#loc42)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc42)
  ^bb2:  // pred: ^bb1
    %0 = cir.const #cir.int<1> : !s32i loc(#loc12)
    %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc12)
    cir.brcond %1 ^bb3, ^bb8 loc(#loc12)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc43)
  ^bb4:  // pred: ^bb3
    %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc3)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc3)
    %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc4)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc4)
    %6 = cir.call @rename(%3, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc15)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc16)
    %8 = cir.cmp(eq, %6, %7) : !s32i, !cir.bool loc(#loc44)
    cir.brcond %8 ^bb5, ^bb6 loc(#loc45)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc7)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc7)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc18)
    cir.br ^bb6 loc(#loc14)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc14)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc19)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc11)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc9)
  } loc(#loc41)
  cir.func no_proto @CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<!void ()>> loc(#loc47)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc22)
    cir.return loc(#loc21)
  } loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"oldgoodfilename.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc24)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"newgoodfilename.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc25)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.br ^bb1 loc(#loc49)
  ^bb1:  // pred: ^bb0
    cir.br ^bb2 loc(#loc49)
  ^bb2:  // pred: ^bb1
    %0 = cir.const #cir.int<1> : !s32i loc(#loc30)
    %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc30)
    cir.brcond %1 ^bb3, ^bb8 loc(#loc30)
  ^bb3:  // pred: ^bb2
    cir.br ^bb4 loc(#loc50)
  ^bb4:  // pred: ^bb3
    %2 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc24)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc24)
    %4 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc25)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc25)
    %6 = cir.call @rename(%3, %5) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc33)
    %7 = cir.const #cir.int<0> : !s32i loc(#loc34)
    %8 = cir.cmp(ne, %6, %7) : !s32i, !cir.bool loc(#loc51)
    cir.brcond %8 ^bb5, ^bb6 loc(#loc52)
  ^bb5:  // pred: ^bb4
    %9 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc36)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc36)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc37)
    cir.br ^bb6 loc(#loc32)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc32)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc38)
  ^bb8:  // 2 preds: ^bb2, ^bb7
    cir.br ^bb9 loc(#loc29)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc27)
  } loc(#loc48)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE253_Incorrect_Check_of_Function_Return_Value/CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":0:0)
#loc1 = loc("/usr/include/stdio.h":160:1)
#loc2 = loc("/usr/include/stdio.h":160:58)
#loc3 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":41:20)
#loc4 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":41:39)
#loc5 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc6 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc7 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":43:23)
#loc8 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":35:1)
#loc9 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":47:1)
#loc10 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":37:5)
#loc11 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":46:5)
#loc12 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":37:11)
#loc13 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":41:9)
#loc14 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":44:9)
#loc15 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":41:13)
#loc16 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":41:61)
#loc17 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":42:9)
#loc18 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":43:13)
#loc19 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":45:9)
#loc20 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":67:1)
#loc21 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":70:1)
#loc22 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":69:5)
#loc23 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":69:11)
#loc24 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":59:20)
#loc25 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":59:40)
#loc26 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":54:1)
#loc27 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":65:1)
#loc28 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":56:5)
#loc29 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":64:5)
#loc30 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":56:11)
#loc31 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":59:9)
#loc32 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":62:9)
#loc33 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":59:13)
#loc34 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":59:63)
#loc35 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":60:9)
#loc36 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":61:23)
#loc37 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":61:13)
#loc38 = loc("CWE253_Incorrect_Check_of_Function_Return_Value__char_rename_16.c":63:9)
#loc39 = loc(fused[#loc1, #loc2])
#loc40 = loc(fused[#loc5, #loc6])
#loc41 = loc(fused[#loc8, #loc9])
#loc42 = loc(fused[#loc10, #loc11])
#loc43 = loc(fused[#loc13, #loc14])
#loc44 = loc(fused[#loc15, #loc16])
#loc45 = loc(fused[#loc17, #loc14])
#loc46 = loc(fused[#loc20, #loc21])
#loc47 = loc(fused[#loc22, #loc23])
#loc48 = loc(fused[#loc26, #loc27])
#loc49 = loc(fused[#loc28, #loc29])
#loc50 = loc(fused[#loc31, #loc32])
#loc51 = loc(fused[#loc33, #loc34])
#loc52 = loc(fused[#loc35, #loc32])
