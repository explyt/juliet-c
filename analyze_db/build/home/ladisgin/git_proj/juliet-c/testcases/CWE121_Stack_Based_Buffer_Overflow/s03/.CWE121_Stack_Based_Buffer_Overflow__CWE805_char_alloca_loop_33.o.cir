!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc120)
  cir.func @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_333badEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc122)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc123)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc124)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc125)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc126)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc127)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc14)
    %6 = cir.const #cir.int<50> : !s32i loc(#loc16)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc16)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc16)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc16)
    %10 = cir.alloca !u8i, !cir.ptr<!u8i>, %9 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc16)
    %11 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc128)
    %12 = cir.cast(bitcast, %10 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc16)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc16)
    cir.store %13, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc127)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc18)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc18)
    %16 = cir.const #cir.int<1> : !u64i loc(#loc18)
    %17 = cir.binop(mul, %15, %16) : !u64i loc(#loc18)
    %18 = cir.alloca !u8i, !cir.ptr<!u8i>, %17 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc18)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc18)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc18)
    cir.store %20, %11 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc128)
    %21 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
    cir.store %21, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc129)
    %22 = cir.const #cir.int<0> : !s8i loc(#loc21)
    %23 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc23)
    %25 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc24)
    cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc130)
    cir.br ^bb1 loc(#loc131)
  ^bb1:  // pred: ^bb0
    %26 = cir.load %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc6)
    %27 = cir.load %26 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc6)
    cir.store %27, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc122)
    cir.br ^bb2 loc(#loc132)
  ^bb2:  // pred: ^bb1
    %28 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc29)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc29)
    %30 = cir.const #cir.int<67> : !s8i loc(#loc30)
    %31 = cir.cast(integral, %30 : !s8i), !s32i loc(#loc30)
    %32 = cir.const #cir.int<100> : !s32i loc(#loc31)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc32)
    %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc31)
    %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc31)
    cir.libc.memset %35 bytes from %29 set to %31 : !cir.ptr<!void>, !s32i, !u64i loc(#loc133)
    %36 = cir.const #cir.int<0> : !s8i loc(#loc35)
    %37 = cir.const #cir.int<100> : !s32i loc(#loc36)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc37)
    %39 = cir.binop(sub, %37, %38) nsw : !s32i loc(#loc36)
    %40 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc38)
    %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !s32i), !cir.ptr<!s8i> loc(#loc38)
    cir.store %36, %41 : !s8i, !cir.ptr<!s8i> loc(#loc134)
    cir.br ^bb3 loc(#loc135)
  ^bb3:  // pred: ^bb2
    %42 = cir.const #cir.int<0> : !s32i loc(#loc41)
    %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc41)
    cir.store %43, %1 : !u64i, !cir.ptr<!u64i> loc(#loc136)
    cir.br ^bb4 loc(#loc135)
  ^bb4:  // 2 preds: ^bb3, ^bb6
    %44 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc43)
    %45 = cir.const #cir.int<100> : !s32i loc(#loc44)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc44)
    %47 = cir.cmp(lt, %44, %46) : !u64i, !cir.bool loc(#loc137)
    cir.brcond %47 ^bb5, ^bb7 loc(#loc137)
  ^bb5:  // pred: ^bb4
    %48 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc45)
    %49 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc46)
    %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !u64i), !cir.ptr<!s8i> loc(#loc46)
    %51 = cir.load %50 : !cir.ptr<!s8i>, !s8i loc(#loc46)
    %52 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
    %53 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc48)
    %54 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %53 : !u64i), !cir.ptr<!s8i> loc(#loc49)
    cir.store %51, %54 : !s8i, !cir.ptr<!s8i> loc(#loc138)
    cir.br ^bb6 loc(#loc40)
  ^bb6:  // pred: ^bb5
    %55 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc51)
    %56 = cir.unary(inc, %55) : !u64i, !u64i loc(#loc52)
    cir.store %56, %1 : !u64i, !cir.ptr<!u64i> loc(#loc139)
    cir.br ^bb4 loc(#loc135)
  ^bb7:  // pred: ^bb4
    cir.br ^bb8 loc(#loc40)
  ^bb8:  // pred: ^bb7
    %57 = cir.const #cir.int<0> : !s8i loc(#loc53)
    %58 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc54)
    %59 = cir.const #cir.int<100> : !s32i loc(#loc55)
    %60 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %61 = cir.binop(sub, %59, %60) nsw : !s32i loc(#loc55)
    %62 = cir.ptr_stride(%58 : !cir.ptr<!s8i>, %61 : !s32i), !cir.ptr<!s8i> loc(#loc57)
    cir.store %57, %62 : !s8i, !cir.ptr<!s8i> loc(#loc140)
    %63 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%63) : (!cir.ptr<!s8i>) -> () loc(#loc59)
    cir.br ^bb9 loc(#loc28)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc26)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc4)
  } loc(#loc121)
  cir.func internal private @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33L7goodG2BEv() extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc142)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc143)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc144)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc145)
    %4 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataRef", init, const] {alignment = 8 : i64} loc(#loc146)
    %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc147)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc71)
    %6 = cir.const #cir.int<50> : !s32i loc(#loc73)
    %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc73)
    %8 = cir.const #cir.int<1> : !u64i loc(#loc73)
    %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc73)
    %10 = cir.alloca !u8i, !cir.ptr<!u8i>, %9 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc73)
    %11 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc148)
    %12 = cir.cast(bitcast, %10 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc73)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc73)
    cir.store %13, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc147)
    %14 = cir.const #cir.int<100> : !s32i loc(#loc75)
    %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc75)
    %16 = cir.const #cir.int<1> : !u64i loc(#loc75)
    %17 = cir.binop(mul, %15, %16) : !u64i loc(#loc75)
    %18 = cir.alloca !u8i, !cir.ptr<!u8i>, %17 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc75)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc75)
    %20 = cir.cast(bitcast, %19 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc75)
    cir.store %20, %11 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc148)
    %21 = cir.load %11 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc76)
    cir.store %21, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc149)
    %22 = cir.const #cir.int<0> : !s8i loc(#loc78)
    %23 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc80)
    %25 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %24 : !s32i), !cir.ptr<!s8i> loc(#loc81)
    cir.store %22, %25 : !s8i, !cir.ptr<!s8i> loc(#loc150)
    cir.br ^bb1 loc(#loc151)
  ^bb1:  // pred: ^bb0
    %26 = cir.load %4 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc63)
    %27 = cir.load %26 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
    cir.store %27, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc142)
    cir.br ^bb2 loc(#loc152)
  ^bb2:  // pred: ^bb1
    %28 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc86)
    %29 = cir.cast(bitcast, %28 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc86)
    %30 = cir.const #cir.int<67> : !s8i loc(#loc87)
    %31 = cir.cast(integral, %30 : !s8i), !s32i loc(#loc87)
    %32 = cir.const #cir.int<100> : !s32i loc(#loc88)
    %33 = cir.const #cir.int<1> : !s32i loc(#loc89)
    %34 = cir.binop(sub, %32, %33) nsw : !s32i loc(#loc88)
    %35 = cir.cast(integral, %34 : !s32i), !u64i loc(#loc88)
    cir.libc.memset %35 bytes from %29 set to %31 : !cir.ptr<!void>, !s32i, !u64i loc(#loc153)
    %36 = cir.const #cir.int<0> : !s8i loc(#loc92)
    %37 = cir.const #cir.int<100> : !s32i loc(#loc93)
    %38 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %39 = cir.binop(sub, %37, %38) nsw : !s32i loc(#loc93)
    %40 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc95)
    %41 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %39 : !s32i), !cir.ptr<!s8i> loc(#loc95)
    cir.store %36, %41 : !s8i, !cir.ptr<!s8i> loc(#loc154)
    cir.br ^bb3 loc(#loc155)
  ^bb3:  // pred: ^bb2
    %42 = cir.const #cir.int<0> : !s32i loc(#loc98)
    %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc98)
    cir.store %43, %1 : !u64i, !cir.ptr<!u64i> loc(#loc156)
    cir.br ^bb4 loc(#loc155)
  ^bb4:  // 2 preds: ^bb3, ^bb6
    %44 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc100)
    %45 = cir.const #cir.int<100> : !s32i loc(#loc101)
    %46 = cir.cast(integral, %45 : !s32i), !u64i loc(#loc101)
    %47 = cir.cmp(lt, %44, %46) : !u64i, !cir.bool loc(#loc157)
    cir.brcond %47 ^bb5, ^bb7 loc(#loc157)
  ^bb5:  // pred: ^bb4
    %48 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc102)
    %49 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc103)
    %50 = cir.ptr_stride(%49 : !cir.ptr<!s8i>, %48 : !u64i), !cir.ptr<!s8i> loc(#loc103)
    %51 = cir.load %50 : !cir.ptr<!s8i>, !s8i loc(#loc103)
    %52 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc104)
    %53 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc105)
    %54 = cir.ptr_stride(%52 : !cir.ptr<!s8i>, %53 : !u64i), !cir.ptr<!s8i> loc(#loc106)
    cir.store %51, %54 : !s8i, !cir.ptr<!s8i> loc(#loc158)
    cir.br ^bb6 loc(#loc97)
  ^bb6:  // pred: ^bb5
    %55 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc108)
    %56 = cir.unary(inc, %55) : !u64i, !u64i loc(#loc109)
    cir.store %56, %1 : !u64i, !cir.ptr<!u64i> loc(#loc159)
    cir.br ^bb4 loc(#loc155)
  ^bb7:  // pred: ^bb4
    cir.br ^bb8 loc(#loc97)
  ^bb8:  // pred: ^bb7
    %57 = cir.const #cir.int<0> : !s8i loc(#loc110)
    %58 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
    %59 = cir.const #cir.int<100> : !s32i loc(#loc112)
    %60 = cir.const #cir.int<1> : !s32i loc(#loc113)
    %61 = cir.binop(sub, %59, %60) nsw : !s32i loc(#loc112)
    %62 = cir.ptr_stride(%58 : !cir.ptr<!s8i>, %61 : !s32i), !cir.ptr<!s8i> loc(#loc114)
    cir.store %57, %62 : !s8i, !cir.ptr<!s8i> loc(#loc160)
    %63 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc115)
    cir.call @printLine(%63) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    cir.br ^bb9 loc(#loc85)
  ^bb9:  // pred: ^bb8
    cir.br ^bb10 loc(#loc83)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc61)
  } loc(#loc141)
  cir.func @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_334goodEv() extra(#fn_attr) {
    cir.call @_ZN62CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33L7goodG2BEv() : () -> () loc(#loc119)
    cir.return loc(#loc118)
  } loc(#loc161)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s03/CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":26:1)
#loc4 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":52:1)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":37:9)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":37:23)
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":39:13)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":39:20)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":40:13)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":40:28)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":28:5)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":28:12)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":29:5)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":29:23)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":30:5)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":30:36)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":31:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":31:37)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":34:12)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":34:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":35:15)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":35:5)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":35:10)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":35:11)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":36:5)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":51:5)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":38:9)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":50:9)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":41:20)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":41:28)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":41:33)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":41:37)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":41:13)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":41:38)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":42:29)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":42:20)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":42:24)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":42:13)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":44:13)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":47:13)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":44:22)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":44:18)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":44:25)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":44:29)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":46:34)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":46:27)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":46:17)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":46:22)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":46:23)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":46:35)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":44:35)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":44:34)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":48:27)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":48:13)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":48:18)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":48:22)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":48:23)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":49:23)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":49:13)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":59:1)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":84:1)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":69:9)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":69:23)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":71:13)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":71:20)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":72:13)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":72:28)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":61:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":61:12)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":62:5)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":62:23)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":63:5)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":63:36)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":64:5)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":64:37)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":66:12)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":66:5)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":67:15)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":67:5)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":67:10)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":67:11)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":68:5)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":83:5)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":70:9)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":82:9)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":73:20)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":73:28)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":73:33)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":73:37)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":73:13)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":73:38)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":74:29)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":74:20)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":74:24)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":74:13)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":76:13)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":79:13)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":76:22)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":76:18)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":76:25)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":76:29)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":78:34)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":78:27)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":78:17)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":78:22)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":78:23)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":78:35)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":76:35)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":76:34)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":80:27)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":80:13)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":80:18)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":80:22)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":80:23)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":81:23)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":81:13)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":86:1)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":89:1)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE805_char_alloca_loop_33.cpp":88:5)
#loc120 = loc(fused[#loc1, #loc2])
#loc121 = loc(fused[#loc3, #loc4])
#loc122 = loc(fused[#loc5, #loc6])
#loc123 = loc(fused[#loc7, #loc8])
#loc124 = loc(fused[#loc9, #loc10])
#loc125 = loc(fused[#loc11, #loc12])
#loc126 = loc(fused[#loc13, #loc14])
#loc127 = loc(fused[#loc15, #loc16])
#loc128 = loc(fused[#loc17, #loc18])
#loc129 = loc(fused[#loc20, #loc19])
#loc130 = loc(fused[#loc22, #loc21])
#loc131 = loc(fused[#loc25, #loc26])
#loc132 = loc(fused[#loc27, #loc28])
#loc133 = loc(fused[#loc33, #loc34])
#loc134 = loc(fused[#loc38, #loc35])
#loc135 = loc(fused[#loc39, #loc40])
#loc136 = loc(fused[#loc42, #loc41])
#loc137 = loc(fused[#loc43, #loc44])
#loc138 = loc(fused[#loc47, #loc50])
#loc139 = loc(fused[#loc52, #loc51])
#loc140 = loc(fused[#loc54, #loc53])
#loc141 = loc(fused[#loc60, #loc61])
#loc142 = loc(fused[#loc62, #loc63])
#loc143 = loc(fused[#loc64, #loc65])
#loc144 = loc(fused[#loc66, #loc67])
#loc145 = loc(fused[#loc68, #loc69])
#loc146 = loc(fused[#loc70, #loc71])
#loc147 = loc(fused[#loc72, #loc73])
#loc148 = loc(fused[#loc74, #loc75])
#loc149 = loc(fused[#loc77, #loc76])
#loc150 = loc(fused[#loc79, #loc78])
#loc151 = loc(fused[#loc82, #loc83])
#loc152 = loc(fused[#loc84, #loc85])
#loc153 = loc(fused[#loc90, #loc91])
#loc154 = loc(fused[#loc95, #loc92])
#loc155 = loc(fused[#loc96, #loc97])
#loc156 = loc(fused[#loc99, #loc98])
#loc157 = loc(fused[#loc100, #loc101])
#loc158 = loc(fused[#loc104, #loc107])
#loc159 = loc(fused[#loc109, #loc108])
#loc160 = loc(fused[#loc111, #loc110])
#loc161 = loc(fused[#loc117, #loc118])
