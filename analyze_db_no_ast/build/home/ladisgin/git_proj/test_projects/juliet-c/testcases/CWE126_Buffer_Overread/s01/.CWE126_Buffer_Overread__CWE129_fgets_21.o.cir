!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc17 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":27:21)
#loc18 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":27:25)
#loc85 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":79:26)
#loc86 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":79:30)
#loc152 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":126:26)
#loc153 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":126:30)
#loc217 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":168:25)
#loc218 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":168:29)
#true = #cir.bool<true> : !cir.bool
#loc261 = loc(fused[#loc17, #loc18])
#loc285 = loc(fused[#loc85, #loc86])
#loc306 = loc(fused[#loc152, #loc153])
#loc327 = loc(fused[#loc217, #loc218])
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_21.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>, #dlti.dl_entry<"dlti.endianness", "little">>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc254)
  cir.global "private"  external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc255)
  cir.func private  @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc256)
  cir.func private  @printLine(!cir.ptr<!s8i>) loc(#loc257)
  cir.global "private"  constant internal dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc9)
  cir.global "private"  internal dsolocal @badStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc258)
  cir.func private  @printIntLine(!s32i) loc(#loc259)
  cir.global "private"  constant internal dsolocal @".str1" = #cir.const_array<"ERROR: Array index is negative\00" : !cir.array<!s8i x 31>> : !cir.array<!s8i x 31> {alignment = 1 : i64} loc(#loc14)
  cir.func internal private  @badSink(%arg0: !s32i loc(fused[#loc17, #loc18])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc261)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc19)
    cir.scope {
      %1 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc258)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc22)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc22)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc265)
          %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc265)
          cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc265)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc30)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc31)
            %8 = cir.cmp(ge, %6, %7) : !s32i, !s32i loc(#loc267)
            %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc32)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc36)
              %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc37)
              %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc37)
              %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc37)
              cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc38)
            } else {
              %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc14)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc14)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc39)
            } loc(#loc268)
          } loc(#loc266)
        } loc(#loc264)
      } loc(#loc263)
    } loc(#loc262)
    cir.return loc(#loc16)
  } loc(#loc260)
  cir.func no_proto  @CWE126_Buffer_Overread__CWE129_fgets_21_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc270)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc44)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc45)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc271)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc273)
      %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc273)
      cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc273)
      cir.scope {
        %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc53)
        %9 = cir.const #cir.int<3> : !s32i loc(#loc54)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc54)
        %11 = cir.const #cir.int<4> : !u64i loc(#loc54)
        %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc54)
        %13 = cir.const #cir.int<2> : !s32i loc(#loc54)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc54)
        %15 = cir.binop(add, %12, %14) : !u64i loc(#loc54)
        %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc54)
        %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc255)
        %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc55)
        %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc56)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc57)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc57)
        %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !s32i loc(#loc275)
        %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc58)
        cir.if %23 {
          %24 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc62)
          %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc63)
          cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc277)
        } else {
          %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc9)
          %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc9)
          cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc66)
        } loc(#loc276)
      } loc(#loc274)
    } loc(#loc272)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc67)
    %4 = cir.get_global @badStatic : !cir.ptr<!s32i> loc(#loc258)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc278)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc69)
    cir.call @badSink(%5) : (!s32i) -> () loc(#loc70)
    cir.return loc(#loc41)
  } loc(#loc269)
  cir.func no_proto  @CWE126_Buffer_Overread__CWE129_fgets_21_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc280)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc73)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc281)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc75)
    %2 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc282)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc77)
    cir.return loc(#loc72)
  } loc(#loc279)
  cir.global "private"  internal dsolocal @goodB2G1Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc283)
  cir.global "private"  constant internal dsolocal @".str2" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc81)
  cir.global "private"  constant internal dsolocal @".str3" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc82)
  cir.func internal private  @goodB2G1Sink(%arg0: !s32i loc(fused[#loc85, #loc86])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc285)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc87)
    cir.scope {
      %1 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc283)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc90)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc90)
      cir.if %3 {
        %4 = cir.get_global @".str2" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc81)
        %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc81)
        cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc94)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc289)
          %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc289)
          cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc289)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc101)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc102)
            %8 = cir.cmp(ge, %6, %7) : !s32i, !s32i loc(#loc291)
            %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc103)
            %10 = cir.ternary(%9, true {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc105)
              %12 = cir.const #cir.int<10> : !s32i loc(#loc106)
              %13 = cir.cmp(lt, %11, %12) : !s32i, !s32i loc(#loc292)
              %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc108)
              %15 = cir.ternary(%14, true {
                %16 = cir.const #true loc(#loc104)
                cir.yield %16 : !cir.bool loc(#loc104)
              }, false {
                %16 = cir.const #false loc(#loc104)
                cir.yield %16 : !cir.bool loc(#loc104)
              }) : (!cir.bool) -> !cir.bool loc(#loc104)
              cir.yield %15 : !cir.bool loc(#loc104)
            }, false {
              %11 = cir.const #false loc(#loc104)
              cir.yield %11 : !cir.bool loc(#loc104)
            }) : (!cir.bool) -> !cir.bool loc(#loc104)
            cir.if %10 {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc112)
              %12 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc113)
              %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc113)
              %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc113)
              cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc114)
            } else {
              %11 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc82)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc82)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc115)
            } loc(#loc293)
          } loc(#loc290)
        } loc(#loc288)
      } loc(#loc287)
    } loc(#loc286)
    cir.return loc(#loc84)
  } loc(#loc284)
  cir.func no_proto internal private  @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc295)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc121)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc296)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc298)
      %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc298)
      cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc298)
      cir.scope {
        %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc129)
        %9 = cir.const #cir.int<3> : !s32i loc(#loc130)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc130)
        %11 = cir.const #cir.int<4> : !u64i loc(#loc130)
        %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc130)
        %13 = cir.const #cir.int<2> : !s32i loc(#loc130)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc130)
        %15 = cir.binop(add, %12, %14) : !u64i loc(#loc130)
        %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc130)
        %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc255)
        %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc131)
        %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc132)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc133)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc133)
        %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !s32i loc(#loc300)
        %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc134)
        cir.if %23 {
          %24 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc138)
          %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc139)
          cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc302)
        } else {
          %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc142)
          %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc142)
          cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc143)
        } loc(#loc301)
      } loc(#loc299)
    } loc(#loc297)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc144)
    %4 = cir.get_global @goodB2G1Static : !cir.ptr<!s32i> loc(#loc283)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc303)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc146)
    cir.call @goodB2G1Sink(%5) : (!s32i) -> () loc(#loc147)
    cir.return loc(#loc117)
  } loc(#loc294)
  cir.global "private"  internal dsolocal @goodB2G2Static = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc304)
  cir.func internal private  @goodB2G2Sink(%arg0: !s32i loc(fused[#loc152, #loc153])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc306)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc154)
    cir.scope {
      %1 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc304)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc157)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc157)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc310)
          %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc310)
          cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc310)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc165)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc166)
            %8 = cir.cmp(ge, %6, %7) : !s32i, !s32i loc(#loc312)
            %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc167)
            %10 = cir.ternary(%9, true {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc169)
              %12 = cir.const #cir.int<10> : !s32i loc(#loc170)
              %13 = cir.cmp(lt, %11, %12) : !s32i, !s32i loc(#loc313)
              %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc172)
              %15 = cir.ternary(%14, true {
                %16 = cir.const #true loc(#loc168)
                cir.yield %16 : !cir.bool loc(#loc168)
              }, false {
                %16 = cir.const #false loc(#loc168)
                cir.yield %16 : !cir.bool loc(#loc168)
              }) : (!cir.bool) -> !cir.bool loc(#loc168)
              cir.yield %15 : !cir.bool loc(#loc168)
            }, false {
              %11 = cir.const #false loc(#loc168)
              cir.yield %11 : !cir.bool loc(#loc168)
            }) : (!cir.bool) -> !cir.bool loc(#loc168)
            cir.if %10 {
              %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc176)
              %12 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc177)
              %13 = cir.ptr_stride(%12 : !cir.ptr<!s32i>, %11 : !s32i), !cir.ptr<!s32i> loc(#loc177)
              %14 = cir.load %13 : !cir.ptr<!s32i>, !s32i loc(#loc177)
              cir.call @printIntLine(%14) : (!s32i) -> () loc(#loc178)
            } else {
              %11 = cir.get_global @".str3" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc179)
              %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc179)
              cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc180)
            } loc(#loc314)
          } loc(#loc311)
        } loc(#loc309)
      } loc(#loc308)
    } loc(#loc307)
    cir.return loc(#loc151)
  } loc(#loc305)
  cir.func no_proto internal private  @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc316)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc185)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc186)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc317)
    cir.scope {
      %6 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc319)
      %7 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc319)
      cir.store %7, %6 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc319)
      cir.scope {
        %8 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc194)
        %9 = cir.const #cir.int<3> : !s32i loc(#loc195)
        %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc195)
        %11 = cir.const #cir.int<4> : !u64i loc(#loc195)
        %12 = cir.binop(mul, %10, %11) : !u64i loc(#loc195)
        %13 = cir.const #cir.int<2> : !s32i loc(#loc195)
        %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc195)
        %15 = cir.binop(add, %12, %14) : !u64i loc(#loc195)
        %16 = cir.cast(integral, %15 : !u64i), !s32i loc(#loc195)
        %17 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc255)
        %18 = cir.load %17 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc196)
        %19 = cir.call @fgets(%8, %16, %18) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc197)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc198)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc198)
        %22 = cir.cmp(ne, %19, %21) : !cir.ptr<!s8i>, !s32i loc(#loc321)
        %23 = cir.cast(int_to_bool, %22 : !s32i), !cir.bool loc(#loc199)
        cir.if %23 {
          %24 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc203)
          %25 = cir.call @atoi(%24) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc204)
          cir.store %25, %0 : !s32i, !cir.ptr<!s32i> loc(#loc323)
        } else {
          %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc207)
          %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc207)
          cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc208)
        } loc(#loc322)
      } loc(#loc320)
    } loc(#loc318)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc209)
    %4 = cir.get_global @goodB2G2Static : !cir.ptr<!s32i> loc(#loc304)
    cir.store %3, %4 : !s32i, !cir.ptr<!s32i> loc(#loc324)
    %5 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc211)
    cir.call @goodB2G2Sink(%5) : (!s32i) -> () loc(#loc212)
    cir.return loc(#loc182)
  } loc(#loc315)
  cir.global "private"  internal dsolocal @goodG2BStatic = #cir.int<0> : !s32i {alignment = 4 : i64} loc(#loc325)
  cir.func internal private  @goodG2BSink(%arg0: !s32i loc(fused[#loc217, #loc218])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc327)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc219)
    cir.scope {
      %1 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc325)
      %2 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc222)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc222)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>>, ["buffer"] {alignment = 16 : i64} loc(#loc331)
          %5 = cir.const #cir.zero : !cir.array<!s32i x 10> loc(#loc331)
          cir.store %5, %4 : !cir.array<!s32i x 10>, !cir.ptr<!cir.array<!s32i x 10>> loc(#loc331)
          cir.scope {
            %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc230)
            %7 = cir.const #cir.int<0> : !s32i loc(#loc231)
            %8 = cir.cmp(ge, %6, %7) : !s32i, !s32i loc(#loc333)
            %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc232)
            cir.if %9 {
              %10 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc236)
              %11 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s32i x 10>>), !cir.ptr<!s32i> loc(#loc237)
              %12 = cir.ptr_stride(%11 : !cir.ptr<!s32i>, %10 : !s32i), !cir.ptr<!s32i> loc(#loc237)
              %13 = cir.load %12 : !cir.ptr<!s32i>, !s32i loc(#loc237)
              cir.call @printIntLine(%13) : (!s32i) -> () loc(#loc238)
            } else {
              %10 = cir.get_global @".str1" : !cir.ptr<!cir.array<!s8i x 31>> loc(#loc239)
              %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 31>>), !cir.ptr<!s8i> loc(#loc239)
              cir.call @printLine(%11) : (!cir.ptr<!s8i>) -> () loc(#loc240)
            } loc(#loc334)
          } loc(#loc332)
        } loc(#loc330)
      } loc(#loc329)
    } loc(#loc328)
    cir.return loc(#loc216)
  } loc(#loc326)
  cir.func no_proto internal private  @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc336)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc245)
    %2 = cir.unary(minus, %1) : !s32i, !s32i loc(#loc246)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc337)
    %3 = cir.const #cir.int<7> : !s32i loc(#loc248)
    cir.store %3, %0 : !s32i, !cir.ptr<!s32i> loc(#loc338)
    %4 = cir.const #cir.int<1> : !s32i loc(#loc250)
    %5 = cir.get_global @goodG2BStatic : !cir.ptr<!s32i> loc(#loc325)
    cir.store %4, %5 : !s32i, !cir.ptr<!s32i> loc(#loc339)
    %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc252)
    cir.call @goodG2BSink(%6) : (!s32i) -> () loc(#loc253)
    cir.return loc(#loc242)
  } loc(#loc335)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__CWE129_fgets_21.c":0:0)
#loc1 = loc("/usr/include/stdio.h":654:1)
#loc2 = loc("/usr/include/stdio.h":655:59)
#loc3 = loc("/usr/include/stdio.h":149:1)
#loc4 = loc("/usr/include/stdio.h":149:14)
#loc5 = loc("/usr/include/stdlib.h":105:1)
#loc6 = loc("/usr/include/stdlib.h":106:33)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":62:23)
#loc10 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":25:1)
#loc11 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":25:24)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":41:27)
#loc15 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":27:1)
#loc16 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":45:1)
#loc19 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":28:1)
#loc20 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":29:5)
#loc21 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":44:5)
#loc22 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":29:8)
#loc23 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":30:5)
#loc24 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":31:9)
#loc25 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":43:9)
#loc26 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":32:13)
#loc27 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":32:34)
#loc28 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":35:13)
#loc29 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":42:13)
#loc30 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":35:17)
#loc31 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":35:25)
#loc32 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":35:22)
#loc33 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":36:13)
#loc34 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":38:13)
#loc35 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":40:13)
#loc36 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":37:37)
#loc37 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":37:30)
#loc38 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":37:17)
#loc39 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":41:17)
#loc40 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":47:1)
#loc41 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":67:1)
#loc42 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":49:5)
#loc43 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":49:9)
#loc44 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":51:13)
#loc45 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":51:12)
#loc46 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":51:5)
#loc47 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":52:5)
#loc48 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":64:5)
#loc49 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":53:9)
#loc50 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":53:45)
#loc51 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":55:9)
#loc52 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":63:9)
#loc53 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":55:19)
#loc54 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":55:32)
#loc55 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":55:49)
#loc56 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":55:13)
#loc57 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":55:59)
#loc58 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":55:56)
#loc59 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":56:9)
#loc60 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":59:9)
#loc61 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":61:9)
#loc62 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":58:25)
#loc63 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":58:20)
#loc64 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":58:13)
#loc65 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":58:36)
#loc66 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":62:13)
#loc67 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":65:17)
#loc68 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":65:5)
#loc69 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":66:13)
#loc70 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":66:5)
#loc71 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":200:1)
#loc72 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":205:1)
#loc73 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":202:5)
#loc74 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":202:14)
#loc75 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":203:5)
#loc76 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":203:14)
#loc77 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":204:5)
#loc78 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":204:13)
#loc79 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":74:1)
#loc80 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":74:29)
#loc81 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":84:19)
#loc82 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":97:27)
#loc83 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":79:1)
#loc84 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":101:1)
#loc87 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":80:1)
#loc88 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":81:5)
#loc89 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":100:5)
#loc90 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":81:8)
#loc91 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":82:5)
#loc92 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":85:5)
#loc93 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":87:5)
#loc94 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":84:9)
#loc95 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":88:9)
#loc96 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":99:9)
#loc97 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":89:13)
#loc98 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":89:34)
#loc99 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":91:13)
#loc100 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":98:13)
#loc101 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":91:17)
#loc102 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":91:25)
#loc103 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":91:22)
#loc104 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":91:27)
#loc105 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":91:30)
#loc106 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":91:38)
#loc107 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":91:40)
#loc108 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":91:35)
#loc109 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":92:13)
#loc110 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":94:13)
#loc111 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":96:13)
#loc112 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":93:37)
#loc113 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":93:30)
#loc114 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":93:17)
#loc115 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":97:17)
#loc116 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":103:1)
#loc117 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":123:1)
#loc118 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":105:5)
#loc119 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":105:9)
#loc120 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":107:13)
#loc121 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":107:12)
#loc122 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":107:5)
#loc123 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":108:5)
#loc124 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":120:5)
#loc125 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":109:9)
#loc126 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":109:45)
#loc127 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":111:9)
#loc128 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":119:9)
#loc129 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":111:19)
#loc130 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":111:32)
#loc131 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":111:49)
#loc132 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":111:13)
#loc133 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":111:59)
#loc134 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":111:56)
#loc135 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":112:9)
#loc136 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":115:9)
#loc137 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":117:9)
#loc138 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":114:25)
#loc139 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":114:20)
#loc140 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":114:13)
#loc141 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":114:36)
#loc142 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":118:23)
#loc143 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":118:13)
#loc144 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":121:22)
#loc145 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":121:5)
#loc146 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":122:18)
#loc147 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":122:5)
#loc148 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":75:1)
#loc149 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":75:29)
#loc150 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":126:1)
#loc151 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":143:1)
#loc154 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":127:1)
#loc155 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":128:5)
#loc156 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":142:5)
#loc157 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":128:8)
#loc158 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":129:5)
#loc159 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":130:9)
#loc160 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":141:9)
#loc161 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":131:13)
#loc162 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":131:34)
#loc163 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":133:13)
#loc164 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":140:13)
#loc165 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":133:17)
#loc166 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":133:25)
#loc167 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":133:22)
#loc168 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":133:27)
#loc169 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":133:30)
#loc170 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":133:38)
#loc171 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":133:40)
#loc172 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":133:35)
#loc173 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":134:13)
#loc174 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":136:13)
#loc175 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":138:13)
#loc176 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":135:37)
#loc177 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":135:30)
#loc178 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":135:17)
#loc179 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":139:27)
#loc180 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":139:17)
#loc181 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":145:1)
#loc182 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":165:1)
#loc183 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":147:5)
#loc184 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":147:9)
#loc185 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":149:13)
#loc186 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":149:12)
#loc187 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":149:5)
#loc188 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":150:5)
#loc189 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":162:5)
#loc190 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":151:9)
#loc191 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":151:45)
#loc192 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":153:9)
#loc193 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":161:9)
#loc194 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":153:19)
#loc195 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":153:32)
#loc196 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":153:49)
#loc197 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":153:13)
#loc198 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":153:59)
#loc199 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":153:56)
#loc200 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":154:9)
#loc201 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":157:9)
#loc202 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":159:9)
#loc203 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":156:25)
#loc204 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":156:20)
#loc205 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":156:13)
#loc206 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":156:36)
#loc207 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":160:23)
#loc208 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":160:13)
#loc209 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":163:22)
#loc210 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":163:5)
#loc211 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":164:18)
#loc212 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":164:5)
#loc213 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":76:1)
#loc214 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":76:28)
#loc215 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":168:1)
#loc216 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":186:1)
#loc219 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":169:1)
#loc220 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":170:5)
#loc221 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":185:5)
#loc222 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":170:8)
#loc223 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":171:5)
#loc224 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":172:9)
#loc225 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":184:9)
#loc226 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":173:13)
#loc227 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":173:34)
#loc228 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":176:13)
#loc229 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":183:13)
#loc230 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":176:17)
#loc231 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":176:25)
#loc232 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":176:22)
#loc233 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":177:13)
#loc234 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":179:13)
#loc235 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":181:13)
#loc236 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":178:37)
#loc237 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":178:30)
#loc238 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":178:17)
#loc239 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":182:27)
#loc240 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":182:17)
#loc241 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":188:1)
#loc242 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":198:1)
#loc243 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":190:5)
#loc244 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":190:9)
#loc245 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":192:13)
#loc246 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":192:12)
#loc247 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":192:5)
#loc248 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":195:12)
#loc249 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":195:5)
#loc250 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":196:21)
#loc251 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":196:5)
#loc252 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":197:17)
#loc253 = loc("CWE126_Buffer_Overread__CWE129_fgets_21.c":197:5)
#loc254 = loc(fused[#loc1, #loc2])
#loc255 = loc(fused[#loc3, #loc4])
#loc256 = loc(fused[#loc5, #loc6])
#loc257 = loc(fused[#loc7, #loc8])
#loc258 = loc(fused[#loc10, #loc11])
#loc259 = loc(fused[#loc12, #loc13])
#loc260 = loc(fused[#loc15, #loc16])
#loc262 = loc(fused[#loc20, #loc21])
#loc263 = loc(fused[#loc23, #loc21])
#loc264 = loc(fused[#loc24, #loc25])
#loc265 = loc(fused[#loc26, #loc27])
#loc266 = loc(fused[#loc28, #loc29])
#loc267 = loc(fused[#loc30, #loc31])
#loc268 = loc(fused[#loc33, #loc34, #loc35, #loc29])
#loc269 = loc(fused[#loc40, #loc41])
#loc270 = loc(fused[#loc42, #loc43])
#loc271 = loc(fused[#loc46, #loc44])
#loc272 = loc(fused[#loc47, #loc48])
#loc273 = loc(fused[#loc49, #loc50])
#loc274 = loc(fused[#loc51, #loc52])
#loc275 = loc(fused[#loc56, #loc57])
#loc276 = loc(fused[#loc59, #loc60, #loc61, #loc52])
#loc277 = loc(fused[#loc64, #loc65])
#loc278 = loc(fused[#loc68, #loc67])
#loc279 = loc(fused[#loc71, #loc72])
#loc280 = loc(fused[#loc73, #loc74])
#loc281 = loc(fused[#loc75, #loc76])
#loc282 = loc(fused[#loc77, #loc78])
#loc283 = loc(fused[#loc79, #loc80])
#loc284 = loc(fused[#loc83, #loc84])
#loc286 = loc(fused[#loc88, #loc89])
#loc287 = loc(fused[#loc91, #loc92, #loc93, #loc89])
#loc288 = loc(fused[#loc95, #loc96])
#loc289 = loc(fused[#loc97, #loc98])
#loc290 = loc(fused[#loc99, #loc100])
#loc291 = loc(fused[#loc101, #loc102])
#loc292 = loc(fused[#loc105, #loc107])
#loc293 = loc(fused[#loc109, #loc110, #loc111, #loc100])
#loc294 = loc(fused[#loc116, #loc117])
#loc295 = loc(fused[#loc118, #loc119])
#loc296 = loc(fused[#loc122, #loc120])
#loc297 = loc(fused[#loc123, #loc124])
#loc298 = loc(fused[#loc125, #loc126])
#loc299 = loc(fused[#loc127, #loc128])
#loc300 = loc(fused[#loc132, #loc133])
#loc301 = loc(fused[#loc135, #loc136, #loc137, #loc128])
#loc302 = loc(fused[#loc140, #loc141])
#loc303 = loc(fused[#loc145, #loc144])
#loc304 = loc(fused[#loc148, #loc149])
#loc305 = loc(fused[#loc150, #loc151])
#loc307 = loc(fused[#loc155, #loc156])
#loc308 = loc(fused[#loc158, #loc156])
#loc309 = loc(fused[#loc159, #loc160])
#loc310 = loc(fused[#loc161, #loc162])
#loc311 = loc(fused[#loc163, #loc164])
#loc312 = loc(fused[#loc165, #loc166])
#loc313 = loc(fused[#loc169, #loc171])
#loc314 = loc(fused[#loc173, #loc174, #loc175, #loc164])
#loc315 = loc(fused[#loc181, #loc182])
#loc316 = loc(fused[#loc183, #loc184])
#loc317 = loc(fused[#loc187, #loc185])
#loc318 = loc(fused[#loc188, #loc189])
#loc319 = loc(fused[#loc190, #loc191])
#loc320 = loc(fused[#loc192, #loc193])
#loc321 = loc(fused[#loc197, #loc198])
#loc322 = loc(fused[#loc200, #loc201, #loc202, #loc193])
#loc323 = loc(fused[#loc205, #loc206])
#loc324 = loc(fused[#loc210, #loc209])
#loc325 = loc(fused[#loc213, #loc214])
#loc326 = loc(fused[#loc215, #loc216])
#loc328 = loc(fused[#loc220, #loc221])
#loc329 = loc(fused[#loc223, #loc221])
#loc330 = loc(fused[#loc224, #loc225])
#loc331 = loc(fused[#loc226, #loc227])
#loc332 = loc(fused[#loc228, #loc229])
#loc333 = loc(fused[#loc230, #loc231])
#loc334 = loc(fused[#loc233, #loc234, #loc235, #loc229])
#loc335 = loc(fused[#loc241, #loc242])
#loc336 = loc(fused[#loc243, #loc244])
#loc337 = loc(fused[#loc247, #loc245])
#loc338 = loc(fused[#loc249, #loc248])
#loc339 = loc(fused[#loc251, #loc250])
