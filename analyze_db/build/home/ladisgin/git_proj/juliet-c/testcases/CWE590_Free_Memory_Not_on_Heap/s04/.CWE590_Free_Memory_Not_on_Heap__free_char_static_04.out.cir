!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc50 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":124:10)
#loc51 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":124:14)
#loc52 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":124:20)
#loc53 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":124:32)
#loc181 = loc(fused[#loc50, #loc51])
#loc182 = loc(fused[#loc52, #loc53])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" internal dsolocal @CWE590_Free_Memory_Not_on_Heap__free_char_static_04_bad.dataBuffer = #cir.zero : !cir.array<!s8i x 100> {alignment = 16 : i64} loc(#loc1)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc164)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc165)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_static_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc167)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc10)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc168)
    cir.scope {
      %6 = cir.const #cir.int<1> : !s32i loc(#loc14)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc14)
      cir.if %7 {
        cir.scope {
          %8 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_static_04_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc1)
          %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc18)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc18)
          %11 = cir.const #cir.int<65> : !s32i loc(#loc19)
          %12 = cir.const #cir.int<100> : !s32i loc(#loc20)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc21)
          %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc20)
          %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc20)
          cir.libc.memset %15 bytes from %10 set to %11 : !cir.ptr<!void>, !s32i, !u64i loc(#loc172)
          %16 = cir.const #cir.int<0> : !s32i loc(#loc24)
          %17 = cir.cast(integral, %16 : !s32i), !s8i loc(#loc24)
          %18 = cir.const #cir.int<100> : !s32i loc(#loc25)
          %19 = cir.const #cir.int<1> : !s32i loc(#loc26)
          %20 = cir.binop(sub, %18, %19) nsw : !s32i loc(#loc25)
          %21 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc27)
          %22 = cir.ptr_stride(%21 : !cir.ptr<!s8i>, %20 : !s32i), !cir.ptr<!s8i> loc(#loc27)
          cir.store %17, %22 : !s8i, !cir.ptr<!s8i> loc(#loc173)
          %23 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc28)
          cir.store %23, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc174)
        } loc(#loc171)
      } loc(#loc170)
    } loc(#loc169)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc30)
    cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc31)
    %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc32)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc33)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc32)
    cir.return loc(#loc7)
  } loc(#loc166)
  cir.func no_proto @CWE590_Free_Memory_Not_on_Heap__free_char_static_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc176)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc177)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc38)
    cir.return loc(#loc35)
  } loc(#loc175)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc178)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc179)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc44)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc45)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc46)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc47)
  cir.func @main(%arg0: !s32i loc(fused[#loc50, #loc51]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc52, #loc53])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc181)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc182)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc49)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc54)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc54)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc55)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc56)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc56)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc57)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc44)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc58)
    %8 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_static_04_good : !cir.ptr<!cir.func<!void ()>> loc(#loc183)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_static_04_good() : () -> () loc(#loc59)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc45)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc45)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc61)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc46)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc46)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %13 = cir.get_global @CWE590_Free_Memory_Not_on_Heap__free_char_static_04_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc184)
    cir.call @CWE590_Free_Memory_Not_on_Heap__free_char_static_04_bad() : () -> () loc(#loc63)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc47)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc66)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc185)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc185)
    cir.return %17 : !s32i loc(#loc185)
  } loc(#loc180)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc68)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc186)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"malloc() failed\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc71)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc187)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc189)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc78)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc190)
    cir.scope {
      %6 = cir.const #cir.int<0> : !s32i loc(#loc82)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc82)
      cir.if %7 {
        %8 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc68)
        %9 = cir.cast(array_to_ptrdecay, %8 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc68)
        cir.call @printLine(%9) : (!cir.ptr<!s8i>) -> () loc(#loc86)
      } else {
        cir.scope {
          %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc194)
          %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc91)
          %10 = cir.const #cir.int<100> : !s32i loc(#loc92)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc92)
          %12 = cir.const #cir.int<1> : !u64i loc(#loc195)
          %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc196)
          %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc91)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc197)
          cir.store %15, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc194)
          cir.scope {
            %31 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc97)
            %32 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc98)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc98)
            %34 = cir.cmp(eq, %31, %33) : !cir.ptr<!s8i>, !cir.bool loc(#loc199)
            cir.if %34 {
              %35 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc71)
              %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc71)
              cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc100)
              %37 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc101)
              %38 = cir.const #cir.int<1> : !s32i loc(#loc102)
              cir.call @exit(%38) : (!s32i) -> () extra(#fn_attr) loc(#loc101)
            } loc(#loc200)
          } loc(#loc198)
          %16 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc103)
          %18 = cir.const #cir.int<65> : !s32i loc(#loc104)
          %19 = cir.const #cir.int<100> : !s32i loc(#loc105)
          %20 = cir.const #cir.int<1> : !s32i loc(#loc106)
          %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc105)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc105)
          cir.libc.memset %22 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc201)
          %23 = cir.const #cir.int<0> : !s32i loc(#loc109)
          %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc109)
          %25 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc110)
          %26 = cir.const #cir.int<100> : !s32i loc(#loc111)
          %27 = cir.const #cir.int<1> : !s32i loc(#loc112)
          %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc111)
          %29 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc113)
          cir.store %24, %29 : !s8i, !cir.ptr<!s8i> loc(#loc202)
          %30 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
          cir.store %30, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc203)
        } loc(#loc193)
      } loc(#loc192)
    } loc(#loc191)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc116)
    cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc117)
    %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc118)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc119)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc119)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc118)
    cir.return loc(#loc75)
  } loc(#loc188)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc205)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!s8i> loc(#loc124)
    cir.store %1, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc206)
    cir.scope {
      %6 = cir.const #cir.int<1> : !s32i loc(#loc128)
      %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc128)
      cir.if %7 {
        cir.scope {
          %8 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBuffer", init] {alignment = 8 : i64} loc(#loc210)
          %9 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc134)
          %10 = cir.const #cir.int<100> : !s32i loc(#loc135)
          %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc135)
          %12 = cir.const #cir.int<1> : !u64i loc(#loc211)
          %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc212)
          %14 = cir.call @malloc(%13) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc134)
          %15 = cir.cast(bitcast, %14 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc213)
          cir.store %15, %8 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc210)
          cir.scope {
            %31 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc140)
            %32 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc141)
            %33 = cir.cast(bitcast, %32 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc141)
            %34 = cir.cmp(eq, %31, %33) : !cir.ptr<!s8i>, !cir.bool loc(#loc215)
            cir.if %34 {
              %35 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc143)
              %36 = cir.cast(array_to_ptrdecay, %35 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc143)
              cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc144)
              %37 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc145)
              %38 = cir.const #cir.int<1> : !s32i loc(#loc146)
              cir.call @exit(%38) : (!s32i) -> () extra(#fn_attr) loc(#loc145)
            } loc(#loc216)
          } loc(#loc214)
          %16 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
          %17 = cir.cast(bitcast, %16 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc147)
          %18 = cir.const #cir.int<65> : !s32i loc(#loc148)
          %19 = cir.const #cir.int<100> : !s32i loc(#loc149)
          %20 = cir.const #cir.int<1> : !s32i loc(#loc150)
          %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc149)
          %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc149)
          cir.libc.memset %22 bytes from %17 set to %18 : !cir.ptr<!void>, !s32i, !u64i loc(#loc217)
          %23 = cir.const #cir.int<0> : !s32i loc(#loc153)
          %24 = cir.cast(integral, %23 : !s32i), !s8i loc(#loc153)
          %25 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
          %26 = cir.const #cir.int<100> : !s32i loc(#loc155)
          %27 = cir.const #cir.int<1> : !s32i loc(#loc156)
          %28 = cir.binop(sub, %26, %27) nsw : !s32i loc(#loc155)
          %29 = cir.ptr_stride(%25 : !cir.ptr<!s8i>, %28 : !s32i), !cir.ptr<!s8i> loc(#loc157)
          cir.store %24, %29 : !s8i, !cir.ptr<!s8i> loc(#loc218)
          %30 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc158)
          cir.store %30, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc219)
        } loc(#loc209)
      } loc(#loc208)
    } loc(#loc207)
    %2 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc160)
    cir.call @printLine(%2) : (!cir.ptr<!s8i>) -> () loc(#loc161)
    %3 = cir.get_global @free : !cir.ptr<!cir.func<!void (!cir.ptr<!void>)>> loc(#loc162)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc163)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc163)
    cir.call @free(%5) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc162)
    cir.return loc(#loc121)
  } loc(#loc204)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE590_Free_Memory_Not_on_Heap/s04/CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":0:0)
#loc1 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":38:25)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc4 = loc("/usr/include/stdlib.h":687:1)
#loc5 = loc("/usr/include/stdlib.h":687:32)
#loc6 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":30:1)
#loc7 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":47:1)
#loc8 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":32:5)
#loc9 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":32:12)
#loc10 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":33:12)
#loc11 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":33:5)
#loc12 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":34:5)
#loc13 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":43:5)
#loc14 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":34:8)
#loc15 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":35:5)
#loc16 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":36:9)
#loc17 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":42:9)
#loc18 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":39:20)
#loc19 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":39:32)
#loc20 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":39:37)
#loc21 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":39:41)
#loc22 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":39:13)
#loc23 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":39:42)
#loc24 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":40:33)
#loc25 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":40:24)
#loc26 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":40:28)
#loc27 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":40:13)
#loc28 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":41:20)
#loc29 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":41:13)
#loc30 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":44:15)
#loc31 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":44:5)
#loc32 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":46:5)
#loc33 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":46:10)
#loc34 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":108:1)
#loc35 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":112:1)
#loc36 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":110:5)
#loc37 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":110:14)
#loc38 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":111:5)
#loc39 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":111:14)
#loc40 = loc("/usr/include/stdlib.h":575:1)
#loc41 = loc("/usr/include/stdlib.h":575:41)
#loc42 = loc("/usr/include/time.h":76:1)
#loc43 = loc("/usr/include/time.h":76:38)
#loc44 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":129:15)
#loc45 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":131:15)
#loc46 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":134:15)
#loc47 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":136:15)
#loc48 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":124:1)
#loc49 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":139:1)
#loc54 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":125:1)
#loc55 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":127:27)
#loc56 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":127:22)
#loc57 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":127:5)
#loc58 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":129:5)
#loc59 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":130:5)
#loc60 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":130:62)
#loc61 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":131:5)
#loc62 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":134:5)
#loc63 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":135:5)
#loc64 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":135:61)
#loc65 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":136:5)
#loc66 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":138:12)
#loc67 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":138:5)
#loc68 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":61:19)
#loc69 = loc("/usr/include/stdlib.h":672:1)
#loc70 = loc("/usr/include/stdlib.h":672:45)
#loc71 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":70:27)
#loc72 = loc("/usr/include/stdlib.h":756:1)
#loc73 = loc("/usr/include/stdlib.h":756:70)
#loc74 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":54:1)
#loc75 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":81:1)
#loc76 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":56:5)
#loc77 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":56:12)
#loc78 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":57:12)
#loc79 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":57:5)
#loc80 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":58:5)
#loc81 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":77:5)
#loc82 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":58:8)
#loc83 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":59:5)
#loc84 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":62:5)
#loc85 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":64:5)
#loc86 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":61:9)
#loc87 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":65:9)
#loc88 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":76:9)
#loc89 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":67:13)
#loc90 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":67:64)
#loc91 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":67:41)
#loc92 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":67:48)
#loc93 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":67:52)
#loc94 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":67:63)
#loc95 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":68:13)
#loc96 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":72:13)
#loc97 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":68:17)
#loc98 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":68:31)
#loc99 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":69:13)
#loc100 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":70:17)
#loc101 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":71:17)
#loc102 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":71:22)
#loc103 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":73:20)
#loc104 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":73:32)
#loc105 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":73:37)
#loc106 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":73:41)
#loc107 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":73:13)
#loc108 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":73:42)
#loc109 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":74:33)
#loc110 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":74:13)
#loc111 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":74:24)
#loc112 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":74:28)
#loc113 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":74:29)
#loc114 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":75:20)
#loc115 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":75:13)
#loc116 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":78:15)
#loc117 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":78:5)
#loc118 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":80:5)
#loc119 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":80:10)
#loc120 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":84:1)
#loc121 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":106:1)
#loc122 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":86:5)
#loc123 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":86:12)
#loc124 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":87:12)
#loc125 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":87:5)
#loc126 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":88:5)
#loc127 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":102:5)
#loc128 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":88:8)
#loc129 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":89:5)
#loc130 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":90:9)
#loc131 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":101:9)
#loc132 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":92:13)
#loc133 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":92:64)
#loc134 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":92:41)
#loc135 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":92:48)
#loc136 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":92:52)
#loc137 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":92:63)
#loc138 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":93:13)
#loc139 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":97:13)
#loc140 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":93:17)
#loc141 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":93:31)
#loc142 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":94:13)
#loc143 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":95:27)
#loc144 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":95:17)
#loc145 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":96:17)
#loc146 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":96:22)
#loc147 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":98:20)
#loc148 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":98:32)
#loc149 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":98:37)
#loc150 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":98:41)
#loc151 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":98:13)
#loc152 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":98:42)
#loc153 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":99:33)
#loc154 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":99:13)
#loc155 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":99:24)
#loc156 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":99:28)
#loc157 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":99:29)
#loc158 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":100:20)
#loc159 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":100:13)
#loc160 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":103:15)
#loc161 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":103:5)
#loc162 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":105:5)
#loc163 = loc("CWE590_Free_Memory_Not_on_Heap__free_char_static_04.c":105:10)
#loc164 = loc(fused[#loc2, #loc3])
#loc165 = loc(fused[#loc4, #loc5])
#loc166 = loc(fused[#loc6, #loc7])
#loc167 = loc(fused[#loc8, #loc9])
#loc168 = loc(fused[#loc11, #loc10])
#loc169 = loc(fused[#loc12, #loc13])
#loc170 = loc(fused[#loc15, #loc13])
#loc171 = loc(fused[#loc16, #loc17])
#loc172 = loc(fused[#loc22, #loc23])
#loc173 = loc(fused[#loc27, #loc24])
#loc174 = loc(fused[#loc29, #loc28])
#loc175 = loc(fused[#loc34, #loc35])
#loc176 = loc(fused[#loc36, #loc37])
#loc177 = loc(fused[#loc38, #loc39])
#loc178 = loc(fused[#loc40, #loc41])
#loc179 = loc(fused[#loc42, #loc43])
#loc180 = loc(fused[#loc48, #loc49])
#loc183 = loc(fused[#loc59, #loc60])
#loc184 = loc(fused[#loc63, #loc64])
#loc185 = loc(fused[#loc67, #loc66])
#loc186 = loc(fused[#loc69, #loc70])
#loc187 = loc(fused[#loc72, #loc73])
#loc188 = loc(fused[#loc74, #loc75])
#loc189 = loc(fused[#loc76, #loc77])
#loc190 = loc(fused[#loc79, #loc78])
#loc191 = loc(fused[#loc80, #loc81])
#loc192 = loc(fused[#loc83, #loc84, #loc85, #loc81])
#loc193 = loc(fused[#loc87, #loc88])
#loc194 = loc(fused[#loc89, #loc90])
#loc195 = loc(fused[#loc93, #loc94])
#loc196 = loc(fused[#loc92, #loc94])
#loc197 = loc(fused[#loc91, #loc90])
#loc198 = loc(fused[#loc95, #loc96])
#loc199 = loc(fused[#loc97, #loc98])
#loc200 = loc(fused[#loc99, #loc96])
#loc201 = loc(fused[#loc107, #loc108])
#loc202 = loc(fused[#loc110, #loc109])
#loc203 = loc(fused[#loc115, #loc114])
#loc204 = loc(fused[#loc120, #loc121])
#loc205 = loc(fused[#loc122, #loc123])
#loc206 = loc(fused[#loc125, #loc124])
#loc207 = loc(fused[#loc126, #loc127])
#loc208 = loc(fused[#loc129, #loc127])
#loc209 = loc(fused[#loc130, #loc131])
#loc210 = loc(fused[#loc132, #loc133])
#loc211 = loc(fused[#loc136, #loc137])
#loc212 = loc(fused[#loc135, #loc137])
#loc213 = loc(fused[#loc134, #loc133])
#loc214 = loc(fused[#loc138, #loc139])
#loc215 = loc(fused[#loc140, #loc141])
#loc216 = loc(fused[#loc142, #loc139])
#loc217 = loc(fused[#loc151, #loc152])
#loc218 = loc(fused[#loc154, #loc153])
#loc219 = loc(fused[#loc159, #loc158])
