!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone})>
#fn_attr2 = #cir<extra({nothrow = #cir.nothrow})>
#loc3 = loc("../../../testcasesupport/std_testcase.h":61:7)
!ty_TwoIntsClass = !cir.struct<class "TwoIntsClass" {!s32i, !s32i} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s06/CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<#dlti.dl_entry<!llvm.ptr<270>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f64, dense<64> : vector<2xi64>>, #dlti.dl_entry<f16, dense<16> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<271>, dense<32> : vector<4xi64>>, #dlti.dl_entry<f128, dense<128> : vector<2xi64>>, #dlti.dl_entry<i16, dense<16> : vector<2xi64>>, #dlti.dl_entry<i8, dense<8> : vector<2xi64>>, #dlti.dl_entry<i32, dense<32> : vector<2xi64>>, #dlti.dl_entry<f80, dense<128> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr, dense<64> : vector<4xi64>>, #dlti.dl_entry<i1, dense<8> : vector<2xi64>>, #dlti.dl_entry<i64, dense<64> : vector<2xi64>>, #dlti.dl_entry<!llvm.ptr<272>, dense<64> : vector<4xi64>>, #dlti.dl_entry<i128, dense<128> : vector<2xi64>>, #dlti.dl_entry<"dlti.endianness", "little">, #dlti.dl_entry<"dlti.stack_alignment", 128 : i64>>, llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-i128:128-f80:128-n8:16:32:64-S128"} {
  cir.func private  @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc61)
  cir.func linkonce_odr  @_ZN12TwoIntsClassC2Ev(%arg0: !cir.ptr<!ty_TwoIntsClass> loc("../../../testcasesupport/std_testcase.h":61:7)) extra(#fn_attr) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["this", init] {alignment = 8 : i64} loc(#loc3)
    cir.store %arg0, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc3)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc3)
    cir.return loc(#loc3)
  } loc(#loc3)
  cir.func private  @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_637badSinkEPP12TwoIntsClass(!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>) loc(#loc62)
  cir.func  @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_633badEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc64)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc10)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc65)
    %2 = cir.const #cir.int<8> : !u64i loc(#loc66)
    %3 = cir.call @_Znwm(%2) : (!u64i) -> !cir.ptr<!void> loc(#loc14)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc66)
    cir.call @_ZN12TwoIntsClassC2Ev(%4) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc13)
    cir.store %4, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc67)
    cir.call @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_637badSinkEPP12TwoIntsClass(%0) : (!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>) -> () loc(#loc16)
    cir.return loc(#loc7)
  } loc(#loc63)
  cir.func private  @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr2) loc(#loc68)
  cir.func private  @exit(!s32i) extra(#fn_attr2) loc(#loc69)
  cir.func private  @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_6311goodG2BSinkEPP12TwoIntsClass(!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>) loc(#loc70)
  cir.func internal private  @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_63L7goodG2BEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc72)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc27)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc73)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc29)
    %3 = cir.const #cir.int<100> : !s32i loc(#loc30)
    %4 = cir.cast(integral, %3 : !s32i), !u64i loc(#loc30)
    %5 = cir.const #cir.int<8> : !u64i loc(#loc74)
    %6 = cir.binop(mul, %4, %5) : !u64i loc(#loc75)
    %7 = cir.call @malloc(%6) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr2) loc(#loc29)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc76)
    cir.store %8, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc77)
    cir.scope {
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, !cir.ptr<!ty_TwoIntsClass> loc(#loc37)
      %10 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc38)
      %11 = cir.cmp(eq, %9, %10) : !cir.ptr<!ty_TwoIntsClass>, !cir.bool loc(#loc79)
      cir.if %11 {
        %12 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc40)
        %13 = cir.const #cir.int<1> : !s32i loc(#loc41)
        %14 = cir.unary(minus, %13) : !s32i, !s32i loc(#loc42)
        cir.call @exit(%14) : (!s32i) -> () extra(#fn_attr2) loc(#loc40)
      } loc(#loc80)
    } loc(#loc78)
    cir.call @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_6311goodG2BSinkEPP12TwoIntsClass(%0) : (!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>) -> () loc(#loc43)
    cir.return loc(#loc24)
  } loc(#loc71)
  cir.func private  @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_6311goodB2GSinkEPP12TwoIntsClass(!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>) loc(#loc81)
  cir.func internal private  @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_63L7goodB2GEv() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>>, ["data"] {alignment = 8 : i64} loc(#loc83)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty_TwoIntsClass> loc(#loc50)
    cir.store %1, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc84)
    %2 = cir.const #cir.int<8> : !u64i loc(#loc85)
    %3 = cir.call @_Znwm(%2) : (!u64i) -> !cir.ptr<!void> loc(#loc54)
    %4 = cir.cast(bitcast, %3 : !cir.ptr<!void>), !cir.ptr<!ty_TwoIntsClass> loc(#loc85)
    cir.call @_ZN12TwoIntsClassC2Ev(%4) : (!cir.ptr<!ty_TwoIntsClass>) -> () extra(#fn_attr2) loc(#loc53)
    cir.store %4, %0 : !cir.ptr<!ty_TwoIntsClass>, !cir.ptr<!cir.ptr<!ty_TwoIntsClass>> loc(#loc86)
    cir.call @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_6311goodB2GSinkEPP12TwoIntsClass(%0) : (!cir.ptr<!cir.ptr<!ty_TwoIntsClass>>) -> () loc(#loc56)
    cir.return loc(#loc47)
  } loc(#loc82)
  cir.func  @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_634goodEv() extra(#fn_attr1) {
    cir.call @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_63L7goodG2BEv() : () -> () loc(#loc59)
    cir.call @_ZN63CWE762_Mismatched_Memory_Management_Routines__new_free_class_63L7goodB2GEv() : () -> () loc(#loc60)
    cir.return loc(#loc58)
  } loc(#loc87)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/test_projects/juliet-c/testcases/CWE762_Mismatched_Memory_Management_Routines/s06/CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":0:0)
#loc1 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":131:20)
#loc2 = loc("/usr/lib/gcc/x86_64-redhat-linux/14/../../../../include/c++/14/new":132:41)
#loc4 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":26:1)
#loc5 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":26:38)
#loc6 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":28:1)
#loc7 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":36:1)
#loc8 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":30:5)
#loc9 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":30:20)
#loc10 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":32:12)
#loc11 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":32:5)
#loc12 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":34:12)
#loc13 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":34:16)
#loc14 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":28:6)
#loc15 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":34:5)
#loc16 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":35:5)
#loc17 = loc("/usr/include/stdlib.h":672:1)
#loc18 = loc("/usr/include/stdlib.h":672:45)
#loc19 = loc("/usr/include/stdlib.h":756:1)
#loc20 = loc("/usr/include/stdlib.h":756:70)
#loc21 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":43:1)
#loc22 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":43:39)
#loc23 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":45:1)
#loc24 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":54:1)
#loc25 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":47:5)
#loc26 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":47:20)
#loc27 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":49:12)
#loc28 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":49:5)
#loc29 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":51:28)
#loc30 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":51:35)
#loc31 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":51:39)
#loc32 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":51:58)
#loc33 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":51:59)
#loc34 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":51:5)
#loc35 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":52:5)
#loc36 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":52:33)
#loc37 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":52:9)
#loc38 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":52:17)
#loc39 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":52:23)
#loc40 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":52:24)
#loc41 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":52:30)
#loc42 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":52:29)
#loc43 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":53:5)
#loc44 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":57:1)
#loc45 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":57:39)
#loc46 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":59:1)
#loc47 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":67:1)
#loc48 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":61:5)
#loc49 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":61:20)
#loc50 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":63:12)
#loc51 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":63:5)
#loc52 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":65:12)
#loc53 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":65:16)
#loc54 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":59:13)
#loc55 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":65:5)
#loc56 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":66:5)
#loc57 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":69:1)
#loc58 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":73:1)
#loc59 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":71:5)
#loc60 = loc("CWE762_Mismatched_Memory_Management_Routines__new_free_class_63a.cpp":72:5)
#loc61 = loc(fused[#loc1, #loc2])
#loc62 = loc(fused[#loc4, #loc5])
#loc63 = loc(fused[#loc6, #loc7])
#loc64 = loc(fused[#loc8, #loc9])
#loc65 = loc(fused[#loc11, #loc10])
#loc66 = loc(fused[#loc12, #loc13])
#loc67 = loc(fused[#loc15, #loc13])
#loc68 = loc(fused[#loc17, #loc18])
#loc69 = loc(fused[#loc19, #loc20])
#loc70 = loc(fused[#loc21, #loc22])
#loc71 = loc(fused[#loc23, #loc24])
#loc72 = loc(fused[#loc25, #loc26])
#loc73 = loc(fused[#loc28, #loc27])
#loc74 = loc(fused[#loc31, #loc32])
#loc75 = loc(fused[#loc30, #loc32])
#loc76 = loc(fused[#loc29, #loc33])
#loc77 = loc(fused[#loc34, #loc33])
#loc78 = loc(fused[#loc35, #loc36])
#loc79 = loc(fused[#loc37, #loc38])
#loc80 = loc(fused[#loc39, #loc36])
#loc81 = loc(fused[#loc44, #loc45])
#loc82 = loc(fused[#loc46, #loc47])
#loc83 = loc(fused[#loc48, #loc49])
#loc84 = loc(fused[#loc51, #loc50])
#loc85 = loc(fused[#loc52, #loc53])
#loc86 = loc(fused[#loc55, #loc53])
#loc87 = loc(fused[#loc57, #loc58])
