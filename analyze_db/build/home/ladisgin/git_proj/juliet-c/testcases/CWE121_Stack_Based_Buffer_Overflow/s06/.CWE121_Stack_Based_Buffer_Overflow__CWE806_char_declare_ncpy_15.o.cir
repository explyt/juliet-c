!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc139)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc3)
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc140)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc141)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc143)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc144)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc145)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc16)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc146)
    cir.br ^bb1 loc(#loc147)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc20)
    cir.br ^bb2 loc(#loc18)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc18)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc21)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc22)
    %7 = cir.const #cir.int<65> : !s32i loc(#loc23)
    %8 = cir.const #cir.int<100> : !s32i loc(#loc24)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc24)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc24)
    cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc148)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc28)
    %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc28)
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    %15 = cir.const #cir.int<100> : !s32i loc(#loc30)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc31)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc30)
    %18 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc32)
    cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc149)
    cir.br ^bb6 loc(#loc33)
  ^bb5:  // pred: ^bb2
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc3)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc3)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc34)
    cir.br ^bb6 loc(#loc35)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc19)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc150)
  ^bb8:  // pred: ^bb7
    %21 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc143)
    cir.store %21, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc143)
    %22 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc38)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc39)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    %25 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc41)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
    %27 = cir.call @strlen(%26) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc41)
    %28 = cir.call @strncpy(%23, %24, %27) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc38)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc43)
    %30 = cir.cast(integral, %29 : !s32i), !s8i loc(#loc43)
    %31 = cir.const #cir.int<50> : !s32i loc(#loc44)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc45)
    %33 = cir.binop(sub, %31, %32) nsw : !s32i loc(#loc44)
    %34 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc46)
    %35 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %33 : !s32i), !cir.ptr<!s8i> loc(#loc46)
    cir.store %30, %35 : !s8i, !cir.ptr<!s8i> loc(#loc151)
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc47)
    cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc48)
    cir.br ^bb9 loc(#loc37)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc9)
  } loc(#loc142)
  cir.func no_proto @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc153)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc51)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc154)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc53)
    cir.return loc(#loc50)
  } loc(#loc152)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc156)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc157)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc158)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc63)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc159)
    cir.br ^bb1 loc(#loc160)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<5> : !s32i loc(#loc67)
    cir.br ^bb2 loc(#loc65)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc65)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc68)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc69)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc69)
    cir.call @printLine(%6) : (!cir.ptr<!s8i>) -> () loc(#loc70)
    cir.br ^bb6 loc(#loc71)
  ^bb5:  // pred: ^bb2
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc72)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc72)
    %9 = cir.const #cir.int<65> : !s32i loc(#loc73)
    %10 = cir.const #cir.int<50> : !s32i loc(#loc74)
    %11 = cir.const #cir.int<1> : !s32i loc(#loc75)
    %12 = cir.binop(sub, %10, %11) nsw : !s32i loc(#loc74)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc74)
    cir.libc.memset %13 bytes from %8 set to %9 : !cir.ptr<!void>, !s32i, !u64i loc(#loc161)
    %14 = cir.const #cir.int<0> : !s32i loc(#loc78)
    %15 = cir.cast(integral, %14 : !s32i), !s8i loc(#loc78)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc79)
    %17 = cir.const #cir.int<50> : !s32i loc(#loc80)
    %18 = cir.const #cir.int<1> : !s32i loc(#loc81)
    %19 = cir.binop(sub, %17, %18) nsw : !s32i loc(#loc80)
    %20 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %19 : !s32i), !cir.ptr<!s8i> loc(#loc82)
    cir.store %15, %20 : !s8i, !cir.ptr<!s8i> loc(#loc162)
    cir.br ^bb6 loc(#loc83)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc66)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc163)
  ^bb8:  // pred: ^bb7
    %21 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc156)
    cir.store %21, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc156)
    %22 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc86)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc87)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc88)
    %25 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc89)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc90)
    %27 = cir.call @strlen(%26) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc89)
    %28 = cir.call @strncpy(%23, %24, %27) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc86)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc91)
    %30 = cir.cast(integral, %29 : !s32i), !s8i loc(#loc91)
    %31 = cir.const #cir.int<50> : !s32i loc(#loc92)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc93)
    %33 = cir.binop(sub, %31, %32) nsw : !s32i loc(#loc92)
    %34 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc94)
    %35 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %33 : !s32i), !cir.ptr<!s8i> loc(#loc94)
    cir.store %30, %35 : !s8i, !cir.ptr<!s8i> loc(#loc164)
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc95)
    cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc96)
    cir.br ^bb9 loc(#loc85)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc56)
  } loc(#loc155)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc166)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc167)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc168)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc105)
    cir.store %3, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc169)
    cir.br ^bb1 loc(#loc170)
  ^bb1:  // pred: ^bb0
    %4 = cir.const #cir.int<6> : !s32i loc(#loc109)
    cir.br ^bb2 loc(#loc107)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %4 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc107)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc110)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %5 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc111)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc111)
    %7 = cir.const #cir.int<65> : !s32i loc(#loc112)
    %8 = cir.const #cir.int<50> : !s32i loc(#loc113)
    %9 = cir.const #cir.int<1> : !s32i loc(#loc114)
    %10 = cir.binop(sub, %8, %9) nsw : !s32i loc(#loc113)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc113)
    cir.libc.memset %11 bytes from %6 set to %7 : !cir.ptr<!void>, !s32i, !u64i loc(#loc171)
    %12 = cir.const #cir.int<0> : !s32i loc(#loc117)
    %13 = cir.cast(integral, %12 : !s32i), !s8i loc(#loc117)
    %14 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc118)
    %15 = cir.const #cir.int<50> : !s32i loc(#loc119)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc120)
    %17 = cir.binop(sub, %15, %16) nsw : !s32i loc(#loc119)
    %18 = cir.ptr_stride(%14 : !cir.ptr<!s8i>, %17 : !s32i), !cir.ptr<!s8i> loc(#loc121)
    cir.store %13, %18 : !s8i, !cir.ptr<!s8i> loc(#loc172)
    cir.br ^bb6 loc(#loc122)
  ^bb5:  // pred: ^bb2
    %19 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc123)
    %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc123)
    cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc124)
    cir.br ^bb6 loc(#loc125)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc108)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc173)
  ^bb8:  // pred: ^bb7
    %21 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc166)
    cir.store %21, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc166)
    %22 = cir.get_global @strncpy : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc128)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc129)
    %24 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc130)
    %25 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc131)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc132)
    %27 = cir.call @strlen(%26) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc131)
    %28 = cir.call @strncpy(%23, %24, %27) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc128)
    %29 = cir.const #cir.int<0> : !s32i loc(#loc133)
    %30 = cir.cast(integral, %29 : !s32i), !s8i loc(#loc133)
    %31 = cir.const #cir.int<50> : !s32i loc(#loc134)
    %32 = cir.const #cir.int<1> : !s32i loc(#loc135)
    %33 = cir.binop(sub, %31, %32) nsw : !s32i loc(#loc134)
    %34 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc136)
    %35 = cir.ptr_stride(%34 : !cir.ptr<!s8i>, %33 : !s32i), !cir.ptr<!s8i> loc(#loc136)
    cir.store %30, %35 : !s8i, !cir.ptr<!s8i> loc(#loc174)
    %36 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc137)
    cir.call @printLine(%36) : (!cir.ptr<!s8i>) -> () loc(#loc138)
    cir.br ^bb9 loc(#loc127)
  ^bb9:  // pred: ^bb8
    cir.return loc(#loc98)
  } loc(#loc165)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":37:19)
#loc4 = loc("/usr/include/string.h":144:1)
#loc5 = loc("/usr/include/string.h":146:14)
#loc6 = loc("/usr/include/string.h":407:1)
#loc7 = loc("/usr/include/string.h":408:33)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":23:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":47:1)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":41:9)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":41:25)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":25:5)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":25:12)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":26:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":26:24)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":27:12)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":27:5)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":28:5)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":39:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":28:12)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":30:5)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":32:16)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":32:22)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":32:27)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":32:31)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":32:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":32:32)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":33:23)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":33:9)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":33:14)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":33:18)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":33:19)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":34:9)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":37:9)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":38:9)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":40:5)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":46:5)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":43:9)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":43:17)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":43:23)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":43:29)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":43:36)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":44:22)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":44:14)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":44:17)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":44:9)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":45:19)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":45:9)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":107:1)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":111:1)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":109:5)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":109:14)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":110:5)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":110:14)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":54:1)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":78:1)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":72:9)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":72:25)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":56:5)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":56:12)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":57:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":57:24)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":58:12)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":58:5)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":59:5)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":70:5)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":59:12)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":61:5)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":63:19)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":63:9)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":64:9)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":67:16)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":67:22)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":67:27)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":67:30)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":67:9)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":67:31)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":68:22)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":68:9)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":68:14)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":68:17)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":68:18)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":69:9)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":71:5)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":77:5)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":74:9)
#loc87 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":74:17)
#loc88 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":74:23)
#loc89 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":74:29)
#loc90 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":74:36)
#loc91 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":75:22)
#loc92 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":75:14)
#loc93 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":75:17)
#loc94 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":75:9)
#loc95 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":76:19)
#loc96 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":76:9)
#loc97 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":81:1)
#loc98 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":105:1)
#loc99 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":99:9)
#loc100 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":99:25)
#loc101 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":83:5)
#loc102 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":83:12)
#loc103 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":84:5)
#loc104 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":84:24)
#loc105 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":85:12)
#loc106 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":85:5)
#loc107 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":86:5)
#loc108 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":97:5)
#loc109 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":86:12)
#loc110 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":88:5)
#loc111 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":90:16)
#loc112 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":90:22)
#loc113 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":90:27)
#loc114 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":90:30)
#loc115 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":90:9)
#loc116 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":90:31)
#loc117 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":91:22)
#loc118 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":91:9)
#loc119 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":91:14)
#loc120 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":91:17)
#loc121 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":91:18)
#loc122 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":92:9)
#loc123 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":95:19)
#loc124 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":95:9)
#loc125 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":96:9)
#loc126 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":98:5)
#loc127 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":104:5)
#loc128 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":101:9)
#loc129 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":101:17)
#loc130 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":101:23)
#loc131 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":101:29)
#loc132 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":101:36)
#loc133 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":102:22)
#loc134 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":102:14)
#loc135 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":102:17)
#loc136 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":102:9)
#loc137 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":103:19)
#loc138 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_ncpy_15.c":103:9)
#loc139 = loc(fused[#loc1, #loc2])
#loc140 = loc(fused[#loc4, #loc5])
#loc141 = loc(fused[#loc6, #loc7])
#loc142 = loc(fused[#loc8, #loc9])
#loc143 = loc(fused[#loc10, #loc11])
#loc144 = loc(fused[#loc12, #loc13])
#loc145 = loc(fused[#loc14, #loc15])
#loc146 = loc(fused[#loc17, #loc16])
#loc147 = loc(fused[#loc18, #loc19])
#loc148 = loc(fused[#loc26, #loc27])
#loc149 = loc(fused[#loc29, #loc28])
#loc150 = loc(fused[#loc36, #loc37])
#loc151 = loc(fused[#loc46, #loc43])
#loc152 = loc(fused[#loc49, #loc50])
#loc153 = loc(fused[#loc51, #loc52])
#loc154 = loc(fused[#loc53, #loc54])
#loc155 = loc(fused[#loc55, #loc56])
#loc156 = loc(fused[#loc57, #loc58])
#loc157 = loc(fused[#loc59, #loc60])
#loc158 = loc(fused[#loc61, #loc62])
#loc159 = loc(fused[#loc64, #loc63])
#loc160 = loc(fused[#loc65, #loc66])
#loc161 = loc(fused[#loc76, #loc77])
#loc162 = loc(fused[#loc79, #loc78])
#loc163 = loc(fused[#loc84, #loc85])
#loc164 = loc(fused[#loc94, #loc91])
#loc165 = loc(fused[#loc97, #loc98])
#loc166 = loc(fused[#loc99, #loc100])
#loc167 = loc(fused[#loc101, #loc102])
#loc168 = loc(fused[#loc103, #loc104])
#loc169 = loc(fused[#loc106, #loc105])
#loc170 = loc(fused[#loc107, #loc108])
#loc171 = loc(fused[#loc115, #loc116])
#loc172 = loc(fused[#loc118, #loc117])
#loc173 = loc(fused[#loc126, #loc127])
#loc174 = loc(fused[#loc136, #loc133])
