!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":79:10)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":79:14)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":79:20)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":79:32)
!ty__twoIntsStruct = !cir.struct<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
#loc126 = loc(fused[#loc54, #loc55])
#loc127 = loc(fused[#loc56, #loc57])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc103)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc104)
  cir.global external dsolocal @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68_badData = #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> {alignment = 8 : i64} loc(#loc105)
  cir.func no_proto private @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68b_badSink(...) loc(#loc106)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc108)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc13)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc109)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc15)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc110)
    %4 = cir.call @malloc(%3) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc15)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc111)
    cir.store %5, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc112)
    cir.scope {
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc22)
      %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc23)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc23)
      %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc114)
      cir.if %19 {
        %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc25)
        %21 = cir.const #cir.int<1> : !s32i loc(#loc26)
        %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc27)
        cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc25)
      } loc(#loc115)
    } loc(#loc113)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc28)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc29)
    %8 = cir.get_member %7[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc30)
    cir.store %6, %8 : !s32i, !cir.ptr<!s32i> loc(#loc116)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc31)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
    %11 = cir.get_member %10[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc33)
    cir.store %9, %11 : !s32i, !cir.ptr<!s32i> loc(#loc117)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc34)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68_badData : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc105)
    cir.store %12, %13 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc118)
    %14 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68b_badSink : !cir.ptr<!cir.func<!void (...)>> loc(#loc119)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!cir.func<!void (...)>>), !cir.ptr<!cir.func<!void ()>> loc(#loc119)
    cir.call %15() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc36)
    cir.return loc(#loc10)
  } loc(#loc107)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc121)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc40)
    cir.return loc(#loc39)
  } loc(#loc120)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc122)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc123)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc124)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc48)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc49)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc50)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc51)
  cir.func @main(%arg0: !s32i loc(fused[#loc54, #loc55]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc56, #loc57])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc126)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc127)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc53)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc58)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc58)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc59)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc60)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc60)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc61)
    %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc48)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc48)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc62)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68_good : !cir.ptr<!cir.func<!void ()>> loc(#loc128)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68_good() : () -> () loc(#loc63)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc49)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc49)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc65)
    %11 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc50)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc50)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc66)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc129)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68_bad() : () -> () loc(#loc67)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc51)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc51)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc69)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc70)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc130)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc130)
    cir.return %17 : !s32i loc(#loc130)
  } loc(#loc125)
  cir.global external dsolocal @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68_goodG2BData = #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> {alignment = 8 : i64} loc(#loc131)
  cir.func no_proto private @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68b_goodG2BSink(...) loc(#loc132)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc134)
    %1 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc80)
    cir.store %1, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc135)
    %2 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc82)
    %3 = cir.const #cir.int<8> : !u64i loc(#loc136)
    %4 = cir.call @malloc(%3) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc82)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc137)
    cir.store %5, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc138)
    cir.scope {
      %16 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc89)
      %17 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc90)
      %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc90)
      %19 = cir.cmp(eq, %16, %18) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc140)
      cir.if %19 {
        %20 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc92)
        %21 = cir.const #cir.int<1> : !s32i loc(#loc93)
        %22 = cir.unary(minus, %21) : !s32i, !s32i loc(#loc94)
        cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc92)
      } loc(#loc141)
    } loc(#loc139)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc96)
    %8 = cir.get_member %7[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc30)
    cir.store %6, %8 : !s32i, !cir.ptr<!s32i> loc(#loc142)
    %9 = cir.const #cir.int<2> : !s32i loc(#loc97)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc98)
    %11 = cir.get_member %10[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc33)
    cir.store %9, %11 : !s32i, !cir.ptr<!s32i> loc(#loc143)
    %12 = cir.load %0 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc99)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68_goodG2BData : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc131)
    cir.store %12, %13 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc144)
    %14 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68b_goodG2BSink : !cir.ptr<!cir.func<!void (...)>> loc(#loc145)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!cir.func<!void (...)>>), !cir.ptr<!cir.func<!void ()>> loc(#loc145)
    cir.call %15() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc101)
    cir.return loc(#loc77)
  } loc(#loc133)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":19:1)
#loc6 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":19:17)
#loc7 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":25:1)
#loc8 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":25:67)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":27:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":40:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":29:5)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":29:21)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":31:12)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":31:5)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":34:29)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":34:36)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":34:47)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":34:48)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":34:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":35:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":35:33)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":35:9)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":35:17)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":35:23)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":35:24)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":35:30)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":35:29)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":36:20)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":36:5)
#loc30 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":37:20)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":37:5)
#loc33 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":38:67)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":38:5)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":39:5)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":39:66)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":64:1)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":67:1)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":66:5)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":66:13)
#loc42 = loc("/usr/include/stdlib.h":575:1)
#loc43 = loc("/usr/include/stdlib.h":575:41)
#loc44 = loc("/usr/include/time.h":76:1)
#loc45 = loc("/usr/include/time.h":76:38)
#loc46 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc47 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":84:15)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":86:15)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":89:15)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":91:15)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":79:1)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":94:1)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":80:1)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":82:27)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":82:22)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":82:5)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":84:5)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":85:5)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":85:62)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":86:5)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":89:5)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":90:5)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":90:61)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":91:5)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":93:12)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":93:5)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":20:1)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":20:17)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":47:1)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":47:71)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":50:1)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":62:1)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":52:5)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":52:21)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":54:12)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":54:5)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":56:29)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":56:36)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":56:48)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":56:49)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":56:5)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":57:5)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":57:33)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":57:9)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":57:17)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":57:23)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":57:24)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":57:30)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":57:29)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":58:20)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":58:5)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":59:20)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":59:5)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":60:71)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":60:5)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":61:5)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_68a.c":61:70)
#loc103 = loc(fused[#loc1, #loc2])
#loc104 = loc(fused[#loc3, #loc4])
#loc105 = loc(fused[#loc5, #loc6])
#loc106 = loc(fused[#loc7, #loc8])
#loc107 = loc(fused[#loc9, #loc10])
#loc108 = loc(fused[#loc11, #loc12])
#loc109 = loc(fused[#loc14, #loc13])
#loc110 = loc(fused[#loc16, #loc17])
#loc111 = loc(fused[#loc15, #loc18])
#loc112 = loc(fused[#loc19, #loc18])
#loc113 = loc(fused[#loc20, #loc21])
#loc114 = loc(fused[#loc22, #loc23])
#loc115 = loc(fused[#loc24, #loc21])
#loc116 = loc(fused[#loc29, #loc28])
#loc117 = loc(fused[#loc32, #loc31])
#loc118 = loc(fused[#loc35, #loc34])
#loc119 = loc(fused[#loc36, #loc37])
#loc120 = loc(fused[#loc38, #loc39])
#loc121 = loc(fused[#loc40, #loc41])
#loc122 = loc(fused[#loc42, #loc43])
#loc123 = loc(fused[#loc44, #loc45])
#loc124 = loc(fused[#loc46, #loc47])
#loc125 = loc(fused[#loc52, #loc53])
#loc128 = loc(fused[#loc63, #loc64])
#loc129 = loc(fused[#loc67, #loc68])
#loc130 = loc(fused[#loc71, #loc70])
#loc131 = loc(fused[#loc72, #loc73])
#loc132 = loc(fused[#loc74, #loc75])
#loc133 = loc(fused[#loc76, #loc77])
#loc134 = loc(fused[#loc78, #loc79])
#loc135 = loc(fused[#loc81, #loc80])
#loc136 = loc(fused[#loc83, #loc84])
#loc137 = loc(fused[#loc82, #loc85])
#loc138 = loc(fused[#loc86, #loc85])
#loc139 = loc(fused[#loc87, #loc88])
#loc140 = loc(fused[#loc89, #loc90])
#loc141 = loc(fused[#loc91, #loc88])
#loc142 = loc(fused[#loc96, #loc95])
#loc143 = loc(fused[#loc98, #loc97])
#loc144 = loc(fused[#loc100, #loc99])
#loc145 = loc(fused[#loc101, #loc102])
