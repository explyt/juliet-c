!s32i = !cir.int<s, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc103)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc104)
  cir.func private @printStructLine(!cir.ptr<!ty__twoIntsStruct>) loc(#loc105)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc106)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc108)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc109)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc110)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc109)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc110)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc17)
    cir.store %3, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc111)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc113)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc22)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc23)
      cir.store %6, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc113)
      %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc24)
      %8 = cir.const #cir.int<8> : !u64i loc(#loc114)
      %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc24)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc115)
      cir.store %10, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc116)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc31)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc32)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc32)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc118)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc34)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc35)
          %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc36)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc34)
        } loc(#loc119)
      } loc(#loc117)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc37)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc38)
      %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc39)
      cir.store %11, %13 : !s32i, !cir.ptr<!s32i> loc(#loc120)
      %14 = cir.const #cir.int<2> : !s32i loc(#loc40)
      %15 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc41)
      %16 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
      cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc121)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc43)
      %18 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc44)
      cir.store %17, %18 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc122)
    } loc(#loc112)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc124)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc49)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
      cir.store %6, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc124)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc51)
      cir.call @printStructLine(%7) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc52)
      %8 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc53)
      %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc54)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc54)
      cir.call @free(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc53)
    } loc(#loc123)
    cir.return loc(#loc10)
  } loc(#loc107)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc126)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc57)
    cir.return loc(#loc56)
  } loc(#loc125)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data"] {alignment = 8 : i64} loc(#loc128)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr1", init] {alignment = 8 : i64} loc(#loc129)
    %2 = cir.alloca !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, ["dataPtr2", init] {alignment = 8 : i64} loc(#loc130)
    cir.store %0, %1 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc129)
    cir.store %0, %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>> loc(#loc130)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc67)
    cir.store %3, %0 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc131)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc133)
      %5 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc72)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc73)
      cir.store %6, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc133)
      %7 = cir.get_global @malloc : !cir.ptr<!cir.func<(!u64i) -> !cir.ptr<!void>>> loc(#loc74)
      %8 = cir.const #cir.int<8> : !u64i loc(#loc134)
      %9 = cir.call @malloc(%8) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc74)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc135)
      cir.store %10, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc136)
      cir.scope {
        %19 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc81)
        %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc82)
        %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc82)
        %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc138)
        cir.if %22 {
          %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc84)
          %24 = cir.const #cir.int<1> : !s32i loc(#loc85)
          %25 = cir.unary(minus, %24) nsw : !s32i, !s32i loc(#loc86)
          cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc84)
        } loc(#loc139)
      } loc(#loc137)
      %11 = cir.const #cir.int<1> : !s32i loc(#loc87)
      %12 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc88)
      %13 = cir.get_member %12[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc39)
      cir.store %11, %13 : !s32i, !cir.ptr<!s32i> loc(#loc140)
      %14 = cir.const #cir.int<2> : !s32i loc(#loc89)
      %15 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc90)
      %16 = cir.get_member %15[1] {name = "intTwo"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc42)
      cir.store %14, %16 : !s32i, !cir.ptr<!s32i> loc(#loc141)
      %17 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc91)
      %18 = cir.load deref %1 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc92)
      cir.store %17, %18 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc142)
    } loc(#loc132)
    cir.scope {
      %4 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["data", init] {alignment = 8 : i64} loc(#loc144)
      %5 = cir.load deref %2 : !cir.ptr<!cir.ptr<!cir.ptr<!ty__twoIntsStruct>>>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc97)
      %6 = cir.load %5 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc98)
      cir.store %6, %4 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc144)
      %7 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc99)
      cir.call @printStructLine(%7) : (!cir.ptr<!ty__twoIntsStruct>) -> () loc(#loc100)
      %8 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc101)
      %9 = cir.load %4 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc102)
      %10 = cir.cast(bitcast, %9 : !cir.ptr<!ty__twoIntsStruct>), !cir.ptr<!void> loc(#loc102)
      cir.call @free(%10) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc101)
    } loc(#loc143)
    cir.return loc(#loc60)
  } loc(#loc127)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s11/CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":0:0)
#loc1 = loc("/usr/include/stdlib.h":672:1)
#loc2 = loc("/usr/include/stdlib.h":672:45)
#loc3 = loc("/usr/include/stdlib.h":756:1)
#loc4 = loc("/usr/include/stdlib.h":756:70)
#loc5 = loc("../../../testcasesupport/std_testcase_io.h":40:1)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":40:63)
#loc7 = loc("/usr/include/stdlib.h":687:1)
#loc8 = loc("/usr/include/stdlib.h":687:32)
#loc9 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":21:1)
#loc10 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":44:1)
#loc11 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":23:5)
#loc12 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":23:21)
#loc13 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":24:5)
#loc14 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":24:34)
#loc15 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":25:5)
#loc16 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":25:34)
#loc17 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":27:12)
#loc18 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":27:5)
#loc19 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":28:5)
#loc20 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":37:5)
#loc21 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":29:9)
#loc22 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":29:33)
#loc23 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":29:32)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":32:33)
#loc25 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":32:40)
#loc26 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":32:51)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":32:52)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":32:9)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":33:9)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":33:37)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":33:13)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":33:21)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":33:27)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":33:28)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":33:34)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":33:33)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":34:24)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":34:9)
#loc39 = loc("../../../testcasesupport/std_testcase.h":98:9)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":35:24)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":35:9)
#loc42 = loc("../../../testcasesupport/std_testcase.h":99:9)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":36:21)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":36:10)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":36:9)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":38:5)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":43:5)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":39:9)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":39:33)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":39:32)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":41:25)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":41:9)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":42:9)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":42:14)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":75:1)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":78:1)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":77:5)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":77:13)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":51:1)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":73:1)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":53:5)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":53:21)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":54:5)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":54:34)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":55:5)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":55:34)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":57:12)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":57:5)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":58:5)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":66:5)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":59:9)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":59:33)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":59:32)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":61:33)
#loc75 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":61:40)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":61:52)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":61:53)
#loc78 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":61:9)
#loc79 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":62:9)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":62:37)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":62:13)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":62:21)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":62:27)
#loc84 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":62:28)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":62:34)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":62:33)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":63:24)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":63:9)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":64:24)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":64:9)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":65:21)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":65:10)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":65:9)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":67:5)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":72:5)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":68:9)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":68:33)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":68:32)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":70:25)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":70:9)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":71:9)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__sizeof_struct_32.c":71:14)
#loc103 = loc(fused[#loc1, #loc2])
#loc104 = loc(fused[#loc3, #loc4])
#loc105 = loc(fused[#loc5, #loc6])
#loc106 = loc(fused[#loc7, #loc8])
#loc107 = loc(fused[#loc9, #loc10])
#loc108 = loc(fused[#loc11, #loc12])
#loc109 = loc(fused[#loc13, #loc14])
#loc110 = loc(fused[#loc15, #loc16])
#loc111 = loc(fused[#loc18, #loc17])
#loc112 = loc(fused[#loc19, #loc20])
#loc113 = loc(fused[#loc21, #loc22])
#loc114 = loc(fused[#loc25, #loc26])
#loc115 = loc(fused[#loc24, #loc27])
#loc116 = loc(fused[#loc28, #loc27])
#loc117 = loc(fused[#loc29, #loc30])
#loc118 = loc(fused[#loc31, #loc32])
#loc119 = loc(fused[#loc33, #loc30])
#loc120 = loc(fused[#loc38, #loc37])
#loc121 = loc(fused[#loc41, #loc40])
#loc122 = loc(fused[#loc45, #loc43])
#loc123 = loc(fused[#loc46, #loc47])
#loc124 = loc(fused[#loc48, #loc49])
#loc125 = loc(fused[#loc55, #loc56])
#loc126 = loc(fused[#loc57, #loc58])
#loc127 = loc(fused[#loc59, #loc60])
#loc128 = loc(fused[#loc61, #loc62])
#loc129 = loc(fused[#loc63, #loc64])
#loc130 = loc(fused[#loc65, #loc66])
#loc131 = loc(fused[#loc68, #loc67])
#loc132 = loc(fused[#loc69, #loc70])
#loc133 = loc(fused[#loc71, #loc72])
#loc134 = loc(fused[#loc75, #loc76])
#loc135 = loc(fused[#loc74, #loc77])
#loc136 = loc(fused[#loc78, #loc77])
#loc137 = loc(fused[#loc79, #loc80])
#loc138 = loc(fused[#loc81, #loc82])
#loc139 = loc(fused[#loc83, #loc80])
#loc140 = loc(fused[#loc88, #loc87])
#loc141 = loc(fused[#loc90, #loc89])
#loc142 = loc(fused[#loc93, #loc91])
#loc143 = loc(fused[#loc94, #loc95])
#loc144 = loc(fused[#loc96, #loc97])
