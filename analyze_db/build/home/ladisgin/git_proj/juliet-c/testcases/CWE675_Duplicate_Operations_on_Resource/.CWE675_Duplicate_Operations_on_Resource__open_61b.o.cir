!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc8 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":31:65)
#loc9 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":31:69)
#loc25 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":44:69)
#loc26 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":44:73)
#loc39 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":52:69)
#loc40 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":52:73)
#loc57 = loc(fused[#loc8, #loc9])
#loc63 = loc(fused[#loc25, #loc26])
#loc69 = loc(fused[#loc39, #loc40])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__open_61b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @open(!cir.ptr<!s8i>, !s32i, ...) -> !s32i loc(#loc54)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"BadSource_open.txt\00" : !cir.array<!s8i x 19>> : !cir.array<!s8i x 19> {alignment = 1 : i64} loc(#loc3)
  cir.func private @close(!s32i) -> !s32i loc(#loc55)
  cir.func @CWE675_Duplicate_Operations_on_Resource__open_61b_badSource(%arg0: !s32i loc(fused[#loc8, #loc9])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc57)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc7)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc10)
    %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc3)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc3)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc11)
    %5 = cir.const #cir.int<64> : !s32i loc(#loc12)
    %6 = cir.binop(or, %4, %5) : !s32i loc(#loc58)
    %7 = cir.const #cir.int<256> : !s32i loc(#loc13)
    %8 = cir.const #cir.int<128> : !s32i loc(#loc14)
    %9 = cir.binop(or, %7, %8) : !s32i loc(#loc59)
    %10 = cir.call @open(%3, %6, %9) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc15)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc60)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc18)
    %12 = cir.call @close(%11) : (!s32i) -> !s32i loc(#loc19)
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc20)
    cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc61)
    %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc61)
    cir.return %14 : !s32i loc(#loc61)
  } loc(#loc56)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"GoodSource_open.txt\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc22)
  cir.func @CWE675_Duplicate_Operations_on_Resource__open_61b_goodG2BSource(%arg0: !s32i loc(fused[#loc25, #loc26])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc63)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc24)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc27)
    %2 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc22)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc22)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc28)
    %5 = cir.const #cir.int<64> : !s32i loc(#loc29)
    %6 = cir.binop(or, %4, %5) : !s32i loc(#loc64)
    %7 = cir.const #cir.int<256> : !s32i loc(#loc30)
    %8 = cir.const #cir.int<128> : !s32i loc(#loc31)
    %9 = cir.binop(or, %7, %8) : !s32i loc(#loc65)
    %10 = cir.call @open(%3, %6, %9) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc32)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc66)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc35)
    cir.store %11, %1 : !s32i, !cir.ptr<!s32i> loc(#loc67)
    %12 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc67)
    cir.return %12 : !s32i loc(#loc67)
  } loc(#loc62)
  cir.func @CWE675_Duplicate_Operations_on_Resource__open_61b_goodB2GSource(%arg0: !s32i loc(fused[#loc39, #loc40])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc69)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc38)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc41)
    %2 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 19>> loc(#loc42)
    %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 19>>), !cir.ptr<!s8i> loc(#loc42)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc43)
    %5 = cir.const #cir.int<64> : !s32i loc(#loc44)
    %6 = cir.binop(or, %4, %5) : !s32i loc(#loc70)
    %7 = cir.const #cir.int<256> : !s32i loc(#loc45)
    %8 = cir.const #cir.int<128> : !s32i loc(#loc46)
    %9 = cir.binop(or, %7, %8) : !s32i loc(#loc71)
    %10 = cir.call @open(%3, %6, %9) : (!cir.ptr<!s8i>, !s32i, !s32i) -> !s32i loc(#loc47)
    cir.store %10, %0 : !s32i, !cir.ptr<!s32i> loc(#loc72)
    %11 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc50)
    %12 = cir.call @close(%11) : (!s32i) -> !s32i loc(#loc51)
    %13 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc52)
    cir.store %13, %1 : !s32i, !cir.ptr<!s32i> loc(#loc73)
    %14 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc73)
    cir.return %14 : !s32i loc(#loc73)
  } loc(#loc68)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE675_Duplicate_Operations_on_Resource/CWE675_Duplicate_Operations_on_Resource__open_61b.c":0:0)
#loc1 = loc("/usr/include/fcntl.h":209:1)
#loc2 = loc("/usr/include/fcntl.h":209:56)
#loc3 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":33:17)
#loc4 = loc("/usr/include/unistd.h":358:1)
#loc5 = loc("/usr/include/unistd.h":358:27)
#loc6 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":31:1)
#loc7 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":37:1)
#loc10 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":32:1)
#loc11 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":33:39)
#loc12 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":33:46)
#loc13 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":33:55)
#loc14 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":33:63)
#loc15 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":33:12)
#loc16 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":33:5)
#loc17 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":33:71)
#loc18 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":35:11)
#loc19 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":35:5)
#loc20 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":36:12)
#loc21 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":36:5)
#loc22 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":47:17)
#loc23 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":44:1)
#loc24 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":49:1)
#loc27 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":45:1)
#loc28 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":47:40)
#loc29 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":47:47)
#loc30 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":47:56)
#loc31 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":47:64)
#loc32 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":47:12)
#loc33 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":47:5)
#loc34 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":47:72)
#loc35 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":48:12)
#loc36 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":48:5)
#loc37 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":52:1)
#loc38 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":58:1)
#loc41 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":53:1)
#loc42 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":54:17)
#loc43 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":54:39)
#loc44 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":54:46)
#loc45 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":54:55)
#loc46 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":54:63)
#loc47 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":54:12)
#loc48 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":54:5)
#loc49 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":54:71)
#loc50 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":56:11)
#loc51 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":56:5)
#loc52 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":57:12)
#loc53 = loc("CWE675_Duplicate_Operations_on_Resource__open_61b.c":57:5)
#loc54 = loc(fused[#loc1, #loc2])
#loc55 = loc(fused[#loc4, #loc5])
#loc56 = loc(fused[#loc6, #loc7])
#loc58 = loc(fused[#loc11, #loc12])
#loc59 = loc(fused[#loc13, #loc14])
#loc60 = loc(fused[#loc16, #loc17])
#loc61 = loc(fused[#loc21, #loc20])
#loc62 = loc(fused[#loc23, #loc24])
#loc64 = loc(fused[#loc28, #loc29])
#loc65 = loc(fused[#loc30, #loc31])
#loc66 = loc(fused[#loc33, #loc34])
#loc67 = loc(fused[#loc36, #loc35])
#loc68 = loc(fused[#loc37, #loc38])
#loc70 = loc(fused[#loc43, #loc44])
#loc71 = loc(fused[#loc45, #loc46])
#loc72 = loc(fused[#loc48, #loc49])
#loc73 = loc(fused[#loc53, #loc52])
