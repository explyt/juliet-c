!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.global "private" external @CWE191_Integer_Underflow__unsigned_int_min_sub_68_badData : !u32i {alignment = 4 : i64} loc(#loc51)
  cir.func private @printUnsignedLine(!u32i) loc(#loc52)
  cir.func no_proto @CWE191_Integer_Underflow__unsigned_int_min_sub_68b_badSink() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data", init] {alignment = 4 : i64} loc(#loc54)
    %1 = cir.get_global @CWE191_Integer_Underflow__unsigned_int_min_sub_68_badData : !cir.ptr<!u32i> loc(#loc51)
    %2 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc8)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc54)
    cir.scope {
      %3 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc56)
      %4 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc13)
      %5 = cir.const #cir.int<1> : !s32i loc(#loc12)
      %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc12)
      %7 = cir.binop(sub, %4, %6) : !u32i loc(#loc57)
      cir.store %7, %3 : !u32i, !cir.ptr<!u32i> loc(#loc56)
      %8 = cir.load %3 : !cir.ptr<!u32i>, !u32i loc(#loc14)
      cir.call @printUnsignedLine(%8) : (!u32i) -> () loc(#loc15)
    } loc(#loc55)
    cir.return loc(#loc6)
  } loc(#loc53)
  cir.global "private" external @CWE191_Integer_Underflow__unsigned_int_min_sub_68_goodG2BData : !u32i {alignment = 4 : i64} loc(#loc58)
  cir.func no_proto @CWE191_Integer_Underflow__unsigned_int_min_sub_68b_goodG2BSink() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data", init] {alignment = 4 : i64} loc(#loc60)
    %1 = cir.get_global @CWE191_Integer_Underflow__unsigned_int_min_sub_68_goodG2BData : !cir.ptr<!u32i> loc(#loc58)
    %2 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc21)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc60)
    cir.scope {
      %3 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc62)
      %4 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc26)
      %5 = cir.const #cir.int<1> : !s32i loc(#loc25)
      %6 = cir.cast(integral, %5 : !s32i), !u32i loc(#loc25)
      %7 = cir.binop(sub, %4, %6) : !u32i loc(#loc63)
      cir.store %7, %3 : !u32i, !cir.ptr<!u32i> loc(#loc62)
      %8 = cir.load %3 : !cir.ptr<!u32i>, !u32i loc(#loc27)
      cir.call @printUnsignedLine(%8) : (!u32i) -> () loc(#loc28)
    } loc(#loc61)
    cir.return loc(#loc19)
  } loc(#loc59)
  cir.global "private" external @CWE191_Integer_Underflow__unsigned_int_min_sub_68_goodB2GData : !u32i {alignment = 4 : i64} loc(#loc64)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc65)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"data value is too large to perform subtraction.\00" : !cir.array<!s8i x 48>> : !cir.array<!s8i x 48> {alignment = 1 : i64} loc(#loc33)
  cir.func no_proto @CWE191_Integer_Underflow__unsigned_int_min_sub_68b_goodB2GSink() extra(#fn_attr) {
    %0 = cir.alloca !u32i, !cir.ptr<!u32i>, ["data", init] {alignment = 4 : i64} loc(#loc67)
    %1 = cir.get_global @CWE191_Integer_Underflow__unsigned_int_min_sub_68_goodB2GData : !cir.ptr<!u32i> loc(#loc64)
    %2 = cir.load %1 : !cir.ptr<!u32i>, !u32i loc(#loc37)
    cir.store %2, %0 : !u32i, !cir.ptr<!u32i> loc(#loc67)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc40)
      %4 = cir.const #cir.int<0> : !s32i loc(#loc41)
      %5 = cir.cast(integral, %4 : !s32i), !u32i loc(#loc41)
      %6 = cir.cmp(gt, %3, %5) : !u32i, !cir.bool loc(#loc69)
      cir.if %6 {
        %7 = cir.alloca !u32i, !cir.ptr<!u32i>, ["result", init] {alignment = 4 : i64} loc(#loc71)
        %8 = cir.load %0 : !cir.ptr<!u32i>, !u32i loc(#loc47)
        %9 = cir.const #cir.int<1> : !s32i loc(#loc46)
        %10 = cir.cast(integral, %9 : !s32i), !u32i loc(#loc46)
        %11 = cir.binop(sub, %8, %10) : !u32i loc(#loc72)
        cir.store %11, %7 : !u32i, !cir.ptr<!u32i> loc(#loc71)
        %12 = cir.load %7 : !cir.ptr<!u32i>, !u32i loc(#loc48)
        cir.call @printUnsignedLine(%12) : (!u32i) -> () loc(#loc49)
      } else {
        %7 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc33)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc33)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc50)
      } loc(#loc70)
    } loc(#loc68)
    cir.return loc(#loc35)
  } loc(#loc66)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE191_Integer_Underflow/s03/CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":0:0)
#loc1 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":20:1)
#loc2 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":20:21)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":34:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":34:47)
#loc5 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":26:1)
#loc6 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":34:1)
#loc7 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":28:5)
#loc8 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":28:25)
#loc9 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":29:5)
#loc10 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":33:5)
#loc11 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":31:9)
#loc12 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":31:38)
#loc13 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":31:31)
#loc14 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":32:27)
#loc15 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":32:9)
#loc16 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":21:1)
#loc17 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":21:21)
#loc18 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":41:1)
#loc19 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":49:1)
#loc20 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":43:5)
#loc21 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":43:25)
#loc22 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":44:5)
#loc23 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":48:5)
#loc24 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":46:9)
#loc25 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":46:38)
#loc26 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":46:31)
#loc27 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":47:27)
#loc28 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":47:9)
#loc29 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":22:1)
#loc30 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":22:21)
#loc31 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc32 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc33 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":63:19)
#loc34 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":52:1)
#loc35 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":65:1)
#loc36 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":54:5)
#loc37 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":54:25)
#loc38 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":56:5)
#loc39 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":64:5)
#loc40 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":56:9)
#loc41 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":56:16)
#loc42 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":57:5)
#loc43 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":60:5)
#loc44 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":62:5)
#loc45 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":58:9)
#loc46 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":58:38)
#loc47 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":58:31)
#loc48 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":59:27)
#loc49 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":59:9)
#loc50 = loc("CWE191_Integer_Underflow__unsigned_int_min_sub_68b.c":63:9)
#loc51 = loc(fused[#loc1, #loc2])
#loc52 = loc(fused[#loc3, #loc4])
#loc53 = loc(fused[#loc5, #loc6])
#loc54 = loc(fused[#loc7, #loc8])
#loc55 = loc(fused[#loc9, #loc10])
#loc56 = loc(fused[#loc11, #loc12])
#loc57 = loc(fused[#loc13, #loc12])
#loc58 = loc(fused[#loc16, #loc17])
#loc59 = loc(fused[#loc18, #loc19])
#loc60 = loc(fused[#loc20, #loc21])
#loc61 = loc(fused[#loc22, #loc23])
#loc62 = loc(fused[#loc24, #loc25])
#loc63 = loc(fused[#loc26, #loc25])
#loc64 = loc(fused[#loc29, #loc30])
#loc65 = loc(fused[#loc31, #loc32])
#loc66 = loc(fused[#loc34, #loc35])
#loc67 = loc(fused[#loc36, #loc37])
#loc68 = loc(fused[#loc38, #loc39])
#loc69 = loc(fused[#loc40, #loc41])
#loc70 = loc(fused[#loc42, #loc43, #loc44, #loc39])
#loc71 = loc(fused[#loc45, #loc46])
#loc72 = loc(fused[#loc47, #loc46])
