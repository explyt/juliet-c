!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc7 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":21:21)
#loc8 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":21:25)
#loc60 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":57:25)
#loc61 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":57:29)
#loc110 = loc(fused[#loc7, #loc8])
#loc128 = loc(fused[#loc60, #loc61])
module @"/workspaces/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little", "dlti.mangling_mode" = "e">} {
  cir.func private @strncpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc107)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc108)
  cir.func internal private @badSink(%arg0: !s32i loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc110)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc9)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc112)
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc113)
      %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc113)
      cir.store %3, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc113)
      %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc16)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc16)
      %6 = cir.const #cir.int<65> : !s32i loc(#loc17)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc18)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc19)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc18)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc18)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc114)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc22)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc22)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc23)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc24)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc23)
      %16 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc25)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc25)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc115)
      cir.scope {
        %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc28)
        %20 = cir.const #cir.int<100> : !s32i loc(#loc29)
        %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc117)
        cir.if %21 {
          %22 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc31)
          %23 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc32)
          %24 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc33)
          %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc34)
          %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc34)
          %27 = cir.call @strncpy(%23, %24, %26) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc31)
          %28 = cir.const #cir.int<0> : !s32i loc(#loc35)
          %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc35)
          %30 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc36)
          %31 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc37)
          %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc37)
          cir.store %29, %32 : !s8i, !cir.ptr<!s8i> loc(#loc119)
        } loc(#loc118)
      } loc(#loc116)
      %18 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc38)
      cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc39)
    } loc(#loc111)
    cir.return loc(#loc6)
  } loc(#loc109)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc121)
    %1 = cir.alloca !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc122)
    %2 = cir.get_global @badSink : !cir.ptr<!cir.func<(!s32i)>> loc(#loc45)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>> loc(#loc122)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc46)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc47)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc123)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc50)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc124)
    %7 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, !cir.ptr<!cir.func<(!s32i)>> loc(#loc52)
    %8 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc53)
    cir.call %7(%8) : (!cir.ptr<!cir.func<(!s32i)>>, !s32i) -> () loc(#loc52)
    cir.return loc(#loc41)
  } loc(#loc120)
  cir.func no_proto @CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc126)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc56)
    cir.return loc(#loc55)
  } loc(#loc125)
  cir.func internal private @goodG2BSink(%arg0: !s32i loc(fused[#loc60, #loc61])) extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc128)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc62)
    cir.scope {
      %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["source"] {alignment = 16 : i64} loc(#loc130)
      %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc131)
      %3 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc131)
      cir.store %3, %2 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc131)
      %4 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc69)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc69)
      %6 = cir.const #cir.int<65> : !s32i loc(#loc70)
      %7 = cir.const #cir.int<100> : !s32i loc(#loc71)
      %8 = cir.const #cir.int<1> : !s32i loc(#loc72)
      %9 = cir.binop(sub, %7, %8) nsw : !s32i loc(#loc71)
      %10 = cir.cast(integral, %9 : !s32i), !u64i loc(#loc71)
      cir.libc.memset %10 bytes from %5 set to %6 : !cir.ptr<!void>, !s32i, !u64i loc(#loc132)
      %11 = cir.const #cir.int<0> : !s32i loc(#loc75)
      %12 = cir.cast(integral, %11 : !s32i), !s8i loc(#loc75)
      %13 = cir.const #cir.int<100> : !s32i loc(#loc76)
      %14 = cir.const #cir.int<1> : !s32i loc(#loc77)
      %15 = cir.binop(sub, %13, %14) nsw : !s32i loc(#loc76)
      %16 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc78)
      %17 = cir.ptr_stride(%16 : !cir.ptr<!s8i>, %15 : !s32i), !cir.ptr<!s8i> loc(#loc78)
      cir.store %12, %17 : !s8i, !cir.ptr<!s8i> loc(#loc133)
      cir.scope {
        %19 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc81)
        %20 = cir.const #cir.int<100> : !s32i loc(#loc82)
        %21 = cir.cmp(lt, %19, %20) : !s32i, !cir.bool loc(#loc135)
        cir.if %21 {
          %22 = cir.get_global @strncpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i>>> loc(#loc84)
          %23 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc85)
          %24 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc86)
          %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc87)
          %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc87)
          %27 = cir.call @strncpy(%23, %24, %26) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc84)
          %28 = cir.const #cir.int<0> : !s32i loc(#loc88)
          %29 = cir.cast(integral, %28 : !s32i), !s8i loc(#loc88)
          %30 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc89)
          %31 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc90)
          %32 = cir.ptr_stride(%31 : !cir.ptr<!s8i>, %30 : !s32i), !cir.ptr<!s8i> loc(#loc90)
          cir.store %29, %32 : !s8i, !cir.ptr<!s8i> loc(#loc137)
        } loc(#loc136)
      } loc(#loc134)
      %18 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc91)
      cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc92)
    } loc(#loc129)
    cir.return loc(#loc59)
  } loc(#loc127)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc139)
    %1 = cir.alloca !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, ["funcPtr", init] {alignment = 8 : i64} loc(#loc140)
    %2 = cir.get_global @goodG2BSink : !cir.ptr<!cir.func<(!s32i)>> loc(#loc98)
    cir.store %2, %1 : !cir.ptr<!cir.func<(!s32i)>>, !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>> loc(#loc140)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %4 = cir.unary(minus, %3) nsw : !s32i, !s32i loc(#loc100)
    cir.store %4, %0 : !s32i, !cir.ptr<!s32i> loc(#loc141)
    %5 = cir.const #cir.int<100> : !s32i loc(#loc102)
    %6 = cir.const #cir.int<1> : !s32i loc(#loc103)
    %7 = cir.binop(sub, %5, %6) nsw : !s32i loc(#loc102)
    cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc142)
    %8 = cir.load %1 : !cir.ptr<!cir.ptr<!cir.func<(!s32i)>>>, !cir.ptr<!cir.func<(!s32i)>> loc(#loc105)
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc106)
    cir.call %8(%9) : (!cir.ptr<!cir.func<(!s32i)>>, !s32i) -> () loc(#loc105)
    cir.return loc(#loc94)
  } loc(#loc138)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE195_Signed_to_Unsigned_Conversion_Error/s02/CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":0:0)
#loc1 = loc("/usr/include/string.h":144:1)
#loc2 = loc("/usr/include/string.h":146:14)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":21:1)
#loc6 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":37:1)
#loc9 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":22:1)
#loc10 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":23:5)
#loc11 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":36:5)
#loc12 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":24:9)
#loc13 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":24:24)
#loc14 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":25:9)
#loc15 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":25:26)
#loc16 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":26:16)
#loc17 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":26:24)
#loc18 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":26:29)
#loc19 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":26:33)
#loc20 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":26:9)
#loc21 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":26:34)
#loc22 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":27:25)
#loc23 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":27:16)
#loc24 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":27:20)
#loc25 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":27:9)
#loc26 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":28:9)
#loc27 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":34:9)
#loc28 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":28:13)
#loc29 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":28:20)
#loc30 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":29:9)
#loc31 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":32:13)
#loc32 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":32:21)
#loc33 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":32:27)
#loc34 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":32:35)
#loc35 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":33:26)
#loc36 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":33:18)
#loc37 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":33:13)
#loc38 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":35:19)
#loc39 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":35:9)
#loc40 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":39:1)
#loc41 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":50:1)
#loc42 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":41:5)
#loc43 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":41:9)
#loc44 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":43:5)
#loc45 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":43:29)
#loc46 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":45:13)
#loc47 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":45:12)
#loc48 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":45:5)
#loc49 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":47:13)
#loc50 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":47:12)
#loc51 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":47:5)
#loc52 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":49:5)
#loc53 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":49:13)
#loc54 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":86:1)
#loc55 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":89:1)
#loc56 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":88:5)
#loc57 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":88:13)
#loc58 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":57:1)
#loc59 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":73:1)
#loc62 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":58:1)
#loc63 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":59:5)
#loc64 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":72:5)
#loc65 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":60:9)
#loc66 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":60:24)
#loc67 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":61:9)
#loc68 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":61:26)
#loc69 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":62:16)
#loc70 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":62:24)
#loc71 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":62:29)
#loc72 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":62:33)
#loc73 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":62:9)
#loc74 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":62:34)
#loc75 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":63:25)
#loc76 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":63:16)
#loc77 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":63:20)
#loc78 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":63:9)
#loc79 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":64:9)
#loc80 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":70:9)
#loc81 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":64:13)
#loc82 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":64:20)
#loc83 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":65:9)
#loc84 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":68:13)
#loc85 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":68:21)
#loc86 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":68:27)
#loc87 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":68:35)
#loc88 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":69:26)
#loc89 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":69:18)
#loc90 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":69:13)
#loc91 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":71:19)
#loc92 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":71:9)
#loc93 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":75:1)
#loc94 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":84:1)
#loc95 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":77:5)
#loc96 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":77:9)
#loc97 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":78:5)
#loc98 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":78:29)
#loc99 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":80:13)
#loc100 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":80:12)
#loc101 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":80:5)
#loc102 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":82:12)
#loc103 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":82:16)
#loc104 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":82:5)
#loc105 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":83:5)
#loc106 = loc("CWE195_Signed_to_Unsigned_Conversion_Error__negative_strncpy_44.c":83:13)
#loc107 = loc(fused[#loc1, #loc2])
#loc108 = loc(fused[#loc3, #loc4])
#loc109 = loc(fused[#loc5, #loc6])
#loc111 = loc(fused[#loc10, #loc11])
#loc112 = loc(fused[#loc12, #loc13])
#loc113 = loc(fused[#loc14, #loc15])
#loc114 = loc(fused[#loc20, #loc21])
#loc115 = loc(fused[#loc25, #loc22])
#loc116 = loc(fused[#loc26, #loc27])
#loc117 = loc(fused[#loc28, #loc29])
#loc118 = loc(fused[#loc30, #loc27])
#loc119 = loc(fused[#loc37, #loc35])
#loc120 = loc(fused[#loc40, #loc41])
#loc121 = loc(fused[#loc42, #loc43])
#loc122 = loc(fused[#loc44, #loc45])
#loc123 = loc(fused[#loc48, #loc46])
#loc124 = loc(fused[#loc51, #loc49])
#loc125 = loc(fused[#loc54, #loc55])
#loc126 = loc(fused[#loc56, #loc57])
#loc127 = loc(fused[#loc58, #loc59])
#loc129 = loc(fused[#loc63, #loc64])
#loc130 = loc(fused[#loc65, #loc66])
#loc131 = loc(fused[#loc67, #loc68])
#loc132 = loc(fused[#loc73, #loc74])
#loc133 = loc(fused[#loc78, #loc75])
#loc134 = loc(fused[#loc79, #loc80])
#loc135 = loc(fused[#loc81, #loc82])
#loc136 = loc(fused[#loc83, #loc80])
#loc137 = loc(fused[#loc90, #loc88])
#loc138 = loc(fused[#loc93, #loc94])
#loc139 = loc(fused[#loc95, #loc96])
#loc140 = loc(fused[#loc97, #loc98])
#loc141 = loc(fused[#loc101, #loc99])
#loc142 = loc(fused[#loc104, #loc103])
