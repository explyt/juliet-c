!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc64 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":112:10)
#loc65 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":112:14)
#loc66 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":112:20)
#loc67 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":112:32)
#loc124 = loc(fused[#loc64, #loc65])
#loc125 = loc(fused[#loc66, #loc67])
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_execlp_18.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.global "private" constant cir_private @__const.goodG2B.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc101)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_environment_execlp_18_bad.dataBuffer = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc102)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc103)
  cir.func private @getenv(!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc104)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"ADD\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc9)
  cir.func private @strncat(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc105)
  cir.func private @execlp(!cir.ptr<!s8i>, !cir.ptr<!s8i>, ...) -> !s32i extra(#fn_attr) loc(#loc106)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"sh\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc14)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"-c\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc15)
  cir.func no_proto @CWE78_OS_Command_Injection__char_environment_execlp_18_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc108)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc102)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc109)
    %3 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["environment", init] {alignment = 8 : i64} loc(#loc110)
    %4 = cir.get_global @__const.CWE78_OS_Command_Injection__char_environment_execlp_18_bad.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc102)
    cir.copy %4 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc102)
    %5 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc24)
    cir.store %5, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc111)
    cir.br ^bb1 loc(#loc112)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc28)
    %7 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc29)
    %8 = cir.call @strlen(%7) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc28)
    cir.store %8, %2 : !u64i, !cir.ptr<!u64i> loc(#loc109)
    %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc9)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc9)
    %11 = cir.call @getenv(%10) : (!cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc30)
    cir.store %11, %3 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc110)
    cir.br ^bb2 loc(#loc113)
  ^bb2:  // pred: ^bb1
    %12 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %13 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc34)
    %14 = cir.cast(bitcast, %13 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc34)
    %15 = cir.cmp(ne, %12, %14) : !cir.ptr<!s8i>, !cir.bool loc(#loc114)
    cir.brcond %15 ^bb3, ^bb4 loc(#loc115)
  ^bb3:  // pred: ^bb2
    %16 = cir.get_global @strncat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i)>> loc(#loc36)
    %17 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
    %18 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc38)
    %19 = cir.ptr_stride(%17 : !cir.ptr<!s8i>, %18 : !u64i), !cir.ptr<!s8i> loc(#loc39)
    %20 = cir.load %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
    %21 = cir.const #cir.int<100> : !s32i loc(#loc41)
    %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc41)
    %23 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc42)
    %24 = cir.binop(sub, %22, %23) : !u64i loc(#loc116)
    %25 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %26 = cir.cast(integral, %25 : !s32i), !u64i loc(#loc43)
    %27 = cir.binop(sub, %24, %26) : !u64i loc(#loc117)
    %28 = cir.call @strncat(%19, %20, %27) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u64i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc36)
    cir.br ^bb4 loc(#loc32)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc32)
  ^bb5:  // pred: ^bb4
    %29 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc14)
    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc14)
    %31 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc44)
    %32 = cir.cast(array_to_ptrdecay, %31 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc44)
    %33 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc15)
    %34 = cir.cast(array_to_ptrdecay, %33 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc15)
    %35 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc45)
    %36 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc46)
    %37 = cir.call @execlp(%30, %32, %34, %35, %36) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc47)
    cir.return loc(#loc17)
  } loc(#loc107)
  cir.func no_proto @CWE78_OS_Command_Injection__char_environment_execlp_18_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc119)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc50)
    cir.return loc(#loc49)
  } loc(#loc118)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc120)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc121)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc122)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc58)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc60)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc61)
  cir.func @main(%arg0: !s32i loc(fused[#loc64, #loc65]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc66, #loc67])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc124)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc125)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc63)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc68)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc68)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc69)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc70)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc70)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc71)
    %6 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc58)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc58)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc72)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_environment_execlp_18_good : !cir.ptr<!cir.func<!void ()>> loc(#loc126)
    cir.call @CWE78_OS_Command_Injection__char_environment_execlp_18_good() : () -> () loc(#loc73)
    %9 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc59)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc59)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc75)
    %11 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc60)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc60)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc76)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_environment_execlp_18_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc127)
    cir.call @CWE78_OS_Command_Injection__char_environment_execlp_18_bad() : () -> () loc(#loc77)
    %14 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc61)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc61)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc79)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc80)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc128)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc128)
    cir.return %17 : !s32i loc(#loc128)
  } loc(#loc123)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc129)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc84)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc131)
    %1 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc101)
    %2 = cir.get_global @__const.goodG2B.dataBuffer : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc101)
    cir.copy %2 to %1 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc101)
    %3 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc89)
    cir.store %3, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc132)
    cir.br ^bb1 loc(#loc133)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc93)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc94)
    %6 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc84)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc84)
    %8 = cir.call @strcat(%5, %7) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc93)
    %9 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc95)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc95)
    %11 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc96)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc96)
    %13 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc97)
    %14 = cir.cast(array_to_ptrdecay, %13 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc97)
    %15 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc98)
    %16 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc99)
    %17 = cir.call @execlp(%10, %12, %14, %15, %16) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!void>) -> !s32i extra(#fn_attr) loc(#loc100)
    cir.return loc(#loc86)
  } loc(#loc130)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_environment_execlp_18.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":85:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":85:28)
#loc3 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":56:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":56:28)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdlib.h":773:1)
#loc8 = loc("/usr/include/stdlib.h":773:50)
#loc9 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":63:37)
#loc10 = loc("/usr/include/string.h":152:1)
#loc11 = loc("/usr/include/string.h":153:29)
#loc12 = loc("/usr/include/unistd.h":605:1)
#loc13 = loc("/usr/include/unistd.h":606:14)
#loc14 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":74:12)
#loc15 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":74:38)
#loc16 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":53:1)
#loc17 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":75:1)
#loc18 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":55:5)
#loc19 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":55:12)
#loc20 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":62:9)
#loc21 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":62:37)
#loc22 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":63:9)
#loc23 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":63:49)
#loc24 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":57:12)
#loc25 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":57:5)
#loc26 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":58:5)
#loc27 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":58:10)
#loc28 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":62:26)
#loc29 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":62:33)
#loc30 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":63:30)
#loc31 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":65:9)
#loc32 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":69:9)
#loc33 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":65:13)
#loc34 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":65:28)
#loc35 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":66:9)
#loc36 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":68:13)
#loc37 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":68:21)
#loc38 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":68:26)
#loc39 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":68:25)
#loc40 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":68:35)
#loc41 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":68:48)
#loc42 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":68:52)
#loc43 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":68:60)
#loc44 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":74:25)
#loc45 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":74:52)
#loc46 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":74:66)
#loc47 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":74:5)
#loc48 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":97:1)
#loc49 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":100:1)
#loc50 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":99:5)
#loc51 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":99:13)
#loc52 = loc("/usr/include/stdlib.h":575:1)
#loc53 = loc("/usr/include/stdlib.h":575:41)
#loc54 = loc("/usr/include/time.h":76:1)
#loc55 = loc("/usr/include/time.h":76:38)
#loc56 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc57 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc58 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":117:15)
#loc59 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":119:15)
#loc60 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":122:15)
#loc61 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":124:15)
#loc62 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":112:1)
#loc63 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":127:1)
#loc68 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":113:1)
#loc69 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":115:27)
#loc70 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":115:22)
#loc71 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":115:5)
#loc72 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":117:5)
#loc73 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":118:5)
#loc74 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":118:65)
#loc75 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":119:5)
#loc76 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":122:5)
#loc77 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":123:5)
#loc78 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":123:64)
#loc79 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":124:5)
#loc80 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":126:12)
#loc81 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":126:5)
#loc82 = loc("/usr/include/string.h":149:1)
#loc83 = loc("/usr/include/string.h":150:14)
#loc84 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":90:18)
#loc85 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":82:1)
#loc86 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":95:1)
#loc87 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":84:5)
#loc88 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":84:12)
#loc89 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":86:12)
#loc90 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":86:5)
#loc91 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":87:5)
#loc92 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":87:10)
#loc93 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":90:5)
#loc94 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":90:12)
#loc95 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":94:12)
#loc96 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":94:25)
#loc97 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":94:38)
#loc98 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":94:52)
#loc99 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":94:66)
#loc100 = loc("CWE78_OS_Command_Injection__char_environment_execlp_18.c":94:5)
#loc101 = loc(fused[#loc1, #loc2])
#loc102 = loc(fused[#loc3, #loc4])
#loc103 = loc(fused[#loc5, #loc6])
#loc104 = loc(fused[#loc7, #loc8])
#loc105 = loc(fused[#loc10, #loc11])
#loc106 = loc(fused[#loc12, #loc13])
#loc107 = loc(fused[#loc16, #loc17])
#loc108 = loc(fused[#loc18, #loc19])
#loc109 = loc(fused[#loc20, #loc21])
#loc110 = loc(fused[#loc22, #loc23])
#loc111 = loc(fused[#loc25, #loc24])
#loc112 = loc(fused[#loc26, #loc27])
#loc113 = loc(fused[#loc31, #loc32])
#loc114 = loc(fused[#loc33, #loc34])
#loc115 = loc(fused[#loc35, #loc32])
#loc116 = loc(fused[#loc41, #loc42])
#loc117 = loc(fused[#loc41, #loc43])
#loc118 = loc(fused[#loc48, #loc49])
#loc119 = loc(fused[#loc50, #loc51])
#loc120 = loc(fused[#loc52, #loc53])
#loc121 = loc(fused[#loc54, #loc55])
#loc122 = loc(fused[#loc56, #loc57])
#loc123 = loc(fused[#loc62, #loc63])
#loc126 = loc(fused[#loc73, #loc74])
#loc127 = loc(fused[#loc77, #loc78])
#loc128 = loc(fused[#loc81, #loc80])
#loc129 = loc(fused[#loc82, #loc83])
#loc130 = loc(fused[#loc85, #loc86])
#loc131 = loc(fused[#loc87, #loc88])
#loc132 = loc(fused[#loc90, #loc89])
#loc133 = loc(fused[#loc91, #loc92])
