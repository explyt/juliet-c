!s8i = !cir.int<s, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__char_calloc_68b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.global "private" external @CWE690_NULL_Deref_From_Return__char_calloc_68_badDataForBadSink : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc38)
  cir.func private @strcpy(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc39)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Initialize\00" : !cir.array<!s8i x 11>> : !cir.array<!s8i x 11> {alignment = 1 : i64} loc(#loc5)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc40)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc41)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__char_calloc_68b_badSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc43)
    %1 = cir.get_global @CWE690_NULL_Deref_From_Return__char_calloc_68_badDataForBadSink : !cir.ptr<!cir.ptr<!s8i>> loc(#loc38)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc43)
    %3 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc14)
    %4 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc15)
    %5 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc5)
    %6 = cir.cast(array_to_ptrdecay, %5 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc5)
    %7 = cir.call @strcpy(%4, %6) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc14)
    %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc16)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc17)
    %9 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc18)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc19)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc19)
    cir.call @free(%11) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc18)
    cir.return loc(#loc11)
  } loc(#loc42)
  cir.global "private" external @CWE690_NULL_Deref_From_Return__char_calloc_68_badDataForGoodSink : !cir.ptr<!s8i> {alignment = 8 : i64} loc(#loc44)
  cir.func no_proto @CWE690_NULL_Deref_From_Return__char_calloc_68b_goodB2GSink() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc46)
    %1 = cir.get_global @CWE690_NULL_Deref_From_Return__char_calloc_68_badDataForGoodSink : !cir.ptr<!cir.ptr<!s8i>> loc(#loc44)
    %2 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc25)
    cir.store %2, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc46)
    cir.scope {
      %3 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc28)
      %4 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc29)
      %5 = cir.cast(bitcast, %4 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc29)
      %6 = cir.cmp(ne, %3, %5) : !cir.ptr<!s8i>, !cir.bool loc(#loc48)
      cir.if %6 {
        %7 = cir.get_global @strcpy : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i>>> loc(#loc31)
        %8 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
        %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 11>> loc(#loc33)
        %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 11>>), !cir.ptr<!s8i> loc(#loc33)
        %11 = cir.call @strcpy(%8, %10) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc31)
        %12 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc34)
        cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc35)
        %13 = cir.get_global @free : !cir.ptr<!cir.func<(!cir.ptr<!void>)>> loc(#loc36)
        %14 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc37)
        %15 = cir.cast(bitcast, %14 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc37)
        cir.call @free(%15) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc36)
      } loc(#loc49)
    } loc(#loc47)
    cir.return loc(#loc23)
  } loc(#loc45)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE690_NULL_Deref_From_Return/s01/CWE690_NULL_Deref_From_Return__char_calloc_68b.c":0:0)
#loc1 = loc("CWE690_NULL_Deref_From_Return__char_calloc_68b.c":21:1)
#loc2 = loc("CWE690_NULL_Deref_From_Return__char_calloc_68b.c":21:15)
#loc3 = loc("/usr/include/string.h":141:1)
#loc4 = loc("/usr/include/string.h":142:14)
#loc5 = loc("CWE690_NULL_Deref_From_Return__char_calloc_68b.c":31:18)
#loc6 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc7 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc8 = loc("/usr/include/stdlib.h":687:1)
#loc9 = loc("/usr/include/stdlib.h":687:32)
#loc10 = loc("CWE690_NULL_Deref_From_Return__char_calloc_68b.c":27:1)
#loc11 = loc("CWE690_NULL_Deref_From_Return__char_calloc_68b.c":34:1)
#loc12 = loc("CWE690_NULL_Deref_From_Return__char_calloc_68b.c":29:5)
#loc13 = loc("CWE690_NULL_Deref_From_Return__char_calloc_68b.c":29:19)
#loc14 = loc("CWE690_NULL_Deref_From_Return__char_calloc_68b.c":31:5)
#loc15 = loc("CWE690_NULL_Deref_From_Return__char_calloc_68b.c":31:12)
#loc16 = loc("CWE690_NULL_Deref_From_Return__char_calloc_68b.c":32:15)
#loc17 = loc("CWE690_NULL_Deref_From_Return__char_calloc_68b.c":32:5)
#loc18 = loc("CWE690_NULL_Deref_From_Return__char_calloc_68b.c":33:5)
#loc19 = loc("CWE690_NULL_Deref_From_Return__char_calloc_68b.c":33:10)
#loc20 = loc("CWE690_NULL_Deref_From_Return__char_calloc_68b.c":23:1)
#loc21 = loc("CWE690_NULL_Deref_From_Return__char_calloc_68b.c":23:15)
#loc22 = loc("CWE690_NULL_Deref_From_Return__char_calloc_68b.c":40:1)
#loc23 = loc("CWE690_NULL_Deref_From_Return__char_calloc_68b.c":50:1)
#loc24 = loc("CWE690_NULL_Deref_From_Return__char_calloc_68b.c":42:5)
#loc25 = loc("CWE690_NULL_Deref_From_Return__char_calloc_68b.c":42:19)
#loc26 = loc("CWE690_NULL_Deref_From_Return__char_calloc_68b.c":44:5)
#loc27 = loc("CWE690_NULL_Deref_From_Return__char_calloc_68b.c":49:5)
#loc28 = loc("CWE690_NULL_Deref_From_Return__char_calloc_68b.c":44:9)
#loc29 = loc("CWE690_NULL_Deref_From_Return__char_calloc_68b.c":44:17)
#loc30 = loc("CWE690_NULL_Deref_From_Return__char_calloc_68b.c":45:5)
#loc31 = loc("CWE690_NULL_Deref_From_Return__char_calloc_68b.c":46:9)
#loc32 = loc("CWE690_NULL_Deref_From_Return__char_calloc_68b.c":46:16)
#loc33 = loc("CWE690_NULL_Deref_From_Return__char_calloc_68b.c":46:22)
#loc34 = loc("CWE690_NULL_Deref_From_Return__char_calloc_68b.c":47:19)
#loc35 = loc("CWE690_NULL_Deref_From_Return__char_calloc_68b.c":47:9)
#loc36 = loc("CWE690_NULL_Deref_From_Return__char_calloc_68b.c":48:9)
#loc37 = loc("CWE690_NULL_Deref_From_Return__char_calloc_68b.c":48:14)
#loc38 = loc(fused[#loc1, #loc2])
#loc39 = loc(fused[#loc3, #loc4])
#loc40 = loc(fused[#loc6, #loc7])
#loc41 = loc(fused[#loc8, #loc9])
#loc42 = loc(fused[#loc10, #loc11])
#loc43 = loc(fused[#loc12, #loc13])
#loc44 = loc(fused[#loc20, #loc21])
#loc45 = loc(fused[#loc22, #loc23])
#loc46 = loc(fused[#loc24, #loc25])
#loc47 = loc(fused[#loc26, #loc27])
#loc48 = loc(fused[#loc28, #loc29])
#loc49 = loc(fused[#loc30, #loc27])
