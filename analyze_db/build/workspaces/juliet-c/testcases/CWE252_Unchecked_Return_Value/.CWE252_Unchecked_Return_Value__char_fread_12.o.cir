!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fread_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e", "dlti.endianness" = "little">} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc108)
  cir.func private @fread(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc109)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc110)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc111)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fread failed!\00" : !cir.array<!s8i x 14>> : !cir.array<!s8i x 14> {alignment = 1 : i64} loc(#loc9)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fread_12_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc114)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc114)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc14)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc14)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc117)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc118)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc117)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc117)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc24)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc118)
          %8 = cir.get_global @fread : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc25)
          %9 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc26)
          %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc119)
          %11 = cir.const #cir.int<1> : !u64i loc(#loc120)
          %12 = cir.const #cir.int<100> : !s32i loc(#loc30)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc31)
          %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc30)
          %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc30)
          %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc110)
          %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc32)
          %18 = cir.call @fread(%10, %11, %15, %17) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc25)
        } loc(#loc116)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc122)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc123)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc122)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc122)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc38)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc123)
          cir.scope {
            %8 = cir.get_global @fread : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc41)
            %9 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc42)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc125)
            %11 = cir.const #cir.int<1> : !u64i loc(#loc126)
            %12 = cir.const #cir.int<100> : !s32i loc(#loc46)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc47)
            %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc46)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc46)
            %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc110)
            %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc48)
            %18 = cir.call @fread(%10, %11, %15, %17) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc41)
            %19 = cir.const #cir.int<100> : !s32i loc(#loc49)
            %20 = cir.const #cir.int<1> : !s32i loc(#loc50)
            %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc49)
            %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc49)
            %23 = cir.cmp(ne, %18, %22) : !u64i, !cir.bool loc(#loc127)
            cir.if %23 {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc9)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc9)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc52)
            } loc(#loc128)
          } loc(#loc124)
        } loc(#loc121)
      } loc(#loc115)
    } loc(#loc113)
    cir.return loc(#loc11)
  } loc(#loc112)
  cir.func no_proto @CWE252_Unchecked_Return_Value__char_fread_12_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc130)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc55)
    cir.return loc(#loc54)
  } loc(#loc129)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc133)
      %1 = cir.cast(bitcast, %0 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc133)
      %2 = cir.call %1() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc61)
      %3 = cir.cast(int_to_bool, %2 : !s32i), !cir.bool loc(#loc61)
      cir.if %3 {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc136)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc137)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc136)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc136)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc71)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc137)
          cir.scope {
            %8 = cir.get_global @fread : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc74)
            %9 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc75)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc139)
            %11 = cir.const #cir.int<1> : !u64i loc(#loc140)
            %12 = cir.const #cir.int<100> : !s32i loc(#loc79)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc80)
            %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc79)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc79)
            %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc110)
            %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc81)
            %18 = cir.call @fread(%10, %11, %15, %17) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc74)
            %19 = cir.const #cir.int<100> : !s32i loc(#loc82)
            %20 = cir.const #cir.int<1> : !s32i loc(#loc83)
            %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc82)
            %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc82)
            %23 = cir.cmp(ne, %18, %22) : !u64i, !cir.bool loc(#loc141)
            cir.if %23 {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc85)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc85)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc86)
            } loc(#loc142)
          } loc(#loc138)
        } loc(#loc135)
      } else {
        cir.scope {
          %4 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dataBuffer"] {alignment = 16 : i64} loc(#loc144)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc145)
          %6 = cir.const #cir.zero : !cir.array<!s8i x 100> loc(#loc144)
          cir.store %6, %4 : !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>> loc(#loc144)
          %7 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc92)
          cir.store %7, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc145)
          cir.scope {
            %8 = cir.get_global @fread : !cir.ptr<!cir.func<(!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i>> loc(#loc95)
            %9 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
            %10 = cir.cast(bitcast, %9 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc147)
            %11 = cir.const #cir.int<1> : !u64i loc(#loc148)
            %12 = cir.const #cir.int<100> : !s32i loc(#loc100)
            %13 = cir.const #cir.int<1> : !s32i loc(#loc101)
            %14 = cir.binop(sub, %12, %13) nsw : !s32i loc(#loc100)
            %15 = cir.cast(integral, %14 : !s32i), !u64i loc(#loc100)
            %16 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc110)
            %17 = cir.load %16 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc102)
            %18 = cir.call @fread(%10, %11, %15, %17) : (!cir.ptr<!void>, !u64i, !u64i, !cir.ptr<!ty__IO_FILE>) -> !u64i loc(#loc95)
            %19 = cir.const #cir.int<100> : !s32i loc(#loc103)
            %20 = cir.const #cir.int<1> : !s32i loc(#loc104)
            %21 = cir.binop(sub, %19, %20) nsw : !s32i loc(#loc103)
            %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc103)
            %23 = cir.cmp(ne, %18, %22) : !u64i, !cir.bool loc(#loc149)
            cir.if %23 {
              %24 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 14>> loc(#loc106)
              %25 = cir.cast(array_to_ptrdecay, %24 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc106)
              cir.call @printLine(%25) : (!cir.ptr<!s8i>) -> () loc(#loc107)
            } loc(#loc150)
          } loc(#loc146)
        } loc(#loc143)
      } loc(#loc134)
    } loc(#loc132)
    cir.return loc(#loc58)
  } loc(#loc131)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE252_Unchecked_Return_Value/CWE252_Unchecked_Return_Value__char_fread_12.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":738:1)
#loc4 = loc("/usr/include/stdio.h":740:3)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc8 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc9 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":47:27)
#loc10 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":24:1)
#loc11 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":51:1)
#loc12 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":26:5)
#loc13 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":50:5)
#loc14 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":26:8)
#loc15 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":26:33)
#loc16 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":27:5)
#loc17 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":36:5)
#loc18 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":38:5)
#loc19 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":28:9)
#loc20 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":35:9)
#loc21 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":31:13)
#loc22 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":31:36)
#loc23 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":32:13)
#loc24 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":32:27)
#loc25 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":34:13)
#loc26 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":34:27)
#loc27 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":34:19)
#loc28 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":34:33)
#loc29 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":34:44)
#loc30 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":34:56)
#loc31 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":34:60)
#loc32 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":34:64)
#loc33 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":39:9)
#loc34 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":49:9)
#loc35 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":42:13)
#loc36 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":42:36)
#loc37 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":43:13)
#loc38 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":43:27)
#loc39 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":45:13)
#loc40 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":48:13)
#loc41 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":45:17)
#loc42 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":45:31)
#loc43 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":45:23)
#loc44 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":45:37)
#loc45 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":45:48)
#loc46 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":45:60)
#loc47 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":45:64)
#loc48 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":45:68)
#loc49 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":45:78)
#loc50 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":45:82)
#loc51 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":46:13)
#loc52 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":47:17)
#loc53 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":90:1)
#loc54 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":93:1)
#loc55 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":92:5)
#loc56 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":92:11)
#loc57 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":58:1)
#loc58 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":88:1)
#loc59 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":60:5)
#loc60 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":87:5)
#loc61 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":60:8)
#loc62 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":60:33)
#loc63 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":61:5)
#loc64 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":73:5)
#loc65 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":75:5)
#loc66 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":62:9)
#loc67 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":72:9)
#loc68 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":65:13)
#loc69 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":65:36)
#loc70 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":66:13)
#loc71 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":66:27)
#loc72 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":68:13)
#loc73 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":71:13)
#loc74 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":68:17)
#loc75 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":68:31)
#loc76 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":68:23)
#loc77 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":68:37)
#loc78 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":68:48)
#loc79 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":68:60)
#loc80 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":68:64)
#loc81 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":68:68)
#loc82 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":68:78)
#loc83 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":68:82)
#loc84 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":69:13)
#loc85 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":70:27)
#loc86 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":70:17)
#loc87 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":76:9)
#loc88 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":86:9)
#loc89 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":79:13)
#loc90 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":79:36)
#loc91 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":80:13)
#loc92 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":80:27)
#loc93 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":82:13)
#loc94 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":85:13)
#loc95 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":82:17)
#loc96 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":82:31)
#loc97 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":82:23)
#loc98 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":82:37)
#loc99 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":82:48)
#loc100 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":82:60)
#loc101 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":82:64)
#loc102 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":82:68)
#loc103 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":82:78)
#loc104 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":82:82)
#loc105 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":83:13)
#loc106 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":84:27)
#loc107 = loc("CWE252_Unchecked_Return_Value__char_fread_12.c":84:17)
#loc108 = loc(fused[#loc1, #loc2])
#loc109 = loc(fused[#loc3, #loc4])
#loc110 = loc(fused[#loc5, #loc6])
#loc111 = loc(fused[#loc7, #loc8])
#loc112 = loc(fused[#loc10, #loc11])
#loc113 = loc(fused[#loc12, #loc13])
#loc114 = loc(fused[#loc14, #loc15])
#loc115 = loc(fused[#loc16, #loc17, #loc18, #loc13])
#loc116 = loc(fused[#loc19, #loc20])
#loc117 = loc(fused[#loc21, #loc22])
#loc118 = loc(fused[#loc23, #loc24])
#loc119 = loc(fused[#loc27, #loc26])
#loc120 = loc(fused[#loc28, #loc29])
#loc121 = loc(fused[#loc33, #loc34])
#loc122 = loc(fused[#loc35, #loc36])
#loc123 = loc(fused[#loc37, #loc38])
#loc124 = loc(fused[#loc39, #loc40])
#loc125 = loc(fused[#loc43, #loc42])
#loc126 = loc(fused[#loc44, #loc45])
#loc127 = loc(fused[#loc41, #loc50])
#loc128 = loc(fused[#loc51, #loc40])
#loc129 = loc(fused[#loc53, #loc54])
#loc130 = loc(fused[#loc55, #loc56])
#loc131 = loc(fused[#loc57, #loc58])
#loc132 = loc(fused[#loc59, #loc60])
#loc133 = loc(fused[#loc61, #loc62])
#loc134 = loc(fused[#loc63, #loc64, #loc65, #loc60])
#loc135 = loc(fused[#loc66, #loc67])
#loc136 = loc(fused[#loc68, #loc69])
#loc137 = loc(fused[#loc70, #loc71])
#loc138 = loc(fused[#loc72, #loc73])
#loc139 = loc(fused[#loc76, #loc75])
#loc140 = loc(fused[#loc77, #loc78])
#loc141 = loc(fused[#loc74, #loc83])
#loc142 = loc(fused[#loc84, #loc73])
#loc143 = loc(fused[#loc87, #loc88])
#loc144 = loc(fused[#loc89, #loc90])
#loc145 = loc(fused[#loc91, #loc92])
#loc146 = loc(fused[#loc93, #loc94])
#loc147 = loc(fused[#loc97, #loc96])
#loc148 = loc(fused[#loc98, #loc99])
#loc149 = loc(fused[#loc95, #loc104])
#loc150 = loc(fused[#loc105, #loc94])
