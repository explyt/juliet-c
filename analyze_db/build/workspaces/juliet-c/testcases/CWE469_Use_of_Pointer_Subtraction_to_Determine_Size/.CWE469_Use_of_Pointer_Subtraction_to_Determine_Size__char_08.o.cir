!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE469_Use_of_Pointer_Subtraction_to_Determine_Size/CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.global "private" constant cir_private @__const.good2.string1 = #cir.const_array<"abc/opqrstu\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> loc(#loc128)
  cir.global "private" constant cir_private @__const.good1.string1 = #cir.const_array<"abc/opqrstu\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> loc(#loc129)
  cir.global "private" constant cir_private @__const.CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08_bad.string2 = #cir.const_array<"abc/opqrstu\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> loc(#loc130)
  cir.global "private" constant cir_private @__const.CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08_bad.string1 = #cir.const_array<"abc/opqrstu\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> loc(#loc131)
  cir.func private @strchr(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc132)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc133)
  cir.func private @printUnsignedLine(!u32i) loc(#loc134)
  cir.func no_proto @CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08_bad() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc137)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc19)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc19)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 12>, !cir.ptr<!cir.array<!s8i x 12>>, ["string1"] {alignment = 1 : i64} loc(#loc131)
          %4 = cir.alloca !cir.array<!s8i x 12>, !cir.ptr<!cir.array<!s8i x 12>>, ["string2"] {alignment = 1 : i64} loc(#loc130)
          %5 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["slashInString1"] {alignment = 8 : i64} loc(#loc140)
          %6 = cir.alloca !u64i, !cir.ptr<!u64i>, ["indexOfSlashInString1"] {alignment = 8 : i64} loc(#loc141)
          %7 = cir.get_global @__const.CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08_bad.string1 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc131)
          cir.copy %7 to %3 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc131)
          %8 = cir.get_global @__const.CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08_bad.string2 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc130)
          cir.copy %8 to %4 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc130)
          %9 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc28)
          %10 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc29)
          %11 = cir.const #cir.int<47> : !s32i loc(#loc30)
          %12 = cir.call @strchr(%10, %11) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc28)
          cir.store %12, %5 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc142)
          cir.scope {
            %19 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc35)
            %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc36)
            %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc36)
            %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s8i>, !cir.bool loc(#loc144)
            cir.if %22 {
              %23 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc38)
              %24 = cir.const #cir.int<1> : !s32i loc(#loc39)
              cir.call @exit(%24) : (!s32i) -> () extra(#fn_attr) loc(#loc38)
            } loc(#loc145)
          } loc(#loc143)
          %13 = cir.load %5 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc40)
          %14 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc41)
          %15 = cir.ptr_diff(%13, %14) : !cir.ptr<!s8i> -> !s64i loc(#loc146)
          %16 = cir.cast(integral, %15 : !s64i), !u64i loc(#loc146)
          cir.store %16, %6 : !u64i, !cir.ptr<!u64i> loc(#loc147)
          %17 = cir.load %6 : !cir.ptr<!u64i>, !u64i loc(#loc44)
          %18 = cir.cast(integral, %17 : !u64i), !u32i loc(#loc44)
          cir.call @printUnsignedLine(%18) : (!u32i) -> () loc(#loc45)
        } loc(#loc139)
      } loc(#loc138)
    } loc(#loc136)
    cir.return loc(#loc16)
  } loc(#loc135)
  cir.func no_proto @CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08_good() extra(#fn_attr1) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc149)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc48)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc150)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc50)
    cir.return loc(#loc47)
  } loc(#loc148)
  cir.func no_proto internal private @staticReturnsTrue() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc53)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc54)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc152)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc152)
    cir.return %2 : !s32i loc(#loc152)
  } loc(#loc151)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc153)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc58)
  cir.func no_proto internal private @good1() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsFalse : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc156)
      %1 = cir.call %0() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc63)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc63)
      cir.if %2 {
        %3 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc58)
        %4 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc58)
        cir.call @printLine(%4) : (!cir.ptr<!s8i>) -> () loc(#loc68)
      } else {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 12>, !cir.ptr<!cir.array<!s8i x 12>>, ["string1"] {alignment = 1 : i64} loc(#loc129)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["slashInString1"] {alignment = 8 : i64} loc(#loc159)
          %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["indexOfSlashInString1"] {alignment = 8 : i64} loc(#loc160)
          %6 = cir.get_global @__const.good1.string1 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc129)
          cir.copy %6 to %3 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc129)
          %7 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc75)
          %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc76)
          %9 = cir.const #cir.int<47> : !s32i loc(#loc77)
          %10 = cir.call @strchr(%8, %9) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc75)
          cir.store %10, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc161)
          cir.scope {
            %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc82)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc83)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc83)
            %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc163)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc85)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc86)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc85)
            } loc(#loc164)
          } loc(#loc162)
          %11 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
          %12 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc88)
          %13 = cir.ptr_diff(%11, %12) : !cir.ptr<!s8i> -> !s64i loc(#loc165)
          %14 = cir.cast(integral, %13 : !s64i), !u64i loc(#loc165)
          cir.store %14, %5 : !u64i, !cir.ptr<!u64i> loc(#loc166)
          %15 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc91)
          %16 = cir.cast(integral, %15 : !u64i), !u32i loc(#loc91)
          cir.call @printUnsignedLine(%16) : (!u32i) -> () loc(#loc92)
        } loc(#loc158)
      } loc(#loc157)
    } loc(#loc155)
    cir.return loc(#loc60)
  } loc(#loc154)
  cir.func no_proto internal private @staticReturnsFalse() -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc94)
    %1 = cir.const #cir.int<0> : !s32i loc(#loc95)
    cir.store %1, %0 : !s32i, !cir.ptr<!s32i> loc(#loc168)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc168)
    cir.return %2 : !s32i loc(#loc168)
  } loc(#loc167)
  cir.func no_proto internal private @good2() extra(#fn_attr1) {
    cir.scope {
      %0 = cir.get_global @staticReturnsTrue : !cir.ptr<!cir.func<() -> !s32i>> loc(#loc171)
      %1 = cir.call @staticReturnsTrue() : () -> !s32i loc(#loc101)
      %2 = cir.cast(int_to_bool, %1 : !s32i), !cir.bool loc(#loc101)
      cir.if %2 {
        cir.scope {
          %3 = cir.alloca !cir.array<!s8i x 12>, !cir.ptr<!cir.array<!s8i x 12>>, ["string1"] {alignment = 1 : i64} loc(#loc128)
          %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["slashInString1"] {alignment = 8 : i64} loc(#loc174)
          %5 = cir.alloca !u64i, !cir.ptr<!u64i>, ["indexOfSlashInString1"] {alignment = 8 : i64} loc(#loc175)
          %6 = cir.get_global @__const.good2.string1 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc128)
          cir.copy %6 to %3 : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc128)
          %7 = cir.get_global @strchr : !cir.ptr<!cir.func<(!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i>>> loc(#loc110)
          %8 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc111)
          %9 = cir.const #cir.int<47> : !s32i loc(#loc112)
          %10 = cir.call @strchr(%8, %9) : (!cir.ptr<!s8i>, !s32i) -> !cir.ptr<!s8i> side_effect(pure) extra(#fn_attr) loc(#loc110)
          cir.store %10, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc176)
          cir.scope {
            %17 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc117)
            %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc118)
            %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc118)
            %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s8i>, !cir.bool loc(#loc178)
            cir.if %20 {
              %21 = cir.get_global @exit : !cir.ptr<!cir.func<(!s32i)>> loc(#loc120)
              %22 = cir.const #cir.int<1> : !s32i loc(#loc121)
              cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc120)
            } loc(#loc179)
          } loc(#loc177)
          %11 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
          %12 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc123)
          %13 = cir.ptr_diff(%11, %12) : !cir.ptr<!s8i> -> !s64i loc(#loc180)
          %14 = cir.cast(integral, %13 : !s64i), !u64i loc(#loc180)
          cir.store %14, %5 : !u64i, !cir.ptr<!u64i> loc(#loc181)
          %15 = cir.load %5 : !cir.ptr<!u64i>, !u64i loc(#loc126)
          %16 = cir.cast(integral, %15 : !u64i), !u32i loc(#loc126)
          cir.call @printUnsignedLine(%16) : (!u32i) -> () loc(#loc127)
        } loc(#loc173)
      } loc(#loc172)
    } loc(#loc170)
    cir.return loc(#loc98)
  } loc(#loc169)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE469_Use_of_Pointer_Subtraction_to_Determine_Size/CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":0:0)
#loc1 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":96:13)
#loc2 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":96:30)
#loc3 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":74:13)
#loc4 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":74:30)
#loc5 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":43:13)
#loc6 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":43:30)
#loc7 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":42:13)
#loc8 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":42:30)
#loc9 = loc("/usr/include/string.h":246:1)
#loc10 = loc("/usr/include/string.h":247:33)
#loc11 = loc("/usr/include/stdlib.h":756:1)
#loc12 = loc("/usr/include/stdlib.h":756:70)
#loc13 = loc("../../testcasesupport/std_testcase_io.h":34:1)
#loc14 = loc("../../testcasesupport/std_testcase_io.h":34:47)
#loc15 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":37:1)
#loc16 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":57:1)
#loc17 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":39:5)
#loc18 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":56:5)
#loc19 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":39:8)
#loc20 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":39:26)
#loc21 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":40:5)
#loc22 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":41:9)
#loc23 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":55:9)
#loc24 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":44:13)
#loc25 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":44:20)
#loc26 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":45:13)
#loc27 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":45:20)
#loc28 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":46:30)
#loc29 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":46:37)
#loc30 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":46:46)
#loc31 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":46:13)
#loc32 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":46:49)
#loc33 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":47:13)
#loc34 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":50:13)
#loc35 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":47:17)
#loc36 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":47:35)
#loc37 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":48:13)
#loc38 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":49:17)
#loc39 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":49:22)
#loc40 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":52:46)
#loc41 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":52:63)
#loc42 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":52:13)
#loc43 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":52:70)
#loc44 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":54:31)
#loc45 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":54:13)
#loc46 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":112:1)
#loc47 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":116:1)
#loc48 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":114:5)
#loc49 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":114:11)
#loc50 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":115:5)
#loc51 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":115:11)
#loc52 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":25:1)
#loc53 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":28:1)
#loc54 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":27:12)
#loc55 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":27:5)
#loc56 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc57 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc58 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":69:19)
#loc59 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":64:1)
#loc60 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":88:1)
#loc61 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":66:5)
#loc62 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":87:5)
#loc63 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":66:8)
#loc64 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":66:27)
#loc65 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":67:5)
#loc66 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":70:5)
#loc67 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":72:5)
#loc68 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":69:9)
#loc69 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":73:9)
#loc70 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":86:9)
#loc71 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":75:13)
#loc72 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":75:20)
#loc73 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":76:13)
#loc74 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":76:20)
#loc75 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":77:30)
#loc76 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":77:37)
#loc77 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":77:46)
#loc78 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":77:13)
#loc79 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":77:49)
#loc80 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":78:13)
#loc81 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":81:13)
#loc82 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":78:17)
#loc83 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":78:35)
#loc84 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":79:13)
#loc85 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":80:17)
#loc86 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":80:22)
#loc87 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":83:46)
#loc88 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":83:63)
#loc89 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":83:13)
#loc90 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":83:70)
#loc91 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":85:31)
#loc92 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":85:13)
#loc93 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":30:1)
#loc94 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":33:1)
#loc95 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":32:12)
#loc96 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":32:5)
#loc97 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":91:1)
#loc98 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":110:1)
#loc99 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":93:5)
#loc100 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":109:5)
#loc101 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":93:8)
#loc102 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":93:26)
#loc103 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":94:5)
#loc104 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":95:9)
#loc105 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":108:9)
#loc106 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":97:13)
#loc107 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":97:20)
#loc108 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":98:13)
#loc109 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":98:20)
#loc110 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":99:30)
#loc111 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":99:37)
#loc112 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":99:46)
#loc113 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":99:13)
#loc114 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":99:49)
#loc115 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":100:13)
#loc116 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":103:13)
#loc117 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":100:17)
#loc118 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":100:35)
#loc119 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":101:13)
#loc120 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":102:17)
#loc121 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":102:22)
#loc122 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":105:46)
#loc123 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":105:63)
#loc124 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":105:13)
#loc125 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":105:70)
#loc126 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":107:31)
#loc127 = loc("CWE469_Use_of_Pointer_Subtraction_to_Determine_Size__char_08.c":107:13)
#loc128 = loc(fused[#loc1, #loc2])
#loc129 = loc(fused[#loc3, #loc4])
#loc130 = loc(fused[#loc5, #loc6])
#loc131 = loc(fused[#loc7, #loc8])
#loc132 = loc(fused[#loc9, #loc10])
#loc133 = loc(fused[#loc11, #loc12])
#loc134 = loc(fused[#loc13, #loc14])
#loc135 = loc(fused[#loc15, #loc16])
#loc136 = loc(fused[#loc17, #loc18])
#loc137 = loc(fused[#loc19, #loc20])
#loc138 = loc(fused[#loc21, #loc18])
#loc139 = loc(fused[#loc22, #loc23])
#loc140 = loc(fused[#loc24, #loc25])
#loc141 = loc(fused[#loc26, #loc27])
#loc142 = loc(fused[#loc31, #loc32])
#loc143 = loc(fused[#loc33, #loc34])
#loc144 = loc(fused[#loc35, #loc36])
#loc145 = loc(fused[#loc37, #loc34])
#loc146 = loc(fused[#loc40, #loc41])
#loc147 = loc(fused[#loc42, #loc43])
#loc148 = loc(fused[#loc46, #loc47])
#loc149 = loc(fused[#loc48, #loc49])
#loc150 = loc(fused[#loc50, #loc51])
#loc151 = loc(fused[#loc52, #loc53])
#loc152 = loc(fused[#loc55, #loc54])
#loc153 = loc(fused[#loc56, #loc57])
#loc154 = loc(fused[#loc59, #loc60])
#loc155 = loc(fused[#loc61, #loc62])
#loc156 = loc(fused[#loc63, #loc64])
#loc157 = loc(fused[#loc65, #loc66, #loc67, #loc62])
#loc158 = loc(fused[#loc69, #loc70])
#loc159 = loc(fused[#loc71, #loc72])
#loc160 = loc(fused[#loc73, #loc74])
#loc161 = loc(fused[#loc78, #loc79])
#loc162 = loc(fused[#loc80, #loc81])
#loc163 = loc(fused[#loc82, #loc83])
#loc164 = loc(fused[#loc84, #loc81])
#loc165 = loc(fused[#loc87, #loc88])
#loc166 = loc(fused[#loc89, #loc90])
#loc167 = loc(fused[#loc93, #loc94])
#loc168 = loc(fused[#loc96, #loc95])
#loc169 = loc(fused[#loc97, #loc98])
#loc170 = loc(fused[#loc99, #loc100])
#loc171 = loc(fused[#loc101, #loc102])
#loc172 = loc(fused[#loc103, #loc100])
#loc173 = loc(fused[#loc104, #loc105])
#loc174 = loc(fused[#loc106, #loc107])
#loc175 = loc(fused[#loc108, #loc109])
#loc176 = loc(fused[#loc113, #loc114])
#loc177 = loc(fused[#loc115, #loc116])
#loc178 = loc(fused[#loc117, #loc118])
#loc179 = loc(fused[#loc119, #loc116])
#loc180 = loc(fused[#loc122, #loc123])
#loc181 = loc(fused[#loc124, #loc125])
