!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc70 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":63:28)
#loc157 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":122:28)
#loc175 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":135:28)
#true = #cir.bool<true> : !cir.bool
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_square_12.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func no_proto private @globalReturnsTrueOrFalse(...) -> !s32i loc(#loc227)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc228)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc229)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc230)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc231)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed.\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc11)
  cir.func private @printIntLine(!s32i) loc(#loc232)
  cir.func private @sqrt(!cir.double) -> !cir.double extra(#fn_attr) loc(#loc14)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"data value is too large to perform arithmetic safely.\00" : !cir.array<!s8i x 54>> : !cir.array<!s8i x 54> {alignment = 1 : i64} loc(#loc15)
  cir.func no_proto @CWE190_Integer_Overflow__int_fgets_square_12_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc234)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc235)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc236)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc237)
    %4 = cir.const #cir.int<0> : !s32i loc(#loc26)
    cir.store %4, %3 : !s32i, !cir.ptr<!s32i> loc(#loc238)
    cir.br ^bb1 loc(#loc239)
  ^bb1:  // pred: ^bb0
    %5 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc240)
    %6 = cir.cast(bitcast, %5 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc240)
    %7 = cir.call %6() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc30)
    %8 = cir.cast(int_to_bool, %7 : !s32i), !cir.bool loc(#loc30)
    cir.brcond %8 ^bb2, ^bb10 loc(#loc241)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc242)
  ^bb3:  // pred: ^bb2
    %9 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc234)
    cir.store %9, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc234)
    cir.br ^bb4 loc(#loc243)
  ^bb4:  // pred: ^bb3
    %10 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc39)
    %11 = cir.const #cir.int<3> : !s32i loc(#loc40)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc40)
    %13 = cir.const #cir.int<4> : !u64i loc(#loc40)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc40)
    %15 = cir.const #cir.int<2> : !s32i loc(#loc40)
    %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc40)
    %17 = cir.binop(add, %14, %16) : !u64i loc(#loc40)
    %18 = cir.cast(integral, %17 : !u64i), !s32i loc(#loc40)
    %19 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc229)
    %20 = cir.load %19 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc41)
    %21 = cir.call @fgets(%10, %18, %20) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc42)
    %22 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc43)
    %23 = cir.cast(bitcast, %22 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc43)
    %24 = cir.cmp(ne, %21, %23) : !cir.ptr<!s8i>, !cir.bool loc(#loc244)
    cir.brcond %24 ^bb5, ^bb6 loc(#loc245)
  ^bb5:  // pred: ^bb4
    %25 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc47)
    %26 = cir.call @atoi(%25) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc48)
    cir.store %26, %3 : !s32i, !cir.ptr<!s32i> loc(#loc246)
    cir.br ^bb7 loc(#loc45)
  ^bb6:  // pred: ^bb4
    %27 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc11)
    %28 = cir.cast(array_to_ptrdecay, %27 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc11)
    cir.call @printLine(%28) : (!cir.ptr<!s8i>) -> () loc(#loc51)
    cir.br ^bb7 loc(#loc38)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc38)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc36)
  ^bb9:  // pred: ^bb8
    cir.br ^bb11 loc(#loc33)
  ^bb10:  // pred: ^bb1
    %29 = cir.const #cir.int<2> : !s32i loc(#loc52)
    cir.store %29, %3 : !s32i, !cir.ptr<!s32i> loc(#loc247)
    cir.br ^bb11 loc(#loc29)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc29)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc248)
  ^bb13:  // pred: ^bb12
    %30 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc249)
    %31 = cir.cast(bitcast, %30 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc249)
    %32 = cir.call %31() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc56)
    %33 = cir.cast(int_to_bool, %32 : !s32i), !cir.bool loc(#loc56)
    cir.brcond %33 ^bb14, ^bb17 loc(#loc250)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc251)
  ^bb15:  // pred: ^bb14
    %34 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc63)
    %35 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    %36 = cir.binop(mul, %34, %35) nsw : !s32i loc(#loc63)
    cir.store %36, %1 : !s32i, !cir.ptr<!s32i> loc(#loc235)
    %37 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    cir.call @printIntLine(%37) : (!s32i) -> () loc(#loc65)
    cir.br ^bb16 loc(#loc62)
  ^bb16:  // pred: ^bb15
    cir.br ^bb31 loc(#loc59)
  ^bb17:  // pred: ^bb13
    cir.br ^bb18 loc(#loc252)
  ^bb18:  // pred: ^bb17
    %38 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc68)
    %39 = cir.const #cir.int<2147483647> : !s32i loc(#loc69)
    %40 = cir.unary(minus, %39) nsw : !s32i, !s32i loc(#loc69)
    %41 = cir.const #cir.int<1> : !s32i loc(#loc69)
    %42 = cir.binop(sub, %40, %41) nsw : !s32i loc(#loc69)
    %43 = cir.cmp(gt, %38, %42) : !s32i, !cir.bool loc(#loc253)
    cir.brcond %43 ^bb19, ^bb24 loc(#loc70)
  ^bb19:  // pred: ^bb18
    %44 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc71)
    %45 = cir.abs %44 poison : !s32i loc(#loc72)
    %46 = cir.cast(integral, %45 : !s32i), !s64i loc(#loc72)
    %47 = cir.get_global @sqrt : !cir.ptr<!cir.func<(!cir.double) -> !cir.double>> loc(#loc73)
    %48 = cir.const #cir.int<2147483647> : !s32i loc(#loc74)
    %49 = cir.cast(int_to_float, %48 : !s32i), !cir.double loc(#loc74)
    %50 = cir.call @sqrt(%49) : (!cir.double) -> !cir.double extra(#fn_attr) loc(#loc73)
    %51 = cir.cast(float_to_int, %50 : !cir.double), !s64i loc(#loc73)
    %52 = cir.cmp(lt, %46, %51) : !s64i, !cir.bool loc(#loc254)
    cir.brcond %52 ^bb20, ^bb21 loc(#loc70)
  ^bb20:  // pred: ^bb19
    %53 = cir.const #true loc(#loc70)
    cir.br ^bb22(%53 : !cir.bool) loc(#loc70)
  ^bb21:  // pred: ^bb19
    %54 = cir.const #false loc(#loc70)
    cir.br ^bb22(%54 : !cir.bool) loc(#loc70)
  ^bb22(%55: !cir.bool loc("CWE190_Integer_Overflow__int_fgets_square_12.c":63:28)):  // 2 preds: ^bb20, ^bb21
    cir.br ^bb23 loc(#loc70)
  ^bb23:  // pred: ^bb22
    cir.br ^bb25(%55 : !cir.bool) loc(#loc70)
  ^bb24:  // pred: ^bb18
    %56 = cir.const #false loc(#loc70)
    cir.br ^bb25(%56 : !cir.bool) loc(#loc70)
  ^bb25(%57: !cir.bool loc("CWE190_Integer_Overflow__int_fgets_square_12.c":63:28)):  // 2 preds: ^bb23, ^bb24
    cir.br ^bb26 loc(#loc70)
  ^bb26:  // pred: ^bb25
    cir.brcond %57 ^bb27, ^bb28 loc(#loc255)
  ^bb27:  // pred: ^bb26
    %58 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    %59 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc23)
    %60 = cir.binop(mul, %58, %59) nsw : !s32i loc(#loc79)
    cir.store %60, %2 : !s32i, !cir.ptr<!s32i> loc(#loc236)
    %61 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc80)
    cir.call @printIntLine(%61) : (!s32i) -> () loc(#loc81)
    cir.br ^bb29 loc(#loc77)
  ^bb28:  // pred: ^bb26
    %62 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc15)
    %63 = cir.cast(array_to_ptrdecay, %62 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc15)
    cir.call @printLine(%63) : (!cir.ptr<!s8i>) -> () loc(#loc82)
    cir.br ^bb29 loc(#loc67)
  ^bb29:  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc67)
  ^bb30:  // pred: ^bb29
    cir.br ^bb31 loc(#loc55)
  ^bb31:  // 2 preds: ^bb16, ^bb30
    cir.br ^bb32 loc(#loc55)
  ^bb32:  // pred: ^bb31
    cir.return loc(#loc17)
  } loc(#loc233)
  cir.func no_proto @CWE190_Integer_Overflow__int_fgets_square_12_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G : !cir.ptr<!cir.func<()>> loc(#loc257)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc85)
    %1 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc258)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc87)
    cir.return loc(#loc84)
  } loc(#loc256)
  cir.func no_proto internal private @goodB2G() extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc260)
    %1 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc261)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc262)
    %3 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc263)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc264)
    %5 = cir.const #cir.int<0> : !s32i loc(#loc101)
    cir.store %5, %4 : !s32i, !cir.ptr<!s32i> loc(#loc265)
    cir.br ^bb1 loc(#loc266)
  ^bb1:  // pred: ^bb0
    %6 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc267)
    %7 = cir.cast(bitcast, %6 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc267)
    %8 = cir.call %7() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc105)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc105)
    cir.brcond %9 ^bb2, ^bb10 loc(#loc268)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc269)
  ^bb3:  // pred: ^bb2
    %10 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc260)
    cir.store %10, %0 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc260)
    cir.br ^bb4 loc(#loc270)
  ^bb4:  // pred: ^bb3
    %11 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc114)
    %12 = cir.const #cir.int<3> : !s32i loc(#loc115)
    %13 = cir.cast(integral, %12 : !s32i), !u64i loc(#loc115)
    %14 = cir.const #cir.int<4> : !u64i loc(#loc115)
    %15 = cir.binop(mul, %13, %14) : !u64i loc(#loc115)
    %16 = cir.const #cir.int<2> : !s32i loc(#loc115)
    %17 = cir.cast(integral, %16 : !s32i), !u64i loc(#loc115)
    %18 = cir.binop(add, %15, %17) : !u64i loc(#loc115)
    %19 = cir.cast(integral, %18 : !u64i), !s32i loc(#loc115)
    %20 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc229)
    %21 = cir.load %20 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc116)
    %22 = cir.call @fgets(%11, %19, %21) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc117)
    %23 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc118)
    %24 = cir.cast(bitcast, %23 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc118)
    %25 = cir.cmp(ne, %22, %24) : !cir.ptr<!s8i>, !cir.bool loc(#loc271)
    cir.brcond %25 ^bb5, ^bb6 loc(#loc272)
  ^bb5:  // pred: ^bb4
    %26 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc122)
    %27 = cir.call @atoi(%26) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc123)
    cir.store %27, %4 : !s32i, !cir.ptr<!s32i> loc(#loc273)
    cir.br ^bb7 loc(#loc120)
  ^bb6:  // pred: ^bb4
    %28 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc126)
    %29 = cir.cast(array_to_ptrdecay, %28 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc126)
    cir.call @printLine(%29) : (!cir.ptr<!s8i>) -> () loc(#loc127)
    cir.br ^bb7 loc(#loc113)
  ^bb7:  // 2 preds: ^bb5, ^bb6
    cir.br ^bb8 loc(#loc113)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc111)
  ^bb9:  // pred: ^bb8
    cir.br ^bb18 loc(#loc108)
  ^bb10:  // pred: ^bb1
    cir.br ^bb11 loc(#loc274)
  ^bb11:  // pred: ^bb10
    %30 = cir.const #cir.zero : !cir.array<!s8i x 14> loc(#loc261)
    cir.store %30, %1 : !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>> loc(#loc261)
    cir.br ^bb12 loc(#loc275)
  ^bb12:  // pred: ^bb11
    %31 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc132)
    %32 = cir.const #cir.int<3> : !s32i loc(#loc133)
    %33 = cir.cast(integral, %32 : !s32i), !u64i loc(#loc133)
    %34 = cir.const #cir.int<4> : !u64i loc(#loc133)
    %35 = cir.binop(mul, %33, %34) : !u64i loc(#loc133)
    %36 = cir.const #cir.int<2> : !s32i loc(#loc133)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc133)
    %38 = cir.binop(add, %35, %37) : !u64i loc(#loc133)
    %39 = cir.cast(integral, %38 : !u64i), !s32i loc(#loc133)
    %40 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc229)
    %41 = cir.load %40 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc134)
    %42 = cir.call @fgets(%31, %39, %41) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc135)
    %43 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc136)
    %44 = cir.cast(bitcast, %43 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc136)
    %45 = cir.cmp(ne, %42, %44) : !cir.ptr<!s8i>, !cir.bool loc(#loc276)
    cir.brcond %45 ^bb13, ^bb14 loc(#loc277)
  ^bb13:  // pred: ^bb12
    %46 = cir.cast(array_to_ptrdecay, %1 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc140)
    %47 = cir.call @atoi(%46) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc141)
    cir.store %47, %4 : !s32i, !cir.ptr<!s32i> loc(#loc278)
    cir.br ^bb15 loc(#loc138)
  ^bb14:  // pred: ^bb12
    %48 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc144)
    %49 = cir.cast(array_to_ptrdecay, %48 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc144)
    cir.call @printLine(%49) : (!cir.ptr<!s8i>) -> () loc(#loc145)
    cir.br ^bb15 loc(#loc131)
  ^bb15:  // 2 preds: ^bb13, ^bb14
    cir.br ^bb16 loc(#loc131)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc129)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc104)
  ^bb18:  // 2 preds: ^bb9, ^bb17
    cir.br ^bb19 loc(#loc104)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc279)
  ^bb20:  // pred: ^bb19
    %50 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc280)
    %51 = cir.cast(bitcast, %50 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc280)
    %52 = cir.call %51() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc148)
    %53 = cir.cast(int_to_bool, %52 : !s32i), !cir.bool loc(#loc148)
    cir.brcond %53 ^bb21, ^bb35 loc(#loc281)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22 loc(#loc282)
  ^bb22:  // pred: ^bb21
    %54 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc155)
    %55 = cir.const #cir.int<2147483647> : !s32i loc(#loc156)
    %56 = cir.unary(minus, %55) nsw : !s32i, !s32i loc(#loc156)
    %57 = cir.const #cir.int<1> : !s32i loc(#loc156)
    %58 = cir.binop(sub, %56, %57) nsw : !s32i loc(#loc156)
    %59 = cir.cmp(gt, %54, %58) : !s32i, !cir.bool loc(#loc283)
    cir.brcond %59 ^bb23, ^bb28 loc(#loc157)
  ^bb23:  // pred: ^bb22
    %60 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc158)
    %61 = cir.abs %60 poison : !s32i loc(#loc159)
    %62 = cir.cast(integral, %61 : !s32i), !s64i loc(#loc159)
    %63 = cir.get_global @sqrt : !cir.ptr<!cir.func<(!cir.double) -> !cir.double>> loc(#loc160)
    %64 = cir.const #cir.int<2147483647> : !s32i loc(#loc161)
    %65 = cir.cast(int_to_float, %64 : !s32i), !cir.double loc(#loc161)
    %66 = cir.call @sqrt(%65) : (!cir.double) -> !cir.double extra(#fn_attr) loc(#loc160)
    %67 = cir.cast(float_to_int, %66 : !cir.double), !s64i loc(#loc160)
    %68 = cir.cmp(lt, %62, %67) : !s64i, !cir.bool loc(#loc284)
    cir.brcond %68 ^bb24, ^bb25 loc(#loc157)
  ^bb24:  // pred: ^bb23
    %69 = cir.const #true loc(#loc157)
    cir.br ^bb26(%69 : !cir.bool) loc(#loc157)
  ^bb25:  // pred: ^bb23
    %70 = cir.const #false loc(#loc157)
    cir.br ^bb26(%70 : !cir.bool) loc(#loc157)
  ^bb26(%71: !cir.bool loc("CWE190_Integer_Overflow__int_fgets_square_12.c":122:28)):  // 2 preds: ^bb24, ^bb25
    cir.br ^bb27 loc(#loc157)
  ^bb27:  // pred: ^bb26
    cir.br ^bb29(%71 : !cir.bool) loc(#loc157)
  ^bb28:  // pred: ^bb22
    %72 = cir.const #false loc(#loc157)
    cir.br ^bb29(%72 : !cir.bool) loc(#loc157)
  ^bb29(%73: !cir.bool loc("CWE190_Integer_Overflow__int_fgets_square_12.c":122:28)):  // 2 preds: ^bb27, ^bb28
    cir.br ^bb30 loc(#loc157)
  ^bb30:  // pred: ^bb29
    cir.brcond %73 ^bb31, ^bb32 loc(#loc285)
  ^bb31:  // pred: ^bb30
    %74 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc166)
    %75 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc96)
    %76 = cir.binop(mul, %74, %75) nsw : !s32i loc(#loc166)
    cir.store %76, %2 : !s32i, !cir.ptr<!s32i> loc(#loc262)
    %77 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc167)
    cir.call @printIntLine(%77) : (!s32i) -> () loc(#loc168)
    cir.br ^bb33 loc(#loc164)
  ^bb32:  // pred: ^bb30
    %78 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc169)
    %79 = cir.cast(array_to_ptrdecay, %78 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc169)
    cir.call @printLine(%79) : (!cir.ptr<!s8i>) -> () loc(#loc170)
    cir.br ^bb33 loc(#loc154)
  ^bb33:  // 2 preds: ^bb31, ^bb32
    cir.br ^bb34 loc(#loc154)
  ^bb34:  // pred: ^bb33
    cir.br ^bb49 loc(#loc151)
  ^bb35:  // pred: ^bb20
    cir.br ^bb36 loc(#loc286)
  ^bb36:  // pred: ^bb35
    %80 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc173)
    %81 = cir.const #cir.int<2147483647> : !s32i loc(#loc174)
    %82 = cir.unary(minus, %81) nsw : !s32i, !s32i loc(#loc174)
    %83 = cir.const #cir.int<1> : !s32i loc(#loc174)
    %84 = cir.binop(sub, %82, %83) nsw : !s32i loc(#loc174)
    %85 = cir.cmp(gt, %80, %84) : !s32i, !cir.bool loc(#loc287)
    cir.brcond %85 ^bb37, ^bb42 loc(#loc175)
  ^bb37:  // pred: ^bb36
    %86 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc176)
    %87 = cir.abs %86 poison : !s32i loc(#loc177)
    %88 = cir.cast(integral, %87 : !s32i), !s64i loc(#loc177)
    %89 = cir.get_global @sqrt : !cir.ptr<!cir.func<(!cir.double) -> !cir.double>> loc(#loc178)
    %90 = cir.const #cir.int<2147483647> : !s32i loc(#loc179)
    %91 = cir.cast(int_to_float, %90 : !s32i), !cir.double loc(#loc179)
    %92 = cir.call @sqrt(%91) : (!cir.double) -> !cir.double extra(#fn_attr) loc(#loc178)
    %93 = cir.cast(float_to_int, %92 : !cir.double), !s64i loc(#loc178)
    %94 = cir.cmp(lt, %88, %93) : !s64i, !cir.bool loc(#loc288)
    cir.brcond %94 ^bb38, ^bb39 loc(#loc175)
  ^bb38:  // pred: ^bb37
    %95 = cir.const #true loc(#loc175)
    cir.br ^bb40(%95 : !cir.bool) loc(#loc175)
  ^bb39:  // pred: ^bb37
    %96 = cir.const #false loc(#loc175)
    cir.br ^bb40(%96 : !cir.bool) loc(#loc175)
  ^bb40(%97: !cir.bool loc("CWE190_Integer_Overflow__int_fgets_square_12.c":135:28)):  // 2 preds: ^bb38, ^bb39
    cir.br ^bb41 loc(#loc175)
  ^bb41:  // pred: ^bb40
    cir.br ^bb43(%97 : !cir.bool) loc(#loc175)
  ^bb42:  // pred: ^bb36
    %98 = cir.const #false loc(#loc175)
    cir.br ^bb43(%98 : !cir.bool) loc(#loc175)
  ^bb43(%99: !cir.bool loc("CWE190_Integer_Overflow__int_fgets_square_12.c":135:28)):  // 2 preds: ^bb41, ^bb42
    cir.br ^bb44 loc(#loc175)
  ^bb44:  // pred: ^bb43
    cir.brcond %99 ^bb45, ^bb46 loc(#loc289)
  ^bb45:  // pred: ^bb44
    %100 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc184)
    %101 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    %102 = cir.binop(mul, %100, %101) nsw : !s32i loc(#loc184)
    cir.store %102, %3 : !s32i, !cir.ptr<!s32i> loc(#loc263)
    %103 = cir.load %3 : !cir.ptr<!s32i>, !s32i loc(#loc185)
    cir.call @printIntLine(%103) : (!s32i) -> () loc(#loc186)
    cir.br ^bb47 loc(#loc182)
  ^bb46:  // pred: ^bb44
    %104 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 54>> loc(#loc187)
    %105 = cir.cast(array_to_ptrdecay, %104 : !cir.ptr<!cir.array<!s8i x 54>>), !cir.ptr<!s8i> loc(#loc187)
    cir.call @printLine(%105) : (!cir.ptr<!s8i>) -> () loc(#loc188)
    cir.br ^bb47 loc(#loc172)
  ^bb47:  // 2 preds: ^bb45, ^bb46
    cir.br ^bb48 loc(#loc172)
  ^bb48:  // pred: ^bb47
    cir.br ^bb49 loc(#loc147)
  ^bb49:  // 2 preds: ^bb34, ^bb48
    cir.br ^bb50 loc(#loc147)
  ^bb50:  // pred: ^bb49
    cir.return loc(#loc90)
  } loc(#loc259)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc291)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["result", init] {alignment = 4 : i64} loc(#loc292)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc293)
    %3 = cir.const #cir.int<0> : !s32i loc(#loc197)
    cir.store %3, %2 : !s32i, !cir.ptr<!s32i> loc(#loc294)
    cir.br ^bb1 loc(#loc295)
  ^bb1:  // pred: ^bb0
    %4 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc296)
    %5 = cir.cast(bitcast, %4 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc296)
    %6 = cir.call %5() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc201)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc201)
    cir.brcond %7 ^bb2, ^bb3 loc(#loc297)
  ^bb2:  // pred: ^bb1
    %8 = cir.const #cir.int<2> : !s32i loc(#loc206)
    cir.store %8, %2 : !s32i, !cir.ptr<!s32i> loc(#loc298)
    cir.br ^bb4 loc(#loc204)
  ^bb3:  // pred: ^bb1
    %9 = cir.const #cir.int<2> : !s32i loc(#loc208)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc299)
    cir.br ^bb4 loc(#loc200)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc200)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc300)
  ^bb6:  // pred: ^bb5
    %10 = cir.get_global @globalReturnsTrueOrFalse : !cir.ptr<!cir.func<(...) -> !s32i>> loc(#loc301)
    %11 = cir.cast(bitcast, %10 : !cir.ptr<!cir.func<(...) -> !s32i>>), !cir.ptr<!cir.func<() -> !s32i>> loc(#loc301)
    %12 = cir.call %11() : (!cir.ptr<!cir.func<() -> !s32i>>) -> !s32i loc(#loc212)
    %13 = cir.cast(int_to_bool, %12 : !s32i), !cir.bool loc(#loc212)
    cir.brcond %13 ^bb7, ^bb10 loc(#loc302)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc303)
  ^bb8:  // pred: ^bb7
    %14 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc219)
    %15 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc192)
    %16 = cir.binop(mul, %14, %15) nsw : !s32i loc(#loc219)
    cir.store %16, %0 : !s32i, !cir.ptr<!s32i> loc(#loc291)
    %17 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc220)
    cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc221)
    cir.br ^bb9 loc(#loc218)
  ^bb9:  // pred: ^bb8
    cir.br ^bb13 loc(#loc215)
  ^bb10:  // pred: ^bb6
    cir.br ^bb11 loc(#loc304)
  ^bb11:  // pred: ^bb10
    %18 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc224)
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc194)
    %20 = cir.binop(mul, %18, %19) nsw : !s32i loc(#loc224)
    cir.store %20, %1 : !s32i, !cir.ptr<!s32i> loc(#loc292)
    %21 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc225)
    cir.call @printIntLine(%21) : (!s32i) -> () loc(#loc226)
    cir.br ^bb12 loc(#loc223)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc211)
  ^bb13:  // 2 preds: ^bb9, ^bb12
    cir.br ^bb14 loc(#loc211)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc190)
  } loc(#loc290)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s03/CWE190_Integer_Overflow__int_fgets_square_12.c":0:0)
#loc1 = loc("../../../testcasesupport/std_testcase_io.h":52:1)
#loc2 = loc("../../../testcasesupport/std_testcase_io.h":52:30)
#loc3 = loc("/usr/include/stdio.h":654:1)
#loc4 = loc("/usr/include/stdio.h":655:59)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("/usr/include/stdlib.h":105:1)
#loc8 = loc("/usr/include/stdlib.h":106:33)
#loc9 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc10 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc11 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":43:27)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc13 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc14 = loc("/usr/include/x86_64-linux-gnu/bits/mathcalls.h":143:1)
#loc15 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":70:23)
#loc16 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":26:1)
#loc17 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":73:1)
#loc18 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":34:13)
#loc19 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":34:49)
#loc20 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":56:13)
#loc21 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":56:33)
#loc22 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":65:13)
#loc23 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":65:33)
#loc24 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":28:5)
#loc25 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":28:9)
#loc26 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":30:12)
#loc27 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":30:5)
#loc28 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":31:5)
#loc29 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":51:5)
#loc30 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":31:8)
#loc31 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":31:33)
#loc32 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":32:5)
#loc33 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":46:5)
#loc34 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":48:5)
#loc35 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":33:9)
#loc36 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":45:9)
#loc37 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":36:13)
#loc38 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":44:13)
#loc39 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":36:23)
#loc40 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":36:36)
#loc41 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":36:53)
#loc42 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":36:17)
#loc43 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":36:63)
#loc44 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":37:13)
#loc45 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":40:13)
#loc46 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":42:13)
#loc47 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":39:29)
#loc48 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":39:24)
#loc49 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":39:17)
#loc50 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":39:40)
#loc51 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":43:17)
#loc52 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":50:16)
#loc53 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":50:9)
#loc54 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":52:5)
#loc55 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":72:5)
#loc56 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":52:8)
#loc57 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":52:33)
#loc58 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":53:5)
#loc59 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":59:5)
#loc60 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":61:5)
#loc61 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":54:9)
#loc62 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":58:9)
#loc63 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":56:26)
#loc64 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":57:26)
#loc65 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":57:13)
#loc66 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":63:9)
#loc67 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":71:9)
#loc68 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":63:13)
#loc69 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":63:20)
#loc71 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":63:35)
#loc72 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":63:31)
#loc73 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":63:49)
#loc74 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":63:62)
#loc75 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":63:69)
#loc76 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":64:9)
#loc77 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":67:9)
#loc78 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":69:9)
#loc79 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":65:26)
#loc80 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":66:26)
#loc81 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":66:13)
#loc82 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":70:13)
#loc83 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":183:1)
#loc84 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":187:1)
#loc85 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":185:5)
#loc86 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":185:13)
#loc87 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":186:5)
#loc88 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":186:13)
#loc89 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":82:1)
#loc90 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":145:1)
#loc91 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":90:13)
#loc92 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":90:49)
#loc93 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":106:13)
#loc94 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":106:49)
#loc95 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":124:13)
#loc96 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":124:33)
#loc97 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":137:13)
#loc98 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":137:33)
#loc99 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":84:5)
#loc100 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":84:9)
#loc101 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":86:12)
#loc102 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":86:5)
#loc103 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":87:5)
#loc104 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":118:5)
#loc105 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":87:8)
#loc106 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":87:33)
#loc107 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":88:5)
#loc108 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":102:5)
#loc109 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":104:5)
#loc110 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":89:9)
#loc111 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":101:9)
#loc112 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":92:13)
#loc113 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":100:13)
#loc114 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":92:23)
#loc115 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":92:36)
#loc116 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":92:53)
#loc117 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":92:17)
#loc118 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":92:63)
#loc119 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":93:13)
#loc120 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":96:13)
#loc121 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":98:13)
#loc122 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":95:29)
#loc123 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":95:24)
#loc124 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":95:17)
#loc125 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":95:40)
#loc126 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":99:27)
#loc127 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":99:17)
#loc128 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":105:9)
#loc129 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":117:9)
#loc130 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":108:13)
#loc131 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":116:13)
#loc132 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":108:23)
#loc133 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":108:36)
#loc134 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":108:53)
#loc135 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":108:17)
#loc136 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":108:63)
#loc137 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":109:13)
#loc138 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":112:13)
#loc139 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":114:13)
#loc140 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":111:29)
#loc141 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":111:24)
#loc142 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":111:17)
#loc143 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":111:40)
#loc144 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":115:27)
#loc145 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":115:17)
#loc146 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":119:5)
#loc147 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":144:5)
#loc148 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":119:8)
#loc149 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":119:33)
#loc150 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":120:5)
#loc151 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":131:5)
#loc152 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":133:5)
#loc153 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":122:9)
#loc154 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":130:9)
#loc155 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":122:13)
#loc156 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":122:20)
#loc158 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":122:35)
#loc159 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":122:31)
#loc160 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":122:49)
#loc161 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":122:62)
#loc162 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":122:69)
#loc163 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":123:9)
#loc164 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":126:9)
#loc165 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":128:9)
#loc166 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":124:26)
#loc167 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":125:26)
#loc168 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":125:13)
#loc169 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":129:23)
#loc170 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":129:13)
#loc171 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":135:9)
#loc172 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":143:9)
#loc173 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":135:13)
#loc174 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":135:20)
#loc176 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":135:35)
#loc177 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":135:31)
#loc178 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":135:49)
#loc179 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":135:62)
#loc180 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":135:69)
#loc181 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":136:9)
#loc182 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":139:9)
#loc183 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":141:9)
#loc184 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":137:26)
#loc185 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":138:26)
#loc186 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":138:13)
#loc187 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":142:23)
#loc188 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":142:13)
#loc189 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":150:1)
#loc190 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":181:1)
#loc191 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":169:13)
#loc192 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":169:33)
#loc193 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":177:13)
#loc194 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":177:33)
#loc195 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":152:5)
#loc196 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":152:9)
#loc197 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":154:12)
#loc198 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":154:5)
#loc199 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":155:5)
#loc200 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":164:5)
#loc201 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":155:8)
#loc202 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":155:33)
#loc203 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":156:5)
#loc204 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":159:5)
#loc205 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":161:5)
#loc206 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":158:16)
#loc207 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":158:9)
#loc208 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":163:16)
#loc209 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":163:9)
#loc210 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":165:5)
#loc211 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":180:5)
#loc212 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":165:8)
#loc213 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":165:33)
#loc214 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":166:5)
#loc215 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":172:5)
#loc216 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":174:5)
#loc217 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":167:9)
#loc218 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":171:9)
#loc219 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":169:26)
#loc220 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":170:26)
#loc221 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":170:13)
#loc222 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":175:9)
#loc223 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":179:9)
#loc224 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":177:26)
#loc225 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":178:26)
#loc226 = loc("CWE190_Integer_Overflow__int_fgets_square_12.c":178:13)
#loc227 = loc(fused[#loc1, #loc2])
#loc228 = loc(fused[#loc3, #loc4])
#loc229 = loc(fused[#loc5, #loc6])
#loc230 = loc(fused[#loc7, #loc8])
#loc231 = loc(fused[#loc9, #loc10])
#loc232 = loc(fused[#loc12, #loc13])
#loc233 = loc(fused[#loc16, #loc17])
#loc234 = loc(fused[#loc18, #loc19])
#loc235 = loc(fused[#loc20, #loc21])
#loc236 = loc(fused[#loc22, #loc23])
#loc237 = loc(fused[#loc24, #loc25])
#loc238 = loc(fused[#loc27, #loc26])
#loc239 = loc(fused[#loc28, #loc29])
#loc240 = loc(fused[#loc30, #loc31])
#loc241 = loc(fused[#loc32, #loc33, #loc34, #loc29])
#loc242 = loc(fused[#loc35, #loc36])
#loc243 = loc(fused[#loc37, #loc38])
#loc244 = loc(fused[#loc42, #loc43])
#loc245 = loc(fused[#loc44, #loc45, #loc46, #loc38])
#loc246 = loc(fused[#loc49, #loc50])
#loc247 = loc(fused[#loc53, #loc52])
#loc248 = loc(fused[#loc54, #loc55])
#loc249 = loc(fused[#loc56, #loc57])
#loc250 = loc(fused[#loc58, #loc59, #loc60, #loc55])
#loc251 = loc(fused[#loc61, #loc62])
#loc252 = loc(fused[#loc66, #loc67])
#loc253 = loc(fused[#loc68, #loc69])
#loc254 = loc(fused[#loc72, #loc75])
#loc255 = loc(fused[#loc76, #loc77, #loc78, #loc67])
#loc256 = loc(fused[#loc83, #loc84])
#loc257 = loc(fused[#loc85, #loc86])
#loc258 = loc(fused[#loc87, #loc88])
#loc259 = loc(fused[#loc89, #loc90])
#loc260 = loc(fused[#loc91, #loc92])
#loc261 = loc(fused[#loc93, #loc94])
#loc262 = loc(fused[#loc95, #loc96])
#loc263 = loc(fused[#loc97, #loc98])
#loc264 = loc(fused[#loc99, #loc100])
#loc265 = loc(fused[#loc102, #loc101])
#loc266 = loc(fused[#loc103, #loc104])
#loc267 = loc(fused[#loc105, #loc106])
#loc268 = loc(fused[#loc107, #loc108, #loc109, #loc104])
#loc269 = loc(fused[#loc110, #loc111])
#loc270 = loc(fused[#loc112, #loc113])
#loc271 = loc(fused[#loc117, #loc118])
#loc272 = loc(fused[#loc119, #loc120, #loc121, #loc113])
#loc273 = loc(fused[#loc124, #loc125])
#loc274 = loc(fused[#loc128, #loc129])
#loc275 = loc(fused[#loc130, #loc131])
#loc276 = loc(fused[#loc135, #loc136])
#loc277 = loc(fused[#loc137, #loc138, #loc139, #loc131])
#loc278 = loc(fused[#loc142, #loc143])
#loc279 = loc(fused[#loc146, #loc147])
#loc280 = loc(fused[#loc148, #loc149])
#loc281 = loc(fused[#loc150, #loc151, #loc152, #loc147])
#loc282 = loc(fused[#loc153, #loc154])
#loc283 = loc(fused[#loc155, #loc156])
#loc284 = loc(fused[#loc159, #loc162])
#loc285 = loc(fused[#loc163, #loc164, #loc165, #loc154])
#loc286 = loc(fused[#loc171, #loc172])
#loc287 = loc(fused[#loc173, #loc174])
#loc288 = loc(fused[#loc177, #loc180])
#loc289 = loc(fused[#loc181, #loc182, #loc183, #loc172])
#loc290 = loc(fused[#loc189, #loc190])
#loc291 = loc(fused[#loc191, #loc192])
#loc292 = loc(fused[#loc193, #loc194])
#loc293 = loc(fused[#loc195, #loc196])
#loc294 = loc(fused[#loc198, #loc197])
#loc295 = loc(fused[#loc199, #loc200])
#loc296 = loc(fused[#loc201, #loc202])
#loc297 = loc(fused[#loc203, #loc204, #loc205, #loc200])
#loc298 = loc(fused[#loc207, #loc206])
#loc299 = loc(fused[#loc209, #loc208])
#loc300 = loc(fused[#loc210, #loc211])
#loc301 = loc(fused[#loc212, #loc213])
#loc302 = loc(fused[#loc214, #loc215, #loc216, #loc211])
#loc303 = loc(fused[#loc217, #loc218])
#loc304 = loc(fused[#loc222, #loc223])
