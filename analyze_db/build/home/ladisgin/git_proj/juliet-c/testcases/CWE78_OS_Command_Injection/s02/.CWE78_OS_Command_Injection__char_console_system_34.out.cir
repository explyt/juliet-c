!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.struct<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.struct<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.struct<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc108 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":124:10)
#loc109 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":124:14)
#loc110 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":124:20)
#loc111 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":124:32)
#true = #cir.bool<true> : !cir.bool
#loc197 = loc(fused[#loc108, #loc109])
#loc198 = loc(fused[#loc110, #loc111])
!ty_CWE78_OS_Command_Injection__char_console_system_34_unionType = !cir.struct<union "CWE78_OS_Command_Injection__char_console_system_34_unionType" {!cir.ptr<!s8i>, !cir.ptr<!s8i>}>
!ty__IO_FILE = !cir.struct<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.struct<struct "_IO_FILE">>, !cir.ptr<!void>, !cir.ptr<!cir.ptr<!cir.struct<struct "_IO_FILE">>>, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_system_34.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f64 = dense<64> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.global "private" constant cir_private @__const.goodG2B.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc155)
  cir.global "private" constant cir_private @__const.CWE78_OS_Command_Injection__char_console_system_34_bad.data_buf = #cir.const_array<"ls " : !cir.array<!s8i x 3>, trailing_zeros> : !cir.array<!s8i x 100> loc(#loc156)
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc157)
  cir.func private @fgets(!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc158)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc159)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc160)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"fgets() failed\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc13)
  cir.func private @system(!cir.ptr<!s8i>) -> !s32i loc(#loc161)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"command execution failed!\00" : !cir.array<!s8i x 26>> : !cir.array<!s8i x 26> {alignment = 1 : i64} loc(#loc16)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc162)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_system_34_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc164)
    %1 = cir.alloca !ty_CWE78_OS_Command_Injection__char_console_system_34_unionType, !cir.ptr<!ty_CWE78_OS_Command_Injection__char_console_system_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc165)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc156)
    %3 = cir.get_global @__const.CWE78_OS_Command_Injection__char_console_system_34_bad.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc156)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc156)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc25)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc166)
    cir.scope {
      %7 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen", init] {alignment = 8 : i64} loc(#loc168)
      %8 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc31)
      %9 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc32)
      %10 = cir.call @strlen(%9) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc31)
      cir.store %10, %7 : !u64i, !cir.ptr<!u64i> loc(#loc168)
      cir.scope {
        %11 = cir.const #cir.int<100> : !s32i loc(#loc35)
        %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc35)
        %13 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc36)
        %14 = cir.binop(sub, %12, %13) : !u64i loc(#loc170)
        %15 = cir.const #cir.int<1> : !s32i loc(#loc37)
        %16 = cir.cast(integral, %15 : !s32i), !u64i loc(#loc37)
        %17 = cir.cmp(gt, %14, %16) : !u64i, !cir.bool loc(#loc171)
        cir.if %17 {
          cir.scope {
            %18 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc41)
            %19 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc42)
            %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc43)
            %21 = cir.const #cir.int<100> : !s32i loc(#loc44)
            %22 = cir.cast(integral, %21 : !s32i), !u64i loc(#loc44)
            %23 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc45)
            %24 = cir.binop(sub, %22, %23) : !u64i loc(#loc174)
            %25 = cir.cast(integral, %24 : !u64i), !s32i loc(#loc174)
            %26 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc159)
            %27 = cir.load %26 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc46)
            %28 = cir.call @fgets(%20, %25, %27) : (!cir.ptr<!s8i>, !s32i, !cir.ptr<!ty__IO_FILE>) -> !cir.ptr<!s8i> loc(#loc47)
            %29 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc48)
            %30 = cir.cast(bitcast, %29 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc48)
            %31 = cir.cmp(ne, %28, %30) : !cir.ptr<!s8i>, !cir.bool loc(#loc175)
            cir.if %31 {
              %32 = cir.get_global @strlen : !cir.ptr<!cir.func<!u64i (!cir.ptr<!s8i>)>> loc(#loc52)
              %33 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc53)
              %34 = cir.call @strlen(%33) : (!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc52)
              cir.store %34, %7 : !u64i, !cir.ptr<!u64i> loc(#loc177)
              cir.scope {
                %35 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc58)
                %36 = cir.const #cir.int<0> : !s32i loc(#loc59)
                %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc59)
                %38 = cir.cmp(gt, %35, %37) : !u64i, !cir.bool loc(#loc179)
                %39 = cir.ternary(%38, true {
                  %40 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc61)
                  %41 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc62)
                  %42 = cir.const #cir.int<1> : !s32i loc(#loc63)
                  %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc63)
                  %44 = cir.binop(sub, %41, %43) : !u64i loc(#loc180)
                  %45 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %44 : !u64i), !cir.ptr<!s8i> loc(#loc64)
                  %46 = cir.load %45 : !cir.ptr<!s8i>, !s8i loc(#loc61)
                  %47 = cir.cast(integral, %46 : !s8i), !s32i loc(#loc61)
                  %48 = cir.const #cir.int<10> : !s32i loc(#loc65)
                  %49 = cir.cmp(eq, %47, %48) : !s32i, !cir.bool loc(#loc181)
                  %50 = cir.ternary(%49, true {
                    %51 = cir.const #true loc(#loc60)
                    cir.yield %51 : !cir.bool loc(#loc60)
                  }, false {
                    %51 = cir.const #false loc(#loc60)
                    cir.yield %51 : !cir.bool loc(#loc60)
                  }) : (!cir.bool) -> !cir.bool loc(#loc60)
                  cir.yield %50 : !cir.bool loc(#loc60)
                }, false {
                  %40 = cir.const #false loc(#loc60)
                  cir.yield %40 : !cir.bool loc(#loc60)
                }) : (!cir.bool) -> !cir.bool loc(#loc60)
                cir.if %39 {
                  %40 = cir.const #cir.int<0> : !s32i loc(#loc67)
                  %41 = cir.cast(integral, %40 : !s32i), !s8i loc(#loc67)
                  %42 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc68)
                  %43 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc69)
                  %44 = cir.const #cir.int<1> : !s32i loc(#loc70)
                  %45 = cir.cast(integral, %44 : !s32i), !u64i loc(#loc70)
                  %46 = cir.binop(sub, %43, %45) : !u64i loc(#loc183)
                  %47 = cir.ptr_stride(%42 : !cir.ptr<!s8i>, %46 : !u64i), !cir.ptr<!s8i> loc(#loc71)
                  cir.store %41, %47 : !s8i, !cir.ptr<!s8i> loc(#loc184)
                } loc(#loc182)
              } loc(#loc178)
            } else {
              %32 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc13)
              %33 = cir.cast(array_to_ptrdecay, %32 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc13)
              cir.call @printLine(%33) : (!cir.ptr<!s8i>) -> () loc(#loc72)
              %34 = cir.const #cir.int<0> : !s32i loc(#loc73)
              %35 = cir.cast(integral, %34 : !s32i), !s8i loc(#loc73)
              %36 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
              %37 = cir.load %7 : !cir.ptr<!u64i>, !u64i loc(#loc75)
              %38 = cir.ptr_stride(%36 : !cir.ptr<!s8i>, %37 : !u64i), !cir.ptr<!s8i> loc(#loc76)
              cir.store %35, %38 : !s8i, !cir.ptr<!s8i> loc(#loc185)
            } loc(#loc176)
          } loc(#loc173)
        } loc(#loc172)
      } loc(#loc169)
    } loc(#loc167)
    %5 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc77)
    %6 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE78_OS_Command_Injection__char_console_system_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc78)
    cir.store %5, %6 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc186)
    cir.scope {
      %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc188)
      %8 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE78_OS_Command_Injection__char_console_system_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc84)
      %9 = cir.load %8 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc83)
      cir.store %9, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc188)
      cir.scope {
        %10 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc87)
        %11 = cir.call @system(%10) : (!cir.ptr<!s8i>) -> !s32i loc(#loc88)
        %12 = cir.const #cir.int<0> : !s32i loc(#loc89)
        %13 = cir.cmp(ne, %11, %12) : !s32i, !cir.bool loc(#loc190)
        cir.if %13 {
          %14 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc16)
          %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc16)
          cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc91)
          %16 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc92)
          %17 = cir.const #cir.int<1> : !s32i loc(#loc93)
          cir.call @exit(%17) : (!s32i) -> () extra(#fn_attr) loc(#loc92)
        } loc(#loc191)
      } loc(#loc189)
    } loc(#loc187)
    cir.return loc(#loc20)
  } loc(#loc163)
  cir.func no_proto @CWE78_OS_Command_Injection__char_console_system_34_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<!void ()>> loc(#loc193)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc96)
    cir.return loc(#loc95)
  } loc(#loc192)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc194)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc195)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc102)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc103)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc104)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc105)
  cir.func @main(%arg0: !s32i loc(fused[#loc108, #loc109]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc110, #loc111])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc197)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc198)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc107)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc112)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc112)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc113)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc114)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc114)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc115)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc102)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc102)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc116)
    %8 = cir.get_global @CWE78_OS_Command_Injection__char_console_system_34_good : !cir.ptr<!cir.func<!void ()>> loc(#loc199)
    cir.call @CWE78_OS_Command_Injection__char_console_system_34_good() : () -> () loc(#loc117)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc103)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc103)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc119)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc104)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc104)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc120)
    %13 = cir.get_global @CWE78_OS_Command_Injection__char_console_system_34_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc200)
    cir.call @CWE78_OS_Command_Injection__char_console_system_34_bad() : () -> () loc(#loc121)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc105)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc105)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc124)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc201)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc201)
    cir.return %17 : !s32i loc(#loc201)
  } loc(#loc196)
  cir.func private @strcat(!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc202)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"*.*\00" : !cir.array<!s8i x 4>> : !cir.array<!s8i x 4> {alignment = 1 : i64} loc(#loc128)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc204)
    %1 = cir.alloca !ty_CWE78_OS_Command_Injection__char_console_system_34_unionType, !cir.ptr<!ty_CWE78_OS_Command_Injection__char_console_system_34_unionType>, ["myUnion"] {alignment = 8 : i64} loc(#loc205)
    %2 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["data_buf"] {alignment = 16 : i64} loc(#loc155)
    %3 = cir.get_global @__const.goodG2B.data_buf : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc155)
    cir.copy %3 to %2 : !cir.ptr<!cir.array<!s8i x 100>> loc(#loc155)
    %4 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc135)
    cir.store %4, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc206)
    %5 = cir.get_global @strcat : !cir.ptr<!cir.func<!cir.ptr<!s8i> (!cir.ptr<!s8i>, !cir.ptr<!s8i>)>> loc(#loc137)
    %6 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc138)
    %7 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 4>> loc(#loc128)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 4>>), !cir.ptr<!s8i> loc(#loc128)
    %9 = cir.call @strcat(%6, %8) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>) -> !cir.ptr<!s8i> extra(#fn_attr) loc(#loc137)
    %10 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc139)
    %11 = cir.get_member %1[0] {name = "unionFirst"} : !cir.ptr<!ty_CWE78_OS_Command_Injection__char_console_system_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc78)
    cir.store %10, %11 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc207)
    cir.scope {
      %12 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc209)
      %13 = cir.get_member %1[1] {name = "unionSecond"} : !cir.ptr<!ty_CWE78_OS_Command_Injection__char_console_system_34_unionType> -> !cir.ptr<!cir.ptr<!s8i>> loc(#loc84)
      %14 = cir.load %13 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc144)
      cir.store %14, %12 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc209)
      cir.scope {
        %15 = cir.load %12 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc147)
        %16 = cir.call @system(%15) : (!cir.ptr<!s8i>) -> !s32i loc(#loc148)
        %17 = cir.const #cir.int<0> : !s32i loc(#loc149)
        %18 = cir.cmp(ne, %16, %17) : !s32i, !cir.bool loc(#loc211)
        cir.if %18 {
          %19 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 26>> loc(#loc151)
          %20 = cir.cast(array_to_ptrdecay, %19 : !cir.ptr<!cir.array<!s8i x 26>>), !cir.ptr<!s8i> loc(#loc151)
          cir.call @printLine(%20) : (!cir.ptr<!s8i>) -> () loc(#loc152)
          %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc153)
          %22 = cir.const #cir.int<1> : !s32i loc(#loc154)
          cir.call @exit(%22) : (!s32i) -> () extra(#fn_attr) loc(#loc153)
        } loc(#loc212)
      } loc(#loc210)
    } loc(#loc208)
    cir.return loc(#loc130)
  } loc(#loc203)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE78_OS_Command_Injection/s02/CWE78_OS_Command_Injection__char_console_system_34.c":0:0)
#loc1 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":94:5)
#loc2 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":94:26)
#loc3 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":46:5)
#loc4 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":46:26)
#loc5 = loc("/usr/include/string.h":407:1)
#loc6 = loc("/usr/include/string.h":408:33)
#loc7 = loc("/usr/include/stdio.h":654:1)
#loc8 = loc("/usr/include/stdio.h":655:59)
#loc9 = loc("/usr/include/stdio.h":149:1)
#loc10 = loc("/usr/include/stdio.h":149:14)
#loc11 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc12 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc13 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":67:27)
#loc14 = loc("/usr/include/stdlib.h":923:1)
#loc15 = loc("/usr/include/stdlib.h":923:41)
#loc16 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":79:23)
#loc17 = loc("/usr/include/stdlib.h":756:1)
#loc18 = loc("/usr/include/stdlib.h":756:70)
#loc19 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":42:1)
#loc20 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":83:1)
#loc21 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":44:5)
#loc22 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":44:12)
#loc23 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":45:5)
#loc24 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":45:66)
#loc25 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":47:12)
#loc26 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":47:5)
#loc27 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":48:5)
#loc28 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":72:5)
#loc29 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":50:9)
#loc30 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":50:37)
#loc31 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":50:26)
#loc32 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":50:33)
#loc33 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":52:9)
#loc34 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":71:9)
#loc35 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":52:13)
#loc36 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":52:17)
#loc37 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":52:27)
#loc38 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":53:9)
#loc39 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":55:13)
#loc40 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":70:13)
#loc41 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":55:23)
#loc42 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":55:28)
#loc43 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":55:27)
#loc44 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":55:43)
#loc45 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":55:47)
#loc46 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":55:57)
#loc47 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":55:17)
#loc48 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":55:67)
#loc49 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":56:13)
#loc50 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":64:13)
#loc51 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":66:13)
#loc52 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":59:27)
#loc53 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":59:34)
#loc54 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":59:17)
#loc55 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":59:38)
#loc56 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":60:17)
#loc57 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":63:17)
#loc58 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":60:21)
#loc59 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":60:31)
#loc60 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":60:33)
#loc61 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":60:36)
#loc62 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":60:41)
#loc63 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":60:49)
#loc64 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":60:50)
#loc65 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":60:55)
#loc66 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":61:17)
#loc67 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":62:39)
#loc68 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":62:21)
#loc69 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":62:26)
#loc70 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":62:34)
#loc71 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":62:35)
#loc72 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":67:17)
#loc73 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":69:33)
#loc74 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":69:17)
#loc75 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":69:22)
#loc76 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":69:29)
#loc77 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":73:26)
#loc78 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":36:12)
#loc79 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":73:5)
#loc80 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":74:5)
#loc81 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":82:5)
#loc82 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":75:9)
#loc83 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":75:31)
#loc84 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":37:12)
#loc85 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":77:9)
#loc86 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":81:9)
#loc87 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":77:20)
#loc88 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":77:13)
#loc89 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":77:29)
#loc90 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":78:9)
#loc91 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":79:13)
#loc92 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":80:13)
#loc93 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":80:18)
#loc94 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":110:1)
#loc95 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":113:1)
#loc96 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":112:5)
#loc97 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":112:13)
#loc98 = loc("/usr/include/stdlib.h":575:1)
#loc99 = loc("/usr/include/stdlib.h":575:41)
#loc100 = loc("/usr/include/time.h":76:1)
#loc101 = loc("/usr/include/time.h":76:38)
#loc102 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":129:15)
#loc103 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":131:15)
#loc104 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":134:15)
#loc105 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":136:15)
#loc106 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":124:1)
#loc107 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":139:1)
#loc112 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":125:1)
#loc113 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":127:27)
#loc114 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":127:22)
#loc115 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":127:5)
#loc116 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":129:5)
#loc117 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":130:5)
#loc118 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":130:61)
#loc119 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":131:5)
#loc120 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":134:5)
#loc121 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":135:5)
#loc122 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":135:60)
#loc123 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":136:5)
#loc124 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":138:12)
#loc125 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":138:5)
#loc126 = loc("/usr/include/string.h":149:1)
#loc127 = loc("/usr/include/string.h":150:14)
#loc128 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":97:18)
#loc129 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":90:1)
#loc130 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":108:1)
#loc131 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":92:5)
#loc132 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":92:12)
#loc133 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":93:5)
#loc134 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":93:66)
#loc135 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":95:12)
#loc136 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":95:5)
#loc137 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":97:5)
#loc138 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":97:12)
#loc139 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":98:26)
#loc140 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":98:5)
#loc141 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":99:5)
#loc142 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":107:5)
#loc143 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":100:9)
#loc144 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":100:31)
#loc145 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":102:9)
#loc146 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":106:9)
#loc147 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":102:20)
#loc148 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":102:13)
#loc149 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":102:29)
#loc150 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":103:9)
#loc151 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":104:23)
#loc152 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":104:13)
#loc153 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":105:13)
#loc154 = loc("CWE78_OS_Command_Injection__char_console_system_34.c":105:18)
#loc155 = loc(fused[#loc1, #loc2])
#loc156 = loc(fused[#loc3, #loc4])
#loc157 = loc(fused[#loc5, #loc6])
#loc158 = loc(fused[#loc7, #loc8])
#loc159 = loc(fused[#loc9, #loc10])
#loc160 = loc(fused[#loc11, #loc12])
#loc161 = loc(fused[#loc14, #loc15])
#loc162 = loc(fused[#loc17, #loc18])
#loc163 = loc(fused[#loc19, #loc20])
#loc164 = loc(fused[#loc21, #loc22])
#loc165 = loc(fused[#loc23, #loc24])
#loc166 = loc(fused[#loc26, #loc25])
#loc167 = loc(fused[#loc27, #loc28])
#loc168 = loc(fused[#loc29, #loc30])
#loc169 = loc(fused[#loc33, #loc34])
#loc170 = loc(fused[#loc35, #loc36])
#loc171 = loc(fused[#loc35, #loc37])
#loc172 = loc(fused[#loc38, #loc34])
#loc173 = loc(fused[#loc39, #loc40])
#loc174 = loc(fused[#loc44, #loc45])
#loc175 = loc(fused[#loc47, #loc48])
#loc176 = loc(fused[#loc49, #loc50, #loc51, #loc40])
#loc177 = loc(fused[#loc54, #loc55])
#loc178 = loc(fused[#loc56, #loc57])
#loc179 = loc(fused[#loc58, #loc59])
#loc180 = loc(fused[#loc62, #loc63])
#loc181 = loc(fused[#loc61, #loc65])
#loc182 = loc(fused[#loc66, #loc57])
#loc183 = loc(fused[#loc69, #loc70])
#loc184 = loc(fused[#loc68, #loc67])
#loc185 = loc(fused[#loc74, #loc73])
#loc186 = loc(fused[#loc79, #loc77])
#loc187 = loc(fused[#loc80, #loc81])
#loc188 = loc(fused[#loc82, #loc83])
#loc189 = loc(fused[#loc85, #loc86])
#loc190 = loc(fused[#loc88, #loc89])
#loc191 = loc(fused[#loc90, #loc86])
#loc192 = loc(fused[#loc94, #loc95])
#loc193 = loc(fused[#loc96, #loc97])
#loc194 = loc(fused[#loc98, #loc99])
#loc195 = loc(fused[#loc100, #loc101])
#loc196 = loc(fused[#loc106, #loc107])
#loc199 = loc(fused[#loc117, #loc118])
#loc200 = loc(fused[#loc121, #loc122])
#loc201 = loc(fused[#loc125, #loc124])
#loc202 = loc(fused[#loc126, #loc127])
#loc203 = loc(fused[#loc129, #loc130])
#loc204 = loc(fused[#loc131, #loc132])
#loc205 = loc(fused[#loc133, #loc134])
#loc206 = loc(fused[#loc136, #loc135])
#loc207 = loc(fused[#loc140, #loc139])
#loc208 = loc(fused[#loc141, #loc142])
#loc209 = loc(fused[#loc143, #loc144])
#loc210 = loc(fused[#loc145, #loc146])
#loc211 = loc(fused[#loc148, #loc149])
#loc212 = loc(fused[#loc150, #loc146])
