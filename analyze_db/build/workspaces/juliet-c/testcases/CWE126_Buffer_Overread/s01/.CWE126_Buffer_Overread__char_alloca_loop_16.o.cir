!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
module @"/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_loop_16.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc167)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc168)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_loop_16_bad() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc170)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc171)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc10)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc10)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc10)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc10)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc10)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc172)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc10)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc10)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc171)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc12)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc12)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc12)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc12)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc12)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc12)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc12)
    cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc172)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc13)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc13)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc14)
    %20 = cir.const #cir.int<50> : !s32i loc(#loc15)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc16)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc15)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc15)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc173)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc19)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc19)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc20)
    %27 = cir.const #cir.int<50> : !s32i loc(#loc21)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc22)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc21)
    %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc23)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc174)
    %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc24)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc24)
    %33 = cir.const #cir.int<65> : !s32i loc(#loc25)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc26)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc27)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc26)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc26)
    cir.libc.memset %37 bytes from %32 set to %33 : !cir.ptr<!void>, !s32i, !u64i loc(#loc175)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc30)
    %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc30)
    %40 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc31)
    %41 = cir.const #cir.int<100> : !s32i loc(#loc32)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc33)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc32)
    %44 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc34)
    cir.store %39, %44 : !s8i, !cir.ptr<!s8i> loc(#loc176)
    cir.scope {
      cir.while {
        %45 = cir.const #cir.int<1> : !s32i loc(#loc37)
        %46 = cir.cast(int_to_bool, %45 : !s32i), !cir.bool loc(#loc37)
        cir.condition(%46) loc(#loc37)
      } do {
        cir.scope {
          %45 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc39)
          cir.store %45, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc179)
          cir.break loc(#loc41)
        } loc(#loc178)
        cir.yield loc(#loc36)
      } loc(#loc177)
    } loc(#loc177)
    cir.scope {
      %45 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc181)
      %46 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc182)
      %47 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc183)
      %48 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc49)
      %49 = cir.cast(bitcast, %48 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc49)
      %50 = cir.const #cir.int<67> : !s32i loc(#loc50)
      %51 = cir.const #cir.int<100> : !s32i loc(#loc51)
      %52 = cir.const #cir.int<1> : !s32i loc(#loc52)
      %53 = cir.binop(sub, %51, %52) nsw : !s32i loc(#loc51)
      %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc51)
      cir.libc.memset %54 bytes from %49 set to %50 : !cir.ptr<!void>, !s32i, !u64i loc(#loc184)
      %55 = cir.const #cir.int<0> : !s32i loc(#loc55)
      %56 = cir.cast(integral, %55 : !s32i), !s8i loc(#loc55)
      %57 = cir.const #cir.int<100> : !s32i loc(#loc56)
      %58 = cir.const #cir.int<1> : !s32i loc(#loc57)
      %59 = cir.binop(sub, %57, %58) nsw : !s32i loc(#loc56)
      %60 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc58)
      %61 = cir.ptr_stride(%60 : !cir.ptr<!s8i>, %59 : !s32i), !cir.ptr<!s8i> loc(#loc58)
      cir.store %56, %61 : !s8i, !cir.ptr<!s8i> loc(#loc185)
      %62 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc59)
      %63 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc60)
      %64 = cir.call @strlen(%63) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc59)
      cir.store %64, %46 : !u64i, !cir.ptr<!u64i> loc(#loc186)
      cir.scope {
        %73 = cir.const #cir.int<0> : !s32i loc(#loc65)
        %74 = cir.cast(integral, %73 : !s32i), !u64i loc(#loc65)
        cir.store %74, %45 : !u64i, !cir.ptr<!u64i> loc(#loc188)
        cir.for : cond {
          %75 = cir.load %45 : !cir.ptr<!u64i>, !u64i loc(#loc67)
          %76 = cir.load %46 : !cir.ptr<!u64i>, !u64i loc(#loc68)
          %77 = cir.cmp(lt, %75, %76) : !u64i, !cir.bool loc(#loc189)
          cir.condition(%77) loc(#loc69)
        } body {
          cir.scope {
            %75 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc71)
            %76 = cir.load %45 : !cir.ptr<!u64i>, !u64i loc(#loc72)
            %77 = cir.ptr_stride(%75 : !cir.ptr<!s8i>, %76 : !u64i), !cir.ptr<!s8i> loc(#loc73)
            %78 = cir.load %77 : !cir.ptr<!s8i>, !s8i loc(#loc71)
            %79 = cir.load %45 : !cir.ptr<!u64i>, !u64i loc(#loc74)
            %80 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc75)
            %81 = cir.ptr_stride(%80 : !cir.ptr<!s8i>, %79 : !u64i), !cir.ptr<!s8i> loc(#loc75)
            cir.store %78, %81 : !s8i, !cir.ptr<!s8i> loc(#loc191)
          } loc(#loc190)
          cir.yield loc(#loc64)
        } step {
          %75 = cir.load %45 : !cir.ptr<!u64i>, !u64i loc(#loc76)
          %76 = cir.unary(inc, %75) : !u64i, !u64i loc(#loc77)
          cir.store %76, %45 : !u64i, !cir.ptr<!u64i> loc(#loc192)
          cir.yield loc(#loc187)
        } loc(#loc187)
      } loc(#loc187)
      %65 = cir.const #cir.int<0> : !s32i loc(#loc78)
      %66 = cir.cast(integral, %65 : !s32i), !s8i loc(#loc78)
      %67 = cir.const #cir.int<100> : !s32i loc(#loc79)
      %68 = cir.const #cir.int<1> : !s32i loc(#loc80)
      %69 = cir.binop(sub, %67, %68) nsw : !s32i loc(#loc79)
      %70 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc81)
      %71 = cir.ptr_stride(%70 : !cir.ptr<!s8i>, %69 : !s32i), !cir.ptr<!s8i> loc(#loc81)
      cir.store %66, %71 : !s8i, !cir.ptr<!s8i> loc(#loc193)
      %72 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc82)
      cir.call @printLine(%72) : (!cir.ptr<!s8i>) -> () loc(#loc83)
    } loc(#loc180)
    cir.return loc(#loc6)
  } loc(#loc169)
  cir.func no_proto @CWE126_Buffer_Overread__char_alloca_loop_16_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B : !cir.ptr<!cir.func<()>> loc(#loc195)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc86)
    cir.return loc(#loc85)
  } loc(#loc194)
  cir.func no_proto internal private @goodG2B() extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data"] {alignment = 8 : i64} loc(#loc197)
    %1 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataBadBuffer", init] {alignment = 8 : i64} loc(#loc198)
    %2 = cir.const #cir.int<50> : !s32i loc(#loc93)
    %3 = cir.cast(integral, %2 : !s32i), !u64i loc(#loc93)
    %4 = cir.const #cir.int<1> : !u64i loc(#loc93)
    %5 = cir.binop(mul, %3, %4) : !u64i loc(#loc93)
    %6 = cir.alloca !u8i, !cir.ptr<!u8i>, %5 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc93)
    %7 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["dataGoodBuffer", init] {alignment = 8 : i64} loc(#loc199)
    %8 = cir.cast(bitcast, %6 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc93)
    %9 = cir.cast(bitcast, %8 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc93)
    cir.store %9, %1 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc198)
    %10 = cir.const #cir.int<100> : !s32i loc(#loc95)
    %11 = cir.cast(integral, %10 : !s32i), !u64i loc(#loc95)
    %12 = cir.const #cir.int<1> : !u64i loc(#loc95)
    %13 = cir.binop(mul, %11, %12) : !u64i loc(#loc95)
    %14 = cir.alloca !u8i, !cir.ptr<!u8i>, %13 : !u64i, ["bi_alloca"] {alignment = 16 : i64} loc(#loc95)
    %15 = cir.cast(bitcast, %14 : !cir.ptr<!u8i>), !cir.ptr<!void> loc(#loc95)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc95)
    cir.store %16, %7 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc199)
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc96)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc96)
    %19 = cir.const #cir.int<65> : !s32i loc(#loc97)
    %20 = cir.const #cir.int<50> : !s32i loc(#loc98)
    %21 = cir.const #cir.int<1> : !s32i loc(#loc99)
    %22 = cir.binop(sub, %20, %21) nsw : !s32i loc(#loc98)
    %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc98)
    cir.libc.memset %23 bytes from %18 set to %19 : !cir.ptr<!void>, !s32i, !u64i loc(#loc200)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc102)
    %25 = cir.cast(integral, %24 : !s32i), !s8i loc(#loc102)
    %26 = cir.load %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc103)
    %27 = cir.const #cir.int<50> : !s32i loc(#loc104)
    %28 = cir.const #cir.int<1> : !s32i loc(#loc105)
    %29 = cir.binop(sub, %27, %28) nsw : !s32i loc(#loc104)
    %30 = cir.ptr_stride(%26 : !cir.ptr<!s8i>, %29 : !s32i), !cir.ptr<!s8i> loc(#loc106)
    cir.store %25, %30 : !s8i, !cir.ptr<!s8i> loc(#loc201)
    %31 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc107)
    %32 = cir.cast(bitcast, %31 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc107)
    %33 = cir.const #cir.int<65> : !s32i loc(#loc108)
    %34 = cir.const #cir.int<100> : !s32i loc(#loc109)
    %35 = cir.const #cir.int<1> : !s32i loc(#loc110)
    %36 = cir.binop(sub, %34, %35) nsw : !s32i loc(#loc109)
    %37 = cir.cast(integral, %36 : !s32i), !u64i loc(#loc109)
    cir.libc.memset %37 bytes from %32 set to %33 : !cir.ptr<!void>, !s32i, !u64i loc(#loc202)
    %38 = cir.const #cir.int<0> : !s32i loc(#loc113)
    %39 = cir.cast(integral, %38 : !s32i), !s8i loc(#loc113)
    %40 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc114)
    %41 = cir.const #cir.int<100> : !s32i loc(#loc115)
    %42 = cir.const #cir.int<1> : !s32i loc(#loc116)
    %43 = cir.binop(sub, %41, %42) nsw : !s32i loc(#loc115)
    %44 = cir.ptr_stride(%40 : !cir.ptr<!s8i>, %43 : !s32i), !cir.ptr<!s8i> loc(#loc117)
    cir.store %39, %44 : !s8i, !cir.ptr<!s8i> loc(#loc203)
    cir.scope {
      cir.while {
        %45 = cir.const #cir.int<1> : !s32i loc(#loc120)
        %46 = cir.cast(int_to_bool, %45 : !s32i), !cir.bool loc(#loc120)
        cir.condition(%46) loc(#loc120)
      } do {
        cir.scope {
          %45 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc122)
          cir.store %45, %0 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc206)
          cir.break loc(#loc124)
        } loc(#loc205)
        cir.yield loc(#loc119)
      } loc(#loc204)
    } loc(#loc204)
    cir.scope {
      %45 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc208)
      %46 = cir.alloca !u64i, !cir.ptr<!u64i>, ["destLen"] {alignment = 8 : i64} loc(#loc209)
      %47 = cir.alloca !cir.array<!s8i x 100>, !cir.ptr<!cir.array<!s8i x 100>>, ["dest"] {alignment = 16 : i64} loc(#loc210)
      %48 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc132)
      %49 = cir.cast(bitcast, %48 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc132)
      %50 = cir.const #cir.int<67> : !s32i loc(#loc133)
      %51 = cir.const #cir.int<100> : !s32i loc(#loc134)
      %52 = cir.const #cir.int<1> : !s32i loc(#loc135)
      %53 = cir.binop(sub, %51, %52) nsw : !s32i loc(#loc134)
      %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc134)
      cir.libc.memset %54 bytes from %49 set to %50 : !cir.ptr<!void>, !s32i, !u64i loc(#loc211)
      %55 = cir.const #cir.int<0> : !s32i loc(#loc138)
      %56 = cir.cast(integral, %55 : !s32i), !s8i loc(#loc138)
      %57 = cir.const #cir.int<100> : !s32i loc(#loc139)
      %58 = cir.const #cir.int<1> : !s32i loc(#loc140)
      %59 = cir.binop(sub, %57, %58) nsw : !s32i loc(#loc139)
      %60 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc141)
      %61 = cir.ptr_stride(%60 : !cir.ptr<!s8i>, %59 : !s32i), !cir.ptr<!s8i> loc(#loc141)
      cir.store %56, %61 : !s8i, !cir.ptr<!s8i> loc(#loc212)
      %62 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc142)
      %63 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc143)
      %64 = cir.call @strlen(%63) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc142)
      cir.store %64, %46 : !u64i, !cir.ptr<!u64i> loc(#loc213)
      cir.scope {
        %73 = cir.const #cir.int<0> : !s32i loc(#loc148)
        %74 = cir.cast(integral, %73 : !s32i), !u64i loc(#loc148)
        cir.store %74, %45 : !u64i, !cir.ptr<!u64i> loc(#loc215)
        cir.for : cond {
          %75 = cir.load %45 : !cir.ptr<!u64i>, !u64i loc(#loc150)
          %76 = cir.load %46 : !cir.ptr<!u64i>, !u64i loc(#loc151)
          %77 = cir.cmp(lt, %75, %76) : !u64i, !cir.bool loc(#loc216)
          cir.condition(%77) loc(#loc152)
        } body {
          cir.scope {
            %75 = cir.load %0 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc154)
            %76 = cir.load %45 : !cir.ptr<!u64i>, !u64i loc(#loc155)
            %77 = cir.ptr_stride(%75 : !cir.ptr<!s8i>, %76 : !u64i), !cir.ptr<!s8i> loc(#loc156)
            %78 = cir.load %77 : !cir.ptr<!s8i>, !s8i loc(#loc154)
            %79 = cir.load %45 : !cir.ptr<!u64i>, !u64i loc(#loc157)
            %80 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc158)
            %81 = cir.ptr_stride(%80 : !cir.ptr<!s8i>, %79 : !u64i), !cir.ptr<!s8i> loc(#loc158)
            cir.store %78, %81 : !s8i, !cir.ptr<!s8i> loc(#loc218)
          } loc(#loc217)
          cir.yield loc(#loc147)
        } step {
          %75 = cir.load %45 : !cir.ptr<!u64i>, !u64i loc(#loc159)
          %76 = cir.unary(inc, %75) : !u64i, !u64i loc(#loc160)
          cir.store %76, %45 : !u64i, !cir.ptr<!u64i> loc(#loc219)
          cir.yield loc(#loc214)
        } loc(#loc214)
      } loc(#loc214)
      %65 = cir.const #cir.int<0> : !s32i loc(#loc161)
      %66 = cir.cast(integral, %65 : !s32i), !s8i loc(#loc161)
      %67 = cir.const #cir.int<100> : !s32i loc(#loc162)
      %68 = cir.const #cir.int<1> : !s32i loc(#loc163)
      %69 = cir.binop(sub, %67, %68) nsw : !s32i loc(#loc162)
      %70 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc164)
      %71 = cir.ptr_stride(%70 : !cir.ptr<!s8i>, %69 : !s32i), !cir.ptr<!s8i> loc(#loc164)
      cir.store %66, %71 : !s8i, !cir.ptr<!s8i> loc(#loc220)
      %72 = cir.cast(array_to_ptrdecay, %47 : !cir.ptr<!cir.array<!s8i x 100>>), !cir.ptr<!s8i> loc(#loc165)
      cir.call @printLine(%72) : (!cir.ptr<!s8i>) -> () loc(#loc166)
    } loc(#loc207)
    cir.return loc(#loc89)
  } loc(#loc196)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE126_Buffer_Overread/s01/CWE126_Buffer_Overread__char_alloca_loop_16.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":23:1)
#loc6 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":53:1)
#loc7 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":25:5)
#loc8 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":25:12)
#loc9 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":26:5)
#loc10 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":26:36)
#loc11 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":27:5)
#loc12 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":27:37)
#loc13 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":28:12)
#loc14 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":28:27)
#loc15 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":28:32)
#loc16 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":28:35)
#loc17 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":28:5)
#loc18 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":28:36)
#loc19 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":29:27)
#loc20 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":29:5)
#loc21 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":29:19)
#loc22 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":29:22)
#loc23 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":29:23)
#loc24 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":30:12)
#loc25 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":30:28)
#loc26 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":30:33)
#loc27 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":30:37)
#loc28 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":30:5)
#loc29 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":30:38)
#loc30 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":31:29)
#loc31 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":31:5)
#loc32 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":31:20)
#loc33 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":31:24)
#loc34 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":31:25)
#loc35 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":32:5)
#loc36 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":37:5)
#loc37 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":32:11)
#loc38 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":33:5)
#loc39 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":35:16)
#loc40 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":35:9)
#loc41 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":36:9)
#loc42 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":38:5)
#loc43 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":52:5)
#loc44 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":39:9)
#loc45 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":39:16)
#loc46 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":39:19)
#loc47 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":40:9)
#loc48 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":40:22)
#loc49 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":41:16)
#loc50 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":41:22)
#loc51 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":41:27)
#loc52 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":41:31)
#loc53 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":41:9)
#loc54 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":41:32)
#loc55 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":42:23)
#loc56 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":42:14)
#loc57 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":42:18)
#loc58 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":42:9)
#loc59 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":43:19)
#loc60 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":43:26)
#loc61 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":43:9)
#loc62 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":43:30)
#loc63 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":46:9)
#loc64 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":49:9)
#loc65 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":46:18)
#loc66 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":46:14)
#loc67 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":46:21)
#loc68 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":46:25)
#loc69 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":46:23)
#loc70 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":47:9)
#loc71 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":48:23)
#loc72 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":48:28)
#loc73 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":48:29)
#loc74 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":48:18)
#loc75 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":48:13)
#loc76 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":46:35)
#loc77 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":46:34)
#loc78 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":50:23)
#loc79 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":50:14)
#loc80 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":50:18)
#loc81 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":50:9)
#loc82 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":51:19)
#loc83 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":51:9)
#loc84 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":92:1)
#loc85 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":95:1)
#loc86 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":94:5)
#loc87 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":94:13)
#loc88 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":60:1)
#loc89 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":90:1)
#loc90 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":62:5)
#loc91 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":62:12)
#loc92 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":63:5)
#loc93 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":63:36)
#loc94 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":64:5)
#loc95 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":64:37)
#loc96 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":65:12)
#loc97 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":65:27)
#loc98 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":65:32)
#loc99 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":65:35)
#loc100 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":65:5)
#loc101 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":65:36)
#loc102 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":66:27)
#loc103 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":66:5)
#loc104 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":66:19)
#loc105 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":66:22)
#loc106 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":66:23)
#loc107 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":67:12)
#loc108 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":67:28)
#loc109 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":67:33)
#loc110 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":67:37)
#loc111 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":67:5)
#loc112 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":67:38)
#loc113 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":68:29)
#loc114 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":68:5)
#loc115 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":68:20)
#loc116 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":68:24)
#loc117 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":68:25)
#loc118 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":69:5)
#loc119 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":74:5)
#loc120 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":69:11)
#loc121 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":70:5)
#loc122 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":72:16)
#loc123 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":72:9)
#loc124 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":73:9)
#loc125 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":75:5)
#loc126 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":89:5)
#loc127 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":76:9)
#loc128 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":76:16)
#loc129 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":76:19)
#loc130 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":77:9)
#loc131 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":77:22)
#loc132 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":78:16)
#loc133 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":78:22)
#loc134 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":78:27)
#loc135 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":78:31)
#loc136 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":78:9)
#loc137 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":78:32)
#loc138 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":79:23)
#loc139 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":79:14)
#loc140 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":79:18)
#loc141 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":79:9)
#loc142 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":80:19)
#loc143 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":80:26)
#loc144 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":80:9)
#loc145 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":80:30)
#loc146 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":83:9)
#loc147 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":86:9)
#loc148 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":83:18)
#loc149 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":83:14)
#loc150 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":83:21)
#loc151 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":83:25)
#loc152 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":83:23)
#loc153 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":84:9)
#loc154 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":85:23)
#loc155 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":85:28)
#loc156 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":85:29)
#loc157 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":85:18)
#loc158 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":85:13)
#loc159 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":83:35)
#loc160 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":83:34)
#loc161 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":87:23)
#loc162 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":87:14)
#loc163 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":87:18)
#loc164 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":87:9)
#loc165 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":88:19)
#loc166 = loc("CWE126_Buffer_Overread__char_alloca_loop_16.c":88:9)
#loc167 = loc(fused[#loc1, #loc2])
#loc168 = loc(fused[#loc3, #loc4])
#loc169 = loc(fused[#loc5, #loc6])
#loc170 = loc(fused[#loc7, #loc8])
#loc171 = loc(fused[#loc9, #loc10])
#loc172 = loc(fused[#loc11, #loc12])
#loc173 = loc(fused[#loc17, #loc18])
#loc174 = loc(fused[#loc20, #loc19])
#loc175 = loc(fused[#loc28, #loc29])
#loc176 = loc(fused[#loc31, #loc30])
#loc177 = loc(fused[#loc35, #loc36])
#loc178 = loc(fused[#loc38, #loc36])
#loc179 = loc(fused[#loc40, #loc39])
#loc180 = loc(fused[#loc42, #loc43])
#loc181 = loc(fused[#loc44, #loc45])
#loc182 = loc(fused[#loc44, #loc46])
#loc183 = loc(fused[#loc47, #loc48])
#loc184 = loc(fused[#loc53, #loc54])
#loc185 = loc(fused[#loc58, #loc55])
#loc186 = loc(fused[#loc61, #loc62])
#loc187 = loc(fused[#loc63, #loc64])
#loc188 = loc(fused[#loc66, #loc65])
#loc189 = loc(fused[#loc67, #loc68])
#loc190 = loc(fused[#loc70, #loc64])
#loc191 = loc(fused[#loc75, #loc73])
#loc192 = loc(fused[#loc77, #loc76])
#loc193 = loc(fused[#loc81, #loc78])
#loc194 = loc(fused[#loc84, #loc85])
#loc195 = loc(fused[#loc86, #loc87])
#loc196 = loc(fused[#loc88, #loc89])
#loc197 = loc(fused[#loc90, #loc91])
#loc198 = loc(fused[#loc92, #loc93])
#loc199 = loc(fused[#loc94, #loc95])
#loc200 = loc(fused[#loc100, #loc101])
#loc201 = loc(fused[#loc103, #loc102])
#loc202 = loc(fused[#loc111, #loc112])
#loc203 = loc(fused[#loc114, #loc113])
#loc204 = loc(fused[#loc118, #loc119])
#loc205 = loc(fused[#loc121, #loc119])
#loc206 = loc(fused[#loc123, #loc122])
#loc207 = loc(fused[#loc125, #loc126])
#loc208 = loc(fused[#loc127, #loc128])
#loc209 = loc(fused[#loc127, #loc129])
#loc210 = loc(fused[#loc130, #loc131])
#loc211 = loc(fused[#loc136, #loc137])
#loc212 = loc(fused[#loc141, #loc138])
#loc213 = loc(fused[#loc144, #loc145])
#loc214 = loc(fused[#loc146, #loc147])
#loc215 = loc(fused[#loc149, #loc148])
#loc216 = loc(fused[#loc150, #loc151])
#loc217 = loc(fused[#loc153, #loc147])
#loc218 = loc(fused[#loc158, #loc156])
#loc219 = loc(fused[#loc160, #loc159])
#loc220 = loc(fused[#loc164, #loc161])
