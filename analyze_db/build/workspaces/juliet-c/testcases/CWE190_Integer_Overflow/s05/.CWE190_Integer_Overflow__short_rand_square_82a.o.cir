!s16i = !cir.int<s, 16>
!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#fn_attr2 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc5 = loc("./CWE190_Integer_Overflow__short_rand_square_82.h":32:7)
#loc26 = loc("./CWE190_Integer_Overflow__short_rand_square_82.h":42:7)
#loc45 = loc("./CWE190_Integer_Overflow__short_rand_square_82.h":48:7)
#loc70 = loc("./CWE190_Integer_Overflow__short_rand_square_82.h":23:7)
!ty_anon_struct = !cir.record<struct  {!cir.ptr<!u8i>, !cir.ptr<!u8i>}>
!ty_anon_struct1 = !cir.record<struct  {!cir.array<!cir.ptr<!u8i> x 3>}>
!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base = !cir.record<class "CWE190_Integer_Overflow__short_rand_square_82::CWE190_Integer_Overflow__short_rand_square_82_base" {!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>} #cir.record.decl.ast>
!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_bad = !cir.record<class "CWE190_Integer_Overflow__short_rand_square_82::CWE190_Integer_Overflow__short_rand_square_82_bad" {!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base} #cir.record.decl.ast>
!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_goodB2G = !cir.record<class "CWE190_Integer_Overflow__short_rand_square_82::CWE190_Integer_Overflow__short_rand_square_82_goodB2G" {!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base} #cir.record.decl.ast>
!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_goodG2B = !cir.record<class "CWE190_Integer_Overflow__short_rand_square_82::CWE190_Integer_Overflow__short_rand_square_82_goodG2B" {!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_82a.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @rand() -> !s32i extra(#fn_attr) loc(#loc71)
  cir.func private @_Znwm(!u64i) -> !cir.ptr<!void> loc(#loc72)
  cir.func linkonce_odr @_ZN45CWE190_Integer_Overflow__short_rand_square_8249CWE190_Integer_Overflow__short_rand_square_82_badC2Ev(%arg0: !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_bad> loc("./CWE190_Integer_Overflow__short_rand_square_82.h":32:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_bad>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_bad>>, ["this", init] {alignment = 8 : i64} loc(#loc5)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_bad>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_bad>> loc(#loc5)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_bad>>, !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_bad> loc(#loc5)
    %2 = cir.base_class_addr(%1 : !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_bad> nonnull) [0] -> !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base> loc(#loc5)
    cir.call @_ZN45CWE190_Integer_Overflow__short_rand_square_8250CWE190_Integer_Overflow__short_rand_square_82_baseC2Ev(%2) : (!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>) -> () extra(#fn_attr) loc(#loc5)
    %3 = cir.vtable.address_point(@_ZTVN45CWE190_Integer_Overflow__short_rand_square_8249CWE190_Integer_Overflow__short_rand_square_82_badE, address_point = <index = 0, offset = 2>) : !cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>> loc(#loc73)
    %4 = cir.cast(bitcast, %1 : !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_bad>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>> loc(#loc5)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>> loc(#loc5)
    cir.return loc(#loc5)
  } loc(#loc5)
  cir.func private @_ZdlPv(!cir.ptr<!void>) extra(#fn_attr) loc(#loc74)
  cir.func @_ZN45CWE190_Integer_Overflow__short_rand_square_823badEv() extra(#fn_attr2) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc76)
    %1 = cir.alloca !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>>, ["baseObject", init] {alignment = 8 : i64} loc(#loc77)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc16)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc16)
    cir.store %3, %0 : !s16i, !cir.ptr<!s16i> loc(#loc78)
    %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc18)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc18)
    %6 = cir.binop(and, %4, %5) : !s32i loc(#loc18)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc18)
    %8 = cir.ternary(%7, true {
      %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc18)
      %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc18)
      %25 = cir.const #cir.int<30> : !s32i loc(#loc18)
      %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc18)
      %27 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc18)
      %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc18)
      %29 = cir.const #cir.int<15> : !s32i loc(#loc18)
      %30 = cir.shift(left, %28 : !u32i, %29 : !s32i) -> !u32i loc(#loc18)
      %31 = cir.binop(xor, %26, %30) : !u32i loc(#loc18)
      %32 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc18)
      %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc18)
      %34 = cir.binop(xor, %31, %33) : !u32i loc(#loc18)
      cir.yield %34 : !u32i loc(#loc18)
    }, false {
      %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc18)
      %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc18)
      %25 = cir.const #cir.int<30> : !s32i loc(#loc18)
      %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc18)
      %27 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc18)
      %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc18)
      %29 = cir.const #cir.int<15> : !s32i loc(#loc18)
      %30 = cir.shift(left, %28 : !u32i, %29 : !s32i) -> !u32i loc(#loc18)
      %31 = cir.binop(xor, %26, %30) : !u32i loc(#loc18)
      %32 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc18)
      %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc18)
      %34 = cir.binop(xor, %31, %33) : !u32i loc(#loc18)
      %35 = cir.unary(minus, %34) : !u32i, !u32i loc(#loc18)
      %36 = cir.const #cir.int<1> : !s32i loc(#loc18)
      %37 = cir.cast(integral, %36 : !s32i), !u32i loc(#loc18)
      %38 = cir.binop(sub, %35, %37) : !u32i loc(#loc18)
      cir.yield %38 : !u32i loc(#loc18)
    }) : (!cir.bool) -> !u32i loc(#loc18)
    %9 = cir.cast(integral, %8 : !u32i), !s32i loc(#loc18)
    %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc18)
    cir.store %10, %0 : !s16i, !cir.ptr<!s16i> loc(#loc79)
    %11 = cir.const #cir.int<8> : !u64i loc(#loc80)
    %12 = cir.call @_Znwm(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc77)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_bad> loc(#loc80)
    cir.call @_ZN45CWE190_Integer_Overflow__short_rand_square_8249CWE190_Integer_Overflow__short_rand_square_82_badC2Ev(%13) : (!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_bad>) -> () extra(#fn_attr) loc(#loc15)
    %14 = cir.base_class_addr(%13 : !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_bad> nonnull) [0] -> !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base> loc(#loc20)
    cir.store %14, %1 : !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>> loc(#loc77)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>>, !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base> loc(#loc21)
    %16 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc22)
    %17 = cir.cast(bitcast, %15 : !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>, !s16i)>>>> loc(#loc21)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>, !s16i)>>>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>, !s16i)>>> loc(#loc21)
    %19 = cir.vtable.address_point( %18 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>, !s16i)>>>, address_point = <index = 0, offset = 0>) : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>, !s16i)>>> loc(#loc21)
    %20 = cir.load align(8) %19 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>, !s16i)>>>, !cir.ptr<!cir.func<(!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>, !s16i)>> loc(#loc21)
    cir.call %20(%15, %16) : (!cir.ptr<!cir.func<(!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>, !s16i)>>, !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>, !s16i) -> () loc(#loc23)
    %21 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>>, !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base> loc(#loc24)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>), !cir.ptr<!void> loc(#loc24)
    cir.call @_ZdlPv(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc25)
    cir.return loc(#loc11)
  } loc(#loc75)
  cir.func linkonce_odr @_ZN45CWE190_Integer_Overflow__short_rand_square_8253CWE190_Integer_Overflow__short_rand_square_82_goodG2BC2Ev(%arg0: !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_goodG2B> loc("./CWE190_Integer_Overflow__short_rand_square_82.h":42:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_goodG2B>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_goodG2B>>, ["this", init] {alignment = 8 : i64} loc(#loc26)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_goodG2B>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_goodG2B>> loc(#loc26)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_goodG2B>>, !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_goodG2B> loc(#loc26)
    %2 = cir.base_class_addr(%1 : !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_goodG2B> nonnull) [0] -> !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base> loc(#loc26)
    cir.call @_ZN45CWE190_Integer_Overflow__short_rand_square_8250CWE190_Integer_Overflow__short_rand_square_82_baseC2Ev(%2) : (!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>) -> () extra(#fn_attr) loc(#loc26)
    %3 = cir.vtable.address_point(@_ZTVN45CWE190_Integer_Overflow__short_rand_square_8253CWE190_Integer_Overflow__short_rand_square_82_goodG2BE, address_point = <index = 0, offset = 2>) : !cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>> loc(#loc81)
    %4 = cir.cast(bitcast, %1 : !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_goodG2B>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>> loc(#loc26)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>> loc(#loc26)
    cir.return loc(#loc26)
  } loc(#loc26)
  cir.func internal private @_ZN45CWE190_Integer_Overflow__short_rand_square_82L7goodG2BEv() extra(#fn_attr2) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc83)
    %1 = cir.alloca !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>>, ["baseObject", init] {alignment = 8 : i64} loc(#loc84)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc35)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc35)
    cir.store %3, %0 : !s16i, !cir.ptr<!s16i> loc(#loc85)
    %4 = cir.const #cir.int<2> : !s32i loc(#loc37)
    %5 = cir.cast(integral, %4 : !s32i), !s16i loc(#loc37)
    cir.store %5, %0 : !s16i, !cir.ptr<!s16i> loc(#loc86)
    %6 = cir.const #cir.int<8> : !u64i loc(#loc87)
    %7 = cir.call @_Znwm(%6) : (!u64i) -> !cir.ptr<!void> loc(#loc84)
    %8 = cir.cast(bitcast, %7 : !cir.ptr<!void>), !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_goodG2B> loc(#loc87)
    cir.call @_ZN45CWE190_Integer_Overflow__short_rand_square_8253CWE190_Integer_Overflow__short_rand_square_82_goodG2BC2Ev(%8) : (!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_goodG2B>) -> () extra(#fn_attr) loc(#loc34)
    %9 = cir.base_class_addr(%8 : !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_goodG2B> nonnull) [0] -> !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base> loc(#loc39)
    cir.store %9, %1 : !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>> loc(#loc84)
    %10 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>>, !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base> loc(#loc40)
    %11 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc41)
    %12 = cir.cast(bitcast, %10 : !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>, !s16i)>>>> loc(#loc40)
    %13 = cir.load %12 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>, !s16i)>>>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>, !s16i)>>> loc(#loc40)
    %14 = cir.vtable.address_point( %13 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>, !s16i)>>>, address_point = <index = 0, offset = 0>) : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>, !s16i)>>> loc(#loc40)
    %15 = cir.load align(8) %14 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>, !s16i)>>>, !cir.ptr<!cir.func<(!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>, !s16i)>> loc(#loc40)
    cir.call %15(%10, %11) : (!cir.ptr<!cir.func<(!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>, !s16i)>>, !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>, !s16i) -> () loc(#loc42)
    %16 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>>, !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base> loc(#loc43)
    %17 = cir.cast(bitcast, %16 : !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>), !cir.ptr<!void> loc(#loc43)
    cir.call @_ZdlPv(%17) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc44)
    cir.return loc(#loc30)
  } loc(#loc82)
  cir.func linkonce_odr @_ZN45CWE190_Integer_Overflow__short_rand_square_8253CWE190_Integer_Overflow__short_rand_square_82_goodB2GC2Ev(%arg0: !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_goodB2G> loc("./CWE190_Integer_Overflow__short_rand_square_82.h":48:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_goodB2G>>, ["this", init] {alignment = 8 : i64} loc(#loc45)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_goodB2G>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_goodB2G>> loc(#loc45)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_goodB2G>>, !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_goodB2G> loc(#loc45)
    %2 = cir.base_class_addr(%1 : !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_goodB2G> nonnull) [0] -> !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base> loc(#loc45)
    cir.call @_ZN45CWE190_Integer_Overflow__short_rand_square_8250CWE190_Integer_Overflow__short_rand_square_82_baseC2Ev(%2) : (!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>) -> () extra(#fn_attr) loc(#loc45)
    %3 = cir.vtable.address_point(@_ZTVN45CWE190_Integer_Overflow__short_rand_square_8253CWE190_Integer_Overflow__short_rand_square_82_goodB2GE, address_point = <index = 0, offset = 2>) : !cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>> loc(#loc88)
    %4 = cir.cast(bitcast, %1 : !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_goodB2G>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>> loc(#loc45)
    cir.store %3, %4 : !cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>> loc(#loc45)
    cir.return loc(#loc45)
  } loc(#loc45)
  cir.func internal private @_ZN45CWE190_Integer_Overflow__short_rand_square_82L7goodB2GEv() extra(#fn_attr2) {
    %0 = cir.alloca !s16i, !cir.ptr<!s16i>, ["data"] {alignment = 2 : i64} loc(#loc90)
    %1 = cir.alloca !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>>, ["baseObject", init] {alignment = 8 : i64} loc(#loc91)
    %2 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %3 = cir.cast(integral, %2 : !s32i), !s16i loc(#loc54)
    cir.store %3, %0 : !s16i, !cir.ptr<!s16i> loc(#loc92)
    %4 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc56)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %6 = cir.binop(and, %4, %5) : !s32i loc(#loc56)
    %7 = cir.cast(int_to_bool, %6 : !s32i), !cir.bool loc(#loc56)
    %8 = cir.ternary(%7, true {
      %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc56)
      %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc56)
      %25 = cir.const #cir.int<30> : !s32i loc(#loc56)
      %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc56)
      %27 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc56)
      %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc56)
      %29 = cir.const #cir.int<15> : !s32i loc(#loc56)
      %30 = cir.shift(left, %28 : !u32i, %29 : !s32i) -> !u32i loc(#loc56)
      %31 = cir.binop(xor, %26, %30) : !u32i loc(#loc56)
      %32 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc56)
      %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc56)
      %34 = cir.binop(xor, %31, %33) : !u32i loc(#loc56)
      cir.yield %34 : !u32i loc(#loc56)
    }, false {
      %23 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc56)
      %24 = cir.cast(integral, %23 : !s32i), !u32i loc(#loc56)
      %25 = cir.const #cir.int<30> : !s32i loc(#loc56)
      %26 = cir.shift(left, %24 : !u32i, %25 : !s32i) -> !u32i loc(#loc56)
      %27 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc56)
      %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc56)
      %29 = cir.const #cir.int<15> : !s32i loc(#loc56)
      %30 = cir.shift(left, %28 : !u32i, %29 : !s32i) -> !u32i loc(#loc56)
      %31 = cir.binop(xor, %26, %30) : !u32i loc(#loc56)
      %32 = cir.call @rand() : () -> !s32i extra(#fn_attr) loc(#loc56)
      %33 = cir.cast(integral, %32 : !s32i), !u32i loc(#loc56)
      %34 = cir.binop(xor, %31, %33) : !u32i loc(#loc56)
      %35 = cir.unary(minus, %34) : !u32i, !u32i loc(#loc56)
      %36 = cir.const #cir.int<1> : !s32i loc(#loc56)
      %37 = cir.cast(integral, %36 : !s32i), !u32i loc(#loc56)
      %38 = cir.binop(sub, %35, %37) : !u32i loc(#loc56)
      cir.yield %38 : !u32i loc(#loc56)
    }) : (!cir.bool) -> !u32i loc(#loc56)
    %9 = cir.cast(integral, %8 : !u32i), !s32i loc(#loc56)
    %10 = cir.cast(integral, %9 : !s32i), !s16i loc(#loc56)
    cir.store %10, %0 : !s16i, !cir.ptr<!s16i> loc(#loc93)
    %11 = cir.const #cir.int<8> : !u64i loc(#loc94)
    %12 = cir.call @_Znwm(%11) : (!u64i) -> !cir.ptr<!void> loc(#loc91)
    %13 = cir.cast(bitcast, %12 : !cir.ptr<!void>), !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_goodB2G> loc(#loc94)
    cir.call @_ZN45CWE190_Integer_Overflow__short_rand_square_8253CWE190_Integer_Overflow__short_rand_square_82_goodB2GC2Ev(%13) : (!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_goodB2G>) -> () extra(#fn_attr) loc(#loc53)
    %14 = cir.base_class_addr(%13 : !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_goodB2G> nonnull) [0] -> !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base> loc(#loc58)
    cir.store %14, %1 : !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>> loc(#loc91)
    %15 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>>, !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base> loc(#loc59)
    %16 = cir.load %0 : !cir.ptr<!s16i>, !s16i loc(#loc60)
    %17 = cir.cast(bitcast, %15 : !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>, !s16i)>>>> loc(#loc59)
    %18 = cir.load %17 : !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>, !s16i)>>>>, !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>, !s16i)>>> loc(#loc59)
    %19 = cir.vtable.address_point( %18 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>, !s16i)>>>, address_point = <index = 0, offset = 0>) : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>, !s16i)>>> loc(#loc59)
    %20 = cir.load align(8) %19 : !cir.ptr<!cir.ptr<!cir.func<(!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>, !s16i)>>>, !cir.ptr<!cir.func<(!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>, !s16i)>> loc(#loc59)
    cir.call %20(%15, %16) : (!cir.ptr<!cir.func<(!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>, !s16i)>>, !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>, !s16i) -> () loc(#loc61)
    %21 = cir.load %1 : !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>>, !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base> loc(#loc62)
    %22 = cir.cast(bitcast, %21 : !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>), !cir.ptr<!void> loc(#loc62)
    cir.call @_ZdlPv(%22) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc63)
    cir.return loc(#loc49)
  } loc(#loc89)
  cir.func @_ZN45CWE190_Integer_Overflow__short_rand_square_824goodEv() extra(#fn_attr2) {
    cir.call @_ZN45CWE190_Integer_Overflow__short_rand_square_82L7goodG2BEv() : () -> () loc(#loc66)
    cir.call @_ZN45CWE190_Integer_Overflow__short_rand_square_82L7goodB2GEv() : () -> () loc(#loc67)
    cir.return loc(#loc65)
  } loc(#loc95)
  cir.global linkonce_odr dsolocal @_ZTVN45CWE190_Integer_Overflow__short_rand_square_8250CWE190_Integer_Overflow__short_rand_square_82_baseE = #cir.vtable<{#cir.const_array<[#cir.ptr<null> : !cir.ptr<!u8i>, #cir.global_view<@_ZTIN45CWE190_Integer_Overflow__short_rand_square_8250CWE190_Integer_Overflow__short_rand_square_82_baseE> : !cir.ptr<!u8i>, #cir.global_view<@__cxa_pure_virtual> : !cir.ptr<!u8i>]> : !cir.array<!cir.ptr<!u8i> x 3>}> : !ty_anon_struct1 {alignment = 8 : i64} loc(#loc96)
  cir.func linkonce_odr @_ZN45CWE190_Integer_Overflow__short_rand_square_8250CWE190_Integer_Overflow__short_rand_square_82_baseC2Ev(%arg0: !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base> loc("./CWE190_Integer_Overflow__short_rand_square_82.h":23:7)) extra(#fn_attr1) {
    %0 = cir.alloca !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>>, ["this", init] {alignment = 8 : i64} loc(#loc70)
    cir.store %arg0, %0 : !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>, !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>> loc(#loc70)
    %1 = cir.load %0 : !cir.ptr<!cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>>, !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base> loc(#loc70)
    %2 = cir.vtable.address_point(@_ZTVN45CWE190_Integer_Overflow__short_rand_square_8250CWE190_Integer_Overflow__short_rand_square_82_baseE, address_point = <index = 0, offset = 2>) : !cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>> loc(#loc96)
    %3 = cir.cast(bitcast, %1 : !cir.ptr<!ty_CWE190_Integer_Overflow__short_rand_square_823A3ACWE190_Integer_Overflow__short_rand_square_82_base>), !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>> loc(#loc70)
    cir.store %2, %3 : !cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>, !cir.ptr<!cir.ptr<!cir.ptr<!cir.func<() -> !u32i>>>> loc(#loc70)
    cir.return loc(#loc70)
  } loc(#loc70)
  cir.global "private" external @_ZTVN45CWE190_Integer_Overflow__short_rand_square_8249CWE190_Integer_Overflow__short_rand_square_82_badE : !ty_anon_struct1 {alignment = 8 : i64} loc(#loc73)
  cir.global "private" external @_ZTVN10__cxxabiv117__class_type_infoE : !cir.ptr<!cir.ptr<!u8i>> loc(#loc68)
  cir.global linkonce_odr comdat @_ZTSN45CWE190_Integer_Overflow__short_rand_square_8250CWE190_Integer_Overflow__short_rand_square_82_baseE = #cir.const_array<"N45CWE190_Integer_Overflow__short_rand_square_8250CWE190_Integer_Overflow__short_rand_square_82_baseE" : !cir.array<!s8i x 101>> : !cir.array<!s8i x 101> {alignment = 1 : i64} loc(#loc68)
  cir.global constant external @_ZTIN45CWE190_Integer_Overflow__short_rand_square_8250CWE190_Integer_Overflow__short_rand_square_82_baseE = #cir.typeinfo<{#cir.global_view<@_ZTVN10__cxxabiv117__class_type_infoE, [2 : i32]> : !cir.ptr<!u8i>, #cir.global_view<@_ZTSN45CWE190_Integer_Overflow__short_rand_square_8250CWE190_Integer_Overflow__short_rand_square_82_baseE> : !cir.ptr<!u8i>}> : !ty_anon_struct {alignment = 8 : i64} loc(#loc68)
  cir.func private @__cxa_pure_virtual() loc(#loc)
  cir.global "private" external @_ZTVN45CWE190_Integer_Overflow__short_rand_square_8253CWE190_Integer_Overflow__short_rand_square_82_goodG2BE : !ty_anon_struct1 {alignment = 8 : i64} loc(#loc81)
  cir.global "private" external @_ZTVN45CWE190_Integer_Overflow__short_rand_square_8253CWE190_Integer_Overflow__short_rand_square_82_goodB2GE : !ty_anon_struct1 {alignment = 8 : i64} loc(#loc88)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE190_Integer_Overflow/s05/CWE190_Integer_Overflow__short_rand_square_82a.cpp":0:0)
#loc1 = loc("/usr/include/stdlib.h":573:1)
#loc2 = loc("/usr/include/stdlib.h":573:24)
#loc3 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":126:20)
#loc4 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":127:41)
#loc6 = loc("./CWE190_Integer_Overflow__short_rand_square_82.h":32:1)
#loc7 = loc("./CWE190_Integer_Overflow__short_rand_square_82.h":36:1)
#loc8 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":130:1)
#loc9 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":131:41)
#loc10 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":26:1)
#loc11 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":35:1)
#loc12 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":28:5)
#loc13 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":28:11)
#loc14 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":32:5)
#loc15 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":32:74)
#loc16 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":29:12)
#loc17 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":29:5)
#loc18 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":31:19)
#loc19 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":31:5)
#loc20 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":32:70)
#loc21 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":33:5)
#loc22 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":33:24)
#loc23 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":33:17)
#loc24 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":34:12)
#loc25 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":26:6)
#loc27 = loc("./CWE190_Integer_Overflow__short_rand_square_82.h":42:1)
#loc28 = loc("./CWE190_Integer_Overflow__short_rand_square_82.h":46:1)
#loc29 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":42:1)
#loc30 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":51:1)
#loc31 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":44:5)
#loc32 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":44:11)
#loc33 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":48:5)
#loc34 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":48:74)
#loc35 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":45:12)
#loc36 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":45:5)
#loc37 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":47:12)
#loc38 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":47:5)
#loc39 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":48:70)
#loc40 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":49:5)
#loc41 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":49:24)
#loc42 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":49:17)
#loc43 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":50:12)
#loc44 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":42:13)
#loc46 = loc("./CWE190_Integer_Overflow__short_rand_square_82.h":48:1)
#loc47 = loc("./CWE190_Integer_Overflow__short_rand_square_82.h":52:1)
#loc48 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":54:1)
#loc49 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":63:1)
#loc50 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":56:5)
#loc51 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":56:11)
#loc52 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":60:5)
#loc53 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":60:74)
#loc54 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":57:12)
#loc55 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":57:5)
#loc56 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":59:19)
#loc57 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":59:5)
#loc58 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":60:70)
#loc59 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":61:5)
#loc60 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":61:24)
#loc61 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":61:17)
#loc62 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":62:12)
#loc63 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":54:13)
#loc64 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":65:1)
#loc65 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":69:1)
#loc66 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":67:5)
#loc67 = loc("CWE190_Integer_Overflow__short_rand_square_82a.cpp":68:5)
#loc68 = loc("./CWE190_Integer_Overflow__short_rand_square_82.h":23:1)
#loc69 = loc("./CWE190_Integer_Overflow__short_rand_square_82.h":28:1)
#loc71 = loc(fused[#loc1, #loc2])
#loc72 = loc(fused[#loc3, #loc4])
#loc73 = loc(fused[#loc6, #loc7])
#loc74 = loc(fused[#loc8, #loc9])
#loc75 = loc(fused[#loc10, #loc11])
#loc76 = loc(fused[#loc12, #loc13])
#loc77 = loc(fused[#loc14, #loc15])
#loc78 = loc(fused[#loc17, #loc16])
#loc79 = loc(fused[#loc19, #loc18])
#loc80 = loc(fused[#loc20, #loc15])
#loc81 = loc(fused[#loc27, #loc28])
#loc82 = loc(fused[#loc29, #loc30])
#loc83 = loc(fused[#loc31, #loc32])
#loc84 = loc(fused[#loc33, #loc34])
#loc85 = loc(fused[#loc36, #loc35])
#loc86 = loc(fused[#loc38, #loc37])
#loc87 = loc(fused[#loc39, #loc34])
#loc88 = loc(fused[#loc46, #loc47])
#loc89 = loc(fused[#loc48, #loc49])
#loc90 = loc(fused[#loc50, #loc51])
#loc91 = loc(fused[#loc52, #loc53])
#loc92 = loc(fused[#loc55, #loc54])
#loc93 = loc(fused[#loc57, #loc56])
#loc94 = loc(fused[#loc58, #loc53])
#loc95 = loc(fused[#loc64, #loc65])
#loc96 = loc(fused[#loc68, #loc69])
