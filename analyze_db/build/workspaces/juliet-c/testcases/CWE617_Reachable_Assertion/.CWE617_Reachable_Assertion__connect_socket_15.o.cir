!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc103 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":90:44)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE617_Reachable_Assertion/CWE617_Reachable_Assertion__connect_socket_15.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, "dlti.endianness" = "little", "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc169)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc170)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc171)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc172)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc173)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc174)
  cir.func private @close(!s32i) -> !s32i loc(#loc175)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc176)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc18)
  cir.func private @__assert_fail(!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>) extra(#fn_attr) loc(#loc177)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"data > ASSERT_VALUE\00" : !cir.array<!s8i x 20>> : !cir.array<!s8i x 20> {alignment = 1 : i64} loc(#loc21)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"CWE617_Reachable_Assertion__connect_socket_15.c\00" : !cir.array<!s8i x 48>> : !cir.array<!s8i x 48> {alignment = 1 : i64} loc(#loc21)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"void CWE617_Reachable_Assertion__connect_socket_15_bad()\00" : !cir.array<!s8i x 57>> : !cir.array<!s8i x 57> {alignment = 1 : i64} loc(#loc21)
  cir.func no_proto @CWE617_Reachable_Assertion__connect_socket_15_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc179)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc180)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc181)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc182)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc183)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %6 = cir.unary(minus, %5) nsw : !s32i, !s32i loc(#loc35)
    cir.store %6, %4 : !s32i, !cir.ptr<!s32i> loc(#loc184)
    cir.br ^bb1 loc(#loc185)
  ^bb1:  // pred: ^bb0
    %7 = cir.const #cir.int<6> : !s32i loc(#loc39)
    cir.br ^bb2 loc(#loc37)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %7 : !s32i, ^bb38 [
      6: ^bb4
    ] loc(#loc37)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc40)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc186)
  ^bb5:  // pred: ^bb4
    %8 = cir.const #cir.int<1> : !s32i loc(#loc29)
    %9 = cir.unary(minus, %8) nsw : !s32i, !s32i loc(#loc29)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc181)
    cir.br ^bb6 loc(#loc187)
  ^bb6:  // pred: ^bb5
    cir.br ^bb8 loc(#loc187)
  ^bb7:  // pred: ^bb30
    %10 = cir.const #cir.int<0> : !s32i loc(#loc45)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc45)
    cir.brcond %11 ^bb8, ^bb31 loc(#loc45)
  ^bb8:  // 2 preds: ^bb6, ^bb7
    cir.br ^bb9 loc(#loc188)
  ^bb9:  // pred: ^bb8
    %12 = cir.const #cir.int<2> : !s32i loc(#loc48)
    %13 = cir.const #cir.int<1> : !s32i loc(#loc49)
    %14 = cir.const #cir.int<6> : !s32i loc(#loc50)
    %15 = cir.call @socket(%12, %13, %14) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc51)
    cir.store %15, %2 : !s32i, !cir.ptr<!s32i> loc(#loc189)
    cir.br ^bb10 loc(#loc190)
  ^bb10:  // pred: ^bb9
    %16 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc56)
    %17 = cir.const #cir.int<1> : !s32i loc(#loc57)
    %18 = cir.unary(minus, %17) nsw : !s32i, !s32i loc(#loc57)
    %19 = cir.cmp(eq, %16, %18) : !s32i, !cir.bool loc(#loc191)
    cir.brcond %19 ^bb11, ^bb12 loc(#loc192)
  ^bb11:  // pred: ^bb10
    cir.br ^bb31 loc(#loc59)
  ^bb12:  // pred: ^bb10
    cir.br ^bb13 loc(#loc55)
  ^bb13:  // pred: ^bb12
    %20 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc193)
    %21 = cir.const #cir.int<0> : !s32i loc(#loc62)
    %22 = cir.const #cir.int<16> : !u64i loc(#loc194)
    cir.libc.memset %22 bytes from %20 set to %21 : !cir.ptr<!void>, !s32i, !u64i loc(#loc195)
    %23 = cir.const #cir.int<2> : !s32i loc(#loc67)
    %24 = cir.cast(integral, %23 : !s32i), !u16i loc(#loc67)
    %25 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc68)
    cir.store %24, %25 : !u16i, !cir.ptr<!u16i> loc(#loc196)
    %26 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %27 = cir.cast(array_to_ptrdecay, %26 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %28 = cir.call @inet_addr(%27) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc70)
    %29 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc71)
    %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc72)
    cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc197)
    %31 = cir.const #cir.int<27015> : !s32i loc(#loc75)
    %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc75)
    %33 = cir.call @htons(%32) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc76)
    %34 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
    cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc198)
    cir.br ^bb14 loc(#loc199)
  ^bb14:  // pred: ^bb13
    %35 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc82)
    %36 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc200)
    %37 = cir.const #cir.int<16> : !u64i loc(#loc201)
    %38 = cir.cast(integral, %37 : !u64i), !u32i loc(#loc201)
    %39 = cir.call @connect(%35, %36, %38) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc87)
    %40 = cir.const #cir.int<1> : !s32i loc(#loc88)
    %41 = cir.unary(minus, %40) nsw : !s32i, !s32i loc(#loc88)
    %42 = cir.cmp(eq, %39, %41) : !s32i, !cir.bool loc(#loc202)
    cir.brcond %42 ^bb15, ^bb16 loc(#loc203)
  ^bb15:  // pred: ^bb14
    cir.br ^bb31 loc(#loc90)
  ^bb16:  // pred: ^bb14
    cir.br ^bb17 loc(#loc81)
  ^bb17:  // pred: ^bb16
    %43 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc91)
    %44 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc92)
    %45 = cir.cast(bitcast, %44 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc92)
    %46 = cir.const #cir.int<3> : !s32i loc(#loc93)
    %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc93)
    %48 = cir.const #cir.int<4> : !u64i loc(#loc93)
    %49 = cir.binop(mul, %47, %48) : !u64i loc(#loc93)
    %50 = cir.const #cir.int<2> : !s32i loc(#loc93)
    %51 = cir.cast(integral, %50 : !s32i), !u64i loc(#loc93)
    %52 = cir.binop(add, %49, %51) : !u64i loc(#loc93)
    %53 = cir.const #cir.int<1> : !s32i loc(#loc94)
    %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc94)
    %55 = cir.binop(sub, %52, %54) : !u64i loc(#loc204)
    %56 = cir.const #cir.int<0> : !s32i loc(#loc95)
    %57 = cir.call @recv(%43, %45, %55, %56) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc96)
    %58 = cir.cast(integral, %57 : !s64i), !s32i loc(#loc96)
    cir.store %58, %0 : !s32i, !cir.ptr<!s32i> loc(#loc205)
    cir.br ^bb18 loc(#loc206)
  ^bb18:  // pred: ^bb17
    %59 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc101)
    %60 = cir.const #cir.int<1> : !s32i loc(#loc102)
    %61 = cir.unary(minus, %60) nsw : !s32i, !s32i loc(#loc102)
    %62 = cir.cmp(eq, %59, %61) : !s32i, !cir.bool loc(#loc207)
    cir.brcond %62 ^bb19, ^bb20 loc(#loc103)
  ^bb19:  // pred: ^bb18
    %63 = cir.const #true loc(#loc103)
    cir.br ^bb25(%63 : !cir.bool) loc(#loc103)
  ^bb20:  // pred: ^bb18
    %64 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc104)
    %65 = cir.const #cir.int<0> : !s32i loc(#loc105)
    %66 = cir.cmp(eq, %64, %65) : !s32i, !cir.bool loc(#loc208)
    cir.brcond %66 ^bb21, ^bb22 loc(#loc103)
  ^bb21:  // pred: ^bb20
    %67 = cir.const #true loc(#loc103)
    cir.br ^bb23(%67 : !cir.bool) loc(#loc103)
  ^bb22:  // pred: ^bb20
    %68 = cir.const #false loc(#loc103)
    cir.br ^bb23(%68 : !cir.bool) loc(#loc103)
  ^bb23(%69: !cir.bool loc("CWE617_Reachable_Assertion__connect_socket_15.c":90:44)):  // 2 preds: ^bb21, ^bb22
    cir.br ^bb24 loc(#loc103)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25(%69 : !cir.bool) loc(#loc103)
  ^bb25(%70: !cir.bool loc("CWE617_Reachable_Assertion__connect_socket_15.c":90:44)):  // 2 preds: ^bb19, ^bb24
    cir.br ^bb26 loc(#loc103)
  ^bb26:  // pred: ^bb25
    cir.brcond %70 ^bb27, ^bb28 loc(#loc209)
  ^bb27:  // pred: ^bb26
    cir.br ^bb31 loc(#loc107)
  ^bb28:  // pred: ^bb26
    cir.br ^bb29 loc(#loc100)
  ^bb29:  // pred: ^bb28
    %71 = cir.const #cir.int<0> : !s32i loc(#loc108)
    %72 = cir.cast(integral, %71 : !s32i), !s8i loc(#loc108)
    %73 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc109)
    %74 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc110)
    %75 = cir.ptr_stride(%74 : !cir.ptr<!s8i>, %73 : !s32i), !cir.ptr<!s8i> loc(#loc110)
    cir.store %72, %75 : !s8i, !cir.ptr<!s8i> loc(#loc210)
    %76 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc111)
    %77 = cir.call @atoi(%76) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc112)
    cir.store %77, %4 : !s32i, !cir.ptr<!s32i> loc(#loc211)
    cir.br ^bb30 loc(#loc47)
  ^bb30:  // pred: ^bb29
    cir.br ^bb7 loc(#loc44)
  ^bb31:  // 4 preds: ^bb7, ^bb11, ^bb15, ^bb27
    cir.br ^bb32 loc(#loc44)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc212)
  ^bb33:  // pred: ^bb32
    %78 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc117)
    %79 = cir.const #cir.int<1> : !s32i loc(#loc118)
    %80 = cir.unary(minus, %79) nsw : !s32i, !s32i loc(#loc118)
    %81 = cir.cmp(ne, %78, %80) : !s32i, !cir.bool loc(#loc213)
    cir.brcond %81 ^bb34, ^bb35 loc(#loc214)
  ^bb34:  // pred: ^bb33
    %82 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc120)
    %83 = cir.call @close(%82) : (!s32i) -> !s32i loc(#loc121)
    cir.br ^bb35 loc(#loc116)
  ^bb35:  // 2 preds: ^bb33, ^bb34
    cir.br ^bb36 loc(#loc116)
  ^bb36:  // pred: ^bb35
    cir.br ^bb37 loc(#loc42)
  ^bb37:  // pred: ^bb36
    cir.br ^bb39 loc(#loc122)
  ^bb38:  // pred: ^bb2
    %84 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc18)
    %85 = cir.cast(array_to_ptrdecay, %84 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc18)
    cir.call @printLine(%85) : (!cir.ptr<!s8i>) -> () loc(#loc123)
    cir.br ^bb39 loc(#loc124)
  ^bb39:  // 2 preds: ^bb37, ^bb38
    cir.br ^bb40 loc(#loc38)
  ^bb40:  // pred: ^bb39
    cir.br ^bb41 loc(#loc21)
  ^bb41:  // pred: ^bb40
    cir.br ^bb42 loc(#loc21)
  ^bb42:  // pred: ^bb41
    %86 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc21)
    %87 = cir.const #cir.int<5> : !s32i loc(#loc21)
    %88 = cir.cmp(gt, %86, %87) : !s32i, !cir.bool loc(#loc21)
    cir.brcond %88 ^bb43, ^bb44 loc(#loc21)
  ^bb43:  // pred: ^bb42
    cir.br ^bb45 loc(#loc21)
  ^bb44:  // pred: ^bb42
    %89 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc21)
    %90 = cir.cast(array_to_ptrdecay, %89 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc21)
    %91 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc21)
    %92 = cir.cast(array_to_ptrdecay, %91 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc21)
    %93 = cir.const #cir.int<118> : !s32i loc(#loc21)
    %94 = cir.cast(integral, %93 : !s32i), !u32i loc(#loc21)
    %95 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 57>> loc(#loc21)
    %96 = cir.cast(array_to_ptrdecay, %95 : !cir.ptr<!cir.array<!s8i x 57>>), !cir.ptr<!s8i> loc(#loc21)
    cir.call @__assert_fail(%90, %92, %94, %96) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>) -> () extra(#fn_attr) loc(#loc21)
    cir.br ^bb45 loc(#loc21)
  ^bb45:  // 2 preds: ^bb43, ^bb44
    cir.br ^bb46 loc(#loc21)
  ^bb46:  // pred: ^bb45
    cir.br ^bb47 loc(#loc21)
  ^bb47:  // pred: ^bb46
    cir.return loc(#loc23)
  } loc(#loc178)
  cir.func no_proto @CWE617_Reachable_Assertion__connect_socket_15_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<()>> loc(#loc216)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc127)
    %1 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<()>> loc(#loc217)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc129)
    cir.return loc(#loc126)
  } loc(#loc215)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"void goodG2B1()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc131)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc219)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc136)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc137)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc220)
    cir.br ^bb1 loc(#loc221)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<5> : !s32i loc(#loc141)
    cir.br ^bb2 loc(#loc139)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc139)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc142)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc143)
    %5 = cir.cast(array_to_ptrdecay, %4 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc143)
    cir.call @printLine(%5) : (!cir.ptr<!s8i>) -> () loc(#loc144)
    cir.br ^bb6 loc(#loc145)
  ^bb5:  // pred: ^bb2
    %6 = cir.const #cir.int<5> : !s32i loc(#loc146)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc147)
    %8 = cir.binop(add, %6, %7) nsw : !s32i loc(#loc146)
    cir.store %8, %0 : !s32i, !cir.ptr<!s32i> loc(#loc222)
    cir.br ^bb6 loc(#loc149)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc140)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc131)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc131)
  ^bb9:  // pred: ^bb8
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc131)
    %10 = cir.const #cir.int<5> : !s32i loc(#loc131)
    %11 = cir.cmp(gt, %9, %10) : !s32i, !cir.bool loc(#loc131)
    cir.brcond %11 ^bb10, ^bb11 loc(#loc131)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12 loc(#loc131)
  ^bb11:  // pred: ^bb9
    %12 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc131)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc131)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc131)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc131)
    %16 = cir.const #cir.int<143> : !s32i loc(#loc131)
    %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc131)
    %18 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc131)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc131)
    cir.call @__assert_fail(%13, %15, %17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>) -> () extra(#fn_attr) loc(#loc131)
    cir.br ^bb12 loc(#loc131)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc131)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc131)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc133)
  } loc(#loc218)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"void goodG2B2()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc150)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc224)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc155)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc156)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc225)
    cir.br ^bb1 loc(#loc226)
  ^bb1:  // pred: ^bb0
    %3 = cir.const #cir.int<6> : !s32i loc(#loc160)
    cir.br ^bb2 loc(#loc158)
  ^bb2:  // pred: ^bb1
    cir.switch.flat %3 : !s32i, ^bb5 [
      6: ^bb4
    ] loc(#loc158)
  ^bb3:  // no predecessors
    cir.br ^bb4 loc(#loc161)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    %4 = cir.const #cir.int<5> : !s32i loc(#loc162)
    %5 = cir.const #cir.int<1> : !s32i loc(#loc163)
    %6 = cir.binop(add, %4, %5) nsw : !s32i loc(#loc162)
    cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc227)
    cir.br ^bb6 loc(#loc165)
  ^bb5:  // pred: ^bb2
    %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc166)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc166)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc167)
    cir.br ^bb6 loc(#loc168)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    cir.br ^bb7 loc(#loc159)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc150)
  ^bb8:  // pred: ^bb7
    cir.br ^bb9 loc(#loc150)
  ^bb9:  // pred: ^bb8
    %9 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc150)
    %10 = cir.const #cir.int<5> : !s32i loc(#loc150)
    %11 = cir.cmp(gt, %9, %10) : !s32i, !cir.bool loc(#loc150)
    cir.brcond %11 ^bb10, ^bb11 loc(#loc150)
  ^bb10:  // pred: ^bb9
    cir.br ^bb12 loc(#loc150)
  ^bb11:  // pred: ^bb9
    %12 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 20>> loc(#loc150)
    %13 = cir.cast(array_to_ptrdecay, %12 : !cir.ptr<!cir.array<!s8i x 20>>), !cir.ptr<!s8i> loc(#loc150)
    %14 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 48>> loc(#loc150)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 48>>), !cir.ptr<!s8i> loc(#loc150)
    %16 = cir.const #cir.int<164> : !s32i loc(#loc150)
    %17 = cir.cast(integral, %16 : !s32i), !u32i loc(#loc150)
    %18 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc150)
    %19 = cir.cast(array_to_ptrdecay, %18 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc150)
    cir.call @__assert_fail(%13, %15, %17, %19) : (!cir.ptr<!s8i>, !cir.ptr<!s8i>, !u32i, !cir.ptr<!s8i>) -> () extra(#fn_attr) loc(#loc150)
    cir.br ^bb12 loc(#loc150)
  ^bb12:  // 2 preds: ^bb10, ^bb11
    cir.br ^bb13 loc(#loc150)
  ^bb13:  // pred: ^bb12
    cir.br ^bb14 loc(#loc150)
  ^bb14:  // pred: ^bb13
    cir.return loc(#loc152)
  } loc(#loc223)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE617_Reachable_Assertion/CWE617_Reachable_Assertion__connect_socket_15.c":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":81:49)
#loc6 = loc("/usr/include/netinet/in.h":402:1)
#loc7 = loc("/usr/include/netinet/in.h":403:40)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:1)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":126:75)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc17 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc18 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":114:19)
#loc19 = loc("/usr/include/assert.h":69:1)
#loc20 = loc("/usr/include/assert.h":71:43)
#loc21 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":118:5)
#loc22 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":47:1)
#loc23 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":119:1)
#loc24 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":60:9)
#loc25 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":60:13)
#loc26 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":61:9)
#loc27 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":61:28)
#loc28 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":62:9)
#loc29 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":62:32)
#loc30 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":63:9)
#loc31 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":63:41)
#loc32 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":49:5)
#loc33 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":49:9)
#loc34 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":51:13)
#loc35 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":51:12)
#loc36 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":51:5)
#loc37 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":52:5)
#loc38 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":116:5)
#loc39 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":52:12)
#loc40 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":54:5)
#loc41 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":55:5)
#loc42 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":110:5)
#loc43 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":64:9)
#loc44 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":99:17)
#loc45 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":99:16)
#loc46 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":65:9)
#loc47 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":98:9)
#loc48 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":74:36)
#loc49 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":74:45)
#loc50 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":74:58)
#loc51 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":74:29)
#loc52 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":74:13)
#loc53 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":74:69)
#loc54 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":75:13)
#loc55 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":78:13)
#loc56 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":75:17)
#loc57 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":75:34)
#loc58 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":76:13)
#loc59 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":77:17)
#loc60 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":79:20)
#loc61 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":79:21)
#loc62 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":79:30)
#loc63 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":79:33)
#loc64 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":79:47)
#loc65 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":79:13)
#loc66 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":79:48)
#loc67 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":80:34)
#loc68 = loc("/usr/include/netinet/in.h":249:5)
#loc69 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":80:13)
#loc70 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":81:39)
#loc71 = loc("/usr/include/netinet/in.h":251:20)
#loc72 = loc("/usr/include/netinet/in.h":33:15)
#loc73 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":81:13)
#loc74 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":81:59)
#loc75 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":82:38)
#loc76 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":82:32)
#loc77 = loc("/usr/include/netinet/in.h":250:15)
#loc78 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":82:13)
#loc79 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":82:46)
#loc80 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":83:13)
#loc81 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":86:13)
#loc82 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":83:25)
#loc83 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":83:58)
#loc84 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":83:59)
#loc85 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":83:68)
#loc86 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":83:82)
#loc87 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":83:17)
#loc88 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":83:88)
#loc89 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":84:13)
#loc90 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":85:17)
#loc91 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":89:31)
#loc92 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":89:46)
#loc93 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":89:59)
#loc94 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":89:77)
#loc95 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":89:80)
#loc96 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":89:26)
#loc97 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":89:13)
#loc98 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":89:81)
#loc99 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":90:13)
#loc100 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":93:13)
#loc101 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":90:17)
#loc102 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":90:31)
#loc104 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":90:47)
#loc105 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":90:61)
#loc106 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":91:13)
#loc107 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":92:17)
#loc108 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":95:39)
#loc109 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":95:25)
#loc110 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":95:13)
#loc111 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":97:25)
#loc112 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":97:20)
#loc113 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":97:13)
#loc114 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":97:36)
#loc115 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":100:9)
#loc116 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":103:9)
#loc117 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":100:13)
#loc118 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":100:30)
#loc119 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":101:9)
#loc120 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":102:26)
#loc121 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":102:13)
#loc122 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":111:5)
#loc123 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":114:9)
#loc124 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":115:9)
#loc125 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":167:1)
#loc126 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":171:1)
#loc127 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":169:5)
#loc128 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":169:14)
#loc129 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":170:5)
#loc130 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":170:14)
#loc131 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":143:5)
#loc132 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":126:1)
#loc133 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":144:1)
#loc134 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":128:5)
#loc135 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":128:9)
#loc136 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":130:13)
#loc137 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":130:12)
#loc138 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":130:5)
#loc139 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":131:5)
#loc140 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":141:5)
#loc141 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":131:12)
#loc142 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":133:5)
#loc143 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":135:19)
#loc144 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":135:9)
#loc145 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":136:9)
#loc146 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":139:16)
#loc147 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":139:29)
#loc148 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":139:9)
#loc149 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":140:9)
#loc150 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":164:5)
#loc151 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":147:1)
#loc152 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":165:1)
#loc153 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":149:5)
#loc154 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":149:9)
#loc155 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":151:13)
#loc156 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":151:12)
#loc157 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":151:5)
#loc158 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":152:5)
#loc159 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":162:5)
#loc160 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":152:12)
#loc161 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":154:5)
#loc162 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":156:16)
#loc163 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":156:29)
#loc164 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":156:9)
#loc165 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":157:9)
#loc166 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":160:19)
#loc167 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":160:9)
#loc168 = loc("CWE617_Reachable_Assertion__connect_socket_15.c":161:9)
#loc169 = loc(fused[#loc1, #loc2])
#loc170 = loc(fused[#loc3, #loc4])
#loc171 = loc(fused[#loc6, #loc7])
#loc172 = loc(fused[#loc8, #loc9])
#loc173 = loc(fused[#loc10, #loc11])
#loc174 = loc(fused[#loc12, #loc13])
#loc175 = loc(fused[#loc14, #loc15])
#loc176 = loc(fused[#loc16, #loc17])
#loc177 = loc(fused[#loc19, #loc20])
#loc178 = loc(fused[#loc22, #loc23])
#loc179 = loc(fused[#loc24, #loc25])
#loc180 = loc(fused[#loc26, #loc27])
#loc181 = loc(fused[#loc28, #loc29])
#loc182 = loc(fused[#loc30, #loc31])
#loc183 = loc(fused[#loc32, #loc33])
#loc184 = loc(fused[#loc36, #loc34])
#loc185 = loc(fused[#loc37, #loc38])
#loc186 = loc(fused[#loc41, #loc42])
#loc187 = loc(fused[#loc43, #loc44])
#loc188 = loc(fused[#loc46, #loc47])
#loc189 = loc(fused[#loc52, #loc53])
#loc190 = loc(fused[#loc54, #loc55])
#loc191 = loc(fused[#loc56, #loc57])
#loc192 = loc(fused[#loc58, #loc55])
#loc193 = loc(fused[#loc60, #loc61])
#loc194 = loc(fused[#loc63, #loc64])
#loc195 = loc(fused[#loc65, #loc66])
#loc196 = loc(fused[#loc69, #loc67])
#loc197 = loc(fused[#loc73, #loc74])
#loc198 = loc(fused[#loc78, #loc79])
#loc199 = loc(fused[#loc80, #loc81])
#loc200 = loc(fused[#loc83, #loc84])
#loc201 = loc(fused[#loc85, #loc86])
#loc202 = loc(fused[#loc87, #loc88])
#loc203 = loc(fused[#loc89, #loc81])
#loc204 = loc(fused[#loc93, #loc94])
#loc205 = loc(fused[#loc97, #loc98])
#loc206 = loc(fused[#loc99, #loc100])
#loc207 = loc(fused[#loc101, #loc102])
#loc208 = loc(fused[#loc104, #loc105])
#loc209 = loc(fused[#loc106, #loc100])
#loc210 = loc(fused[#loc110, #loc108])
#loc211 = loc(fused[#loc113, #loc114])
#loc212 = loc(fused[#loc115, #loc116])
#loc213 = loc(fused[#loc117, #loc118])
#loc214 = loc(fused[#loc119, #loc116])
#loc215 = loc(fused[#loc125, #loc126])
#loc216 = loc(fused[#loc127, #loc128])
#loc217 = loc(fused[#loc129, #loc130])
#loc218 = loc(fused[#loc132, #loc133])
#loc219 = loc(fused[#loc134, #loc135])
#loc220 = loc(fused[#loc138, #loc136])
#loc221 = loc(fused[#loc139, #loc140])
#loc222 = loc(fused[#loc148, #loc147])
#loc223 = loc(fused[#loc151, #loc152])
#loc224 = loc(fused[#loc153, #loc154])
#loc225 = loc(fused[#loc157, #loc155])
#loc226 = loc(fused[#loc158, #loc159])
#loc227 = loc(fused[#loc164, #loc163])
