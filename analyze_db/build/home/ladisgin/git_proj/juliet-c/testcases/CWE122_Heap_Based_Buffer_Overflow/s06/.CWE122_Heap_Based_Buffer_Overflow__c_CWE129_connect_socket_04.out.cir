!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone})>
#loc110 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":92:48)
#loc209 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":452:10)
#loc210 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":452:14)
#loc211 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":452:20)
#loc212 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":452:32)
#loc309 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":192:48)
#loc367 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":231:27)
#loc475 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":292:48)
#loc530 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":326:27)
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.struct<struct "in_addr" {!u32i} #cir.record.decl.ast>
#loc802 = loc(fused[#loc209, #loc210])
#loc803 = loc(fused[#loc211, #loc212])
!ty_sockaddr = !cir.struct<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.struct<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", dlti.dl_spec = #dlti.dl_spec<f80 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc719)
  cir.func private @inet_addr(!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc720)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"127.0.0.1\00" : !cir.array<!s8i x 10>> : !cir.array<!s8i x 10> {alignment = 1 : i64} loc(#loc5)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc721)
  cir.func private @connect(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc722)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc723)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc724)
  cir.func private @close(!s32i) -> !s32i loc(#loc725)
  cir.func private @malloc(!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc726)
  cir.func private @exit(!s32i) extra(#fn_attr) loc(#loc727)
  cir.func private @printIntLine(!s32i) loc(#loc728)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc729)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"ERROR: Array index is negative.\00" : !cir.array<!s8i x 32>> : !cir.array<!s8i x 32> {alignment = 1 : i64} loc(#loc24)
  cir.func private @free(!cir.ptr<!void>) extra(#fn_attr) loc(#loc730)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04_bad() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc732)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc733)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc734)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc735)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc736)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc737)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc738)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc43)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc44)
    cir.store %8, %6 : !s32i, !cir.ptr<!s32i> loc(#loc739)
    cir.br ^bb1 loc(#loc740)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.int<1> : !s32i loc(#loc48)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc48)
    cir.brcond %10 ^bb2, ^bb34 loc(#loc741)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc742)
  ^bb3:  // pred: ^bb2
    %11 = cir.const #cir.int<1> : !s32i loc(#loc34)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc34)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc734)
    cir.br ^bb4 loc(#loc743)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc743)
  ^bb5:  // pred: ^bb26
    %13 = cir.const #cir.int<0> : !s32i loc(#loc54)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc54)
    cir.brcond %14 ^bb6, ^bb27 loc(#loc54)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %15 = cir.const #cir.int<2> : !s32i loc(#loc55)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc56)
    %17 = cir.const #cir.int<6> : !s32i loc(#loc57)
    %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc58)
    cir.store %18, %2 : !s32i, !cir.ptr<!s32i> loc(#loc744)
    cir.br ^bb7 loc(#loc745)
  ^bb7:  // pred: ^bb6
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc63)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc64)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc64)
    %22 = cir.cmp(eq, %19, %21) : !s32i, !cir.bool loc(#loc746)
    cir.brcond %22 ^bb8, ^bb9 loc(#loc747)
  ^bb8:  // pred: ^bb7
    cir.br ^bb27 loc(#loc66)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc62)
  ^bb10:  // pred: ^bb9
    %23 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc748)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc69)
    %25 = cir.const #cir.int<16> : !u64i loc(#loc749)
    cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc750)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc74)
    %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc74)
    %28 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
    cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc751)
    %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc5)
    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc5)
    %31 = cir.call @inet_addr(%30) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc77)
    %32 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc78)
    %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc79)
    cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc752)
    %34 = cir.const #cir.int<27015> : !s32i loc(#loc82)
    %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc82)
    %36 = cir.call @htons(%35) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc83)
    %37 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc84)
    cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc753)
    cir.br ^bb11 loc(#loc754)
  ^bb11:  // pred: ^bb10
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc89)
    %39 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc755)
    %40 = cir.const #cir.int<16> : !u64i loc(#loc756)
    %41 = cir.cast(integral, %40 : !u64i), !u32i loc(#loc756)
    %42 = cir.call @connect(%38, %39, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc94)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc95)
    %44 = cir.unary(minus, %43) : !s32i, !s32i loc(#loc95)
    %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc757)
    cir.brcond %45 ^bb12, ^bb13 loc(#loc758)
  ^bb12:  // pred: ^bb11
    cir.br ^bb27 loc(#loc97)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc88)
  ^bb14:  // pred: ^bb13
    %46 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc98)
    %47 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc99)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc99)
    %49 = cir.const #cir.int<3> : !s32i loc(#loc100)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc100)
    %51 = cir.const #cir.int<4> : !u64i loc(#loc100)
    %52 = cir.binop(mul, %50, %51) : !u64i loc(#loc100)
    %53 = cir.const #cir.int<2> : !s32i loc(#loc100)
    %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc100)
    %55 = cir.binop(add, %52, %54) : !u64i loc(#loc100)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc101)
    %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc101)
    %58 = cir.binop(sub, %55, %57) : !u64i loc(#loc759)
    %59 = cir.const #cir.int<0> : !s32i loc(#loc102)
    %60 = cir.call @recv(%46, %48, %58, %59) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc103)
    %61 = cir.cast(integral, %60 : !s64i), !s32i loc(#loc103)
    cir.store %61, %0 : !s32i, !cir.ptr<!s32i> loc(#loc760)
    cir.br ^bb15 loc(#loc761)
  ^bb15:  // pred: ^bb14
    %62 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc108)
    %63 = cir.const #cir.int<1> : !s32i loc(#loc109)
    %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc109)
    %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc762)
    cir.brcond %65 ^bb16, ^bb17 loc(#loc110)
  ^bb16:  // pred: ^bb15
    %66 = cir.const #true loc(#loc110)
    cir.br ^bb22(%66 : !cir.bool) loc(#loc110)
  ^bb17:  // pred: ^bb15
    %67 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc111)
    %68 = cir.const #cir.int<0> : !s32i loc(#loc112)
    %69 = cir.cmp(eq, %67, %68) : !s32i, !cir.bool loc(#loc763)
    cir.brcond %69 ^bb18, ^bb19 loc(#loc110)
  ^bb18:  // pred: ^bb17
    %70 = cir.const #true loc(#loc110)
    cir.br ^bb20(%70 : !cir.bool) loc(#loc110)
  ^bb19:  // pred: ^bb17
    %71 = cir.const #false loc(#loc110)
    cir.br ^bb20(%71 : !cir.bool) loc(#loc110)
  ^bb20(%72: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":92:48)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc110)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22(%72 : !cir.bool) loc(#loc110)
  ^bb22(%73: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":92:48)):  // 2 preds: ^bb16, ^bb21
    cir.br ^bb23 loc(#loc110)
  ^bb23:  // pred: ^bb22
    cir.brcond %73 ^bb24, ^bb25 loc(#loc764)
  ^bb24:  // pred: ^bb23
    cir.br ^bb27 loc(#loc114)
  ^bb25:  // pred: ^bb23
    cir.br ^bb26 loc(#loc107)
  ^bb26:  // pred: ^bb25
    %74 = cir.const #cir.int<0> : !s32i loc(#loc115)
    %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc115)
    %76 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc116)
    %77 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc117)
    %78 = cir.ptr_stride(%77 : !cir.ptr<!s8i>, %76 : !s32i), !cir.ptr<!s8i> loc(#loc117)
    cir.store %75, %78 : !s8i, !cir.ptr<!s8i> loc(#loc765)
    %79 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc118)
    %80 = cir.call @atoi(%79) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc119)
    cir.store %80, %6 : !s32i, !cir.ptr<!s32i> loc(#loc766)
    cir.br ^bb5 loc(#loc53)
  ^bb27:  // 4 preds: ^bb5, ^bb8, ^bb12, ^bb24
    cir.br ^bb28 loc(#loc53)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc767)
  ^bb29:  // pred: ^bb28
    %81 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc124)
    %82 = cir.const #cir.int<1> : !s32i loc(#loc125)
    %83 = cir.unary(minus, %82) : !s32i, !s32i loc(#loc125)
    %84 = cir.cmp(ne, %81, %83) : !s32i, !cir.bool loc(#loc768)
    cir.brcond %84 ^bb30, ^bb31 loc(#loc769)
  ^bb30:  // pred: ^bb29
    %85 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc127)
    %86 = cir.call @close(%85) : (!s32i) -> !s32i loc(#loc128)
    cir.br ^bb31 loc(#loc123)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc123)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc51)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc47)
  ^bb34:  // 2 preds: ^bb1, ^bb33
    cir.br ^bb35 loc(#loc47)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc770)
  ^bb36:  // pred: ^bb35
    %87 = cir.const #cir.int<1> : !s32i loc(#loc131)
    %88 = cir.cast(int_to_bool, %87 : !s32i), !cir.bool loc(#loc131)
    cir.brcond %88 ^bb37, ^bb65 loc(#loc771)
  ^bb37:  // pred: ^bb36
    cir.br ^bb38 loc(#loc772)
  ^bb38:  // pred: ^bb37
    %89 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc135)
    %90 = cir.const #cir.int<10> : !s32i loc(#loc136)
    %91 = cir.cast(integral, %90 : !s32i), !u64i loc(#loc136)
    %92 = cir.const #cir.int<4> : !u64i loc(#loc773)
    %93 = cir.binop(mul, %91, %92) : !u64i loc(#loc774)
    %94 = cir.call @malloc(%93) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc135)
    %95 = cir.cast(bitcast, %94 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc775)
    cir.store %95, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc737)
    cir.br ^bb39 loc(#loc776)
  ^bb39:  // pred: ^bb38
    %96 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc141)
    %97 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc142)
    %98 = cir.cast(bitcast, %97 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc142)
    %99 = cir.cmp(eq, %96, %98) : !cir.ptr<!s32i>, !cir.bool loc(#loc777)
    cir.brcond %99 ^bb40, ^bb41 loc(#loc778)
  ^bb40:  // pred: ^bb39
    %100 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc144)
    %101 = cir.const #cir.int<1> : !s32i loc(#loc145)
    %102 = cir.unary(minus, %101) : !s32i, !s32i loc(#loc146)
    cir.call @exit(%102) : (!s32i) -> () extra(#fn_attr) loc(#loc144)
    cir.br ^bb41 loc(#loc140)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc140)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc779)
  ^bb43:  // pred: ^bb42
    %103 = cir.const #cir.int<0> : !s32i loc(#loc149)
    cir.store %103, %4 : !s32i, !cir.ptr<!s32i> loc(#loc780)
    cir.br ^bb44 loc(#loc779)
  ^bb44:  // 2 preds: ^bb43, ^bb48
    %104 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc151)
    %105 = cir.const #cir.int<10> : !s32i loc(#loc152)
    %106 = cir.cmp(lt, %104, %105) : !s32i, !cir.bool loc(#loc781)
    cir.brcond %106 ^bb45, ^bb49 loc(#loc153)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc782)
  ^bb46:  // pred: ^bb45
    %107 = cir.const #cir.int<0> : !s32i loc(#loc155)
    %108 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc156)
    %109 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc157)
    %110 = cir.ptr_stride(%108 : !cir.ptr<!s32i>, %109 : !s32i), !cir.ptr<!s32i> loc(#loc158)
    cir.store %107, %110 : !s32i, !cir.ptr<!s32i> loc(#loc783)
    cir.br ^bb47 loc(#loc148)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc148)
  ^bb48:  // pred: ^bb47
    %111 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc159)
    %112 = cir.unary(inc, %111) : !s32i, !s32i loc(#loc160)
    cir.store %112, %4 : !s32i, !cir.ptr<!s32i> loc(#loc784)
    cir.br ^bb44 loc(#loc779)
  ^bb49:  // pred: ^bb44
    cir.br ^bb50 loc(#loc148)
  ^bb50:  // pred: ^bb49
    cir.br ^bb51 loc(#loc785)
  ^bb51:  // pred: ^bb50
    %113 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc163)
    %114 = cir.const #cir.int<0> : !s32i loc(#loc164)
    %115 = cir.cmp(ge, %113, %114) : !s32i, !cir.bool loc(#loc786)
    cir.brcond %115 ^bb52, ^bb61 loc(#loc787)
  ^bb52:  // pred: ^bb51
    %116 = cir.const #cir.int<1> : !s32i loc(#loc168)
    %117 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc169)
    %118 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc170)
    %119 = cir.ptr_stride(%117 : !cir.ptr<!s32i>, %118 : !s32i), !cir.ptr<!s32i> loc(#loc171)
    cir.store %116, %119 : !s32i, !cir.ptr<!s32i> loc(#loc788)
    cir.br ^bb53 loc(#loc789)
  ^bb53:  // pred: ^bb52
    %120 = cir.const #cir.int<0> : !s32i loc(#loc174)
    cir.store %120, %4 : !s32i, !cir.ptr<!s32i> loc(#loc790)
    cir.br ^bb54 loc(#loc789)
  ^bb54:  // 2 preds: ^bb53, ^bb58
    %121 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc176)
    %122 = cir.const #cir.int<10> : !s32i loc(#loc177)
    %123 = cir.cmp(lt, %121, %122) : !s32i, !cir.bool loc(#loc791)
    cir.brcond %123 ^bb55, ^bb59 loc(#loc178)
  ^bb55:  // pred: ^bb54
    cir.br ^bb56 loc(#loc792)
  ^bb56:  // pred: ^bb55
    %124 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc180)
    %125 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc181)
    %126 = cir.ptr_stride(%124 : !cir.ptr<!s32i>, %125 : !s32i), !cir.ptr<!s32i> loc(#loc182)
    %127 = cir.load %126 : !cir.ptr<!s32i>, !s32i loc(#loc180)
    cir.call @printIntLine(%127) : (!s32i) -> () loc(#loc183)
    cir.br ^bb57 loc(#loc173)
  ^bb57:  // pred: ^bb56
    cir.br ^bb58 loc(#loc173)
  ^bb58:  // pred: ^bb57
    %128 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc184)
    %129 = cir.unary(inc, %128) : !s32i, !s32i loc(#loc185)
    cir.store %129, %4 : !s32i, !cir.ptr<!s32i> loc(#loc793)
    cir.br ^bb54 loc(#loc789)
  ^bb59:  // pred: ^bb54
    cir.br ^bb60 loc(#loc173)
  ^bb60:  // pred: ^bb59
    cir.br ^bb62 loc(#loc166)
  ^bb61:  // pred: ^bb51
    %130 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc24)
    %131 = cir.cast(array_to_ptrdecay, %130 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc24)
    cir.call @printLine(%131) : (!cir.ptr<!s8i>) -> () loc(#loc186)
    cir.br ^bb62 loc(#loc162)
  ^bb62:  // 2 preds: ^bb60, ^bb61
    cir.br ^bb63 loc(#loc162)
  ^bb63:  // pred: ^bb62
    %132 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc187)
    %133 = cir.cast(bitcast, %132 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc187)
    cir.call @free(%133) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc188)
    cir.br ^bb64 loc(#loc134)
  ^bb64:  // pred: ^bb63
    cir.br ^bb65 loc(#loc130)
  ^bb65:  // 2 preds: ^bb36, ^bb64
    cir.br ^bb66 loc(#loc130)
  ^bb66:  // pred: ^bb65
    cir.return loc(#loc28)
  } loc(#loc731)
  cir.func no_proto @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04_good() extra(#fn_attr1) {
    %0 = cir.get_global @goodB2G1 : !cir.ptr<!cir.func<!void ()>> loc(#loc795)
    cir.call %0() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc191)
    %1 = cir.get_global @goodB2G2 : !cir.ptr<!cir.func<!void ()>> loc(#loc796)
    cir.call %1() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc193)
    %2 = cir.get_global @goodG2B1 : !cir.ptr<!cir.func<!void ()>> loc(#loc797)
    cir.call %2() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc195)
    %3 = cir.get_global @goodG2B2 : !cir.ptr<!cir.func<!void ()>> loc(#loc798)
    cir.call %3() : (!cir.ptr<!cir.func<!void ()>>) -> () loc(#loc197)
    cir.return loc(#loc190)
  } loc(#loc794)
  cir.func private @srand(!u32i) extra(#fn_attr) loc(#loc799)
  cir.func private @time(!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc800)
  cir.global "private" constant cir_private dsolocal @".str.2" = #cir.const_array<"Calling good()...\00" : !cir.array<!s8i x 18>> : !cir.array<!s8i x 18> {alignment = 1 : i64} loc(#loc203)
  cir.global "private" constant cir_private dsolocal @".str.3" = #cir.const_array<"Finished good()\00" : !cir.array<!s8i x 16>> : !cir.array<!s8i x 16> {alignment = 1 : i64} loc(#loc204)
  cir.global "private" constant cir_private dsolocal @".str.4" = #cir.const_array<"Calling bad()...\00" : !cir.array<!s8i x 17>> : !cir.array<!s8i x 17> {alignment = 1 : i64} loc(#loc205)
  cir.global "private" constant cir_private dsolocal @".str.5" = #cir.const_array<"Finished bad()\00" : !cir.array<!s8i x 15>> : !cir.array<!s8i x 15> {alignment = 1 : i64} loc(#loc206)
  cir.func @main(%arg0: !s32i loc(fused[#loc209, #loc210]), %arg1: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc211, #loc212])) -> !s32i extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["argc", init] {alignment = 4 : i64} loc(#loc802)
    %1 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["argv", init] {alignment = 8 : i64} loc(#loc803)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc208)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc213)
    cir.store %arg1, %1 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc213)
    %3 = cir.const #cir.ptr<null> : !cir.ptr<!s64i> loc(#loc214)
    %4 = cir.call @time(%3) : (!cir.ptr<!s64i>) -> !s64i extra(#fn_attr) loc(#loc215)
    %5 = cir.cast(integral, %4 : !s64i), !u32i loc(#loc215)
    cir.call @srand(%5) : (!u32i) -> () extra(#fn_attr) loc(#loc216)
    %6 = cir.get_global @".str.2" : !cir.ptr<!cir.array<!s8i x 18>> loc(#loc203)
    %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 18>>), !cir.ptr<!s8i> loc(#loc203)
    cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc217)
    %8 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04_good : !cir.ptr<!cir.func<!void ()>> loc(#loc804)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04_good() : () -> () loc(#loc218)
    %9 = cir.get_global @".str.3" : !cir.ptr<!cir.array<!s8i x 16>> loc(#loc204)
    %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 16>>), !cir.ptr<!s8i> loc(#loc204)
    cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc220)
    %11 = cir.get_global @".str.4" : !cir.ptr<!cir.array<!s8i x 17>> loc(#loc205)
    %12 = cir.cast(array_to_ptrdecay, %11 : !cir.ptr<!cir.array<!s8i x 17>>), !cir.ptr<!s8i> loc(#loc205)
    cir.call @printLine(%12) : (!cir.ptr<!s8i>) -> () loc(#loc221)
    %13 = cir.get_global @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04_bad : !cir.ptr<!cir.func<!void ()>> loc(#loc805)
    cir.call @CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04_bad() : () -> () loc(#loc222)
    %14 = cir.get_global @".str.5" : !cir.ptr<!cir.array<!s8i x 15>> loc(#loc206)
    %15 = cir.cast(array_to_ptrdecay, %14 : !cir.ptr<!cir.array<!s8i x 15>>), !cir.ptr<!s8i> loc(#loc206)
    cir.call @printLine(%15) : (!cir.ptr<!s8i>) -> () loc(#loc224)
    %16 = cir.const #cir.int<0> : !s32i loc(#loc225)
    cir.store %16, %2 : !s32i, !cir.ptr<!s32i> loc(#loc806)
    %17 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc806)
    cir.return %17 : !s32i loc(#loc806)
  } loc(#loc801)
  cir.global "private" constant cir_private dsolocal @".str.6" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc227)
  cir.global "private" constant cir_private dsolocal @".str.7" = #cir.const_array<"ERROR: Array index is out-of-bounds\00" : !cir.array<!s8i x 36>> : !cir.array<!s8i x 36> {alignment = 1 : i64} loc(#loc228)
  cir.func no_proto internal private @goodB2G1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc808)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc809)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc810)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc811)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc812)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc813)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc814)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc245)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc246)
    cir.store %8, %6 : !s32i, !cir.ptr<!s32i> loc(#loc815)
    cir.br ^bb1 loc(#loc816)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.int<1> : !s32i loc(#loc250)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc250)
    cir.brcond %10 ^bb2, ^bb34 loc(#loc817)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc818)
  ^bb3:  // pred: ^bb2
    %11 = cir.const #cir.int<1> : !s32i loc(#loc236)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc236)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc810)
    cir.br ^bb4 loc(#loc819)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc819)
  ^bb5:  // pred: ^bb26
    %13 = cir.const #cir.int<0> : !s32i loc(#loc256)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc256)
    cir.brcond %14 ^bb6, ^bb27 loc(#loc256)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %15 = cir.const #cir.int<2> : !s32i loc(#loc257)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc258)
    %17 = cir.const #cir.int<6> : !s32i loc(#loc259)
    %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc260)
    cir.store %18, %2 : !s32i, !cir.ptr<!s32i> loc(#loc820)
    cir.br ^bb7 loc(#loc821)
  ^bb7:  // pred: ^bb6
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc265)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc266)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc266)
    %22 = cir.cmp(eq, %19, %21) : !s32i, !cir.bool loc(#loc822)
    cir.brcond %22 ^bb8, ^bb9 loc(#loc823)
  ^bb8:  // pred: ^bb7
    cir.br ^bb27 loc(#loc268)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc264)
  ^bb10:  // pred: ^bb9
    %23 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc824)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc271)
    %25 = cir.const #cir.int<16> : !u64i loc(#loc825)
    cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc826)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc276)
    %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc276)
    %28 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
    cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc827)
    %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc278)
    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc278)
    %31 = cir.call @inet_addr(%30) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc279)
    %32 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc78)
    %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc79)
    cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc828)
    %34 = cir.const #cir.int<27015> : !s32i loc(#loc282)
    %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc282)
    %36 = cir.call @htons(%35) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc283)
    %37 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc84)
    cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc829)
    cir.br ^bb11 loc(#loc830)
  ^bb11:  // pred: ^bb10
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc288)
    %39 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc831)
    %40 = cir.const #cir.int<16> : !u64i loc(#loc832)
    %41 = cir.cast(integral, %40 : !u64i), !u32i loc(#loc832)
    %42 = cir.call @connect(%38, %39, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc293)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc294)
    %44 = cir.unary(minus, %43) : !s32i, !s32i loc(#loc294)
    %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc833)
    cir.brcond %45 ^bb12, ^bb13 loc(#loc834)
  ^bb12:  // pred: ^bb11
    cir.br ^bb27 loc(#loc296)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc287)
  ^bb14:  // pred: ^bb13
    %46 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc297)
    %47 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc298)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc298)
    %49 = cir.const #cir.int<3> : !s32i loc(#loc299)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc299)
    %51 = cir.const #cir.int<4> : !u64i loc(#loc299)
    %52 = cir.binop(mul, %50, %51) : !u64i loc(#loc299)
    %53 = cir.const #cir.int<2> : !s32i loc(#loc299)
    %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc299)
    %55 = cir.binop(add, %52, %54) : !u64i loc(#loc299)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc300)
    %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc300)
    %58 = cir.binop(sub, %55, %57) : !u64i loc(#loc835)
    %59 = cir.const #cir.int<0> : !s32i loc(#loc301)
    %60 = cir.call @recv(%46, %48, %58, %59) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc302)
    %61 = cir.cast(integral, %60 : !s64i), !s32i loc(#loc302)
    cir.store %61, %0 : !s32i, !cir.ptr<!s32i> loc(#loc836)
    cir.br ^bb15 loc(#loc837)
  ^bb15:  // pred: ^bb14
    %62 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc307)
    %63 = cir.const #cir.int<1> : !s32i loc(#loc308)
    %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc308)
    %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc838)
    cir.brcond %65 ^bb16, ^bb17 loc(#loc309)
  ^bb16:  // pred: ^bb15
    %66 = cir.const #true loc(#loc309)
    cir.br ^bb22(%66 : !cir.bool) loc(#loc309)
  ^bb17:  // pred: ^bb15
    %67 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc310)
    %68 = cir.const #cir.int<0> : !s32i loc(#loc311)
    %69 = cir.cmp(eq, %67, %68) : !s32i, !cir.bool loc(#loc839)
    cir.brcond %69 ^bb18, ^bb19 loc(#loc309)
  ^bb18:  // pred: ^bb17
    %70 = cir.const #true loc(#loc309)
    cir.br ^bb20(%70 : !cir.bool) loc(#loc309)
  ^bb19:  // pred: ^bb17
    %71 = cir.const #false loc(#loc309)
    cir.br ^bb20(%71 : !cir.bool) loc(#loc309)
  ^bb20(%72: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":192:48)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc309)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22(%72 : !cir.bool) loc(#loc309)
  ^bb22(%73: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":192:48)):  // 2 preds: ^bb16, ^bb21
    cir.br ^bb23 loc(#loc309)
  ^bb23:  // pred: ^bb22
    cir.brcond %73 ^bb24, ^bb25 loc(#loc840)
  ^bb24:  // pred: ^bb23
    cir.br ^bb27 loc(#loc313)
  ^bb25:  // pred: ^bb23
    cir.br ^bb26 loc(#loc306)
  ^bb26:  // pred: ^bb25
    %74 = cir.const #cir.int<0> : !s32i loc(#loc314)
    %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc314)
    %76 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc315)
    %77 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc316)
    %78 = cir.ptr_stride(%77 : !cir.ptr<!s8i>, %76 : !s32i), !cir.ptr<!s8i> loc(#loc316)
    cir.store %75, %78 : !s8i, !cir.ptr<!s8i> loc(#loc841)
    %79 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc317)
    %80 = cir.call @atoi(%79) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc318)
    cir.store %80, %6 : !s32i, !cir.ptr<!s32i> loc(#loc842)
    cir.br ^bb5 loc(#loc255)
  ^bb27:  // 4 preds: ^bb5, ^bb8, ^bb12, ^bb24
    cir.br ^bb28 loc(#loc255)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc843)
  ^bb29:  // pred: ^bb28
    %81 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc323)
    %82 = cir.const #cir.int<1> : !s32i loc(#loc324)
    %83 = cir.unary(minus, %82) : !s32i, !s32i loc(#loc324)
    %84 = cir.cmp(ne, %81, %83) : !s32i, !cir.bool loc(#loc844)
    cir.brcond %84 ^bb30, ^bb31 loc(#loc845)
  ^bb30:  // pred: ^bb29
    %85 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc326)
    %86 = cir.call @close(%85) : (!s32i) -> !s32i loc(#loc327)
    cir.br ^bb31 loc(#loc322)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc322)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc253)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc249)
  ^bb34:  // 2 preds: ^bb1, ^bb33
    cir.br ^bb35 loc(#loc249)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc846)
  ^bb36:  // pred: ^bb35
    %87 = cir.const #cir.int<0> : !s32i loc(#loc330)
    %88 = cir.cast(int_to_bool, %87 : !s32i), !cir.bool loc(#loc330)
    cir.brcond %88 ^bb37, ^bb38 loc(#loc847)
  ^bb37:  // pred: ^bb36
    %89 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc227)
    %90 = cir.cast(array_to_ptrdecay, %89 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc227)
    cir.call @printLine(%90) : (!cir.ptr<!s8i>) -> () loc(#loc334)
    cir.br ^bb74 loc(#loc332)
  ^bb38:  // pred: ^bb36
    cir.br ^bb39 loc(#loc848)
  ^bb39:  // pred: ^bb38
    %91 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc337)
    %92 = cir.const #cir.int<10> : !s32i loc(#loc338)
    %93 = cir.cast(integral, %92 : !s32i), !u64i loc(#loc338)
    %94 = cir.const #cir.int<4> : !u64i loc(#loc849)
    %95 = cir.binop(mul, %93, %94) : !u64i loc(#loc850)
    %96 = cir.call @malloc(%95) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc337)
    %97 = cir.cast(bitcast, %96 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc851)
    cir.store %97, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc813)
    cir.br ^bb40 loc(#loc852)
  ^bb40:  // pred: ^bb39
    %98 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc343)
    %99 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc344)
    %100 = cir.cast(bitcast, %99 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc344)
    %101 = cir.cmp(eq, %98, %100) : !cir.ptr<!s32i>, !cir.bool loc(#loc853)
    cir.brcond %101 ^bb41, ^bb42 loc(#loc854)
  ^bb41:  // pred: ^bb40
    %102 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc346)
    %103 = cir.const #cir.int<1> : !s32i loc(#loc347)
    %104 = cir.unary(minus, %103) : !s32i, !s32i loc(#loc348)
    cir.call @exit(%104) : (!s32i) -> () extra(#fn_attr) loc(#loc346)
    cir.br ^bb42 loc(#loc342)
  ^bb42:  // 2 preds: ^bb40, ^bb41
    cir.br ^bb43 loc(#loc342)
  ^bb43:  // pred: ^bb42
    cir.br ^bb44 loc(#loc855)
  ^bb44:  // pred: ^bb43
    %105 = cir.const #cir.int<0> : !s32i loc(#loc351)
    cir.store %105, %4 : !s32i, !cir.ptr<!s32i> loc(#loc856)
    cir.br ^bb45 loc(#loc855)
  ^bb45:  // 2 preds: ^bb44, ^bb49
    %106 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc353)
    %107 = cir.const #cir.int<10> : !s32i loc(#loc354)
    %108 = cir.cmp(lt, %106, %107) : !s32i, !cir.bool loc(#loc857)
    cir.brcond %108 ^bb46, ^bb50 loc(#loc355)
  ^bb46:  // pred: ^bb45
    cir.br ^bb47 loc(#loc858)
  ^bb47:  // pred: ^bb46
    %109 = cir.const #cir.int<0> : !s32i loc(#loc357)
    %110 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc358)
    %111 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc359)
    %112 = cir.ptr_stride(%110 : !cir.ptr<!s32i>, %111 : !s32i), !cir.ptr<!s32i> loc(#loc360)
    cir.store %109, %112 : !s32i, !cir.ptr<!s32i> loc(#loc859)
    cir.br ^bb48 loc(#loc350)
  ^bb48:  // pred: ^bb47
    cir.br ^bb49 loc(#loc350)
  ^bb49:  // pred: ^bb48
    %113 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc361)
    %114 = cir.unary(inc, %113) : !s32i, !s32i loc(#loc362)
    cir.store %114, %4 : !s32i, !cir.ptr<!s32i> loc(#loc860)
    cir.br ^bb45 loc(#loc855)
  ^bb50:  // pred: ^bb45
    cir.br ^bb51 loc(#loc350)
  ^bb51:  // pred: ^bb50
    cir.br ^bb52 loc(#loc861)
  ^bb52:  // pred: ^bb51
    %115 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc365)
    %116 = cir.const #cir.int<0> : !s32i loc(#loc366)
    %117 = cir.cmp(ge, %115, %116) : !s32i, !cir.bool loc(#loc862)
    cir.brcond %117 ^bb53, ^bb58 loc(#loc367)
  ^bb53:  // pred: ^bb52
    %118 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc368)
    %119 = cir.const #cir.int<10> : !s32i loc(#loc369)
    %120 = cir.cmp(lt, %118, %119) : !s32i, !cir.bool loc(#loc863)
    cir.brcond %120 ^bb54, ^bb55 loc(#loc367)
  ^bb54:  // pred: ^bb53
    %121 = cir.const #true loc(#loc367)
    cir.br ^bb56(%121 : !cir.bool) loc(#loc367)
  ^bb55:  // pred: ^bb53
    %122 = cir.const #false loc(#loc367)
    cir.br ^bb56(%122 : !cir.bool) loc(#loc367)
  ^bb56(%123: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":231:27)):  // 2 preds: ^bb54, ^bb55
    cir.br ^bb57 loc(#loc367)
  ^bb57:  // pred: ^bb56
    cir.br ^bb59(%123 : !cir.bool) loc(#loc367)
  ^bb58:  // pred: ^bb52
    %124 = cir.const #false loc(#loc367)
    cir.br ^bb59(%124 : !cir.bool) loc(#loc367)
  ^bb59(%125: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":231:27)):  // 2 preds: ^bb57, ^bb58
    cir.br ^bb60 loc(#loc367)
  ^bb60:  // pred: ^bb59
    cir.brcond %125 ^bb61, ^bb70 loc(#loc864)
  ^bb61:  // pred: ^bb60
    %126 = cir.const #cir.int<1> : !s32i loc(#loc374)
    %127 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc375)
    %128 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc376)
    %129 = cir.ptr_stride(%127 : !cir.ptr<!s32i>, %128 : !s32i), !cir.ptr<!s32i> loc(#loc377)
    cir.store %126, %129 : !s32i, !cir.ptr<!s32i> loc(#loc865)
    cir.br ^bb62 loc(#loc866)
  ^bb62:  // pred: ^bb61
    %130 = cir.const #cir.int<0> : !s32i loc(#loc380)
    cir.store %130, %4 : !s32i, !cir.ptr<!s32i> loc(#loc867)
    cir.br ^bb63 loc(#loc866)
  ^bb63:  // 2 preds: ^bb62, ^bb67
    %131 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc382)
    %132 = cir.const #cir.int<10> : !s32i loc(#loc383)
    %133 = cir.cmp(lt, %131, %132) : !s32i, !cir.bool loc(#loc868)
    cir.brcond %133 ^bb64, ^bb68 loc(#loc384)
  ^bb64:  // pred: ^bb63
    cir.br ^bb65 loc(#loc869)
  ^bb65:  // pred: ^bb64
    %134 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc386)
    %135 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc387)
    %136 = cir.ptr_stride(%134 : !cir.ptr<!s32i>, %135 : !s32i), !cir.ptr<!s32i> loc(#loc388)
    %137 = cir.load %136 : !cir.ptr<!s32i>, !s32i loc(#loc386)
    cir.call @printIntLine(%137) : (!s32i) -> () loc(#loc389)
    cir.br ^bb66 loc(#loc379)
  ^bb66:  // pred: ^bb65
    cir.br ^bb67 loc(#loc379)
  ^bb67:  // pred: ^bb66
    %138 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc390)
    %139 = cir.unary(inc, %138) : !s32i, !s32i loc(#loc391)
    cir.store %139, %4 : !s32i, !cir.ptr<!s32i> loc(#loc870)
    cir.br ^bb63 loc(#loc866)
  ^bb68:  // pred: ^bb63
    cir.br ^bb69 loc(#loc379)
  ^bb69:  // pred: ^bb68
    cir.br ^bb71 loc(#loc372)
  ^bb70:  // pred: ^bb60
    %140 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc228)
    %141 = cir.cast(array_to_ptrdecay, %140 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc228)
    cir.call @printLine(%141) : (!cir.ptr<!s8i>) -> () loc(#loc392)
    cir.br ^bb71 loc(#loc364)
  ^bb71:  // 2 preds: ^bb69, ^bb70
    cir.br ^bb72 loc(#loc364)
  ^bb72:  // pred: ^bb71
    %142 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc393)
    %143 = cir.cast(bitcast, %142 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc393)
    cir.call @free(%143) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc394)
    cir.br ^bb73 loc(#loc336)
  ^bb73:  // pred: ^bb72
    cir.br ^bb74 loc(#loc329)
  ^bb74:  // 2 preds: ^bb37, ^bb73
    cir.br ^bb75 loc(#loc329)
  ^bb75:  // pred: ^bb74
    cir.return loc(#loc230)
  } loc(#loc807)
  cir.func no_proto internal private @goodB2G2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc872)
    %1 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc873)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["connectSocket", init] {alignment = 4 : i64} loc(#loc874)
    %3 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc875)
    %4 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc876)
    %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc877)
    %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc878)
    %7 = cir.const #cir.int<1> : !s32i loc(#loc411)
    %8 = cir.unary(minus, %7) : !s32i, !s32i loc(#loc412)
    cir.store %8, %6 : !s32i, !cir.ptr<!s32i> loc(#loc879)
    cir.br ^bb1 loc(#loc880)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.int<1> : !s32i loc(#loc416)
    %10 = cir.cast(int_to_bool, %9 : !s32i), !cir.bool loc(#loc416)
    cir.brcond %10 ^bb2, ^bb34 loc(#loc881)
  ^bb2:  // pred: ^bb1
    cir.br ^bb3 loc(#loc882)
  ^bb3:  // pred: ^bb2
    %11 = cir.const #cir.int<1> : !s32i loc(#loc402)
    %12 = cir.unary(minus, %11) : !s32i, !s32i loc(#loc402)
    cir.store %12, %2 : !s32i, !cir.ptr<!s32i> loc(#loc874)
    cir.br ^bb4 loc(#loc883)
  ^bb4:  // pred: ^bb3
    cir.br ^bb6 loc(#loc883)
  ^bb5:  // pred: ^bb26
    %13 = cir.const #cir.int<0> : !s32i loc(#loc422)
    %14 = cir.cast(int_to_bool, %13 : !s32i), !cir.bool loc(#loc422)
    cir.brcond %14 ^bb6, ^bb27 loc(#loc422)
  ^bb6:  // 2 preds: ^bb4, ^bb5
    %15 = cir.const #cir.int<2> : !s32i loc(#loc423)
    %16 = cir.const #cir.int<1> : !s32i loc(#loc424)
    %17 = cir.const #cir.int<6> : !s32i loc(#loc425)
    %18 = cir.call @socket(%15, %16, %17) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc426)
    cir.store %18, %2 : !s32i, !cir.ptr<!s32i> loc(#loc884)
    cir.br ^bb7 loc(#loc885)
  ^bb7:  // pred: ^bb6
    %19 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc431)
    %20 = cir.const #cir.int<1> : !s32i loc(#loc432)
    %21 = cir.unary(minus, %20) : !s32i, !s32i loc(#loc432)
    %22 = cir.cmp(eq, %19, %21) : !s32i, !cir.bool loc(#loc886)
    cir.brcond %22 ^bb8, ^bb9 loc(#loc887)
  ^bb8:  // pred: ^bb7
    cir.br ^bb27 loc(#loc434)
  ^bb9:  // pred: ^bb7
    cir.br ^bb10 loc(#loc430)
  ^bb10:  // pred: ^bb9
    %23 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc888)
    %24 = cir.const #cir.int<0> : !s32i loc(#loc437)
    %25 = cir.const #cir.int<16> : !u64i loc(#loc889)
    cir.libc.memset %25 bytes from %23 set to %24 : !cir.ptr<!void>, !s32i, !u64i loc(#loc890)
    %26 = cir.const #cir.int<2> : !s32i loc(#loc442)
    %27 = cir.cast(integral, %26 : !s32i), !u16i loc(#loc442)
    %28 = cir.get_member %1[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc75)
    cir.store %27, %28 : !u16i, !cir.ptr<!u16i> loc(#loc891)
    %29 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 10>> loc(#loc444)
    %30 = cir.cast(array_to_ptrdecay, %29 : !cir.ptr<!cir.array<!s8i x 10>>), !cir.ptr<!s8i> loc(#loc444)
    %31 = cir.call @inet_addr(%30) : (!cir.ptr<!s8i>) -> !u32i extra(#fn_attr) loc(#loc445)
    %32 = cir.get_member %1[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc78)
    %33 = cir.get_member %32[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc79)
    cir.store %31, %33 : !u32i, !cir.ptr<!u32i> loc(#loc892)
    %34 = cir.const #cir.int<27015> : !s32i loc(#loc448)
    %35 = cir.cast(integral, %34 : !s32i), !u16i loc(#loc448)
    %36 = cir.call @htons(%35) : (!u16i) -> !u16i extra(#fn_attr) loc(#loc449)
    %37 = cir.get_member %1[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc84)
    cir.store %36, %37 : !u16i, !cir.ptr<!u16i> loc(#loc893)
    cir.br ^bb11 loc(#loc894)
  ^bb11:  // pred: ^bb10
    %38 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc454)
    %39 = cir.cast(bitcast, %1 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc895)
    %40 = cir.const #cir.int<16> : !u64i loc(#loc896)
    %41 = cir.cast(integral, %40 : !u64i), !u32i loc(#loc896)
    %42 = cir.call @connect(%38, %39, %41) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i loc(#loc459)
    %43 = cir.const #cir.int<1> : !s32i loc(#loc460)
    %44 = cir.unary(minus, %43) : !s32i, !s32i loc(#loc460)
    %45 = cir.cmp(eq, %42, %44) : !s32i, !cir.bool loc(#loc897)
    cir.brcond %45 ^bb12, ^bb13 loc(#loc898)
  ^bb12:  // pred: ^bb11
    cir.br ^bb27 loc(#loc462)
  ^bb13:  // pred: ^bb11
    cir.br ^bb14 loc(#loc453)
  ^bb14:  // pred: ^bb13
    %46 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc463)
    %47 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc464)
    %48 = cir.cast(bitcast, %47 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc464)
    %49 = cir.const #cir.int<3> : !s32i loc(#loc465)
    %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc465)
    %51 = cir.const #cir.int<4> : !u64i loc(#loc465)
    %52 = cir.binop(mul, %50, %51) : !u64i loc(#loc465)
    %53 = cir.const #cir.int<2> : !s32i loc(#loc465)
    %54 = cir.cast(integral, %53 : !s32i), !u64i loc(#loc465)
    %55 = cir.binop(add, %52, %54) : !u64i loc(#loc465)
    %56 = cir.const #cir.int<1> : !s32i loc(#loc466)
    %57 = cir.cast(integral, %56 : !s32i), !u64i loc(#loc466)
    %58 = cir.binop(sub, %55, %57) : !u64i loc(#loc899)
    %59 = cir.const #cir.int<0> : !s32i loc(#loc467)
    %60 = cir.call @recv(%46, %48, %58, %59) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc468)
    %61 = cir.cast(integral, %60 : !s64i), !s32i loc(#loc468)
    cir.store %61, %0 : !s32i, !cir.ptr<!s32i> loc(#loc900)
    cir.br ^bb15 loc(#loc901)
  ^bb15:  // pred: ^bb14
    %62 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc473)
    %63 = cir.const #cir.int<1> : !s32i loc(#loc474)
    %64 = cir.unary(minus, %63) : !s32i, !s32i loc(#loc474)
    %65 = cir.cmp(eq, %62, %64) : !s32i, !cir.bool loc(#loc902)
    cir.brcond %65 ^bb16, ^bb17 loc(#loc475)
  ^bb16:  // pred: ^bb15
    %66 = cir.const #true loc(#loc475)
    cir.br ^bb22(%66 : !cir.bool) loc(#loc475)
  ^bb17:  // pred: ^bb15
    %67 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc476)
    %68 = cir.const #cir.int<0> : !s32i loc(#loc477)
    %69 = cir.cmp(eq, %67, %68) : !s32i, !cir.bool loc(#loc903)
    cir.brcond %69 ^bb18, ^bb19 loc(#loc475)
  ^bb18:  // pred: ^bb17
    %70 = cir.const #true loc(#loc475)
    cir.br ^bb20(%70 : !cir.bool) loc(#loc475)
  ^bb19:  // pred: ^bb17
    %71 = cir.const #false loc(#loc475)
    cir.br ^bb20(%71 : !cir.bool) loc(#loc475)
  ^bb20(%72: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":292:48)):  // 2 preds: ^bb18, ^bb19
    cir.br ^bb21 loc(#loc475)
  ^bb21:  // pred: ^bb20
    cir.br ^bb22(%72 : !cir.bool) loc(#loc475)
  ^bb22(%73: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":292:48)):  // 2 preds: ^bb16, ^bb21
    cir.br ^bb23 loc(#loc475)
  ^bb23:  // pred: ^bb22
    cir.brcond %73 ^bb24, ^bb25 loc(#loc904)
  ^bb24:  // pred: ^bb23
    cir.br ^bb27 loc(#loc479)
  ^bb25:  // pred: ^bb23
    cir.br ^bb26 loc(#loc472)
  ^bb26:  // pred: ^bb25
    %74 = cir.const #cir.int<0> : !s32i loc(#loc480)
    %75 = cir.cast(integral, %74 : !s32i), !s8i loc(#loc480)
    %76 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc481)
    %77 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc482)
    %78 = cir.ptr_stride(%77 : !cir.ptr<!s8i>, %76 : !s32i), !cir.ptr<!s8i> loc(#loc482)
    cir.store %75, %78 : !s8i, !cir.ptr<!s8i> loc(#loc905)
    %79 = cir.cast(array_to_ptrdecay, %3 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc483)
    %80 = cir.call @atoi(%79) : (!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc484)
    cir.store %80, %6 : !s32i, !cir.ptr<!s32i> loc(#loc906)
    cir.br ^bb5 loc(#loc421)
  ^bb27:  // 4 preds: ^bb5, ^bb8, ^bb12, ^bb24
    cir.br ^bb28 loc(#loc421)
  ^bb28:  // pred: ^bb27
    cir.br ^bb29 loc(#loc907)
  ^bb29:  // pred: ^bb28
    %81 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc489)
    %82 = cir.const #cir.int<1> : !s32i loc(#loc490)
    %83 = cir.unary(minus, %82) : !s32i, !s32i loc(#loc490)
    %84 = cir.cmp(ne, %81, %83) : !s32i, !cir.bool loc(#loc908)
    cir.brcond %84 ^bb30, ^bb31 loc(#loc909)
  ^bb30:  // pred: ^bb29
    %85 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc492)
    %86 = cir.call @close(%85) : (!s32i) -> !s32i loc(#loc493)
    cir.br ^bb31 loc(#loc488)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc488)
  ^bb32:  // pred: ^bb31
    cir.br ^bb33 loc(#loc419)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc415)
  ^bb34:  // 2 preds: ^bb1, ^bb33
    cir.br ^bb35 loc(#loc415)
  ^bb35:  // pred: ^bb34
    cir.br ^bb36 loc(#loc910)
  ^bb36:  // pred: ^bb35
    %87 = cir.const #cir.int<1> : !s32i loc(#loc496)
    %88 = cir.cast(int_to_bool, %87 : !s32i), !cir.bool loc(#loc496)
    cir.brcond %88 ^bb37, ^bb73 loc(#loc911)
  ^bb37:  // pred: ^bb36
    cir.br ^bb38 loc(#loc912)
  ^bb38:  // pred: ^bb37
    %89 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc500)
    %90 = cir.const #cir.int<10> : !s32i loc(#loc501)
    %91 = cir.cast(integral, %90 : !s32i), !u64i loc(#loc501)
    %92 = cir.const #cir.int<4> : !u64i loc(#loc913)
    %93 = cir.binop(mul, %91, %92) : !u64i loc(#loc914)
    %94 = cir.call @malloc(%93) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc500)
    %95 = cir.cast(bitcast, %94 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc915)
    cir.store %95, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc877)
    cir.br ^bb39 loc(#loc916)
  ^bb39:  // pred: ^bb38
    %96 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc506)
    %97 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc507)
    %98 = cir.cast(bitcast, %97 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc507)
    %99 = cir.cmp(eq, %96, %98) : !cir.ptr<!s32i>, !cir.bool loc(#loc917)
    cir.brcond %99 ^bb40, ^bb41 loc(#loc918)
  ^bb40:  // pred: ^bb39
    %100 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc509)
    %101 = cir.const #cir.int<1> : !s32i loc(#loc510)
    %102 = cir.unary(minus, %101) : !s32i, !s32i loc(#loc511)
    cir.call @exit(%102) : (!s32i) -> () extra(#fn_attr) loc(#loc509)
    cir.br ^bb41 loc(#loc505)
  ^bb41:  // 2 preds: ^bb39, ^bb40
    cir.br ^bb42 loc(#loc505)
  ^bb42:  // pred: ^bb41
    cir.br ^bb43 loc(#loc919)
  ^bb43:  // pred: ^bb42
    %103 = cir.const #cir.int<0> : !s32i loc(#loc514)
    cir.store %103, %4 : !s32i, !cir.ptr<!s32i> loc(#loc920)
    cir.br ^bb44 loc(#loc919)
  ^bb44:  // 2 preds: ^bb43, ^bb48
    %104 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc516)
    %105 = cir.const #cir.int<10> : !s32i loc(#loc517)
    %106 = cir.cmp(lt, %104, %105) : !s32i, !cir.bool loc(#loc921)
    cir.brcond %106 ^bb45, ^bb49 loc(#loc518)
  ^bb45:  // pred: ^bb44
    cir.br ^bb46 loc(#loc922)
  ^bb46:  // pred: ^bb45
    %107 = cir.const #cir.int<0> : !s32i loc(#loc520)
    %108 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc521)
    %109 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc522)
    %110 = cir.ptr_stride(%108 : !cir.ptr<!s32i>, %109 : !s32i), !cir.ptr<!s32i> loc(#loc523)
    cir.store %107, %110 : !s32i, !cir.ptr<!s32i> loc(#loc923)
    cir.br ^bb47 loc(#loc513)
  ^bb47:  // pred: ^bb46
    cir.br ^bb48 loc(#loc513)
  ^bb48:  // pred: ^bb47
    %111 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc524)
    %112 = cir.unary(inc, %111) : !s32i, !s32i loc(#loc525)
    cir.store %112, %4 : !s32i, !cir.ptr<!s32i> loc(#loc924)
    cir.br ^bb44 loc(#loc919)
  ^bb49:  // pred: ^bb44
    cir.br ^bb50 loc(#loc513)
  ^bb50:  // pred: ^bb49
    cir.br ^bb51 loc(#loc925)
  ^bb51:  // pred: ^bb50
    %113 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc528)
    %114 = cir.const #cir.int<0> : !s32i loc(#loc529)
    %115 = cir.cmp(ge, %113, %114) : !s32i, !cir.bool loc(#loc926)
    cir.brcond %115 ^bb52, ^bb57 loc(#loc530)
  ^bb52:  // pred: ^bb51
    %116 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc531)
    %117 = cir.const #cir.int<10> : !s32i loc(#loc532)
    %118 = cir.cmp(lt, %116, %117) : !s32i, !cir.bool loc(#loc927)
    cir.brcond %118 ^bb53, ^bb54 loc(#loc530)
  ^bb53:  // pred: ^bb52
    %119 = cir.const #true loc(#loc530)
    cir.br ^bb55(%119 : !cir.bool) loc(#loc530)
  ^bb54:  // pred: ^bb52
    %120 = cir.const #false loc(#loc530)
    cir.br ^bb55(%120 : !cir.bool) loc(#loc530)
  ^bb55(%121: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":326:27)):  // 2 preds: ^bb53, ^bb54
    cir.br ^bb56 loc(#loc530)
  ^bb56:  // pred: ^bb55
    cir.br ^bb58(%121 : !cir.bool) loc(#loc530)
  ^bb57:  // pred: ^bb51
    %122 = cir.const #false loc(#loc530)
    cir.br ^bb58(%122 : !cir.bool) loc(#loc530)
  ^bb58(%123: !cir.bool loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":326:27)):  // 2 preds: ^bb56, ^bb57
    cir.br ^bb59 loc(#loc530)
  ^bb59:  // pred: ^bb58
    cir.brcond %123 ^bb60, ^bb69 loc(#loc928)
  ^bb60:  // pred: ^bb59
    %124 = cir.const #cir.int<1> : !s32i loc(#loc537)
    %125 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc538)
    %126 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc539)
    %127 = cir.ptr_stride(%125 : !cir.ptr<!s32i>, %126 : !s32i), !cir.ptr<!s32i> loc(#loc540)
    cir.store %124, %127 : !s32i, !cir.ptr<!s32i> loc(#loc929)
    cir.br ^bb61 loc(#loc930)
  ^bb61:  // pred: ^bb60
    %128 = cir.const #cir.int<0> : !s32i loc(#loc543)
    cir.store %128, %4 : !s32i, !cir.ptr<!s32i> loc(#loc931)
    cir.br ^bb62 loc(#loc930)
  ^bb62:  // 2 preds: ^bb61, ^bb66
    %129 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc545)
    %130 = cir.const #cir.int<10> : !s32i loc(#loc546)
    %131 = cir.cmp(lt, %129, %130) : !s32i, !cir.bool loc(#loc932)
    cir.brcond %131 ^bb63, ^bb67 loc(#loc547)
  ^bb63:  // pred: ^bb62
    cir.br ^bb64 loc(#loc933)
  ^bb64:  // pred: ^bb63
    %132 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc549)
    %133 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc550)
    %134 = cir.ptr_stride(%132 : !cir.ptr<!s32i>, %133 : !s32i), !cir.ptr<!s32i> loc(#loc551)
    %135 = cir.load %134 : !cir.ptr<!s32i>, !s32i loc(#loc549)
    cir.call @printIntLine(%135) : (!s32i) -> () loc(#loc552)
    cir.br ^bb65 loc(#loc542)
  ^bb65:  // pred: ^bb64
    cir.br ^bb66 loc(#loc542)
  ^bb66:  // pred: ^bb65
    %136 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc553)
    %137 = cir.unary(inc, %136) : !s32i, !s32i loc(#loc554)
    cir.store %137, %4 : !s32i, !cir.ptr<!s32i> loc(#loc934)
    cir.br ^bb62 loc(#loc930)
  ^bb67:  // pred: ^bb62
    cir.br ^bb68 loc(#loc542)
  ^bb68:  // pred: ^bb67
    cir.br ^bb70 loc(#loc535)
  ^bb69:  // pred: ^bb59
    %138 = cir.get_global @".str.7" : !cir.ptr<!cir.array<!s8i x 36>> loc(#loc555)
    %139 = cir.cast(array_to_ptrdecay, %138 : !cir.ptr<!cir.array<!s8i x 36>>), !cir.ptr<!s8i> loc(#loc555)
    cir.call @printLine(%139) : (!cir.ptr<!s8i>) -> () loc(#loc556)
    cir.br ^bb70 loc(#loc527)
  ^bb70:  // 2 preds: ^bb68, ^bb69
    cir.br ^bb71 loc(#loc527)
  ^bb71:  // pred: ^bb70
    %140 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc557)
    %141 = cir.cast(bitcast, %140 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc557)
    cir.call @free(%141) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc558)
    cir.br ^bb72 loc(#loc499)
  ^bb72:  // pred: ^bb71
    cir.br ^bb73 loc(#loc495)
  ^bb73:  // 2 preds: ^bb36, ^bb72
    cir.br ^bb74 loc(#loc495)
  ^bb74:  // pred: ^bb73
    cir.return loc(#loc396)
  } loc(#loc871)
  cir.func no_proto internal private @goodG2B1() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc936)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc937)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc938)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc567)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc568)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc939)
    cir.br ^bb1 loc(#loc940)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<0> : !s32i loc(#loc572)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc572)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc941)
  ^bb2:  // pred: ^bb1
    %7 = cir.get_global @".str.6" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc576)
    %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc576)
    cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc577)
    cir.br ^bb4 loc(#loc574)
  ^bb3:  // pred: ^bb1
    %9 = cir.const #cir.int<7> : !s32i loc(#loc578)
    cir.store %9, %2 : !s32i, !cir.ptr<!s32i> loc(#loc942)
    cir.br ^bb4 loc(#loc571)
  ^bb4:  // 2 preds: ^bb2, ^bb3
    cir.br ^bb5 loc(#loc571)
  ^bb5:  // pred: ^bb4
    cir.br ^bb6 loc(#loc943)
  ^bb6:  // pred: ^bb5
    %10 = cir.const #cir.int<1> : !s32i loc(#loc582)
    %11 = cir.cast(int_to_bool, %10 : !s32i), !cir.bool loc(#loc582)
    cir.brcond %11 ^bb7, ^bb35 loc(#loc944)
  ^bb7:  // pred: ^bb6
    cir.br ^bb8 loc(#loc945)
  ^bb8:  // pred: ^bb7
    %12 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc586)
    %13 = cir.const #cir.int<10> : !s32i loc(#loc587)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc587)
    %15 = cir.const #cir.int<4> : !u64i loc(#loc946)
    %16 = cir.binop(mul, %14, %15) : !u64i loc(#loc947)
    %17 = cir.call @malloc(%16) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc586)
    %18 = cir.cast(bitcast, %17 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc948)
    cir.store %18, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc937)
    cir.br ^bb9 loc(#loc949)
  ^bb9:  // pred: ^bb8
    %19 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc592)
    %20 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc593)
    %21 = cir.cast(bitcast, %20 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc593)
    %22 = cir.cmp(eq, %19, %21) : !cir.ptr<!s32i>, !cir.bool loc(#loc950)
    cir.brcond %22 ^bb10, ^bb11 loc(#loc951)
  ^bb10:  // pred: ^bb9
    %23 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc595)
    %24 = cir.const #cir.int<1> : !s32i loc(#loc596)
    %25 = cir.unary(minus, %24) : !s32i, !s32i loc(#loc597)
    cir.call @exit(%25) : (!s32i) -> () extra(#fn_attr) loc(#loc595)
    cir.br ^bb11 loc(#loc591)
  ^bb11:  // 2 preds: ^bb9, ^bb10
    cir.br ^bb12 loc(#loc591)
  ^bb12:  // pred: ^bb11
    cir.br ^bb13 loc(#loc952)
  ^bb13:  // pred: ^bb12
    %26 = cir.const #cir.int<0> : !s32i loc(#loc600)
    cir.store %26, %0 : !s32i, !cir.ptr<!s32i> loc(#loc953)
    cir.br ^bb14 loc(#loc952)
  ^bb14:  // 2 preds: ^bb13, ^bb18
    %27 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc602)
    %28 = cir.const #cir.int<10> : !s32i loc(#loc603)
    %29 = cir.cmp(lt, %27, %28) : !s32i, !cir.bool loc(#loc954)
    cir.brcond %29 ^bb15, ^bb19 loc(#loc604)
  ^bb15:  // pred: ^bb14
    cir.br ^bb16 loc(#loc955)
  ^bb16:  // pred: ^bb15
    %30 = cir.const #cir.int<0> : !s32i loc(#loc606)
    %31 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc607)
    %32 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc608)
    %33 = cir.ptr_stride(%31 : !cir.ptr<!s32i>, %32 : !s32i), !cir.ptr<!s32i> loc(#loc609)
    cir.store %30, %33 : !s32i, !cir.ptr<!s32i> loc(#loc956)
    cir.br ^bb17 loc(#loc599)
  ^bb17:  // pred: ^bb16
    cir.br ^bb18 loc(#loc599)
  ^bb18:  // pred: ^bb17
    %34 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc610)
    %35 = cir.unary(inc, %34) : !s32i, !s32i loc(#loc611)
    cir.store %35, %0 : !s32i, !cir.ptr<!s32i> loc(#loc957)
    cir.br ^bb14 loc(#loc952)
  ^bb19:  // pred: ^bb14
    cir.br ^bb20 loc(#loc599)
  ^bb20:  // pred: ^bb19
    cir.br ^bb21 loc(#loc958)
  ^bb21:  // pred: ^bb20
    %36 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc614)
    %37 = cir.const #cir.int<0> : !s32i loc(#loc615)
    %38 = cir.cmp(ge, %36, %37) : !s32i, !cir.bool loc(#loc959)
    cir.brcond %38 ^bb22, ^bb31 loc(#loc960)
  ^bb22:  // pred: ^bb21
    %39 = cir.const #cir.int<1> : !s32i loc(#loc619)
    %40 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc620)
    %41 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc621)
    %42 = cir.ptr_stride(%40 : !cir.ptr<!s32i>, %41 : !s32i), !cir.ptr<!s32i> loc(#loc622)
    cir.store %39, %42 : !s32i, !cir.ptr<!s32i> loc(#loc961)
    cir.br ^bb23 loc(#loc962)
  ^bb23:  // pred: ^bb22
    %43 = cir.const #cir.int<0> : !s32i loc(#loc625)
    cir.store %43, %0 : !s32i, !cir.ptr<!s32i> loc(#loc963)
    cir.br ^bb24 loc(#loc962)
  ^bb24:  // 2 preds: ^bb23, ^bb28
    %44 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc627)
    %45 = cir.const #cir.int<10> : !s32i loc(#loc628)
    %46 = cir.cmp(lt, %44, %45) : !s32i, !cir.bool loc(#loc964)
    cir.brcond %46 ^bb25, ^bb29 loc(#loc629)
  ^bb25:  // pred: ^bb24
    cir.br ^bb26 loc(#loc965)
  ^bb26:  // pred: ^bb25
    %47 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc631)
    %48 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc632)
    %49 = cir.ptr_stride(%47 : !cir.ptr<!s32i>, %48 : !s32i), !cir.ptr<!s32i> loc(#loc633)
    %50 = cir.load %49 : !cir.ptr<!s32i>, !s32i loc(#loc631)
    cir.call @printIntLine(%50) : (!s32i) -> () loc(#loc634)
    cir.br ^bb27 loc(#loc624)
  ^bb27:  // pred: ^bb26
    cir.br ^bb28 loc(#loc624)
  ^bb28:  // pred: ^bb27
    %51 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc635)
    %52 = cir.unary(inc, %51) : !s32i, !s32i loc(#loc636)
    cir.store %52, %0 : !s32i, !cir.ptr<!s32i> loc(#loc966)
    cir.br ^bb24 loc(#loc962)
  ^bb29:  // pred: ^bb24
    cir.br ^bb30 loc(#loc624)
  ^bb30:  // pred: ^bb29
    cir.br ^bb32 loc(#loc617)
  ^bb31:  // pred: ^bb21
    %53 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc637)
    %54 = cir.cast(array_to_ptrdecay, %53 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc637)
    cir.call @printLine(%54) : (!cir.ptr<!s8i>) -> () loc(#loc638)
    cir.br ^bb32 loc(#loc613)
  ^bb32:  // 2 preds: ^bb30, ^bb31
    cir.br ^bb33 loc(#loc613)
  ^bb33:  // pred: ^bb32
    %55 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc639)
    %56 = cir.cast(bitcast, %55 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc639)
    cir.call @free(%56) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc640)
    cir.br ^bb34 loc(#loc585)
  ^bb34:  // pred: ^bb33
    cir.br ^bb35 loc(#loc581)
  ^bb35:  // 2 preds: ^bb6, ^bb34
    cir.br ^bb36 loc(#loc581)
  ^bb36:  // pred: ^bb35
    cir.return loc(#loc560)
  } loc(#loc935)
  cir.func no_proto internal private @goodG2B2() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["i"] {alignment = 4 : i64} loc(#loc968)
    %1 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["buffer", init] {alignment = 8 : i64} loc(#loc969)
    %2 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc970)
    %3 = cir.const #cir.int<1> : !s32i loc(#loc649)
    %4 = cir.unary(minus, %3) : !s32i, !s32i loc(#loc650)
    cir.store %4, %2 : !s32i, !cir.ptr<!s32i> loc(#loc971)
    cir.br ^bb1 loc(#loc972)
  ^bb1:  // pred: ^bb0
    %5 = cir.const #cir.int<1> : !s32i loc(#loc654)
    %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc654)
    cir.brcond %6 ^bb2, ^bb3 loc(#loc973)
  ^bb2:  // pred: ^bb1
    %7 = cir.const #cir.int<7> : !s32i loc(#loc656)
    cir.store %7, %2 : !s32i, !cir.ptr<!s32i> loc(#loc974)
    cir.br ^bb3 loc(#loc653)
  ^bb3:  // 2 preds: ^bb1, ^bb2
    cir.br ^bb4 loc(#loc653)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc975)
  ^bb5:  // pred: ^bb4
    %8 = cir.const #cir.int<1> : !s32i loc(#loc660)
    %9 = cir.cast(int_to_bool, %8 : !s32i), !cir.bool loc(#loc660)
    cir.brcond %9 ^bb6, ^bb34 loc(#loc976)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc977)
  ^bb7:  // pred: ^bb6
    %10 = cir.get_global @malloc : !cir.ptr<!cir.func<!cir.ptr<!void> (!u64i)>> loc(#loc664)
    %11 = cir.const #cir.int<10> : !s32i loc(#loc665)
    %12 = cir.cast(integral, %11 : !s32i), !u64i loc(#loc665)
    %13 = cir.const #cir.int<4> : !u64i loc(#loc978)
    %14 = cir.binop(mul, %12, %13) : !u64i loc(#loc979)
    %15 = cir.call @malloc(%14) : (!u64i) -> !cir.ptr<!void> extra(#fn_attr) loc(#loc664)
    %16 = cir.cast(bitcast, %15 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc980)
    cir.store %16, %1 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc969)
    cir.br ^bb8 loc(#loc981)
  ^bb8:  // pred: ^bb7
    %17 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc670)
    %18 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc671)
    %19 = cir.cast(bitcast, %18 : !cir.ptr<!void>), !cir.ptr<!s32i> loc(#loc671)
    %20 = cir.cmp(eq, %17, %19) : !cir.ptr<!s32i>, !cir.bool loc(#loc982)
    cir.brcond %20 ^bb9, ^bb10 loc(#loc983)
  ^bb9:  // pred: ^bb8
    %21 = cir.get_global @exit : !cir.ptr<!cir.func<!void (!s32i)>> loc(#loc673)
    %22 = cir.const #cir.int<1> : !s32i loc(#loc674)
    %23 = cir.unary(minus, %22) : !s32i, !s32i loc(#loc675)
    cir.call @exit(%23) : (!s32i) -> () extra(#fn_attr) loc(#loc673)
    cir.br ^bb10 loc(#loc669)
  ^bb10:  // 2 preds: ^bb8, ^bb9
    cir.br ^bb11 loc(#loc669)
  ^bb11:  // pred: ^bb10
    cir.br ^bb12 loc(#loc984)
  ^bb12:  // pred: ^bb11
    %24 = cir.const #cir.int<0> : !s32i loc(#loc678)
    cir.store %24, %0 : !s32i, !cir.ptr<!s32i> loc(#loc985)
    cir.br ^bb13 loc(#loc984)
  ^bb13:  // 2 preds: ^bb12, ^bb17
    %25 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc680)
    %26 = cir.const #cir.int<10> : !s32i loc(#loc681)
    %27 = cir.cmp(lt, %25, %26) : !s32i, !cir.bool loc(#loc986)
    cir.brcond %27 ^bb14, ^bb18 loc(#loc682)
  ^bb14:  // pred: ^bb13
    cir.br ^bb15 loc(#loc987)
  ^bb15:  // pred: ^bb14
    %28 = cir.const #cir.int<0> : !s32i loc(#loc684)
    %29 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc685)
    %30 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc686)
    %31 = cir.ptr_stride(%29 : !cir.ptr<!s32i>, %30 : !s32i), !cir.ptr<!s32i> loc(#loc687)
    cir.store %28, %31 : !s32i, !cir.ptr<!s32i> loc(#loc988)
    cir.br ^bb16 loc(#loc677)
  ^bb16:  // pred: ^bb15
    cir.br ^bb17 loc(#loc677)
  ^bb17:  // pred: ^bb16
    %32 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc688)
    %33 = cir.unary(inc, %32) : !s32i, !s32i loc(#loc689)
    cir.store %33, %0 : !s32i, !cir.ptr<!s32i> loc(#loc989)
    cir.br ^bb13 loc(#loc984)
  ^bb18:  // pred: ^bb13
    cir.br ^bb19 loc(#loc677)
  ^bb19:  // pred: ^bb18
    cir.br ^bb20 loc(#loc990)
  ^bb20:  // pred: ^bb19
    %34 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc692)
    %35 = cir.const #cir.int<0> : !s32i loc(#loc693)
    %36 = cir.cmp(ge, %34, %35) : !s32i, !cir.bool loc(#loc991)
    cir.brcond %36 ^bb21, ^bb30 loc(#loc992)
  ^bb21:  // pred: ^bb20
    %37 = cir.const #cir.int<1> : !s32i loc(#loc697)
    %38 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc698)
    %39 = cir.load %2 : !cir.ptr<!s32i>, !s32i loc(#loc699)
    %40 = cir.ptr_stride(%38 : !cir.ptr<!s32i>, %39 : !s32i), !cir.ptr<!s32i> loc(#loc700)
    cir.store %37, %40 : !s32i, !cir.ptr<!s32i> loc(#loc993)
    cir.br ^bb22 loc(#loc994)
  ^bb22:  // pred: ^bb21
    %41 = cir.const #cir.int<0> : !s32i loc(#loc703)
    cir.store %41, %0 : !s32i, !cir.ptr<!s32i> loc(#loc995)
    cir.br ^bb23 loc(#loc994)
  ^bb23:  // 2 preds: ^bb22, ^bb27
    %42 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc705)
    %43 = cir.const #cir.int<10> : !s32i loc(#loc706)
    %44 = cir.cmp(lt, %42, %43) : !s32i, !cir.bool loc(#loc996)
    cir.brcond %44 ^bb24, ^bb28 loc(#loc707)
  ^bb24:  // pred: ^bb23
    cir.br ^bb25 loc(#loc997)
  ^bb25:  // pred: ^bb24
    %45 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc709)
    %46 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc710)
    %47 = cir.ptr_stride(%45 : !cir.ptr<!s32i>, %46 : !s32i), !cir.ptr<!s32i> loc(#loc711)
    %48 = cir.load %47 : !cir.ptr<!s32i>, !s32i loc(#loc709)
    cir.call @printIntLine(%48) : (!s32i) -> () loc(#loc712)
    cir.br ^bb26 loc(#loc702)
  ^bb26:  // pred: ^bb25
    cir.br ^bb27 loc(#loc702)
  ^bb27:  // pred: ^bb26
    %49 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc713)
    %50 = cir.unary(inc, %49) : !s32i, !s32i loc(#loc714)
    cir.store %50, %0 : !s32i, !cir.ptr<!s32i> loc(#loc998)
    cir.br ^bb23 loc(#loc994)
  ^bb28:  // pred: ^bb23
    cir.br ^bb29 loc(#loc702)
  ^bb29:  // pred: ^bb28
    cir.br ^bb31 loc(#loc695)
  ^bb30:  // pred: ^bb20
    %51 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 32>> loc(#loc715)
    %52 = cir.cast(array_to_ptrdecay, %51 : !cir.ptr<!cir.array<!s8i x 32>>), !cir.ptr<!s8i> loc(#loc715)
    cir.call @printLine(%52) : (!cir.ptr<!s8i>) -> () loc(#loc716)
    cir.br ^bb31 loc(#loc691)
  ^bb31:  // 2 preds: ^bb29, ^bb30
    cir.br ^bb32 loc(#loc691)
  ^bb32:  // pred: ^bb31
    %53 = cir.load %1 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc717)
    %54 = cir.cast(bitcast, %53 : !cir.ptr<!s32i>), !cir.ptr<!void> loc(#loc717)
    cir.call @free(%54) : (!cir.ptr<!void>) -> () extra(#fn_attr) loc(#loc718)
    cir.br ^bb33 loc(#loc663)
  ^bb33:  // pred: ^bb32
    cir.br ^bb34 loc(#loc659)
  ^bb34:  // 2 preds: ^bb5, ^bb33
    cir.br ^bb35 loc(#loc659)
  ^bb35:  // pred: ^bb34
    cir.return loc(#loc642)
  } loc(#loc967)
} loc(#loc)
#loc = loc("/home/ladisgin/git_proj/juliet-c/testcases/CWE122_Heap_Based_Buffer_Overflow/s06/CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":0:0)
#loc1 = loc("/usr/include/sys/socket.h":102:1)
#loc2 = loc("/usr/include/sys/socket.h":102:62)
#loc3 = loc("/usr/include/arpa/inet.h":34:1)
#loc4 = loc("/usr/include/arpa/inet.h":34:47)
#loc5 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":83:53)
#loc6 = loc("/usr/include/netinet/in.h":404:1)
#loc7 = loc("/usr/include/netinet/in.h":405:40)
#loc8 = loc("/usr/include/sys/socket.h":126:1)
#loc9 = loc("/usr/include/sys/socket.h":126:75)
#loc10 = loc("/usr/include/sys/socket.h":145:1)
#loc11 = loc("/usr/include/sys/socket.h":145:68)
#loc12 = loc("/usr/include/stdlib.h":105:1)
#loc13 = loc("/usr/include/stdlib.h":106:33)
#loc14 = loc("/usr/include/unistd.h":358:1)
#loc15 = loc("/usr/include/unistd.h":358:27)
#loc16 = loc("/usr/include/stdlib.h":672:1)
#loc17 = loc("/usr/include/stdlib.h":672:45)
#loc18 = loc("/usr/include/stdlib.h":756:1)
#loc19 = loc("/usr/include/stdlib.h":756:70)
#loc20 = loc("../../../testcasesupport/std_testcase_io.h":18:1)
#loc21 = loc("../../../testcasesupport/std_testcase_io.h":18:33)
#loc22 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc23 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc24 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":138:27)
#loc25 = loc("/usr/include/stdlib.h":687:1)
#loc26 = loc("/usr/include/stdlib.h":687:32)
#loc27 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":50:1)
#loc28 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":143:1)
#loc29 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":62:13)
#loc30 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":62:17)
#loc31 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":63:13)
#loc32 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":63:32)
#loc33 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":64:13)
#loc34 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":64:36)
#loc35 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":65:13)
#loc36 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":65:45)
#loc37 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":117:13)
#loc38 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":117:17)
#loc39 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":118:13)
#loc40 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":118:58)
#loc41 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":52:5)
#loc42 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":52:9)
#loc43 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":54:13)
#loc44 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":54:12)
#loc45 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":54:5)
#loc46 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":55:5)
#loc47 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":113:5)
#loc48 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":55:8)
#loc49 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":56:5)
#loc50 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":57:9)
#loc51 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":112:9)
#loc52 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":66:13)
#loc53 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":101:21)
#loc54 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":101:20)
#loc55 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":76:40)
#loc56 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":76:49)
#loc57 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":76:62)
#loc58 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":76:33)
#loc59 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":76:17)
#loc60 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":76:73)
#loc61 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":77:17)
#loc62 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":80:17)
#loc63 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":77:21)
#loc64 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":77:38)
#loc65 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":78:17)
#loc66 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":79:21)
#loc67 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":81:24)
#loc68 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":81:25)
#loc69 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":81:34)
#loc70 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":81:37)
#loc71 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":81:51)
#loc72 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":81:17)
#loc73 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":81:52)
#loc74 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":82:38)
#loc75 = loc("/usr/include/netinet/in.h":249:5)
#loc76 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":82:17)
#loc77 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":83:43)
#loc78 = loc("/usr/include/netinet/in.h":251:20)
#loc79 = loc("/usr/include/netinet/in.h":33:15)
#loc80 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":83:17)
#loc81 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":83:63)
#loc82 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":84:42)
#loc83 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":84:36)
#loc84 = loc("/usr/include/netinet/in.h":250:15)
#loc85 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":84:17)
#loc86 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":84:50)
#loc87 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":85:17)
#loc88 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":88:17)
#loc89 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":85:29)
#loc90 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":85:62)
#loc91 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":85:63)
#loc92 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":85:72)
#loc93 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":85:86)
#loc94 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":85:21)
#loc95 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":85:92)
#loc96 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":86:17)
#loc97 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":87:21)
#loc98 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":91:35)
#loc99 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":91:50)
#loc100 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":91:63)
#loc101 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":91:81)
#loc102 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":91:84)
#loc103 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":91:30)
#loc104 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":91:17)
#loc105 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":91:85)
#loc106 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":92:17)
#loc107 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":95:17)
#loc108 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":92:21)
#loc109 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":92:35)
#loc111 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":92:51)
#loc112 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":92:65)
#loc113 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":93:17)
#loc114 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":94:21)
#loc115 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":97:43)
#loc116 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":97:29)
#loc117 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":97:17)
#loc118 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":99:29)
#loc119 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":99:24)
#loc120 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":99:17)
#loc121 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":99:40)
#loc122 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":102:13)
#loc123 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":105:13)
#loc124 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":102:17)
#loc125 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":102:34)
#loc126 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":103:13)
#loc127 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":104:30)
#loc128 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":104:17)
#loc129 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":114:5)
#loc130 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":142:5)
#loc131 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":114:8)
#loc132 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":115:5)
#loc133 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":116:9)
#loc134 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":141:9)
#loc135 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":118:35)
#loc136 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":118:42)
#loc137 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":118:47)
#loc138 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":118:57)
#loc139 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":119:13)
#loc140 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":119:43)
#loc141 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":119:17)
#loc142 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":119:27)
#loc143 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":119:33)
#loc144 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":119:34)
#loc145 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":119:40)
#loc146 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":119:39)
#loc147 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":121:13)
#loc148 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":124:13)
#loc149 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":121:22)
#loc150 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":121:18)
#loc151 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":121:25)
#loc152 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":121:29)
#loc153 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":121:27)
#loc154 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":122:13)
#loc155 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":123:29)
#loc156 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":123:17)
#loc157 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":123:24)
#loc158 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":123:25)
#loc159 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":121:34)
#loc160 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":121:33)
#loc161 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":127:13)
#loc162 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":139:13)
#loc163 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":127:17)
#loc164 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":127:25)
#loc165 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":128:13)
#loc166 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":135:13)
#loc167 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":137:13)
#loc168 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":129:32)
#loc169 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":129:17)
#loc170 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":129:24)
#loc171 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":129:28)
#loc172 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":131:17)
#loc173 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":134:17)
#loc174 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":131:25)
#loc175 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":131:21)
#loc176 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":131:28)
#loc177 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":131:32)
#loc178 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":131:30)
#loc179 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":132:17)
#loc180 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":133:34)
#loc181 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":133:41)
#loc182 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":133:42)
#loc183 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":133:21)
#loc184 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":131:37)
#loc185 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":131:36)
#loc186 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":138:17)
#loc187 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":140:18)
#loc188 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":140:13)
#loc189 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":435:1)
#loc190 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":441:1)
#loc191 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":437:5)
#loc192 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":437:14)
#loc193 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":438:5)
#loc194 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":438:14)
#loc195 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":439:5)
#loc196 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":439:14)
#loc197 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":440:5)
#loc198 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":440:14)
#loc199 = loc("/usr/include/stdlib.h":575:1)
#loc200 = loc("/usr/include/stdlib.h":575:41)
#loc201 = loc("/usr/include/time.h":76:1)
#loc202 = loc("/usr/include/time.h":76:38)
#loc203 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":457:15)
#loc204 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":459:15)
#loc205 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":462:15)
#loc206 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":464:15)
#loc207 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":452:1)
#loc208 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":467:1)
#loc213 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":453:1)
#loc214 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":455:27)
#loc215 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":455:22)
#loc216 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":455:5)
#loc217 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":457:5)
#loc218 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":458:5)
#loc219 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":458:72)
#loc220 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":459:5)
#loc221 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":462:5)
#loc222 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":463:5)
#loc223 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":463:71)
#loc224 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":464:5)
#loc225 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":466:12)
#loc226 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":466:5)
#loc227 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":217:19)
#loc228 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":242:27)
#loc229 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":150:1)
#loc230 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":247:1)
#loc231 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":162:13)
#loc232 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":162:17)
#loc233 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":163:13)
#loc234 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":163:32)
#loc235 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":164:13)
#loc236 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":164:36)
#loc237 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":165:13)
#loc238 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":165:45)
#loc239 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":222:13)
#loc240 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":222:17)
#loc241 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":223:13)
#loc242 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":223:58)
#loc243 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":152:5)
#loc244 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":152:9)
#loc245 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":154:13)
#loc246 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":154:12)
#loc247 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":154:5)
#loc248 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":155:5)
#loc249 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":213:5)
#loc250 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":155:8)
#loc251 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":156:5)
#loc252 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":157:9)
#loc253 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":212:9)
#loc254 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":166:13)
#loc255 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":201:21)
#loc256 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":201:20)
#loc257 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":176:40)
#loc258 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":176:49)
#loc259 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":176:62)
#loc260 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":176:33)
#loc261 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":176:17)
#loc262 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":176:73)
#loc263 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":177:17)
#loc264 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":180:17)
#loc265 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":177:21)
#loc266 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":177:38)
#loc267 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":178:17)
#loc268 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":179:21)
#loc269 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":181:24)
#loc270 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":181:25)
#loc271 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":181:34)
#loc272 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":181:37)
#loc273 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":181:51)
#loc274 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":181:17)
#loc275 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":181:52)
#loc276 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":182:38)
#loc277 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":182:17)
#loc278 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":183:53)
#loc279 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":183:43)
#loc280 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":183:17)
#loc281 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":183:63)
#loc282 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":184:42)
#loc283 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":184:36)
#loc284 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":184:17)
#loc285 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":184:50)
#loc286 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":185:17)
#loc287 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":188:17)
#loc288 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":185:29)
#loc289 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":185:62)
#loc290 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":185:63)
#loc291 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":185:72)
#loc292 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":185:86)
#loc293 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":185:21)
#loc294 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":185:92)
#loc295 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":186:17)
#loc296 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":187:21)
#loc297 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":191:35)
#loc298 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":191:50)
#loc299 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":191:63)
#loc300 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":191:81)
#loc301 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":191:84)
#loc302 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":191:30)
#loc303 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":191:17)
#loc304 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":191:85)
#loc305 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":192:17)
#loc306 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":195:17)
#loc307 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":192:21)
#loc308 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":192:35)
#loc310 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":192:51)
#loc311 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":192:65)
#loc312 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":193:17)
#loc313 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":194:21)
#loc314 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":197:43)
#loc315 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":197:29)
#loc316 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":197:17)
#loc317 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":199:29)
#loc318 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":199:24)
#loc319 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":199:17)
#loc320 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":199:40)
#loc321 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":202:13)
#loc322 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":205:13)
#loc323 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":202:17)
#loc324 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":202:34)
#loc325 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":203:13)
#loc326 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":204:30)
#loc327 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":204:17)
#loc328 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":214:5)
#loc329 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":246:5)
#loc330 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":214:8)
#loc331 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":215:5)
#loc332 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":218:5)
#loc333 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":220:5)
#loc334 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":217:9)
#loc335 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":221:9)
#loc336 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":245:9)
#loc337 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":223:35)
#loc338 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":223:42)
#loc339 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":223:47)
#loc340 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":223:57)
#loc341 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":224:13)
#loc342 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":224:43)
#loc343 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":224:17)
#loc344 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":224:27)
#loc345 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":224:33)
#loc346 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":224:34)
#loc347 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":224:40)
#loc348 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":224:39)
#loc349 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":226:13)
#loc350 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":229:13)
#loc351 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":226:22)
#loc352 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":226:18)
#loc353 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":226:25)
#loc354 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":226:29)
#loc355 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":226:27)
#loc356 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":227:13)
#loc357 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":228:29)
#loc358 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":228:17)
#loc359 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":228:24)
#loc360 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":228:25)
#loc361 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":226:34)
#loc362 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":226:33)
#loc363 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":231:13)
#loc364 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":243:13)
#loc365 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":231:17)
#loc366 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":231:25)
#loc368 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":231:30)
#loc369 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":231:38)
#loc370 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":231:40)
#loc371 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":232:13)
#loc372 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":239:13)
#loc373 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":241:13)
#loc374 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":233:32)
#loc375 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":233:17)
#loc376 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":233:24)
#loc377 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":233:28)
#loc378 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":235:17)
#loc379 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":238:17)
#loc380 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":235:25)
#loc381 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":235:21)
#loc382 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":235:28)
#loc383 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":235:32)
#loc384 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":235:30)
#loc385 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":236:17)
#loc386 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":237:34)
#loc387 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":237:41)
#loc388 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":237:42)
#loc389 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":237:21)
#loc390 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":235:37)
#loc391 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":235:36)
#loc392 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":242:17)
#loc393 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":244:18)
#loc394 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":244:13)
#loc395 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":250:1)
#loc396 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":342:1)
#loc397 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":262:13)
#loc398 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":262:17)
#loc399 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":263:13)
#loc400 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":263:32)
#loc401 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":264:13)
#loc402 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":264:36)
#loc403 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":265:13)
#loc404 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":265:45)
#loc405 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":317:13)
#loc406 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":317:17)
#loc407 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":318:13)
#loc408 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":318:58)
#loc409 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":252:5)
#loc410 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":252:9)
#loc411 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":254:13)
#loc412 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":254:12)
#loc413 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":254:5)
#loc414 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":255:5)
#loc415 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":313:5)
#loc416 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":255:8)
#loc417 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":256:5)
#loc418 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":257:9)
#loc419 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":312:9)
#loc420 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":266:13)
#loc421 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":301:21)
#loc422 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":301:20)
#loc423 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":276:40)
#loc424 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":276:49)
#loc425 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":276:62)
#loc426 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":276:33)
#loc427 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":276:17)
#loc428 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":276:73)
#loc429 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":277:17)
#loc430 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":280:17)
#loc431 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":277:21)
#loc432 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":277:38)
#loc433 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":278:17)
#loc434 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":279:21)
#loc435 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":281:24)
#loc436 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":281:25)
#loc437 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":281:34)
#loc438 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":281:37)
#loc439 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":281:51)
#loc440 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":281:17)
#loc441 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":281:52)
#loc442 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":282:38)
#loc443 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":282:17)
#loc444 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":283:53)
#loc445 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":283:43)
#loc446 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":283:17)
#loc447 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":283:63)
#loc448 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":284:42)
#loc449 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":284:36)
#loc450 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":284:17)
#loc451 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":284:50)
#loc452 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":285:17)
#loc453 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":288:17)
#loc454 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":285:29)
#loc455 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":285:62)
#loc456 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":285:63)
#loc457 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":285:72)
#loc458 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":285:86)
#loc459 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":285:21)
#loc460 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":285:92)
#loc461 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":286:17)
#loc462 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":287:21)
#loc463 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":291:35)
#loc464 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":291:50)
#loc465 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":291:63)
#loc466 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":291:81)
#loc467 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":291:84)
#loc468 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":291:30)
#loc469 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":291:17)
#loc470 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":291:85)
#loc471 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":292:17)
#loc472 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":295:17)
#loc473 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":292:21)
#loc474 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":292:35)
#loc476 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":292:51)
#loc477 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":292:65)
#loc478 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":293:17)
#loc479 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":294:21)
#loc480 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":297:43)
#loc481 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":297:29)
#loc482 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":297:17)
#loc483 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":299:29)
#loc484 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":299:24)
#loc485 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":299:17)
#loc486 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":299:40)
#loc487 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":302:13)
#loc488 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":305:13)
#loc489 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":302:17)
#loc490 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":302:34)
#loc491 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":303:13)
#loc492 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":304:30)
#loc493 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":304:17)
#loc494 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":314:5)
#loc495 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":341:5)
#loc496 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":314:8)
#loc497 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":315:5)
#loc498 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":316:9)
#loc499 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":340:9)
#loc500 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":318:35)
#loc501 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":318:42)
#loc502 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":318:47)
#loc503 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":318:57)
#loc504 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":319:13)
#loc505 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":319:43)
#loc506 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":319:17)
#loc507 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":319:27)
#loc508 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":319:33)
#loc509 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":319:34)
#loc510 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":319:40)
#loc511 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":319:39)
#loc512 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":321:13)
#loc513 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":324:13)
#loc514 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":321:22)
#loc515 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":321:18)
#loc516 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":321:25)
#loc517 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":321:29)
#loc518 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":321:27)
#loc519 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":322:13)
#loc520 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":323:29)
#loc521 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":323:17)
#loc522 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":323:24)
#loc523 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":323:25)
#loc524 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":321:34)
#loc525 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":321:33)
#loc526 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":326:13)
#loc527 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":338:13)
#loc528 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":326:17)
#loc529 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":326:25)
#loc531 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":326:30)
#loc532 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":326:38)
#loc533 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":326:40)
#loc534 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":327:13)
#loc535 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":334:13)
#loc536 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":336:13)
#loc537 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":328:32)
#loc538 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":328:17)
#loc539 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":328:24)
#loc540 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":328:28)
#loc541 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":330:17)
#loc542 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":333:17)
#loc543 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":330:25)
#loc544 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":330:21)
#loc545 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":330:28)
#loc546 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":330:32)
#loc547 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":330:30)
#loc548 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":331:17)
#loc549 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":332:34)
#loc550 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":332:41)
#loc551 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":332:42)
#loc552 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":332:21)
#loc553 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":330:37)
#loc554 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":330:36)
#loc555 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":337:27)
#loc556 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":337:17)
#loc557 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":339:18)
#loc558 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":339:13)
#loc559 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":345:1)
#loc560 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":390:1)
#loc561 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":364:13)
#loc562 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":364:17)
#loc563 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":365:13)
#loc564 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":365:58)
#loc565 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":347:5)
#loc566 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":347:9)
#loc567 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":349:13)
#loc568 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":349:12)
#loc569 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":349:5)
#loc570 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":350:5)
#loc571 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":360:5)
#loc572 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":350:8)
#loc573 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":351:5)
#loc574 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":354:5)
#loc575 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":356:5)
#loc576 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":353:19)
#loc577 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":353:9)
#loc578 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":359:16)
#loc579 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":359:9)
#loc580 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":361:5)
#loc581 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":389:5)
#loc582 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":361:8)
#loc583 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":362:5)
#loc584 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":363:9)
#loc585 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":388:9)
#loc586 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":365:35)
#loc587 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":365:42)
#loc588 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":365:47)
#loc589 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":365:57)
#loc590 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":366:13)
#loc591 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":366:43)
#loc592 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":366:17)
#loc593 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":366:27)
#loc594 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":366:33)
#loc595 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":366:34)
#loc596 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":366:40)
#loc597 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":366:39)
#loc598 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":368:13)
#loc599 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":371:13)
#loc600 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":368:22)
#loc601 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":368:18)
#loc602 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":368:25)
#loc603 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":368:29)
#loc604 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":368:27)
#loc605 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":369:13)
#loc606 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":370:29)
#loc607 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":370:17)
#loc608 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":370:24)
#loc609 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":370:25)
#loc610 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":368:34)
#loc611 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":368:33)
#loc612 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":374:13)
#loc613 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":386:13)
#loc614 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":374:17)
#loc615 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":374:25)
#loc616 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":375:13)
#loc617 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":382:13)
#loc618 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":384:13)
#loc619 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":376:32)
#loc620 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":376:17)
#loc621 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":376:24)
#loc622 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":376:28)
#loc623 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":378:17)
#loc624 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":381:17)
#loc625 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":378:25)
#loc626 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":378:21)
#loc627 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":378:28)
#loc628 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":378:32)
#loc629 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":378:30)
#loc630 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":379:17)
#loc631 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":380:34)
#loc632 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":380:41)
#loc633 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":380:42)
#loc634 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":380:21)
#loc635 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":378:37)
#loc636 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":378:36)
#loc637 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":385:27)
#loc638 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":385:17)
#loc639 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":387:18)
#loc640 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":387:13)
#loc641 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":393:1)
#loc642 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":433:1)
#loc643 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":407:13)
#loc644 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":407:17)
#loc645 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":408:13)
#loc646 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":408:58)
#loc647 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":395:5)
#loc648 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":395:9)
#loc649 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":397:13)
#loc650 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":397:12)
#loc651 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":397:5)
#loc652 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":398:5)
#loc653 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":403:5)
#loc654 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":398:8)
#loc655 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":399:5)
#loc656 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":402:16)
#loc657 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":402:9)
#loc658 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":404:5)
#loc659 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":432:5)
#loc660 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":404:8)
#loc661 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":405:5)
#loc662 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":406:9)
#loc663 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":431:9)
#loc664 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":408:35)
#loc665 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":408:42)
#loc666 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":408:47)
#loc667 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":408:57)
#loc668 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":409:13)
#loc669 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":409:43)
#loc670 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":409:17)
#loc671 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":409:27)
#loc672 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":409:33)
#loc673 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":409:34)
#loc674 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":409:40)
#loc675 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":409:39)
#loc676 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":411:13)
#loc677 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":414:13)
#loc678 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":411:22)
#loc679 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":411:18)
#loc680 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":411:25)
#loc681 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":411:29)
#loc682 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":411:27)
#loc683 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":412:13)
#loc684 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":413:29)
#loc685 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":413:17)
#loc686 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":413:24)
#loc687 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":413:25)
#loc688 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":411:34)
#loc689 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":411:33)
#loc690 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":417:13)
#loc691 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":429:13)
#loc692 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":417:17)
#loc693 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":417:25)
#loc694 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":418:13)
#loc695 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":425:13)
#loc696 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":427:13)
#loc697 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":419:32)
#loc698 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":419:17)
#loc699 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":419:24)
#loc700 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":419:28)
#loc701 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":421:17)
#loc702 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":424:17)
#loc703 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":421:25)
#loc704 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":421:21)
#loc705 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":421:28)
#loc706 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":421:32)
#loc707 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":421:30)
#loc708 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":422:17)
#loc709 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":423:34)
#loc710 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":423:41)
#loc711 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":423:42)
#loc712 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":423:21)
#loc713 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":421:37)
#loc714 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":421:36)
#loc715 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":428:27)
#loc716 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":428:17)
#loc717 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":430:18)
#loc718 = loc("CWE122_Heap_Based_Buffer_Overflow__c_CWE129_connect_socket_04.c":430:13)
#loc719 = loc(fused[#loc1, #loc2])
#loc720 = loc(fused[#loc3, #loc4])
#loc721 = loc(fused[#loc6, #loc7])
#loc722 = loc(fused[#loc8, #loc9])
#loc723 = loc(fused[#loc10, #loc11])
#loc724 = loc(fused[#loc12, #loc13])
#loc725 = loc(fused[#loc14, #loc15])
#loc726 = loc(fused[#loc16, #loc17])
#loc727 = loc(fused[#loc18, #loc19])
#loc728 = loc(fused[#loc20, #loc21])
#loc729 = loc(fused[#loc22, #loc23])
#loc730 = loc(fused[#loc25, #loc26])
#loc731 = loc(fused[#loc27, #loc28])
#loc732 = loc(fused[#loc29, #loc30])
#loc733 = loc(fused[#loc31, #loc32])
#loc734 = loc(fused[#loc33, #loc34])
#loc735 = loc(fused[#loc35, #loc36])
#loc736 = loc(fused[#loc37, #loc38])
#loc737 = loc(fused[#loc39, #loc40])
#loc738 = loc(fused[#loc41, #loc42])
#loc739 = loc(fused[#loc45, #loc43])
#loc740 = loc(fused[#loc46, #loc47])
#loc741 = loc(fused[#loc49, #loc47])
#loc742 = loc(fused[#loc50, #loc51])
#loc743 = loc(fused[#loc52, #loc53])
#loc744 = loc(fused[#loc59, #loc60])
#loc745 = loc(fused[#loc61, #loc62])
#loc746 = loc(fused[#loc63, #loc64])
#loc747 = loc(fused[#loc65, #loc62])
#loc748 = loc(fused[#loc67, #loc68])
#loc749 = loc(fused[#loc70, #loc71])
#loc750 = loc(fused[#loc72, #loc73])
#loc751 = loc(fused[#loc76, #loc74])
#loc752 = loc(fused[#loc80, #loc81])
#loc753 = loc(fused[#loc85, #loc86])
#loc754 = loc(fused[#loc87, #loc88])
#loc755 = loc(fused[#loc90, #loc91])
#loc756 = loc(fused[#loc92, #loc93])
#loc757 = loc(fused[#loc94, #loc95])
#loc758 = loc(fused[#loc96, #loc88])
#loc759 = loc(fused[#loc100, #loc101])
#loc760 = loc(fused[#loc104, #loc105])
#loc761 = loc(fused[#loc106, #loc107])
#loc762 = loc(fused[#loc108, #loc109])
#loc763 = loc(fused[#loc111, #loc112])
#loc764 = loc(fused[#loc113, #loc107])
#loc765 = loc(fused[#loc117, #loc115])
#loc766 = loc(fused[#loc120, #loc121])
#loc767 = loc(fused[#loc122, #loc123])
#loc768 = loc(fused[#loc124, #loc125])
#loc769 = loc(fused[#loc126, #loc123])
#loc770 = loc(fused[#loc129, #loc130])
#loc771 = loc(fused[#loc132, #loc130])
#loc772 = loc(fused[#loc133, #loc134])
#loc773 = loc(fused[#loc137, #loc138])
#loc774 = loc(fused[#loc136, #loc138])
#loc775 = loc(fused[#loc135, #loc40])
#loc776 = loc(fused[#loc139, #loc140])
#loc777 = loc(fused[#loc141, #loc142])
#loc778 = loc(fused[#loc143, #loc140])
#loc779 = loc(fused[#loc147, #loc148])
#loc780 = loc(fused[#loc150, #loc149])
#loc781 = loc(fused[#loc151, #loc152])
#loc782 = loc(fused[#loc154, #loc148])
#loc783 = loc(fused[#loc156, #loc155])
#loc784 = loc(fused[#loc160, #loc159])
#loc785 = loc(fused[#loc161, #loc162])
#loc786 = loc(fused[#loc163, #loc164])
#loc787 = loc(fused[#loc165, #loc166, #loc167, #loc162])
#loc788 = loc(fused[#loc169, #loc168])
#loc789 = loc(fused[#loc172, #loc173])
#loc790 = loc(fused[#loc175, #loc174])
#loc791 = loc(fused[#loc176, #loc177])
#loc792 = loc(fused[#loc179, #loc173])
#loc793 = loc(fused[#loc185, #loc184])
#loc794 = loc(fused[#loc189, #loc190])
#loc795 = loc(fused[#loc191, #loc192])
#loc796 = loc(fused[#loc193, #loc194])
#loc797 = loc(fused[#loc195, #loc196])
#loc798 = loc(fused[#loc197, #loc198])
#loc799 = loc(fused[#loc199, #loc200])
#loc800 = loc(fused[#loc201, #loc202])
#loc801 = loc(fused[#loc207, #loc208])
#loc804 = loc(fused[#loc218, #loc219])
#loc805 = loc(fused[#loc222, #loc223])
#loc806 = loc(fused[#loc226, #loc225])
#loc807 = loc(fused[#loc229, #loc230])
#loc808 = loc(fused[#loc231, #loc232])
#loc809 = loc(fused[#loc233, #loc234])
#loc810 = loc(fused[#loc235, #loc236])
#loc811 = loc(fused[#loc237, #loc238])
#loc812 = loc(fused[#loc239, #loc240])
#loc813 = loc(fused[#loc241, #loc242])
#loc814 = loc(fused[#loc243, #loc244])
#loc815 = loc(fused[#loc247, #loc245])
#loc816 = loc(fused[#loc248, #loc249])
#loc817 = loc(fused[#loc251, #loc249])
#loc818 = loc(fused[#loc252, #loc253])
#loc819 = loc(fused[#loc254, #loc255])
#loc820 = loc(fused[#loc261, #loc262])
#loc821 = loc(fused[#loc263, #loc264])
#loc822 = loc(fused[#loc265, #loc266])
#loc823 = loc(fused[#loc267, #loc264])
#loc824 = loc(fused[#loc269, #loc270])
#loc825 = loc(fused[#loc272, #loc273])
#loc826 = loc(fused[#loc274, #loc275])
#loc827 = loc(fused[#loc277, #loc276])
#loc828 = loc(fused[#loc280, #loc281])
#loc829 = loc(fused[#loc284, #loc285])
#loc830 = loc(fused[#loc286, #loc287])
#loc831 = loc(fused[#loc289, #loc290])
#loc832 = loc(fused[#loc291, #loc292])
#loc833 = loc(fused[#loc293, #loc294])
#loc834 = loc(fused[#loc295, #loc287])
#loc835 = loc(fused[#loc299, #loc300])
#loc836 = loc(fused[#loc303, #loc304])
#loc837 = loc(fused[#loc305, #loc306])
#loc838 = loc(fused[#loc307, #loc308])
#loc839 = loc(fused[#loc310, #loc311])
#loc840 = loc(fused[#loc312, #loc306])
#loc841 = loc(fused[#loc316, #loc314])
#loc842 = loc(fused[#loc319, #loc320])
#loc843 = loc(fused[#loc321, #loc322])
#loc844 = loc(fused[#loc323, #loc324])
#loc845 = loc(fused[#loc325, #loc322])
#loc846 = loc(fused[#loc328, #loc329])
#loc847 = loc(fused[#loc331, #loc332, #loc333, #loc329])
#loc848 = loc(fused[#loc335, #loc336])
#loc849 = loc(fused[#loc339, #loc340])
#loc850 = loc(fused[#loc338, #loc340])
#loc851 = loc(fused[#loc337, #loc242])
#loc852 = loc(fused[#loc341, #loc342])
#loc853 = loc(fused[#loc343, #loc344])
#loc854 = loc(fused[#loc345, #loc342])
#loc855 = loc(fused[#loc349, #loc350])
#loc856 = loc(fused[#loc352, #loc351])
#loc857 = loc(fused[#loc353, #loc354])
#loc858 = loc(fused[#loc356, #loc350])
#loc859 = loc(fused[#loc358, #loc357])
#loc860 = loc(fused[#loc362, #loc361])
#loc861 = loc(fused[#loc363, #loc364])
#loc862 = loc(fused[#loc365, #loc366])
#loc863 = loc(fused[#loc368, #loc370])
#loc864 = loc(fused[#loc371, #loc372, #loc373, #loc364])
#loc865 = loc(fused[#loc375, #loc374])
#loc866 = loc(fused[#loc378, #loc379])
#loc867 = loc(fused[#loc381, #loc380])
#loc868 = loc(fused[#loc382, #loc383])
#loc869 = loc(fused[#loc385, #loc379])
#loc870 = loc(fused[#loc391, #loc390])
#loc871 = loc(fused[#loc395, #loc396])
#loc872 = loc(fused[#loc397, #loc398])
#loc873 = loc(fused[#loc399, #loc400])
#loc874 = loc(fused[#loc401, #loc402])
#loc875 = loc(fused[#loc403, #loc404])
#loc876 = loc(fused[#loc405, #loc406])
#loc877 = loc(fused[#loc407, #loc408])
#loc878 = loc(fused[#loc409, #loc410])
#loc879 = loc(fused[#loc413, #loc411])
#loc880 = loc(fused[#loc414, #loc415])
#loc881 = loc(fused[#loc417, #loc415])
#loc882 = loc(fused[#loc418, #loc419])
#loc883 = loc(fused[#loc420, #loc421])
#loc884 = loc(fused[#loc427, #loc428])
#loc885 = loc(fused[#loc429, #loc430])
#loc886 = loc(fused[#loc431, #loc432])
#loc887 = loc(fused[#loc433, #loc430])
#loc888 = loc(fused[#loc435, #loc436])
#loc889 = loc(fused[#loc438, #loc439])
#loc890 = loc(fused[#loc440, #loc441])
#loc891 = loc(fused[#loc443, #loc442])
#loc892 = loc(fused[#loc446, #loc447])
#loc893 = loc(fused[#loc450, #loc451])
#loc894 = loc(fused[#loc452, #loc453])
#loc895 = loc(fused[#loc455, #loc456])
#loc896 = loc(fused[#loc457, #loc458])
#loc897 = loc(fused[#loc459, #loc460])
#loc898 = loc(fused[#loc461, #loc453])
#loc899 = loc(fused[#loc465, #loc466])
#loc900 = loc(fused[#loc469, #loc470])
#loc901 = loc(fused[#loc471, #loc472])
#loc902 = loc(fused[#loc473, #loc474])
#loc903 = loc(fused[#loc476, #loc477])
#loc904 = loc(fused[#loc478, #loc472])
#loc905 = loc(fused[#loc482, #loc480])
#loc906 = loc(fused[#loc485, #loc486])
#loc907 = loc(fused[#loc487, #loc488])
#loc908 = loc(fused[#loc489, #loc490])
#loc909 = loc(fused[#loc491, #loc488])
#loc910 = loc(fused[#loc494, #loc495])
#loc911 = loc(fused[#loc497, #loc495])
#loc912 = loc(fused[#loc498, #loc499])
#loc913 = loc(fused[#loc502, #loc503])
#loc914 = loc(fused[#loc501, #loc503])
#loc915 = loc(fused[#loc500, #loc408])
#loc916 = loc(fused[#loc504, #loc505])
#loc917 = loc(fused[#loc506, #loc507])
#loc918 = loc(fused[#loc508, #loc505])
#loc919 = loc(fused[#loc512, #loc513])
#loc920 = loc(fused[#loc515, #loc514])
#loc921 = loc(fused[#loc516, #loc517])
#loc922 = loc(fused[#loc519, #loc513])
#loc923 = loc(fused[#loc521, #loc520])
#loc924 = loc(fused[#loc525, #loc524])
#loc925 = loc(fused[#loc526, #loc527])
#loc926 = loc(fused[#loc528, #loc529])
#loc927 = loc(fused[#loc531, #loc533])
#loc928 = loc(fused[#loc534, #loc535, #loc536, #loc527])
#loc929 = loc(fused[#loc538, #loc537])
#loc930 = loc(fused[#loc541, #loc542])
#loc931 = loc(fused[#loc544, #loc543])
#loc932 = loc(fused[#loc545, #loc546])
#loc933 = loc(fused[#loc548, #loc542])
#loc934 = loc(fused[#loc554, #loc553])
#loc935 = loc(fused[#loc559, #loc560])
#loc936 = loc(fused[#loc561, #loc562])
#loc937 = loc(fused[#loc563, #loc564])
#loc938 = loc(fused[#loc565, #loc566])
#loc939 = loc(fused[#loc569, #loc567])
#loc940 = loc(fused[#loc570, #loc571])
#loc941 = loc(fused[#loc573, #loc574, #loc575, #loc571])
#loc942 = loc(fused[#loc579, #loc578])
#loc943 = loc(fused[#loc580, #loc581])
#loc944 = loc(fused[#loc583, #loc581])
#loc945 = loc(fused[#loc584, #loc585])
#loc946 = loc(fused[#loc588, #loc589])
#loc947 = loc(fused[#loc587, #loc589])
#loc948 = loc(fused[#loc586, #loc564])
#loc949 = loc(fused[#loc590, #loc591])
#loc950 = loc(fused[#loc592, #loc593])
#loc951 = loc(fused[#loc594, #loc591])
#loc952 = loc(fused[#loc598, #loc599])
#loc953 = loc(fused[#loc601, #loc600])
#loc954 = loc(fused[#loc602, #loc603])
#loc955 = loc(fused[#loc605, #loc599])
#loc956 = loc(fused[#loc607, #loc606])
#loc957 = loc(fused[#loc611, #loc610])
#loc958 = loc(fused[#loc612, #loc613])
#loc959 = loc(fused[#loc614, #loc615])
#loc960 = loc(fused[#loc616, #loc617, #loc618, #loc613])
#loc961 = loc(fused[#loc620, #loc619])
#loc962 = loc(fused[#loc623, #loc624])
#loc963 = loc(fused[#loc626, #loc625])
#loc964 = loc(fused[#loc627, #loc628])
#loc965 = loc(fused[#loc630, #loc624])
#loc966 = loc(fused[#loc636, #loc635])
#loc967 = loc(fused[#loc641, #loc642])
#loc968 = loc(fused[#loc643, #loc644])
#loc969 = loc(fused[#loc645, #loc646])
#loc970 = loc(fused[#loc647, #loc648])
#loc971 = loc(fused[#loc651, #loc649])
#loc972 = loc(fused[#loc652, #loc653])
#loc973 = loc(fused[#loc655, #loc653])
#loc974 = loc(fused[#loc657, #loc656])
#loc975 = loc(fused[#loc658, #loc659])
#loc976 = loc(fused[#loc661, #loc659])
#loc977 = loc(fused[#loc662, #loc663])
#loc978 = loc(fused[#loc666, #loc667])
#loc979 = loc(fused[#loc665, #loc667])
#loc980 = loc(fused[#loc664, #loc646])
#loc981 = loc(fused[#loc668, #loc669])
#loc982 = loc(fused[#loc670, #loc671])
#loc983 = loc(fused[#loc672, #loc669])
#loc984 = loc(fused[#loc676, #loc677])
#loc985 = loc(fused[#loc679, #loc678])
#loc986 = loc(fused[#loc680, #loc681])
#loc987 = loc(fused[#loc683, #loc677])
#loc988 = loc(fused[#loc685, #loc684])
#loc989 = loc(fused[#loc689, #loc688])
#loc990 = loc(fused[#loc690, #loc691])
#loc991 = loc(fused[#loc692, #loc693])
#loc992 = loc(fused[#loc694, #loc695, #loc696, #loc691])
#loc993 = loc(fused[#loc698, #loc697])
#loc994 = loc(fused[#loc701, #loc702])
#loc995 = loc(fused[#loc704, #loc703])
#loc996 = loc(fused[#loc705, #loc706])
#loc997 = loc(fused[#loc708, #loc702])
#loc998 = loc(fused[#loc714, #loc713])
