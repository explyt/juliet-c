!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!ty__IO_codecvt = !cir.record<struct "_IO_codecvt" incomplete>
!ty__IO_marker = !cir.record<struct "_IO_marker" incomplete>
!ty__IO_wide_data = !cir.record<struct "_IO_wide_data" incomplete>
!u16i = !cir.int<u, 16>
!u64i = !cir.int<u, 64>
!void = !cir.void
#fn_attr = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc10 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":28:15)
#loc11 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":28:19)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":48:20)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":48:24)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":64:20)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":64:24)
#loc61 = loc(fused[#loc10, #loc11])
#loc68 = loc(fused[#loc28, #loc29])
#loc75 = loc(fused[#loc46, #loc47])
!ty__IO_FILE = !cir.record<struct "_IO_FILE" {!s32i, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!s8i>, !cir.ptr<!ty__IO_marker>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !s32i, !s32i, !s64i, !u16i, !s8i, !cir.array<!s8i x 1>, !cir.ptr<!void>, !s64i, !cir.ptr<!ty__IO_codecvt>, !cir.ptr<!ty__IO_wide_data>, !cir.ptr<!cir.record<struct "_IO_FILE">>, !cir.ptr<!void>, !u64i, !s32i, !cir.array<!s8i x 20>} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64, "dlti.mangling_mode" = "e">} {
  cir.global "private" external @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_229badGlobalE : !s32i {alignment = 4 : i64} loc(#loc57)
  cir.func private @__isoc23_fscanf(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i loc(#loc58)
  cir.global "private" external @stdin : !cir.ptr<!ty__IO_FILE> {alignment = 8 : i64} loc(#loc59)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"%d\00" : !cir.array<!s8i x 3>> : !cir.array<!s8i x 3> {alignment = 1 : i64} loc(#loc7)
  cir.func @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_229badSourceEi(%arg0: !s32i loc(fused[#loc10, #loc11])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc61)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc9)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc12)
    cir.scope {
      %4 = cir.get_global @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_229badGlobalE : !cir.ptr<!s32i> loc(#loc57)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc15)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc15)
      cir.if %6 {
        %7 = cir.get_global @__isoc23_fscanf : !cir.ptr<!cir.func<(!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, ...) -> !s32i>> loc(#loc17)
        %8 = cir.get_global @stdin : !cir.ptr<!cir.ptr<!ty__IO_FILE>> loc(#loc59)
        %9 = cir.load %8 : !cir.ptr<!cir.ptr<!ty__IO_FILE>>, !cir.ptr<!ty__IO_FILE> loc(#loc18)
        %10 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 3>> loc(#loc7)
        %11 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 3>>), !cir.ptr<!s8i> loc(#loc7)
        %12 = cir.call @__isoc23_fscanf(%9, %11, %0) : (!cir.ptr<!ty__IO_FILE>, !cir.ptr<!s8i>, !cir.ptr<!s32i>) -> !s32i loc(#loc17)
      } loc(#loc63)
    } loc(#loc62)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc19)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc64)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc64)
    cir.return %3 : !s32i loc(#loc64)
  } loc(#loc60)
  cir.global "private" external @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_2214goodG2B1GlobalE : !s32i {alignment = 4 : i64} loc(#loc65)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc66)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc25)
  cir.func @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_2214goodG2B1SourceEi(%arg0: !s32i loc(fused[#loc28, #loc29])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc68)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc27)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc30)
    cir.scope {
      %4 = cir.get_global @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_2214goodG2B1GlobalE : !cir.ptr<!s32i> loc(#loc65)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc33)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc33)
      cir.if %6 {
        %7 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc25)
        %8 = cir.cast(array_to_ptrdecay, %7 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc25)
        cir.call @printLine(%8) : (!cir.ptr<!s8i>) -> () loc(#loc37)
      } else {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc38)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc71)
      } loc(#loc70)
    } loc(#loc69)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc40)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc72)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc72)
    cir.return %3 : !s32i loc(#loc72)
  } loc(#loc67)
  cir.global "private" external @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_2214goodG2B2GlobalE : !s32i {alignment = 4 : i64} loc(#loc73)
  cir.func @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_2214goodG2B2SourceEi(%arg0: !s32i loc(fused[#loc46, #loc47])) -> !s32i extra(#fn_attr) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data", init] {alignment = 4 : i64} loc(#loc75)
    %1 = cir.alloca !s32i, !cir.ptr<!s32i>, ["__retval"] {alignment = 4 : i64} loc(#loc45)
    cir.store %arg0, %0 : !s32i, !cir.ptr<!s32i> loc(#loc48)
    cir.scope {
      %4 = cir.get_global @_ZN57CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_2214goodG2B2GlobalE : !cir.ptr<!s32i> loc(#loc73)
      %5 = cir.load %4 : !cir.ptr<!s32i>, !s32i loc(#loc51)
      %6 = cir.cast(int_to_bool, %5 : !s32i), !cir.bool loc(#loc51)
      cir.if %6 {
        %7 = cir.const #cir.int<20> : !s32i loc(#loc53)
        cir.store %7, %0 : !s32i, !cir.ptr<!s32i> loc(#loc78)
      } loc(#loc77)
    } loc(#loc76)
    %2 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc55)
    cir.store %2, %1 : !s32i, !cir.ptr<!s32i> loc(#loc79)
    %3 = cir.load %1 : !cir.ptr<!s32i>, !s32i loc(#loc79)
    cir.return %3 : !s32i loc(#loc79)
  } loc(#loc74)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":0:0)
#loc1 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":26:1)
#loc2 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":26:12)
#loc3 = loc("/usr/include/stdio.h":442:1)
#loc4 = loc("/usr/include/stdio.h":444:33)
#loc5 = loc("/usr/include/stdio.h":149:1)
#loc6 = loc("/usr/include/stdio.h":149:14)
#loc7 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":33:23)
#loc8 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":28:1)
#loc9 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":36:1)
#loc12 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":29:1)
#loc13 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":30:5)
#loc14 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":34:5)
#loc15 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":30:8)
#loc16 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":31:5)
#loc17 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":33:9)
#loc18 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":33:16)
#loc19 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":35:12)
#loc20 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":35:5)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":44:1)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":44:12)
#loc23 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc24 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":53:19)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":48:1)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":61:1)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":49:1)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":50:5)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":59:5)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":50:8)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":51:5)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":54:5)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":56:5)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":53:9)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":58:16)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":58:9)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":60:12)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":60:5)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":45:1)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":45:12)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":64:1)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":72:1)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":65:1)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":66:5)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":70:5)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":66:8)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":67:5)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":69:16)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":69:9)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":71:12)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_fscanf_22b.cpp":71:5)
#loc57 = loc(fused[#loc1, #loc2])
#loc58 = loc(fused[#loc3, #loc4])
#loc59 = loc(fused[#loc5, #loc6])
#loc60 = loc(fused[#loc8, #loc9])
#loc62 = loc(fused[#loc13, #loc14])
#loc63 = loc(fused[#loc16, #loc14])
#loc64 = loc(fused[#loc20, #loc19])
#loc65 = loc(fused[#loc21, #loc22])
#loc66 = loc(fused[#loc23, #loc24])
#loc67 = loc(fused[#loc26, #loc27])
#loc69 = loc(fused[#loc31, #loc32])
#loc70 = loc(fused[#loc34, #loc35, #loc36, #loc32])
#loc71 = loc(fused[#loc39, #loc38])
#loc72 = loc(fused[#loc41, #loc40])
#loc73 = loc(fused[#loc42, #loc43])
#loc74 = loc(fused[#loc44, #loc45])
#loc76 = loc(fused[#loc49, #loc50])
#loc77 = loc(fused[#loc52, #loc50])
#loc78 = loc(fused[#loc54, #loc53])
#loc79 = loc(fused[#loc56, #loc55])
