!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!u64i = !cir.int<u, 64>
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#loc7 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":23:79)
#loc8 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":23:96)
#loc48 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":46:83)
#loc49 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":46:100)
#loc90 = loc(fused[#loc7, #loc8])
#loc105 = loc(fused[#loc48, #loc49])
module @"/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<f16 = dense<16> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f128 = dense<128> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @strlen(!cir.ptr<!s8i>) -> !u64i extra(#fn_attr) loc(#loc87)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc88)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b_badSink(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc7, #loc8])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc91)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc92)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc93)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc90)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc94)
    cir.store %arg0, %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc16)
    %5 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc17)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc18)
    %7 = cir.ptr_stride(%5 : !cir.ptr<!cir.ptr<!s8i>>, %6 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc15)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc17)
    cir.store %8, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc94)
    cir.br ^bb1 loc(#loc95)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc91)
    cir.store %9, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc91)
    %10 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc21)
    %11 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc22)
    %12 = cir.call @strlen(%11) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc21)
    cir.store %12, %2 : !u64i, !cir.ptr<!u64i> loc(#loc96)
    cir.br ^bb2 loc(#loc97)
  ^bb2:  // pred: ^bb1
    %13 = cir.const #cir.int<0> : !s32i loc(#loc27)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc27)
    cir.store %14, %1 : !u64i, !cir.ptr<!u64i> loc(#loc98)
    cir.br ^bb3 loc(#loc97)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc29)
    %16 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc30)
    %17 = cir.cmp(lt, %15, %16) : !u64i, !cir.bool loc(#loc99)
    cir.brcond %17 ^bb4, ^bb8 loc(#loc31)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc100)
  ^bb5:  // pred: ^bb4
    %18 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc33)
    %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc34)
    %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc35)
    %21 = cir.load %20 : !cir.ptr<!s8i>, !s8i loc(#loc33)
    %22 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc36)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc37)
    %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !u64i), !cir.ptr<!s8i> loc(#loc37)
    cir.store %21, %24 : !s8i, !cir.ptr<!s8i> loc(#loc101)
    cir.br ^bb6 loc(#loc26)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc26)
  ^bb7:  // pred: ^bb6
    %25 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc38)
    %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc39)
    cir.store %26, %1 : !u64i, !cir.ptr<!u64i> loc(#loc102)
    cir.br ^bb3 loc(#loc97)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc26)
  ^bb9:  // pred: ^bb8
    %27 = cir.const #cir.int<0> : !s32i loc(#loc40)
    %28 = cir.cast(integral, %27 : !s32i), !s8i loc(#loc40)
    %29 = cir.const #cir.int<50> : !s32i loc(#loc41)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc42)
    %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc41)
    %32 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc43)
    %33 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc43)
    cir.store %28, %33 : !s8i, !cir.ptr<!s8i> loc(#loc103)
    %34 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc44)
    cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc45)
    cir.br ^bb10 loc(#loc20)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc6)
  } loc(#loc89)
  cir.func @CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b_goodG2BSink(%arg0: !cir.ptr<!cir.ptr<!s8i>> loc(fused[#loc48, #loc49])) extra(#fn_attr1) {
    %0 = cir.alloca !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>>, ["dest"] {alignment = 16 : i64} loc(#loc106)
    %1 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc107)
    %2 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataLen"] {alignment = 8 : i64} loc(#loc108)
    %3 = cir.alloca !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, ["dataArray", init] {alignment = 8 : i64} loc(#loc105)
    %4 = cir.alloca !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>>, ["data", init] {alignment = 8 : i64} loc(#loc109)
    cir.store %arg0, %3 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>> loc(#loc57)
    %5 = cir.load %3 : !cir.ptr<!cir.ptr<!cir.ptr<!s8i>>>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc58)
    %6 = cir.const #cir.int<2> : !s32i loc(#loc59)
    %7 = cir.ptr_stride(%5 : !cir.ptr<!cir.ptr<!s8i>>, %6 : !s32i), !cir.ptr<!cir.ptr<!s8i>> loc(#loc56)
    %8 = cir.load %7 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc58)
    cir.store %8, %4 : !cir.ptr<!s8i>, !cir.ptr<!cir.ptr<!s8i>> loc(#loc109)
    cir.br ^bb1 loc(#loc110)
  ^bb1:  // pred: ^bb0
    %9 = cir.const #cir.zero : !cir.array<!s8i x 50> loc(#loc106)
    cir.store %9, %0 : !cir.array<!s8i x 50>, !cir.ptr<!cir.array<!s8i x 50>> loc(#loc106)
    %10 = cir.get_global @strlen : !cir.ptr<!cir.func<(!cir.ptr<!s8i>) -> !u64i>> loc(#loc62)
    %11 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc63)
    %12 = cir.call @strlen(%11) : (!cir.ptr<!s8i>) -> !u64i side_effect(pure) extra(#fn_attr) loc(#loc62)
    cir.store %12, %2 : !u64i, !cir.ptr<!u64i> loc(#loc111)
    cir.br ^bb2 loc(#loc112)
  ^bb2:  // pred: ^bb1
    %13 = cir.const #cir.int<0> : !s32i loc(#loc68)
    %14 = cir.cast(integral, %13 : !s32i), !u64i loc(#loc68)
    cir.store %14, %1 : !u64i, !cir.ptr<!u64i> loc(#loc113)
    cir.br ^bb3 loc(#loc112)
  ^bb3:  // 2 preds: ^bb2, ^bb7
    %15 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc70)
    %16 = cir.load %2 : !cir.ptr<!u64i>, !u64i loc(#loc71)
    %17 = cir.cmp(lt, %15, %16) : !u64i, !cir.bool loc(#loc114)
    cir.brcond %17 ^bb4, ^bb8 loc(#loc72)
  ^bb4:  // pred: ^bb3
    cir.br ^bb5 loc(#loc115)
  ^bb5:  // pred: ^bb4
    %18 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc74)
    %19 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc75)
    %20 = cir.ptr_stride(%18 : !cir.ptr<!s8i>, %19 : !u64i), !cir.ptr<!s8i> loc(#loc76)
    %21 = cir.load %20 : !cir.ptr<!s8i>, !s8i loc(#loc74)
    %22 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc77)
    %23 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc78)
    %24 = cir.ptr_stride(%23 : !cir.ptr<!s8i>, %22 : !u64i), !cir.ptr<!s8i> loc(#loc78)
    cir.store %21, %24 : !s8i, !cir.ptr<!s8i> loc(#loc116)
    cir.br ^bb6 loc(#loc67)
  ^bb6:  // pred: ^bb5
    cir.br ^bb7 loc(#loc67)
  ^bb7:  // pred: ^bb6
    %25 = cir.load %1 : !cir.ptr<!u64i>, !u64i loc(#loc79)
    %26 = cir.unary(inc, %25) : !u64i, !u64i loc(#loc80)
    cir.store %26, %1 : !u64i, !cir.ptr<!u64i> loc(#loc117)
    cir.br ^bb3 loc(#loc112)
  ^bb8:  // pred: ^bb3
    cir.br ^bb9 loc(#loc67)
  ^bb9:  // pred: ^bb8
    %27 = cir.const #cir.int<0> : !s32i loc(#loc81)
    %28 = cir.cast(integral, %27 : !s32i), !s8i loc(#loc81)
    %29 = cir.const #cir.int<50> : !s32i loc(#loc82)
    %30 = cir.const #cir.int<1> : !s32i loc(#loc83)
    %31 = cir.binop(sub, %29, %30) nsw : !s32i loc(#loc82)
    %32 = cir.cast(array_to_ptrdecay, %0 : !cir.ptr<!cir.array<!s8i x 50>>), !cir.ptr<!s8i> loc(#loc84)
    %33 = cir.ptr_stride(%32 : !cir.ptr<!s8i>, %31 : !s32i), !cir.ptr<!s8i> loc(#loc84)
    cir.store %28, %33 : !s8i, !cir.ptr<!s8i> loc(#loc118)
    %34 = cir.load %4 : !cir.ptr<!cir.ptr<!s8i>>, !cir.ptr<!s8i> loc(#loc85)
    cir.call @printLine(%34) : (!cir.ptr<!s8i>) -> () loc(#loc86)
    cir.br ^bb10 loc(#loc61)
  ^bb10:  // pred: ^bb9
    cir.return loc(#loc47)
  } loc(#loc104)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE121_Stack_Based_Buffer_Overflow/s06/CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":0:0)
#loc1 = loc("/usr/include/string.h":407:1)
#loc2 = loc("/usr/include/string.h":408:33)
#loc3 = loc("../../../testcasesupport/std_testcase_io.h":14:1)
#loc4 = loc("../../../testcasesupport/std_testcase_io.h":14:33)
#loc5 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":23:1)
#loc6 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":39:1)
#loc9 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":28:9)
#loc10 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":28:25)
#loc11 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":29:9)
#loc12 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":29:16)
#loc13 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":29:19)
#loc14 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":26:5)
#loc15 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":26:30)
#loc16 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":24:1)
#loc17 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":26:19)
#loc18 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":26:29)
#loc19 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":27:5)
#loc20 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":38:5)
#loc21 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":30:19)
#loc22 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":30:26)
#loc23 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":30:9)
#loc24 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":30:30)
#loc25 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":32:9)
#loc26 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":35:9)
#loc27 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":32:18)
#loc28 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":32:14)
#loc29 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":32:21)
#loc30 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":32:25)
#loc31 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":32:23)
#loc32 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":33:9)
#loc33 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":34:23)
#loc34 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":34:28)
#loc35 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":34:29)
#loc36 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":34:18)
#loc37 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":34:13)
#loc38 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":32:35)
#loc39 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":32:34)
#loc40 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":36:22)
#loc41 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":36:14)
#loc42 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":36:17)
#loc43 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":36:9)
#loc44 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":37:19)
#loc45 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":37:9)
#loc46 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":46:1)
#loc47 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":61:1)
#loc50 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":50:9)
#loc51 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":50:25)
#loc52 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":51:9)
#loc53 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":51:16)
#loc54 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":51:19)
#loc55 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":48:5)
#loc56 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":48:30)
#loc57 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":47:1)
#loc58 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":48:19)
#loc59 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":48:29)
#loc60 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":49:5)
#loc61 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":60:5)
#loc62 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":52:19)
#loc63 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":52:26)
#loc64 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":52:9)
#loc65 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":52:30)
#loc66 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":54:9)
#loc67 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":57:9)
#loc68 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":54:18)
#loc69 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":54:14)
#loc70 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":54:21)
#loc71 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":54:25)
#loc72 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":54:23)
#loc73 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":55:9)
#loc74 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":56:23)
#loc75 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":56:28)
#loc76 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":56:29)
#loc77 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":56:18)
#loc78 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":56:13)
#loc79 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":54:35)
#loc80 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":54:34)
#loc81 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":58:22)
#loc82 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":58:14)
#loc83 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":58:17)
#loc84 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":58:9)
#loc85 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":59:19)
#loc86 = loc("CWE121_Stack_Based_Buffer_Overflow__CWE806_char_declare_loop_66b.c":59:9)
#loc87 = loc(fused[#loc1, #loc2])
#loc88 = loc(fused[#loc3, #loc4])
#loc89 = loc(fused[#loc5, #loc6])
#loc91 = loc(fused[#loc9, #loc10])
#loc92 = loc(fused[#loc11, #loc12])
#loc93 = loc(fused[#loc11, #loc13])
#loc94 = loc(fused[#loc14, #loc15])
#loc95 = loc(fused[#loc19, #loc20])
#loc96 = loc(fused[#loc23, #loc24])
#loc97 = loc(fused[#loc25, #loc26])
#loc98 = loc(fused[#loc28, #loc27])
#loc99 = loc(fused[#loc29, #loc30])
#loc100 = loc(fused[#loc32, #loc26])
#loc101 = loc(fused[#loc37, #loc35])
#loc102 = loc(fused[#loc39, #loc38])
#loc103 = loc(fused[#loc43, #loc40])
#loc104 = loc(fused[#loc46, #loc47])
#loc106 = loc(fused[#loc50, #loc51])
#loc107 = loc(fused[#loc52, #loc53])
#loc108 = loc(fused[#loc52, #loc54])
#loc109 = loc(fused[#loc55, #loc56])
#loc110 = loc(fused[#loc60, #loc61])
#loc111 = loc(fused[#loc64, #loc65])
#loc112 = loc(fused[#loc66, #loc67])
#loc113 = loc(fused[#loc69, #loc68])
#loc114 = loc(fused[#loc70, #loc71])
#loc115 = loc(fused[#loc73, #loc67])
#loc116 = loc(fused[#loc78, #loc76])
#loc117 = loc(fused[#loc80, #loc79])
#loc118 = loc(fused[#loc84, #loc81])
