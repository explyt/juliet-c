!s32i = !cir.int<s, 32>
!s8i = !cir.int<s, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({inline = #cir.inline<no>, nothrow = #cir.nothrow, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty__twoIntsStruct = !cir.record<struct "_twoIntsStruct" {!s32i, !s32i} #cir.record.decl.ast>
module @"/workspaces/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__binary_if_02.c" attributes {cir.lang = #cir.lang<c>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<i128 = dense<128> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.stack_alignment" = 128 : i64, "dlti.endianness" = "little">} {
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc79)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"intOne == 5\00" : !cir.array<!s8i x 12>> : !cir.array<!s8i x 12> {alignment = 1 : i64} loc(#loc3)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__binary_if_02_bad() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc8)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc8)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["twoIntsStructPointer", init] {alignment = 8 : i64} loc(#loc84)
          %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc13)
          cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc84)
          cir.scope {
            %4 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc16)
            %5 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc17)
            %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc17)
            %7 = cir.cmp(ne, %4, %6) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc86)
            %8 = cir.cast(bool_to_int, %7 : !cir.bool), !s32i loc(#loc86)
            %9 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc18)
            %10 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc19)
            %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc20)
            %12 = cir.const #cir.int<5> : !s32i loc(#loc21)
            %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc87)
            %14 = cir.cast(bool_to_int, %13 : !cir.bool), !s32i loc(#loc87)
            %15 = cir.binop(and, %8, %14) : !s32i loc(#loc88)
            %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc24)
            cir.if %16 {
              %17 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc3)
              %18 = cir.cast(array_to_ptrdecay, %17 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc3)
              cir.call @printLine(%18) : (!cir.ptr<!s8i>) -> () loc(#loc26)
            } loc(#loc89)
          } loc(#loc85)
        } loc(#loc83)
      } loc(#loc82)
    } loc(#loc81)
    cir.return loc(#loc5)
  } loc(#loc80)
  cir.func no_proto @CWE476_NULL_Pointer_Dereference__binary_if_02_good() extra(#fn_attr) {
    %0 = cir.get_global @good1 : !cir.ptr<!cir.func<()>> loc(#loc91)
    cir.call %0() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc29)
    %1 = cir.get_global @good2 : !cir.ptr<!cir.func<()>> loc(#loc92)
    cir.call %1() : (!cir.ptr<!cir.func<()>>) -> () loc(#loc31)
    cir.return loc(#loc28)
  } loc(#loc90)
  cir.global "private" constant cir_private dsolocal @".str.1" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc33)
  cir.func no_proto internal private @good1() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<0> : !s32i loc(#loc38)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc38)
      cir.if %1 {
        %2 = cir.get_global @".str.1" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc33)
        %3 = cir.cast(array_to_ptrdecay, %2 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc33)
        cir.call @printLine(%3) : (!cir.ptr<!s8i>) -> () loc(#loc42)
      } else {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["twoIntsStructPointer", init] {alignment = 8 : i64} loc(#loc97)
          %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc46)
          cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc97)
          cir.scope {
            %4 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc49)
            %5 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc50)
            %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc50)
            %7 = cir.cmp(ne, %4, %6) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc99)
            %8 = cir.ternary(%7, true {
              %9 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc52)
              %10 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc19)
              %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc53)
              %12 = cir.const #cir.int<5> : !s32i loc(#loc54)
              %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc100)
              %14 = cir.ternary(%13, true {
                %15 = cir.const #true loc(#loc51)
                cir.yield %15 : !cir.bool loc(#loc51)
              }, false {
                %15 = cir.const #false loc(#loc51)
                cir.yield %15 : !cir.bool loc(#loc51)
              }) : (!cir.bool) -> !cir.bool loc(#loc51)
              cir.yield %14 : !cir.bool loc(#loc51)
            }, false {
              %9 = cir.const #false loc(#loc51)
              cir.yield %9 : !cir.bool loc(#loc51)
            }) : (!cir.bool) -> !cir.bool loc(#loc51)
            cir.if %8 {
              %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc56)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc56)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc57)
            } loc(#loc101)
          } loc(#loc98)
        } loc(#loc96)
      } loc(#loc95)
    } loc(#loc94)
    cir.return loc(#loc35)
  } loc(#loc93)
  cir.func no_proto internal private @good2() extra(#fn_attr) {
    cir.scope {
      %0 = cir.const #cir.int<1> : !s32i loc(#loc62)
      %1 = cir.cast(int_to_bool, %0 : !s32i), !cir.bool loc(#loc62)
      cir.if %1 {
        cir.scope {
          %2 = cir.alloca !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, ["twoIntsStructPointer", init] {alignment = 8 : i64} loc(#loc106)
          %3 = cir.const #cir.ptr<null> : !cir.ptr<!ty__twoIntsStruct> loc(#loc67)
          cir.store %3, %2 : !cir.ptr<!ty__twoIntsStruct>, !cir.ptr<!cir.ptr<!ty__twoIntsStruct>> loc(#loc106)
          cir.scope {
            %4 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc70)
            %5 = cir.const #cir.ptr<null> : !cir.ptr<!void> loc(#loc71)
            %6 = cir.cast(bitcast, %5 : !cir.ptr<!void>), !cir.ptr<!ty__twoIntsStruct> loc(#loc71)
            %7 = cir.cmp(ne, %4, %6) : !cir.ptr<!ty__twoIntsStruct>, !cir.bool loc(#loc108)
            %8 = cir.ternary(%7, true {
              %9 = cir.load %2 : !cir.ptr<!cir.ptr<!ty__twoIntsStruct>>, !cir.ptr<!ty__twoIntsStruct> loc(#loc73)
              %10 = cir.get_member %9[0] {name = "intOne"} : !cir.ptr<!ty__twoIntsStruct> -> !cir.ptr<!s32i> loc(#loc19)
              %11 = cir.load %10 : !cir.ptr<!s32i>, !s32i loc(#loc74)
              %12 = cir.const #cir.int<5> : !s32i loc(#loc75)
              %13 = cir.cmp(eq, %11, %12) : !s32i, !cir.bool loc(#loc109)
              %14 = cir.ternary(%13, true {
                %15 = cir.const #true loc(#loc72)
                cir.yield %15 : !cir.bool loc(#loc72)
              }, false {
                %15 = cir.const #false loc(#loc72)
                cir.yield %15 : !cir.bool loc(#loc72)
              }) : (!cir.bool) -> !cir.bool loc(#loc72)
              cir.yield %14 : !cir.bool loc(#loc72)
            }, false {
              %9 = cir.const #false loc(#loc72)
              cir.yield %9 : !cir.bool loc(#loc72)
            }) : (!cir.bool) -> !cir.bool loc(#loc72)
            cir.if %8 {
              %9 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 12>> loc(#loc77)
              %10 = cir.cast(array_to_ptrdecay, %9 : !cir.ptr<!cir.array<!s8i x 12>>), !cir.ptr<!s8i> loc(#loc77)
              cir.call @printLine(%10) : (!cir.ptr<!s8i>) -> () loc(#loc78)
            } loc(#loc110)
          } loc(#loc107)
        } loc(#loc105)
      } loc(#loc104)
    } loc(#loc103)
    cir.return loc(#loc59)
  } loc(#loc102)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE476_NULL_Pointer_Dereference/CWE476_NULL_Pointer_Dereference__binary_if_02.c":0:0)
#loc1 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc2 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc3 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":30:27)
#loc4 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":20:1)
#loc5 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":34:1)
#loc6 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":22:5)
#loc7 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":33:5)
#loc8 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":22:8)
#loc9 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":23:5)
#loc10 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":24:9)
#loc11 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":32:9)
#loc12 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":25:13)
#loc13 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":25:51)
#loc14 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":28:13)
#loc15 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":31:13)
#loc16 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":28:18)
#loc17 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":28:42)
#loc18 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":28:51)
#loc19 = loc("../../testcasesupport/std_testcase.h":98:9)
#loc20 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":28:73)
#loc21 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":28:83)
#loc22 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":28:17)
#loc23 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":28:84)
#loc24 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":28:48)
#loc25 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":29:13)
#loc26 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":30:17)
#loc27 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":79:1)
#loc28 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":83:1)
#loc29 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":81:5)
#loc30 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":81:11)
#loc31 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":82:5)
#loc32 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":82:11)
#loc33 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":46:19)
#loc34 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":41:1)
#loc35 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":60:1)
#loc36 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":43:5)
#loc37 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":59:5)
#loc38 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":43:8)
#loc39 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":44:5)
#loc40 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":47:5)
#loc41 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":49:5)
#loc42 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":46:9)
#loc43 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":50:9)
#loc44 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":58:9)
#loc45 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":51:13)
#loc46 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":51:51)
#loc47 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":54:13)
#loc48 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":57:13)
#loc49 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":54:18)
#loc50 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":54:42)
#loc51 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":54:48)
#loc52 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":54:52)
#loc53 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":54:74)
#loc54 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":54:84)
#loc55 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":55:13)
#loc56 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":56:27)
#loc57 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":56:17)
#loc58 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":63:1)
#loc59 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":77:1)
#loc60 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":65:5)
#loc61 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":76:5)
#loc62 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":65:8)
#loc63 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":66:5)
#loc64 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":67:9)
#loc65 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":75:9)
#loc66 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":68:13)
#loc67 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":68:51)
#loc68 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":71:13)
#loc69 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":74:13)
#loc70 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":71:18)
#loc71 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":71:42)
#loc72 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":71:48)
#loc73 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":71:52)
#loc74 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":71:74)
#loc75 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":71:84)
#loc76 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":72:13)
#loc77 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":73:27)
#loc78 = loc("CWE476_NULL_Pointer_Dereference__binary_if_02.c":73:17)
#loc79 = loc(fused[#loc1, #loc2])
#loc80 = loc(fused[#loc4, #loc5])
#loc81 = loc(fused[#loc6, #loc7])
#loc82 = loc(fused[#loc9, #loc7])
#loc83 = loc(fused[#loc10, #loc11])
#loc84 = loc(fused[#loc12, #loc13])
#loc85 = loc(fused[#loc14, #loc15])
#loc86 = loc(fused[#loc16, #loc17])
#loc87 = loc(fused[#loc18, #loc21])
#loc88 = loc(fused[#loc22, #loc23])
#loc89 = loc(fused[#loc25, #loc15])
#loc90 = loc(fused[#loc27, #loc28])
#loc91 = loc(fused[#loc29, #loc30])
#loc92 = loc(fused[#loc31, #loc32])
#loc93 = loc(fused[#loc34, #loc35])
#loc94 = loc(fused[#loc36, #loc37])
#loc95 = loc(fused[#loc39, #loc40, #loc41, #loc37])
#loc96 = loc(fused[#loc43, #loc44])
#loc97 = loc(fused[#loc45, #loc46])
#loc98 = loc(fused[#loc47, #loc48])
#loc99 = loc(fused[#loc49, #loc50])
#loc100 = loc(fused[#loc52, #loc54])
#loc101 = loc(fused[#loc55, #loc48])
#loc102 = loc(fused[#loc58, #loc59])
#loc103 = loc(fused[#loc60, #loc61])
#loc104 = loc(fused[#loc63, #loc61])
#loc105 = loc(fused[#loc64, #loc65])
#loc106 = loc(fused[#loc66, #loc67])
#loc107 = loc(fused[#loc68, #loc69])
#loc108 = loc(fused[#loc70, #loc71])
#loc109 = loc(fused[#loc73, #loc75])
#loc110 = loc(fused[#loc76, #loc69])
