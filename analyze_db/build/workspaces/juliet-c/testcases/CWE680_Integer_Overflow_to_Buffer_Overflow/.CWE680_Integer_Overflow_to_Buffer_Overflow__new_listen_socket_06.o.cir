!s32i = !cir.int<s, 32>
!s64i = !cir.int<s, 64>
!s8i = !cir.int<s, 8>
!u16i = !cir.int<u, 16>
!u32i = !cir.int<u, 32>
!u64i = !cir.int<u, 64>
!u8i = !cir.int<u, 8>
!void = !cir.void
#false = #cir.bool<false> : !cir.bool
#fn_attr = #cir<extra({nothrow = #cir.nothrow})>
#fn_attr1 = #cir<extra({inline = #cir.inline<no>, optnone = #cir.optnone, uwtable = #cir.uwtable<async>})>
#true = #cir.bool<true> : !cir.bool
!ty_in_addr = !cir.record<struct "in_addr" {!u32i} #cir.record.decl.ast>
!ty_sockaddr = !cir.record<struct "sockaddr" {!u16i, !cir.array<!s8i x 14>} #cir.record.decl.ast>
!ty_sockaddr_in = !cir.record<struct "sockaddr_in" {!u16i, !u16i, !ty_in_addr, !cir.array<!u8i x 8>}>
module @"/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp" attributes {cir.lang = #cir.lang<cxx>, cir.sob = #cir.signed_overflow_behavior<undefined>, cir.triple = "x86_64-unknown-linux-gnu", cir.type_size_info = #cir.type_size_info<char = 8, int = 32, size_t = 64>, cir.uwtable = #cir.uwtable<async>, dlti.dl_spec = #dlti.dl_spec<!llvm.ptr<270> = dense<32> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, f80 = dense<128> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i1 = dense<8> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, i16 = dense<16> : vector<2xi64>, "dlti.mangling_mode" = "e", "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>} {
  cir.func private @socket(!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc290)
  cir.func private @htons(!u16i) -> !u16i extra(#fn_attr) loc(#loc291)
  cir.func private @bind(!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc292)
  cir.func private @listen(!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc293)
  cir.func private @accept(!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc294)
  cir.func private @recv(!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc295)
  cir.func private @atoi(!cir.ptr<!s8i>) -> !s32i extra(#fn_attr) loc(#loc296)
  cir.func private @close(!s32i) -> !s32i loc(#loc297)
  cir.func private @_Znam(!u64i) -> !cir.ptr<!void> loc(#loc298)
  cir.func private @printIntLine(!s32i) loc(#loc299)
  cir.func @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_063badEv() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc301)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc25)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc26)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc302)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc30)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc31)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc304)
      cir.if %5 {
        cir.scope {
          %6 = cir.alloca !s32i, !cir.ptr<!s32i>, ["recvResult"] {alignment = 4 : i64} loc(#loc307)
          %7 = cir.alloca !ty_sockaddr_in, !cir.ptr<!ty_sockaddr_in>, ["service"] {alignment = 4 : i64} loc(#loc308)
          %8 = cir.alloca !s32i, !cir.ptr<!s32i>, ["listenSocket", init] {alignment = 4 : i64} loc(#loc309)
          %9 = cir.alloca !s32i, !cir.ptr<!s32i>, ["acceptSocket", init] {alignment = 4 : i64} loc(#loc310)
          %10 = cir.alloca !cir.array<!s8i x 14>, !cir.ptr<!cir.array<!s8i x 14>>, ["inputBuffer"] {alignment = 1 : i64} loc(#loc311)
          %11 = cir.const #cir.int<1> : !s32i loc(#loc40)
          %12 = cir.unary(minus, %11) nsw : !s32i, !s32i loc(#loc40)
          cir.store %12, %8 : !s32i, !cir.ptr<!s32i> loc(#loc309)
          %13 = cir.const #cir.int<1> : !s32i loc(#loc42)
          %14 = cir.unary(minus, %13) nsw : !s32i, !s32i loc(#loc42)
          cir.store %14, %9 : !s32i, !cir.ptr<!s32i> loc(#loc310)
          cir.scope {
            cir.do {
              cir.scope {
                %15 = cir.const #cir.int<2> : !s32i loc(#loc49)
                %16 = cir.const #cir.int<1> : !u32i loc(#loc50)
                %17 = cir.cast(integral, %16 : !u32i), !s32i loc(#loc50)
                %18 = cir.const #cir.int<6> : !u32i loc(#loc51)
                %19 = cir.cast(integral, %18 : !u32i), !s32i loc(#loc51)
                %20 = cir.call @socket(%15, %17, %19) : (!s32i, !s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc52)
                cir.store %20, %8 : !s32i, !cir.ptr<!s32i> loc(#loc314)
                cir.scope {
                  %61 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc57)
                  %62 = cir.const #cir.int<1> : !s32i loc(#loc58)
                  %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc58)
                  %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc316)
                  cir.if %64 {
                    cir.break loc(#loc60)
                  } loc(#loc317)
                } loc(#loc315)
                %21 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!void> loc(#loc318)
                %22 = cir.const #cir.int<0> : !s32i loc(#loc63)
                %23 = cir.const #cir.int<16> : !u64i loc(#loc319)
                cir.libc.memset %23 bytes from %21 set to %22 : !cir.ptr<!void>, !s32i, !u64i loc(#loc320)
                %24 = cir.const #cir.int<2> : !s32i loc(#loc68)
                %25 = cir.cast(integral, %24 : !s32i), !u16i loc(#loc68)
                %26 = cir.get_member %7[0] {name = "sin_family"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc69)
                cir.store %25, %26 : !u16i, !cir.ptr<!u16i> loc(#loc321)
                %27 = cir.const #cir.int<0> : !s32i loc(#loc71)
                %28 = cir.cast(integral, %27 : !s32i), !u32i loc(#loc71)
                %29 = cir.get_member %7[2] {name = "sin_addr"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!ty_in_addr> loc(#loc72)
                %30 = cir.get_member %29[0] {name = "s_addr"} : !cir.ptr<!ty_in_addr> -> !cir.ptr<!u32i> loc(#loc73)
                cir.store %28, %30 : !u32i, !cir.ptr<!u32i> loc(#loc322)
                %31 = cir.const #cir.int<27015> : !s32i loc(#loc75)
                %32 = cir.cast(integral, %31 : !s32i), !u16i loc(#loc75)
                %33 = cir.call @htons(%32) : (!u16i) -> !u16i side_effect(const) extra(#fn_attr) loc(#loc76)
                %34 = cir.get_member %7[1] {name = "sin_port"} : !cir.ptr<!ty_sockaddr_in> -> !cir.ptr<!u16i> loc(#loc77)
                cir.store %33, %34 : !u16i, !cir.ptr<!u16i> loc(#loc323)
                cir.scope {
                  %61 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc82)
                  %62 = cir.cast(bitcast, %7 : !cir.ptr<!ty_sockaddr_in>), !cir.ptr<!ty_sockaddr> loc(#loc325)
                  %63 = cir.const #cir.int<16> : !u64i loc(#loc326)
                  %64 = cir.cast(integral, %63 : !u64i), !u32i loc(#loc326)
                  %65 = cir.call @bind(%61, %62, %64) : (!s32i, !cir.ptr<!ty_sockaddr>, !u32i) -> !s32i extra(#fn_attr) loc(#loc87)
                  %66 = cir.const #cir.int<1> : !s32i loc(#loc88)
                  %67 = cir.unary(minus, %66) nsw : !s32i, !s32i loc(#loc88)
                  %68 = cir.cmp(eq, %65, %67) : !s32i, !cir.bool loc(#loc327)
                  cir.if %68 {
                    cir.break loc(#loc90)
                  } loc(#loc328)
                } loc(#loc324)
                cir.scope {
                  %61 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc93)
                  %62 = cir.const #cir.int<5> : !s32i loc(#loc94)
                  %63 = cir.call @listen(%61, %62) : (!s32i, !s32i) -> !s32i extra(#fn_attr) loc(#loc95)
                  %64 = cir.const #cir.int<1> : !s32i loc(#loc96)
                  %65 = cir.unary(minus, %64) nsw : !s32i, !s32i loc(#loc96)
                  %66 = cir.cmp(eq, %63, %65) : !s32i, !cir.bool loc(#loc330)
                  cir.if %66 {
                    cir.break loc(#loc98)
                  } loc(#loc331)
                } loc(#loc329)
                %35 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc99)
                %36 = cir.const #cir.ptr<null> : !cir.ptr<!ty_sockaddr> loc(#loc100)
                %37 = cir.const #cir.ptr<null> : !cir.ptr<!u32i> loc(#loc101)
                %38 = cir.call @accept(%35, %36, %37) : (!s32i, !cir.ptr<!ty_sockaddr>, !cir.ptr<!u32i>) -> !s32i loc(#loc102)
                cir.store %38, %9 : !s32i, !cir.ptr<!s32i> loc(#loc332)
                cir.scope {
                  %61 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc107)
                  %62 = cir.const #cir.int<1> : !s32i loc(#loc108)
                  %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc108)
                  %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc334)
                  cir.if %64 {
                    cir.break loc(#loc110)
                  } loc(#loc335)
                } loc(#loc333)
                %39 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc111)
                %40 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc112)
                %41 = cir.cast(bitcast, %40 : !cir.ptr<!s8i>), !cir.ptr<!void> loc(#loc112)
                %42 = cir.const #cir.int<3> : !s32i loc(#loc113)
                %43 = cir.cast(integral, %42 : !s32i), !u64i loc(#loc113)
                %44 = cir.const #cir.int<4> : !u64i loc(#loc113)
                %45 = cir.binop(mul, %43, %44) : !u64i loc(#loc113)
                %46 = cir.const #cir.int<2> : !s32i loc(#loc113)
                %47 = cir.cast(integral, %46 : !s32i), !u64i loc(#loc113)
                %48 = cir.binop(add, %45, %47) : !u64i loc(#loc113)
                %49 = cir.const #cir.int<1> : !s32i loc(#loc114)
                %50 = cir.cast(integral, %49 : !s32i), !u64i loc(#loc114)
                %51 = cir.binop(sub, %48, %50) : !u64i loc(#loc336)
                %52 = cir.const #cir.int<0> : !s32i loc(#loc115)
                %53 = cir.call @recv(%39, %41, %51, %52) : (!s32i, !cir.ptr<!void>, !u64i, !s32i) -> !s64i loc(#loc116)
                %54 = cir.cast(integral, %53 : !s64i), !s32i loc(#loc116)
                cir.store %54, %6 : !s32i, !cir.ptr<!s32i> loc(#loc337)
                cir.scope {
                  %61 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc121)
                  %62 = cir.const #cir.int<1> : !s32i loc(#loc122)
                  %63 = cir.unary(minus, %62) nsw : !s32i, !s32i loc(#loc122)
                  %64 = cir.cmp(eq, %61, %63) : !s32i, !cir.bool loc(#loc339)
                  %65 = cir.ternary(%64, true {
                    %66 = cir.const #true loc(#loc123)
                    cir.yield %66 : !cir.bool loc(#loc123)
                  }, false {
                    %66 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc124)
                    %67 = cir.const #cir.int<0> : !s32i loc(#loc125)
                    %68 = cir.cmp(eq, %66, %67) : !s32i, !cir.bool loc(#loc340)
                    %69 = cir.ternary(%68, true {
                      %70 = cir.const #true loc(#loc123)
                      cir.yield %70 : !cir.bool loc(#loc123)
                    }, false {
                      %70 = cir.const #false loc(#loc123)
                      cir.yield %70 : !cir.bool loc(#loc123)
                    }) : (!cir.bool) -> !cir.bool loc(#loc123)
                    cir.yield %69 : !cir.bool loc(#loc123)
                  }) : (!cir.bool) -> !cir.bool loc(#loc123)
                  cir.if %65 {
                    cir.break loc(#loc127)
                  } loc(#loc341)
                } loc(#loc338)
                %55 = cir.const #cir.int<0> : !s8i loc(#loc128)
                %56 = cir.load %6 : !cir.ptr<!s32i>, !s32i loc(#loc129)
                %57 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc130)
                %58 = cir.ptr_stride(%57 : !cir.ptr<!s8i>, %56 : !s32i), !cir.ptr<!s8i> loc(#loc130)
                cir.store %55, %58 : !s8i, !cir.ptr<!s8i> loc(#loc342)
                %59 = cir.cast(array_to_ptrdecay, %10 : !cir.ptr<!cir.array<!s8i x 14>>), !cir.ptr<!s8i> loc(#loc131)
                %60 = cir.call @atoi(%59) : (!cir.ptr<!s8i>) -> !s32i side_effect(pure) extra(#fn_attr) loc(#loc132)
                cir.store %60, %0 : !s32i, !cir.ptr<!s32i> loc(#loc343)
              } loc(#loc313)
              cir.yield loc(#loc46)
            } while {
              %15 = cir.const #cir.int<0> : !s32i loc(#loc135)
              %16 = cir.cast(int_to_bool, %15 : !s32i), !cir.bool loc(#loc135)
              cir.condition(%16) loc(#loc135)
            } loc(#loc312)
          } loc(#loc312)
          cir.scope {
            %15 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc138)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc139)
            %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc139)
            %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc345)
            cir.if %18 {
              %19 = cir.load %8 : !cir.ptr<!s32i>, !s32i loc(#loc141)
              %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc142)
            } loc(#loc346)
          } loc(#loc344)
          cir.scope {
            %15 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc145)
            %16 = cir.const #cir.int<1> : !s32i loc(#loc146)
            %17 = cir.unary(minus, %16) nsw : !s32i, !s32i loc(#loc146)
            %18 = cir.cmp(ne, %15, %17) : !s32i, !cir.bool loc(#loc348)
            cir.if %18 {
              %19 = cir.load %9 : !cir.ptr<!s32i>, !s32i loc(#loc148)
              %20 = cir.call @close(%19) : (!s32i) -> !s32i loc(#loc149)
            } loc(#loc349)
          } loc(#loc347)
        } loc(#loc306)
      } loc(#loc305)
    } loc(#loc303)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc351)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc352)
      %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc353)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc157)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc157)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc354)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc355)
      cir.store %9, %3 : !u64i, !cir.ptr<!u64i> loc(#loc356)
      %10 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc161)
      %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc162)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc357)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc357)
      cir.store %13, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc358)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc168)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc168)
        cir.store %20, %4 : !u64i, !cir.ptr<!u64i> loc(#loc360)
        cir.for : cond {
          %21 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc170)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc171)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc171)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc361)
          cir.condition(%24) loc(#loc361)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc173)
            %22 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc174)
            %23 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc175)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc176)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc363)
          } loc(#loc362)
          cir.yield loc(#loc167)
        } step {
          %21 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc177)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc178)
          cir.store %22, %4 : !u64i, !cir.ptr<!u64i> loc(#loc364)
          cir.yield loc(#loc359)
        } loc(#loc359)
      } loc(#loc359)
      %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc179)
      %15 = cir.const #cir.int<0> : !s32i loc(#loc180)
      %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc181)
      %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc179)
      cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc182)
      %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc183)
      cir.delete.array %18 : <!s32i> loc(#loc183)
    } loc(#loc350)
    cir.return loc(#loc22)
  } loc(#loc300)
  cir.func private @printLine(!cir.ptr<!s8i>) loc(#loc365)
  cir.global "private" constant cir_private dsolocal @".str" = #cir.const_array<"Benign, fixed string\00" : !cir.array<!s8i x 21>> : !cir.array<!s8i x 21> {alignment = 1 : i64} loc(#loc186)
  cir.func internal private @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06L8goodG2B1Ev() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc367)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc191)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc192)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc368)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc196)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc197)
      %5 = cir.cmp(ne, %3, %4) : !s32i, !cir.bool loc(#loc370)
      cir.if %5 {
        %6 = cir.get_global @".str" : !cir.ptr<!cir.array<!s8i x 21>> loc(#loc186)
        %7 = cir.cast(array_to_ptrdecay, %6 : !cir.ptr<!cir.array<!s8i x 21>>), !cir.ptr<!s8i> loc(#loc186)
        cir.call @printLine(%7) : (!cir.ptr<!s8i>) -> () loc(#loc201)
      } else {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc202)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc372)
      } loc(#loc371)
    } loc(#loc369)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc374)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc375)
      %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc376)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc211)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc211)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc377)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc378)
      cir.store %9, %3 : !u64i, !cir.ptr<!u64i> loc(#loc379)
      %10 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc215)
      %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc216)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc380)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc380)
      cir.store %13, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc381)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc222)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc222)
        cir.store %20, %4 : !u64i, !cir.ptr<!u64i> loc(#loc383)
        cir.for : cond {
          %21 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc224)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc225)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc225)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc384)
          cir.condition(%24) loc(#loc384)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc227)
            %22 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc228)
            %23 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc229)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc230)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc386)
          } loc(#loc385)
          cir.yield loc(#loc221)
        } step {
          %21 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc231)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc232)
          cir.store %22, %4 : !u64i, !cir.ptr<!u64i> loc(#loc387)
          cir.yield loc(#loc382)
        } loc(#loc382)
      } loc(#loc382)
      %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc233)
      %15 = cir.const #cir.int<0> : !s32i loc(#loc234)
      %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc235)
      %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc233)
      cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc236)
      %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc237)
      cir.delete.array %18 : <!s32i> loc(#loc237)
    } loc(#loc373)
    cir.return loc(#loc188)
  } loc(#loc366)
  cir.func internal private @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06L8goodG2B2Ev() extra(#fn_attr1) {
    %0 = cir.alloca !s32i, !cir.ptr<!s32i>, ["data"] {alignment = 4 : i64} loc(#loc389)
    %1 = cir.const #cir.int<1> : !s32i loc(#loc242)
    %2 = cir.unary(minus, %1) nsw : !s32i, !s32i loc(#loc243)
    cir.store %2, %0 : !s32i, !cir.ptr<!s32i> loc(#loc390)
    cir.scope {
      %3 = cir.const #cir.int<5> : !s32i loc(#loc247)
      %4 = cir.const #cir.int<5> : !s32i loc(#loc248)
      %5 = cir.cmp(eq, %3, %4) : !s32i, !cir.bool loc(#loc392)
      cir.if %5 {
        %6 = cir.const #cir.int<20> : !s32i loc(#loc250)
        cir.store %6, %0 : !s32i, !cir.ptr<!s32i> loc(#loc394)
      } loc(#loc393)
    } loc(#loc391)
    cir.scope {
      %3 = cir.alloca !u64i, !cir.ptr<!u64i>, ["dataBytes"] {alignment = 8 : i64} loc(#loc396)
      %4 = cir.alloca !u64i, !cir.ptr<!u64i>, ["i"] {alignment = 8 : i64} loc(#loc397)
      %5 = cir.alloca !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>>, ["intPointer"] {alignment = 8 : i64} loc(#loc398)
      %6 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc259)
      %7 = cir.cast(integral, %6 : !s32i), !u64i loc(#loc259)
      %8 = cir.const #cir.int<4> : !u64i loc(#loc399)
      %9 = cir.binop(mul, %7, %8) : !u64i loc(#loc400)
      cir.store %9, %3 : !u64i, !cir.ptr<!u64i> loc(#loc401)
      %10 = cir.load %3 : !cir.ptr<!u64i>, !u64i loc(#loc263)
      %11 = cir.call @_Znam(%10) : (!u64i) -> !cir.ptr<!void> loc(#loc264)
      %12 = cir.cast(bitcast, %11 : !cir.ptr<!void>), !cir.ptr<!s8i> loc(#loc402)
      %13 = cir.cast(bitcast, %12 : !cir.ptr<!s8i>), !cir.ptr<!s32i> loc(#loc402)
      cir.store %13, %5 : !cir.ptr<!s32i>, !cir.ptr<!cir.ptr<!s32i>> loc(#loc403)
      cir.scope {
        %19 = cir.const #cir.int<0> : !s32i loc(#loc270)
        %20 = cir.cast(integral, %19 : !s32i), !u64i loc(#loc270)
        cir.store %20, %4 : !u64i, !cir.ptr<!u64i> loc(#loc405)
        cir.for : cond {
          %21 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc272)
          %22 = cir.load %0 : !cir.ptr<!s32i>, !s32i loc(#loc273)
          %23 = cir.cast(integral, %22 : !s32i), !u64i loc(#loc273)
          %24 = cir.cmp(lt, %21, %23) : !u64i, !cir.bool loc(#loc406)
          cir.condition(%24) loc(#loc406)
        } body {
          cir.scope {
            %21 = cir.const #cir.int<0> : !s32i loc(#loc275)
            %22 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc276)
            %23 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc277)
            %24 = cir.ptr_stride(%22 : !cir.ptr<!s32i>, %23 : !u64i), !cir.ptr<!s32i> loc(#loc278)
            cir.store %21, %24 : !s32i, !cir.ptr<!s32i> loc(#loc408)
          } loc(#loc407)
          cir.yield loc(#loc269)
        } step {
          %21 = cir.load %4 : !cir.ptr<!u64i>, !u64i loc(#loc279)
          %22 = cir.unary(inc, %21) : !u64i, !u64i loc(#loc280)
          cir.store %22, %4 : !u64i, !cir.ptr<!u64i> loc(#loc409)
          cir.yield loc(#loc404)
        } loc(#loc404)
      } loc(#loc404)
      %14 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc281)
      %15 = cir.const #cir.int<0> : !s32i loc(#loc282)
      %16 = cir.ptr_stride(%14 : !cir.ptr<!s32i>, %15 : !s32i), !cir.ptr<!s32i> loc(#loc283)
      %17 = cir.load %16 : !cir.ptr<!s32i>, !s32i loc(#loc281)
      cir.call @printIntLine(%17) : (!s32i) -> () loc(#loc284)
      %18 = cir.load %5 : !cir.ptr<!cir.ptr<!s32i>>, !cir.ptr<!s32i> loc(#loc285)
      cir.delete.array %18 : <!s32i> loc(#loc285)
    } loc(#loc395)
    cir.return loc(#loc239)
  } loc(#loc388)
  cir.func @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_064goodEv() extra(#fn_attr1) {
    cir.call @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06L8goodG2B1Ev() : () -> () loc(#loc288)
    cir.call @_ZN64CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06L8goodG2B2Ev() : () -> () loc(#loc289)
    cir.return loc(#loc287)
  } loc(#loc410)
} loc(#loc)
#loc = loc("/workspaces/juliet-c/testcases/CWE680_Integer_Overflow_to_Buffer_Overflow/CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":0:0)
#loc1 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:1)
#loc2 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":102:62)
#loc3 = loc("/usr/include/netinet/in.h":402:1)
#loc4 = loc("/usr/include/netinet/in.h":403:40)
#loc5 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":112:1)
#loc6 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":113:6)
#loc7 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:1)
#loc8 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":296:39)
#loc9 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":306:1)
#loc10 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":307:38)
#loc11 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:1)
#loc12 = loc("/usr/include/x86_64-linux-gnu/sys/socket.h":145:68)
#loc13 = loc("/usr/include/stdlib.h":105:1)
#loc14 = loc("/usr/include/stdlib.h":106:33)
#loc15 = loc("/usr/include/unistd.h":358:1)
#loc16 = loc("/usr/include/unistd.h":358:27)
#loc17 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":128:20)
#loc18 = loc("/usr/lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/new":129:41)
#loc19 = loc("../../testcasesupport/std_testcase_io.h":18:1)
#loc20 = loc("../../testcasesupport/std_testcase_io.h":18:33)
#loc21 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":51:1)
#loc22 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":141:1)
#loc23 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":53:5)
#loc24 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":53:9)
#loc25 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":55:13)
#loc26 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":55:12)
#loc27 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":55:5)
#loc28 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":56:5)
#loc29 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":127:5)
#loc30 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":56:8)
#loc31 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":56:27)
#loc32 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":57:5)
#loc33 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":58:9)
#loc34 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":126:9)
#loc35 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":63:13)
#loc36 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":63:17)
#loc37 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":64:13)
#loc38 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":64:32)
#loc39 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":65:13)
#loc40 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":65:35)
#loc41 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":66:13)
#loc42 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":66:35)
#loc43 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":67:13)
#loc44 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":67:45)
#loc45 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":68:13)
#loc46 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":111:21)
#loc47 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":69:13)
#loc48 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":110:13)
#loc49 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":78:39)
#loc50 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":78:48)
#loc51 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":78:61)
#loc52 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":78:32)
#loc53 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":78:17)
#loc54 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":78:72)
#loc55 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":79:17)
#loc56 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":82:17)
#loc57 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":79:21)
#loc58 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":79:37)
#loc59 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":80:17)
#loc60 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":81:21)
#loc61 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":83:24)
#loc62 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":83:25)
#loc63 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":83:34)
#loc64 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":83:37)
#loc65 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":83:51)
#loc66 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":83:17)
#loc67 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":83:52)
#loc68 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":84:38)
#loc69 = loc("/usr/include/netinet/in.h":249:5)
#loc70 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":84:17)
#loc71 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":85:43)
#loc72 = loc("/usr/include/netinet/in.h":251:20)
#loc73 = loc("/usr/include/netinet/in.h":33:15)
#loc74 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":85:17)
#loc75 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":86:42)
#loc76 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":86:36)
#loc77 = loc("/usr/include/netinet/in.h":250:15)
#loc78 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":86:17)
#loc79 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":86:50)
#loc80 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":87:17)
#loc81 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":90:17)
#loc82 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":87:26)
#loc83 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":87:58)
#loc84 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":87:59)
#loc85 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":87:68)
#loc86 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":87:82)
#loc87 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":87:21)
#loc88 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":87:88)
#loc89 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":88:17)
#loc90 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":89:21)
#loc91 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":91:17)
#loc92 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":94:17)
#loc93 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":91:28)
#loc94 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":91:42)
#loc95 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":91:21)
#loc96 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":91:61)
#loc97 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":92:17)
#loc98 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":93:21)
#loc99 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":95:39)
#loc100 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":95:53)
#loc101 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":95:59)
#loc102 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":95:32)
#loc103 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":95:17)
#loc104 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":95:63)
#loc105 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":96:17)
#loc106 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":99:17)
#loc107 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":96:21)
#loc108 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":96:37)
#loc109 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":97:17)
#loc110 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":98:21)
#loc111 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":101:35)
#loc112 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":101:49)
#loc113 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":101:62)
#loc114 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":101:80)
#loc115 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":101:83)
#loc116 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":101:30)
#loc117 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":101:17)
#loc118 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":101:84)
#loc119 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":102:17)
#loc120 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":105:17)
#loc121 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":102:21)
#loc122 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":102:35)
#loc123 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":102:48)
#loc124 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":102:51)
#loc125 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":102:65)
#loc126 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":103:17)
#loc127 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":104:21)
#loc128 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":107:43)
#loc129 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":107:29)
#loc130 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":107:17)
#loc131 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":109:29)
#loc132 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":109:24)
#loc133 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":109:17)
#loc134 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":109:40)
#loc135 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":111:20)
#loc136 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":112:13)
#loc137 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":115:13)
#loc138 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":112:17)
#loc139 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":112:33)
#loc140 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":113:13)
#loc141 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":114:30)
#loc142 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":114:17)
#loc143 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":116:13)
#loc144 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":119:13)
#loc145 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":116:17)
#loc146 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":116:33)
#loc147 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":117:13)
#loc148 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":118:30)
#loc149 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":118:17)
#loc150 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":128:5)
#loc151 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":140:5)
#loc152 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":129:9)
#loc153 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":129:16)
#loc154 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":129:26)
#loc155 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":130:9)
#loc156 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":130:14)
#loc157 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":132:21)
#loc158 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":132:28)
#loc159 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":132:38)
#loc160 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":132:9)
#loc161 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":133:37)
#loc162 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":51:6)
#loc163 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":133:28)
#loc164 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":133:46)
#loc165 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":133:9)
#loc166 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":134:9)
#loc167 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":137:9)
#loc168 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":134:18)
#loc169 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":134:14)
#loc170 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":134:21)
#loc171 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":134:33)
#loc172 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":135:9)
#loc173 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":136:29)
#loc174 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":136:13)
#loc175 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":136:24)
#loc176 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":136:25)
#loc177 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":134:40)
#loc178 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":134:39)
#loc179 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":138:22)
#loc180 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":138:33)
#loc181 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":138:34)
#loc182 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":138:9)
#loc183 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":139:19)
#loc184 = loc("../../testcasesupport/std_testcase_io.h":14:1)
#loc185 = loc("../../testcasesupport/std_testcase_io.h":14:33)
#loc186 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":156:19)
#loc187 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":148:1)
#loc188 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":176:1)
#loc189 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":150:5)
#loc190 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":150:9)
#loc191 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":152:13)
#loc192 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":152:12)
#loc193 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":152:5)
#loc194 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":153:5)
#loc195 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":162:5)
#loc196 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":153:8)
#loc197 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":153:27)
#loc198 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":154:5)
#loc199 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":157:5)
#loc200 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":159:5)
#loc201 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":156:9)
#loc202 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":161:16)
#loc203 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":161:9)
#loc204 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":163:5)
#loc205 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":175:5)
#loc206 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":164:9)
#loc207 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":164:16)
#loc208 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":164:26)
#loc209 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":165:9)
#loc210 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":165:14)
#loc211 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":167:21)
#loc212 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":167:28)
#loc213 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":167:38)
#loc214 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":167:9)
#loc215 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":168:37)
#loc216 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":148:13)
#loc217 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":168:28)
#loc218 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":168:46)
#loc219 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":168:9)
#loc220 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":169:9)
#loc221 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":172:9)
#loc222 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":169:18)
#loc223 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":169:14)
#loc224 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":169:21)
#loc225 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":169:33)
#loc226 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":170:9)
#loc227 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":171:29)
#loc228 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":171:13)
#loc229 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":171:24)
#loc230 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":171:25)
#loc231 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":169:40)
#loc232 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":169:39)
#loc233 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":173:22)
#loc234 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":173:33)
#loc235 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":173:34)
#loc236 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":173:9)
#loc237 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":174:19)
#loc238 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":179:1)
#loc239 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":202:1)
#loc240 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":181:5)
#loc241 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":181:9)
#loc242 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":183:13)
#loc243 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":183:12)
#loc244 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":183:5)
#loc245 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":184:5)
#loc246 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":188:5)
#loc247 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":184:8)
#loc248 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":184:27)
#loc249 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":185:5)
#loc250 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":187:16)
#loc251 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":187:9)
#loc252 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":189:5)
#loc253 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":201:5)
#loc254 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":190:9)
#loc255 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":190:16)
#loc256 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":190:26)
#loc257 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":191:9)
#loc258 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":191:14)
#loc259 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":193:21)
#loc260 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":193:28)
#loc261 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":193:38)
#loc262 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":193:9)
#loc263 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":194:37)
#loc264 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":179:13)
#loc265 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":194:28)
#loc266 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":194:46)
#loc267 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":194:9)
#loc268 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":195:9)
#loc269 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":198:9)
#loc270 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":195:18)
#loc271 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":195:14)
#loc272 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":195:21)
#loc273 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":195:33)
#loc274 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":196:9)
#loc275 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":197:29)
#loc276 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":197:13)
#loc277 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":197:24)
#loc278 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":197:25)
#loc279 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":195:40)
#loc280 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":195:39)
#loc281 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":199:22)
#loc282 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":199:33)
#loc283 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":199:34)
#loc284 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":199:9)
#loc285 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":200:19)
#loc286 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":204:1)
#loc287 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":208:1)
#loc288 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":206:5)
#loc289 = loc("CWE680_Integer_Overflow_to_Buffer_Overflow__new_listen_socket_06.cpp":207:5)
#loc290 = loc(fused[#loc1, #loc2])
#loc291 = loc(fused[#loc3, #loc4])
#loc292 = loc(fused[#loc5, #loc6])
#loc293 = loc(fused[#loc7, #loc8])
#loc294 = loc(fused[#loc9, #loc10])
#loc295 = loc(fused[#loc11, #loc12])
#loc296 = loc(fused[#loc13, #loc14])
#loc297 = loc(fused[#loc15, #loc16])
#loc298 = loc(fused[#loc17, #loc18])
#loc299 = loc(fused[#loc19, #loc20])
#loc300 = loc(fused[#loc21, #loc22])
#loc301 = loc(fused[#loc23, #loc24])
#loc302 = loc(fused[#loc27, #loc25])
#loc303 = loc(fused[#loc28, #loc29])
#loc304 = loc(fused[#loc30, #loc31])
#loc305 = loc(fused[#loc32, #loc29])
#loc306 = loc(fused[#loc33, #loc34])
#loc307 = loc(fused[#loc35, #loc36])
#loc308 = loc(fused[#loc37, #loc38])
#loc309 = loc(fused[#loc39, #loc40])
#loc310 = loc(fused[#loc41, #loc42])
#loc311 = loc(fused[#loc43, #loc44])
#loc312 = loc(fused[#loc45, #loc46])
#loc313 = loc(fused[#loc47, #loc48])
#loc314 = loc(fused[#loc53, #loc54])
#loc315 = loc(fused[#loc55, #loc56])
#loc316 = loc(fused[#loc57, #loc58])
#loc317 = loc(fused[#loc59, #loc56])
#loc318 = loc(fused[#loc61, #loc62])
#loc319 = loc(fused[#loc64, #loc65])
#loc320 = loc(fused[#loc66, #loc67])
#loc321 = loc(fused[#loc70, #loc68])
#loc322 = loc(fused[#loc74, #loc71])
#loc323 = loc(fused[#loc78, #loc79])
#loc324 = loc(fused[#loc80, #loc81])
#loc325 = loc(fused[#loc83, #loc84])
#loc326 = loc(fused[#loc85, #loc86])
#loc327 = loc(fused[#loc87, #loc88])
#loc328 = loc(fused[#loc89, #loc81])
#loc329 = loc(fused[#loc91, #loc92])
#loc330 = loc(fused[#loc95, #loc96])
#loc331 = loc(fused[#loc97, #loc92])
#loc332 = loc(fused[#loc103, #loc104])
#loc333 = loc(fused[#loc105, #loc106])
#loc334 = loc(fused[#loc107, #loc108])
#loc335 = loc(fused[#loc109, #loc106])
#loc336 = loc(fused[#loc113, #loc114])
#loc337 = loc(fused[#loc117, #loc118])
#loc338 = loc(fused[#loc119, #loc120])
#loc339 = loc(fused[#loc121, #loc122])
#loc340 = loc(fused[#loc124, #loc125])
#loc341 = loc(fused[#loc126, #loc120])
#loc342 = loc(fused[#loc130, #loc128])
#loc343 = loc(fused[#loc133, #loc134])
#loc344 = loc(fused[#loc136, #loc137])
#loc345 = loc(fused[#loc138, #loc139])
#loc346 = loc(fused[#loc140, #loc137])
#loc347 = loc(fused[#loc143, #loc144])
#loc348 = loc(fused[#loc145, #loc146])
#loc349 = loc(fused[#loc147, #loc144])
#loc350 = loc(fused[#loc150, #loc151])
#loc351 = loc(fused[#loc152, #loc153])
#loc352 = loc(fused[#loc152, #loc154])
#loc353 = loc(fused[#loc155, #loc156])
#loc354 = loc(fused[#loc158, #loc159])
#loc355 = loc(fused[#loc157, #loc159])
#loc356 = loc(fused[#loc160, #loc159])
#loc357 = loc(fused[#loc163, #loc164])
#loc358 = loc(fused[#loc165, #loc164])
#loc359 = loc(fused[#loc166, #loc167])
#loc360 = loc(fused[#loc169, #loc168])
#loc361 = loc(fused[#loc170, #loc171])
#loc362 = loc(fused[#loc172, #loc167])
#loc363 = loc(fused[#loc174, #loc173])
#loc364 = loc(fused[#loc178, #loc177])
#loc365 = loc(fused[#loc184, #loc185])
#loc366 = loc(fused[#loc187, #loc188])
#loc367 = loc(fused[#loc189, #loc190])
#loc368 = loc(fused[#loc193, #loc191])
#loc369 = loc(fused[#loc194, #loc195])
#loc370 = loc(fused[#loc196, #loc197])
#loc371 = loc(fused[#loc198, #loc199, #loc200, #loc195])
#loc372 = loc(fused[#loc203, #loc202])
#loc373 = loc(fused[#loc204, #loc205])
#loc374 = loc(fused[#loc206, #loc207])
#loc375 = loc(fused[#loc206, #loc208])
#loc376 = loc(fused[#loc209, #loc210])
#loc377 = loc(fused[#loc212, #loc213])
#loc378 = loc(fused[#loc211, #loc213])
#loc379 = loc(fused[#loc214, #loc213])
#loc380 = loc(fused[#loc217, #loc218])
#loc381 = loc(fused[#loc219, #loc218])
#loc382 = loc(fused[#loc220, #loc221])
#loc383 = loc(fused[#loc223, #loc222])
#loc384 = loc(fused[#loc224, #loc225])
#loc385 = loc(fused[#loc226, #loc221])
#loc386 = loc(fused[#loc228, #loc227])
#loc387 = loc(fused[#loc232, #loc231])
#loc388 = loc(fused[#loc238, #loc239])
#loc389 = loc(fused[#loc240, #loc241])
#loc390 = loc(fused[#loc244, #loc242])
#loc391 = loc(fused[#loc245, #loc246])
#loc392 = loc(fused[#loc247, #loc248])
#loc393 = loc(fused[#loc249, #loc246])
#loc394 = loc(fused[#loc251, #loc250])
#loc395 = loc(fused[#loc252, #loc253])
#loc396 = loc(fused[#loc254, #loc255])
#loc397 = loc(fused[#loc254, #loc256])
#loc398 = loc(fused[#loc257, #loc258])
#loc399 = loc(fused[#loc260, #loc261])
#loc400 = loc(fused[#loc259, #loc261])
#loc401 = loc(fused[#loc262, #loc261])
#loc402 = loc(fused[#loc265, #loc266])
#loc403 = loc(fused[#loc267, #loc266])
#loc404 = loc(fused[#loc268, #loc269])
#loc405 = loc(fused[#loc271, #loc270])
#loc406 = loc(fused[#loc272, #loc273])
#loc407 = loc(fused[#loc274, #loc269])
#loc408 = loc(fused[#loc276, #loc275])
#loc409 = loc(fused[#loc280, #loc279])
#loc410 = loc(fused[#loc286, #loc287])
